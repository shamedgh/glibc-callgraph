
;; Function calc_sizes (calc_sizes, funcdef_no=62, decl_uid=10026, cgraph_uid=62, symbol_order=76)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 11 failed.
Forwarding edge 9->10 to 19 failed.
Forwarding edge 11->12 to 21 failed.
Edge 13->12 redirected to 21
Forwarding edge 15->16 to 21 failed.
Redirecting jump 102 from 12 to 21.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 11 failed.
Forwarding edge 9->10 to 19 failed.
Forwarding edge 11->12 to 21 failed.
Deleted label in block 12.
Forwarding edge 15->16 to 21 failed.


;;
;; Full RTL generated for this function:
;;
(note 45 0 50 NOTE_INSN_DELETED)
(note 50 45 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 46 50 47 2 (set (reg/v/f:DI 153 [ argp ])
        (reg:DI 5 di [ argp ])) argp-parse.c:455 -1
     (nil))
(insn 47 46 48 2 (set (reg/v/f:DI 154 [ szs ])
        (reg:DI 4 si [ szs ])) argp-parse.c:455 -1
     (nil))
(note 48 47 52 2 NOTE_INSN_FUNCTION_BEG)
(insn 52 48 53 2 (set (reg/v/f:DI 135 [ child ])
        (mem/f:DI (plus:DI (reg/v/f:DI 153 [ argp ])
                (const_int 32 [0x20])) [2 argp_9(D)->children+0 S8 A64])) argp-parse.c:456 -1
     (nil))
(insn 53 52 54 2 (set (reg/v/f:DI 131 [ opt ])
        (mem/f:DI (reg/v/f:DI 153 [ argp ]) [2 argp_9(D)->options+0 S8 A64])) argp-parse.c:457 -1
     (nil))
(insn 54 53 55 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ opt ])
            (const_int 0 [0]))) argp-parse.c:459 -1
     (nil))
(jump_insn 55 54 56 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) argp-parse.c:459 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 110)
(note 56 55 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 153 [ argp ])
                    (const_int 8 [0x8])) [2 argp_9(D)->parser+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:459 -1
     (nil))
(jump_insn 58 57 61 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) argp-parse.c:459 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 105)
(note 61 58 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 61 60 5 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
(barrier 60 59 113)
(code_label 113 60 62 6 10 "" [2 uses])
(note 62 113 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 6 (parallel [
            (set (reg/v/f:DI 131 [ opt ])
                (plus:DI (reg/v/f:DI 131 [ opt ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:465 -1
     (nil))
(insn 64 63 65 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 131 [ opt ])
                    (const_int -40 [0xffffffffffffffd8])) [3 MEM[base: opt_18, offset: -40B]+0 S4 A32])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 65 64 66 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 116)
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 131 [ opt ])
                    (const_int -48 [0xffffffffffffffd0])) [2 MEM[base: opt_18, offset: -48B]+0 S8 A64])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 68 67 69 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 116)
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 131 [ opt ])
                    (const_int -16 [0xfffffffffffffff0])) [2 MEM[base: opt_18, offset: -16B]+0 S8 A64])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 71 70 72 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 116)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 131 [ opt ])
                    (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: opt_18, offset: -8B]+0 S4 A32])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 74 73 77 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 121)
(note 77 74 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 75 77 76 10 (set (pc)
        (label_ref 116)) argp.h:582 -1
     (nil)
 -> 116)
(barrier 76 75 78)
(code_label 78 76 79 11 4 "" [3 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ child ])
            (const_int 0 [0]))) argp-parse.c:472 -1
     (nil))
(jump_insn 81 80 82 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) argp-parse.c:472 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 85)
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 83 82 84 12 (set (pc)
        (label_ref 132)) argp-parse.c:478 -1
     (nil)
 -> 132)
(barrier 84 83 85)
(code_label 85 84 86 13 7 "" [1 uses])
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 89 13 (set (reg/f:DI 134 [ D.10912 ])
        (mem/f:DI (reg/v/f:DI 135 [ child ]) [2 child_10->argp+0 S8 A64])) argp-parse.c:473 -1
     (nil))
(insn 89 87 90 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ D.10912 ])
            (const_int 0 [0]))) argp-parse.c:473 -1
     (nil))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 132)
            (pc))) argp-parse.c:473 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 132)
(note 91 90 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(code_label 99 91 92 15 9 "" [1 uses])
(note 92 99 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (parallel [
            (set (reg/v/f:DI 135 [ child ])
                (plus:DI (reg/v/f:DI 135 [ child ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:475 -1
     (nil))
(insn 94 93 95 15 (set (reg:DI 4 si)
        (reg/v/f:DI 154 [ szs ])) argp-parse.c:475 -1
     (nil))
(insn 95 94 96 15 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.10912 ])) argp-parse.c:475 -1
     (nil))
(call_insn 96 95 97 15 (call (mem:QI (symbol_ref:DI ("calc_sizes") [flags 0x3]  <function_decl 0x2afe074051b0 calc_sizes>) [0 calc_sizes S1 A8])
        (const_int 0 [0])) argp-parse.c:475 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calc_sizes") [flags 0x3]  <function_decl 0x2afe074051b0 calc_sizes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 97 96 98 15 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                        (const_int 24 [0x18])) [8 szs_13(D)->num_child_inputs+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                            (const_int 24 [0x18])) [8 szs_13(D)->num_child_inputs+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:476 -1
     (nil))
(insn 98 97 100 15 (set (reg/f:DI 134 [ D.10912 ])
        (mem/f:DI (reg/v/f:DI 135 [ child ]) [2 MEM[base: child_32, offset: 0B]+0 S8 A64])) argp-parse.c:473 -1
     (nil))
(insn 100 98 101 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ D.10912 ])
            (const_int 0 [0]))) argp-parse.c:473 -1
     (nil))
(jump_insn 101 100 104 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) argp-parse.c:473 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 99)
(note 104 101 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 104 103 16 (set (pc)
        (label_ref:DI 132)) 654 {jump}
     (nil)
 -> 132)
(barrier 103 102 105)
(code_label 105 103 106 17 3 "" [1 uses])
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 17 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                        (const_int 16 [0x10])) [8 szs_13(D)->num_groups+0 S8 A128])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                            (const_int 16 [0x10])) [8 szs_13(D)->num_groups+0 S8 A128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:461 -1
     (nil))
(jump_insn 108 107 109 17 (set (pc)
        (label_ref 78)) argp-parse.c:461 -1
     (nil)
 -> 78)
(barrier 109 108 110)
(code_label 110 109 111 18 2 "" [1 uses])
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 49 18 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                        (const_int 16 [0x10])) [8 szs_13(D)->num_groups+0 S8 A128])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                            (const_int 16 [0x10])) [8 szs_13(D)->num_groups+0 S8 A128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:461 -1
     (nil))
(insn 49 112 114 18 (set (reg/v:SI 132 [ num_opts ])
        (const_int 0 [0])) argp-parse.c:461 -1
     (nil))
(jump_insn 114 49 115 18 (set (pc)
        (label_ref 113)) argp-parse.c:461 -1
     (nil)
 -> 113)
(barrier 115 114 116)
(code_label 116 115 117 19 5 "" [4 uses])
(note 117 116 118 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 19 (parallel [
            (set (reg/v:SI 132 [ num_opts ])
                (plus:SI (reg/v:SI 132 [ num_opts ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:466 -1
     (nil))
(jump_insn 119 118 120 19 (set (pc)
        (label_ref 113)) argp-parse.c:466 -1
     (nil)
 -> 113)
(barrier 120 119 121)
(code_label 121 120 122 20 6 "" [1 uses])
(note 122 121 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 20 (set (reg:SI 155)
        (reg/v:SI 132 [ num_opts ])) argp-parse.c:467 -1
     (nil))
(insn 124 123 125 20 (parallel [
            (set (reg:SI 156)
                (ashift:SI (reg:SI 155)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:467 -1
     (nil))
(insn 125 124 126 20 (parallel [
            (set (reg:SI 157 [ D.10913 ])
                (plus:SI (reg:SI 156)
                    (reg/v:SI 132 [ num_opts ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:467 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 132 [ num_opts ])
            (const_int 3 [0x3]))
        (nil)))
(insn 126 125 127 20 (set (reg:DI 158 [ D.10914 ])
        (sign_extend:DI (reg:SI 157 [ D.10913 ]))) argp-parse.c:467 -1
     (nil))
(insn 127 126 128 20 (parallel [
            (set (mem:DI (reg/v/f:DI 154 [ szs ]) [8 szs_13(D)->short_len+0 S8 A128])
                (plus:DI (mem:DI (reg/v/f:DI 154 [ szs ]) [8 szs_13(D)->short_len+0 S8 A128])
                    (reg:DI 158 [ D.10914 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:467 -1
     (nil))
(insn 128 127 129 20 (set (reg:DI 159 [ D.10914 ])
        (sign_extend:DI (reg/v:SI 132 [ num_opts ]))) argp-parse.c:468 -1
     (nil))
(insn 129 128 130 20 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                        (const_int 8 [0x8])) [8 szs_13(D)->long_len+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 154 [ szs ])
                            (const_int 8 [0x8])) [8 szs_13(D)->long_len+0 S8 A64])
                    (reg:DI 159 [ D.10914 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:468 -1
     (nil))
(jump_insn 130 129 131 20 (set (pc)
        (label_ref 78)) argp-parse.c:468 -1
     (nil)
 -> 78)
(barrier 131 130 132)
(code_label 132 131 133 21 1 "" [3 uses])
(note 133 132 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

;; Function argp_default_parser (argp_default_parser, funcdef_no=56, decl_uid=9920, cgraph_uid=56, symbol_order=67)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 2->15 redirected to 19
Edge 11->13 redirected to 20
Purged edges from bb 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 24 failed.
Forwarding edge 8->9 to 24 failed.
Forwarding edge 22->23 to 16 failed.
Removing jump 120.
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 24 failed.
Forwarding edge 8->9 to 24 failed.
Forwarding edge 22->23 to 16 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v:SI 103 [ key ])
        (reg:SI 5 di [ key ])) argp-parse.c:112 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 104 [ arg ])
        (reg:DI 4 si [ arg ])) argp-parse.c:112 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 105 [ state ])
        (reg:DI 1 dx [ state ])) argp-parse.c:112 -1
     (nil))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 5 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ key ])
            (const_int -3 [0xfffffffffffffffd]))) argp-parse.c:113 -1
     (nil))
(jump_insn 17 16 132 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) argp-parse.c:113 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 40)
(note 132 17 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 132 19 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 103 [ key ])
            (const_int -3 [0xfffffffffffffffd]))) argp-parse.c:113 -1
     (nil))
(jump_insn 19 18 133 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) argp-parse.c:113 -1
     (int_list:REG_BR_PROB 6250 (nil))
 -> 24)
(note 133 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 133 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ key ])
            (const_int -4 [0xfffffffffffffffc]))) argp-parse.c:113 -1
     (nil))
(jump_insn 21 20 134 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) argp-parse.c:113 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 85)
(note 134 21 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 22 134 23 6 (set (pc)
        (label_ref:DI 127)) argp-parse.c:113 654 {jump}
     (nil)
 -> 127)
(barrier 23 22 24)
(code_label 24 23 135 7 22 "" [1 uses])
(note 135 24 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 135 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ key ])
            (const_int -2 [0xfffffffffffffffe]))) argp-parse.c:113 -1
     (nil))
(jump_insn 26 25 136 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) argp-parse.c:113 -1
     (int_list:REG_BR_PROB 4000 (nil))
 -> 49)
(note 136 26 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 136 28 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ key ])
            (const_int 63 [0x3f]))) argp-parse.c:113 -1
     (nil))
(jump_insn 28 27 137 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) argp-parse.c:113 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 31)
(note 137 28 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 29 137 30 9 (set (pc)
        (label_ref:DI 127)) argp-parse.c:113 654 {jump}
     (nil)
 -> 127)
(barrier 30 29 31)
(code_label 31 30 32 10 25 "" [1 uses])
(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 10 (set (reg:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 80 [0x50])) [2 state_8(D)->out_stream+0 S8 A64])) argp-parse.c:116 -1
     (nil))
(insn 34 33 35 10 (set (reg:SI 1 dx)
        (const_int 634 [0x27a])) argp-parse.c:116 -1
     (nil))
(insn 35 34 36 10 (set (reg:DI 4 si)
        (reg:DI 106)) argp-parse.c:116 -1
     (nil))
(insn 36 35 37 10 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ state ])) argp-parse.c:116 -1
     (nil))
(call_insn 37 36 11 10 (call (mem:QI (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>) [0 __argp_state_help S1 A8])
        (const_int 0 [0])) argp-parse.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 37 38 10 (set (reg:SI 88 [ D.10922 ])
        (const_int 0 [0])) argp-parse.c:158 -1
     (nil))
(jump_insn 38 11 39 10 (set (pc)
        (label_ref 117)) argp-parse.c:117 -1
     (nil)
 -> 117)
(barrier 39 38 40)
(code_label 40 39 41 11 21 "" [1 uses])
(note 41 40 42 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 11 (set (reg:DI 107)
        (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 80 [0x50])) [2 state_8(D)->out_stream+0 S8 A64])) argp-parse.c:119 -1
     (nil))
(insn 43 42 44 11 (set (reg:SI 1 dx)
        (const_int 513 [0x201])) argp-parse.c:119 -1
     (nil))
(insn 44 43 45 11 (set (reg:DI 4 si)
        (reg:DI 107)) argp-parse.c:119 -1
     (nil))
(insn 45 44 46 11 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ state ])) argp-parse.c:119 -1
     (nil))
(call_insn 46 45 10 11 (call (mem:QI (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>) [0 __argp_state_help S1 A8])
        (const_int 0 [0])) argp-parse.c:119 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 10 46 47 11 (set (reg:SI 88 [ D.10922 ])
        (const_int 0 [0])) argp-parse.c:158 -1
     (nil))
(jump_insn 47 10 48 11 (set (pc)
        (label_ref 117)) argp-parse.c:121 -1
     (nil)
 -> 117)
(barrier 48 47 49)
(code_label 49 48 50 12 24 "" [1 uses])
(note 50 49 51 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 12 (set (reg/f:DI 108)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("program_invocation_name") [flags 0x40]  <var_decl 0x2afe0738fb40 program_invocation_name>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:125 -1
     (nil))
(insn 52 51 53 12 (set (mem/f/c:DI (reg/f:DI 108) [2 program_invocation_name+0 S8 A64])
        (reg/v/f:DI 104 [ arg ])) argp-parse.c:125 -1
     (nil))
(insn 53 52 54 12 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) argp-parse.c:132 -1
     (nil))
(insn 54 53 55 12 (set (reg:DI 5 di)
        (reg/v/f:DI 104 [ arg ])) argp-parse.c:132 -1
     (nil))
(call_insn/i 55 54 56 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2afe06e0e438 strrchr>) [0 __builtin_strrchr S1 A8])
            (const_int 0 [0]))) argp-parse.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2afe06e0e438 strrchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 56 55 57 12 (set (reg/f:DI 92 [ D.10923 ])
        (reg:DI 0 ax)) argp-parse.c:132 -1
     (nil))
(insn 57 56 58 12 (set (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 64 [0x40])) [2 state_8(D)->name+0 S8 A64])
        (reg/f:DI 92 [ D.10923 ])) argp-parse.c:132 -1
     (nil))
(insn 58 57 59 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.10923 ])
            (const_int 0 [0]))) argp-parse.c:133 -1
     (nil))
(jump_insn 59 58 60 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) argp-parse.c:133 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 65)
(note 60 59 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 13 (parallel [
            (set (reg/f:DI 89 [ D.10923 ])
                (plus:DI (reg/f:DI 92 [ D.10923 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:134 -1
     (nil))
(insn 62 61 63 13 (set (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 64 [0x40])) [2 state_8(D)->name+0 S8 A64])
        (reg/f:DI 89 [ D.10923 ])) argp-parse.c:134 -1
     (nil))
(jump_insn 63 62 64 13 (set (pc)
        (label_ref 68)) -1
     (nil)
 -> 68)
(barrier 64 63 65)
(code_label 65 64 66 14 26 "" [1 uses])
(note 66 65 67 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 6 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 64 [0x40])) [2 state_8(D)->name+0 S8 A64])
        (reg/v/f:DI 104 [ arg ])) argp-parse.c:136 -1
     (nil))
(insn 6 67 68 14 (set (reg/f:DI 89 [ D.10923 ])
        (reg/v/f:DI 104 [ arg ])) argp-parse.c:136 -1
     (nil))
(code_label 68 6 69 15 27 "" [1 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 15 (set (reg/f:DI 109)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("program_invocation_short_name") [flags 0x40]  <var_decl 0x2afe0738fbd0 program_invocation_short_name>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:139 -1
     (nil))
(insn 71 70 72 15 (set (mem/f/c:DI (reg/f:DI 109) [2 program_invocation_short_name+0 S8 A64])
        (reg/f:DI 89 [ D.10923 ])) argp-parse.c:139 -1
     (nil))
(insn 72 71 73 15 (set (reg:SI 111)
        (mem:SI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 28 [0x1c])) [3 state_8(D)->flags+0 S4 A32])) argp-parse.c:142 -1
     (nil))
(insn 73 72 74 15 (parallel [
            (set (reg:SI 110 [ D.10925 ])
                (and:SI (reg:SI 111)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:142 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 105 [ state ])
                    (const_int 28 [0x1c])) [3 state_8(D)->flags+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 74 73 75 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 110 [ D.10925 ])
            (const_int 1 [0x1]))) argp-parse.c:142 -1
     (nil))
(jump_insn 75 74 102 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) argp-parse.c:142 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 79)
(code_label 102 75 76 16 30 "" [2 uses])
(note 76 102 12 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 12 76 77 16 (set (reg:SI 88 [ D.10922 ])
        (const_int 0 [0])) argp-parse.c:158 -1
     (nil))
(jump_insn 77 12 78 16 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 78 77 79)
(code_label 79 78 80 17 28 "" [1 uses])
(note 80 79 81 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 17 (set (reg/f:DI 95 [ D.10926 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 105 [ state ])
                (const_int 16 [0x10])) [2 state_8(D)->argv+0 S8 A64])) argp-parse.c:145 -1
     (nil))
(insn 82 81 13 17 (set (mem/f:DI (reg/f:DI 95 [ D.10926 ]) [2 *_24+0 S8 A64])
        (reg/v/f:DI 104 [ arg ])) argp-parse.c:145 -1
     (nil))
(insn 13 82 83 17 (set (reg:SI 88 [ D.10922 ])
        (const_int 0 [0])) argp-parse.c:158 -1
     (nil))
(jump_insn 83 13 84 17 (set (pc)
        (label_ref 117)) argp-parse.c:145 -1
     (nil)
 -> 117)
(barrier 84 83 85)
(code_label 85 84 86 18 23 "" [1 uses])
(note 86 85 87 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ arg ])
            (const_int 0 [0]))) argp-parse.c:150 -1
     (nil))
(jump_insn 88 87 89 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) argp-parse.c:150 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 131)
(note 89 88 8 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 8 89 128 19 (set (reg/f:DI 87 [ D.10921 ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2afe07528cf0 *.LC1>)) argp-parse.c:150 -1
     (nil))
(jump_insn 128 8 129 19 (set (pc)
        (label_ref 90)) -1
     (nil)
 -> 90)
(barrier 129 128 131)
(code_label 131 129 130 20 33 "" [1 uses])
(note 130 131 7 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 7 130 90 20 (set (reg/f:DI 87 [ D.10921 ])
        (reg/v/f:DI 104 [ arg ])) -1
     (nil))
(code_label 90 7 91 21 29 "" [1 uses])
(note 91 90 92 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 21 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 93 92 94 21 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 94 93 95 21 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.10921 ])) ../stdlib/stdlib.h:241 -1
     (nil))
(call_insn 95 94 96 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strtol") [flags 0x43]  <function_decl 0x2afe06ee15e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:241 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strtol") [flags 0x43]  <function_decl 0x2afe06ee15e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 96 95 97 21 (set (reg:DI 98 [ D.10928 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 97 96 98 21 (set (reg:SI 99 [ D.10927 ])
        (subreg:SI (reg:DI 98 [ D.10928 ]) 0)) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 98 97 99 21 (set (mem/v/c:SI (symbol_ref:DI ("_argp_hang") [flags 0x2]  <var_decl 0x2afe0738f3f0 _argp_hang>) [3 _argp_hang+0 S4 A32])
        (reg:SI 99 [ D.10927 ])) argp-parse.c:150 -1
     (nil))
(insn 99 98 100 21 (set (reg:SI 101 [ D.10927 ])
        (mem/v/c:SI (symbol_ref:DI ("_argp_hang") [flags 0x2]  <var_decl 0x2afe0738f3f0 _argp_hang>) [3 _argp_hang+0 S4 A32])) argp-parse.c:151 -1
     (nil))
(insn 100 99 101 21 (parallel [
            (set (reg:SI 100 [ D.10927 ])
                (plus:SI (reg:SI 101 [ D.10927 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:151 -1
     (nil))
(insn 101 100 103 21 (set (mem/v/c:SI (symbol_ref:DI ("_argp_hang") [flags 0x2]  <var_decl 0x2afe0738f3f0 _argp_hang>) [3 _argp_hang+0 S4 A32])
        (reg:SI 100 [ D.10927 ])) argp-parse.c:151 -1
     (nil))
(insn 103 101 104 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 101 [ D.10927 ])
            (const_int 0 [0]))) argp-parse.c:151 -1
     (nil))
(jump_insn 104 103 111 21 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) argp-parse.c:151 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 102)
(code_label 111 104 105 22 31 "" [1 uses])
(note 105 111 106 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 22 (set (reg:SI 5 di)
        (const_int 1 [0x1])) argp-parse.c:152 -1
     (nil))
(call_insn 107 106 108 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__sleep") [flags 0x41]  <function_decl 0x2afe070b7870 __sleep>) [0 __sleep S1 A8])
            (const_int 0 [0]))) argp-parse.c:152 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__sleep") [flags 0x41]  <function_decl 0x2afe070b7870 __sleep>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 108 107 109 22 (set (reg:SI 96 [ D.10927 ])
        (mem/v/c:SI (symbol_ref:DI ("_argp_hang") [flags 0x2]  <var_decl 0x2afe0738f3f0 _argp_hang>) [3 _argp_hang+0 S4 A32])) argp-parse.c:151 -1
     (nil))
(insn 109 108 110 22 (parallel [
            (set (reg:SI 97 [ D.10927 ])
                (plus:SI (reg:SI 96 [ D.10927 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:151 -1
     (nil))
(insn 110 109 112 22 (set (mem/v/c:SI (symbol_ref:DI ("_argp_hang") [flags 0x2]  <var_decl 0x2afe0738f3f0 _argp_hang>) [3 _argp_hang+0 S4 A32])
        (reg:SI 97 [ D.10927 ])) argp-parse.c:151 -1
     (nil))
(insn 112 110 113 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 96 [ D.10927 ])
            (const_int 0 [0]))) argp-parse.c:151 -1
     (nil))
(jump_insn 113 112 116 22 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) argp-parse.c:151 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 111)
(note 116 113 114 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 114 116 115 23 (set (pc)
        (label_ref 102)) -1
     (nil)
 -> 102)
(barrier 115 114 127)
(code_label 127 115 126 24 32 "" [2 uses])
(note 126 127 9 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 9 126 117 24 (set (reg:SI 88 [ D.10922 ])
        (const_int 7 [0x7])) argp-parse.c:156 -1
     (nil))
(code_label 117 9 118 25 20 "" [4 uses])
(note 118 117 119 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 123 25 (set (reg:SI 102 [ <retval> ])
        (reg:SI 88 [ D.10922 ])) -1
     (nil))
(insn 123 119 124 25 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) argp-parse.c:159 -1
     (nil))
(insn 124 123 0 25 (use (reg/i:SI 0 ax)) argp-parse.c:159 -1
     (nil))

;; Function convert_options (convert_options, funcdef_no=60, decl_uid=9997, cgraph_uid=60, symbol_order=74)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47
Edge 22->24 redirected to 55
Edge 35->39 redirected to 56
Edge 47->6 redirected to 57


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 34 failed.
Forwarding edge 13->14 to 19 failed.
Forwarding edge 15->16 to 18 failed.
Edge 19->10 redirected to 34
Forwarding edge 23->24 to 34 failed.
Redirecting jump 114 from 10 to 34.
Forwarding edge 53->54 to 18 failed.
Redirecting jump 259 from 16 to 18.
Forwarding edge 55->56 to 7 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 34 failed.
Deleted label in block 10.
Forwarding edge 13->14 to 19 failed.
Forwarding edge 15->16 to 18 failed.
Deleted label in block 16.
Forwarding edge 23->24 to 34 failed.
Forwarding edge 53->54 to 18 failed.
Forwarding edge 55->56 to 7 failed.


;;
;; Full RTL generated for this function:
;;
(note 2 0 21 NOTE_INSN_DELETED)
(note 21 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 21 4 2 (set (reg/v/f:DI 167 [ argp ])
        (reg:DI 5 di [ argp ])) argp-parse.c:316 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 168 [ parent ])
        (reg:DI 4 si [ parent ])) argp-parse.c:316 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 169 [ parent_index ])
        (reg:SI 1 dx [ parent_index ])) argp-parse.c:316 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 170 [ group ])
        (reg:DI 2 cx [ group ])) argp-parse.c:316 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 171 [ cvt ])
        (reg:DI 37 r8 [ cvt ])) argp-parse.c:316 -1
     (nil))
(note 8 7 23 2 NOTE_INSN_FUNCTION_BEG)
(insn 23 8 24 2 (set (reg/v/f:DI 91 [ real ])
        (mem/f:DI (reg/v/f:DI 167 [ argp ]) [2 argp_24(D)->options+0 S8 A64])) argp-parse.c:318 -1
     (nil))
(insn 24 23 25 2 (set (reg/v/f:DI 95 [ children ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ argp ])
                (const_int 32 [0x20])) [2 argp_24(D)->children+0 S8 A64])) argp-parse.c:319 -1
     (nil))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ real ])
            (const_int 0 [0]))) argp-parse.c:321 -1
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) argp-parse.c:321 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 30)
(note 27 26 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 27 28 4 (set (reg/v/f:DI 89 [ real ])
        (reg/v/f:DI 91 [ real ])) -1
     (nil))
(jump_insn 28 9 29 4 (set (pc)
        (label_ref 167)) -1
     (nil)
 -> 167)
(barrier 29 28 30)
(code_label 30 29 31 5 44 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 90 [ D.10959 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ argp ])
                (const_int 8 [0x8])) [2 argp_24(D)->parser+0 S8 A64])) argp-parse.c:321 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.10959 ])
            (const_int 0 [0]))) argp-parse.c:321 -1
     (nil))
(jump_insn 34 33 37 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) argp-parse.c:321 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 183)
(note 37 34 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 37 19 6 (set (reg/v/f:DI 143 [ group ])
        (reg/v/f:DI 170 [ group ])) -1
     (nil))
(insn 19 18 35 6 (set (reg/v/f:DI 88 [ parent ])
        (const_int 0 [0])) argp-parse.c:400 -1
     (nil))
(jump_insn 35 19 36 6 (set (pc)
        (label_ref 220)) -1
     (nil)
 -> 220)
(barrier 36 35 269)
(code_label 269 36 38 7 70 "" [1 uses])
(note 38 269 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 285 7 (set (reg:SI 152 [ D.10960 ])
        (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                (const_int 24 [0x18])) [3 real_6->flags+0 S4 A64])) -1
     (nil))
(jump_insn 285 39 286 7 (set (pc)
        (label_ref 265)) -1
     (nil)
 -> 265)
(barrier 286 285 288)
(code_label 288 286 287 8 73 "" [1 uses])
(note 287 288 10 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 10 287 11 8 (set (reg:SI 152 [ D.10960 ])
        (reg:SI 97 [ D.10960 ])) -1
     (nil))
(insn 11 10 265 8 (set (reg/v/f:DI 89 [ real ])
        (reg/v/f:DI 91 [ real ])) -1
     (nil))
(code_label 265 11 40 9 69 "" [1 uses])
(note 40 265 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (parallel [
            (set (reg:SI 93 [ D.10960 ])
                (and:SI (reg:SI 152 [ D.10960 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:332 -1
     (nil))
(insn 42 41 43 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:332 -1
     (nil))
(jump_insn 43 42 44 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) argp-parse.c:332 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 47)
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 45 44 46 10 (set (pc)
        (label_ref 164)) -1
     (nil)
 -> 164)
(barrier 46 45 47)
(code_label 47 46 48 11 48 "" [1 uses])
(note 48 47 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 11 (parallel [
            (set (reg:SI 172 [ D.10960 ])
                (and:SI (reg:SI 97 [ D.10960 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) argp.h:570 -1
     (nil))
(insn 50 49 51 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ D.10960 ])
            (const_int 0 [0]))) argp.h:570 -1
     (nil))
(jump_insn 51 50 52 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) argp.h:570 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 89)
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (parallel [
            (set (reg:SI 173 [ D.10961 ])
                (plus:SI (reg:SI 153 [ D.10960 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp.h:575 -1
     (nil))
(insn 54 53 55 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 173 [ D.10961 ])
            (const_int 254 [0xfe]))) argp.h:575 -1
     (nil))
(jump_insn 55 54 56 12 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) argp.h:575 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 89)
(note 56 55 57 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 13 (set (reg:DI 174)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_B") [flags 0x60]  <var_decl 0x2afe0738f900 __libc_tsd_CTYPE_B>)
                    ] UNSPEC_GOTNTPOFF)) [16  S8 A8])) argp.h:575 -1
     (nil))
(insn 58 57 59 13 (set (reg:DI 175 [ D.10967 ])
        (sign_extend:DI (reg:SI 153 [ D.10960 ]))) argp.h:575 -1
     (nil))
(insn 59 58 60 13 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 174)) [2 MEM[(const short unsigned int * *)&__libc_tsd_CTYPE_B]+0 S8 A64])) argp.h:575 -1
     (nil))
(insn 60 59 61 13 (set (reg:HI 178)
        (mem:HI (plus:DI (mult:DI (reg:DI 175 [ D.10967 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 176)) [4 *_124+0 S2 A16])) argp.h:575 -1
     (nil))
(insn 61 60 62 13 (parallel [
            (set (reg:HI 177 [ D.10974 ])
                (and:HI (reg:HI 178)
                    (const_int 16384 [0x4000])))
            (clobber (reg:CC 17 flags))
        ]) argp.h:575 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 175 [ D.10967 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 176)) [4 *_124+0 S2 A16])
            (const_int 16384 [0x4000]))
        (nil)))
(insn 62 61 63 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 177 [ D.10974 ])
            (const_int 0 [0]))) argp.h:575 -1
     (nil))
(jump_insn 63 62 66 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) argp.h:575 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 249)
(note 66 63 64 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 64 66 65 14 (set (pc)
        (label_ref 89)) argp.h:575 -1
     (nil)
 -> 89)
(barrier 65 64 255)
(code_label 255 65 67 15 67 "" [1 uses])
(note 67 255 68 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 15 (set (reg/f:DI 103 [ D.10963 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])) argp-parse.c:341 -1
     (nil))
(insn 69 68 70 15 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 103 [ D.10963 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:341 -1
     (nil))
(insn 70 69 71 15 (set (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])
        (reg:DI 179)) argp-parse.c:341 -1
     (nil))
(insn 71 70 72 15 (set (mem:QI (reg/f:DI 103 [ D.10963 ]) [0 *_45+0 S1 A8])
        (const_int 58 [0x3a])) argp-parse.c:341 -1
     (nil))
(insn 72 71 73 15 (set (reg:SI 181)
        (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                (const_int 24 [0x18])) [3 real_5->flags+0 S4 A64])) argp-parse.c:342 -1
     (nil))
(insn 73 72 74 15 (parallel [
            (set (reg:SI 180 [ D.10960 ])
                (and:SI (reg:SI 181)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:342 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                    (const_int 24 [0x18])) [3 real_5->flags+0 S4 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 74 73 75 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 180 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:342 -1
     (nil))
(jump_insn 75 74 76 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) argp-parse.c:342 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 79)
(note 76 75 77 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 77 76 78 16 (set (pc)
        (label_ref 85)) -1
     (nil)
 -> 85)
(barrier 78 77 79)
(code_label 79 78 80 17 52 "" [1 uses])
(note 80 79 81 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 17 (set (reg/f:DI 107 [ D.10963 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])) argp-parse.c:343 -1
     (nil))
(insn 82 81 83 17 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg/f:DI 107 [ D.10963 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:343 -1
     (nil))
(insn 83 82 84 17 (set (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])
        (reg:DI 182)) argp-parse.c:343 -1
     (nil))
(insn 84 83 85 17 (set (mem:QI (reg/f:DI 107 [ D.10963 ]) [0 *_51+0 S1 A8])
        (const_int 58 [0x3a])) argp-parse.c:343 -1
     (nil))
(code_label 85 84 86 18 53 "" [2 uses])
(note 86 85 87 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 18 (set (reg/f:DI 109 [ D.10963 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])) argp-parse.c:345 -1
     (nil))
(insn 88 87 89 18 (set (mem:QI (reg/f:DI 109 [ D.10963 ]) [0 *_55+0 S1 A8])
        (const_int 0 [0])) argp-parse.c:345 -1
     (nil))
(code_label 89 88 90 19 50 "" [3 uses])
(note 90 89 91 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 93 19 (set (reg/f:DI 110 [ D.10965 ])
        (mem/f:DI (reg/v/f:DI 91 [ real ]) [2 MEM[base: real_8, offset: 0B]+0 S8 A64])) argp-parse.c:348 -1
     (nil))
(insn 93 91 94 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 110 [ D.10965 ])
            (const_int 0 [0]))) argp-parse.c:348 -1
     (nil))
(jump_insn 94 93 95 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) argp-parse.c:348 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 164)
(note 95 94 96 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 20 (set (reg/f:DI 111 [ D.10966 ])
        (mem/f:DI (reg/v/f:DI 171 [ cvt ]) [2 cvt_38(D)->parser+0 S8 A128])) argp-parse.c:349 -1
     (nil))
(insn 97 96 98 20 (set (reg/v/f:DI 112 [ long_options ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ D.10966 ])
                (const_int 16 [0x10])) [2 _58->long_opts+0 S8 A64])) argp-parse.c:349 -1
     (nil))
(insn 98 97 99 20 (set (reg/f:DI 165 [ D.10965 ])
        (mem/f:DI (reg/v/f:DI 112 [ long_options ]) [2 long_options_59->name+0 S8 A64])) argp-parse.c:203 -1
     (nil))
(insn 99 98 100 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 165 [ D.10965 ])
            (const_int 0 [0]))) argp-parse.c:203 -1
     (nil))
(jump_insn 100 99 101 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) argp-parse.c:203 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 124)
(note 101 100 12 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 12 101 121 21 (set (reg/v/f:DI 164 [ long_options ])
        (reg/v/f:DI 112 [ long_options ])) argp-parse.c:203 -1
     (nil))
(code_label 121 12 102 22 57 "" [1 uses])
(note 102 121 103 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 22 (set (reg:DI 4 si)
        (reg/f:DI 110 [ D.10965 ])) argp-parse.c:204 -1
     (nil))
(insn 104 103 105 22 (set (reg:DI 5 di)
        (reg/f:DI 165 [ D.10965 ])) argp-parse.c:204 -1
     (nil))
(call_insn/i 105 104 106 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2afe06e0a000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) argp-parse.c:204 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2afe06e0a000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 22 (set (reg:SI 158 [ D.10960 ])
        (reg:SI 0 ax)) argp-parse.c:204 -1
     (nil))
(insn 107 106 108 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:204 -1
     (nil))
(jump_insn 108 107 109 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) argp-parse.c:204 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 117)
(note 109 108 110 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 23 (parallel [
            (set (reg:DI 183 [ D.10969 ])
                (minus:DI (reg/v/f:DI 164 [ long_options ])
                    (reg/v/f:DI 112 [ long_options ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:349 -1
     (nil))
(insn 111 110 112 23 (parallel [
            (set (reg:DI 185 [ D.10969 ])
                (ashiftrt:DI (reg:DI 183 [ D.10969 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:349 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 183 [ D.10969 ])
            (const_int 32 [0x20]))
        (nil)))
(insn 112 111 113 23 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (subreg:SI (reg:DI 185 [ D.10969 ]) 0)
            (const_int 0 [0]))) argp-parse.c:349 -1
     (nil))
(jump_insn 113 112 116 23 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) argp-parse.c:349 -1
     (int_list:REG_BR_PROB 1839 (nil))
 -> 124)
(note 116 113 114 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 114 116 115 24 (set (pc)
        (label_ref:DI 164)) 654 {jump}
     (nil)
 -> 164)
(barrier 115 114 117)
(code_label 117 115 118 25 56 "" [1 uses])
(note 118 117 119 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 25 (parallel [
            (set (reg/v/f:DI 164 [ long_options ])
                (plus:DI (reg/v/f:DI 164 [ long_options ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:207 -1
     (nil))
(insn 120 119 122 25 (set (reg/f:DI 165 [ D.10965 ])
        (mem/f:DI (reg/v/f:DI 164 [ long_options ]) [2 MEM[base: long_options_141, offset: 0B]+0 S8 A64])) argp-parse.c:203 -1
     (nil))
(insn 122 120 123 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 165 [ D.10965 ])
            (const_int 0 [0]))) argp-parse.c:203 -1
     (nil))
(jump_insn 123 122 124 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) argp-parse.c:203 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 121)
(code_label 124 123 125 26 55 "" [2 uses])
(note 125 124 126 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 26 (set (reg/f:DI 115 [ D.10968 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 16 [0x10])) [2 cvt_38(D)->long_end+0 S8 A128])) argp-parse.c:352 -1
     (nil))
(insn 127 126 128 26 (set (mem/f:DI (reg/f:DI 115 [ D.10968 ]) [2 _62->name+0 S8 A64])
        (reg/f:DI 110 [ D.10965 ])) argp-parse.c:352 -1
     (nil))
(insn 128 127 129 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 89 [ real ])
                    (const_int 16 [0x10])) [2 real_5->arg+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:358 -1
     (nil))
(jump_insn 129 128 130 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) argp-parse.c:358 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 136)
(note 130 129 131 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 27 (set (reg:SI 187)
        (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                (const_int 24 [0x18])) [3 real_5->flags+0 S4 A64])) argp-parse.c:357 -1
     (nil))
(insn 132 131 133 27 (parallel [
            (set (reg:SI 186 [ D.10960 ])
                (and:SI (reg:SI 187)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:357 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                    (const_int 24 [0x18])) [3 real_5->flags+0 S4 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 133 132 134 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:357 -1
     (nil))
(jump_insn 134 133 135 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) argp-parse.c:357 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 280)
(note 135 134 14 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 14 135 277 28 (set (reg:SI 93 [ D.10960 ])
        (const_int 2 [0x2])) argp-parse.c:357 -1
     (nil))
(jump_insn 277 14 278 28 (set (pc)
        (label_ref 136)) -1
     (nil)
 -> 136)
(barrier 278 277 280)
(code_label 280 278 279 29 71 "" [1 uses])
(note 279 280 13 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 13 279 136 29 (set (reg:SI 93 [ D.10960 ])
        (const_int 1 [0x1])) argp-parse.c:357 -1
     (nil))
(code_label 136 13 137 30 58 "" [2 uses])
(note 137 136 138 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 30 (set (mem:SI (plus:DI (reg/f:DI 115 [ D.10968 ])
                (const_int 8 [0x8])) [3 _62->has_arg+0 S4 A64])
        (reg:SI 93 [ D.10960 ])) argp-parse.c:353 -1
     (nil))
(insn 139 138 140 30 (set (mem/f:DI (plus:DI (reg/f:DI 115 [ D.10968 ])
                (const_int 16 [0x10])) [2 _62->flag+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:359 -1
     (nil))
(insn 140 139 141 30 (set (reg:SI 119 [ D.10960 ])
        (mem:SI (plus:DI (reg/v/f:DI 91 [ real ])
                (const_int 8 [0x8])) [3 MEM[base: real_8, offset: 8B]+0 S4 A32])) argp-parse.c:367 -1
     (nil))
(insn 141 140 142 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:366 -1
     (nil))
(jump_insn 142 141 143 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) argp-parse.c:366 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 147)
(note 143 142 144 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 31 (parallel [
            (set (reg:SI 94 [ D.10961 ])
                (and:SI (reg:SI 119 [ D.10960 ])
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(jump_insn 145 144 146 31 (set (pc)
        (label_ref 151)) -1
     (nil)
 -> 151)
(barrier 146 145 147)
(code_label 147 146 148 32 59 "" [1 uses])
(note 148 147 149 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 32 (set (reg:SI 188)
        (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                (const_int 8 [0x8])) [3 real_5->key+0 S4 A64])) argp-parse.c:366 -1
     (nil))
(insn 150 149 151 32 (parallel [
            (set (reg:SI 94 [ D.10961 ])
                (and:SI (reg:SI 188)
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 89 [ real ])
                    (const_int 8 [0x8])) [3 real_5->key+0 S4 A64])
            (const_int 16777215 [0xffffff]))
        (nil)))
(code_label 151 150 152 33 60 "" [1 uses])
(note 152 151 153 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 33 (parallel [
            (set (reg:DI 189 [ D.10969 ])
                (minus:DI (reg/v/f:DI 170 [ group ])
                    (mem/f:DI (plus:DI (reg/f:DI 111 [ D.10966 ])
                            (const_int 80 [0x50])) [2 _58->groups+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(insn 154 153 155 33 (parallel [
            (set (reg:DI 191)
                (ashiftrt:DI (reg:DI 189 [ D.10969 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(insn 155 154 156 33 (set (reg:DI 193)
        (const_int -8198552921648689607 [0x8e38e38e38e38e39])) argp-parse.c:366 -1
     (nil))
(insn 156 155 157 33 (parallel [
            (set (reg:DI 192 [ D.10969 ])
                (mult:DI (reg:DI 191)
                    (reg:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 189 [ D.10969 ])
            (const_int 72 [0x48]))
        (nil)))
(insn 157 156 158 33 (parallel [
            (set (reg:SI 194 [ D.10961 ])
                (plus:SI (subreg:SI (reg:DI 192 [ D.10969 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(insn 158 157 159 33 (parallel [
            (set (reg:SI 195 [ D.10961 ])
                (ashift:SI (reg:SI 194 [ D.10961 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(insn 159 158 160 33 (parallel [
            (set (reg:SI 196)
                (plus:SI (reg:SI 195 [ D.10961 ])
                    (reg:SI 94 [ D.10961 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:366 -1
     (nil))
(insn 160 159 161 33 (set (mem:SI (plus:DI (reg/f:DI 115 [ D.10968 ])
                (const_int 24 [0x18])) [3 _62->val+0 S4 A64])
        (reg:SI 196)) argp-parse.c:366 -1
     (nil))
(insn 161 160 162 33 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 115 [ D.10968 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:371 -1
     (nil))
(insn 162 161 163 33 (set (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 16 [0x10])) [2 cvt_38(D)->long_end+0 S8 A128])
        (reg:DI 197)) argp-parse.c:371 -1
     (nil))
(insn 163 162 164 33 (set (mem/f:DI (plus:DI (reg/f:DI 115 [ D.10968 ])
                (const_int 32 [0x20])) [2 MEM[(struct option *)_62 + 32B].name+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:371 -1
     (nil))
(code_label 164 163 165 34 49 "" [3 uses])
(note 165 164 166 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 34 (parallel [
            (set (reg/v/f:DI 91 [ real ])
                (plus:DI (reg/v/f:DI 91 [ real ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:326 -1
     (nil))
(code_label 167 166 168 35 45 "" [1 uses])
(note 168 167 169 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 35 (set (reg:SI 153 [ D.10960 ])
        (mem:SI (plus:DI (reg/v/f:DI 91 [ real ])
                (const_int 8 [0x8])) [3 MEM[base: real_8, offset: 8B]+0 S4 A32])) argp.h:582 -1
     (nil))
(insn 170 169 171 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ D.10960 ])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 171 170 172 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 262)
(note 172 171 173 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 91 [ real ]) [2 MEM[base: real_8, offset: 0B]+0 S8 A64])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 174 173 175 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 262)
(note 175 174 176 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 91 [ real ])
                    (const_int 32 [0x20])) [2 MEM[base: real_8, offset: 32B]+0 S8 A64])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 177 176 178 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 262)
(note 178 177 179 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 91 [ real ])
                    (const_int 40 [0x28])) [3 MEM[base: real_8, offset: 40B]+0 S4 A32])
            (const_int 0 [0]))) argp.h:582 -1
     (nil))
(jump_insn 180 179 181 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) argp.h:582 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 262)
(note 181 180 182 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 39 (set (reg/f:DI 90 [ D.10959 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 167 [ argp ])
                (const_int 8 [0x8])) [2 argp_24(D)->parser+0 S8 A64])) -1
     (nil))
(code_label 183 182 184 40 46 "" [1 uses])
(note 184 183 185 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 40 (set (mem/f:DI (reg/v/f:DI 170 [ group ]) [2 group_28(D)->parser+0 S8 A64])
        (reg/f:DI 90 [ D.10959 ])) argp-parse.c:376 -1
     (nil))
(insn 186 185 187 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 8 [0x8])) [2 group_28(D)->argp+0 S8 A64])
        (reg/v/f:DI 167 [ argp ])) argp-parse.c:377 -1
     (nil))
(insn 187 186 188 40 (set (reg/f:DI 198)
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])) argp-parse.c:378 -1
     (nil))
(insn 188 187 189 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 16 [0x10])) [2 group_28(D)->short_end+0 S8 A64])
        (reg/f:DI 198)) argp-parse.c:378 -1
     (nil))
(insn 189 188 190 40 (set (mem:SI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 24 [0x18])) [3 group_28(D)->args_processed+0 S4 A64])
        (const_int 0 [0])) argp-parse.c:379 -1
     (nil))
(insn 190 189 191 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 32 [0x20])) [2 group_28(D)->parent+0 S8 A64])
        (reg/v/f:DI 168 [ parent ])) argp-parse.c:380 -1
     (nil))
(insn 191 190 192 40 (set (mem:SI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 40 [0x28])) [3 group_28(D)->parent_index+0 S4 A64])
        (reg/v:SI 169 [ parent_index ])) argp-parse.c:381 -1
     (nil))
(insn 192 191 193 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 48 [0x30])) [2 group_28(D)->input+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:382 -1
     (nil))
(insn 193 192 194 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 64 [0x40])) [2 group_28(D)->hook+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:383 -1
     (nil))
(insn 194 193 195 40 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 56 [0x38])) [2 group_28(D)->child_inputs+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:384 -1
     (nil))
(insn 195 194 196 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ children ])
            (const_int 0 [0]))) argp-parse.c:386 -1
     (nil))
(jump_insn 196 195 197 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) argp-parse.c:386 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 217)
(note 197 196 198 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 95 [ children ]) [2 children_26->argp+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:391 -1
     (nil))
(jump_insn 199 198 200 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 284)
            (pc))) argp-parse.c:391 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 284)
(note 200 199 15 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 15 200 204 42 (set (reg/v:SI 139 [ num_children ])
        (const_int 0 [0])) argp-parse.c:391 -1
     (nil))
(code_label 204 15 201 43 64 "" [1 uses])
(note 201 204 202 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 43 (parallel [
            (set (reg/v:SI 139 [ num_children ])
                (plus:SI (reg/v:SI 139 [ num_children ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:392 -1
     (nil))
(insn 203 202 205 43 (set (reg:DI 135 [ D.10967 ])
        (zero_extend:DI (reg/v:SI 139 [ num_children ]))) argp-parse.c:391 -1
     (nil))
(insn 205 203 206 43 (parallel [
            (set (reg:DI 199)
                (ashift:DI (reg:DI 135 [ D.10967 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:391 -1
     (nil))
(insn 206 205 207 43 (parallel [
            (set (reg/f:DI 200)
                (plus:DI (reg/v/f:DI 95 [ children ])
                    (reg:DI 199)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:391 -1
     (nil))
(insn 207 206 208 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 200) [2 _105->argp+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:391 -1
     (nil))
(jump_insn 208 207 209 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) argp-parse.c:391 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 204)
(note 209 208 210 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 281 44 (parallel [
            (set (reg:DI 114 [ D.10967 ])
                (ashift:DI (reg:DI 135 [ D.10967 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 281 210 282 44 (set (pc)
        (label_ref 211)) -1
     (nil)
 -> 211)
(barrier 282 281 284)
(code_label 284 282 283 45 72 "" [1 uses])
(note 283 284 16 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 16 283 211 45 (set (reg:DI 114 [ D.10967 ])
        (const_int 0 [0])) argp-parse.c:391 -1
     (nil))
(code_label 211 16 212 46 63 "" [1 uses])
(note 212 211 213 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 46 (set (reg/f:DI 140 [ D.10972 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 24 [0x18])) [2 cvt_38(D)->child_inputs_end+0 S8 A64])) argp-parse.c:393 -1
     (nil))
(insn 214 213 215 46 (set (mem/f:DI (plus:DI (reg/v/f:DI 170 [ group ])
                (const_int 56 [0x38])) [2 group_28(D)->child_inputs+0 S8 A64])
        (reg/f:DI 140 [ D.10972 ])) argp-parse.c:393 -1
     (nil))
(insn 215 214 216 46 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 140 [ D.10972 ])
                    (reg:DI 114 [ D.10967 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:394 -1
     (nil))
(insn 216 215 217 46 (set (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 24 [0x18])) [2 cvt_38(D)->child_inputs_end+0 S8 A64])
        (reg:DI 201)) argp-parse.c:394 -1
     (nil))
(code_label 217 216 218 47 62 "" [1 uses])
(note 218 217 219 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 17 47 (parallel [
            (set (reg/v/f:DI 143 [ group ])
                (plus:DI (reg/v/f:DI 170 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:397 -1
     (nil))
(insn 17 219 220 47 (set (reg/v/f:DI 88 [ parent ])
        (reg/v/f:DI 170 [ group ])) argp-parse.c:322 -1
     (nil))
(code_label 220 17 221 48 47 "" [1 uses])
(note 221 220 222 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ children ])
            (const_int 0 [0]))) argp-parse.c:402 -1
     (nil))
(jump_insn 223 222 224 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) argp-parse.c:402 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 244)
(note 224 223 225 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 49 (set (reg/f:DI 96 [ D.10962 ])
        (mem/f:DI (reg/v/f:DI 95 [ children ]) [2 children_26->argp+0 S8 A64])) argp-parse.c:405 -1
     (nil))
(insn 226 225 227 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.10962 ])
            (const_int 0 [0]))) argp-parse.c:405 -1
     (nil))
(jump_insn 227 226 228 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) argp-parse.c:405 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 244)
(note 228 227 20 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 20 228 241 50 (set (reg/v:SI 92 [ index ])
        (const_int 0 [0])) argp-parse.c:405 -1
     (nil))
(code_label 241 20 229 51 66 "" [1 uses])
(note 229 241 230 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 51 (parallel [
            (set (reg/v:SI 142 [ index ])
                (plus:SI (reg/v:SI 92 [ index ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:407 -1
     (nil))
(insn 231 230 232 51 (parallel [
            (set (reg/v/f:DI 95 [ children ])
                (plus:DI (reg/v/f:DI 95 [ children ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:407 -1
     (nil))
(insn 232 231 233 51 (set (reg:DI 37 r8)
        (reg/v/f:DI 171 [ cvt ])) argp-parse.c:406 -1
     (nil))
(insn 233 232 234 51 (set (reg:DI 2 cx)
        (reg/v/f:DI 143 [ group ])) argp-parse.c:406 -1
     (nil))
(insn 234 233 235 51 (set (reg:SI 1 dx)
        (reg/v:SI 92 [ index ])) argp-parse.c:406 -1
     (nil))
(insn 235 234 236 51 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ parent ])) argp-parse.c:406 -1
     (nil))
(insn 236 235 237 51 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.10962 ])) argp-parse.c:406 -1
     (nil))
(call_insn 237 236 238 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_options") [flags 0x3]  <function_decl 0x2afe073e5288 convert_options>) [0 convert_options S1 A8])
            (const_int 0 [0]))) argp-parse.c:406 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_options") [flags 0x3]  <function_decl 0x2afe073e5288 convert_options>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 238 237 239 51 (set (reg/v/f:DI 143 [ group ])
        (reg:DI 0 ax)) argp-parse.c:406 -1
     (nil))
(insn 239 238 240 51 (set (reg/f:DI 96 [ D.10962 ])
        (mem/f:DI (reg/v/f:DI 95 [ children ]) [2 MEM[base: children_116, offset: 0B]+0 S8 A64])) argp-parse.c:405 -1
     (nil))
(insn 240 239 242 51 (set (reg/v:SI 92 [ index ])
        (reg/v:SI 142 [ index ])) argp-parse.c:407 -1
     (nil))
(insn 242 240 243 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.10962 ])
            (const_int 0 [0]))) argp-parse.c:405 -1
     (nil))
(jump_insn 243 242 244 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) argp-parse.c:405 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 241)
(code_label 244 243 245 52 65 "" [2 uses])
(note 245 244 246 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 52 (set (reg:DI 166 [ <retval> ])
        (reg/v/f:DI 143 [ group ])) argp-parse.c:410 -1
     (nil))
(jump_insn 247 246 248 52 (set (pc)
        (label_ref 273)) argp-parse.c:410 -1
     (nil)
 -> 273)
(barrier 248 247 249)
(code_label 249 248 250 53 51 "" [1 uses])
(note 250 249 251 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 53 (set (reg/f:DI 99 [ D.10963 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])) argp-parse.c:338 -1
     (nil))
(insn 252 251 253 53 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 99 [ D.10963 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:338 -1
     (nil))
(insn 253 252 254 53 (set (mem/f:DI (plus:DI (reg/v/f:DI 171 [ cvt ])
                (const_int 8 [0x8])) [2 cvt_38(D)->short_end+0 S8 A64])
        (reg:DI 203)) argp-parse.c:338 -1
     (nil))
(insn 254 253 256 53 (set (mem:QI (reg/f:DI 99 [ D.10963 ]) [0 *_39+0 S1 A8])
        (subreg:QI (reg:SI 153 [ D.10960 ]) 0)) argp-parse.c:338 -1
     (nil))
(insn 256 254 257 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 89 [ real ])
                    (const_int 16 [0x10])) [2 real_5->arg+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:339 -1
     (nil))
(jump_insn 257 256 261 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) argp-parse.c:339 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 255)
(note 261 257 259 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 259 261 260 54 (set (pc)
        (label_ref:DI 85)) 654 {jump}
     (nil)
 -> 85)
(barrier 260 259 262)
(code_label 262 260 263 55 61 "" [4 uses])
(note 263 262 264 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 266 55 (set (reg:SI 97 [ D.10960 ])
        (mem:SI (plus:DI (reg/v/f:DI 91 [ real ])
                (const_int 24 [0x18])) [3 MEM[base: real_8, offset: 24B]+0 S4 A32])) argp-parse.c:328 -1
     (nil))
(insn 266 264 267 55 (parallel [
            (set (reg:SI 204 [ D.10960 ])
                (and:SI (reg:SI 97 [ D.10960 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:328 -1
     (nil))
(insn 267 266 268 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204 [ D.10960 ])
            (const_int 0 [0]))) argp-parse.c:328 -1
     (nil))
(jump_insn 268 267 272 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 288)
            (pc))) argp-parse.c:328 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 288)
(note 272 268 270 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(jump_insn 270 272 271 56 (set (pc)
        (label_ref 269)) -1
     (nil)
 -> 269)
(barrier 271 270 273)
(code_label 273 271 276 57 43 "" [1 uses])
(note 276 273 274 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 274 276 275 57 (set (reg/i:DI 0 ax)
        (reg:DI 166 [ <retval> ])) argp-parse.c:411 -1
     (nil))
(insn 275 274 0 57 (use (reg/i:DI 0 ax)) argp-parse.c:411 -1
     (nil))

;; Function argp_version_parser (argp_version_parser, funcdef_no=57, decl_uid=9936, cgraph_uid=57, symbol_order=70)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 2->10 redirected to 13
Edge 8->10 redirected to 14
Purged edges from bb 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 12 failed.
Forwarding edge 2->4 to 12 failed.
Removing jump 68.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 98 [ key ])
        (reg:SI 5 di [ key ])) argp-parse.c:173 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ arg ])
        (reg:DI 4 si [ arg ])) argp-parse.c:173 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 100 [ state ])
        (reg:DI 1 dx [ state ])) argp-parse.c:173 -1
     (nil))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 98 [ key ])
            (const_int 86 [0x56]))) argp-parse.c:174 -1
     (nil))
(jump_insn 11 10 80 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) argp-parse.c:174 -1
     (int_list:REG_BR_PROB 3300 (nil))
 -> 14)
(note 80 11 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 12 80 13 4 (set (pc)
        (label_ref:DI 75)) argp-parse.c:174 654 {jump}
     (nil)
 -> 75)
(barrier 13 12 14)
(code_label 14 13 15 5 104 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("argp_program_version_hook") [flags 0x40]  <var_decl 0x2afe0738fd80 argp_program_version_hook>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:177 -1
     (nil))
(insn 17 16 18 5 (set (reg/f:DI 88 [ D.10988 ])
        (mem/f/c:DI (reg/f:DI 101) [2 argp_program_version_hook+0 S8 A64])) argp-parse.c:177 -1
     (nil))
(insn 18 17 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.10988 ])
            (const_int 0 [0]))) argp-parse.c:177 -1
     (nil))
(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) argp-parse.c:177 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 27)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (set (reg:DI 102)
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 80 [0x50])) [2 state_7(D)->out_stream+0 S8 A64])) argp-parse.c:178 -1
     (nil))
(insn 22 21 23 6 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ state ])) argp-parse.c:178 -1
     (nil))
(insn 23 22 24 6 (set (reg:DI 5 di)
        (reg:DI 102)) argp-parse.c:178 -1
     (nil))
(call_insn 24 23 25 6 (call (mem:QI (reg/f:DI 88 [ D.10988 ]) [0 *_9 S1 A8])
        (const_int 0 [0])) argp-parse.c:178 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 25 24 26 6 (set (pc)
        (label_ref 55)) argp-parse.c:178 -1
     (nil)
 -> 55)
(barrier 26 25 27)
(code_label 27 26 28 7 105 "" [1 uses])
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg/f:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("argp_program_version") [flags 0x40]  <var_decl 0x2afe0738fcf0 argp_program_version>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:179 -1
     (nil))
(insn 30 29 31 7 (set (reg/f:DI 90 [ D.10990 ])
        (mem/f/c:DI (reg/f:DI 103) [2 argp_program_version+0 S8 A64])) argp-parse.c:179 -1
     (nil))
(insn 31 30 32 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.10990 ])
            (const_int 0 [0]))) argp-parse.c:179 -1
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) argp-parse.c:179 -1
     (int_list:REG_BR_PROB 1499 (nil))
 -> 42)
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 80 [0x50])) [2 state_7(D)->out_stream+0 S8 A64])) argp-parse.c:180 -1
     (nil))
(insn 35 34 36 8 (set (reg:DI 1 dx)
        (reg/f:DI 90 [ D.10990 ])) argp-parse.c:180 -1
     (nil))
(insn 36 35 37 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2afe0758d630 *.LC4>)) argp-parse.c:180 -1
     (nil))
(insn 37 36 38 8 (set (reg:DI 5 di)
        (reg:DI 104)) argp-parse.c:180 -1
     (nil))
(insn 38 37 39 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) argp-parse.c:180 -1
     (nil))
(call_insn 39 38 40 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_fprintf") [flags 0x43]  <function_decl 0x2afe06e0e948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) argp-parse.c:180 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_fprintf") [flags 0x43]  <function_decl 0x2afe06e0e948 fprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 40 39 41 8 (set (pc)
        (label_ref 55)) argp-parse.c:180 -1
     (nil)
 -> 55)
(barrier 41 40 42)
(code_label 42 41 43 9 107 "" [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (reg/f:DI 105)
        (mem/f:DI (reg/v/f:DI 100 [ state ]) [2 state_7(D)->root_argp+0 S8 A64])) argp-parse.c:182 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 106)
        (mem/f:DI (plus:DI (reg/f:DI 105)
                (const_int 48 [0x30])) [2 _13->argp_domain+0 S8 A64])) argp-parse.c:182 -1
     (nil))
(insn 46 45 47 9 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) argp-parse.c:182 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2afe07596000 *.LC5>)) argp-parse.c:182 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 5 di)
        (reg:DI 106)) argp-parse.c:182 -1
     (nil))
(call_insn 49 48 50 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) argp-parse.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 50 49 51 9 (set (reg/f:DI 94 [ D.10992 ])
        (reg:DI 0 ax)) argp-parse.c:182 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.10992 ])) argp-parse.c:182 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ state ])) argp-parse.c:182 -1
     (nil))
(insn 53 52 54 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) argp-parse.c:182 -1
     (nil))
(call_insn 54 53 55 9 (call (mem:QI (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>) [0 __argp_error S1 A8])
        (const_int 0 [0])) argp-parse.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 55 54 56 10 106 "" [2 uses])
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:SI 108)
        (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 28 [0x1c])) [3 state_7(D)->flags+0 S4 A32])) argp-parse.c:184 -1
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg:SI 107 [ D.10993 ])
                (and:SI (reg:SI 108)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:184 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 28 [0x1c])) [3 state_7(D)->flags+0 S4 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 59 58 60 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.10993 ])
            (const_int 0 [0]))) argp-parse.c:184 -1
     (nil))
(jump_insn 60 59 61 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 79)
            (pc))) argp-parse.c:184 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 79)
(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 11 (set (reg:SI 5 di)
        (const_int 0 [0])) argp-parse.c:185 -1
     (nil))
(call_insn 63 62 64 11 (call (mem:QI (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2afe06e26000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) argp-parse.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2afe06e26000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 64 63 75)
(code_label 75 64 74 12 108 "" [1 uses])
(note 74 75 6 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 6 74 76 12 (set (reg:SI 87 [ D.10987 ])
        (const_int 7 [0x7])) argp-parse.c:188 -1
     (nil))
(jump_insn 76 6 77 12 (set (pc)
        (label_ref 65)) -1
     (nil)
 -> 65)
(barrier 77 76 79)
(code_label 79 77 78 13 109 "" [1 uses])
(note 78 79 7 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 7 78 65 13 (set (reg:SI 87 [ D.10987 ])
        (const_int 0 [0])) argp-parse.c:184 -1
     (nil))
(code_label 65 7 66 14 103 "" [1 uses])
(note 66 65 67 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 71 14 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.10987 ])) -1
     (nil))
(insn 71 67 72 14 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) argp-parse.c:191 -1
     (nil))
(insn 72 71 0 14 (use (reg/i:SI 0 ax)) argp-parse.c:191 -1
     (nil))

;; Function __argp_input (__argp_input, funcdef_no=69, decl_uid=9655, cgraph_uid=70, symbol_order=93)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 14
Edge 3->9 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 43.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 94 [ argp ])
        (reg:DI 5 di [ argp ])) argp-parse.c:935 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ state ])
        (reg:DI 4 si [ state ])) argp-parse.c:935 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ state ])
            (const_int 0 [0]))) argp-parse.c:936 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) argp-parse.c:936 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 53)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/v/f:DI 88 [ parser ])
        (mem/f:DI (plus:DI (reg/v/f:DI 95 [ state ])
                (const_int 88 [0x58])) [2 state_3(D)->pstate+0 S8 A64])) argp-parse.c:939 -1
     (nil))
(insn 14 13 15 4 (set (reg/v/f:DI 89 [ group ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ parser ])
                (const_int 80 [0x50])) [2 parser_5->groups+0 S8 A64])) argp-parse.c:941 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91 [ D.10931 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ parser ])
                (const_int 88 [0x58])) [2 parser_5->egroup+0 S8 A64])) argp-parse.c:941 -1
     (nil))
(insn 16 15 17 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ group ])
            (reg/f:DI 91 [ D.10931 ]))) argp-parse.c:941 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) argp-parse.c:941 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 57)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ argp ])
            (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 8 [0x8])) [2 group_6->argp+0 S8 A64]))) argp-parse.c:942 -1
     (nil))
(jump_insn 20 19 23 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) argp-parse.c:942 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 27)
(note 23 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 21 23 22 6 (set (pc)
        (label_ref 32)) argp-parse.c:942 -1
     (nil)
 -> 32)
(barrier 22 21 37)
(code_label 37 22 24 7 364 "" [1 uses])
(note 24 37 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 8 [0x8])) [2 MEM[base: group_10, offset: 8B]+0 S8 A64])
            (reg/v/f:DI 94 [ argp ]))) argp-parse.c:942 -1
     (nil))
(jump_insn 26 25 27 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) argp-parse.c:942 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 34)
(code_label 27 26 28 8 361 "" [1 uses])
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg/f:DI 87 [ D.10929 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                (const_int 48 [0x30])) [2 group_16->input+0 S8 A64])) argp-parse.c:943 -1
     (nil))
(jump_insn 30 29 31 8 (set (pc)
        (label_ref 40)) argp-parse.c:943 -1
     (nil)
 -> 40)
(barrier 31 30 32)
(code_label 32 31 33 9 362 "" [1 uses])
(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 34 33 35 10 363 "" [1 uses])
(note 35 34 36 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 38 10 (parallel [
            (set (reg/v/f:DI 89 [ group ])
                (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:941 -1
     (nil))
(insn 38 36 39 10 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ group ])
            (reg/f:DI 91 [ D.10931 ]))) argp-parse.c:941 -1
     (nil))
(jump_insn 39 38 49 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) argp-parse.c:941 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 37)
(note 49 39 7 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 7 49 50 11 (set (reg/f:DI 87 [ D.10929 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(jump_insn 50 7 51 11 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
(barrier 51 50 53)
(code_label 53 51 52 12 365 "" [1 uses])
(note 52 53 6 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 6 52 54 12 (set (reg/f:DI 87 [ D.10929 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(jump_insn 54 6 55 12 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
(barrier 55 54 57)
(code_label 57 55 56 13 366 "" [1 uses])
(note 56 57 5 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 5 56 40 13 (set (reg/f:DI 87 [ D.10929 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(code_label 40 5 41 14 360 "" [3 uses])
(note 41 40 42 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 46 14 (set (reg:DI 93 [ <retval> ])
        (reg/f:DI 87 [ D.10929 ])) -1
     (nil))
(insn 46 42 47 14 (set (reg/i:DI 0 ax)
        (reg:DI 93 [ <retval> ])) argp-parse.c:947 -1
     (nil))
(insn 47 46 0 14 (use (reg/i:DI 0 ax)) argp-parse.c:947 -1
     (nil))

;; Function __argp_parse (__argp_parse, funcdef_no=68, decl_uid=9846, cgraph_uid=68, symbol_order=82)

Partition 0: size 216 align 16
	parser
Partition 2: size 32 align 16
	cvt
Partition 1: size 32 align 16
	szs

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183
Edge 3->5 redirected to 215
Edge 10->12 redirected to 216
Edge 12->152 redirected to 217
Edge 15->17 redirected to 218
Edge 63->181 redirected to 219
Edge 71->73 redirected to 220
Edge 141->175 redirected to 221
Edge 148->150 redirected to 222
Edge 161->119 redirected to 224
Edge 165->104 redirected to 225
Edge 171->142 redirected to 227
Edge 175->144 redirected to 229
Edge 183->119 redirected to 230
Purged non-fallthru edges from bb 235


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 35->36 to 185 failed.
Redirecting jump 339 from 187 to 185.
Forwarding edge 38->39 to 45 failed.
Edge 40->187 redirected to 185
Forwarding edge 40->41 to 38 failed.
Forwarding edge 40->41 to 38 failed.
Forwarding edge 71->72 to 93 failed.
Forwarding edge 86->87 to 116 failed.
Redirecting jump 642 from 225 to 53.
Redirecting jump 647 from 225 to 53.
Forwarding edge 95->96 to 101 failed.
Forwarding edge 99->100 to 196 failed.
Forwarding edge 102->103 to 107 failed.
Forwarding edge 105->106 to 196 failed.
Forwarding edge 116->117 to 154 failed.
Redirecting jump 816 from 232 to 154.
Forwarding edge 118->119 to 155 failed.
Forwarding edge 129->130 to 213 failed.
Edge 132->134 redirected to 135
Forwarding edge 133->134 to 135 failed.
Deleted label in block 134.
Forwarding edge 140->141 to 233 failed.
Forwarding edge 143->144 to 147 failed.
Edge 151->227 redirected to 156
Redirecting jump 986 from 227 to 156.
Edge 153->217 redirected to 218
Forwarding edge 170->171 to 173 failed.
Forwarding edge 174->175 to 177 failed.
Forwarding edge 181->182 to 184 failed.
Merging block 187 into block 186...
Merged blocks 186 and 187.
Merged 186 and 187 without moving.
Forwarding edge 189->190 to 73 failed.
Forwarding edge 192->193 to 104 failed.
Forwarding edge 196->197 to 157 failed.
Forwarding edge 198->199 to 148 failed.
Forwarding edge 200->201 to 218 failed.
Redirecting jump 1217 from 217 to 218.
Forwarding edge 202->203 to 38 failed.
Forwarding edge 204->205 to 189 failed.
Forwarding edge 206->207 to 154 failed.
Redirecting jump 1241 from 232 to 154.
Forwarding edge 209->210 to 200 failed.
Forwarding edge 211->212 to 235 failed.
Forwarding edge 213->214 to 143 failed.
Forwarding edge 215->216 to 200 failed.
deleting block 225
Merging block 227 into block 226...
Merged blocks 226 and 227.
Merged 226 and 227 without moving.
Forwarding edge 228->229 to 38 failed.
Merging block 232 into block 231...
Merged blocks 231 and 232.
Merged 231 and 232 without moving.
Forwarding edge 233->234 to 154 failed.
Forwarding edge 235->236 to 218 failed.
Redirecting jump 1352 from 217 to 218.


try_optimize_cfg iteration 2

Forwarding edge 35->36 to 185 failed.
Forwarding edge 38->39 to 45 failed.
Forwarding edge 40->41 to 38 failed.
Forwarding edge 71->72 to 93 failed.
Forwarding edge 86->87 to 116 failed.
Forwarding edge 95->96 to 101 failed.
Forwarding edge 99->100 to 196 failed.
Forwarding edge 102->103 to 107 failed.
Forwarding edge 105->106 to 196 failed.
Forwarding edge 116->117 to 154 failed.
Forwarding edge 118->119 to 155 failed.
Forwarding edge 129->130 to 213 failed.
Forwarding edge 133->134 to 135 failed.
Forwarding edge 140->141 to 233 failed.
Forwarding edge 143->144 to 147 failed.
Forwarding edge 170->171 to 173 failed.
Forwarding edge 174->175 to 177 failed.
Forwarding edge 181->182 to 184 failed.
Forwarding edge 189->190 to 73 failed.
Forwarding edge 192->193 to 104 failed.
Forwarding edge 196->197 to 157 failed.
Forwarding edge 198->199 to 148 failed.
Forwarding edge 200->201 to 218 failed.
Forwarding edge 202->203 to 38 failed.
Forwarding edge 204->205 to 189 failed.
Forwarding edge 206->207 to 154 failed.
Forwarding edge 209->210 to 200 failed.
Forwarding edge 211->212 to 235 failed.
Forwarding edge 213->214 to 143 failed.
Forwarding edge 215->216 to 200 failed.
deleting block 217
Forwarding edge 228->229 to 38 failed.
Forwarding edge 233->234 to 154 failed.
Forwarding edge 235->236 to 218 failed.


try_optimize_cfg iteration 3

Forwarding edge 35->36 to 185 failed.
Forwarding edge 38->39 to 45 failed.
Forwarding edge 40->41 to 38 failed.
Forwarding edge 71->72 to 93 failed.
Forwarding edge 86->87 to 116 failed.
Forwarding edge 95->96 to 101 failed.
Forwarding edge 99->100 to 196 failed.
Forwarding edge 102->103 to 107 failed.
Forwarding edge 105->106 to 196 failed.
Forwarding edge 116->117 to 154 failed.
Forwarding edge 118->119 to 155 failed.
Forwarding edge 129->130 to 213 failed.
Forwarding edge 133->134 to 135 failed.
Forwarding edge 140->141 to 233 failed.
Forwarding edge 143->144 to 147 failed.
Forwarding edge 170->171 to 173 failed.
Forwarding edge 174->175 to 177 failed.
Forwarding edge 181->182 to 184 failed.
Forwarding edge 189->190 to 73 failed.
Forwarding edge 192->193 to 104 failed.
Forwarding edge 196->197 to 157 failed.
Forwarding edge 198->199 to 148 failed.
Forwarding edge 200->201 to 218 failed.
Forwarding edge 202->203 to 38 failed.
Forwarding edge 204->205 to 189 failed.
Forwarding edge 206->207 to 154 failed.
Forwarding edge 209->210 to 200 failed.
Forwarding edge 211->212 to 235 failed.
Forwarding edge 213->214 to 143 failed.
Forwarding edge 215->216 to 200 failed.
Forwarding edge 228->229 to 38 failed.
Forwarding edge 233->234 to 154 failed.
Forwarding edge 235->236 to 218 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 45 NOTE_INSN_DELETED)
(note 45 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 45 3 2 (set (reg/v/f:DI 358 [ argp ])
        (reg:DI 5 di [ argp ])) argp-parse.c:883 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 359 [ argc ])
        (reg:SI 4 si [ argc ])) argp-parse.c:883 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 360 [ argv ])
        (reg:DI 1 dx [ argv ])) argp-parse.c:883 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 361 [ flags ])
        (reg:SI 2 cx [ flags ])) argp-parse.c:883 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 362 [ end_index ])
        (reg:DI 37 r8 [ end_index ])) argp-parse.c:883 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 363 [ input ])
        (reg:DI 38 r9 [ input ])) argp-parse.c:883 -1
     (nil))
(note 8 7 47 2 NOTE_INSN_FUNCTION_BEG)
(insn 47 8 48 2 (parallel [
            (set (reg:SI 364 [ D.11143 ])
                (and:SI (reg/v:SI 361 [ flags ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:891 -1
     (nil))
(insn 48 47 49 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 364 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:891 -1
     (nil))
(jump_insn 49 48 50 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) argp-parse.c:891 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 119)
(note 50 49 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 4 (parallel [
            (set (reg:DI 365)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:DI 366)
                (plus:DI (reg:DI 365)
                    (const_int 143 [0x8f])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:DI 368)
                (udiv:DI (reg:DI 366)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 369)
                (umod:DI (reg:DI 366)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg:DI 370)
                (mult:DI (reg:DI 368)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 370)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 56 55 57 4 (set (reg:DI 371)
        (reg/f:DI 83 virtual-stack-dynamic)) argp-parse.c:894 -1
     (nil))
(insn 57 56 58 4 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg:DI 371)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 58 57 59 4 (parallel [
            (set (reg:DI 373)
                (lshiftrt:DI (reg:DI 372)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 372)
            (const_int 16 [0x10]))
        (nil)))
(insn 59 58 60 4 (parallel [
            (set (reg/f:DI 374)
                (ashift:DI (reg:DI 373)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:894 -1
     (nil))
(insn 60 59 61 4 (set (reg/v/f:DI 92 [ child ])
        (reg/f:DI 374)) argp-parse.c:894 -1
     (nil))
(insn 61 60 62 4 (parallel [
            (set (reg:DI 375)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 62 61 63 4 (parallel [
            (set (reg:DI 376)
                (plus:DI (reg:DI 375)
                    (const_int 71 [0x47])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 63 62 64 4 (parallel [
            (set (reg:DI 378)
                (udiv:DI (reg:DI 376)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 379)
                (umod:DI (reg:DI 376)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 64 63 65 4 (parallel [
            (set (reg:DI 380)
                (mult:DI (reg:DI 378)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 65 64 66 4 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 380)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 66 65 67 4 (set (reg:DI 381)
        (reg/f:DI 83 virtual-stack-dynamic)) argp-parse.c:895 -1
     (nil))
(insn 67 66 68 4 (parallel [
            (set (reg:DI 382)
                (plus:DI (reg:DI 381)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 68 67 69 4 (parallel [
            (set (reg:DI 383)
                (lshiftrt:DI (reg:DI 382)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 382)
            (const_int 16 [0x10]))
        (nil)))
(insn 69 68 70 4 (parallel [
            (set (reg/f:DI 384)
                (ashift:DI (reg:DI 383)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:895 -1
     (nil))
(insn 70 69 71 4 (set (reg/v/f:DI 93 [ argp ])
        (reg/f:DI 384)) argp-parse.c:895 -1
     (nil))
(insn 71 70 72 4 (set (reg/f:DI 385)
        (reg/v/f:DI 93 [ argp ])) argp-parse.c:899 -1
     (nil))
(insn 72 71 73 4 (set (reg:DI 386)
        (const_int 0 [0])) argp-parse.c:899 -1
     (nil))
(insn 73 72 74 4 (set (reg:DI 387)
        (const_int 7 [0x7])) argp-parse.c:899 -1
     (nil))
(insn 74 73 75 4 (parallel [
            (set (reg:DI 387)
                (const_int 0 [0]))
            (set (reg/f:DI 385)
                (plus:DI (ashift:DI (reg:DI 387)
                        (const_int 3 [0x3]))
                    (reg/f:DI 385)))
            (set (mem:BLK (reg/f:DI 385) [0 MEM[(void *)argp_19]+0 S56 A128])
                (const_int 0 [0]))
            (use (reg:DI 386))
            (use (reg:DI 387))
        ]) argp-parse.c:899 -1
     (nil))
(insn 75 74 76 4 (set (mem/f:DI (plus:DI (reg/v/f:DI 93 [ argp ])
                (const_int 32 [0x20])) [2 MEM[(struct argp *)argp_19].children+0 S8 A128])
        (reg/v/f:DI 92 [ child ])) argp-parse.c:900 -1
     (nil))
(insn 76 75 77 4 (set (reg/f:DI 388)
        (reg/v/f:DI 92 [ child ])) argp-parse.c:902 -1
     (nil))
(insn 77 76 78 4 (set (reg:DI 389)
        (const_int 0 [0])) argp-parse.c:902 -1
     (nil))
(insn 78 77 79 4 (set (reg:DI 390)
        (const_int 16 [0x10])) argp-parse.c:902 -1
     (nil))
(insn 79 78 80 4 (parallel [
            (set (reg:DI 390)
                (const_int 0 [0]))
            (set (reg/f:DI 388)
                (plus:DI (ashift:DI (reg:DI 390)
                        (const_int 3 [0x3]))
                    (reg/f:DI 388)))
            (set (mem:BLK (reg/f:DI 388) [0 MEM[(void *)child_17]+0 S128 A128])
                (const_int 0 [0]))
            (use (reg:DI 389))
            (use (reg:DI 390))
        ]) argp-parse.c:902 -1
     (nil))
(insn 80 79 81 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 358 [ argp ])
            (const_int 0 [0]))) argp-parse.c:904 -1
     (nil))
(jump_insn 81 80 82 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1362)
            (pc))) argp-parse.c:904 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1362)
(note 82 81 83 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 5 (parallel [
            (set (reg/v/f:DI 88 [ child ])
                (plus:DI (reg/v/f:DI 92 [ child ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:905 -1
     (nil))
(insn 84 83 1359 5 (set (mem/f:DI (reg/v/f:DI 92 [ child ]) [2 child_17->argp+0 S8 A128])
        (reg/v/f:DI 358 [ argp ])) argp-parse.c:905 -1
     (nil))
(jump_insn 1359 84 1360 5 (set (pc)
        (label_ref 85)) -1
     (nil)
 -> 85)
(barrier 1360 1359 1362)
(code_label 1362 1360 1361 6 233 "" [1 uses])
(note 1361 1362 9 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 9 1361 85 6 (set (reg/v/f:DI 88 [ child ])
        (reg/v/f:DI 92 [ child ])) -1
     (nil))
(code_label 85 9 86 7 116 "" [1 uses])
(note 86 85 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 7 (set (reg/f:DI 391)
        (symbol_ref:DI ("argp_default_argp") [flags 0x2]  <var_decl 0x2afe073ec2d0 argp_default_argp>)) argp-parse.c:906 -1
     (nil))
(insn 88 87 89 7 (set (mem/f:DI (reg/v/f:DI 88 [ child ]) [2 child_4->argp+0 S8 A128])
        (reg/f:DI 391)) argp-parse.c:906 -1
     (nil))
(insn 89 88 90 7 (set (reg/f:DI 392)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("argp_program_version") [flags 0x40]  <var_decl 0x2afe0738fcf0 argp_program_version>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:907 -1
     (nil))
(insn 90 89 91 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (reg/f:DI 392) [2 argp_program_version+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:907 -1
     (nil))
(jump_insn 91 90 92 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) argp-parse.c:907 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 100)
(note 92 91 93 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 8 (set (reg/f:DI 393)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("argp_program_version_hook") [flags 0x40]  <var_decl 0x2afe0738fd80 argp_program_version_hook>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:907 -1
     (nil))
(insn 94 93 95 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (reg/f:DI 393) [2 argp_program_version_hook+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:907 -1
     (nil))
(jump_insn 95 94 96 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) argp-parse.c:907 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 100)
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (parallel [
            (set (reg/v/f:DI 89 [ child ])
                (plus:DI (reg/v/f:DI 88 [ child ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:906 -1
     (nil))
(jump_insn 98 97 99 9 (set (pc)
        (label_ref 105)) argp-parse.c:906 -1
     (nil)
 -> 105)
(barrier 99 98 100)
(code_label 100 99 101 10 117 "" [2 uses])
(note 101 100 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 10 (parallel [
            (set (reg/v/f:DI 89 [ child ])
                (plus:DI (reg/v/f:DI 88 [ child ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:908 -1
     (nil))
(insn 103 102 104 10 (set (reg/f:DI 394)
        (symbol_ref:DI ("argp_version_argp") [flags 0x2]  <var_decl 0x2afe073ec510 argp_version_argp>)) argp-parse.c:908 -1
     (nil))
(insn 104 103 105 10 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ child ])
                (const_int 32 [0x20])) [2 MEM[(struct argp_child *)child_4 + 32B].argp+0 S8 A128])
        (reg/f:DI 394)) argp-parse.c:908 -1
     (nil))
(code_label 105 104 106 11 118 "" [1 uses])
(note 106 105 107 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 11 (set (mem/f:DI (reg/v/f:DI 89 [ child ]) [2 child_5->argp+0 S8 A128])
        (const_int 0 [0])) argp-parse.c:909 -1
     (nil))
(insn 108 107 109 11 (set (reg:SI 96 [ D.11146 ])
        (reg/v:SI 361 [ flags ])) argp-parse.c:915 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg:SI 98 [ D.11146 ])
                (and:SI (reg:SI 96 [ D.11146 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:490 -1
     (nil))
(insn 110 109 111 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:490 -1
     (nil))
(insn 111 110 112 11 (set (reg:QI 396)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:490 -1
     (nil))
(insn 112 111 113 11 (set (reg:DI 395 [ D.11148 ])
        (zero_extend:DI (reg:QI 396))) argp-parse.c:490 -1
     (nil))
(insn 113 112 114 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [8 szs.short_len+0 S8 A128])
        (reg:DI 395 [ D.11148 ])) argp-parse.c:490 -1
     (nil))
(insn 114 113 115 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [8 szs.long_len+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:491 -1
     (nil))
(insn 115 114 116 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [8 szs.num_groups+0 S8 A128])
        (const_int 0 [0])) argp-parse.c:492 -1
     (nil))
(insn 116 115 10 11 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [8 szs.num_child_inputs+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:493 -1
     (nil))
(insn 10 116 117 11 (set (reg/v/f:DI 358 [ argp ])
        (reg/v/f:DI 93 [ argp ])) argp-parse.c:493 -1
     (nil))
(jump_insn 117 10 118 11 (set (pc)
        (label_ref 133)) argp-parse.c:493 -1
     (nil)
 -> 133)
(barrier 118 117 119)
(code_label 119 118 120 12 115 "" [1 uses])
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg:SI 96 [ D.11146 ])
        (reg/v:SI 361 [ flags ])) argp-parse.c:915 -1
     (nil))
(insn 122 121 123 12 (parallel [
            (set (reg:SI 98 [ D.11146 ])
                (and:SI (reg:SI 96 [ D.11146 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:490 -1
     (nil))
(insn 123 122 124 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:490 -1
     (nil))
(insn 124 123 125 12 (set (reg:QI 398)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:490 -1
     (nil))
(insn 125 124 126 12 (set (reg:DI 397 [ D.11148 ])
        (zero_extend:DI (reg:QI 398))) argp-parse.c:490 -1
     (nil))
(insn 126 125 127 12 (set (reg:DI 345 [ D.11142 ])
        (reg:DI 397 [ D.11148 ])) argp-parse.c:490 -1
     (nil))
(insn 127 126 128 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [8 szs.short_len+0 S8 A128])
        (reg:DI 345 [ D.11142 ])) argp-parse.c:490 -1
     (nil))
(insn 128 127 129 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [8 szs.long_len+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:491 -1
     (nil))
(insn 129 128 130 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [8 szs.num_groups+0 S8 A128])
        (const_int 0 [0])) argp-parse.c:492 -1
     (nil))
(insn 130 129 131 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [8 szs.num_child_inputs+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:493 -1
     (nil))
(insn 131 130 132 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 358 [ argp ])
            (const_int 0 [0]))) argp-parse.c:495 -1
     (nil))
(jump_insn 132 131 133 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1366)
            (pc))) argp-parse.c:495 612 {*jcc_1}
     (int_list:REG_BR_PROB 4253 (nil))
 -> 1366)
(code_label 133 132 134 13 119 "" [1 uses])
(note 134 133 135 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 13 (parallel [
            (set (reg:DI 399)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:496 -1
     (nil))
(insn 136 135 137 13 (set (reg:DI 4 si)
        (reg:DI 399)) argp-parse.c:496 -1
     (nil))
(insn 137 136 138 13 (set (reg:DI 5 di)
        (reg/v/f:DI 358 [ argp ])) argp-parse.c:496 -1
     (nil))
(call_insn 138 137 139 13 (call (mem:QI (symbol_ref:DI ("calc_sizes") [flags 0x3]  <function_decl 0x2afe074051b0 calc_sizes>) [0 calc_sizes S1 A8])
        (const_int 0 [0])) argp-parse.c:496 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calc_sizes") [flags 0x3]  <function_decl 0x2afe074051b0 calc_sizes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 139 138 140 13 (set (reg:DI 400)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [8 szs.num_groups+0 S8 A128])) -1
     (nil))
(insn 140 139 141 13 (parallel [
            (set (reg:DI 235 [ D.11142 ])
                (plus:DI (reg:DI 400)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])) [8 szs.num_groups+0 S8 A128])
            (const_int 1 [0x1]))
        (nil)))
(insn 141 140 142 13 (set (reg:DI 401)
        (reg:DI 235 [ D.11142 ])) -1
     (nil))
(insn 142 141 143 13 (parallel [
            (set (reg:DI 402)
                (ashift:DI (reg:DI 401)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 143 142 144 13 (parallel [
            (set (reg:DI 403)
                (plus:DI (reg:DI 402)
                    (reg:DI 235 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235 [ D.11142 ])
            (const_int 9 [0x9]))
        (nil)))
(insn 144 143 145 13 (set (reg:DI 314 [ D.11142 ])
        (reg:DI 403)) -1
     (nil))
(insn 145 144 146 13 (set (reg:DI 90 [ D.11142 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [8 szs.num_child_inputs+0 S8 A64])) -1
     (nil))
(insn 146 145 147 13 (set (reg:DI 405)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -280 [0xfffffffffffffee8])) [8 szs.long_len+0 S8 A64])) -1
     (nil))
(insn 147 146 148 13 (parallel [
            (set (reg:DI 404 [ D.11142 ])
                (plus:DI (reg:DI 405)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -280 [0xfffffffffffffee8])) [8 szs.long_len+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 148 147 149 13 (parallel [
            (set (reg:DI 406 [ D.11142 ])
                (ashift:DI (reg:DI 404 [ D.11142 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 149 148 150 13 (parallel [
            (set (reg:DI 407 [ D.11142 ])
                (plus:DI (reg:DI 406 [ D.11142 ])
                    (reg:DI 314 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 150 149 151 13 (parallel [
            (set (reg:DI 408 [ D.11142 ])
                (plus:DI (reg:DI 407 [ D.11142 ])
                    (reg:DI 90 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 151 150 152 13 (parallel [
            (set (reg:DI 204 [ D.11142 ])
                (ashift:DI (reg:DI 408 [ D.11142 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 152 151 1363 13 (set (reg:DI 345 [ D.11142 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [8 szs.short_len+0 S8 A128])) -1
     (nil))
(jump_insn 1363 152 1364 13 (set (pc)
        (label_ref 153)) -1
     (nil)
 -> 153)
(barrier 1364 1363 1366)
(code_label 1366 1364 1365 14 234 "" [1 uses])
(note 1365 1366 11 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 11 1365 12 14 (set (reg:DI 204 [ D.11142 ])
        (const_int 104 [0x68])) argp-parse.c:495 -1
     (nil))
(insn 12 11 13 14 (set (reg:DI 90 [ D.11142 ])
        (const_int 0 [0])) argp-parse.c:495 -1
     (nil))
(insn 13 12 14 14 (set (reg:DI 314 [ D.11142 ])
        (const_int 9 [0x9])) argp-parse.c:495 -1
     (nil))
(insn 14 13 153 14 (set (reg:DI 235 [ D.11142 ])
        (const_int 1 [0x1])) argp-parse.c:495 -1
     (nil))
(code_label 153 14 154 15 120 "" [1 uses])
(note 154 153 155 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 15 (parallel [
            (set (reg:DI 409 [ D.11142 ])
                (plus:DI (reg:DI 204 [ D.11142 ])
                    (reg:DI 345 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:504 -1
     (nil))
(insn 156 155 157 15 (parallel [
            (set (reg:DI 410 [ D.11142 ])
                (plus:DI (reg:DI 409 [ D.11142 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:504 -1
     (nil))
(insn 157 156 158 15 (set (reg:DI 5 di)
        (reg:DI 410 [ D.11142 ])) argp-parse.c:504 -1
     (nil))
(call_insn 158 157 159 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2afe06e30360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) argp-parse.c:504 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2afe06e30360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 159 158 160 15 (set (reg/f:DI 411)
        (reg:DI 0 ax)) argp-parse.c:504 -1
     (expr_list:REG_NOALIAS (reg/f:DI 411)
        (nil)))
(insn 160 159 161 15 (set (reg/f:DI 101 [ D.11149 ])
        (reg/f:DI 411)) argp-parse.c:504 -1
     (nil))
(insn 161 160 162 15 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 parser.storage+0 S8 A128])
        (reg/f:DI 101 [ D.11149 ])) argp-parse.c:504 -1
     (nil))
(insn 162 161 163 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ D.11149 ])
            (const_int 0 [0]))) argp-parse.c:505 -1
     (nil))
(jump_insn 163 162 164 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1368)
            (pc))) argp-parse.c:505 612 {*jcc_1}
     (int_list:REG_BR_PROB 4673 (nil))
 -> 1368)
(note 164 163 165 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
        (reg/f:DI 101 [ D.11149 ])) argp-parse.c:508 -1
     (nil))
(insn 166 165 167 16 (set (reg:DI 412)
        (reg:DI 235 [ D.11142 ])) argp-parse.c:509 -1
     (nil))
(insn 167 166 168 16 (parallel [
            (set (reg:DI 413)
                (ashift:DI (reg:DI 412)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:509 -1
     (nil))
(insn 168 167 169 16 (parallel [
            (set (reg:DI 414 [ D.11142 ])
                (plus:DI (reg:DI 413)
                    (reg:DI 235 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:509 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235 [ D.11142 ])
            (const_int 9 [0x9]))
        (nil)))
(insn 169 168 170 16 (parallel [
            (set (reg:DI 415)
                (ashift:DI (reg:DI 414 [ D.11142 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:509 -1
     (nil))
(insn 170 169 171 16 (set (reg:DI 414 [ D.11142 ])
        (reg:DI 415)) argp-parse.c:509 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 235 [ D.11142 ])
            (const_int 72 [0x48]))
        (nil)))
(insn 171 170 172 16 (parallel [
            (set (reg/f:DI 103 [ D.11150 ])
                (plus:DI (reg/f:DI 101 [ D.11149 ])
                    (reg:DI 414 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:509 -1
     (nil))
(insn 172 171 173 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [2 parser.child_inputs+0 S8 A128])
        (reg/f:DI 103 [ D.11150 ])) argp-parse.c:509 -1
     (nil))
(insn 173 172 174 16 (parallel [
            (set (reg:DI 416 [ D.11151 ])
                (plus:DI (reg:DI 90 [ D.11142 ])
                    (reg:DI 314 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:510 -1
     (nil))
(insn 174 173 175 16 (parallel [
            (set (reg:DI 417 [ D.11151 ])
                (ashift:DI (reg:DI 416 [ D.11151 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:510 -1
     (nil))
(insn 175 174 176 16 (parallel [
            (set (reg/f:DI 106 [ D.11149 ])
                (plus:DI (reg/f:DI 101 [ D.11149 ])
                    (reg:DI 417 [ D.11151 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:510 -1
     (nil))
(insn 176 175 177 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [2 parser.long_opts+0 S8 A128])
        (reg/f:DI 106 [ D.11149 ])) argp-parse.c:510 -1
     (nil))
(insn 177 176 178 16 (parallel [
            (set (reg/f:DI 107 [ D.11149 ])
                (plus:DI (reg/f:DI 101 [ D.11149 ])
                    (reg:DI 204 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:511 -1
     (nil))
(insn 178 177 179 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [2 parser.short_opts+0 S8 A64])
        (reg/f:DI 107 [ D.11149 ])) argp-parse.c:511 -1
     (nil))
(insn 179 178 180 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [11 MEM[(struct parser *)&parser + 24B]+0 S4 A64])
        (const_int 1 [0x1])) argp-parse.c:512 -1
     (nil))
(insn 180 179 181 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [11 MEM[(struct parser *)&parser + 28B]+0 S4 A32])
        (const_int 1 [0x1])) argp-parse.c:512 -1
     (nil))
(insn 181 180 182 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [11 MEM[(struct parser *)&parser + 32B]+0 S4 A128])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 182 181 183 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [11 MEM[(struct parser *)&parser + 40B]+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 183 182 184 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -176 [0xffffffffffffff50])) [11 MEM[(struct parser *)&parser + 48B]+0 S4 A128])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 184 183 185 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [11 MEM[(struct parser *)&parser + 56B]+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 185 184 186 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [11 MEM[(struct parser *)&parser + 64B]+0 S4 A128])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 186 185 187 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -156 [0xffffffffffffff64])) [11 MEM[(struct parser *)&parser + 68B]+0 S4 A32])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 187 186 188 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -152 [0xffffffffffffff68])) [11 MEM[(struct parser *)&parser + 72B]+0 S4 A64])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 188 187 189 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -148 [0xffffffffffffff6c])) [11 MEM[(struct parser *)&parser + 76B]+0 S4 A32])
        (const_int 0 [0])) argp-parse.c:512 -1
     (nil))
(insn 189 188 190 16 (parallel [
            (set (reg:DI 418 [ D.11142 ])
                (ashift:DI (reg:DI 90 [ D.11142 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:514 -1
     (nil))
(insn 190 189 191 16 (set (reg:DI 419)
        (reg/f:DI 103 [ D.11150 ])) argp-parse.c:514 -1
     (nil))
(insn 191 190 192 16 (set (reg:DI 420)
        (reg:DI 418 [ D.11142 ])) argp-parse.c:514 -1
     (nil))
(insn 192 191 193 16 (set (reg:DI 1 dx)
        (reg:DI 420)) argp-parse.c:514 -1
     (nil))
(insn 193 192 194 16 (set (reg:SI 4 si)
        (const_int 0 [0])) argp-parse.c:514 -1
     (nil))
(insn 194 193 195 16 (set (reg:DI 5 di)
        (reg:DI 419)) argp-parse.c:514 -1
     (nil))
(call_insn 195 194 196 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memset") [flags 0x41]  <function_decl 0x2afe0704f948 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) argp-parse.c:514 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memset") [flags 0x41]  <function_decl 0x2afe0704f948 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 196 195 197 16 (set (reg:DI 421)
        (reg:DI 0 ax)) argp-parse.c:514 -1
     (nil))
(insn 197 196 198 16 (set (reg:DI 422)
        (reg:DI 421)) argp-parse.c:514 -1
     (nil))
(insn 198 197 199 16 (parallel [
            (set (reg:DI 423)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:419 -1
     (nil))
(insn 199 198 200 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [2 cvt.parser+0 S8 A128])
        (reg:DI 423)) argp-parse.c:419 -1
     (nil))
(insn 200 199 201 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [2 cvt.short_end+0 S8 A64])
        (reg/f:DI 107 [ D.11149 ])) argp-parse.c:420 -1
     (nil))
(insn 201 200 202 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [2 cvt.long_end+0 S8 A128])
        (reg/f:DI 106 [ D.11149 ])) argp-parse.c:421 -1
     (nil))
(insn 202 201 203 16 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -232 [0xffffffffffffff18])) [2 cvt.child_inputs_end+0 S8 A64])
        (reg/f:DI 103 [ D.11150 ])) argp-parse.c:422 -1
     (nil))
(insn 203 202 204 16 (parallel [
            (set (reg:SI 424 [ D.11146 ])
                (and:SI (reg:SI 96 [ D.11146 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:424 -1
     (nil))
(insn 204 203 205 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 424 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:424 -1
     (nil))
(jump_insn 205 204 206 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) argp-parse.c:424 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 212)
(note 206 205 207 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 17 (parallel [
            (set (reg/f:DI 146 [ D.11157 ])
                (plus:DI (reg/f:DI 107 [ D.11149 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:425 -1
     (nil))
(insn 208 207 209 17 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [2 cvt.short_end+0 S8 A64])
        (reg/f:DI 146 [ D.11157 ])) argp-parse.c:425 -1
     (nil))
(insn 209 208 210 17 (set (mem:QI (reg/f:DI 107 [ D.11149 ]) [0 MEM[(char *)_69]+0 S1 A64])
        (const_int 45 [0x2d])) argp-parse.c:425 -1
     (nil))
(jump_insn 210 209 211 17 (set (pc)
        (label_ref 220)) argp-parse.c:425 -1
     (nil)
 -> 220)
(barrier 211 210 212)
(code_label 212 211 213 18 122 "" [1 uses])
(note 213 212 214 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:426 -1
     (nil))
(jump_insn 215 214 216 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1372)
            (pc))) argp-parse.c:426 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1372)
(note 216 215 217 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 19 (parallel [
            (set (reg/f:DI 146 [ D.11157 ])
                (plus:DI (reg/f:DI 107 [ D.11149 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:427 -1
     (nil))
(insn 218 217 219 19 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -248 [0xffffffffffffff08])) [2 cvt.short_end+0 S8 A64])
        (reg/f:DI 146 [ D.11157 ])) argp-parse.c:427 -1
     (nil))
(insn 219 218 1369 19 (set (mem:QI (reg/f:DI 107 [ D.11149 ]) [0 MEM[(char *)_69]+0 S1 A64])
        (const_int 43 [0x2b])) argp-parse.c:427 -1
     (nil))
(jump_insn 1369 219 1370 19 (set (pc)
        (label_ref 220)) -1
     (nil)
 -> 220)
(barrier 1370 1369 1372)
(code_label 1372 1370 1371 20 236 "" [1 uses])
(note 1371 1372 15 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 15 1371 220 20 (set (reg/f:DI 146 [ D.11157 ])
        (reg/f:DI 107 [ D.11149 ])) argp-parse.c:511 -1
     (nil))
(code_label 220 15 221 21 123 "" [2 uses])
(note 221 220 222 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 21 (set (mem:QI (reg/f:DI 146 [ D.11157 ]) [0 *_187+0 S1 A8])
        (const_int 0 [0])) argp-parse.c:428 -1
     (nil))
(insn 223 222 224 21 (set (reg/f:DI 425)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -240 [0xffffffffffffff10])) [2 cvt.long_end+0 S8 A128])) argp-parse.c:430 -1
     (nil))
(insn 224 223 225 21 (set (mem/f:DI (reg/f:DI 425) [2 _130->name+0 S8 A64])
        (const_int 0 [0])) argp-parse.c:430 -1
     (nil))
(insn 225 224 226 21 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [2 parser.argp+0 S8 A128])
        (reg/v/f:DI 358 [ argp ])) argp-parse.c:432 -1
     (nil))
(insn 226 225 227 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 358 [ argp ])
            (const_int 0 [0]))) argp-parse.c:434 -1
     (nil))
(jump_insn 227 226 228 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) argp-parse.c:434 -1
     (int_list:REG_BR_PROB 4032 (nil))
 -> 243)
(note 228 227 229 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 22 (parallel [
            (set (reg:DI 426)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:435 -1
     (nil))
(insn 230 229 231 22 (set (reg:DI 427)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:435 -1
     (nil))
(insn 231 230 232 22 (set (reg:DI 37 r8)
        (reg:DI 426)) argp-parse.c:435 -1
     (nil))
(insn 232 231 233 22 (set (reg:DI 2 cx)
        (reg:DI 427)) argp-parse.c:435 -1
     (nil))
(insn 233 232 234 22 (set (reg:SI 1 dx)
        (const_int 0 [0])) argp-parse.c:435 -1
     (nil))
(insn 234 233 235 22 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:435 -1
     (nil))
(insn 235 234 236 22 (set (reg:DI 5 di)
        (reg/v/f:DI 358 [ argp ])) argp-parse.c:435 -1
     (nil))
(call_insn 236 235 237 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("convert_options") [flags 0x3]  <function_decl 0x2afe073e5288 convert_options>) [0 convert_options S1 A8])
            (const_int 0 [0]))) argp-parse.c:435 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("convert_options") [flags 0x3]  <function_decl 0x2afe073e5288 convert_options>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 237 236 238 22 (set (reg/f:DI 150 [ D.11153 ])
        (reg:DI 0 ax)) argp-parse.c:435 -1
     (nil))
(insn 238 237 239 22 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
        (reg/f:DI 150 [ D.11153 ])) argp-parse.c:435 -1
     (nil))
(insn 239 238 240 22 (set (reg/f:DI 220 [ D.11155 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [2 parser.argp+0 S8 A128])) -1
     (nil))
(insn 240 239 241 22 (set (reg/f:DI 315 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) -1
     (nil))
(jump_insn 241 240 242 22 (set (pc)
        (label_ref 247)) -1
     (nil)
 -> 247)
(barrier 242 241 243)
(code_label 243 242 244 23 124 "" [1 uses])
(note 244 243 245 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 23 (set (reg/f:DI 315 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:437 -1
     (nil))
(insn 246 245 16 23 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
        (reg/f:DI 315 [ D.11153 ])) argp-parse.c:437 -1
     (nil))
(insn 16 246 17 23 (set (reg/f:DI 150 [ D.11153 ])
        (reg/f:DI 315 [ D.11153 ])) argp-parse.c:437 -1
     (nil))
(insn 17 16 247 23 (set (reg/f:DI 220 [ D.11155 ])
        (const_int 0 [0])) argp-parse.c:437 -1
     (nil))
(code_label 247 17 248 24 125 "" [1 uses])
(note 248 247 249 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 24 (parallel [
            (set (reg:DI 428)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:517 -1
     (nil))
(insn 250 249 251 24 (parallel [
            (set (reg:DI 429)
                (plus:DI (reg:DI 428)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:517 -1
     (nil))
(insn 251 250 252 24 (set (reg/f:DI 430)
        (reg:DI 429)) argp-parse.c:517 -1
     (nil))
(insn 252 251 253 24 (set (reg:DI 431)
        (const_int 0 [0])) argp-parse.c:517 -1
     (nil))
(insn 253 252 254 24 (set (reg:DI 432)
        (const_int 12 [0xc])) argp-parse.c:517 -1
     (nil))
(insn 254 253 255 24 (parallel [
            (set (reg:DI 432)
                (const_int 0 [0]))
            (set (reg/f:DI 430)
                (plus:DI (ashift:DI (reg:DI 432)
                        (const_int 3 [0x3]))
                    (reg/f:DI 430)))
            (set (mem/c:BLK (reg/f:DI 430) [0 MEM[(void *)&parser + 112B]+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 431))
            (use (reg:DI 432))
        ]) argp-parse.c:517 -1
     (nil))
(insn 255 254 256 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -112 [0xffffffffffffff90])) [2 parser.state.root_argp+0 S8 A128])
        (reg/f:DI 220 [ D.11155 ])) argp-parse.c:518 -1
     (nil))
(insn 256 255 257 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])
        (reg/v:SI 359 [ argc ])) argp-parse.c:519 -1
     (nil))
(insn 257 256 258 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])
        (reg/v/f:DI 360 [ argv ])) argp-parse.c:520 -1
     (nil))
(insn 258 257 259 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])
        (reg/v:SI 361 [ flags ])) argp-parse.c:521 -1
     (nil))
(insn 259 258 260 24 (set (reg/f:DI 433)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2afe071042d0 stderr>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:522 -1
     (nil))
(insn 260 259 261 24 (set (reg/f:DI 434)
        (mem/f/c:DI (reg/f:DI 433) [2 stderr+0 S8 A64])) argp-parse.c:522 -1
     (nil))
(insn 261 260 262 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])
        (reg/f:DI 434)) argp-parse.c:522 -1
     (nil))
(insn 262 261 263 24 (set (reg/f:DI 435)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2afe07104240 stdout>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:523 -1
     (nil))
(insn 263 262 264 24 (set (reg/f:DI 436)
        (mem/f/c:DI (reg/f:DI 435) [2 stdout+0 S8 A64])) argp-parse.c:523 -1
     (nil))
(insn 264 263 265 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 parser.state.out_stream+0 S8 A128])
        (reg/f:DI 436)) argp-parse.c:523 -1
     (nil))
(insn 265 264 266 24 (parallel [
            (set (reg:DI 437)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:525 -1
     (nil))
(insn 266 265 267 24 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 parser.state.pstate+0 S8 A64])
        (reg:DI 437)) argp-parse.c:525 -1
     (nil))
(insn 267 266 268 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])
        (const_int 1 [0x1])) argp-parse.c:527 -1
     (nil))
(insn 268 267 269 24 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 315 [ D.11153 ])
            (reg/f:DI 150 [ D.11153 ]))) argp-parse.c:531 -1
     (nil))
(jump_insn 269 268 270 24 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) argp-parse.c:531 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 346)
(note 270 269 271 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 25 (set (mem/f:DI (plus:DI (reg/f:DI 315 [ D.11153 ])
                (const_int 48 [0x30])) [2 _582->input+0 S8 A64])
        (reg/v/f:DI 363 [ input ])) argp-parse.c:532 -1
     (nil))
(insn 272 271 273 25 (parallel [
            (set (reg:DI 322 [ ivtmp.195 ])
                (plus:DI (reg/f:DI 315 [ D.11153 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 273 272 274 25 (set (pc)
        (label_ref 277)) -1
     (nil)
 -> 277)
(barrier 274 273 330)
(code_label 330 274 275 26 133 "" [4 uses])
(note 275 330 276 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 26 (parallel [
            (set (reg:DI 322 [ ivtmp.195 ])
                (plus:DI (reg:DI 322 [ ivtmp.195 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 277 276 278 27 127 "" [1 uses])
(note 278 277 279 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 27 (set (reg/f:DI 325 [ D.11149 ])
        (reg:DI 322 [ ivtmp.195 ])) -1
     (nil))
(insn 280 279 281 27 (set (reg/f:DI 114 [ D.11153 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -40 [0xffffffffffffffd8])) [2 MEM[base: _649, offset: -40B]+0 S8 A64])) argp-parse.c:537 -1
     (nil))
(insn 281 280 282 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ D.11153 ])
            (const_int 0 [0]))) argp-parse.c:537 -1
     (nil))
(jump_insn 282 281 283 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) argp-parse.c:537 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 288)
(note 283 282 284 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 28 (set (reg:DI 438 [ D.11142 ])
        (zero_extend:DI (mem:SI (plus:DI (reg/f:DI 325 [ D.11149 ])
                    (const_int -32 [0xffffffffffffffe0])) [3 MEM[base: _649, offset: -32B]+0 S4 A32]))) argp-parse.c:539 -1
     (nil))
(insn 285 284 286 28 (set (reg/f:DI 439)
        (mem/f:DI (plus:DI (reg/f:DI 114 [ D.11153 ])
                (const_int 56 [0x38])) [2 _79->child_inputs+0 S8 A64])) argp-parse.c:539 -1
     (nil))
(insn 286 285 287 28 (set (reg/f:DI 120 [ D.11149 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 438 [ D.11142 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 439)) [2 *_84+0 S8 A64])) argp-parse.c:539 -1
     (nil))
(insn 287 286 288 28 (set (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -24 [0xffffffffffffffe8])) [2 MEM[base: _649, offset: -24B]+0 S8 A64])
        (reg/f:DI 120 [ D.11149 ])) argp-parse.c:539 -1
     (nil))
(code_label 288 287 289 29 128 "" [1 uses])
(note 289 288 290 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 29 (set (reg/f:DI 121 [ D.11154 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[base: _649, offset: -72B]+0 S8 A64])) argp-parse.c:541 -1
     (nil))
(insn 291 290 292 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 121 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:541 -1
     (nil))
(jump_insn 292 291 293 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) argp-parse.c:541 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 308)
(note 293 292 294 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 295 30 (set (reg/f:DI 440)
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[base: _649, offset: -64B]+0 S8 A64])) argp-parse.c:542 -1
     (nil))
(insn 295 294 296 30 (set (reg/f:DI 123 [ D.11156 ])
        (mem/f:DI (plus:DI (reg/f:DI 440)
                (const_int 32 [0x20])) [2 _87->children+0 S8 A64])) argp-parse.c:542 -1
     (nil))
(insn 296 295 297 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ D.11156 ])
            (const_int 0 [0]))) argp-parse.c:542 -1
     (nil))
(jump_insn 297 296 298 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) argp-parse.c:542 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1324)
(note 298 297 299 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 123 [ D.11156 ]) [2 _88->argp+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:542 -1
     (nil))
(jump_insn 300 299 301 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) argp-parse.c:542 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1324)
(note 301 300 302 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 32 (set (reg/f:DI 125 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -16 [0xfffffffffffffff0])) [2 MEM[base: _649, offset: -16B]+0 S8 A64])) argp-parse.c:546 -1
     (nil))
(insn 303 302 304 32 (set (reg/f:DI 126 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -24 [0xffffffffffffffe8])) [2 MEM[base: _649, offset: -24B]+0 S8 A64])) argp-parse.c:546 -1
     (nil))
(insn 304 303 305 32 (set (mem/f:DI (reg/f:DI 125 [ D.11150 ]) [2 *_90+0 S8 A64])
        (reg/f:DI 126 [ D.11149 ])) argp-parse.c:546 -1
     (nil))
(insn 305 304 306 32 (set (reg/f:DI 121 [ D.11154 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[base: _649, offset: -72B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 306 305 307 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 121 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 307 306 308 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1220)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1220)
(code_label 308 307 309 33 129 "" [1 uses])
(note 309 308 310 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 33 (set (reg/f:DI 127 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -8 [0xfffffffffffffff8])) [2 MEM[base: _649, offset: -8B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 311 310 312 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 127 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 312 311 313 33 (set (reg/f:DI 128 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -24 [0xffffffffffffffe8])) [2 MEM[base: _649, offset: -24B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 313 312 314 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 128 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 314 313 315 33 (set (reg/f:DI 129 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -16 [0xfffffffffffffff0])) [2 MEM[base: _649, offset: -16B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 315 314 316 33 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 129 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 316 315 317 33 (set (reg:SI 130 [ D.11143 ])
        (mem:SI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[base: _649, offset: -48B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 317 316 318 33 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 130 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 318 317 319 33 (parallel [
            (set (reg:DI 441)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 319 318 320 33 (parallel [
            (set (reg:DI 442)
                (plus:DI (reg:DI 441)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 320 319 321 33 (set (reg:DI 1 dx)
        (reg:DI 442)) argp-parse.c:257 -1
     (nil))
(insn 321 320 322 33 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 322 321 323 33 (set (reg:SI 5 di)
        (const_int 16777219 [0x1000003])) argp-parse.c:257 -1
     (nil))
(call_insn 323 322 324 33 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 121 [ D.11154 ]) [0 *_318 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 324 323 325 33 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 325 324 326 33 (set (reg/f:DI 131 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 326 325 327 33 (set (mem/f:DI (plus:DI (reg/f:DI 325 [ D.11149 ])
                (const_int -8 [0xfffffffffffffff8])) [2 MEM[base: _649, offset: -8B]+0 S8 A64])
        (reg/f:DI 131 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(insn 327 326 328 33 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
            (reg/f:DI 325 [ D.11149 ]))) argp-parse.c:533 -1
     (nil))
(jump_insn 328 327 329 33 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 342)
            (pc))) argp-parse.c:533 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 342)
(note 329 328 331 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 331 329 332 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:534 -1
     (nil))
(insn 332 331 333 34 (set (reg:QI 444 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:534 -1
     (nil))
(insn 333 332 334 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 444 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:534 -1
     (nil))
(jump_insn 334 333 1408 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) argp-parse.c:534 -1
     (int_list:REG_BR_PROB 4735 (nil))
 -> 330)
(note 1408 334 335 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 335 1408 336 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:534 -1
     (nil))
(insn 336 335 337 35 (set (reg:QI 446 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:534 -1
     (nil))
(insn 337 336 338 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 446 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:534 -1
     (nil))
(jump_insn 338 337 341 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) argp-parse.c:534 -1
     (int_list:REG_BR_PROB 8993 (nil))
 -> 330)
(note 341 338 339 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 339 341 340 36 (set (pc)
        (label_ref:DI 1149)) argp-parse.c:534 654 {jump}
     (nil)
 -> 1149)
(barrier 340 339 342)
(code_label 342 340 343 37 132 "" [1 uses])
(note 343 342 344 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:550 -1
     (nil))
(jump_insn 345 344 346 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) argp-parse.c:550 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 355)
(code_label 346 345 347 38 126 "" [4 uses])
(note 347 346 348 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 349 38 (set (reg:SI 136 [ D.11143 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])) argp-parse.c:556 -1
     (nil))
(insn 349 348 350 38 (parallel [
            (set (reg:SI 447 [ D.11143 ])
                (and:SI (reg:SI 136 [ D.11143 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:556 -1
     (nil))
(insn 350 349 351 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 447 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:556 -1
     (nil))
(jump_insn 351 350 354 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 362)
            (pc))) argp-parse.c:556 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 362)
(note 354 351 352 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(jump_insn 352 354 353 39 (set (pc)
        (label_ref 383)) argp-parse.c:556 -1
     (nil)
 -> 383)
(barrier 353 352 355)
(code_label 355 353 356 40 134 "" [1 uses])
(note 356 355 357 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:553 -1
     (nil))
(jump_insn 358 357 361 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1149)
            (pc))) argp-parse.c:553 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1149)
(note 361 358 359 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn 359 361 360 41 (set (pc)
        (label_ref 346)) argp-parse.c:553 -1
     (nil)
 -> 346)
(barrier 360 359 362)
(code_label 362 360 363 42 135 "" [1 uses])
(note 363 362 364 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 42 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [3 parser.opt_data.opterr+0 S4 A32])
        (const_int 0 [0])) argp-parse.c:558 -1
     (nil))
(insn 365 364 366 42 (parallel [
            (set (reg:SI 448 [ D.11143 ])
                (and:SI (reg:SI 136 [ D.11143 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:559 -1
     (nil))
(insn 366 365 367 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 448 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:559 -1
     (nil))
(jump_insn 367 366 368 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) argp-parse.c:559 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 373)
(note 368 367 369 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 43 (set (reg/f:DI 97 [ D.11147 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) -1
     (nil))
(insn 370 369 371 43 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 371 370 372 43 (set (pc)
        (label_ref 388)) -1
     (nil)
 -> 388)
(barrier 372 371 373)
(code_label 373 372 374 44 137 "" [1 uses])
(note 374 373 375 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 44 (set (reg/f:DI 449)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) argp-parse.c:562 -1
     (nil))
(insn 376 375 377 44 (parallel [
            (set (reg/f:DI 97 [ D.11147 ])
                (plus:DI (reg/f:DI 449)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:562 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))
(insn 377 376 378 44 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])
        (reg/f:DI 97 [ D.11147 ])) argp-parse.c:562 -1
     (nil))
(insn 378 377 379 44 (set (reg:SI 450)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) argp-parse.c:562 -1
     (nil))
(insn 379 378 380 44 (parallel [
            (set (reg:SI 109 [ D.11146 ])
                (plus:SI (reg:SI 450)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:562 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 380 379 381 44 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])
        (reg:SI 109 [ D.11146 ])) argp-parse.c:562 -1
     (nil))
(jump_insn 381 380 382 44 (set (pc)
        (label_ref 388)) argp-parse.c:562 -1
     (nil)
 -> 388)
(barrier 382 381 383)
(code_label 383 382 384 45 136 "" [1 uses])
(note 384 383 385 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 45 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -196 [0xffffffffffffff3c])) [3 parser.opt_data.opterr+0 S4 A32])
        (const_int 1 [0x1])) argp-parse.c:565 -1
     (nil))
(insn 386 385 387 45 (set (reg/f:DI 97 [ D.11147 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) -1
     (nil))
(insn 387 386 388 45 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(code_label 388 387 389 46 138 "" [2 uses])
(note 389 388 390 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 360 [ argv ])
            (reg/f:DI 97 [ D.11147 ]))) argp-parse.c:567 -1
     (nil))
(jump_insn 391 390 392 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) argp-parse.c:567 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 410)
(note 392 391 393 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 47 (set (reg/f:DI 142 [ D.11157 ])
        (mem/f:DI (reg/v/f:DI 360 [ argv ]) [2 *argv_35(D)+0 S8 A64])) argp-parse.c:567 -1
     (nil))
(insn 394 393 395 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 142 [ D.11157 ])
            (const_int 0 [0]))) argp-parse.c:567 -1
     (nil))
(jump_insn 395 394 396 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 410)
            (pc))) argp-parse.c:567 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 410)
(note 396 395 397 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 48 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) argp-parse.c:570 -1
     (nil))
(insn 398 397 399 48 (set (reg:DI 5 di)
        (reg/f:DI 142 [ D.11157 ])) argp-parse.c:570 -1
     (nil))
(call_insn/i 399 398 400 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2afe06e0e438 strrchr>) [0 __builtin_strrchr S1 A8])
            (const_int 0 [0]))) argp-parse.c:570 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2afe06e0e438 strrchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 400 399 401 48 (set (reg/v/f:DI 141 [ short_name ])
        (reg:DI 0 ax)) argp-parse.c:570 -1
     (nil))
(insn 401 400 402 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 141 [ short_name ])
            (const_int 0 [0]))) argp-parse.c:571 -1
     (nil))
(jump_insn 402 401 403 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) argp-parse.c:571 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 405)
(note 403 402 404 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 49 (parallel [
            (set (reg/f:DI 142 [ D.11157 ])
                (plus:DI (reg/v/f:DI 141 [ short_name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:571 -1
     (nil))
(code_label 405 404 406 50 140 "" [1 uses])
(note 406 405 407 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 50 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 parser.state.name+0 S8 A128])
        (reg/f:DI 142 [ D.11157 ])) argp-parse.c:571 -1
     (nil))
(jump_insn 408 407 409 50 (set (pc)
        (label_ref 1152)) argp-parse.c:571 -1
     (nil)
 -> 1152)
(barrier 409 408 410)
(code_label 410 409 411 51 139 "" [2 uses])
(note 411 410 412 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 51 (set (reg/f:DI 451)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("program_invocation_short_name") [flags 0x40]  <var_decl 0x2afe0738fbd0 program_invocation_short_name>)
                    ] UNSPEC_GOTPCREL)) [16  S8 A8])) argp-parse.c:574 -1
     (nil))
(insn 413 412 414 51 (set (reg/f:DI 452)
        (mem/f/c:DI (reg/f:DI 451) [2 program_invocation_short_name+0 S8 A64])) argp-parse.c:574 -1
     (nil))
(insn 414 413 415 51 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 parser.state.name+0 S8 A128])
        (reg/f:DI 452)) argp-parse.c:574 -1
     (nil))
(jump_insn 415 414 416 51 (set (pc)
        (label_ref 1152)) argp-parse.c:574 -1
     (nil)
 -> 1152)
(barrier 416 415 1196)
(code_label 1196 416 417 52 219 "" [1 uses])
(note 417 1196 418 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 52 (set (reg:SI 348 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) -1
     (nil))
(insn 419 418 420 52 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(insn 420 419 1313 52 (set (reg:SI 351 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])) -1
     (nil))
(code_label 1313 420 421 53 230 "" [2 uses])
(note 421 1313 1156 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(code_label 1156 421 422 54 214 "" [1 uses])
(note 422 1156 423 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 54 (set (reg:SI 151 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [3 parser.state.quoted+0 S4 A32])) argp-parse.c:794 -1
     (nil))
(insn 424 423 425 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:794 -1
     (nil))
(jump_insn 425 424 426 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1227)
            (pc))) argp-parse.c:794 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1227)
(note 426 425 427 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 151 [ D.11146 ])
            (reg:SI 348 [ D.11146 ]))) argp-parse.c:794 -1
     (nil))
(jump_insn 428 427 429 55 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1159)
            (pc))) argp-parse.c:794 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1159)
(note 429 428 430 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 56 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [3 parser.state.quoted+0 S4 A32])
        (const_int 0 [0])) argp-parse.c:799 -1
     (nil))
(jump_insn 431 430 432 56 (set (pc)
        (label_ref 1227)) argp-parse.c:799 -1
     (nil)
 -> 1227)
(barrier 432 431 1229)
(code_label 1229 432 433 57 223 "" [1 uses])
(note 433 1229 434 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 57 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [3 parser.opt_data.optind+0 S4 A64])
        (reg:SI 348 [ D.11146 ])) argp-parse.c:805 -1
     (nil))
(insn 435 434 436 57 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -192 [0xffffffffffffff40])) [3 parser.opt_data.optopt+0 S4 A128])
        (const_int -1 [0xffffffffffffffff])) argp-parse.c:807 -1
     (nil))
(insn 436 435 437 57 (set (reg:SI 454)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])) argp-parse.c:808 -1
     (nil))
(insn 437 436 438 57 (parallel [
            (set (reg:SI 453 [ D.11143 ])
                (and:SI (reg:SI 454)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:808 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])
            (const_int 64 [0x40]))
        (nil)))
(insn 438 437 439 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 453 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:808 -1
     (nil))
(jump_insn 439 438 440 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) argp-parse.c:808 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 456)
(note 440 439 441 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 58 (parallel [
            (set (reg:DI 455)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:809 -1
     (nil))
(insn 442 441 443 58 (parallel [
            (set (reg:DI 456)
                (plus:DI (reg:DI 455)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:809 -1
     (nil))
(insn 443 442 444 58 (set (reg:DI 457)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [2 parser.long_opts+0 S8 A128])) argp-parse.c:809 -1
     (nil))
(insn 444 443 445 58 (set (reg:DI 458)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [2 parser.short_opts+0 S8 A64])) argp-parse.c:809 -1
     (nil))
(insn 445 444 446 58 (set (reg:DI 459)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) argp-parse.c:809 -1
     (nil))
(insn 446 445 447 58 (set (reg:DI 38 r9)
        (reg:DI 456)) argp-parse.c:809 -1
     (nil))
(insn 447 446 448 58 (set (reg:DI 37 r8)
        (const_int 0 [0])) argp-parse.c:809 -1
     (nil))
(insn 448 447 449 58 (set (reg:DI 2 cx)
        (reg:DI 457)) argp-parse.c:809 -1
     (nil))
(insn 449 448 450 58 (set (reg:DI 1 dx)
        (reg:DI 458)) argp-parse.c:809 -1
     (nil))
(insn 450 449 451 58 (set (reg:DI 4 si)
        (reg:DI 459)) argp-parse.c:809 -1
     (nil))
(insn 451 450 452 58 (set (reg:SI 5 di)
        (reg:SI 109 [ D.11146 ])) argp-parse.c:809 -1
     (nil))
(call_insn 452 451 453 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_getopt_long_only_r") [flags 0x41]  <function_decl 0x2afe070d3288 _getopt_long_only_r>) [0 _getopt_long_only_r S1 A8])
            (const_int 0 [0]))) argp-parse.c:809 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_getopt_long_only_r") [flags 0x41]  <function_decl 0x2afe070d3288 _getopt_long_only_r>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 453 452 454 58 (set (reg/v:SI 160 [ opt ])
        (reg:SI 0 ax)) argp-parse.c:809 -1
     (nil))
(jump_insn 454 453 455 58 (set (pc)
        (label_ref 471)) argp-parse.c:809 -1
     (nil)
 -> 471)
(barrier 455 454 456)
(code_label 456 455 457 59 144 "" [1 uses])
(note 457 456 458 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 59 (parallel [
            (set (reg:DI 460)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:813 -1
     (nil))
(insn 459 458 460 59 (parallel [
            (set (reg:DI 461)
                (plus:DI (reg:DI 460)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:813 -1
     (nil))
(insn 460 459 461 59 (set (reg:DI 462)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [2 parser.long_opts+0 S8 A128])) argp-parse.c:813 -1
     (nil))
(insn 461 460 462 59 (set (reg:DI 463)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [2 parser.short_opts+0 S8 A64])) argp-parse.c:813 -1
     (nil))
(insn 462 461 463 59 (set (reg:DI 464)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) argp-parse.c:813 -1
     (nil))
(insn 463 462 464 59 (set (reg:DI 38 r9)
        (reg:DI 461)) argp-parse.c:813 -1
     (nil))
(insn 464 463 465 59 (set (reg:DI 37 r8)
        (const_int 0 [0])) argp-parse.c:813 -1
     (nil))
(insn 465 464 466 59 (set (reg:DI 2 cx)
        (reg:DI 462)) argp-parse.c:813 -1
     (nil))
(insn 466 465 467 59 (set (reg:DI 1 dx)
        (reg:DI 463)) argp-parse.c:813 -1
     (nil))
(insn 467 466 468 59 (set (reg:DI 4 si)
        (reg:DI 464)) argp-parse.c:813 -1
     (nil))
(insn 468 467 469 59 (set (reg:SI 5 di)
        (reg:SI 109 [ D.11146 ])) argp-parse.c:813 -1
     (nil))
(call_insn 469 468 470 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_getopt_long_r") [flags 0x41]  <function_decl 0x2afe070d31b0 _getopt_long_r>) [0 _getopt_long_r S1 A8])
            (const_int 0 [0]))) argp-parse.c:813 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_getopt_long_r") [flags 0x41]  <function_decl 0x2afe070d31b0 _getopt_long_r>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 470 469 471 59 (set (reg/v:SI 160 [ opt ])
        (reg:SI 0 ax)) argp-parse.c:813 -1
     (nil))
(code_label 471 470 472 60 145 "" [1 uses])
(note 472 471 473 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 60 (set (reg:SI 348 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -200 [0xffffffffffffff38])) [3 parser.opt_data.optind+0 S4 A64])) argp-parse.c:817 -1
     (nil))
(insn 474 473 475 60 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
        (reg:SI 348 [ D.11146 ])) argp-parse.c:817 -1
     (nil))
(insn 475 474 476 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ opt ])
            (const_int -1 [0xffffffffffffffff]))) argp-parse.c:819 -1
     (nil))
(jump_insn 476 475 477 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 518)
            (pc))) argp-parse.c:819 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 518)
(note 477 476 478 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 61 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])
        (const_int 0 [0])) argp-parse.c:823 -1
     (nil))
(insn 479 478 480 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 348 [ D.11146 ])
            (const_int 1 [0x1]))) argp-parse.c:824 -1
     (nil))
(jump_insn 480 479 481 61 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 485)
            (pc))) argp-parse.c:824 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 485)
(note 481 480 482 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 62 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 483 482 484 62 (set (pc)
        (label_ref 1159)) -1
     (nil)
 -> 1159)
(barrier 484 483 485)
(code_label 485 484 486 63 147 "" [1 uses])
(note 486 485 487 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 488 63 (set (reg:DI 465 [ D.11142 ])
        (sign_extend:DI (reg:SI 348 [ D.11146 ]))) argp-parse.c:825 -1
     (nil))
(insn 488 487 489 63 (set (reg/f:DI 466)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) argp-parse.c:825 -1
     (nil))
(insn 489 488 490 63 (set (reg/v/f:DI 166 [ __s2 ])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 465 [ D.11142 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 466))
                (const_int -8 [0xfffffffffffffff8])) [2 *_159+0 S8 A64])) argp-parse.c:825 -1
     (nil))
(insn 490 489 491 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 166 [ __s2 ]) [0 *__s2_160+0 S1 A8])
            (const_int 45 [0x2d]))) argp-parse.c:825 -1
     (nil))
(jump_insn 491 490 492 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) argp-parse.c:825 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 496)
(note 492 491 493 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 64 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 494 493 495 64 (set (pc)
        (label_ref 1159)) -1
     (nil)
 -> 1159)
(barrier 495 494 496)
(code_label 496 495 497 65 148 "" [1 uses])
(note 497 496 498 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 166 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_160 + 1B]+0 S1 A8])
            (const_int 45 [0x2d]))) argp-parse.c:825 -1
     (nil))
(jump_insn 499 498 500 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 504)
            (pc))) argp-parse.c:825 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 504)
(note 500 499 501 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 66 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 502 501 503 66 (set (pc)
        (label_ref 1159)) -1
     (nil)
 -> 1159)
(barrier 503 502 504)
(code_label 504 503 505 67 149 "" [1 uses])
(note 505 504 506 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 166 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_160 + 2B]+0 S1 A8])
            (const_int 0 [0]))) argp-parse.c:825 -1
     (nil))
(jump_insn 507 506 508 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) argp-parse.c:825 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 512)
(note 508 507 509 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 68 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 510 509 511 68 (set (pc)
        (label_ref 1159)) -1
     (nil)
 -> 1159)
(barrier 511 510 512)
(code_label 512 511 513 69 150 "" [1 uses])
(note 513 512 514 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 69 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -76 [0xffffffffffffffb4])) [3 parser.state.quoted+0 S4 A32])
        (reg:SI 348 [ D.11146 ])) argp-parse.c:831 -1
     (nil))
(insn 515 514 516 69 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(jump_insn 516 515 517 69 (set (pc)
        (label_ref 1159)) -1
     (nil)
 -> 1159)
(barrier 517 516 518)
(code_label 518 517 519 70 146 "" [1 uses])
(note 519 518 520 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ opt ])
            (const_int 63 [0x3f]))) argp-parse.c:833 -1
     (nil))
(jump_insn 521 520 522 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1167)
            (pc))) argp-parse.c:833 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1167)
(note 522 521 523 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 524 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])) [3 parser.opt_data.optopt+0 S4 A128])
            (const_int -1 [0xffffffffffffffff]))) argp-parse.c:833 -1
     (nil))
(jump_insn 524 523 527 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1374)
            (pc))) argp-parse.c:833 612 {*jcc_1}
     (int_list:REG_BR_PROB 8392 (nil))
 -> 1374)
(note 527 524 525 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(jump_insn 525 527 526 72 (set (pc)
        (label_ref 649)) argp-parse.c:833 -1
     (nil)
 -> 649)
(barrier 526 525 1163)
(code_label 1163 526 528 73 215 "" [1 uses])
(note 528 1163 529 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 73 (set (reg:SI 468)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])) argp-parse.c:849 -1
     (nil))
(insn 530 529 531 73 (parallel [
            (set (reg:SI 467 [ D.11143 ])
                (and:SI (reg:SI 468)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:849 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 531 530 532 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 467 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:849 -1
     (nil))
(jump_insn 532 531 533 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1202)
            (pc))) argp-parse.c:849 -1
     (int_list:REG_BR_PROB 6700 (nil))
 -> 1202)
(note 533 532 534 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 74 (parallel [
            (set (reg:SI 174 [ D.11146 ])
                (plus:SI (reg:SI 348 [ D.11146 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:859 -1
     (nil))
(insn 535 534 536 74 (set (reg:DI 469 [ D.11142 ])
        (sign_extend:DI (reg:SI 348 [ D.11146 ]))) argp-parse.c:859 -1
     (nil))
(insn 536 535 537 74 (set (reg/f:DI 470)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [2 parser.state.argv+0 S8 A128])) argp-parse.c:859 -1
     (nil))
(insn 537 536 538 74 (set (reg/f:DI 291 [ D.11157 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 469 [ D.11142 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 470)) [2 *_181+0 S8 A64])) argp-parse.c:859 -1
     (nil))
(insn 538 537 18 74 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [2 parser.opt_data.optarg+0 S8 A64])
        (reg/f:DI 291 [ D.11157 ])) argp-parse.c:859 -1
     (nil))
(insn 18 538 1182 74 (set (reg:SI 348 [ D.11146 ])
        (reg:SI 174 [ D.11146 ])) argp-parse.c:859 -1
     (nil))
(code_label 1182 18 539 75 218 "" [1 uses])
(note 539 1182 540 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 75 (parallel [
            (set (reg:SI 180 [ D.11146 ])
                (plus:SI (reg:SI 348 [ D.11146 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:681 -1
     (nil))
(insn 541 540 542 75 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
        (reg:SI 180 [ D.11146 ])) argp-parse.c:681 -1
     (nil))
(insn 542 541 543 75 (set (reg/v/f:DI 196 [ group ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:687 -1
     (nil))
(insn 543 542 544 75 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 196 [ group ])
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64]))) argp-parse.c:688 -1
     (nil))
(jump_insn 544 543 545 75 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 548)
            (pc))) argp-parse.c:688 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 548)
(note 545 544 19 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 19 545 546 76 (set (reg:SI 179 [ D.11146 ])
        (reg:SI 180 [ D.11146 ])) argp-parse.c:681 -1
     (nil))
(jump_insn 546 19 547 76 (set (pc)
        (label_ref 552)) argp-parse.c:688 -1
     (nil)
 -> 552)
(barrier 547 546 548)
(code_label 548 547 549 77 155 "" [2 uses])
(note 549 548 25 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 25 549 550 77 (set (reg:QI 304 [ D.11148 ])
        (const_int 1 [0x1])) argp-parse.c:775 -1
     (nil))
(jump_insn 550 25 551 77 (set (pc)
        (label_ref 819)) argp-parse.c:688 -1
     (nil)
 -> 819)
(barrier 551 550 552)
(code_label 552 551 553 78 156 "" [2 uses])
(note 553 552 554 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 78 (parallel [
            (set (reg:SI 471)
                (plus:SI (reg:SI 179 [ D.11146 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:691 -1
     (nil))
(insn 555 554 556 78 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
        (reg:SI 471)) argp-parse.c:691 -1
     (nil))
(insn 556 555 557 78 (set (reg/f:DI 184 [ D.11154 ])
        (mem/f:DI (reg/v/f:DI 196 [ group ]) [2 MEM[base: group_390, offset: 0B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 557 556 558 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 184 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 558 557 559 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1331)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1331)
(note 559 558 560 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 561 79 (set (reg/f:DI 185 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_390, offset: 64B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 561 560 562 79 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 185 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 562 561 563 79 (set (reg/f:DI 186 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 48 [0x30])) [2 MEM[base: group_390, offset: 48B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 563 562 564 79 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 186 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 564 563 565 79 (set (reg/f:DI 187 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 56 [0x38])) [2 MEM[base: group_390, offset: 56B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 565 564 566 79 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 187 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 566 565 567 79 (set (reg:SI 188 [ D.11143 ])
        (mem:SI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 24 [0x18])) [3 MEM[base: group_390, offset: 24B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 567 566 568 79 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 188 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 568 567 569 79 (parallel [
            (set (reg:DI 472)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 569 568 570 79 (parallel [
            (set (reg:DI 473)
                (plus:DI (reg:DI 472)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 570 569 571 79 (set (reg:DI 1 dx)
        (reg:DI 473)) argp-parse.c:257 -1
     (nil))
(insn 571 570 572 79 (set (reg:DI 4 si)
        (reg/f:DI 291 [ D.11157 ])) argp-parse.c:257 -1
     (nil))
(insn 572 571 573 79 (set (reg:SI 5 di)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(call_insn 573 572 574 79 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 184 [ D.11154 ]) [0 *_199 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 574 573 575 79 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 575 574 576 79 (set (reg/f:DI 189 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 576 575 577 79 (set (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_390, offset: 64B]+0 S8 A64])
        (reg/f:DI 189 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(insn 577 576 578 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:695 -1
     (nil))
(jump_insn 578 577 579 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1235)
            (pc))) argp-parse.c:695 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1235)
(note 579 578 580 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 580 579 581 80 (set (reg/f:DI 319 [ D.11154 ])
        (mem/f:DI (reg/v/f:DI 196 [ group ]) [2 MEM[base: group_390, offset: 0B]+0 S8 A64])) -1
     (nil))
(insn 581 580 582 80 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:698 -1
     (nil))
(insn 582 581 583 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 319 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 583 582 584 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1378)
            (pc))) argp-parse.c:250 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1378)
(note 584 583 585 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 81 (set (reg/f:DI 191 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_390, offset: 64B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 586 585 587 81 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 191 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 587 586 588 81 (set (reg/f:DI 192 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 48 [0x30])) [2 MEM[base: group_390, offset: 48B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 588 587 589 81 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 192 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 589 588 590 81 (set (reg/f:DI 193 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 56 [0x38])) [2 MEM[base: group_390, offset: 56B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 590 589 591 81 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 193 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 591 590 592 81 (set (reg:SI 194 [ D.11143 ])
        (mem:SI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 24 [0x18])) [3 MEM[base: group_390, offset: 24B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 592 591 593 81 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 194 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 593 592 594 81 (parallel [
            (set (reg:DI 474)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 594 593 595 81 (parallel [
            (set (reg:DI 475)
                (plus:DI (reg:DI 474)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 595 594 596 81 (set (reg:DI 1 dx)
        (reg:DI 475)) argp-parse.c:257 -1
     (nil))
(insn 596 595 597 81 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 597 596 598 81 (set (reg:SI 5 di)
        (const_int 16777222 [0x1000006])) argp-parse.c:257 -1
     (nil))
(call_insn 598 597 599 81 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 319 [ D.11154 ]) [0 *_615 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 599 598 600 81 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 600 599 601 81 (set (reg/f:DI 195 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 601 600 602 81 (set (mem/f:DI (plus:DI (reg/v/f:DI 196 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_390, offset: 64B]+0 S8 A64])
        (reg/f:DI 195 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(insn 602 601 603 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) -1
     (nil))
(insn 603 602 604 81 (set (reg:QI 476)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 604 603 1375 81 (set (reg:QI 344 [ D.11148 ])
        (reg:QI 476)) -1
     (nil))
(jump_insn 1375 604 1376 81 (set (pc)
        (label_ref 605)) -1
     (nil)
 -> 605)
(barrier 1376 1375 1378)
(code_label 1378 1376 1377 82 238 "" [1 uses])
(note 1377 1378 20 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 20 1377 605 82 (set (reg:QI 344 [ D.11148 ])
        (const_int 1 [0x1])) argp-parse.c:250 -1
     (nil))
(code_label 605 20 606 83 160 "" [2 uses])
(note 606 605 607 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 608 83 (parallel [
            (set (reg/v/f:DI 196 [ group ])
                (plus:DI (reg/v/f:DI 196 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:689 -1
     (nil))
(insn 608 607 609 83 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 196 [ group ])
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64]))) argp-parse.c:688 -1
     (nil))
(insn 609 608 610 83 (set (reg:QI 478 [ D.11148 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) argp-parse.c:688 -1
     (nil))
(insn 610 609 611 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 478 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:688 -1
     (nil))
(jump_insn 611 610 1409 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) argp-parse.c:688 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 618)
(note 1409 611 612 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 612 1409 613 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 344 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:688 -1
     (nil))
(jump_insn 613 612 614 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) argp-parse.c:688 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 618)
(note 614 613 615 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 85 (set (reg:SI 179 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) -1
     (nil))
(jump_insn 616 615 617 85 (set (pc)
        (label_ref 552)) -1
     (nil)
 -> 552)
(barrier 617 616 618)
(code_label 618 617 619 86 161 "" [2 uses])
(note 619 618 620 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:704 -1
     (nil))
(jump_insn 621 620 624 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 630)
            (pc))) argp-parse.c:704 -1
     (int_list:REG_BR_PROB 6387 (nil))
 -> 630)
(note 624 621 622 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(jump_insn 622 624 623 87 (set (pc)
        (label_ref 812)) argp-parse.c:704 -1
     (nil)
 -> 812)
(barrier 623 622 1238)
(code_label 1238 623 625 88 224 "" [1 uses])
(note 625 1238 626 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 627 88 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) -1
     (nil))
(insn 627 626 628 88 (set (reg:SI 348 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) -1
     (nil))
(jump_insn 628 627 629 88 (set (pc)
        (label_ref 634)) -1
     (nil)
 -> 634)
(barrier 629 628 630)
(code_label 630 629 631 89 162 "" [1 uses])
(note 631 630 632 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 89 (set (reg:SI 109 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64])) argp-parse.c:710 -1
     (nil))
(insn 633 632 23 89 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
        (reg:SI 109 [ D.11146 ])) argp-parse.c:710 -1
     (nil))
(insn 23 633 634 89 (set (reg:SI 348 [ D.11146 ])
        (reg:SI 109 [ D.11146 ])) argp-parse.c:710 -1
     (nil))
(code_label 634 23 635 90 164 "" [1 uses])
(note 635 634 636 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 180 [ D.11146 ])
            (reg:SI 348 [ D.11146 ]))) argp-parse.c:712 -1
     (nil))
(jump_insn 637 636 638 90 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 644)
            (pc))) argp-parse.c:712 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 644)
(note 638 637 639 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 639 638 640 91 (parallel [
            (set (reg:SI 479 [ D.11146 ])
                (minus:SI (reg:SI 348 [ D.11146 ])
                    (reg:SI 180 [ D.11146 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:716 -1
     (nil))
(insn 640 639 641 91 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 196 [ group ])
                        (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct group *)group_795 + -72B].args_processed+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 196 [ group ])
                            (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct group *)group_795 + -72B].args_processed+0 S4 A64])
                    (reg:SI 479 [ D.11146 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:716 -1
     (nil))
(insn 641 640 642 91 (set (reg:SI 351 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])) -1
     (nil))
(jump_insn 642 641 643 91 (set (pc)
        (label_ref:DI 1313)) 654 {jump}
     (nil)
 -> 1313)
(barrier 643 642 644)
(code_label 644 643 645 92 165 "" [1 uses])
(note 645 644 646 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 43 92 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])
        (const_int 1 [0x1])) argp-parse.c:719 -1
     (nil))
(insn 43 646 647 92 (set (reg:SI 351 [ D.11146 ])
        (const_int 1 [0x1])) argp-parse.c:719 -1
     (nil))
(jump_insn 647 43 648 92 (set (pc)
        (label_ref:DI 1313)) argp-parse.c:719 654 {jump}
     (nil)
 -> 1313)
(barrier 648 647 649)
(code_label 649 648 650 93 153 "" [2 uses])
(note 650 649 651 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 93 (set (reg:DI 480)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -216 [0xffffffffffffff28])) [2 parser.short_opts+0 S8 A64])) argp-parse.c:741 -1
     (nil))
(insn 652 651 653 93 (set (reg:SI 4 si)
        (reg/v:SI 160 [ opt ])) argp-parse.c:741 -1
     (nil))
(insn 653 652 654 93 (set (reg:DI 5 di)
        (reg:DI 480)) argp-parse.c:741 -1
     (nil))
(call_insn/i 654 653 655 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2afe06e07d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) argp-parse.c:741 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2afe06e07d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 655 654 656 93 (set (reg/v/f:DI 206 [ short_index ])
        (reg:DI 0 ax)) argp-parse.c:741 -1
     (nil))
(insn 656 655 657 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 206 [ short_index ])
            (const_int 0 [0]))) argp-parse.c:743 -1
     (nil))
(jump_insn 657 656 658 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) argp-parse.c:743 -1
     (int_list:REG_BR_PROB 2638 (nil))
 -> 751)
(note 658 657 659 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 94 (set (reg/v/f:DI 216 [ group ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:744 -1
     (nil))
(insn 660 659 661 94 (set (reg/f:DI 328 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:744 -1
     (nil))
(insn 661 660 662 94 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 216 [ group ])
            (reg/f:DI 328 [ D.11153 ]))) argp-parse.c:744 -1
     (nil))
(jump_insn 662 661 663 94 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) argp-parse.c:744 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 751)
(note 663 662 664 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 95 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 206 [ short_index ])
            (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                    (const_int 16 [0x10])) [2 group_236->short_end+0 S8 A64]))) argp-parse.c:745 -1
     (nil))
(jump_insn 665 664 668 95 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 672)
            (pc))) argp-parse.c:745 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 672)
(note 668 665 666 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(jump_insn 666 668 667 96 (set (pc)
        (label_ref 701)) argp-parse.c:745 -1
     (nil)
 -> 701)
(barrier 667 666 706)
(code_label 706 667 669 97 172 "" [1 uses])
(note 669 706 670 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 97 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 206 [ short_index ])
            (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                    (const_int 16 [0x10])) [2 MEM[base: group_248, offset: 16B]+0 S8 A64]))) argp-parse.c:745 -1
     (nil))
(jump_insn 671 670 672 97 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 703)
            (pc))) argp-parse.c:745 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 703)
(code_label 672 671 673 98 168 "" [1 uses])
(note 673 672 674 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 98 (set (reg/f:DI 210 [ D.11154 ])
        (mem/f:DI (reg/v/f:DI 216 [ group ]) [2 group_630->parser+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 675 674 676 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 210 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 676 675 677 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 751)
(note 677 676 678 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 99 (set (reg/f:DI 209 [ D.11157 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [2 parser.opt_data.optarg+0 S8 A64])) argp-parse.c:747 -1
     (nil))
(insn 679 678 680 99 (set (reg/f:DI 481)
        (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                (const_int 64 [0x40])) [2 group_630->hook+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 680 679 681 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 481)) argp-parse.c:253 -1
     (nil))
(insn 681 680 682 99 (set (reg/f:DI 482)
        (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                (const_int 48 [0x30])) [2 group_630->input+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 682 681 683 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 482)) argp-parse.c:254 -1
     (nil))
(insn 683 682 684 99 (set (reg/f:DI 483)
        (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                (const_int 56 [0x38])) [2 group_630->child_inputs+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 684 683 685 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 483)) argp-parse.c:255 -1
     (nil))
(insn 685 684 686 99 (set (reg:SI 484)
        (mem:SI (plus:DI (reg/v/f:DI 216 [ group ])
                (const_int 24 [0x18])) [3 group_630->args_processed+0 S4 A64])) argp-parse.c:256 -1
     (nil))
(insn 686 685 687 99 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 484)) argp-parse.c:256 -1
     (nil))
(insn 687 686 688 99 (parallel [
            (set (reg:DI 485)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 688 687 689 99 (parallel [
            (set (reg:DI 486)
                (plus:DI (reg:DI 485)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 689 688 690 99 (set (reg:DI 1 dx)
        (reg:DI 486)) argp-parse.c:257 -1
     (nil))
(insn 690 689 691 99 (set (reg:DI 4 si)
        (reg/f:DI 209 [ D.11157 ])) argp-parse.c:257 -1
     (nil))
(insn 691 690 692 99 (set (reg:SI 5 di)
        (reg/v:SI 160 [ opt ])) argp-parse.c:257 -1
     (nil))
(call_insn 692 691 693 99 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 210 [ D.11154 ]) [0 *_241 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 693 692 694 99 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 694 693 695 99 (set (reg/f:DI 487)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 695 694 696 99 (set (mem/f:DI (plus:DI (reg/v/f:DI 216 [ group ])
                (const_int 64 [0x40])) [2 group_630->hook+0 S8 A64])
        (reg/f:DI 487)) argp-parse.c:258 -1
     (nil))
(insn 696 695 697 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:760 -1
     (nil))
(jump_insn 697 696 700 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 751)
            (pc))) argp-parse.c:760 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 751)
(note 700 697 698 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(jump_insn 698 700 699 100 (set (pc)
        (label_ref 1194)) argp-parse.c:760 -1
     (nil)
 -> 1194)
(barrier 699 698 701)
(code_label 701 699 702 101 169 "" [1 uses])
(note 702 701 703 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(code_label 703 702 704 102 170 "" [1 uses])
(note 704 703 705 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 707 102 (parallel [
            (set (reg/v/f:DI 216 [ group ])
                (plus:DI (reg/v/f:DI 216 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:744 -1
     (nil))
(insn 707 705 708 102 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 216 [ group ])
            (reg/f:DI 328 [ D.11153 ]))) argp-parse.c:744 -1
     (nil))
(jump_insn 708 707 711 102 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 706)
            (pc))) argp-parse.c:744 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 706)
(note 711 708 709 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(jump_insn 709 711 710 103 (set (pc)
        (label_ref 751)) argp-parse.c:744 -1
     (nil)
 -> 751)
(barrier 710 709 1175)
(code_label 1175 710 712 104 217 "" [1 uses])
(note 712 1175 713 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 104 (set (reg:DI 488 [ D.11142 ])
        (sign_extend:DI (reg:SI 308 [ D.11146 ]))) argp-parse.c:756 -1
     (nil))
(insn 714 713 715 104 (set (reg:DI 489)
        (reg:DI 488 [ D.11142 ])) argp-parse.c:756 -1
     (nil))
(insn 715 714 716 104 (parallel [
            (set (reg:DI 490)
                (ashift:DI (reg:DI 489)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:756 -1
     (nil))
(insn 716 715 717 104 (parallel [
            (set (reg:DI 491 [ D.11142 ])
                (plus:DI (reg:DI 490)
                    (reg:DI 488 [ D.11142 ])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:756 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 488 [ D.11142 ])
            (const_int 9 [0x9]))
        (nil)))
(insn 717 716 718 104 (parallel [
            (set (reg:DI 492)
                (ashift:DI (reg:DI 491 [ D.11142 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:756 -1
     (nil))
(insn 718 717 719 104 (set (reg:DI 491 [ D.11142 ])
        (reg:DI 492)) argp-parse.c:756 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 488 [ D.11142 ])
            (const_int 72 [0x48]))
        (nil)))
(insn 719 718 720 104 (parallel [
            (set (reg:DI 493 [ D.11151 ])
                (plus:DI (reg:DI 491 [ D.11142 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:756 -1
     (nil))
(insn 720 719 721 104 (set (reg/f:DI 494)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:756 -1
     (nil))
(insn 721 720 722 104 (parallel [
            (set (reg/f:DI 225 [ D.11153 ])
                (plus:DI (reg:DI 493 [ D.11151 ])
                    (reg/f:DI 494)))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:756 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
            (reg:DI 493 [ D.11151 ]))
        (nil)))
(insn 722 721 723 104 (set (reg/f:DI 226 [ D.11154 ])
        (mem/f:DI (reg/f:DI 225 [ D.11153 ]) [2 _258->parser+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 723 722 724 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 226 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 724 723 725 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 770)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 770)
(note 725 724 726 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 105 (set (reg/f:DI 217 [ D.11157 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [2 parser.opt_data.optarg+0 S8 A64])) argp-parse.c:756 -1
     (nil))
(insn 727 726 728 105 (set (reg/f:DI 495)
        (mem/f:DI (plus:DI (reg/f:DI 225 [ D.11153 ])
                (const_int 64 [0x40])) [2 _258->hook+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 728 727 729 105 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 495)) argp-parse.c:253 -1
     (nil))
(insn 729 728 730 105 (set (reg/f:DI 496)
        (mem/f:DI (plus:DI (reg/f:DI 225 [ D.11153 ])
                (const_int 48 [0x30])) [2 _258->input+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 730 729 731 105 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 496)) argp-parse.c:254 -1
     (nil))
(insn 731 730 732 105 (set (reg/f:DI 497)
        (mem/f:DI (plus:DI (reg/f:DI 225 [ D.11153 ])
                (const_int 56 [0x38])) [2 _258->child_inputs+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 732 731 733 105 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 497)) argp-parse.c:255 -1
     (nil))
(insn 733 732 734 105 (set (reg:SI 498)
        (mem:SI (plus:DI (reg/f:DI 225 [ D.11153 ])
                (const_int 24 [0x18])) [3 _258->args_processed+0 S4 A64])) argp-parse.c:256 -1
     (nil))
(insn 734 733 735 105 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 498)) argp-parse.c:256 -1
     (nil))
(insn 735 734 736 105 (parallel [
            (set (reg:DI 499)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 736 735 737 105 (parallel [
            (set (reg:DI 500)
                (plus:DI (reg:DI 499)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 737 736 738 105 (parallel [
            (set (reg:SI 501 [ D.11146 ])
                (ashift:SI (reg/v:SI 160 [ opt ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 738 737 739 105 (parallel [
            (set (reg:SI 502 [ D.11146 ])
                (ashiftrt:SI (reg:SI 501 [ D.11146 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 739 738 740 105 (set (reg:DI 1 dx)
        (reg:DI 500)) argp-parse.c:257 -1
     (nil))
(insn 740 739 741 105 (set (reg:DI 4 si)
        (reg/f:DI 217 [ D.11157 ])) argp-parse.c:257 -1
     (nil))
(insn 741 740 742 105 (set (reg:SI 5 di)
        (reg:SI 502 [ D.11146 ])) argp-parse.c:257 -1
     (nil))
(call_insn 742 741 743 105 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 226 [ D.11154 ]) [0 *_259 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 743 742 744 105 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 744 743 745 105 (set (reg/f:DI 503)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 745 744 746 105 (set (mem/f:DI (plus:DI (reg/f:DI 225 [ D.11153 ])
                (const_int 64 [0x40])) [2 _258->hook+0 S8 A64])
        (reg/f:DI 503)) argp-parse.c:258 -1
     (nil))
(insn 746 745 747 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:760 -1
     (nil))
(jump_insn 747 746 750 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 770)
            (pc))) argp-parse.c:760 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 770)
(note 750 747 748 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(jump_insn 748 750 749 106 (set (pc)
        (label_ref 1194)) argp-parse.c:760 -1
     (nil)
 -> 1194)
(barrier 749 748 751)
(code_label 751 749 752 107 167 "" [5 uses])
(note 752 751 753 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 753 752 754 107 (set (reg/f:DI 504)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [2 parser.argp+0 S8 A128])) argp-parse.c:768 -1
     (nil))
(insn 754 753 755 107 (set (reg:DI 505)
        (mem/f:DI (plus:DI (reg/f:DI 504)
                (const_int 48 [0x30])) [2 _267->argp_domain+0 S8 A64])) argp-parse.c:768 -1
     (nil))
(insn 755 754 756 107 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) argp-parse.c:768 -1
     (nil))
(insn 756 755 757 107 (set (reg:DI 4 si)
        (symbol_ref:DI ("bad_key_err.10098") [flags 0x2]  <var_decl 0x2afe07406990 bad_key_err>)) argp-parse.c:768 -1
     (nil))
(insn 757 756 758 107 (set (reg:DI 5 di)
        (reg:DI 505)) argp-parse.c:768 -1
     (nil))
(call_insn 758 757 759 107 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) argp-parse.c:768 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 759 758 760 107 (set (reg/f:DI 234 [ D.11157 ])
        (reg:DI 0 ax)) argp-parse.c:768 -1
     (nil))
(insn 760 759 761 107 (parallel [
            (set (reg:DI 506)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:768 -1
     (nil))
(insn 761 760 762 107 (parallel [
            (set (reg:DI 507)
                (plus:DI (reg:DI 506)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:768 -1
     (nil))
(insn 762 761 763 107 (set (reg:DI 2 cx)
        (reg/f:DI 234 [ D.11157 ])) argp-parse.c:768 -1
     (nil))
(insn 763 762 764 107 (set (reg:SI 1 dx)
        (reg/v:SI 160 [ opt ])) argp-parse.c:768 -1
     (nil))
(insn 764 763 765 107 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2afe0766ab40 *.LC8>)) argp-parse.c:768 -1
     (nil))
(insn 765 764 766 107 (set (reg:DI 5 di)
        (reg:DI 507)) argp-parse.c:768 -1
     (nil))
(insn 766 765 767 107 (set (reg:QI 0 ax)
        (const_int 0 [0])) argp-parse.c:768 -1
     (nil))
(call_insn 767 766 768 107 (call (mem:QI (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>) [0 __argp_error S1 A8])
        (const_int 0 [0])) argp-parse.c:768 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 768 767 769 107 (set (pc)
        (label_ref 1185)) argp-parse.c:768 -1
     (nil)
 -> 1185)
(barrier 769 768 770)
(code_label 770 769 771 108 173 "" [2 uses])
(note 771 770 772 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 108 (set (reg/v/f:DI 236 [ long_opt ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -208 [0xffffffffffffff30])) [2 parser.long_opts+0 S8 A128])) argp-parse.c:772 -1
     (nil))
(insn 773 772 774 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ opt ])
            (mem:SI (plus:DI (reg/v/f:DI 236 [ long_opt ])
                    (const_int 24 [0x18])) [3 long_opt_271->val+0 S4 A64]))) argp-parse.c:773 -1
     (nil))
(jump_insn 774 773 775 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 787)
            (pc))) argp-parse.c:773 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 787)
(note 775 774 776 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 236 [ long_opt ]) [2 long_opt_271->name+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:773 -1
     (nil))
(jump_insn 777 776 778 109 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 787)
            (pc))) argp-parse.c:773 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 787)
(note 778 777 784 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(code_label 784 778 779 111 176 "" [1 uses])
(note 779 784 780 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 111 (parallel [
            (set (reg/v/f:DI 236 [ long_opt ])
                (plus:DI (reg/v/f:DI 236 [ long_opt ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:774 -1
     (nil))
(insn 781 780 782 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ opt ])
            (mem:SI (plus:DI (reg/v/f:DI 236 [ long_opt ])
                    (const_int 24 [0x18])) [3 MEM[base: long_opt_273, offset: 24B]+0 S4 A32]))) argp-parse.c:773 -1
     (nil))
(jump_insn 782 781 783 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 787)
            (pc))) argp-parse.c:773 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 787)
(note 783 782 785 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 785 783 786 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 236 [ long_opt ]) [2 MEM[base: long_opt_273, offset: 0B]+0 S8 A64])
            (const_int 0 [0]))) argp-parse.c:773 -1
     (nil))
(jump_insn 786 785 787 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 784)
            (pc))) argp-parse.c:773 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 784)
(code_label 787 786 788 113 175 "" [3 uses])
(note 788 787 789 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 113 (set (reg/f:DI 508)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [2 parser.argp+0 S8 A128])) argp-parse.c:775 -1
     (nil))
(insn 790 789 791 113 (set (reg:DI 509)
        (mem/f:DI (plus:DI (reg/f:DI 508)
                (const_int 48 [0x30])) [2 _276->argp_domain+0 S8 A64])) argp-parse.c:775 -1
     (nil))
(insn 791 790 792 113 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) argp-parse.c:775 -1
     (nil))
(insn 792 791 793 113 (set (reg:DI 4 si)
        (symbol_ref:DI ("bad_key_err.10098") [flags 0x2]  <var_decl 0x2afe07406990 bad_key_err>)) argp-parse.c:775 -1
     (nil))
(insn 793 792 794 113 (set (reg:DI 5 di)
        (reg:DI 509)) argp-parse.c:775 -1
     (nil))
(call_insn 794 793 795 113 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) argp-parse.c:775 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 795 794 796 113 (set (reg/f:DI 241 [ D.11157 ])
        (reg:DI 0 ax)) argp-parse.c:775 -1
     (nil))
(insn 796 795 797 113 (set (reg/f:DI 242 [ D.11144 ])
        (mem/f:DI (reg/v/f:DI 236 [ long_opt ]) [2 long_opt_678->name+0 S8 A64])) argp-parse.c:776 -1
     (nil))
(insn 797 796 798 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 242 [ D.11144 ])
            (const_int 0 [0]))) argp-parse.c:775 -1
     (nil))
(jump_insn 798 797 799 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 800)
            (pc))) argp-parse.c:775 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 800)
(note 799 798 24 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 24 799 800 114 (set (reg/f:DI 242 [ D.11144 ])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2afe0766a990 *.LC7>)) argp-parse.c:775 -1
     (nil))
(code_label 800 24 801 115 177 "" [1 uses])
(note 801 800 802 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 802 801 803 115 (parallel [
            (set (reg:DI 510)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:775 -1
     (nil))
(insn 803 802 804 115 (parallel [
            (set (reg:DI 511)
                (plus:DI (reg:DI 510)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:775 -1
     (nil))
(insn 804 803 805 115 (set (reg:DI 2 cx)
        (reg/f:DI 241 [ D.11157 ])) argp-parse.c:775 -1
     (nil))
(insn 805 804 806 115 (set (reg:DI 1 dx)
        (reg/f:DI 242 [ D.11144 ])) argp-parse.c:775 -1
     (nil))
(insn 806 805 807 115 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2afe0766abd0 *.LC9>)) argp-parse.c:775 -1
     (nil))
(insn 807 806 808 115 (set (reg:DI 5 di)
        (reg:DI 511)) argp-parse.c:775 -1
     (nil))
(insn 808 807 809 115 (set (reg:QI 0 ax)
        (const_int 0 [0])) argp-parse.c:775 -1
     (nil))
(call_insn 809 808 810 115 (call (mem:QI (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>) [0 __argp_error S1 A8])
        (const_int 0 [0])) argp-parse.c:775 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_error") [flags 0x41]  <function_decl 0x2afe073d3ca8 __argp_error>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 810 809 811 115 (set (pc)
        (label_ref 1185)) argp-parse.c:775 -1
     (nil)
 -> 1185)
(barrier 811 810 812)
(code_label 812 811 813 116 163 "" [1 uses])
(note 813 812 814 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 814 813 815 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:869 -1
     (nil))
(jump_insn 815 814 818 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 548)
            (pc))) argp-parse.c:869 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 548)
(note 818 815 816 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(jump_insn 816 818 817 117 (set (pc)
        (label_ref:DI 1338)) argp-parse.c:869 654 {jump}
     (nil)
 -> 1338)
(barrier 817 816 819)
(code_label 819 817 820 118 157 "" [2 uses])
(note 820 819 821 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 304 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:586 -1
     (nil))
(jump_insn 822 821 825 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1202)
            (pc))) argp-parse.c:586 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 1202)
(note 825 822 823 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(jump_insn 823 825 824 119 (set (pc)
        (label_ref 995)) argp-parse.c:586 -1
     (nil)
 -> 995)
(barrier 824 823 1205)
(code_label 1205 824 826 120 220 "" [1 uses])
(note 826 1205 827 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 827 826 828 120 (set (reg/v/f:DI 245 [ group ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:596 -1
     (nil))
(insn 828 827 829 120 (set (reg/f:DI 332 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:597 -1
     (nil))
(insn 829 828 830 120 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 245 [ group ])
            (reg/f:DI 332 [ D.11153 ]))) argp-parse.c:596 -1
     (nil))
(jump_insn 830 829 831 120 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1257)
            (pc))) argp-parse.c:596 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1257)
(note 831 830 832 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 832 831 27 121 (parallel [
            (set (reg:DI 321 [ ivtmp.156 ])
                (plus:DI (reg/v/f:DI 245 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 27 832 833 121 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:596 -1
     (nil))
(jump_insn 833 27 834 121 (set (pc)
        (label_ref 837)) -1
     (nil)
 -> 837)
(barrier 834 833 1393)
(code_label 1393 834 1392 122 242 "" [1 uses])
(note 1392 1393 26 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 26 1392 869 122 (set (reg/v:SI 87 [ err ])
        (const_int 7 [0x7])) argp-parse.c:262 -1
     (nil))
(code_label 869 26 835 123 184 "" [2 uses])
(note 835 869 836 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 836 835 837 123 (parallel [
            (set (reg:DI 321 [ ivtmp.156 ])
                (plus:DI (reg:DI 321 [ ivtmp.156 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 837 836 838 124 180 "" [1 uses])
(note 838 837 839 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 839 838 840 124 (set (reg/f:DI 144 [ D.11149 ])
        (reg:DI 321 [ ivtmp.156 ])) -1
     (nil))
(insn 840 839 841 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 144 [ D.11149 ])
                    (const_int -48 [0xffffffffffffffd0])) [3 MEM[base: _123, offset: -48B]+0 S4 A32])
            (const_int 0 [0]))) argp-parse.c:599 -1
     (nil))
(jump_insn 841 840 842 124 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 863)
            (pc))) argp-parse.c:599 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 863)
(note 842 841 843 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 125 (set (reg/f:DI 247 [ D.11154 ])
        (mem/f:DI (plus:DI (reg/f:DI 144 [ D.11149 ])
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[base: _123, offset: -72B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 844 843 845 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 247 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 845 844 846 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1244)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1244)
(note 846 845 847 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 126 (set (reg/f:DI 248 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 144 [ D.11149 ])
                (const_int -8 [0xfffffffffffffff8])) [2 MEM[base: _123, offset: -8B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 848 847 849 126 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 248 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 849 848 850 126 (set (reg/f:DI 249 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 144 [ D.11149 ])
                (const_int -24 [0xffffffffffffffe8])) [2 MEM[base: _123, offset: -24B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 850 849 851 126 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 249 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 851 850 852 126 (set (reg/f:DI 250 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/f:DI 144 [ D.11149 ])
                (const_int -16 [0xfffffffffffffff0])) [2 MEM[base: _123, offset: -16B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 852 851 853 126 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 250 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 853 852 854 126 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (const_int 0 [0])) argp-parse.c:256 -1
     (nil))
(insn 854 853 855 126 (parallel [
            (set (reg:DI 512)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 855 854 856 126 (parallel [
            (set (reg:DI 513)
                (plus:DI (reg:DI 512)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 856 855 857 126 (set (reg:DI 1 dx)
        (reg:DI 513)) argp-parse.c:257 -1
     (nil))
(insn 857 856 858 126 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 858 857 859 126 (set (reg:SI 5 di)
        (const_int 16777218 [0x1000002])) argp-parse.c:257 -1
     (nil))
(call_insn 859 858 860 126 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 247 [ D.11154 ]) [0 *_294 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 860 859 861 126 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 861 860 862 126 (set (reg/f:DI 251 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 862 861 863 126 (set (mem/f:DI (plus:DI (reg/f:DI 144 [ D.11149 ])
                (const_int -8 [0xfffffffffffffff8])) [2 MEM[base: _123, offset: -8B]+0 S8 A64])
        (reg/f:DI 251 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(code_label 863 862 864 127 181 "" [1 uses])
(note 864 863 865 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 127 (set (reg/f:DI 252 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:597 -1
     (nil))
(insn 866 865 867 127 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 144 [ D.11149 ])
            (reg/f:DI 252 [ D.11153 ]))) argp-parse.c:596 -1
     (nil))
(jump_insn 867 866 868 127 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 881)
            (pc))) argp-parse.c:596 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 881)
(note 868 867 870 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 870 868 871 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:597 -1
     (nil))
(insn 871 870 872 128 (set (reg:QI 515 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:597 -1
     (nil))
(insn 872 871 873 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 515 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:597 -1
     (nil))
(jump_insn 873 872 1410 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 869)
            (pc))) argp-parse.c:597 -1
     (int_list:REG_BR_PROB 4735 (nil))
 -> 869)
(note 1410 873 874 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 874 1410 875 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:597 -1
     (nil))
(insn 875 874 876 129 (set (reg:QI 517 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:597 -1
     (nil))
(insn 876 875 877 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 517 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:597 -1
     (nil))
(jump_insn 877 876 880 129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 869)
            (pc))) argp-parse.c:597 -1
     (int_list:REG_BR_PROB 8993 (nil))
 -> 869)
(note 880 877 878 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(jump_insn 878 880 879 130 (set (pc)
        (label_ref 1265)) argp-parse.c:597 -1
     (nil)
 -> 1265)
(barrier 879 878 881)
(code_label 881 879 882 131 183 "" [1 uses])
(note 882 881 883 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 131 (parallel [
            (set (reg/v/f:DI 256 [ group ])
                (plus:DI (reg/f:DI 252 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:601 -1
     (nil))
(insn 884 883 885 131 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 256 [ group ])
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128]))) argp-parse.c:601 -1
     (nil))
(jump_insn 885 884 886 131 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 941)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 941)
(note 886 885 887 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 888 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 888 887 889 132 (set (reg:QI 519 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 889 888 890 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 519 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(jump_insn 890 889 1411 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1251)
            (pc))) argp-parse.c:602 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1251)
(note 1411 890 891 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 891 1411 892 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:602 -1
     (nil))
(insn 892 891 893 133 (set (reg:QI 521 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 893 892 894 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 521 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(jump_insn 894 893 1412 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1341)
            (pc))) argp-parse.c:602 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 1341)
(note 1412 894 1251 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(code_label 1251 1412 896 135 225 "" [3 uses])
(note 896 1251 897 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 897 896 898 135 (parallel [
            (set (reg:DI 320 [ ivtmp.146 ])
                (plus:DI (reg/v/f:DI 256 [ group ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 898 897 899 135 (set (pc)
        (label_ref 902)) -1
     (nil)
 -> 902)
(barrier 899 898 929)
(code_label 929 899 900 136 191 "" [3 uses])
(note 900 929 901 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 136 (parallel [
            (set (reg:DI 320 [ ivtmp.146 ])
                (plus:DI (reg:DI 320 [ ivtmp.146 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 902 901 903 137 189 "" [1 uses])
(note 903 902 904 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 904 903 905 137 (set (reg/f:DI 350 [ D.11149 ])
        (reg:DI 320 [ ivtmp.146 ])) -1
     (nil))
(insn 905 904 906 137 (set (reg/f:DI 258 [ D.11154 ])
        (mem/f:DI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 72 [0x48])) [2 MEM[base: _761, offset: 72B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 906 905 907 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 258 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 907 906 908 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1274)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1274)
(note 908 907 909 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 909 908 910 138 (set (reg/f:DI 259 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 136 [0x88])) [2 MEM[base: _761, offset: 136B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 910 909 911 138 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 259 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 911 910 912 138 (set (reg/f:DI 260 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 120 [0x78])) [2 MEM[base: _761, offset: 120B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 912 911 913 138 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 260 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 913 912 914 138 (set (reg/f:DI 261 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 128 [0x80])) [2 MEM[base: _761, offset: 128B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 914 913 915 138 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 261 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 915 914 916 138 (set (reg:SI 262 [ D.11143 ])
        (mem:SI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 96 [0x60])) [3 MEM[base: _761, offset: 96B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 916 915 917 138 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 262 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 917 916 918 138 (parallel [
            (set (reg:DI 522)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 918 917 919 138 (parallel [
            (set (reg:DI 523)
                (plus:DI (reg:DI 522)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 919 918 920 138 (set (reg:DI 1 dx)
        (reg:DI 523)) argp-parse.c:257 -1
     (nil))
(insn 920 919 921 138 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 921 920 922 138 (set (reg:SI 5 di)
        (const_int 16777217 [0x1000001])) argp-parse.c:257 -1
     (nil))
(call_insn 922 921 923 138 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 258 [ D.11154 ]) [0 *_309 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 923 922 924 138 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 924 923 925 138 (set (reg/f:DI 263 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 925 924 926 138 (set (mem/f:DI (plus:DI (reg/f:DI 350 [ D.11149 ])
                (const_int 136 [0x88])) [2 MEM[base: _761, offset: 136B]+0 S8 A64])
        (reg/f:DI 263 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(insn 926 925 927 138 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
            (reg/f:DI 350 [ D.11149 ]))) argp-parse.c:601 -1
     (nil))
(jump_insn 927 926 928 138 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 941)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 941)
(note 928 927 930 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 930 928 931 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 931 930 932 139 (set (reg:QI 525 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 932 931 933 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 525 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(jump_insn 933 932 1413 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 929)
            (pc))) argp-parse.c:602 -1
     (int_list:REG_BR_PROB 4678 (nil))
 -> 929)
(note 1413 933 934 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 934 1413 935 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:602 -1
     (nil))
(insn 935 934 936 140 (set (reg:QI 527 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(insn 936 935 937 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 527 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:602 -1
     (nil))
(jump_insn 937 936 940 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 929)
            (pc))) argp-parse.c:602 -1
     (int_list:REG_BR_PROB 8790 (nil))
 -> 929)
(note 940 937 938 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(jump_insn 938 940 939 141 (set (pc)
        (label_ref 1341)) argp-parse.c:602 -1
     (nil)
 -> 1341)
(barrier 939 938 941)
(code_label 941 939 942 142 186 "" [2 uses])
(note 942 941 943 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 943 942 944 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:606 -1
     (nil))
(jump_insn 944 943 1270 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1212)
            (pc))) argp-parse.c:606 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1212)
(code_label 1270 944 945 143 227 "" [1 uses])
(note 945 1270 946 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 362 [ end_index ])
            (const_int 0 [0]))) argp-parse.c:610 -1
     (nil))
(jump_insn 947 946 1387 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 988)
            (pc))) argp-parse.c:610 -1
     (int_list:REG_BR_PROB 4589 (nil))
 -> 988)
(note 1387 947 1388 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1388 1387 1389 144 (set (pc)
        (label_ref 1214)) -1
     (nil)
 -> 1214)
(barrier 1389 1388 1391)
(code_label 1391 1389 1390 145 241 "" [1 uses])
(note 1390 1391 28 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 28 1390 1404 145 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:607 -1
     (nil))
(jump_insn 1404 28 1405 145 (set (pc)
        (label_ref 1214)) -1
     (nil)
 -> 1214)
(barrier 1405 1404 1407)
(code_label 1407 1405 1406 146 245 "" [1 uses])
(note 1406 1407 29 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 29 1406 1214 146 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:610 -1
     (nil))
(code_label 1214 29 948 147 222 "" [3 uses])
(note 948 1214 949 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 949 948 950 147 (set (reg:SI 528)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) argp-parse.c:611 -1
     (nil))
(insn 950 949 951 147 (set (mem:SI (reg/v/f:DI 362 [ end_index ]) [3 *end_index_42(D)+0 S4 A32])
        (reg:SI 528)) argp-parse.c:611 -1
     (nil))
(jump_insn 951 950 952 147 (set (pc)
        (label_ref 988)) argp-parse.c:611 -1
     (nil)
 -> 988)
(barrier 952 951 1208)
(code_label 1208 952 953 148 221 "" [1 uses])
(note 953 1208 954 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 362 [ end_index ])
            (const_int 0 [0]))) argp-parse.c:613 -1
     (nil))
(jump_insn 955 954 956 148 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 960)
            (pc))) argp-parse.c:613 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 960)
(note 956 955 957 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 149 (set (mem:SI (reg/v/f:DI 362 [ end_index ]) [3 *end_index_42(D)+0 S4 A32])
        (reg:SI 243 [ D.11146 ])) argp-parse.c:615 -1
     (nil))
(jump_insn 958 957 959 149 (set (pc)
        (label_ref 1283)) argp-parse.c:615 -1
     (nil)
 -> 1283)
(barrier 959 958 960)
(code_label 960 959 961 150 194 "" [1 uses])
(note 961 960 962 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 962 961 963 150 (set (reg:SI 530)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])) argp-parse.c:619 -1
     (nil))
(insn 963 962 964 150 (parallel [
            (set (reg:SI 529 [ D.11143 ])
                (and:SI (reg:SI 530)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:619 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -84 [0xffffffffffffffac])) [3 parser.state.flags+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 964 963 965 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 529 [ D.11143 ])
            (const_int 0 [0]))) argp-parse.c:619 -1
     (nil))
(jump_insn 965 964 966 150 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1316)
            (pc))) argp-parse.c:619 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1316)
(note 966 965 967 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 967 966 968 151 (set (reg/f:DI 347 [ D.11160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])) argp-parse.c:620 -1
     (nil))
(insn 968 967 969 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 347 [ D.11160 ])
            (const_int 0 [0]))) argp-parse.c:620 -1
     (nil))
(jump_insn 969 968 970 151 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1321)
            (pc))) argp-parse.c:620 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1321)
(note 970 969 971 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 971 970 972 152 (set (reg/f:DI 271 [ D.11157 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 parser.state.name+0 S8 A128])) argp-parse.c:621 -1
     (nil))
(insn 972 971 973 152 (set (reg/f:DI 531)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -224 [0xffffffffffffff20])) [2 parser.argp+0 S8 A128])) argp-parse.c:622 -1
     (nil))
(insn 973 972 974 152 (set (reg:DI 532)
        (mem/f:DI (plus:DI (reg/f:DI 531)
                (const_int 48 [0x30])) [2 _327->argp_domain+0 S8 A64])) argp-parse.c:622 -1
     (nil))
(insn 974 973 975 152 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) argp-parse.c:622 -1
     (nil))
(insn 975 974 976 152 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2afe0766ac60 *.LC10>)) argp-parse.c:622 -1
     (nil))
(insn 976 975 977 152 (set (reg:DI 5 di)
        (reg:DI 532)) argp-parse.c:622 -1
     (nil))
(call_insn 977 976 978 152 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) argp-parse.c:622 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2afe070d36c0 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 978 977 979 152 (set (reg/f:DI 274 [ D.11157 ])
        (reg:DI 0 ax)) argp-parse.c:622 -1
     (nil))
(insn 979 978 980 152 (set (reg:DI 533)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])) argp-parse.c:621 -1
     (nil))
(insn 980 979 981 152 (set (reg:DI 1 dx)
        (reg/f:DI 271 [ D.11157 ])) argp-parse.c:621 -1
     (nil))
(insn 981 980 982 152 (set (reg:DI 4 si)
        (reg/f:DI 274 [ D.11157 ])) argp-parse.c:621 -1
     (nil))
(insn 982 981 983 152 (set (reg:DI 5 di)
        (reg:DI 533)) argp-parse.c:621 -1
     (nil))
(insn 983 982 984 152 (set (reg:QI 0 ax)
        (const_int 0 [0])) argp-parse.c:621 -1
     (nil))
(call_insn 984 983 985 152 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_fprintf") [flags 0x43]  <function_decl 0x2afe06e0e948 fprintf>) [0 __builtin_fprintf S1 A8])
            (const_int 0 [0]))) argp-parse.c:621 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_fprintf") [flags 0x43]  <function_decl 0x2afe06e0e948 fprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 985 984 986 152 (set (reg/f:DI 347 [ D.11160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])) -1
     (nil))
(jump_insn 986 985 987 152 (set (pc)
        (label_ref:DI 1321)) 654 {jump}
     (nil)
 -> 1321)
(barrier 987 986 988)
(code_label 988 987 989 153 193 "" [2 uses])
(note 989 988 990 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 990 989 991 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:632 -1
     (nil))
(jump_insn 991 990 1338 153 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1283)
            (pc))) argp-parse.c:632 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1283)
(code_label 1338 991 992 154 232 "" [4 uses])
(note 992 1338 993 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:635 -1
     (nil))
(jump_insn 994 993 995 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1005)
            (pc))) argp-parse.c:635 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1005)
(code_label 995 994 996 155 178 "" [1 uses])
(note 996 995 997 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 997 996 1321 155 (set (reg/f:DI 347 [ D.11160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])) -1
     (nil))
(code_label 1321 997 998 156 231 "" [3 uses])
(note 998 1321 999 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 999 998 1000 156 (parallel [
            (set (reg:DI 534)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:638 -1
     (nil))
(insn 1000 999 1001 156 (parallel [
            (set (reg:DI 535)
                (plus:DI (reg:DI 534)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:638 -1
     (nil))
(insn 1001 1000 1002 156 (set (reg:SI 1 dx)
        (const_int 260 [0x104])) argp-parse.c:638 -1
     (nil))
(insn 1002 1001 1003 156 (set (reg:DI 4 si)
        (reg/f:DI 347 [ D.11160 ])) argp-parse.c:638 -1
     (nil))
(insn 1003 1002 1004 156 (set (reg:DI 5 di)
        (reg:DI 535)) argp-parse.c:638 -1
     (nil))
(call_insn 1004 1003 30 156 (call (mem:QI (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>) [0 __argp_state_help S1 A8])
        (const_int 0 [0])) argp-parse.c:638 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argp_state_help") [flags 0x41]  <function_decl 0x2afe073d3948 __argp_state_help>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 30 1004 1005 156 (set (reg/v:SI 87 [ err ])
        (const_int 7 [0x7])) argp-parse.c:638 -1
     (nil))
(code_label 1005 30 1006 157 199 "" [2 uses])
(note 1006 1005 1007 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1007 1006 1008 157 (set (reg/v/f:DI 282 [ group ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:642 -1
     (nil))
(insn 1008 1007 1009 157 (set (reg/f:DI 305 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:642 -1
     (nil))
(insn 1009 1008 1010 157 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 282 [ group ])
            (reg/f:DI 305 [ D.11153 ]))) argp-parse.c:642 -1
     (nil))
(jump_insn 1010 1009 1011 157 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1015)
            (pc))) argp-parse.c:642 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1015)
(note 1011 1010 1012 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1012 1011 35 158 (parallel [
            (set (reg/f:DI 356 [ D.11153 ])
                (plus:DI (reg/f:DI 305 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 35 1012 36 158 (set (reg/v/f:DI 207 [ group ])
        (reg/f:DI 356 [ D.11153 ])) argp-parse.c:642 -1
     (nil))
(insn 36 35 1013 158 (set (reg/f:DI 198 [ D.11153 ])
        (reg/v/f:DI 282 [ group ])) argp-parse.c:642 -1
     (nil))
(jump_insn 1013 36 1014 158 (set (pc)
        (label_ref 1101)) -1
     (nil)
 -> 1101)
(barrier 1014 1013 1015)
(code_label 1015 1014 1016 159 200 "" [1 uses])
(note 1016 1015 1042 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(code_label 1042 1016 1017 160 203 "" [1 uses])
(note 1017 1042 1018 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1018 1017 1019 160 (set (reg/f:DI 276 [ D.11154 ])
        (mem/f:DI (reg/v/f:DI 282 [ group ]) [2 MEM[base: group_627, offset: 0B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 1019 1018 1020 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 276 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 1020 1019 1021 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1038)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1038)
(note 1021 1020 1022 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1022 1021 1023 161 (set (reg/f:DI 277 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 282 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_627, offset: 64B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 1023 1022 1024 161 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 277 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 1024 1023 1025 161 (set (reg/f:DI 278 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 282 [ group ])
                (const_int 48 [0x30])) [2 MEM[base: group_627, offset: 48B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 1025 1024 1026 161 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 278 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 1026 1025 1027 161 (set (reg/f:DI 279 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 282 [ group ])
                (const_int 56 [0x38])) [2 MEM[base: group_627, offset: 56B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 1027 1026 1028 161 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 279 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 1028 1027 1029 161 (set (reg:SI 280 [ D.11143 ])
        (mem:SI (plus:DI (reg/v/f:DI 282 [ group ])
                (const_int 24 [0x18])) [3 MEM[base: group_627, offset: 24B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 1029 1028 1030 161 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 280 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 1030 1029 1031 161 (parallel [
            (set (reg:DI 536)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1031 1030 1032 161 (parallel [
            (set (reg:DI 537)
                (plus:DI (reg:DI 536)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1032 1031 1033 161 (set (reg:DI 1 dx)
        (reg:DI 537)) argp-parse.c:257 -1
     (nil))
(insn 1033 1032 1034 161 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 1034 1033 1035 161 (set (reg:SI 5 di)
        (const_int 16777221 [0x1000005])) argp-parse.c:257 -1
     (nil))
(call_insn 1035 1034 1036 161 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 276 [ D.11154 ]) [0 *_337 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1036 1035 1037 161 (set (reg/f:DI 281 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 1037 1036 1038 161 (set (mem/f:DI (plus:DI (reg/v/f:DI 282 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_627, offset: 64B]+0 S8 A64])
        (reg/f:DI 281 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(code_label 1038 1037 1039 162 202 "" [1 uses])
(note 1039 1038 1040 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1040 1039 1041 162 (parallel [
            (set (reg/v/f:DI 282 [ group ])
                (plus:DI (reg/v/f:DI 282 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:642 -1
     (nil))
(insn 1041 1040 1043 162 (set (reg/f:DI 283 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:642 -1
     (nil))
(insn 1043 1041 1044 162 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 282 [ group ])
            (reg/f:DI 283 [ D.11153 ]))) argp-parse.c:642 -1
     (nil))
(jump_insn 1044 1043 1045 162 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1042)
            (pc))) argp-parse.c:642 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1042)
(note 1045 1044 1046 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1046 1045 1047 163 (set (reg/f:DI 198 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) -1
     (nil))
(insn 1047 1046 33 163 (parallel [
            (set (reg/f:DI 355 [ D.11153 ])
                (plus:DI (reg/f:DI 283 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 33 1047 1048 163 (set (reg/v/f:DI 207 [ group ])
        (reg/f:DI 355 [ D.11153 ])) argp-parse.c:642 -1
     (nil))
(jump_insn 1048 33 1049 163 (set (pc)
        (label_ref 1101)) -1
     (nil)
 -> 1101)
(barrier 1049 1048 1079)
(code_label 1079 1049 1050 164 206 "" [3 uses])
(note 1050 1079 1051 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1051 1050 1292 164 (parallel [
            (set (reg:DI 317 [ ivtmp.137 ])
                (plus:DI (reg:DI 317 [ ivtmp.137 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1292 1051 1052 165 228 "" [1 uses])
(note 1052 1292 1053 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1053 1052 1054 165 (set (reg/f:DI 353 [ D.11149 ])
        (reg:DI 317 [ ivtmp.137 ])) -1
     (nil))
(insn 1054 1053 1055 165 (set (reg/f:DI 285 [ D.11154 ])
        (mem/f:DI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 72 [0x48])) [2 MEM[base: _774, offset: 72B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 1055 1054 1056 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 285 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 1056 1055 1057 165 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1295)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1295)
(note 1057 1056 1058 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 166 (set (reg/f:DI 286 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 136 [0x88])) [2 MEM[base: _774, offset: 136B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 1059 1058 1060 166 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 286 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 1060 1059 1061 166 (set (reg/f:DI 287 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 120 [0x78])) [2 MEM[base: _774, offset: 120B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 1061 1060 1062 166 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 287 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 1062 1061 1063 166 (set (reg/f:DI 288 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 128 [0x80])) [2 MEM[base: _774, offset: 128B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 1063 1062 1064 166 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 288 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 1064 1063 1065 166 (set (reg:SI 289 [ D.11143 ])
        (mem:SI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 96 [0x60])) [3 MEM[base: _774, offset: 96B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 1065 1064 1066 166 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 289 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 1066 1065 1067 166 (parallel [
            (set (reg:DI 538)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1067 1066 1068 166 (parallel [
            (set (reg:DI 539)
                (plus:DI (reg:DI 538)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1068 1067 1069 166 (set (reg:DI 1 dx)
        (reg:DI 539)) argp-parse.c:257 -1
     (nil))
(insn 1069 1068 1070 166 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 1070 1069 1071 166 (set (reg:SI 5 di)
        (const_int 16777220 [0x1000004])) argp-parse.c:257 -1
     (nil))
(call_insn 1071 1070 1072 166 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 285 [ D.11154 ]) [0 *_349 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1072 1071 1073 166 (set (reg/v:SI 87 [ err ])
        (reg:SI 0 ax)) argp-parse.c:257 -1
     (nil))
(insn 1073 1072 1074 166 (set (reg/f:DI 290 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 1074 1073 1075 166 (set (mem/f:DI (plus:DI (reg/f:DI 353 [ D.11149 ])
                (const_int 136 [0x88])) [2 MEM[base: _774, offset: 136B]+0 S8 A64])
        (reg/f:DI 290 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(insn 1075 1074 1076 166 (set (reg/f:DI 198 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:652 -1
     (nil))
(insn 1076 1075 1077 166 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 198 [ D.11153 ])
            (reg/f:DI 353 [ D.11149 ]))) argp-parse.c:651 -1
     (nil))
(jump_insn 1077 1076 1078 166 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1093)
            (pc))) argp-parse.c:651 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1093)
(note 1078 1077 1080 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1078 1081 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:652 -1
     (nil))
(insn 1081 1080 1082 167 (set (reg:QI 541 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:652 -1
     (nil))
(insn 1082 1081 1083 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 541 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:652 -1
     (nil))
(jump_insn 1083 1082 1414 167 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1079)
            (pc))) argp-parse.c:652 -1
     (int_list:REG_BR_PROB 4678 (nil))
 -> 1079)
(note 1414 1083 1084 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1414 1085 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:652 -1
     (nil))
(insn 1085 1084 1086 168 (set (reg:QI 543 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argp-parse.c:652 -1
     (nil))
(insn 1086 1085 1087 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 543 [ D.11148 ])
            (const_int 0 [0]))) argp-parse.c:652 -1
     (nil))
(jump_insn 1087 1086 1088 168 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1079)
            (pc))) argp-parse.c:652 -1
     (int_list:REG_BR_PROB 8790 (nil))
 -> 1079)
(note 1088 1087 1089 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 1090 169 (set (reg/f:DI 544)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) -1
     (nil))
(insn 1090 1089 1091 169 (parallel [
            (set (reg/f:DI 354 [ D.11153 ])
                (plus:DI (reg/f:DI 544)
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(jump_insn 1091 1090 1092 169 (set (pc)
        (label_ref 1099)) -1
     (nil)
 -> 1099)
(barrier 1092 1091 1093)
(code_label 1093 1092 1094 170 205 "" [1 uses])
(note 1094 1093 1095 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1095 1094 1096 170 (set (reg/f:DI 545)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) -1
     (nil))
(insn 1096 1095 1097 170 (parallel [
            (set (reg/f:DI 354 [ D.11153 ])
                (plus:DI (reg/f:DI 545)
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(insn 1097 1096 1098 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:655 -1
     (nil))
(jump_insn 1098 1097 1394 170 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1382)
            (pc))) argp-parse.c:655 612 {*jcc_1}
     (int_list:REG_BR_PROB 4330 (nil))
 -> 1382)
(note 1394 1098 1395 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1395 1394 1396 171 (set (pc)
        (label_ref 1099)) -1
     (nil)
 -> 1099)
(barrier 1396 1395 1398)
(code_label 1398 1396 1397 172 243 "" [1 uses])
(note 1397 1398 31 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 31 1397 32 172 (set (reg/f:DI 354 [ D.11153 ])
        (reg/v/f:DI 339 [ group ])) argp-parse.c:651 -1
     (nil))
(insn 32 31 1099 172 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:651 -1
     (nil))
(code_label 1099 32 1100 173 207 "" [2 uses])
(note 1100 1099 34 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 34 1100 1101 173 (set (reg/v/f:DI 207 [ group ])
        (reg/f:DI 354 [ D.11153 ])) argp-parse.c:642 -1
     (nil))
(code_label 1101 34 1102 174 201 "" [2 uses])
(note 1102 1101 1103 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 1103 1102 1104 174 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 198 [ D.11153 ])
            (reg/v/f:DI 207 [ group ]))) argp-parse.c:660 -1
     (nil))
(jump_insn 1104 1103 1399 174 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1133)
            (pc))) argp-parse.c:660 -1
     (int_list:REG_BR_PROB 920 (nil))
 -> 1133)
(note 1399 1104 1400 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1400 1399 1401 175 (set (pc)
        (label_ref 1305)) -1
     (nil)
 -> 1305)
(barrier 1401 1400 1403)
(code_label 1403 1401 1402 176 244 "" [1 uses])
(note 1402 1403 37 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 37 1402 1305 176 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:656 -1
     (nil))
(code_label 1305 37 1105 177 229 "" [1 uses])
(note 1105 1305 1130 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(code_label 1130 1105 1106 178 211 "" [1 uses])
(note 1106 1130 1107 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 1107 1106 1108 178 (set (reg/f:DI 295 [ D.11154 ])
        (mem/f:DI (reg/v/f:DI 207 [ group ]) [2 MEM[base: group_624, offset: 0B]+0 S8 A64])) argp-parse.c:250 -1
     (nil))
(insn 1108 1107 1109 178 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 295 [ D.11154 ])
            (const_int 0 [0]))) argp-parse.c:250 -1
     (nil))
(jump_insn 1109 1108 1110 178 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1127)
            (pc))) argp-parse.c:250 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1127)
(note 1110 1109 1111 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 179 (set (reg/f:DI 296 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_624, offset: 64B]+0 S8 A64])) argp-parse.c:253 -1
     (nil))
(insn 1112 1111 1113 179 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])
        (reg/f:DI 296 [ D.11149 ])) argp-parse.c:253 -1
     (nil))
(insn 1113 1112 1114 179 (set (reg/f:DI 297 [ D.11149 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ group ])
                (const_int 48 [0x30])) [2 MEM[base: group_624, offset: 48B]+0 S8 A64])) argp-parse.c:254 -1
     (nil))
(insn 1114 1113 1115 179 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [2 MEM[(struct argp_state *)&parser + 112B].input+0 S8 A64])
        (reg/f:DI 297 [ D.11149 ])) argp-parse.c:254 -1
     (nil))
(insn 1115 1114 1116 179 (set (reg/f:DI 298 [ D.11150 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 207 [ group ])
                (const_int 56 [0x38])) [2 MEM[base: group_624, offset: 56B]+0 S8 A64])) argp-parse.c:255 -1
     (nil))
(insn 1116 1115 1117 179 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [2 MEM[(struct argp_state *)&parser + 112B].child_inputs+0 S8 A128])
        (reg/f:DI 298 [ D.11150 ])) argp-parse.c:255 -1
     (nil))
(insn 1117 1116 1118 179 (set (reg:SI 299 [ D.11143 ])
        (mem:SI (plus:DI (reg/v/f:DI 207 [ group ])
                (const_int 24 [0x18])) [3 MEM[base: group_624, offset: 24B]+0 S4 A32])) argp-parse.c:256 -1
     (nil))
(insn 1118 1117 1119 179 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(struct argp_state *)&parser + 112B].arg_num+0 S4 A128])
        (reg:SI 299 [ D.11143 ])) argp-parse.c:256 -1
     (nil))
(insn 1119 1118 1120 179 (parallel [
            (set (reg:DI 546)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1120 1119 1121 179 (parallel [
            (set (reg:DI 547)
                (plus:DI (reg:DI 546)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:257 -1
     (nil))
(insn 1121 1120 1122 179 (set (reg:DI 1 dx)
        (reg:DI 547)) argp-parse.c:257 -1
     (nil))
(insn 1122 1121 1123 179 (set (reg:DI 4 si)
        (const_int 0 [0])) argp-parse.c:257 -1
     (nil))
(insn 1123 1122 1124 179 (set (reg:SI 5 di)
        (const_int 16777223 [0x1000007])) argp-parse.c:257 -1
     (nil))
(call_insn 1124 1123 1125 179 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 295 [ D.11154 ]) [0 *_366 S1 A8])
            (const_int 0 [0]))) argp-parse.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1125 1124 1126 179 (set (reg/f:DI 300 [ D.11149 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [2 MEM[(struct argp_state *)&parser + 112B].hook+0 S8 A64])) argp-parse.c:258 -1
     (nil))
(insn 1126 1125 1127 179 (set (mem/f:DI (plus:DI (reg/v/f:DI 207 [ group ])
                (const_int 64 [0x40])) [2 MEM[base: group_624, offset: 64B]+0 S8 A64])
        (reg/f:DI 300 [ D.11149 ])) argp-parse.c:258 -1
     (nil))
(code_label 1127 1126 1128 180 210 "" [1 uses])
(note 1128 1127 1129 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1129 1128 1131 180 (parallel [
            (set (reg/v/f:DI 207 [ group ])
                (plus:DI (reg/v/f:DI 207 [ group ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:660 -1
     (nil))
(insn 1131 1129 1132 180 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 207 [ group ])
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128]))) argp-parse.c:660 -1
     (nil))
(jump_insn 1132 1131 1133 180 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1130)
            (pc))) argp-parse.c:660 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1130)
(code_label 1133 1132 1134 181 209 "" [1 uses])
(note 1134 1133 1135 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 1135 1134 1136 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 7 [0x7]))) argp-parse.c:663 -1
     (nil))
(jump_insn 1136 1135 1137 181 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1386)
            (pc))) argp-parse.c:663 612 {*jcc_1}
     (int_list:REG_BR_PROB 4470 (nil))
 -> 1386)
(note 1137 1136 1383 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1383 1137 1384 182 (set (pc)
        (label_ref 1138)) -1
     (nil)
 -> 1138)
(barrier 1384 1383 1386)
(code_label 1386 1384 1385 183 240 "" [1 uses])
(note 1385 1386 38 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 38 1385 1138 183 (set (reg/v:SI 87 [ err ])
        (const_int 22 [0x16])) argp-parse.c:664 -1
     (nil))
(code_label 1138 38 1139 184 212 "" [2 uses])
(note 1139 1138 1140 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 1140 1139 1141 184 (set (reg:DI 548)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 parser.storage+0 S8 A128])) argp-parse.c:666 -1
     (nil))
(insn 1141 1140 1142 184 (set (reg:DI 5 di)
        (reg:DI 548)) argp-parse.c:666 -1
     (nil))
(call_insn 1142 1141 1149 184 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2afe06e26e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argp-parse.c:666 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2afe06e26e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1149 1142 1143 185 213 "" [3 uses])
(note 1143 1149 1144 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 1144 1143 1145 185 (set (reg:SI 357 [ <retval> ])
        (reg/v:SI 87 [ err ])) argp-parse.c:925 -1
     (nil))
(jump_insn 1145 1144 1146 185 (set (pc)
        (label_ref 1355)) argp-parse.c:925 -1
     (nil)
 -> 1355)
(barrier 1146 1145 1368)
(code_label 1368 1146 1367 186 235 "" [1 uses])
(note 1367 1368 40 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 40 1367 1150 186 (set (reg/v:SI 87 [ err ])
        (const_int 12 [0xc])) argp-parse.c:506 -1
     (nil))
(jump_insn 1150 40 1151 186 (set (pc)
        (label_ref 1149)) argp-parse.c:506 -1
     (nil)
 -> 1149)
(barrier 1151 1150 1152)
(code_label 1152 1151 1153 188 141 "" [2 uses])
(note 1153 1152 1154 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1154 1153 1155 188 (set (reg:SI 348 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) -1
     (nil))
(insn 1155 1154 1157 188 (set (reg:SI 351 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 parser.try_getopt+0 S4 A64])) -1
     (nil))
(jump_insn 1157 1155 1158 188 (set (pc)
        (label_ref 1156)) -1
     (nil)
 -> 1156)
(barrier 1158 1157 1159)
(code_label 1159 1158 1160 189 143 "" [7 uses])
(note 1160 1159 1161 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 1161 1160 1162 189 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 348 [ D.11146 ])
            (reg:SI 109 [ D.11146 ]))) argp-parse.c:848 -1
     (nil))
(jump_insn 1162 1161 1166 189 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1202)
            (pc))) argp-parse.c:848 -1
     (int_list:REG_BR_PROB 6700 (nil))
 -> 1202)
(note 1166 1162 1164 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1164 1166 1165 190 (set (pc)
        (label_ref 1163)) argp-parse.c:848 -1
     (nil)
 -> 1163)
(barrier 1165 1164 1167)
(code_label 1167 1165 1168 191 151 "" [1 uses])
(note 1168 1167 1169 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 1169 1168 1170 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ opt ])
            (const_int 1 [0x1]))) argp-parse.c:863 -1
     (nil))
(jump_insn 1170 1169 1171 191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1179)
            (pc))) argp-parse.c:863 -1
     (int_list:REG_BR_PROB 2524 (nil))
 -> 1179)
(note 1171 1170 1172 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 192 (parallel [
            (set (reg:SI 308 [ D.11146 ])
                (ashiftrt:SI (reg/v:SI 160 [ opt ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1173 1172 1174 192 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 308 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:735 -1
     (nil))
(jump_insn 1174 1173 1178 192 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) argp-parse.c:735 -1
     (int_list:REG_BR_PROB 4921 (nil))
 -> 649)
(note 1178 1174 1176 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1176 1178 1177 193 (set (pc)
        (label_ref 1175)) argp-parse.c:735 -1
     (nil)
 -> 1175)
(barrier 1177 1176 1179)
(code_label 1179 1177 1180 194 216 "" [1 uses])
(note 1180 1179 1181 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 1181 1180 1183 194 (set (reg/f:DI 291 [ D.11157 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [2 parser.opt_data.optarg+0 S8 A64])) -1
     (nil))
(jump_insn 1183 1181 1184 194 (set (pc)
        (label_ref 1182)) -1
     (nil)
 -> 1182)
(barrier 1184 1183 1185)
(code_label 1185 1184 1186 195 174 "" [2 uses])
(note 1186 1185 1187 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 1187 1186 1188 195 (parallel [
            (set (reg:SI 550 [ D.11161 ])
                (plus:SI (reg/v:SI 160 [ opt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1188 1187 1189 195 (parallel [
            (set (reg:SI 551 [ D.11161 ])
                (and:SI (reg:SI 550 [ D.11161 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1189 1188 1190 195 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 551 [ D.11161 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 1190 1189 1191 195 (set (reg:QI 552 [ D.11148 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 1191 1190 1192 195 (set (reg:QI 304 [ D.11148 ])
        (reg:QI 552 [ D.11148 ])) -1
     (nil))
(jump_insn 1192 1191 1193 195 (set (pc)
        (label_ref 819)) -1
     (nil)
 -> 819)
(barrier 1193 1192 1194)
(code_label 1194 1193 1195 196 171 "" [2 uses])
(note 1195 1194 1197 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 1197 1195 1198 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:920 -1
     (nil))
(jump_insn 1198 1197 1201 196 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1196)
            (pc))) argp-parse.c:920 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1196)
(note 1201 1198 1199 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1199 1201 1200 197 (set (pc)
        (label_ref 1005)) -1
     (nil)
 -> 1005)
(barrier 1200 1199 1202)
(code_label 1202 1200 1203 198 154 "" [3 uses])
(note 1203 1202 1204 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1206 198 (set (reg:SI 243 [ D.11146 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])) argp-parse.c:592 -1
     (nil))
(insn 1206 1204 1207 198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 243 [ D.11146 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [3 parser.state.argc+0 S4 A64]))) argp-parse.c:592 -1
     (nil))
(jump_insn 1207 1206 1211 198 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1205)
            (pc))) argp-parse.c:592 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1205)
(note 1211 1207 1209 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1209 1211 1210 199 (set (pc)
        (label_ref 1208)) argp-parse.c:592 -1
     (nil)
 -> 1208)
(barrier 1210 1209 1212)
(code_label 1212 1210 1213 200 192 "" [3 uses])
(note 1213 1212 1215 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 1215 1213 1216 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 362 [ end_index ])
            (const_int 0 [0]))) argp-parse.c:610 -1
     (nil))
(jump_insn 1216 1215 1219 200 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1391)
            (pc))) argp-parse.c:610 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1391)
(note 1219 1216 1217 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1217 1219 1218 201 (set (pc)
        (label_ref:DI 1283)) argp-parse.c:610 654 {jump}
     (nil)
 -> 1283)
(barrier 1218 1217 1220)
(code_label 1220 1218 1221 202 131 "" [1 uses])
(note 1221 1220 1222 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 202 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
            (reg/f:DI 325 [ D.11149 ]))) argp-parse.c:533 -1
     (nil))
(jump_insn 1223 1222 1226 202 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) argp-parse.c:533 -1
     (int_list:REG_BR_PROB 9547 (nil))
 -> 330)
(note 1226 1223 1224 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1224 1226 1225 203 (set (pc)
        (label_ref 346)) argp-parse.c:533 -1
     (nil)
 -> 346)
(barrier 1225 1224 1227)
(code_label 1227 1225 1228 204 142 "" [2 uses])
(note 1228 1227 1230 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1230 1228 1231 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 351 [ D.11146 ])
            (const_int 0 [0]))) argp-parse.c:801 -1
     (nil))
(jump_insn 1231 1230 1234 204 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1229)
            (pc))) argp-parse.c:801 -1
     (int_list:REG_BR_PROB 3334 (nil))
 -> 1229)
(note 1234 1231 1232 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1232 1234 1233 205 (set (pc)
        (label_ref 1159)) argp-parse.c:801 -1
     (nil)
 -> 1159)
(barrier 1233 1232 1235)
(code_label 1235 1233 1236 206 159 "" [1 uses])
(note 1236 1235 1237 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 1237 1236 1239 206 (parallel [
            (set (reg/v/f:DI 196 [ group ])
                (plus:DI (reg/v/f:DI 196 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:689 -1
     (nil))
(insn 1239 1237 1240 206 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ err ])
            (const_int 0 [0]))) argp-parse.c:704 -1
     (nil))
(jump_insn 1240 1239 1243 206 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1238)
            (pc))) argp-parse.c:704 -1
     (int_list:REG_BR_PROB 4603 (nil))
 -> 1238)
(note 1243 1240 1241 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1241 1243 1242 207 (set (pc)
        (label_ref:DI 1338)) argp-parse.c:704 654 {jump}
     (nil)
 -> 1338)
(barrier 1242 1241 1244)
(code_label 1244 1242 1245 208 182 "" [1 uses])
(note 1245 1244 1246 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 1246 1245 1247 208 (set (reg/f:DI 312 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:597 -1
     (nil))
(insn 1247 1246 1248 208 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 144 [ D.11149 ])
            (reg/f:DI 312 [ D.11153 ]))) argp-parse.c:596 -1
     (nil))
(jump_insn 1248 1247 1249 208 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1393)
            (pc))) argp-parse.c:596 612 {*jcc_1}
     (int_list:REG_BR_PROB 9551 (nil))
 -> 1393)
(note 1249 1248 1250 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 1250 1249 1252 209 (parallel [
            (set (reg/v/f:DI 256 [ group ])
                (plus:DI (reg/f:DI 312 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:601 -1
     (nil))
(insn 1252 1250 1253 209 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
            (reg/v/f:DI 256 [ group ]))) argp-parse.c:601 -1
     (nil))
(jump_insn 1253 1252 1256 209 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1251)
(note 1256 1253 1254 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1254 1256 1255 210 (set (pc)
        (label_ref 1212)) argp-parse.c:601 -1
     (nil)
 -> 1212)
(barrier 1255 1254 1257)
(code_label 1257 1255 1258 211 179 "" [1 uses])
(note 1258 1257 1259 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 211 (parallel [
            (set (reg/v/f:DI 256 [ group ])
                (plus:DI (reg/f:DI 332 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:601 -1
     (nil))
(insn 1260 1259 1261 211 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 245 [ group ])
            (reg/v/f:DI 256 [ group ]))) argp-parse.c:601 -1
     (nil))
(jump_insn 1261 1260 1264 211 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1251)
(note 1264 1261 1262 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1262 1264 1263 212 (set (pc)
        (label_ref 1348)) argp-parse.c:601 -1
     (nil)
 -> 1348)
(barrier 1263 1262 1265)
(code_label 1265 1263 1266 213 185 "" [1 uses])
(note 1266 1265 1267 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 1267 1266 1268 213 (parallel [
            (set (reg:DI 553 [ group ])
                (plus:DI (reg/f:DI 252 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:601 -1
     (nil))
(insn 1268 1267 1269 213 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
            (reg:DI 553 [ group ]))) argp-parse.c:601 -1
     (nil))
(jump_insn 1269 1268 1273 213 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1341)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 969 (nil))
 -> 1341)
(note 1273 1269 1271 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1271 1273 1272 214 (set (pc)
        (label_ref 1270)) argp-parse.c:601 -1
     (nil)
 -> 1270)
(barrier 1272 1271 1274)
(code_label 1274 1272 1275 215 190 "" [1 uses])
(note 1275 1274 1276 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 1276 1275 1277 215 (set (reg:CC 17 flags)
        (compare:CC (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])
            (reg/f:DI 350 [ D.11149 ]))) argp-parse.c:601 -1
     (nil))
(jump_insn 1277 1276 1280 215 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 929)
            (pc))) argp-parse.c:601 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 929)
(note 1280 1277 1278 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1278 1280 1279 216 (set (pc)
        (label_ref 1212)) argp-parse.c:601 -1
     (nil)
 -> 1212)
(barrier 1279 1278 1283)
(code_label 1283 1279 1284 218 195 "" [4 uses])
(note 1284 1283 1285 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 218 (set (reg/f:DI 338 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) argp-parse.c:651 -1
     (nil))
(insn 1286 1285 1287 218 (parallel [
            (set (reg/v/f:DI 339 [ group ])
                (plus:DI (reg/f:DI 338 [ D.11153 ])
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:651 -1
     (nil))
(insn 1287 1286 1288 218 (set (reg/f:DI 198 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:652 -1
     (nil))
(insn 1288 1287 1289 218 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 339 [ group ])
            (reg/f:DI 198 [ D.11153 ]))) argp-parse.c:651 -1
     (nil))
(jump_insn 1289 1288 1290 218 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1398)
            (pc))) argp-parse.c:651 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 1398)
(note 1290 1289 1291 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 1291 1290 1293 219 (parallel [
            (set (reg:DI 317 [ ivtmp.137 ])
                (plus:DI (reg/f:DI 338 [ D.11153 ])
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 1293 1291 1294 219 (set (pc)
        (label_ref 1292)) -1
     (nil)
 -> 1292)
(barrier 1294 1293 1295)
(code_label 1295 1294 1296 220 204 "" [1 uses])
(note 1296 1295 1297 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 1297 1296 1298 220 (set (reg/f:DI 198 [ D.11153 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -144 [0xffffffffffffff70])) [2 parser.groups+0 S8 A128])) argp-parse.c:652 -1
     (nil))
(insn 1298 1297 1299 220 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 198 [ D.11153 ])
            (reg/f:DI 353 [ D.11149 ]))) argp-parse.c:651 -1
     (nil))
(jump_insn 1299 1298 1300 220 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1079)
            (pc))) argp-parse.c:651 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1079)
(note 1300 1299 1301 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 1301 1300 1302 221 (set (reg/f:DI 554)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])) -1
     (nil))
(insn 1302 1301 42 221 (parallel [
            (set (reg/f:DI 346 [ D.11153 ])
                (plus:DI (reg/f:DI 554)
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64])
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
(insn 42 1302 1379 221 (set (reg/v/f:DI 207 [ group ])
        (reg/f:DI 346 [ D.11153 ])) argp-parse.c:651 -1
     (nil))
(jump_insn 1379 42 1380 221 (set (pc)
        (label_ref 1303)) -1
     (nil)
 -> 1303)
(barrier 1380 1379 1382)
(code_label 1382 1380 1381 222 239 "" [1 uses])
(note 1381 1382 41 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 41 1381 1303 222 (set (reg/v/f:DI 207 [ group ])
        (reg/f:DI 354 [ D.11153 ])) argp-parse.c:655 -1
     (nil))
(code_label 1303 41 1304 223 208 "" [1 uses])
(note 1304 1303 1306 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1306 1304 1307 223 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 207 [ group ])
            (reg/f:DI 198 [ D.11153 ]))) argp-parse.c:660 -1
     (nil))
(jump_insn 1307 1306 1310 223 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1403)
            (pc))) argp-parse.c:660 612 {*jcc_1}
     (int_list:REG_BR_PROB 9080 (nil))
 -> 1403)
(note 1310 1307 39 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 39 1310 1308 224 (set (reg/v:SI 87 [ err ])
        (const_int 0 [0])) argp-parse.c:656 -1
     (nil))
(jump_insn 1308 39 1309 224 (set (pc)
        (label_ref 1138)) argp-parse.c:660 -1
     (nil)
 -> 1138)
(barrier 1309 1308 1316)
(code_label 1316 1309 1317 226 196 "" [1 uses])
(note 1317 1316 1318 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 1318 1317 1322 226 (set (reg/f:DI 347 [ D.11160 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 parser.state.err_stream+0 S8 A64])) -1
     (nil))
(jump_insn 1322 1318 1323 226 (set (pc)
        (label_ref 1321)) -1
     (nil)
 -> 1321)
(barrier 1323 1322 1324)
(code_label 1324 1323 1325 228 130 "" [2 uses])
(note 1325 1324 1326 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1325 1327 228 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 325 [ D.11149 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 parser.egroup+0 S8 A64]))) argp-parse.c:533 -1
     (nil))
(jump_insn 1327 1326 1330 228 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) argp-parse.c:533 -1
     (int_list:REG_BR_PROB 9555 (nil))
 -> 330)
(note 1330 1327 1328 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1328 1330 1329 229 (set (pc)
        (label_ref 346)) argp-parse.c:533 -1
     (nil)
 -> 346)
(barrier 1329 1328 1331)
(code_label 1331 1329 1332 230 158 "" [1 uses])
(note 1332 1331 1333 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 21 230 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [3 parser.state.next+0 S4 A64])
        (reg:SI 179 [ D.11146 ])) argp-parse.c:698 -1
     (nil))
(insn 21 1333 22 230 (set (reg:QI 344 [ D.11148 ])
        (const_int 1 [0x1])) argp-parse.c:698 -1
     (nil))
(insn 22 21 1334 230 (set (reg/v:SI 87 [ err ])
        (const_int 7 [0x7])) argp-parse.c:262 -1
     (nil))
(jump_insn 1334 22 1335 230 (set (pc)
        (label_ref 605)) argp-parse.c:698 -1
     (nil)
 -> 605)
(barrier 1335 1334 1374)
(code_label 1374 1335 1373 231 237 "" [1 uses])
(note 1373 1374 44 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 44 1373 1339 231 (set (reg/v:SI 87 [ err ])
        (const_int 7 [0x7])) argp-parse.c:839 -1
     (nil))
(jump_insn 1339 44 1340 231 (set (pc)
        (label_ref 1338)) argp-parse.c:698 -1
     (nil)
 -> 1338)
(barrier 1340 1339 1341)
(code_label 1341 1340 1342 233 187 "" [3 uses])
(note 1342 1341 1343 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1343 1342 1344 233 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 362 [ end_index ])
            (const_int 0 [0]))) argp-parse.c:610 -1
     (nil))
(jump_insn 1344 1343 1347 233 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1214)
            (pc))) argp-parse.c:610 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1214)
(note 1347 1344 1345 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1345 1347 1346 234 (set (pc)
        (label_ref 1338)) argp-parse.c:610 -1
     (nil)
 -> 1338)
(barrier 1346 1345 1348)
(code_label 1348 1346 1349 235 226 "" [1 uses])
(note 1349 1348 1350 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1350 1349 1351 235 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 362 [ end_index ])
            (const_int 0 [0]))) argp-parse.c:610 -1
     (nil))
(jump_insn 1351 1350 1354 235 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1407)
            (pc))) argp-parse.c:610 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1407)
(note 1354 1351 1352 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1352 1354 1353 236 (set (pc)
        (label_ref:DI 1283)) argp-parse.c:610 654 {jump}
     (nil)
 -> 1283)
(barrier 1353 1352 1355)
(code_label 1355 1353 1358 237 114 "" [1 uses])
(note 1358 1355 1356 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1356 1358 1357 237 (set (reg/i:SI 0 ax)
        (reg:SI 357 [ <retval> ])) argp-parse.c:926 -1
     (nil))
(insn 1357 1356 0 237 (use (reg/i:SI 0 ax)) argp-parse.c:926 -1
     (nil))

;; Function __argp_input (__argp_input, funcdef_no=69, decl_uid=9904, cgraph_uid=70, symbol_order=84)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 14
Edge 3->9 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 43.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 94 [ argp ])
        (reg:DI 5 di [ argp ])) argp-parse.c:935 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ state ])
        (reg:DI 4 si [ state ])) argp-parse.c:935 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ state ])
            (const_int 0 [0]))) argp-parse.c:936 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) argp-parse.c:936 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 53)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/v/f:DI 88 [ parser ])
        (mem/f:DI (plus:DI (reg/v/f:DI 95 [ state ])
                (const_int 88 [0x58])) [2 state_3(D)->pstate+0 S8 A64])) argp-parse.c:939 -1
     (nil))
(insn 14 13 15 4 (set (reg/v/f:DI 89 [ group ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ parser ])
                (const_int 80 [0x50])) [2 parser_5->groups+0 S8 A64])) argp-parse.c:941 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 91 [ D.11179 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ parser ])
                (const_int 88 [0x58])) [2 parser_5->egroup+0 S8 A64])) argp-parse.c:941 -1
     (nil))
(insn 16 15 17 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ group ])
            (reg/f:DI 91 [ D.11179 ]))) argp-parse.c:941 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) argp-parse.c:941 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 57)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ argp ])
            (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 8 [0x8])) [2 group_6->argp+0 S8 A64]))) argp-parse.c:942 -1
     (nil))
(jump_insn 20 19 23 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) argp-parse.c:942 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 27)
(note 23 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 21 23 22 6 (set (pc)
        (label_ref 32)) argp-parse.c:942 -1
     (nil)
 -> 32)
(barrier 22 21 37)
(code_label 37 22 24 7 364 "" [1 uses])
(note 24 37 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 8 [0x8])) [2 MEM[base: group_10, offset: 8B]+0 S8 A64])
            (reg/v/f:DI 94 [ argp ]))) argp-parse.c:942 -1
     (nil))
(jump_insn 26 25 27 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) argp-parse.c:942 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 34)
(code_label 27 26 28 8 361 "" [1 uses])
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg/f:DI 87 [ D.11177 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ group ])
                (const_int 48 [0x30])) [2 group_16->input+0 S8 A64])) argp-parse.c:943 -1
     (nil))
(jump_insn 30 29 31 8 (set (pc)
        (label_ref 40)) argp-parse.c:943 -1
     (nil)
 -> 40)
(barrier 31 30 32)
(code_label 32 31 33 9 362 "" [1 uses])
(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 34 33 35 10 363 "" [1 uses])
(note 35 34 36 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 38 10 (parallel [
            (set (reg/v/f:DI 89 [ group ])
                (plus:DI (reg/v/f:DI 89 [ group ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) argp-parse.c:941 -1
     (nil))
(insn 38 36 39 10 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ group ])
            (reg/f:DI 91 [ D.11179 ]))) argp-parse.c:941 -1
     (nil))
(jump_insn 39 38 49 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) argp-parse.c:941 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 37)
(note 49 39 7 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 7 49 50 11 (set (reg/f:DI 87 [ D.11177 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(jump_insn 50 7 51 11 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
(barrier 51 50 53)
(code_label 53 51 52 12 365 "" [1 uses])
(note 52 53 6 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 6 52 54 12 (set (reg/f:DI 87 [ D.11177 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(jump_insn 54 6 55 12 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
(barrier 55 54 57)
(code_label 57 55 56 13 366 "" [1 uses])
(note 56 57 5 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 5 56 40 13 (set (reg/f:DI 87 [ D.11177 ])
        (const_int 0 [0])) argp-parse.c:946 -1
     (nil))
(code_label 40 5 41 14 360 "" [3 uses])
(note 41 40 42 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 46 14 (set (reg:DI 93 [ <retval> ])
        (reg/f:DI 87 [ D.11177 ])) -1
     (nil))
(insn 46 42 47 14 (set (reg/i:DI 0 ax)
        (reg:DI 93 [ <retval> ])) argp-parse.c:947 -1
     (nil))
(insn 47 46 0 14 (use (reg/i:DI 0 ax)) argp-parse.c:947 -1
     (nil))
