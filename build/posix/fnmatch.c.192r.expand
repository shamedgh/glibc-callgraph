
;; Function end_wpattern (end_wpattern, funcdef_no=51, decl_uid=8992, cgraph_uid=51, symbol_order=60)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28
Edge 8->10 redirected to 33
Purged non-fallthru edges from bb 35


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 14->16 redirected to 17
Forwarding edge 15->16 to 17 failed.
Deleted label in block 16.
Forwarding edge 24->25 to 4 failed.
Forwarding edge 29->30 to 4 failed.
Removing jump 154.
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 17 failed.
Forwarding edge 24->25 to 4 failed.
Forwarding edge 29->30 to 4 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 32 NOTE_INSN_DELETED)
(note 32 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 32 25 2 (set (reg/v/f:DI 133 [ pattern ])
        (reg:DI 5 di [ pattern ])) fnmatch_loop.c:1005 -1
     (nil))
(note 25 24 26 2 NOTE_INSN_FUNCTION_BEG)
(insn 26 25 34 2 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 133 [ pattern ])) fnmatch_loop.c:1006 -1
     (nil))
(jump_insn 34 26 35 2 (set (pc)
        (label_ref 37)) fnmatch_loop.c:1011 -1
     (nil)
 -> 37)
(barrier 35 34 109)
(code_label 109 35 36 4 15 "" [3 uses])
(note 36 109 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 37 36 38 5 2 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:SI 112 [ D.11477 ])
        (mem:SI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_1 + 4B]+0 S4 A32])) fnmatch_loop.c:1009 -1
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11477 ])
            (const_int 0 [0]))) fnmatch_loop.c:1009 -1
     (nil))
(jump_insn 41 40 99 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) fnmatch_loop.c:1009 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 45)
(code_label 99 41 42 6 13 "" [2 uses])
(note 42 99 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 42 43 6 (set (reg/f:DI 110 [ D.11476 ])
        (reg/v/f:DI 133 [ pattern ])) fnmatch_loop.c:1011 -1
     (nil))
(jump_insn 43 31 44 6 (set (pc)
        (label_ref 151)) -1
     (nil)
 -> 151)
(barrier 44 43 45)
(code_label 45 44 46 7 3 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11477 ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:1012 -1
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) fnmatch_loop.c:1012 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 113)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:1015 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) fnmatch_loop.c:1015 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 62)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:1016 -1
     (nil))
(call_insn 54 53 55 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1016 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 9 (set (reg/f:DI 117 [ D.11478 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1016 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.11478 ])
            (const_int 0 [0]))) fnmatch_loop.c:1016 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 163)
            (pc))) fnmatch_loop.c:1016 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 163)
(note 58 57 27 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 27 58 160 10 (set (reg:SI 111 [ D.11477 ])
        (const_int 1 [0x1])) fnmatch_loop.c:1016 -1
     (nil))
(jump_insn 160 27 161 10 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 161 160 163)
(code_label 163 161 162 11 19 "" [1 uses])
(note 162 163 28 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 28 162 59 11 (set (reg:SI 111 [ D.11477 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1016 -1
     (nil))
(code_label 59 28 60 12 7 "" [1 uses])
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 111 [ D.11477 ])) fnmatch_loop.c:1016 -1
     (nil))
(code_label 62 61 63 13 6 "" [1 uses])
(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 13 (set (reg:SI 122 [ D.11477 ])
        (mem:SI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_1 + 8B]+0 S4 A32])) fnmatch_loop.c:1020 -1
     (nil))
(insn 65 64 66 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11477 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 66 65 67 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) fnmatch_loop.c:1020 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 82)
(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 14 (set (reg:SI 136)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:1020 -1
     (nil))
(insn 69 68 70 14 (parallel [
            (set (reg:SI 135)
                (lshiftrt:SI (reg:SI 136)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1020 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 70 69 71 14 (set (reg:QI 137)
        (subreg:QI (reg:SI 135) 0)) fnmatch_loop.c:1020 -1
     (nil))
(insn 71 70 72 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137)
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 72 71 164 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 166)
            (pc))) fnmatch_loop.c:1020 612 {*jcc_1}
     (int_list:REG_BR_PROB 3600 (nil))
 -> 166)
(note 164 72 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 164 74 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11477 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:1020 -1
     (nil))
(insn 74 73 75 15 (set (reg:QI 139 [ D.11479 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(insn 75 74 76 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 139 [ D.11479 ])
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 76 75 165 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) fnmatch_loop.c:1020 -1
     (int_list:REG_BR_PROB 4375 (nil))
 -> 82)
(note 165 76 166 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(code_label 166 165 78 17 20 "" [1 uses])
(note 78 166 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 17 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 80 79 81 17 (set (pc)
        (label_ref 86)) fnmatch_loop.c:1020 -1
     (nil)
 -> 86)
(barrier 81 80 82)
(code_label 82 81 83 18 8 "" [2 uses])
(note 83 82 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 18 (parallel [
            (set (reg/v/f:DI 119 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1021 -1
     (nil))
(insn 85 84 29 18 (set (reg:SI 122 [ D.11477 ])
        (mem:SI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_1 + 12B]+0 S4 A32])) -1
     (nil))
(insn 29 85 86 18 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 119 [ pattern ])) fnmatch_loop.c:1021 -1
     (nil))
(code_label 86 29 87 19 10 "" [1 uses])
(note 87 86 88 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11477 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1023 -1
     (nil))
(jump_insn 89 88 90 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) fnmatch_loop.c:1023 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 93)
(note 90 89 91 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 20 (parallel [
            (set (reg/v/f:DI 120 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1024 -1
     (nil))
(insn 92 91 30 20 (set (reg:SI 122 [ D.11477 ])
        (mem:SI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_2 + 4B]+0 S4 A32])) -1
     (nil))
(insn 30 92 93 20 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 120 [ pattern ])) fnmatch_loop.c:1024 -1
     (nil))
(code_label 93 30 94 21 11 "" [1 uses])
(note 94 93 95 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 94 96 21 (set (pc)
        (label_ref 104)) -1
     (nil)
 -> 104)
(barrier 96 95 106)
(code_label 106 96 97 22 14 "" [1 uses])
(note 97 106 98 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 100 22 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1027 -1
     (nil))
(insn 100 98 101 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11477 ])
            (const_int 0 [0]))) fnmatch_loop.c:1027 -1
     (nil))
(jump_insn 101 100 102 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) fnmatch_loop.c:1027 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 99)
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 23 (set (reg:SI 122 [ D.11477 ])
        (mem:SI (reg/v/f:DI 109 [ pattern ]) [2 MEM[base: pattern_36, offset: 0B]+0 S4 A32])) -1
     (nil))
(code_label 104 103 105 24 12 "" [1 uses])
(note 105 104 107 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 107 105 108 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11477 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1026 -1
     (nil))
(jump_insn 108 107 112 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) fnmatch_loop.c:1026 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 106)
(note 112 108 110 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 110 112 111 25 (set (pc)
        (label_ref 109)) -1
     (nil)
 -> 109)
(barrier 111 110 113)
(code_label 113 111 114 26 5 "" [1 uses])
(note 114 113 115 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 26 (parallel [
            (set (reg:SI 124 [ D.11480 ])
                (plus:SI (reg:SI 112 [ D.11477 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 116 115 117 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 124 [ D.11480 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 117 116 118 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 143)
(note 118 117 119 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 27 (set (reg:DI 141)
        (const_int 3221227009 [0xc0000601])) fnmatch_loop.c:1032 -1
     (nil))
(insn 120 119 121 27 (parallel [
            (set (reg:DI 140 [ D.11481 ])
                (lshiftrt:DI (reg:DI 141)
                    (subreg:QI (reg:SI 124 [ D.11480 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 121 120 122 27 (parallel [
            (set (reg:DI 142 [ D.11481 ])
                (and:DI (reg:DI 140 [ D.11481 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 122 121 123 27 (parallel [
            (set (reg:DI 143 [ D.11481 ])
                (xor:DI (reg:DI 142 [ D.11481 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 123 122 124 27 (parallel [
            (set (reg:QI 144 [ D.11479 ])
                (and:QI (subreg:QI (reg:DI 143 [ D.11481 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 124 123 125 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 144 [ D.11479 ])
            (const_int 0 [0]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 125 124 126 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 139)
(note 126 125 127 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_1 + 8B]+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 128 127 129 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 139)
(note 129 128 130 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 29 (parallel [
            (set (reg/f:DI 114 [ D.11476 ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1034 -1
     (nil))
(insn 131 130 132 29 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.11476 ])) fnmatch_loop.c:1034 -1
     (nil))
(call_insn 132 131 133 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("end_wpattern") [flags 0x3]  <function_decl 0x2aeef6f18510 end_wpattern>) [0 end_wpattern S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1034 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("end_wpattern") [flags 0x3]  <function_decl 0x2aeef6f18510 end_wpattern>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 133 132 134 29 (set (reg/v/f:DI 109 [ pattern ])
        (reg:DI 0 ax)) fnmatch_loop.c:1034 -1
     (nil))
(insn 134 133 135 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 109 [ pattern ]) [2 *pattern_22+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:1035 -1
     (nil))
(jump_insn 135 134 138 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) fnmatch_loop.c:1035 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 99)
(note 138 135 136 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 136 138 137 30 (set (pc)
        (label_ref 109)) -1
     (nil)
 -> 109)
(barrier 137 136 139)
(code_label 139 137 140 31 17 "" [2 uses])
(note 140 139 141 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11477 ])
            (const_int 41 [0x29]))) fnmatch_loop.c:1039 -1
     (nil))
(jump_insn 142 141 143 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) fnmatch_loop.c:1039 -1
     (int_list:REG_BR_PROB 515 (nil))
 -> 148)
(code_label 143 142 144 32 16 "" [1 uses])
(note 144 143 145 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 32 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1009 -1
     (nil))
(jump_insn 146 145 147 32 (set (pc)
        (label_ref 109)) fnmatch_loop.c:1009 -1
     (nil)
 -> 109)
(barrier 147 146 148)
(code_label 148 147 149 33 18 "" [1 uses])
(note 149 148 150 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 33 (parallel [
            (set (reg/f:DI 110 [ D.11476 ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1042 -1
     (nil))
(code_label 151 150 152 34 4 "" [1 uses])
(note 152 151 153 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 157 34 (set (reg:DI 132 [ <retval> ])
        (reg/f:DI 110 [ D.11476 ])) -1
     (nil))
(insn 157 153 158 34 (set (reg/i:DI 0 ax)
        (reg:DI 132 [ <retval> ])) fnmatch_loop.c:1043 -1
     (nil))
(insn 158 157 0 34 (use (reg/i:DI 0 ax)) fnmatch_loop.c:1043 -1
     (nil))

;; Function end_pattern (end_pattern, funcdef_no=46, decl_uid=8697, cgraph_uid=46, symbol_order=55)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28
Edge 8->10 redirected to 33
Purged non-fallthru edges from bb 35


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 14->16 redirected to 17
Forwarding edge 15->16 to 17 failed.
Deleted label in block 16.
Forwarding edge 24->25 to 4 failed.
Forwarding edge 29->30 to 4 failed.
Removing jump 155.
Merging block 35 into block 34...
Merged blocks 34 and 35.
Merged 34 and 35 without moving.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 17 failed.
Forwarding edge 24->25 to 4 failed.
Forwarding edge 29->30 to 4 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 32 NOTE_INSN_DELETED)
(note 32 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 32 25 2 (set (reg/v/f:DI 133 [ pattern ])
        (reg:DI 5 di [ pattern ])) fnmatch_loop.c:1005 -1
     (nil))
(note 25 24 26 2 NOTE_INSN_FUNCTION_BEG)
(insn 26 25 34 2 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 133 [ pattern ])) fnmatch_loop.c:1006 -1
     (nil))
(jump_insn 34 26 35 2 (set (pc)
        (label_ref 37)) fnmatch_loop.c:1011 -1
     (nil)
 -> 37)
(barrier 35 34 109)
(code_label 109 35 36 4 49 "" [3 uses])
(note 36 109 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 37 36 38 5 36 "" [1 uses])
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:QI 112 [ D.11495 ])
        (mem:QI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_1 + 1B]+0 S1 A8])) fnmatch_loop.c:1009 -1
     (nil))
(insn 40 39 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.11495 ])
            (const_int 0 [0]))) fnmatch_loop.c:1009 -1
     (nil))
(jump_insn 41 40 99 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) fnmatch_loop.c:1009 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 45)
(code_label 99 41 42 6 47 "" [2 uses])
(note 42 99 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 42 43 6 (set (reg/f:DI 110 [ D.11493 ])
        (reg/v/f:DI 133 [ pattern ])) fnmatch_loop.c:1011 -1
     (nil))
(jump_insn 43 31 44 6 (set (pc)
        (label_ref 152)) -1
     (nil)
 -> 152)
(barrier 44 43 45)
(code_label 45 44 46 7 37 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.11495 ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:1012 -1
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) fnmatch_loop.c:1012 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 113)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:1015 -1
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) fnmatch_loop.c:1015 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 62)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:1016 -1
     (nil))
(call_insn 54 53 55 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1016 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 9 (set (reg/f:DI 117 [ D.11496 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1016 -1
     (nil))
(insn 56 55 57 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.11496 ])
            (const_int 0 [0]))) fnmatch_loop.c:1016 -1
     (nil))
(jump_insn 57 56 58 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) fnmatch_loop.c:1016 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 164)
(note 58 57 27 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 27 58 161 10 (set (reg:SI 111 [ D.11494 ])
        (const_int 1 [0x1])) fnmatch_loop.c:1016 -1
     (nil))
(jump_insn 161 27 162 10 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 162 161 164)
(code_label 164 162 163 11 53 "" [1 uses])
(note 163 164 28 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 28 163 59 11 (set (reg:SI 111 [ D.11494 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1016 -1
     (nil))
(code_label 59 28 60 12 41 "" [1 uses])
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 12 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 111 [ D.11494 ])) fnmatch_loop.c:1016 -1
     (nil))
(code_label 62 61 63 13 40 "" [1 uses])
(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 13 (set (reg:QI 122 [ D.11495 ])
        (mem:QI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_1 + 2B]+0 S1 A8])) fnmatch_loop.c:1020 -1
     (nil))
(insn 65 64 66 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.11495 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 66 65 67 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) fnmatch_loop.c:1020 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 82)
(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 14 (set (reg:SI 136)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:1020 -1
     (nil))
(insn 69 68 70 14 (parallel [
            (set (reg:SI 135)
                (lshiftrt:SI (reg:SI 136)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1020 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 70 69 71 14 (set (reg:QI 137)
        (subreg:QI (reg:SI 135) 0)) fnmatch_loop.c:1020 -1
     (nil))
(insn 71 70 72 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137)
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 72 71 165 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 167)
            (pc))) fnmatch_loop.c:1020 612 {*jcc_1}
     (int_list:REG_BR_PROB 3600 (nil))
 -> 167)
(note 165 72 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 165 74 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.11495 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:1020 -1
     (nil))
(insn 74 73 75 15 (set (reg:QI 139 [ D.11497 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(insn 75 74 76 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 139 [ D.11497 ])
            (const_int 0 [0]))) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 76 75 166 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) fnmatch_loop.c:1020 -1
     (int_list:REG_BR_PROB 4375 (nil))
 -> 82)
(note 166 76 167 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(code_label 167 166 78 17 54 "" [1 uses])
(note 78 167 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 17 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1020 -1
     (nil))
(jump_insn 80 79 81 17 (set (pc)
        (label_ref 86)) fnmatch_loop.c:1020 -1
     (nil)
 -> 86)
(barrier 81 80 82)
(code_label 82 81 83 18 42 "" [2 uses])
(note 83 82 84 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 18 (parallel [
            (set (reg/v/f:DI 119 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1021 -1
     (nil))
(insn 85 84 29 18 (set (reg:QI 122 [ D.11495 ])
        (mem:QI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 3 [0x3])) [0 MEM[(const char *)pattern_1 + 3B]+0 S1 A8])) -1
     (nil))
(insn 29 85 86 18 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 119 [ pattern ])) fnmatch_loop.c:1021 -1
     (nil))
(code_label 86 29 87 19 44 "" [1 uses])
(note 87 86 88 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.11495 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1023 -1
     (nil))
(jump_insn 89 88 90 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) fnmatch_loop.c:1023 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 93)
(note 90 89 91 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 20 (parallel [
            (set (reg/v/f:DI 120 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1024 -1
     (nil))
(insn 92 91 30 20 (set (reg:QI 122 [ D.11495 ])
        (mem:QI (plus:DI (reg/v/f:DI 109 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_2 + 1B]+0 S1 A8])) -1
     (nil))
(insn 30 92 93 20 (set (reg/v/f:DI 109 [ pattern ])
        (reg/v/f:DI 120 [ pattern ])) fnmatch_loop.c:1024 -1
     (nil))
(code_label 93 30 94 21 45 "" [1 uses])
(note 94 93 95 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 94 96 21 (set (pc)
        (label_ref 104)) -1
     (nil)
 -> 104)
(barrier 96 95 106)
(code_label 106 96 97 22 48 "" [1 uses])
(note 97 106 98 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 100 22 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1027 -1
     (nil))
(insn 100 98 101 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.11495 ])
            (const_int 0 [0]))) fnmatch_loop.c:1027 -1
     (nil))
(jump_insn 101 100 102 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) fnmatch_loop.c:1027 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 99)
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 23 (set (reg:QI 122 [ D.11495 ])
        (mem:QI (reg/v/f:DI 109 [ pattern ]) [0 MEM[base: pattern_36, offset: 0B]+0 S1 A8])) -1
     (nil))
(code_label 104 103 105 24 46 "" [1 uses])
(note 105 104 107 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 107 105 108 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.11495 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1026 -1
     (nil))
(jump_insn 108 107 112 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) fnmatch_loop.c:1026 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 106)
(note 112 108 110 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 110 112 111 25 (set (pc)
        (label_ref 109)) -1
     (nil)
 -> 109)
(barrier 111 110 113)
(code_label 113 111 114 26 39 "" [1 uses])
(note 114 113 115 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 26 (parallel [
            (set (reg:QI 124 [ D.11498 ])
                (plus:QI (reg:QI 112 [ D.11495 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 116 115 117 26 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 124 [ D.11498 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 117 116 118 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 144)
(note 118 117 119 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 27 (set (reg:SI 140 [ D.11494 ])
        (zero_extend:SI (reg:QI 124 [ D.11498 ]))) fnmatch_loop.c:1032 -1
     (nil))
(insn 120 119 121 27 (set (reg:DI 142)
        (const_int 3221227009 [0xc0000601])) fnmatch_loop.c:1032 -1
     (nil))
(insn 121 120 122 27 (parallel [
            (set (reg:DI 141 [ D.11499 ])
                (lshiftrt:DI (reg:DI 142)
                    (subreg:QI (reg:SI 140 [ D.11494 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 122 121 123 27 (parallel [
            (set (reg:DI 143 [ D.11499 ])
                (and:DI (reg:DI 141 [ D.11499 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 123 122 124 27 (parallel [
            (set (reg:DI 144 [ D.11499 ])
                (xor:DI (reg:DI 143 [ D.11499 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 124 123 125 27 (parallel [
            (set (reg:QI 145 [ D.11497 ])
                (and:QI (subreg:QI (reg:DI 144 [ D.11499 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1032 -1
     (nil))
(insn 125 124 126 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 145 [ D.11497 ])
            (const_int 0 [0]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 126 125 127 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 140)
(note 127 126 128 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 2 [0x2])) [0 MEM[(const char *)pattern_1 + 2B]+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:1032 -1
     (nil))
(jump_insn 129 128 130 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) fnmatch_loop.c:1032 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 140)
(note 130 129 131 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 29 (parallel [
            (set (reg/f:DI 114 [ D.11493 ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1034 -1
     (nil))
(insn 132 131 133 29 (set (reg:DI 5 di)
        (reg/f:DI 114 [ D.11493 ])) fnmatch_loop.c:1034 -1
     (nil))
(call_insn 133 132 134 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("end_pattern") [flags 0x3]  <function_decl 0x2aeef6edf438 end_pattern>) [0 end_pattern S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1034 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("end_pattern") [flags 0x3]  <function_decl 0x2aeef6edf438 end_pattern>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 134 133 135 29 (set (reg/v/f:DI 109 [ pattern ])
        (reg:DI 0 ax)) fnmatch_loop.c:1034 -1
     (nil))
(insn 135 134 136 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 109 [ pattern ]) [0 *pattern_22+0 S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1035 -1
     (nil))
(jump_insn 136 135 139 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) fnmatch_loop.c:1035 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 99)
(note 139 136 137 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 137 139 138 30 (set (pc)
        (label_ref 109)) -1
     (nil)
 -> 109)
(barrier 138 137 140)
(code_label 140 138 141 31 51 "" [2 uses])
(note 141 140 142 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.11495 ])
            (const_int 41 [0x29]))) fnmatch_loop.c:1039 -1
     (nil))
(jump_insn 143 142 144 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) fnmatch_loop.c:1039 -1
     (int_list:REG_BR_PROB 515 (nil))
 -> 149)
(code_label 144 143 145 32 50 "" [1 uses])
(note 145 144 146 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 32 (parallel [
            (set (reg/v/f:DI 109 [ pattern ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1009 -1
     (nil))
(jump_insn 147 146 148 32 (set (pc)
        (label_ref 109)) fnmatch_loop.c:1009 -1
     (nil)
 -> 109)
(barrier 148 147 149)
(code_label 149 148 150 33 52 "" [1 uses])
(note 150 149 151 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 33 (parallel [
            (set (reg/f:DI 110 [ D.11493 ])
                (plus:DI (reg/v/f:DI 109 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1042 -1
     (nil))
(code_label 152 151 153 34 38 "" [1 uses])
(note 153 152 154 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 158 34 (set (reg:DI 132 [ <retval> ])
        (reg/f:DI 110 [ D.11493 ])) -1
     (nil))
(insn 158 154 159 34 (set (reg/i:DI 0 ax)
        (reg:DI 132 [ <retval> ])) fnmatch_loop.c:1043 -1
     (nil))
(insn 159 158 0 34 (use (reg/i:DI 0 ax)) fnmatch_loop.c:1043 -1
     (nil))

;; Function ext_wmatch (ext_wmatch, funcdef_no=52, decl_uid=8990, cgraph_uid=52, symbol_order=61)

Partition 0: size 8 align 8
	list

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86
Edge 4->73 redirected to 103
Edge 7->9 redirected to 104
Edge 16->73 redirected to 105
Edge 33->35 redirected to 106
Edge 45->73 redirected to 107
Edge 52->86 redirected to 108
Edge 54->56 redirected to 109
Edge 56->73 redirected to 110
Edge 59->73 redirected to 111
Edge 61->73 redirected to 112
Edge 68->71 redirected to 113
Edge 69->71 redirected to 114
Edge 71->73 redirected to 115
Edge 76->79 redirected to 116
Edge 80->73 redirected to 117
Edge 82->73 redirected to 118
Edge 85->73 redirected to 119
Edge 86->73 redirected to 120
Purged non-fallthru edges from bb 122


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 13->15 redirected to 16
Forwarding edge 14->15 to 16 failed.
Deleted label in block 15.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 35->36 to 112 failed.
Forwarding edge 44->45 to 115 failed.
Redirecting jump 307 from 102 to 103.
Redirecting jump 409 from 102 to 103.
Redirecting jump 459 from 102 to 103.
Redirecting jump 493 from 102 to 103.
Forwarding edge 88->89 to 80 failed.
Redirecting jump 705 from 102 to 103.
Redirecting jump 713 from 102 to 103.
Redirecting jump 723 from 102 to 103.
Redirecting jump 727 from 102 to 103.
Redirecting jump 731 from 102 to 103.
Redirecting jump 743 from 102 to 103.
Redirecting jump 751 from 102 to 103.
Redirecting jump 755 from 102 to 103.
Redirecting jump 759 from 102 to 103.
Redirecting jump 763 from 102 to 103.
Merging block 102 into block 101...
Merged blocks 101 and 102.
Merged 101 and 102 without moving.
Forwarding edge 110->111 to 104 failed.
Forwarding edge 118->119 to 69 failed.
Forwarding edge 120->121 to 69 failed.
Forwarding edge 123->124 to 65 failed.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 16 failed.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 35->36 to 112 failed.
Forwarding edge 44->45 to 115 failed.
Forwarding edge 88->89 to 80 failed.
Forwarding edge 110->111 to 104 failed.
Forwarding edge 118->119 to 69 failed.
Forwarding edge 120->121 to 69 failed.
Forwarding edge 123->124 to 65 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 53 NOTE_INSN_DELETED)
(note 53 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 53 3 2 (set (reg/v:SI 211 [ opt ])
        (reg:SI 5 di [ opt ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 212 [ pattern ])
        (reg:DI 4 si [ pattern ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 213 [ string ])
        (reg:DI 1 dx [ string ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 214 [ string_end ])
        (reg:DI 2 cx [ string_end ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 215 [ no_leading_period ])
        (reg:SI 37 r8 [ no_leading_period ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 216 [ flags ])
        (reg:SI 38 r9 [ flags ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:DI 217 [ alloca_used ])
        (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])) fnmatch_loop.c:1050 -1
     (expr_list:REG_EQUIV (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])
        (nil)))
(note 9 8 55 2 NOTE_INSN_FUNCTION_BEG)
(insn 55 9 56 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1058 -1
     (nil))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg/v/f:DI 212 [ pattern ])) fnmatch_loop.c:1060 -1
     (nil))
(call_insn/i 57 56 58 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wcslen") [flags 0x41]  <function_decl 0x2aeef6e60438 __wcslen>) [0 __wcslen S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1060 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wcslen") [flags 0x41]  <function_decl 0x2aeef6e60438 __wcslen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 2 (set (reg/v:DI 101 [ slen ])
        (reg:DI 0 ax)) fnmatch_loop.c:1060 -1
     (nil))
(insn 59 58 12 2 (parallel [
            (set (reg/v/f:DI 88 [ p ])
                (plus:DI (reg/v/f:DI 212 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(insn 12 59 13 2 (set (reg/v/f:DI 93 [ p ])
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1068 -1
     (nil))
(insn 13 12 14 2 (set (reg/v:SI 202 [ any_malloced ])
        (const_int 0 [0])) fnmatch_loop.c:1061 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/v/f:DI 91 [ lastp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1059 -1
     (nil))
(insn 15 14 60 2 (set (reg/v:SI 89 [ level ])
        (const_int 0 [0])) fnmatch_loop.c:1067 -1
     (nil))
(jump_insn 60 15 61 2 (set (pc)
        (label_ref 63)) fnmatch_loop.c:1068 -1
     (nil)
 -> 63)
(barrier 61 60 154)
(code_label 154 61 62 4 83 "" [3 uses])
(note 62 154 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 63 62 64 5 69 "" [1 uses])
(note 64 63 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 5 (set (reg:SI 112 [ D.11546 ])
        (mem:SI (reg/v/f:DI 93 [ p ]) [2 *p_302+0 S4 A32])) fnmatch_loop.c:1069 -1
     (nil))
(insn 66 65 67 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1069 -1
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 700)
            (pc))) fnmatch_loop.c:1069 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 700)
(note 68 67 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11546 ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:1075 -1
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) fnmatch_loop.c:1075 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 135)
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:1078 -1
     (nil))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) fnmatch_loop.c:1078 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 84)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:1079 -1
     (nil))
(call_insn 76 75 77 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1079 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 77 76 78 8 (set (reg/f:DI 114 [ D.11549 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1079 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 114 [ D.11549 ])
            (const_int 0 [0]))) fnmatch_loop.c:1079 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 704)
            (pc))) fnmatch_loop.c:1079 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 704)
(note 80 79 16 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 16 80 701 9 (set (reg:SI 100 [ D.11546 ])
        (const_int 1 [0x1])) fnmatch_loop.c:1079 -1
     (nil))
(jump_insn 701 16 702 9 (set (pc)
        (label_ref 81)) -1
     (nil)
 -> 81)
(barrier 702 701 704)
(code_label 704 702 703 10 127 "" [1 uses])
(note 703 704 17 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 17 703 81 10 (set (reg:SI 100 [ D.11546 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1079 -1
     (nil))
(code_label 81 17 82 11 73 "" [1 uses])
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 100 [ D.11546 ])) fnmatch_loop.c:1079 -1
     (nil))
(code_label 84 83 85 12 72 "" [1 uses])
(note 85 84 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 12 (set (reg:SI 197 [ D.11546 ])
        (mem:SI (plus:DI (reg/v/f:DI 93 [ p ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)p_302 + 4B]+0 S4 A32])) fnmatch_loop.c:1083 -1
     (nil))
(insn 87 86 88 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11546 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) fnmatch_loop.c:1083 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 104)
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (reg:SI 220)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:1083 -1
     (nil))
(insn 91 90 92 13 (parallel [
            (set (reg:SI 219)
                (lshiftrt:SI (reg:SI 220)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1083 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 92 91 93 13 (set (reg:QI 221)
        (subreg:QI (reg:SI 219) 0)) fnmatch_loop.c:1083 -1
     (nil))
(insn 93 92 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 221)
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 94 93 767 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 772)
            (pc))) fnmatch_loop.c:1083 612 {*jcc_1}
     (int_list:REG_BR_PROB 3600 (nil))
 -> 772)
(note 767 94 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 767 96 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11546 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:1083 -1
     (nil))
(insn 96 95 97 14 (set (reg:QI 223 [ D.11545 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(insn 97 96 98 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 223 [ D.11545 ])
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 98 97 768 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) fnmatch_loop.c:1083 -1
     (int_list:REG_BR_PROB 4375 (nil))
 -> 104)
(note 768 98 772 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(code_label 772 768 100 16 144 "" [1 uses])
(note 100 772 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (parallel [
            (set (reg/v/f:DI 93 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 102 101 103 16 (set (pc)
        (label_ref 108)) fnmatch_loop.c:1083 -1
     (nil)
 -> 108)
(barrier 103 102 104)
(code_label 104 103 105 17 74 "" [2 uses])
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 17 (parallel [
            (set (reg/v/f:DI 116 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1084 -1
     (nil))
(insn 107 106 18 17 (set (reg:SI 197 [ D.11546 ])
        (mem:SI (plus:DI (reg/v/f:DI 93 [ p ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)p_302 + 8B]+0 S4 A32])) -1
     (nil))
(insn 18 107 108 17 (set (reg/v/f:DI 93 [ p ])
        (reg/v/f:DI 116 [ p ])) fnmatch_loop.c:1084 -1
     (nil))
(code_label 108 18 109 18 76 "" [1 uses])
(note 109 108 110 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11546 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1086 -1
     (nil))
(jump_insn 111 110 112 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) fnmatch_loop.c:1086 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 125)
(note 112 111 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 19 (parallel [
            (set (reg/v/f:DI 117 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1087 -1
     (nil))
(insn 114 113 19 19 (set (reg:SI 197 [ D.11546 ])
        (mem:SI (plus:DI (reg/v/f:DI 93 [ p ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)p_15 + 4B]+0 S4 A32])) -1
     (nil))
(insn 19 114 115 19 (set (reg/v/f:DI 93 [ p ])
        (reg/v/f:DI 117 [ p ])) fnmatch_loop.c:1087 -1
     (nil))
(jump_insn 115 19 116 19 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 116 115 129)
(code_label 129 116 117 20 79 "" [1 uses])
(note 117 129 118 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 20 (parallel [
            (set (reg/v/f:DI 93 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1090 -1
     (nil))
(insn 119 118 120 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1090 -1
     (nil))
(jump_insn 120 119 121 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 708)
            (pc))) fnmatch_loop.c:1090 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 708)
(note 121 120 122 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 21 (set (reg:SI 197 [ D.11546 ])
        (mem:SI (reg/v/f:DI 93 [ p ]) [2 MEM[base: p_76, offset: 0B]+0 S4 A32])) -1
     (nil))
(jump_insn 123 122 124 21 (set (pc)
        (label_ref 127)) -1
     (nil)
 -> 127)
(barrier 124 123 125)
(code_label 125 124 126 22 77 "" [2 uses])
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(code_label 127 126 128 23 78 "" [1 uses])
(note 128 127 130 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 130 128 131 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11546 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1089 -1
     (nil))
(jump_insn 131 130 134 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) fnmatch_loop.c:1089 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 129)
(note 134 131 132 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 132 134 133 24 (set (pc)
        (label_ref 260)) -1
     (nil)
 -> 260)
(barrier 133 132 135)
(code_label 135 133 136 25 71 "" [1 uses])
(note 136 135 137 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 25 (parallel [
            (set (reg:SI 118 [ D.11548 ])
                (plus:SI (reg:SI 112 [ D.11546 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 138 137 139 25 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 118 [ D.11548 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 139 138 140 25 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 209)
(note 140 139 141 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 26 (set (reg:DI 225)
        (const_int 3221227009 [0xc0000601])) fnmatch_loop.c:1098 -1
     (nil))
(insn 142 141 143 26 (parallel [
            (set (reg:DI 224 [ D.11547 ])
                (lshiftrt:DI (reg:DI 225)
                    (subreg:QI (reg:SI 118 [ D.11548 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 143 142 144 26 (parallel [
            (set (reg:DI 226 [ D.11547 ])
                (and:DI (reg:DI 224 [ D.11547 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 144 143 145 26 (parallel [
            (set (reg:DI 227 [ D.11547 ])
                (xor:DI (reg:DI 226 [ D.11547 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 145 144 146 26 (parallel [
            (set (reg:QI 228 [ D.11545 ])
                (and:QI (subreg:QI (reg:DI 227 [ D.11547 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 146 145 147 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 228 [ D.11545 ])
            (const_int 0 [0]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 147 146 148 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 157)
(note 148 147 149 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)p_302 + 4B]+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 150 149 151 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 157)
(note 151 150 152 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 28 (parallel [
            (set (reg/v:SI 89 [ level ])
                (plus:SI (reg/v:SI 89 [ level ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1100 -1
     (nil))
(insn 153 152 155 28 (parallel [
            (set (reg/v/f:DI 93 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 155 153 156 28 (set (pc)
        (label_ref 154)) fnmatch_loop.c:1068 -1
     (nil)
 -> 154)
(barrier 156 155 157)
(code_label 157 156 158 29 82 "" [2 uses])
(note 158 157 159 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11546 ])
            (const_int 41 [0x29]))) fnmatch_loop.c:1101 -1
     (nil))
(jump_insn 160 159 161 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) fnmatch_loop.c:1101 -1
     (int_list:REG_BR_PROB 2059 (nil))
 -> 209)
(note 161 160 162 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ level ])
            (const_int 0 [0]))) fnmatch_loop.c:1103 -1
     (nil))
(jump_insn 163 162 164 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) fnmatch_loop.c:1103 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 168)
(note 164 163 165 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 31 (parallel [
            (set (reg/v:SI 89 [ level ])
                (plus:SI (reg/v:SI 89 [ level ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1103 -1
     (nil))
(jump_insn 166 165 167 31 (set (pc)
        (label_ref 260)) fnmatch_loop.c:1103 -1
     (nil)
 -> 260)
(barrier 167 166 168)
(code_label 168 167 169 32 84 "" [1 uses])
(note 169 168 170 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 32 (parallel [
            (set (reg:SI 229 [ D.11551 ])
                (plus:SI (reg/v:SI 211 [ opt ])
                    (const_int -63 [0xffffffffffffffc1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 171 170 172 32 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 229 [ D.11551 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 172 171 173 32 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) fnmatch_loop.c:1129 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 177)
(note 173 172 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 33 (parallel [
            (set (reg:DI 230 [ D.11552 ])
                (minus:DI (reg/v/f:DI 93 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 175 174 176 33 (parallel [
            (set (reg:DI 232 [ D.11552 ])
                (ashiftrt:DI (reg:DI 230 [ D.11552 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 230 [ D.11552 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 176 175 177 33 (parallel [
            (set (reg/v:DI 101 [ slen ])
                (plus:DI (reg:DI 232 [ D.11552 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(code_label 177 176 178 34 85 "" [1 uses])
(note 178 177 179 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 34 (parallel [
            (set (reg:DI 233 [ D.11547 ])
                (plus:DI (reg/v:DI 101 [ slen ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 180 179 181 34 (parallel [
            (set (reg/v:DI 129 [ slen ])
                (ashift:DI (reg:DI 233 [ D.11547 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 181 180 182 34 (parallel [
            (set (reg:DI 130 [ D.11547 ])
                (plus:DI (reg/v:DI 129 [ slen ])
                    (reg/v:DI 217 [ alloca_used ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 182 181 183 34 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 130 [ D.11547 ])
            (const_int 4096 [0x1000]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 183 182 184 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 586)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 586)
(note 184 183 185 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 35 (set (reg:DI 5 di)
        (reg:DI 130 [ D.11547 ])) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(call_insn/u 186 185 187 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>) [0 __libc_alloca_cutoff S1 A8])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 187 186 188 35 (set (reg:SI 189 [ D.11546 ])
        (reg:SI 0 ax)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(insn 188 187 189 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 189 [ D.11546 ])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 189 188 192 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 586)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 586)
(note 192 189 190 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 190 192 191 36 (set (pc)
        (label_ref 574)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil)
 -> 574)
(barrier 191 190 582)
(code_label 582 191 193 37 122 "" [2 uses])
(note 193 582 194 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 37 (set (mem/f:DI (reg/v/f:DI 97 [ newp ]) [1 newp_22->next+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(insn 195 194 196 37 (set (mem:SI (plus:DI (reg/v/f:DI 97 [ newp ])
                (const_int 8 [0x8])) [2 newp_22->malloced+0 S4 A64])
        (reg/v:SI 203 [ malloced ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 196 195 197 37 (parallel [
            (set (reg:DI 234 [ D.11552 ])
                (minus:DI (reg/v/f:DI 93 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 197 196 198 37 (parallel [
            (set (reg:DI 236 [ D.11552 ])
                (ashiftrt:DI (reg:DI 234 [ D.11552 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 234 [ D.11552 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 198 197 199 37 (parallel [
            (set (reg:DI 237 [ D.11553 ])
                (plus:DI (reg/v/f:DI 97 [ newp ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 199 198 200 37 (set (reg:DI 1 dx)
        (reg:DI 236 [ D.11552 ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 200 199 201 37 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 201 200 202 37 (set (reg:DI 5 di)
        (reg:DI 237 [ D.11553 ])) fnmatch_loop.c:1129 -1
     (nil))
(call_insn 202 201 203 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wmempcpy") [flags 0x41]  <function_decl 0x2aeef6e661b0 __wmempcpy>) [0 __wmempcpy S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wmempcpy") [flags 0x41]  <function_decl 0x2aeef6e661b0 __wmempcpy>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 203 202 204 37 (set (reg/f:DI 141 [ D.11554 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1129 -1
     (nil))
(insn 204 203 205 37 (set (mem:SI (reg/f:DI 141 [ D.11554 ]) [2 *_117+0 S4 A32])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(insn 205 204 206 37 (set (mem/f:DI (reg/v/f:DI 91 [ lastp ]) [1 *lastp_301+0 S8 A64])
        (reg/v/f:DI 97 [ newp ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 206 205 207 37 (parallel [
            (set (reg/v/f:DI 93 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 207 206 208 37 (set (pc)
        (label_ref 265)) fnmatch_loop.c:1068 -1
     (nil)
 -> 265)
(barrier 208 207 209)
(code_label 209 208 210 38 81 "" [2 uses])
(note 210 209 211 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11546 ])
            (const_int 124 [0x7c]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 212 211 213 38 (set (reg:QI 239 [ D.11545 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 213 212 214 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 239 [ D.11545 ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(jump_insn 214 213 769 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) fnmatch_loop.c:1134 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 260)
(note 769 214 215 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 215 769 216 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ level ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 216 215 217 39 (set (reg:QI 241 [ D.11545 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 217 216 218 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 241 [ D.11545 ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(jump_insn 218 217 219 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) fnmatch_loop.c:1134 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 260)
(note 219 218 220 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 40 (parallel [
            (set (reg:SI 242 [ D.11551 ])
                (plus:SI (reg/v:SI 211 [ opt ])
                    (const_int -63 [0xffffffffffffffc1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 221 220 222 40 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 242 [ D.11551 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 222 221 223 40 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 712)
            (pc))) fnmatch_loop.c:1136 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 712)
(note 223 222 224 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 41 (parallel [
            (set (reg:DI 243 [ D.11552 ])
                (minus:DI (reg/v/f:DI 93 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 225 224 226 41 (parallel [
            (set (reg:DI 245 [ D.11552 ])
                (ashiftrt:DI (reg:DI 243 [ D.11552 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 243 [ D.11552 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 226 225 709 41 (parallel [
            (set (reg/v:DI 102 [ slen ])
                (plus:DI (reg:DI 245 [ D.11552 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 709 226 710 41 (set (pc)
        (label_ref 227)) -1
     (nil)
 -> 227)
(barrier 710 709 712)
(code_label 712 710 711 42 129 "" [1 uses])
(note 711 712 23 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 23 711 227 42 (set (reg/v:DI 102 [ slen ])
        (reg/v:DI 101 [ slen ])) fnmatch_loop.c:1136 -1
     (nil))
(code_label 227 23 228 43 89 "" [1 uses])
(note 228 227 229 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 43 (parallel [
            (set (reg:DI 148 [ D.11547 ])
                (plus:DI (reg/v:DI 102 [ slen ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 230 229 231 43 (parallel [
            (set (reg/v:DI 149 [ slen ])
                (ashift:DI (reg:DI 148 [ D.11547 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 231 230 232 43 (parallel [
            (set (reg:DI 150 [ D.11547 ])
                (plus:DI (reg/v:DI 149 [ slen ])
                    (reg/v:DI 217 [ alloca_used ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 232 231 233 43 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 150 [ D.11547 ])
            (const_int 4096 [0x1000]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 233 232 234 43 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 618)
(note 234 233 235 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 44 (set (reg:DI 5 di)
        (reg:DI 150 [ D.11547 ])) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(call_insn/u 236 235 237 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>) [0 __libc_alloca_cutoff S1 A8])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 237 236 238 44 (set (reg:SI 191 [ D.11546 ])
        (reg:SI 0 ax)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(insn 238 237 239 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 191 [ D.11546 ])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 239 238 242 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 618)
(note 242 239 240 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 240 242 241 45 (set (pc)
        (label_ref 606)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil)
 -> 606)
(barrier 241 240 614)
(code_label 614 241 243 46 123 "" [2 uses])
(note 243 614 244 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 46 (set (mem/f:DI (reg/v/f:DI 98 [ newp ]) [1 newp_23->next+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(insn 245 244 246 46 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ newp ])
                (const_int 8 [0x8])) [2 newp_23->malloced+0 S4 A64])
        (reg/v:SI 205 [ malloced ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 246 245 247 46 (parallel [
            (set (reg:DI 246 [ D.11552 ])
                (minus:DI (reg/v/f:DI 93 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 247 246 248 46 (parallel [
            (set (reg:DI 248 [ D.11552 ])
                (ashiftrt:DI (reg:DI 246 [ D.11552 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 246 [ D.11552 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 248 247 249 46 (parallel [
            (set (reg:DI 249 [ D.11553 ])
                (plus:DI (reg/v/f:DI 98 [ newp ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 249 248 250 46 (set (reg:DI 1 dx)
        (reg:DI 248 [ D.11552 ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 250 249 251 46 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 251 250 252 46 (set (reg:DI 5 di)
        (reg:DI 249 [ D.11553 ])) fnmatch_loop.c:1136 -1
     (nil))
(call_insn 252 251 253 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wmempcpy") [flags 0x41]  <function_decl 0x2aeef6e661b0 __wmempcpy>) [0 __wmempcpy S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wmempcpy") [flags 0x41]  <function_decl 0x2aeef6e661b0 __wmempcpy>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 253 252 254 46 (set (reg/f:DI 160 [ D.11554 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1136 -1
     (nil))
(insn 254 253 255 46 (set (mem:SI (reg/f:DI 160 [ D.11554 ]) [2 *_152+0 S4 A32])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(insn 255 254 256 46 (set (mem/f:DI (reg/v/f:DI 91 [ lastp ]) [1 *lastp_301+0 S8 A64])
        (reg/v/f:DI 98 [ newp ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 256 255 257 46 (set (reg/v/f:DI 91 [ lastp ])
        (reg/v/f:DI 98 [ newp ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 257 256 10 46 (parallel [
            (set (reg/v/f:DI 88 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1137 -1
     (nil))
(insn 10 257 11 46 (set (reg/v/f:DI 93 [ p ])
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1068 -1
     (nil))
(insn 11 10 258 46 (set (reg/v:SI 89 [ level ])
        (const_int 0 [0])) fnmatch_loop.c:1137 -1
     (nil))
(jump_insn 258 11 259 46 (set (pc)
        (label_ref 154)) fnmatch_loop.c:1137 -1
     (nil)
 -> 154)
(barrier 259 258 260)
(code_label 260 259 261 47 80 "" [4 uses])
(note 261 260 262 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 47 (parallel [
            (set (reg/v/f:DI 93 [ p ])
                (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(insn 263 262 264 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ level ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 264 263 265 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) fnmatch_loop.c:1068 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 154)
(code_label 265 264 266 48 88 "" [1 uses])
(note 266 265 267 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 48 (set (reg/v/f:DI 161 [ runp ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])) fnmatch_loop.c:1140 -1
     (nil))
(insn 268 267 269 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 161 [ runp ])
            (const_int 0 [0]))) fnmatch_loop.c:1140 -1
     (nil))
(jump_insn 269 268 270 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) fnmatch_loop.c:1140 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 277)
(note 270 269 271 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 49 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9192") [flags 0x2]  <var_decl 0x2aeef6f76480 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1140 -1
     (nil))
(insn 272 271 273 49 (set (reg:SI 1 dx)
        (const_int 1140 [0x474])) fnmatch_loop.c:1140 -1
     (nil))
(insn 273 272 274 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1140 -1
     (nil))
(insn 274 273 275 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2aeef723c870 *.LC4>)) fnmatch_loop.c:1140 -1
     (nil))
(call_insn 275 274 276 49 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 276 275 277)
(code_label 277 276 278 50 92 "" [1 uses])
(note 278 277 279 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 93 [ p ])
                    (const_int -4 [0xfffffffffffffffc])) [2 MEM[(const wchar_t *)p_252 + -4B]+0 S4 A32])
            (const_int 41 [0x29]))) fnmatch_loop.c:1141 -1
     (nil))
(jump_insn 280 279 281 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) fnmatch_loop.c:1141 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 288)
(note 281 280 282 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 51 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9192") [flags 0x2]  <var_decl 0x2aeef6f76480 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1141 -1
     (nil))
(insn 283 282 284 51 (set (reg:SI 1 dx)
        (const_int 1141 [0x475])) fnmatch_loop.c:1141 -1
     (nil))
(insn 284 283 285 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1141 -1
     (nil))
(insn 285 284 286 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2aeef723c900 *.LC5>)) fnmatch_loop.c:1141 -1
     (nil))
(call_insn 286 285 287 51 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 287 286 288)
(code_label 288 287 289 52 93 "" [1 uses])
(note 289 288 290 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 52 (parallel [
            (set (reg:SI 250)
                (plus:SI (reg/v:SI 211 [ opt ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1144 -1
     (nil))
(insn 291 290 292 52 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 250)
            (const_int 31 [0x1f]))) fnmatch_loop.c:1144 -1
     (nil))
(jump_insn 292 291 770 52 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 533)
            (pc))) fnmatch_loop.c:1144 -1
     (int_list:REG_BR_PROB 833 (nil))
 -> 533)
(note 770 292 293 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 293 770 294 53 (set (reg:DI 251)
        (zero_extend:DI (reg:SI 250))) fnmatch_loop.c:1144 -1
     (nil))
(insn 294 293 295 53 (set (reg/f:DI 252)
        (label_ref:DI 300)) fnmatch_loop.c:1144 -1
     (insn_list:REG_LABEL_OPERAND 300 (nil)))
(insn 295 294 296 53 (set (reg:SI 253)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 251)
                    (const_int 2 [0x2]))
                (reg/f:DI 252)) [0  S4 A8])) fnmatch_loop.c:1144 -1
     (nil))
(insn 296 295 297 53 (set (reg:DI 254)
        (sign_extend:DI (reg:SI 253))) fnmatch_loop.c:1144 -1
     (nil))
(insn 297 296 298 53 (set (reg:DI 256)
        (label_ref:DI 300)) fnmatch_loop.c:1144 -1
     (insn_list:REG_LABEL_OPERAND 300 (nil)))
(insn 298 297 299 53 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg:DI 254)
                    (reg:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1144 -1
     (nil))
(jump_insn 299 298 300 53 (parallel [
            (set (pc)
                (reg:DI 255))
            (use (label_ref 300))
        ]) fnmatch_loop.c:1144 -1
     (nil)
 -> 300)
(code_label 300 299 301 96 "" [3 uses])
(jump_table_data 301 300 302 (addr_diff_vec:SI (label_ref:DI 300)
         [
            (label_ref:DI 303)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 310)
            (label_ref:DI 325)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 533)
            (label_ref:DI 412)
            (label_ref:DI 427)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 302 301 303)
(code_label 303 302 304 54 95 "" [1 uses])
(note 304 303 305 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 54 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 213 [ string ])
            (reg/v/f:DI 214 [ string_end ]))) fnmatch_loop.c:1213 -1
     (nil))
(jump_insn 306 305 309 54 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) fnmatch_loop.c:1213 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 462)
(note 309 306 48 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 48 309 307 55 (set (reg/v:SI 96 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1237 -1
     (nil))
(jump_insn 307 48 308 55 (set (pc)
        (label_ref:DI 543)) fnmatch_loop.c:1213 654 {jump}
     (nil)
 -> 543)
(barrier 308 307 310)
(code_label 310 308 311 56 97 "" [1 uses])
(note 311 310 312 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 56 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 313 312 314 56 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 314 313 315 56 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1147 -1
     (nil))
(insn 315 314 316 56 (set (reg:SI 37 r8)
        (reg/v:SI 216 [ flags ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 316 315 317 56 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 317 316 318 56 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 318 317 319 56 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 319 318 320 56 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1147 -1
     (nil))
(call_insn 320 319 321 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1147 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 321 320 322 56 (set (reg:SI 163 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1147 -1
     (nil))
(insn 322 321 323 56 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 323 322 324 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1147 -1
     (nil))
(jump_insn 324 323 325 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 716)
            (pc))) fnmatch_loop.c:1147 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 716)
(code_label 325 324 326 57 98 "" [1 uses])
(note 326 325 327 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 57 (parallel [
            (set (reg:SI 192 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 328 327 329 57 (parallel [
            (set (reg:SI 165 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 329 328 330 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 192 [ D.11546 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 330 329 331 57 (set (reg:SI 257)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 216 [ flags ])
            (reg:SI 165 [ D.11546 ]))) -1
     (nil))
(insn 331 330 332 57 (set (reg:SI 103 [ D.11546 ])
        (reg:SI 257)) -1
     (nil))
(insn 332 331 333 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 192 [ D.11546 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 333 332 334 57 (set (reg:SI 258)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 216 [ flags ])
            (reg:SI 165 [ D.11546 ]))) -1
     (nil))
(insn 334 333 27 57 (set (reg:SI 104 [ D.11546 ])
        (reg:SI 258)) -1
     (nil))
(insn 27 334 406 57 (set (reg/f:DI 164 [ D.11550 ])
        (reg/v/f:DI 161 [ runp ])) fnmatch_loop.c:1158 -1
     (nil))
(code_label 406 27 335 58 109 "" [1 uses])
(note 335 406 336 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 58 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 213 [ string ])
            (reg/v/f:DI 214 [ string_end ]))) fnmatch_loop.c:1155 -1
     (nil))
(jump_insn 337 336 338 58 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 402)
            (pc))) fnmatch_loop.c:1155 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 402)
(note 338 337 28 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 28 338 399 59 (set (reg/v/f:DI 166 [ string ])
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1155 -1
     (nil))
(code_label 399 28 339 60 108 "" [1 uses])
(note 339 399 340 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 192 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 341 340 342 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 638)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 638)
(note 342 341 343 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 61 (parallel [
            (set (reg:DI 259 [ D.11553 ])
                (plus:DI (reg/f:DI 164 [ D.11550 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 344 343 345 61 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 345 344 346 61 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 346 345 347 61 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1158 -1
     (nil))
(insn 347 346 348 61 (set (reg:SI 37 r8)
        (reg:SI 165 [ D.11546 ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 348 347 349 61 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 349 348 350 61 (set (reg:DI 1 dx)
        (reg/v/f:DI 166 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 350 349 351 61 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 351 350 352 61 (set (reg:DI 5 di)
        (reg:DI 259 [ D.11553 ])) fnmatch_loop.c:1158 -1
     (nil))
(call_insn 352 351 353 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 353 352 354 61 (set (reg:SI 111 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1158 -1
     (nil))
(insn 354 353 355 61 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 355 354 356 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 356 355 651 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 396)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 396)
(code_label 651 356 357 62 124 "" [1 uses])
(note 357 651 358 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 213 [ string ])
            (reg/v/f:DI 166 [ string ]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 359 358 360 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 658)
            (pc))) fnmatch_loop.c:1163 -1
     (int_list:REG_BR_PROB 1 (nil))
 -> 658)
(note 360 359 361 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 166 [ string ])
                    (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: string_276, offset: -4B]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1166 -1
     (nil))
(jump_insn 362 361 363 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 718)
            (pc))) fnmatch_loop.c:1166 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 718)
(note 363 362 364 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 64 (parallel [
            (set (reg:SI 260 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1166 -1
     (nil))
(insn 365 364 366 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 260 [ D.11546 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1166 -1
     (nil))
(insn 366 365 367 64 (set (reg:QI 262)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1166 -1
     (nil))
(insn 367 366 368 64 (set (reg:SI 261 [ D.11545 ])
        (zero_extend:SI (reg:QI 262))) fnmatch_loop.c:1166 -1
     (nil))
(insn 368 367 369 64 (set (reg:SI 90 [ D.11546 ])
        (reg:SI 261 [ D.11545 ])) fnmatch_loop.c:1166 -1
     (nil))
(jump_insn 369 368 370 64 (set (pc)
        (label_ref 676)) -1
     (nil)
 -> 676)
(barrier 370 369 691)
(code_label 691 370 371 65 125 "" [1 uses])
(note 371 691 372 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 166 [ string ])
                    (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: string_276, offset: -4B]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1175 -1
     (nil))
(jump_insn 373 372 374 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 722)
            (pc))) fnmatch_loop.c:1175 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 722)
(note 374 373 375 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 66 (parallel [
            (set (reg:SI 263 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1175 -1
     (nil))
(insn 376 375 377 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 263 [ D.11546 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1175 -1
     (nil))
(insn 377 376 378 66 (set (reg:QI 265)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1175 -1
     (nil))
(insn 378 377 379 66 (set (reg:SI 264 [ D.11545 ])
        (zero_extend:SI (reg:QI 265))) fnmatch_loop.c:1175 -1
     (nil))
(insn 379 378 719 66 (set (reg:SI 105 [ D.11546 ])
        (reg:SI 264 [ D.11545 ])) fnmatch_loop.c:1175 -1
     (nil))
(jump_insn 719 379 720 66 (set (pc)
        (label_ref 380)) -1
     (nil)
 -> 380)
(barrier 720 719 722)
(code_label 722 720 721 67 132 "" [1 uses])
(note 721 722 29 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 29 721 380 67 (set (reg:SI 105 [ D.11546 ])
        (const_int 0 [0])) fnmatch_loop.c:1175 -1
     (nil))
(code_label 380 29 381 68 107 "" [1 uses])
(note 381 380 382 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 68 (parallel [
            (set (reg:DI 266 [ D.11555 ])
                (plus:DI (reg/v/f:DI 212 [ pattern ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (nil))
(insn 383 382 384 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 384 383 385 68 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 385 384 386 68 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1171 -1
     (nil))
(insn 386 385 387 68 (set (reg:SI 37 r8)
        (reg:SI 104 [ D.11546 ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 387 386 388 68 (set (reg:SI 2 cx)
        (reg:SI 105 [ D.11546 ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 388 387 389 68 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 389 388 390 68 (set (reg:DI 4 si)
        (reg/v/f:DI 166 [ string ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 390 389 391 68 (set (reg:DI 5 di)
        (reg:DI 266 [ D.11555 ])) fnmatch_loop.c:1171 -1
     (nil))
(call_insn 391 390 392 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 392 391 393 68 (set (reg:SI 173 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1171 -1
     (nil))
(insn 393 392 394 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 394 393 395 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 173 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1171 -1
     (nil))
(jump_insn 395 394 396 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 726)
            (pc))) fnmatch_loop.c:1171 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 726)
(code_label 396 395 397 69 104 "" [3 uses])
(note 397 396 398 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 400 69 (parallel [
            (set (reg/v/f:DI 166 [ string ])
                (plus:DI (reg/v/f:DI 166 [ string ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1155 -1
     (nil))
(insn 400 398 401 69 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 214 [ string_end ])
            (reg/v/f:DI 166 [ string ]))) fnmatch_loop.c:1155 -1
     (nil))
(jump_insn 401 400 402 69 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) fnmatch_loop.c:1155 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 399)
(code_label 402 401 403 70 102 "" [1 uses])
(note 403 402 404 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 70 (set (reg/f:DI 164 [ D.11550 ])
        (mem/f:DI (reg/f:DI 164 [ D.11550 ]) [1 _285->next+0 S8 A64])) fnmatch_loop.c:1182 -1
     (nil))
(insn 405 404 407 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 164 [ D.11550 ])) fnmatch_loop.c:1182 -1
     (nil))
(insn 407 405 408 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 164 [ D.11550 ])
            (const_int 0 [0]))) fnmatch_loop.c:1182 -1
     (nil))
(jump_insn 408 407 411 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) fnmatch_loop.c:1182 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 406)
(note 411 408 42 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 42 411 409 71 (set (reg/v:SI 96 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1185 -1
     (nil))
(jump_insn 409 42 410 71 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 410 409 412)
(code_label 412 410 413 72 99 "" [1 uses])
(note 413 412 414 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 72 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 415 414 416 72 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 416 415 417 72 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1189 -1
     (nil))
(insn 417 416 418 72 (set (reg:SI 37 r8)
        (reg/v:SI 216 [ flags ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 418 417 419 72 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 419 418 420 72 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 420 419 421 72 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 421 420 422 72 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1189 -1
     (nil))
(call_insn 422 421 423 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 423 422 424 72 (set (reg:SI 174 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1189 -1
     (nil))
(insn 424 423 425 72 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 425 424 426 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1189 -1
     (nil))
(jump_insn 426 425 427 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 730)
            (pc))) fnmatch_loop.c:1189 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 730)
(code_label 427 426 428 73 100 "" [1 uses])
(note 428 427 429 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 73 (parallel [
            (set (reg:SI 268 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 430 429 431 73 (parallel [
            (set (reg:SI 269 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 431 430 432 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 269 [ D.11546 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 432 431 433 73 (set (reg:SI 267)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 216 [ flags ])
            (reg:SI 268 [ D.11546 ]))) -1
     (nil))
(insn 433 432 30 73 (set (reg:SI 106 [ D.11546 ])
        (reg:SI 267)) -1
     (nil))
(insn 30 433 456 73 (set (reg/f:DI 119 [ D.11550 ])
        (reg/v/f:DI 161 [ runp ])) fnmatch_loop.c:1200 -1
     (nil))
(code_label 456 30 434 74 110 "" [1 uses])
(note 434 456 435 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 74 (parallel [
            (set (reg:DI 270 [ D.11553 ])
                (plus:DI (reg/f:DI 119 [ D.11550 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (nil))
(insn 436 435 437 74 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 437 436 438 74 (set (reg:DI 5 di)
        (reg:DI 270 [ D.11553 ])) fnmatch_loop.c:1200 -1
     (nil))
(call_insn 438 437 439 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wcscat") [flags 0x41]  <function_decl 0x2aeef6e605e8 __wcscat>) [0 __wcscat S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wcscat") [flags 0x41]  <function_decl 0x2aeef6e605e8 __wcscat>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 439 438 440 74 (set (reg/f:DI 177 [ D.11554 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1200 -1
     (nil))
(insn 440 439 441 74 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 441 440 442 74 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 442 441 443 74 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1200 -1
     (nil))
(insn 443 442 444 74 (set (reg:SI 37 r8)
        (reg:SI 106 [ D.11546 ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 444 443 445 74 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 445 444 446 74 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 446 445 447 74 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 447 446 448 74 (set (reg:DI 5 di)
        (reg/f:DI 177 [ D.11554 ])) fnmatch_loop.c:1200 -1
     (nil))
(call_insn 448 447 449 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 449 448 450 74 (set (reg:SI 178 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1200 -1
     (nil))
(insn 450 449 451 74 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 451 450 452 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 178 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1200 -1
     (nil))
(jump_insn 452 451 453 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 734)
            (pc))) fnmatch_loop.c:1200 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 734)
(note 453 452 454 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 75 (set (reg/f:DI 119 [ D.11550 ])
        (mem/f:DI (reg/f:DI 119 [ D.11550 ]) [1 _80->next+0 S8 A64])) fnmatch_loop.c:1206 -1
     (nil))
(insn 455 454 457 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 119 [ D.11550 ])) fnmatch_loop.c:1206 -1
     (nil))
(insn 457 455 458 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 119 [ D.11550 ])
            (const_int 0 [0]))) fnmatch_loop.c:1206 -1
     (nil))
(jump_insn 458 457 461 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 456)
            (pc))) fnmatch_loop.c:1206 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 456)
(note 461 458 45 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 45 461 459 76 (set (reg/v:SI 96 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1209 -1
     (nil))
(jump_insn 459 45 460 76 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 460 459 462)
(code_label 462 460 463 77 101 "" [1 uses])
(note 463 462 464 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 77 (parallel [
            (set (reg:SI 200 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 465 464 466 77 (parallel [
            (set (reg:SI 179 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (nil))
(insn 466 465 467 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 200 [ D.11546 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 467 466 468 77 (set (reg:SI 271)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 216 [ flags ])
            (reg:SI 179 [ D.11546 ]))) -1
     (nil))
(insn 468 467 469 77 (set (reg:SI 107 [ D.11546 ])
        (reg:SI 271)) -1
     (nil))
(insn 469 468 470 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 200 [ D.11546 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 470 469 471 77 (set (reg:SI 272)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 216 [ flags ])
            (reg:SI 179 [ D.11546 ]))) -1
     (nil))
(insn 471 470 31 77 (set (reg:SI 108 [ D.11546 ])
        (reg:SI 272)) -1
     (nil))
(insn 31 471 490 77 (set (reg/v/f:DI 183 [ string ])
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(code_label 490 31 472 78 112 "" [1 uses])
(note 472 490 32 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 32 472 499 78 (set (reg/v/f:DI 182 [ runp ])
        (reg/v/f:DI 161 [ runp ])) fnmatch_loop.c:1218 -1
     (nil))
(code_label 499 32 473 79 113 "" [1 uses])
(note 473 499 474 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 475 79 (parallel [
            (set (reg:DI 273 [ D.11553 ])
                (plus:DI (reg/v/f:DI 182 [ runp ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (nil))
(insn 475 474 476 79 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 476 475 477 79 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 477 476 478 79 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1218 -1
     (nil))
(insn 478 477 479 79 (set (reg:SI 37 r8)
        (reg:SI 107 [ D.11546 ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 479 478 480 79 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 480 479 481 79 (set (reg:DI 1 dx)
        (reg/v/f:DI 183 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 481 480 482 79 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 482 481 483 79 (set (reg:DI 5 di)
        (reg:DI 273 [ D.11553 ])) fnmatch_loop.c:1218 -1
     (nil))
(call_insn 483 482 484 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1218 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 484 483 485 79 (set (reg:SI 181 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1218 -1
     (nil))
(insn 485 484 486 79 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 486 485 487 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 181 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1218 -1
     (nil))
(jump_insn 487 486 529 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) fnmatch_loop.c:1218 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 496)
(code_label 529 487 488 80 115 "" [1 uses])
(note 488 529 489 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 491 80 (parallel [
            (set (reg/v/f:DI 183 [ string ])
                (plus:DI (reg/v/f:DI 183 [ string ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1213 -1
     (nil))
(insn 491 489 492 80 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 214 [ string_end ])
            (reg/v/f:DI 183 [ string ]))) fnmatch_loop.c:1213 -1
     (nil))
(jump_insn 492 491 495 80 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 490)
            (pc))) fnmatch_loop.c:1213 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 490)
(note 495 492 47 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 47 495 493 81 (set (reg/v:SI 96 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1237 -1
     (nil))
(jump_insn 493 47 494 81 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 494 493 496)
(code_label 496 494 497 82 111 "" [1 uses])
(note 497 496 498 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 500 82 (set (reg/v/f:DI 182 [ runp ])
        (mem/f:DI (reg/v/f:DI 182 [ runp ]) [1 runp_294->next+0 S8 A64])) fnmatch_loop.c:1217 -1
     (nil))
(insn 500 498 501 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 182 [ runp ])
            (const_int 0 [0]))) fnmatch_loop.c:1217 -1
     (nil))
(jump_insn 501 500 502 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 499)
            (pc))) fnmatch_loop.c:1217 -1
     (int_list:REG_BR_PROB 9507 (nil))
 -> 499)
(note 502 501 503 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 213 [ string ])
            (reg/v/f:DI 183 [ string ]))) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 504 503 505 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 738)
            (pc))) fnmatch_loop.c:1225 612 {*jcc_1}
     (int_list:REG_BR_PROB 1 (nil))
 -> 738)
(note 505 504 506 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 183 [ string ])
                    (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: string_277, offset: -4B]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1228 -1
     (nil))
(jump_insn 507 506 508 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 742)
            (pc))) fnmatch_loop.c:1228 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 742)
(note 508 507 509 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 85 (parallel [
            (set (reg:SI 274 [ D.11546 ])
                (and:SI (reg/v:SI 216 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1228 -1
     (nil))
(insn 510 509 511 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 274 [ D.11546 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1228 -1
     (nil))
(insn 511 510 512 85 (set (reg:QI 276)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1228 -1
     (nil))
(insn 512 511 513 85 (set (reg:SI 275 [ D.11545 ])
        (zero_extend:SI (reg:QI 276))) fnmatch_loop.c:1228 -1
     (nil))
(insn 513 512 735 85 (set (reg:SI 109 [ D.11546 ])
        (reg:SI 275 [ D.11545 ])) fnmatch_loop.c:1228 -1
     (nil))
(jump_insn 735 513 736 85 (set (pc)
        (label_ref 514)) -1
     (nil)
 -> 514)
(barrier 736 735 738)
(code_label 738 736 737 86 136 "" [1 uses])
(note 737 738 34 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 34 737 739 86 (set (reg:SI 109 [ D.11546 ])
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 739 34 740 86 (set (pc)
        (label_ref 514)) -1
     (nil)
 -> 514)
(barrier 740 739 742)
(code_label 742 740 741 87 137 "" [1 uses])
(note 741 742 33 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 33 741 514 87 (set (reg:SI 109 [ D.11546 ])
        (const_int 0 [0])) fnmatch_loop.c:1228 -1
     (nil))
(code_label 514 33 515 88 114 "" [2 uses])
(note 515 514 516 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 88 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 517 516 518 88 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 518 517 519 88 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1225 -1
     (nil))
(insn 519 518 520 88 (set (reg:SI 37 r8)
        (reg:SI 108 [ D.11546 ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 520 519 521 88 (set (reg:SI 2 cx)
        (reg:SI 109 [ D.11546 ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 521 520 522 88 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 522 521 523 88 (set (reg:DI 4 si)
        (reg/v/f:DI 183 [ string ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 523 522 524 88 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1225 -1
     (nil))
(call_insn 524 523 525 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1225 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 525 524 526 88 (set (reg:SI 186 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1225 -1
     (nil))
(insn 526 525 527 88 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 527 526 528 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 528 527 532 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 746)
            (pc))) fnmatch_loop.c:1225 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 746)
(note 532 528 530 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(jump_insn 530 532 531 89 (set (pc)
        (label_ref 529)) -1
     (nil)
 -> 529)
(barrier 531 530 533)
(code_label 533 531 534 90 94 "" [28 uses])
(note 534 533 535 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 90 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9192") [flags 0x2]  <var_decl 0x2aeef6f76480 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1241 -1
     (nil))
(insn 536 535 537 90 (set (reg:SI 1 dx)
        (const_int 1241 [0x4d9])) fnmatch_loop.c:1241 -1
     (nil))
(insn 537 536 538 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1241 -1
     (nil))
(insn 538 537 539 90 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2aeef723c990 *.LC6>)) fnmatch_loop.c:1241 -1
     (nil))
(call_insn 539 538 540 90 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1241 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 540 539 700)
(code_label 700 540 699 91 126 "" [1 uses])
(note 699 700 35 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 35 699 705 91 (set (reg/v:SI 96 [ retval ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1072 -1
     (nil))
(jump_insn 705 35 706 91 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 706 705 708)
(code_label 708 706 707 92 128 "" [1 uses])
(note 707 708 36 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 36 707 713 92 (set (reg/v:SI 96 [ retval ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1093 -1
     (nil))
(jump_insn 713 36 714 92 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 714 713 716)
(code_label 716 714 715 93 130 "" [1 uses])
(note 715 716 39 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 39 715 723 93 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 723 39 724 93 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 724 723 726)
(code_label 726 724 725 94 133 "" [1 uses])
(note 725 726 41 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 41 725 727 94 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 727 41 728 94 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 728 727 730)
(code_label 730 728 729 95 134 "" [1 uses])
(note 729 730 43 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 43 729 731 95 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 731 43 732 95 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 732 731 734)
(code_label 734 732 733 96 135 "" [1 uses])
(note 733 734 44 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 44 733 743 96 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 743 44 744 96 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 744 743 746)
(code_label 746 744 745 97 138 "" [1 uses])
(note 745 746 46 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 46 745 751 97 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 751 46 752 97 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 752 751 754)
(code_label 754 752 753 98 140 "" [1 uses])
(note 753 754 37 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 37 753 755 98 (set (reg/v:SI 96 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 755 37 756 98 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 756 755 758)
(code_label 758 756 757 99 141 "" [1 uses])
(note 757 758 38 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 38 757 759 99 (set (reg/v:SI 96 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 759 38 760 99 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 760 759 762)
(code_label 762 760 761 100 142 "" [1 uses])
(note 761 762 49 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 49 761 763 100 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 763 49 764 100 (set (pc)
        (label_ref:DI 543)) 654 {jump}
     (nil)
 -> 543)
(barrier 764 763 766)
(code_label 766 764 765 101 143 "" [1 uses])
(note 765 766 40 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 40 765 541 101 (set (reg/v:SI 96 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(note 541 40 543 ("success") NOTE_INSN_DELETED_LABEL 70)
(code_label 543 541 771 103 116 ("out") [14 uses])
(note 771 543 544 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 544 771 545 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 202 [ any_malloced ])
            (const_int 0 [0]))) fnmatch_loop.c:1248 -1
     (nil))
(jump_insn 545 544 570 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 550)
            (pc))) fnmatch_loop.c:1248 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 550)
(code_label 570 545 546 104 121 "" [1 uses])
(note 546 570 547 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 104 (set (reg:SI 210 [ <retval> ])
        (reg/v:SI 96 [ retval ])) fnmatch_loop.c:1257 -1
     (nil))
(jump_insn 548 547 549 104 (set (pc)
        (label_ref 695)) fnmatch_loop.c:1257 -1
     (nil)
 -> 695)
(barrier 549 548 550)
(code_label 550 549 551 105 117 "" [1 uses])
(note 551 550 552 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 105 (set (reg/f:DI 120 [ D.11550 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])) -1
     (nil))
(jump_insn 553 552 554 105 (set (pc)
        (label_ref 563)) -1
     (nil)
 -> 563)
(barrier 554 553 567)
(code_label 567 554 555 106 120 "" [1 uses])
(note 555 567 556 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 556 555 557 106 (set (reg/f:DI 187 [ D.11550 ])
        (mem/f:DI (reg/f:DI 120 [ D.11550 ]) [1 _81->next+0 S8 A64])) fnmatch_loop.c:1252 -1
     (nil))
(insn 557 556 558 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 120 [ D.11550 ])
                    (const_int 8 [0x8])) [2 _81->malloced+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:1253 -1
     (nil))
(jump_insn 558 557 559 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 750)
            (pc))) fnmatch_loop.c:1253 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 750)
(note 559 558 560 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 561 107 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 187 [ D.11550 ])) -1
     (nil))
(insn 561 560 562 107 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.11550 ])) fnmatch_loop.c:1254 -1
     (nil))
(call_insn 562 561 50 107 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 562 563 107 (set (reg/f:DI 120 [ D.11550 ])
        (reg/f:DI 187 [ D.11550 ])) fnmatch_loop.c:1252 -1
     (nil))
(code_label 563 50 564 108 118 "" [1 uses])
(note 564 563 747 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(jump_insn 747 564 748 108 (set (pc)
        (label_ref 565)) -1
     (nil)
 -> 565)
(barrier 748 747 750)
(code_label 750 748 749 109 139 "" [1 uses])
(note 749 750 51 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 51 749 565 109 (set (reg/f:DI 120 [ D.11550 ])
        (reg/f:DI 187 [ D.11550 ])) fnmatch_loop.c:1252 -1
     (nil))
(code_label 565 51 566 110 119 "" [1 uses])
(note 566 565 568 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 568 566 569 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 120 [ D.11550 ])
            (const_int 0 [0]))) fnmatch_loop.c:1249 -1
     (nil))
(jump_insn 569 568 573 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 567)
            (pc))) fnmatch_loop.c:1249 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 567)
(note 573 569 571 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(jump_insn 571 573 572 111 (set (pc)
        (label_ref 570)) -1
     (nil)
 -> 570)
(barrier 572 571 574)
(code_label 574 572 575 112 87 "" [1 uses])
(note 575 574 576 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 576 575 577 112 (set (reg:DI 5 di)
        (reg/v:DI 129 [ slen ])) fnmatch_loop.c:1129 -1
     (nil))
(call_insn 577 576 578 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 578 577 579 112 (set (reg/f:DI 278)
        (reg:DI 0 ax)) fnmatch_loop.c:1129 -1
     (expr_list:REG_NOALIAS (reg/f:DI 278)
        (nil)))
(insn 579 578 580 112 (set (reg/v/f:DI 97 [ newp ])
        (reg/f:DI 278)) fnmatch_loop.c:1129 -1
     (nil))
(insn 580 579 581 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 97 [ newp ])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 581 580 585 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 754)
            (pc))) fnmatch_loop.c:1129 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 754)
(note 585 581 20 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 20 585 21 113 (set (reg/v:SI 203 [ malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1129 -1
     (nil))
(insn 21 20 583 113 (set (reg/v:SI 202 [ any_malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 583 21 584 113 (set (pc)
        (label_ref 582)) -1
     (nil)
 -> 582)
(barrier 584 583 586)
(code_label 586 584 587 114 86 "" [2 uses])
(note 587 586 588 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 114 (parallel [
            (set (reg:DI 279 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch_loop.c:1129))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 589 588 590 114 (set (reg/v/f:DI 132 [ old__ ])
        (reg:DI 279 [ old__ ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 590 589 591 114 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg/v:DI 129 [ slen ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 591 590 592 114 (parallel [
            (set (reg:DI 281)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 592 591 593 114 (parallel [
            (set (reg:DI 282)
                (plus:DI (reg:DI 280)
                    (reg:DI 281)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 593 592 594 114 (parallel [
            (set (reg:DI 284)
                (udiv:DI (reg:DI 282)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 285)
                (umod:DI (reg:DI 282)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 594 593 595 114 (parallel [
            (set (reg:DI 286)
                (mult:DI (reg:DI 284)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 595 594 596 114 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 286)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 596 595 597 114 (set (reg:DI 287)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:1129 -1
     (nil))
(insn 597 596 598 114 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg:DI 287)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 598 597 599 114 (parallel [
            (set (reg:DI 289)
                (lshiftrt:DI (reg:DI 288)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 288)
            (const_int 16 [0x10]))
        (nil)))
(insn 599 598 600 114 (parallel [
            (set (reg/f:DI 290)
                (ashift:DI (reg:DI 289)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 600 599 601 114 (set (reg/v/f:DI 97 [ newp ])
        (reg/f:DI 290)) fnmatch_loop.c:1129 -1
     (nil))
(insn 601 600 602 114 (parallel [
            (set (reg:DI 291 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 132 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch_loop.c:1129)
                    ]
                     [] fnmatch_loop.c:1129))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 602 601 603 114 (set (reg/v:DI 133 [ d__ ])
        (reg:DI 291 [ d__ ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 603 602 22 114 (parallel [
            (set (reg/v:DI 217 [ alloca_used ])
                (plus:DI (reg/v:DI 217 [ alloca_used ])
                    (reg/v:DI 133 [ d__ ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 22 603 604 114 (set (reg/v:SI 203 [ malloced ])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 604 22 605 114 (set (pc)
        (label_ref 582)) fnmatch_loop.c:1129 -1
     (nil)
 -> 582)
(barrier 605 604 606)
(code_label 606 605 607 115 91 "" [1 uses])
(note 607 606 608 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 115 (set (reg:DI 5 di)
        (reg/v:DI 149 [ slen ])) fnmatch_loop.c:1136 -1
     (nil))
(call_insn 609 608 610 115 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 610 609 611 115 (set (reg/f:DI 292)
        (reg:DI 0 ax)) fnmatch_loop.c:1136 -1
     (expr_list:REG_NOALIAS (reg/f:DI 292)
        (nil)))
(insn 611 610 612 115 (set (reg/v/f:DI 98 [ newp ])
        (reg/f:DI 292)) fnmatch_loop.c:1136 -1
     (nil))
(insn 612 611 613 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ newp ])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 613 612 617 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 758)
            (pc))) fnmatch_loop.c:1136 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 758)
(note 617 613 24 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 24 617 25 116 (set (reg/v:SI 205 [ malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1136 -1
     (nil))
(insn 25 24 615 116 (set (reg/v:SI 202 [ any_malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 615 25 616 116 (set (pc)
        (label_ref 614)) -1
     (nil)
 -> 614)
(barrier 616 615 618)
(code_label 618 616 619 117 90 "" [2 uses])
(note 619 618 620 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 117 (parallel [
            (set (reg:DI 293 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch_loop.c:1136))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 621 620 622 117 (set (reg/v/f:DI 151 [ old__ ])
        (reg:DI 293 [ old__ ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 622 621 623 117 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/v:DI 149 [ slen ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 623 622 624 117 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 624 623 625 117 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 294)
                    (reg:DI 295)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 625 624 626 117 (parallel [
            (set (reg:DI 298)
                (udiv:DI (reg:DI 296)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 299)
                (umod:DI (reg:DI 296)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 626 625 627 117 (parallel [
            (set (reg:DI 300)
                (mult:DI (reg:DI 298)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 627 626 628 117 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 300)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 628 627 629 117 (set (reg:DI 301)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:1136 -1
     (nil))
(insn 629 628 630 117 (parallel [
            (set (reg:DI 302)
                (plus:DI (reg:DI 301)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 630 629 631 117 (parallel [
            (set (reg:DI 303)
                (lshiftrt:DI (reg:DI 302)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 302)
            (const_int 16 [0x10]))
        (nil)))
(insn 631 630 632 117 (parallel [
            (set (reg/f:DI 304)
                (ashift:DI (reg:DI 303)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 632 631 633 117 (set (reg/v/f:DI 98 [ newp ])
        (reg/f:DI 304)) fnmatch_loop.c:1136 -1
     (nil))
(insn 633 632 634 117 (parallel [
            (set (reg:DI 305 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 151 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch_loop.c:1136)
                    ]
                     [] fnmatch_loop.c:1136))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 634 633 635 117 (set (reg/v:DI 152 [ d__ ])
        (reg:DI 305 [ d__ ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 635 634 26 117 (parallel [
            (set (reg/v:DI 217 [ alloca_used ])
                (plus:DI (reg/v:DI 217 [ alloca_used ])
                    (reg/v:DI 152 [ d__ ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 26 635 636 117 (set (reg/v:SI 205 [ malloced ])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 636 26 637 117 (set (pc)
        (label_ref 614)) fnmatch_loop.c:1136 -1
     (nil)
 -> 614)
(barrier 637 636 638)
(code_label 638 637 639 118 103 "" [1 uses])
(note 639 638 640 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 640 639 641 118 (parallel [
            (set (reg:DI 306 [ D.11553 ])
                (plus:DI (reg/f:DI 164 [ D.11550 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 641 640 642 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 642 641 643 118 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 643 642 644 118 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1158 -1
     (nil))
(insn 644 643 645 118 (set (reg:SI 37 r8)
        (reg/v:SI 216 [ flags ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 645 644 646 118 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 646 645 647 118 (set (reg:DI 1 dx)
        (reg/v/f:DI 166 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 647 646 648 118 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 648 647 649 118 (set (reg:DI 5 di)
        (reg:DI 306 [ D.11553 ])) fnmatch_loop.c:1158 -1
     (nil))
(call_insn 649 648 650 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 650 649 652 118 (set (reg:SI 207 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1158 -1
     (nil))
(insn 652 650 653 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 653 652 654 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 207 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 654 653 657 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 651)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 651)
(note 657 654 655 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(jump_insn 655 657 656 119 (set (pc)
        (label_ref 396)) fnmatch_loop.c:1158 -1
     (nil)
 -> 396)
(barrier 656 655 658)
(code_label 658 656 659 120 105 "" [1 uses])
(note 659 658 660 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 120 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 661 660 662 120 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 662 661 663 120 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1163 -1
     (nil))
(insn 663 662 664 120 (set (reg:SI 37 r8)
        (reg:SI 103 [ D.11546 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 664 663 665 120 (set (reg:SI 2 cx)
        (reg/v:SI 215 [ no_leading_period ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 665 664 666 120 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 666 665 667 120 (set (reg:DI 4 si)
        (reg/v/f:DI 166 [ string ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 667 666 668 120 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1163 -1
     (nil))
(call_insn 668 667 669 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 669 668 670 120 (set (reg:SI 198 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1163 -1
     (nil))
(insn 670 669 671 120 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 671 670 672 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 672 671 675 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 762)
            (pc))) fnmatch_loop.c:1163 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 762)
(note 675 672 673 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(jump_insn 673 675 674 121 (set (pc)
        (label_ref 396)) fnmatch_loop.c:1163 -1
     (nil)
 -> 396)
(barrier 674 673 718)
(code_label 718 674 717 122 131 "" [1 uses])
(note 717 718 52 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 52 717 676 122 (set (reg:SI 90 [ D.11546 ])
        (const_int 0 [0])) fnmatch_loop.c:1166 -1
     (nil))
(code_label 676 52 677 123 106 "" [1 uses])
(note 677 676 678 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 678 677 679 123 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 679 678 680 123 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 217 [ alloca_used ])) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 680 679 681 123 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1163 -1
     (nil))
(insn 681 680 682 123 (set (reg:SI 37 r8)
        (reg:SI 103 [ D.11546 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 682 681 683 123 (set (reg:SI 2 cx)
        (reg:SI 90 [ D.11546 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 683 682 684 123 (set (reg:DI 1 dx)
        (reg/v/f:DI 214 [ string_end ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 684 683 685 123 (set (reg:DI 4 si)
        (reg/v/f:DI 166 [ string ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 685 684 686 123 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ p ])) fnmatch_loop.c:1163 -1
     (nil))
(call_insn 686 685 687 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 687 686 688 123 (set (reg:SI 193 [ D.11546 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1163 -1
     (nil))
(insn 688 687 689 123 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 689 688 690 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 193 [ D.11546 ])
            (const_int 0 [0]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 690 689 694 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 766)
            (pc))) fnmatch_loop.c:1163 612 {*jcc_1}
     (int_list:REG_BR_PROB 299 (nil))
 -> 766)
(note 694 690 692 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(jump_insn 692 694 693 124 (set (pc)
        (label_ref 691)) fnmatch_loop.c:1163 -1
     (nil)
 -> 691)
(barrier 693 692 695)
(code_label 695 693 698 125 68 "" [1 uses])
(note 698 695 696 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 696 698 697 125 (set (reg/i:SI 0 ax)
        (reg:SI 210 [ <retval> ])) fnmatch_loop.c:1258 -1
     (nil))
(insn 697 696 0 125 (use (reg/i:SI 0 ax)) fnmatch_loop.c:1258 -1
     (nil))

;; Function internal_fnwmatch (internal_fnwmatch, funcdef_no=50, decl_uid=8982, cgraph_uid=50, symbol_order=59)

Partition 1: size 8196 align 16
	str	str	end
Partition 2: size 2049 align 16
	s

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227

;; Generating RTL for gimple basic block 228

;; Generating RTL for gimple basic block 229

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233

;; Generating RTL for gimple basic block 234

;; Generating RTL for gimple basic block 235

;; Generating RTL for gimple basic block 236

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238

;; Generating RTL for gimple basic block 239

;; Generating RTL for gimple basic block 240

;; Generating RTL for gimple basic block 241

;; Generating RTL for gimple basic block 242

;; Generating RTL for gimple basic block 243

;; Generating RTL for gimple basic block 244

;; Generating RTL for gimple basic block 245

;; Generating RTL for gimple basic block 246

;; Generating RTL for gimple basic block 247

;; Generating RTL for gimple basic block 248

;; Generating RTL for gimple basic block 249

;; Generating RTL for gimple basic block 250

;; Generating RTL for gimple basic block 251

;; Generating RTL for gimple basic block 252

;; Generating RTL for gimple basic block 253

;; Generating RTL for gimple basic block 254

;; Generating RTL for gimple basic block 255

;; Generating RTL for gimple basic block 256

;; Generating RTL for gimple basic block 257

;; Generating RTL for gimple basic block 258

;; Generating RTL for gimple basic block 259

;; Generating RTL for gimple basic block 260

;; Generating RTL for gimple basic block 261

;; Generating RTL for gimple basic block 262

;; Generating RTL for gimple basic block 263

;; Generating RTL for gimple basic block 264

;; Generating RTL for gimple basic block 265

;; Generating RTL for gimple basic block 266

;; Generating RTL for gimple basic block 267

;; Generating RTL for gimple basic block 268

;; Generating RTL for gimple basic block 269

;; Generating RTL for gimple basic block 270

;; Generating RTL for gimple basic block 271

;; Generating RTL for gimple basic block 272

;; Generating RTL for gimple basic block 273

;; Generating RTL for gimple basic block 274

;; Generating RTL for gimple basic block 275

;; Generating RTL for gimple basic block 276

;; Generating RTL for gimple basic block 277

;; Generating RTL for gimple basic block 278

;; Generating RTL for gimple basic block 279

;; Generating RTL for gimple basic block 280

;; Generating RTL for gimple basic block 281

;; Generating RTL for gimple basic block 282

;; Generating RTL for gimple basic block 283

;; Generating RTL for gimple basic block 284

;; Generating RTL for gimple basic block 285

;; Generating RTL for gimple basic block 286

;; Generating RTL for gimple basic block 287

;; Generating RTL for gimple basic block 288

;; Generating RTL for gimple basic block 289

;; Generating RTL for gimple basic block 290

;; Generating RTL for gimple basic block 291

;; Generating RTL for gimple basic block 292

;; Generating RTL for gimple basic block 293

;; Generating RTL for gimple basic block 294

;; Generating RTL for gimple basic block 295

;; Generating RTL for gimple basic block 296

;; Generating RTL for gimple basic block 297

;; Generating RTL for gimple basic block 298

;; Generating RTL for gimple basic block 299

;; Generating RTL for gimple basic block 300

;; Generating RTL for gimple basic block 301

;; Generating RTL for gimple basic block 302

;; Generating RTL for gimple basic block 303

;; Generating RTL for gimple basic block 304

;; Generating RTL for gimple basic block 305

;; Generating RTL for gimple basic block 306

;; Generating RTL for gimple basic block 307

;; Generating RTL for gimple basic block 308

;; Generating RTL for gimple basic block 309

;; Generating RTL for gimple basic block 310

;; Generating RTL for gimple basic block 311

;; Generating RTL for gimple basic block 312

;; Generating RTL for gimple basic block 313

;; Generating RTL for gimple basic block 314

;; Generating RTL for gimple basic block 315

;; Generating RTL for gimple basic block 316

;; Generating RTL for gimple basic block 317

;; Generating RTL for gimple basic block 318

;; Generating RTL for gimple basic block 319

;; Generating RTL for gimple basic block 320

;; Generating RTL for gimple basic block 321

;; Generating RTL for gimple basic block 322

;; Generating RTL for gimple basic block 323
Edge 9->316 redirected to 364
Edge 24->316 redirected to 365
Edge 41->316 redirected to 366
Edge 43->45 redirected to 367
Edge 56->64 redirected to 368
Edge 62->64 redirected to 369
Edge 82->84 redirected to 370
Edge 110->109 redirected to 372
Edge 128->141 redirected to 373
Edge 132->141 redirected to 374
Edge 142->165 redirected to 375
Edge 149->154 redirected to 377
Edge 154->165 redirected to 378
Edge 189->120 redirected to 379
Edge 253->264 redirected to 382
Edge 288->295 redirected to 383
Edge 300->316 redirected to 384
Edge 312->316 redirected to 386
Edge 314->316 redirected to 387
Purged non-fallthru edges from bb 390
Purged non-fallthru edges from bb 392
Purged non-fallthru edges from bb 394
Purged non-fallthru edges from bb 396
Purged non-fallthru edges from bb 399
Purged non-fallthru edges from bb 404
Purged non-fallthru edges from bb 406


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 14 failed.
Forwarding edge 12->13 to 9 failed.
Edge 17->19 redirected to 20
Forwarding edge 18->19 to 20 failed.
Deleted label in block 19.
Forwarding edge 24->25 to 28 failed.
Forwarding edge 34->35 to 38 failed.
Edge 39->41 redirected to 42
Forwarding edge 40->41 to 42 failed.
Deleted label in block 41.
Edge 42->44 redirected to 45
Forwarding edge 43->44 to 45 failed.
Deleted label in block 44.
Edge 46->48 redirected to 49
Forwarding edge 47->48 to 49 failed.
Deleted label in block 48.
Forwarding edge 51->52 to 49 failed.
Forwarding edge 63->64 to 66 failed.
Forwarding edge 74->75 to 104 failed.
Forwarding edge 76->77 to 105 failed.
Forwarding edge 84->85 to 409 failed.
Forwarding edge 114->115 to 118 failed.
Edge 119->121 redirected to 122
Forwarding edge 120->121 to 122 failed.
Deleted label in block 121.
Edge 139->148 redirected to 284
Edge 142->401 redirected to 154
Edge 143->401 redirected to 154
Edge 145->153 redirected to 154
Forwarding edge 145->146 to 151 failed.
Forwarding edge 145->146 to 151 failed.
Forwarding edge 147->148 to 284 failed.
Deleted label in block 148.
Redirecting jump 743 from 407 to 284.
Edge 149->153 redirected to 154
deleting block 153
Edge 159->225 redirected to 284
Edge 160->225 redirected to 284
Edge 161->225 redirected to 284
Edge 196->198 redirected to 201
Forwarding edge 197->198 to 201 failed.
Deleted label in block 198.
Merging block 199 into block 198...
Merged blocks 198 and 199.
Merged 198 and 199 without moving.
Forwarding edge 197->198 to 201 failed.
Forwarding edge 197->198 to 201 failed.
Forwarding edge 221->222 to 164 failed.
Forwarding edge 223->224 to 164 failed.
deleting block 225
Forwarding edge 227->228 to 277 failed.
Forwarding edge 246->247 to 253 failed.
Forwarding edge 249->250 to 246 failed.
Forwarding edge 258->259 to 262 failed.
Forwarding edge 260->261 to 268 failed.
Edge 281->283 redirected to 284
Forwarding edge 282->283 to 284 failed.
Deleted label in block 283.
Forwarding edge 298->299 to 304 failed.
Forwarding edge 305->306 to 312 failed.
Forwarding edge 308->309 to 305 failed.
Forwarding edge 346->347 to 355 failed.
Forwarding edge 374->375 to 380 failed.
deleting block 401
Forwarding edge 403->404 to 335 failed.
Forwarding edge 405->406 to 29 failed.
deleting block 407
Forwarding edge 409->410 to 105 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 14 failed.
Forwarding edge 12->13 to 9 failed.
Forwarding edge 18->19 to 20 failed.
Forwarding edge 24->25 to 28 failed.
Forwarding edge 34->35 to 38 failed.
Forwarding edge 40->41 to 42 failed.
Forwarding edge 43->44 to 45 failed.
Forwarding edge 47->48 to 49 failed.
Forwarding edge 51->52 to 49 failed.
Forwarding edge 63->64 to 66 failed.
Forwarding edge 74->75 to 104 failed.
Forwarding edge 76->77 to 105 failed.
Forwarding edge 84->85 to 409 failed.
Forwarding edge 114->115 to 118 failed.
Forwarding edge 120->121 to 122 failed.
Forwarding edge 145->146 to 151 failed.
Forwarding edge 147->148 to 284 failed.
Forwarding edge 197->198 to 201 failed.
Forwarding edge 221->222 to 164 failed.
Forwarding edge 223->224 to 164 failed.
Forwarding edge 227->228 to 277 failed.
Forwarding edge 246->247 to 253 failed.
Forwarding edge 249->250 to 246 failed.
Forwarding edge 258->259 to 262 failed.
Forwarding edge 260->261 to 268 failed.
Forwarding edge 282->283 to 284 failed.
Forwarding edge 298->299 to 304 failed.
Forwarding edge 305->306 to 312 failed.
Forwarding edge 308->309 to 305 failed.
Forwarding edge 346->347 to 355 failed.
Forwarding edge 374->375 to 380 failed.
Forwarding edge 403->404 to 335 failed.
Forwarding edge 405->406 to 29 failed.
Forwarding edge 409->410 to 105 failed.


;;
;; Full RTL generated for this function:
;;
(note 9 0 96 NOTE_INSN_DELETED)
(note 96 9 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 10 96 11 2 (set (reg/v/f:DI 620 [ pattern ])
        (reg:DI 5 di [ pattern ])) fnmatch_loop.c:43 -1
     (nil))
(insn 11 10 12 2 (set (reg/v/f:DI 621 [ string ])
        (reg:DI 4 si [ string ])) fnmatch_loop.c:43 -1
     (nil))
(insn 12 11 13 2 (set (reg/v/f:DI 622 [ string_end ])
        (reg:DI 1 dx [ string_end ])) fnmatch_loop.c:43 -1
     (nil))
(insn 13 12 14 2 (set (reg/v:SI 623 [ no_leading_period ])
        (reg:SI 2 cx [ no_leading_period ])) fnmatch_loop.c:43 -1
     (nil))
(insn 14 13 15 2 (set (reg/v:SI 624 [ flags ])
        (reg:SI 37 r8 [ flags ])) fnmatch_loop.c:43 -1
     (nil))
(insn 15 14 16 2 (set (reg/v/f:DI 625 [ ends ])
        (reg:DI 38 r9 [ ends ])) fnmatch_loop.c:43 -1
     (nil))
(insn 16 15 17 2 (set (reg/v:DI 626 [ alloca_used ])
        (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])) fnmatch_loop.c:43 -1
     (expr_list:REG_EQUIV (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])
        (nil)))
(note 17 16 98 2 NOTE_INSN_FUNCTION_BEG)
(insn 98 17 99 2 (set (reg:DI 628)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:49 -1
     (nil))
(insn 99 98 100 2 (set (reg/f:DI 627)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 628)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:49 -1
     (nil))
(insn 100 99 101 2 (set (reg/f:DI 629)
        (mem/f:DI (plus:DI (reg/f:DI 627)
                (const_int 24 [0x18])) [1 _126->__locales+24 S8 A64])) fnmatch_loop.c:48 -1
     (nil))
(insn 101 100 102 2 (set (reg/v/f:DI 146 [ collseq ])
        (mem/f:DI (plus:DI (reg/f:DI 629)
                (const_int 200 [0xc8])) [0 _127->values[17].string+0 S8 A64])) fnmatch_loop.c:48 -1
     (nil))
(insn 102 101 104 2 (parallel [
            (set (reg:SI 122 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:171 -1
     (nil))
(insn 104 102 105 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 122 [ D.11716 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 105 104 106 2 (parallel [
            (set (reg:SI 630)
                (if_then_else:SI (ltu:SI (reg:CC 17 flags)
                        (const_int 0 [0]))
                    (const_int -1 [0xffffffffffffffff])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 106 105 107 2 (set (reg:SI 630)
        (not:SI (reg:SI 630))) -1
     (nil))
(insn 107 106 108 2 (parallel [
            (set (reg:SI 630)
                (and:SI (reg:SI 630)
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 108 107 109 2 (set (reg:SI 124 [ D.11716 ])
        (reg:SI 630)) -1
     (nil))
(insn 109 108 110 2 (parallel [
            (set (reg/v:SI 184 [ flags ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:182 -1
     (nil))
(insn 110 109 111 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 111 110 112 2 (set (reg:SI 631)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 624 [ flags ])
            (reg/v:SI 184 [ flags ]))) -1
     (nil))
(insn 112 111 81 2 (set (reg/v:SI 125 [ flags ])
        (reg:SI 631)) -1
     (nil))
(insn 81 112 113 2 (set (reg/v/f:DI 103 [ np ])
        (reg/v/f:DI 621 [ string ])) fnmatch_loop.c:44 -1
     (nil))
(jump_insn 113 81 114 2 (set (pc)
        (label_ref 1889)) fnmatch_loop.c:56 -1
     (nil)
 -> 1889)
(barrier 114 113 1893)
(code_label 1893 114 115 4 379 "" [1 uses])
(note 115 1893 116 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 4 (parallel [
            (set (reg:SI 149 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:59 -1
     (nil))
(insn 117 116 118 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:59 -1
     (nil))
(jump_insn 118 117 119 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) fnmatch_loop.c:59 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 123)
(note 119 118 120 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 5 (set (reg:SI 5 di)
        (reg/v:SI 121 [ c ])) fnmatch_loop.c:59 -1
     (nil))
(call_insn/i 121 120 122 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 122 121 123 5 (set (reg/v:SI 121 [ c ])
        (reg:SI 0 ax)) fnmatch_loop.c:59 -1
     (nil))
(code_label 123 122 124 6 194 "" [1 uses])
(note 124 123 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 6 (parallel [
            (set (reg:SI 632)
                (plus:SI (reg/v:SI 121 [ c ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:61 -1
     (nil))
(insn 126 125 127 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 632)
            (const_int 59 [0x3b]))) fnmatch_loop.c:61 -1
     (nil))
(jump_insn 127 126 2062 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) fnmatch_loop.c:61 -1
     (int_list:REG_BR_PROB 714 (nil))
 -> 1863)
(note 2062 127 128 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 128 2062 129 7 (set (reg:DI 633)
        (zero_extend:DI (reg:SI 632))) fnmatch_loop.c:61 -1
     (nil))
(insn 129 128 130 7 (set (reg/f:DI 634)
        (label_ref:DI 135)) fnmatch_loop.c:61 -1
     (insn_list:REG_LABEL_OPERAND 135 (nil)))
(insn 130 129 131 7 (set (reg:SI 635)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 633)
                    (const_int 2 [0x2]))
                (reg/f:DI 634)) [0  S4 A8])) fnmatch_loop.c:61 -1
     (nil))
(insn 131 130 132 7 (set (reg:DI 636)
        (sign_extend:DI (reg:SI 635))) fnmatch_loop.c:61 -1
     (nil))
(insn 132 131 133 7 (set (reg:DI 638)
        (label_ref:DI 135)) fnmatch_loop.c:61 -1
     (insn_list:REG_LABEL_OPERAND 135 (nil)))
(insn 133 132 134 7 (parallel [
            (set (reg:DI 637)
                (plus:DI (reg:DI 636)
                    (reg:DI 638)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:61 -1
     (nil))
(jump_insn 134 133 135 7 (parallel [
            (set (pc)
                (reg:DI 637))
            (use (label_ref 135))
        ]) fnmatch_loop.c:61 -1
     (nil)
 -> 135)
(code_label 135 134 136 197 "" [3 uses])
(jump_table_data 136 135 137 (addr_diff_vec:SI (label_ref:DI 135)
         [
            (label_ref:DI 1824)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 242)
            (label_ref:DI 1824)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1849)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 138)
            (label_ref:DI 1824)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 1863)
            (label_ref:DI 569)
            (label_ref:DI 196)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 137 136 138)
(code_label 138 137 139 8 200 "" [1 uses])
(note 139 138 140 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 8 (parallel [
            (set (reg:SI 639 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:64 -1
     (nil))
(insn 141 140 142 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 639 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:64 -1
     (nil))
(jump_insn 142 141 151 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) fnmatch_loop.c:64 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 149)
(code_label 151 142 143 9 206 "" [2 uses])
(note 143 151 144 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:72 -1
     (nil))
(jump_insn 145 144 148 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:72 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 148 145 146 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 146 148 147 10 (set (pc)
        (label_ref 171)) -1
     (nil)
 -> 171)
(barrier 147 146 149)
(code_label 149 147 150 11 203 "" [1 uses])
(note 150 149 152 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 152 150 153 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:64 -1
     (nil))
(jump_insn 153 152 154 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) fnmatch_loop.c:64 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 151)
(note 154 153 155 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:66 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 156 155 157 12 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:66 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 157 156 158 12 (set (reg:SI 38 r9)
        (reg/v:SI 624 [ flags ])) fnmatch_loop.c:66 -1
     (nil))
(insn 158 157 159 12 (set (reg:SI 37 r8)
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:66 -1
     (nil))
(insn 159 158 160 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:66 -1
     (nil))
(insn 160 159 161 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:66 -1
     (nil))
(insn 161 160 162 12 (set (reg:DI 4 si)
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:66 -1
     (nil))
(insn 162 161 163 12 (set (reg:SI 5 di)
        (const_int 63 [0x3f])) fnmatch_loop.c:66 -1
     (nil))
(call_insn 163 162 164 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>) [0 ext_wmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:66 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 164 163 165 12 (set (reg/v:SI 441 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:66 -1
     (nil))
(insn 165 164 166 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:68 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 166 165 167 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 441 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:68 -1
     (nil))
(jump_insn 167 166 170 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1986)
            (pc))) fnmatch_loop.c:68 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1986)
(note 170 167 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 168 170 169 13 (set (pc)
        (label_ref 151)) -1
     (nil)
 -> 151)
(barrier 169 168 171)
(code_label 171 169 172 14 205 "" [1 uses])
(note 172 171 173 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 14 (set (reg:SI 439 [ D.11716 ])
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:74 -1
     (nil))
(insn 174 173 175 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 439 [ D.11716 ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:74 -1
     (nil))
(jump_insn 175 174 176 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) fnmatch_loop.c:74 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 182)
(note 176 175 177 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:74 -1
     (nil))
(jump_insn 178 177 181 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:74 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 181 178 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 79 181 179 16 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 179 79 180 16 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 180 179 182)
(code_label 182 180 183 17 208 "" [1 uses])
(note 183 182 184 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 623 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 185 184 186 17 (set (reg:QI 641 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 186 185 187 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 641 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(jump_insn 187 186 2063 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2086)
            (pc))) fnmatch_loop.c:76 612 {*jcc_1}
     (int_list:REG_BR_PROB 4900 (nil))
 -> 2086)
(note 2063 187 188 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 188 2063 189 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 439 [ D.11716 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:76 -1
     (nil))
(insn 189 188 190 18 (set (reg:QI 643 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 190 189 191 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 643 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(jump_insn 191 190 2064 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:76 -1
     (int_list:REG_BR_PROB 392 (nil))
 -> 1906)
(note 2064 191 2086 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(code_label 2086 2064 195 20 403 "" [1 uses])
(note 195 2086 72 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 72 195 193 20 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 193 72 194 20 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 194 193 196)
(code_label 196 194 197 21 202 "" [1 uses])
(note 197 196 198 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 21 (parallel [
            (set (reg:SI 644 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:81 -1
     (nil))
(insn 199 198 200 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 644 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:81 -1
     (nil))
(jump_insn 200 199 201 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) fnmatch_loop.c:81 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 218)
(note 201 200 202 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 22 (parallel [
            (set (reg/v/f:DI 102 [ pattern ])
                (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:83 -1
     (nil))
(insn 203 202 204 22 (set (reg/v:SI 121 [ c ])
        (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])) fnmatch_loop.c:83 -1
     (nil))
(insn 204 203 205 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 121 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:84 -1
     (nil))
(jump_insn 205 204 206 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:84 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 206 205 207 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:87 -1
     (nil))
(jump_insn 208 207 209 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1939)
            (pc))) fnmatch_loop.c:87 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1939)
(note 209 208 210 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 24 (set (reg:SI 5 di)
        (reg/v:SI 121 [ c ])) fnmatch_loop.c:87 -1
     (nil))
(call_insn/i 211 210 212 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 212 211 213 24 (set (reg/v:SI 121 [ c ])
        (reg:SI 0 ax)) fnmatch_loop.c:87 -1
     (nil))
(insn 213 212 214 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 214 213 217 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 217 214 215 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 215 217 216 25 (set (pc)
        (label_ref 225)) fnmatch_loop.c:89 -1
     (nil)
 -> 225)
(barrier 216 215 218)
(code_label 218 216 219 26 211 "" [1 uses])
(note 219 218 220 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 221 220 222 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 222 221 223 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 224 223 225 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 5017 (nil))
 -> 232)
(code_label 225 224 226 28 213 "" [1 uses])
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg:SI 5 di)
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:89 -1
     (nil))
(call_insn/i 228 227 229 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 229 228 230 28 (set (reg:SI 123 [ D.11717 ])
        (reg:SI 0 ax)) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 230 229 231 28 (set (pc)
        (label_ref 235)) -1
     (nil)
 -> 235)
(barrier 231 230 232)
(code_label 232 231 233 29 214 "" [2 uses])
(note 233 232 234 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 29 (set (reg:SI 123 [ D.11717 ])
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:89 -1
     (nil))
(code_label 235 234 236 30 215 "" [1 uses])
(note 236 235 237 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ D.11717 ])
            (reg/v:SI 121 [ c ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 238 237 241 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 241 238 73 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 73 241 239 31 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 239 73 240 31 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 240 239 242)
(code_label 242 240 243 32 198 "" [1 uses])
(note 243 242 244 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 32 (parallel [
            (set (reg:SI 453 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 245 244 246 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 453 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:94 -1
     (nil))
(jump_insn 246 245 247 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) fnmatch_loop.c:94 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 267)
(note 247 246 248 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:94 -1
     (nil))
(jump_insn 249 248 250 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) fnmatch_loop.c:94 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 267)
(note 250 249 251 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 34 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:96 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 252 251 253 34 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:96 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 253 252 254 34 (set (reg:SI 38 r9)
        (reg/v:SI 624 [ flags ])) fnmatch_loop.c:96 -1
     (nil))
(insn 254 253 255 34 (set (reg:SI 37 r8)
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:96 -1
     (nil))
(insn 255 254 256 34 (set (reg:DI 2 cx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:96 -1
     (nil))
(insn 256 255 257 34 (set (reg:DI 1 dx)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:96 -1
     (nil))
(insn 257 256 258 34 (set (reg:DI 4 si)
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:96 -1
     (nil))
(insn 258 257 259 34 (set (reg:SI 5 di)
        (const_int 42 [0x2a])) fnmatch_loop.c:96 -1
     (nil))
(call_insn 259 258 260 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>) [0 ext_wmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:96 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 260 259 261 34 (set (reg/v:SI 151 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:96 -1
     (nil))
(insn 261 260 262 34 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:98 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 262 261 263 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 151 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:98 -1
     (nil))
(jump_insn 263 262 266 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1990)
            (pc))) fnmatch_loop.c:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1990)
(note 266 263 264 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 264 266 265 35 (set (pc)
        (label_ref 277)) -1
     (nil)
 -> 277)
(barrier 265 264 267)
(code_label 267 265 268 36 216 "" [2 uses])
(note 268 267 269 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 625 [ ends ])
            (const_int 0 [0]))) fnmatch_loop.c:101 -1
     (nil))
(jump_insn 270 269 271 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 277)
            (pc))) fnmatch_loop.c:101 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 277)
(note 271 270 272 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 37 (set (mem/f:DI (reg/v/f:DI 625 [ ends ]) [1 ends_147(D)->pattern+0 S8 A128])
        (reg/v/f:DI 620 [ pattern ])) fnmatch_loop.c:103 -1
     (nil))
(insn 273 272 274 37 (set (mem/f:DI (plus:DI (reg/v/f:DI 625 [ ends ])
                (const_int 8 [0x8])) [1 ends_147(D)->string+0 S8 A64])
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:104 -1
     (nil))
(insn 274 273 88 37 (set (mem:SI (plus:DI (reg/v/f:DI 625 [ ends ])
                (const_int 16 [0x10])) [2 ends_147(D)->no_leading_period+0 S4 A128])
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:105 -1
     (nil))
(insn 88 274 275 37 (set (reg:SI 122 [ D.11716 ])
        (const_int 0 [0])) fnmatch_loop.c:106 -1
     (nil))
(jump_insn 275 88 276 37 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:106 -1
     (nil)
 -> 1908)
(barrier 276 275 277)
(code_label 277 276 278 38 217 "" [2 uses])
(note 278 277 279 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 280 279 281 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) fnmatch_loop.c:109 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 291)
(note 281 280 282 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])
            (const_int 46 [0x2e]))) fnmatch_loop.c:109 -1
     (nil))
(insn 283 282 284 39 (set (reg:QI 646 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 284 283 285 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 646 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 285 284 2065 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 291)
            (pc))) fnmatch_loop.c:109 612 {*jcc_1}
     (int_list:REG_BR_PROB 4900 (nil))
 -> 291)
(note 2065 285 286 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 286 2065 287 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 623 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 287 286 288 40 (set (reg:QI 648 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 288 287 289 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 648 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 289 288 2066 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:109 -1
     (int_list:REG_BR_PROB 392 (nil))
 -> 1906)
(note 2066 289 291 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(code_label 291 2066 292 42 218 "" [2 uses])
(note 292 291 293 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 42 (parallel [
            (set (reg/v/f:DI 163 [ p ])
                (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:112 -1
     (nil))
(insn 294 293 295 42 (set (reg/v:SI 116 [ c ])
        (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])) fnmatch_loop.c:112 -1
     (nil))
(insn 295 294 296 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 42 [0x2a]))) fnmatch_loop.c:112 -1
     (nil))
(insn 296 295 297 42 (set (reg:QI 650 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 297 296 298 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 650 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 298 297 2067 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2087)
            (pc))) fnmatch_loop.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 4850 (nil))
 -> 2087)
(note 2067 298 299 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 299 2067 300 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:112 -1
     (nil))
(insn 300 299 301 43 (set (reg:QI 652 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 301 300 302 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 652 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 302 301 2068 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 583 (nil))
 -> 359)
(note 2068 302 2087 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(code_label 2087 2068 304 45 404 "" [1 uses])
(note 304 2087 305 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 453 [ D.11716 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 306 305 307 45 (set (reg:QI 653)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 307 306 350 45 (set (reg:QI 616 [ D.11715 ])
        (reg:QI 653)) -1
     (nil))
(code_label 350 307 308 46 228 "" [2 uses])
(note 308 350 309 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 163 [ p ]) [2 *p_651+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:114 -1
     (nil))
(insn 310 309 311 46 (set (reg:QI 655 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(insn 311 310 312 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 655 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(jump_insn 312 311 2069 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 329)
            (pc))) fnmatch_loop.c:114 612 {*jcc_1}
     (int_list:REG_BR_PROB 3550 (nil))
 -> 329)
(note 2069 312 313 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 313 2069 314 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 616 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(jump_insn 314 313 2070 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 322)
            (pc))) fnmatch_loop.c:114 -1
     (int_list:REG_BR_PROB 4496 (nil))
 -> 322)
(note 2070 314 329 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(code_label 329 2070 316 49 226 "" [2 uses])
(note 316 329 317 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:125 -1
     (nil))
(jump_insn 318 317 321 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) fnmatch_loop.c:125 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 333)
(note 321 318 18 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 18 321 319 50 (set (reg/v/f:DI 96 [ p ])
        (reg/v/f:DI 163 [ p ])) -1
     (nil))
(jump_insn 319 18 320 50 (set (pc)
        (label_ref 346)) -1
     (nil)
 -> 346)
(barrier 320 319 322)
(code_label 322 320 323 51 222 "" [1 uses])
(note 323 322 324 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 51 (set (reg:DI 5 di)
        (reg/v/f:DI 163 [ p ])) fnmatch_loop.c:116 -1
     (nil))
(call_insn 325 324 326 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("end_wpattern") [flags 0x3]  <function_decl 0x2aeef6f18510 end_wpattern>) [0 end_wpattern S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("end_wpattern") [flags 0x3]  <function_decl 0x2aeef6f18510 end_wpattern>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 326 325 327 51 (set (reg/v/f:DI 96 [ p ])
        (reg:DI 0 ax)) fnmatch_loop.c:116 -1
     (nil))
(insn 327 326 328 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 96 [ p ])
            (reg/v/f:DI 163 [ p ]))) fnmatch_loop.c:117 -1
     (nil))
(jump_insn 328 327 332 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) fnmatch_loop.c:117 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 346)
(note 332 328 330 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 330 332 331 52 (set (pc)
        (label_ref 329)) -1
     (nil)
 -> 329)
(barrier 331 330 333)
(code_label 333 331 334 53 224 "" [1 uses])
(note 334 333 335 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 622 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:128 -1
     (nil))
(jump_insn 336 335 337 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:128 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1906)
(note 337 336 338 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_649]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:131 -1
     (nil))
(jump_insn 339 338 340 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) fnmatch_loop.c:131 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 343)
(note 340 339 341 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:132 -1
     (nil))
(jump_insn 342 341 343 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:132 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 1906)
(code_label 343 342 344 56 227 "" [1 uses])
(note 344 343 345 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 19 56 (parallel [
            (set (reg/v/f:DI 103 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:140 -1
     (nil))
(insn 19 345 346 56 (set (reg/v/f:DI 96 [ p ])
        (reg/v/f:DI 163 [ p ])) fnmatch_loop.c:140 -1
     (nil))
(code_label 346 19 347 57 225 "" [2 uses])
(note 347 346 348 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 349 57 (parallel [
            (set (reg/v/f:DI 163 [ p ])
                (plus:DI (reg/v/f:DI 96 [ p ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:112 -1
     (nil))
(insn 349 348 351 57 (set (reg/v:SI 116 [ c ])
        (mem:SI (reg/v/f:DI 96 [ p ]) [2 *p_5+0 S4 A32])) fnmatch_loop.c:112 -1
     (nil))
(insn 351 349 352 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:112 -1
     (nil))
(insn 352 351 353 57 (set (reg:QI 657 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 353 352 354 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 657 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 354 353 2071 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 4850 (nil))
 -> 350)
(note 2071 354 355 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 355 2071 356 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 42 [0x2a]))) fnmatch_loop.c:112 -1
     (nil))
(insn 356 355 357 58 (set (reg:QI 659 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 357 356 358 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 659 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 358 357 359 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 9417 (nil))
 -> 350)
(code_label 359 358 360 59 220 "" [1 uses])
(note 360 359 361 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:144 -1
     (nil))
(jump_insn 362 361 363 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) fnmatch_loop.c:144 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 384)
(note 363 362 364 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:152 -1
     (nil))
(jump_insn 365 364 366 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1908)
            (pc))) fnmatch_loop.c:152 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 1908)
(note 366 365 367 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 61 (parallel [
            (set (reg:SI 660 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:154 -1
     (nil))
(insn 368 367 369 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 660 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:154 -1
     (nil))
(jump_insn 369 368 370 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1994)
            (pc))) fnmatch_loop.c:154 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 1994)
(note 370 369 371 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 62 (parallel [
            (set (reg:DI 661 [ D.11724 ])
                (minus:DI (reg/v/f:DI 622 [ string_end ])
                    (reg/v/f:DI 103 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:158 -1
     (nil))
(insn 372 371 373 62 (parallel [
            (set (reg:DI 663 [ D.11724 ])
                (ashiftrt:DI (reg:DI 661 [ D.11724 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:158 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 661 [ D.11724 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 373 372 374 62 (set (reg:DI 1 dx)
        (reg:DI 663 [ D.11724 ])) fnmatch_loop.c:158 -1
     (nil))
(insn 374 373 375 62 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) fnmatch_loop.c:158 -1
     (nil))
(insn 375 374 376 62 (set (reg:DI 5 di)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:158 -1
     (nil))
(call_insn/i 376 375 377 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___wmemchr") [flags 0x43]  <function_decl 0x2aeef6e58798 __wmemchr>) [0 __wmemchr S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___wmemchr") [flags 0x43]  <function_decl 0x2aeef6e58798 __wmemchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 377 376 378 62 (set (reg/f:DI 193 [ D.11725 ])
        (reg:DI 0 ax)) fnmatch_loop.c:158 -1
     (nil))
(insn 378 377 379 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 193 [ D.11725 ])
            (const_int 0 [0]))) fnmatch_loop.c:66 -1
     (nil))
(insn 379 378 380 62 (set (reg:QI 665)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:66 -1
     (nil))
(insn 380 379 381 62 (set (reg:SI 664 [ D.11715 ])
        (zero_extend:SI (reg:QI 665))) fnmatch_loop.c:66 -1
     (nil))
(insn 381 380 382 62 (set (reg:SI 122 [ D.11716 ])
        (reg:SI 664 [ D.11715 ])) fnmatch_loop.c:66 -1
     (nil))
(jump_insn 382 381 383 62 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 383 382 384)
(code_label 384 383 385 63 229 "" [1 uses])
(note 385 384 386 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 63 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8208 [0xffffffffffffdff0])) [1 end.pattern+0 S8 A128])
        (const_int 0 [0])) fnmatch_loop.c:170 -1
     (nil))
(insn 387 386 388 63 (parallel [
            (set (reg:DI 666 [ D.11724 ])
                (minus:DI (reg/v/f:DI 622 [ string_end ])
                    (reg/v/f:DI 103 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:171 -1
     (nil))
(insn 388 387 389 63 (parallel [
            (set (reg:DI 667 [ D.11724 ])
                (ashiftrt:DI (reg:DI 666 [ D.11724 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:171 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 666 [ D.11724 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 389 388 390 63 (set (reg:DI 169 [ D.11714 ])
        (reg:DI 667 [ D.11724 ])) fnmatch_loop.c:171 -1
     (nil))
(insn 390 389 391 63 (set (reg:DI 1 dx)
        (reg:DI 169 [ D.11714 ])) fnmatch_loop.c:171 -1
     (nil))
(insn 391 390 392 63 (set (reg:SI 4 si)
        (reg:SI 124 [ D.11716 ])) fnmatch_loop.c:171 -1
     (nil))
(insn 392 391 393 63 (set (reg:DI 5 di)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:171 -1
     (nil))
(call_insn/i 393 392 394 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___wmemchr") [flags 0x43]  <function_decl 0x2aeef6e58798 __wmemchr>) [0 __wmemchr S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___wmemchr") [flags 0x43]  <function_decl 0x2aeef6e58798 __wmemchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 394 393 395 63 (set (reg/v/f:DI 108 [ string_end ])
        (reg:DI 0 ax)) fnmatch_loop.c:171 -1
     (nil))
(insn 395 394 396 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 108 [ string_end ])
            (const_int 0 [0]))) fnmatch_loop.c:173 -1
     (nil))
(jump_insn 396 395 397 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1998)
            (pc))) fnmatch_loop.c:173 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1998)
(note 397 396 1995 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1995 397 1996 64 (set (pc)
        (label_ref 398)) -1
     (nil)
 -> 398)
(barrier 1996 1995 1998)
(code_label 1998 1996 1997 65 387 "" [1 uses])
(note 1997 1998 20 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 20 1997 398 65 (set (reg/v/f:DI 108 [ string_end ])
        (reg/v/f:DI 622 [ string_end ])) -1
     (nil))
(code_label 398 20 399 66 230 "" [1 uses])
(note 399 398 400 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:176 -1
     (nil))
(jump_insn 401 400 402 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 420)
            (pc))) fnmatch_loop.c:176 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 420)
(note 402 401 403 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 453 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:177 -1
     (nil))
(jump_insn 404 403 405 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) fnmatch_loop.c:177 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 458)
(note 405 404 406 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 68 (parallel [
            (set (reg:SI 528 [ D.11717 ])
                (plus:SI (reg/v:SI 116 [ c ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 407 406 408 68 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 528 [ D.11717 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:178 -1
     (nil))
(jump_insn 408 407 409 68 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) fnmatch_loop.c:178 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 483)
(note 409 408 410 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 69 (set (reg:DI 669)
        (const_int 2147484673 [0x80000401])) fnmatch_loop.c:178 -1
     (nil))
(insn 411 410 412 69 (parallel [
            (set (reg:DI 668 [ D.11714 ])
                (lshiftrt:DI (reg:DI 669)
                    (subreg:QI (reg:SI 528 [ D.11717 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 412 411 413 69 (parallel [
            (set (reg:DI 670 [ D.11714 ])
                (and:DI (reg:DI 668 [ D.11714 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 413 412 414 69 (parallel [
            (set (reg:DI 671 [ D.11714 ])
                (xor:DI (reg:DI 670 [ D.11714 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 414 413 415 69 (parallel [
            (set (reg:QI 672 [ D.11715 ])
                (and:QI (subreg:QI (reg:DI 671 [ D.11714 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 415 414 416 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 672 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:178 -1
     (nil))
(jump_insn 416 415 417 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) fnmatch_loop.c:178 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 458)
(note 417 416 418 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 163 [ p ]) [2 *p_652+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:179 -1
     (nil))
(jump_insn 419 418 420 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 458)
            (pc))) fnmatch_loop.c:179 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 458)
(code_label 420 419 421 71 231 "" [1 uses])
(note 421 420 422 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 71 (parallel [
            (set (reg/v/f:DI 185 [ p ])
                (plus:DI (reg/v/f:DI 163 [ p ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:184 -1
     (nil))
(insn 423 422 424 71 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 108 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:184 -1
     (nil))
(jump_insn 424 423 425 71 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) fnmatch_loop.c:184 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 561)
(note 425 424 452 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(code_label 452 425 426 73 238 "" [1 uses])
(note 426 452 427 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 73 (parallel [
            (set (reg:DI 673)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8208 [0xffffffffffffdff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (nil))
(insn 428 427 429 73 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 429 428 430 73 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 430 429 431 73 (set (reg:DI 38 r9)
        (reg:DI 673)) fnmatch_loop.c:185 -1
     (nil))
(insn 431 430 432 73 (set (reg:SI 37 r8)
        (reg/v:SI 125 [ flags ])) fnmatch_loop.c:185 -1
     (nil))
(insn 432 431 433 73 (set (reg:SI 2 cx)
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:185 -1
     (nil))
(insn 433 432 434 73 (set (reg:DI 1 dx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:185 -1
     (nil))
(insn 434 433 435 73 (set (reg:DI 4 si)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:185 -1
     (nil))
(insn 435 434 436 73 (set (reg:DI 5 di)
        (reg/v/f:DI 185 [ p ])) fnmatch_loop.c:185 -1
     (nil))
(call_insn 436 435 437 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 437 436 438 73 (set (reg:SI 186 [ D.11716 ])
        (reg:SI 0 ax)) fnmatch_loop.c:185 -1
     (nil))
(insn 438 437 439 73 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 439 438 440 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:185 -1
     (nil))
(jump_insn 440 439 540 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) fnmatch_loop.c:185 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 448)
(code_label 540 440 441 74 247 "" [1 uses])
(note 441 540 442 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 442 441 443 74 (set (reg/v/f:DI 620 [ pattern ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8208 [0xffffffffffffdff0])) [1 end.pattern+0 S8 A128])) fnmatch_loop.c:212 -1
     (nil))
(insn 443 442 444 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 620 [ pattern ])
            (const_int 0 [0]))) fnmatch_loop.c:212 -1
     (nil))
(jump_insn 444 443 447 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 565)
            (pc))) fnmatch_loop.c:212 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 565)
(note 447 444 445 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(jump_insn 445 447 446 75 (set (pc)
        (label_ref 555)) -1
     (nil)
 -> 555)
(barrier 446 445 448)
(code_label 448 446 449 76 235 "" [1 uses])
(note 449 448 450 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 76 (parallel [
            (set (reg/v/f:DI 103 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:184 -1
     (nil))
(insn 451 450 453 76 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:184 -1
     (nil))
(insn 453 451 454 76 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 108 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:184 -1
     (nil))
(jump_insn 454 453 457 76 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) fnmatch_loop.c:184 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 452)
(note 457 454 455 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn 455 457 456 77 (set (pc)
        (label_ref 561)) -1
     (nil)
 -> 561)
(barrier 456 455 458)
(code_label 458 456 459 78 232 "" [3 uses])
(note 459 458 460 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:189 -1
     (nil))
(jump_insn 461 460 462 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 483)
            (pc))) fnmatch_loop.c:189 -1
     (int_list:REG_BR_PROB 7044 (nil))
 -> 483)
(note 462 461 463 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:189 -1
     (nil))
(jump_insn 464 463 465 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2002)
            (pc))) fnmatch_loop.c:189 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 2002)
(note 465 464 466 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 80 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 622 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 467 466 468 80 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 561)
(note 468 467 469 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_567]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 470 469 471 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1959)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1959)
(note 471 470 477 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(code_label 477 471 472 83 241 "" [1 uses])
(note 472 477 473 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 83 (parallel [
            (set (reg/v/f:DI 103 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:192 -1
     (nil))
(insn 474 473 475 83 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 622 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 475 474 476 83 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 561)
(note 476 475 478 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 478 476 479 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[base: np_187, offset: 0B]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 479 478 482 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 477)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 477)
(note 482 479 480 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(jump_insn 480 482 481 85 (set (pc)
        (label_ref 1959)) -1
     (nil)
 -> 1959)
(barrier 481 480 483)
(code_label 483 481 484 86 233 "" [2 uses])
(note 484 483 485 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 485 484 486 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 486 485 487 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2006)
            (pc))) fnmatch_loop.c:201 612 {*jcc_1}
     (int_list:REG_BR_PROB 3100 (nil))
 -> 2006)
(note 487 486 22 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 22 487 1999 87 (set (reg/v:SI 126 [ flags ])
        (reg/v:SI 624 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 1999 22 2000 87 (set (pc)
        (label_ref 488)) -1
     (nil)
 -> 488)
(barrier 2000 1999 2002)
(code_label 2002 2000 2001 88 388 "" [1 uses])
(note 2001 2002 21 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 21 2001 2003 88 (set (reg/v:SI 126 [ flags ])
        (reg/v:SI 184 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 2003 21 2004 88 (set (pc)
        (label_ref 488)) -1
     (nil)
 -> 488)
(barrier 2004 2003 2006)
(code_label 2006 2004 2005 89 389 "" [1 uses])
(note 2005 2006 23 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 23 2005 488 89 (set (reg/v:SI 126 [ flags ])
        (reg/v:SI 184 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(code_label 488 23 489 90 239 "" [2 uses])
(note 489 488 490 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:203 -1
     (nil))
(jump_insn 491 490 492 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) fnmatch_loop.c:203 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 498)
(note 492 491 493 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 91 (parallel [
            (set (reg:SI 674 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:203 -1
     (nil))
(insn 494 493 495 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 674 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:203 -1
     (nil))
(jump_insn 495 494 496 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) fnmatch_loop.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 498)
(note 496 495 497 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 92 (set (reg/v:SI 116 [ c ])
        (mem:SI (reg/v/f:DI 163 [ p ]) [2 *p_652+0 S4 A32])) fnmatch_loop.c:204 -1
     (nil))
(code_label 498 497 499 93 242 "" [2 uses])
(note 499 498 500 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:205 -1
     (nil))
(jump_insn 501 500 502 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) fnmatch_loop.c:205 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 506)
(note 502 501 503 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 94 (set (reg:SI 5 di)
        (reg/v:SI 116 [ c ])) fnmatch_loop.c:205 -1
     (nil))
(call_insn/i 504 503 505 94 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:205 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 505 504 506 94 (set (reg/v:SI 116 [ c ])
        (reg:SI 0 ax)) fnmatch_loop.c:205 -1
     (nil))
(code_label 506 505 507 95 243 "" [1 uses])
(note 507 506 508 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 95 (parallel [
            (set (reg/v/f:DI 179 [ p ])
                (plus:DI (reg/v/f:DI 163 [ p ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:206 -1
     (nil))
(insn 509 508 510 95 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 108 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:206 -1
     (nil))
(jump_insn 510 509 511 95 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) fnmatch_loop.c:206 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 561)
(note 511 510 548 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(code_label 548 511 512 97 248 "" [1 uses])
(note 512 548 513 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 514 513 515 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 521)
            (pc))) fnmatch_loop.c:207 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 521)
(note 515 514 516 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 98 (set (reg:SI 5 di)
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[base: np_79, offset: 0B]+0 S4 A32])) fnmatch_loop.c:207 -1
     (nil))
(call_insn/i 517 516 518 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:207 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 518 517 519 98 (set (reg:SI 127 [ D.11717 ])
        (reg:SI 0 ax)) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 519 518 520 98 (set (pc)
        (label_ref 524)) -1
     (nil)
 -> 524)
(barrier 520 519 521)
(code_label 521 520 522 99 244 "" [1 uses])
(note 522 521 523 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 524 99 (set (reg:SI 127 [ D.11717 ])
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[base: np_79, offset: 0B]+0 S4 A32])) fnmatch_loop.c:207 -1
     (nil))
(code_label 524 523 525 100 245 "" [1 uses])
(note 525 524 526 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 527 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ c ])
            (reg:SI 127 [ D.11717 ]))) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 527 526 528 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) fnmatch_loop.c:207 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 544)
(note 528 527 529 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 101 (parallel [
            (set (reg:DI 675)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8208 [0xffffffffffffdff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (nil))
(insn 530 529 531 101 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 531 530 532 101 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 532 531 533 101 (set (reg:DI 38 r9)
        (reg:DI 675)) fnmatch_loop.c:208 -1
     (nil))
(insn 533 532 534 101 (set (reg:SI 37 r8)
        (reg/v:SI 126 [ flags ])) fnmatch_loop.c:208 -1
     (nil))
(insn 534 533 535 101 (set (reg:SI 2 cx)
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:208 -1
     (nil))
(insn 535 534 536 101 (set (reg:DI 1 dx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:208 -1
     (nil))
(insn 536 535 537 101 (set (reg:DI 4 si)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:208 -1
     (nil))
(insn 537 536 538 101 (set (reg:DI 5 di)
        (reg/v/f:DI 179 [ p ])) fnmatch_loop.c:208 -1
     (nil))
(call_insn 538 537 539 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:208 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 539 538 541 101 (set (reg:SI 183 [ D.11716 ])
        (reg:SI 0 ax)) fnmatch_loop.c:208 -1
     (nil))
(insn 541 539 542 101 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 542 541 543 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 183 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:208 -1
     (nil))
(jump_insn 543 542 544 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) fnmatch_loop.c:208 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 540)
(code_label 544 543 545 102 246 "" [1 uses])
(note 545 544 546 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 102 (parallel [
            (set (reg/v/f:DI 103 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:206 -1
     (nil))
(insn 547 546 549 102 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:206 -1
     (nil))
(insn 549 547 550 102 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 108 [ string_end ])
            (reg/v/f:DI 103 [ np ]))) fnmatch_loop.c:206 -1
     (nil))
(jump_insn 550 549 551 102 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 548)
            (pc))) fnmatch_loop.c:206 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 548)
(note 551 550 552 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 103 (set (reg/v/f:DI 620 [ pattern ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8208 [0xffffffffffffdff0])) [1 end.pattern+0 S8 A128])) fnmatch_loop.c:216 -1
     (nil))
(insn 553 552 554 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 620 [ pattern ])
            (const_int 0 [0]))) fnmatch_loop.c:216 -1
     (nil))
(jump_insn 554 553 555 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 561)
            (pc))) fnmatch_loop.c:216 -1
     (int_list:REG_BR_PROB 909 (nil))
 -> 561)
(code_label 555 554 556 104 237 "" [1 uses])
(note 556 555 557 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 104 (set (reg/v/f:DI 103 [ np ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8200 [0xffffffffffffdff8])) [1 end.string+0 S8 A64])) fnmatch_loop.c:219 -1
     (nil))
(insn 558 557 559 104 (set (reg/v:SI 623 [ no_leading_period ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8192 [0xffffffffffffe000])) [2 end.no_leading_period+0 S4 A128])) fnmatch_loop.c:220 -1
     (nil))
(jump_insn 559 558 560 104 (set (pc)
        (label_ref 1887)) fnmatch_loop.c:221 -1
     (nil)
 -> 1887)
(barrier 560 559 561)
(code_label 561 560 562 105 234 "" [7 uses])
(note 562 561 94 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 94 562 563 105 (set (reg:SI 122 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:227 -1
     (nil))
(jump_insn 563 94 564 105 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:227 -1
     (nil)
 -> 1908)
(barrier 564 563 565)
(code_label 565 564 566 106 236 "" [2 uses])
(note 566 565 93 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 93 566 567 106 (set (reg:SI 122 [ D.11716 ])
        (const_int 0 [0])) fnmatch_loop.c:196 -1
     (nil))
(jump_insn 567 93 568 106 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:196 -1
     (nil)
 -> 1908)
(barrier 568 567 569)
(code_label 569 568 570 107 201 "" [1 uses])
(note 570 569 571 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:238 -1
     (nil))
(jump_insn 572 571 573 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) fnmatch_loop.c:238 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 583)
(note 573 572 574 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 108 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:239 -1
     (nil))
(call_insn 575 574 576 108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:239 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 576 575 577 108 (set (reg/f:DI 200 [ D.11726 ])
        (reg:DI 0 ax)) fnmatch_loop.c:239 -1
     (nil))
(insn 577 576 578 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 200 [ D.11726 ])
            (const_int 0 [0]))) fnmatch_loop.c:239 -1
     (nil))
(jump_insn 578 577 579 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2010)
            (pc))) fnmatch_loop.c:239 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 2010)
(note 579 578 24 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 24 579 2007 109 (set (reg:SI 128 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:239 -1
     (nil))
(jump_insn 2007 24 2008 109 (set (pc)
        (label_ref 580)) -1
     (nil)
 -> 580)
(barrier 2008 2007 2010)
(code_label 2010 2008 2009 110 390 "" [1 uses])
(note 2009 2010 25 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 25 2009 580 110 (set (reg:SI 128 [ D.11716 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:239 -1
     (nil))
(code_label 580 25 581 111 251 "" [1 uses])
(note 581 580 582 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 111 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 128 [ D.11716 ])) fnmatch_loop.c:239 -1
     (nil))
(code_label 583 582 584 112 250 "" [1 uses])
(note 584 583 585 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:241 -1
     (nil))
(jump_insn 586 585 587 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:241 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 587 586 588 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 113 (set (reg:SI 201 [ D.11716 ])
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:244 -1
     (nil))
(insn 589 588 590 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 201 [ D.11716 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:244 -1
     (nil))
(jump_insn 590 589 591 113 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 597)
            (pc))) fnmatch_loop.c:244 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 597)
(note 591 590 592 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 623 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:244 -1
     (nil))
(jump_insn 593 592 596 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:244 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 596 593 594 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(jump_insn 594 596 595 115 (set (pc)
        (label_ref 604)) -1
     (nil)
 -> 604)
(barrier 595 594 597)
(code_label 597 595 598 116 252 "" [1 uses])
(note 598 597 599 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 201 [ D.11716 ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:247 -1
     (nil))
(jump_insn 600 599 601 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 604)
            (pc))) fnmatch_loop.c:247 -1
     (int_list:REG_BR_PROB 6133 (nil))
 -> 604)
(note 601 600 602 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 602 601 603 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:247 -1
     (nil))
(jump_insn 603 602 604 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:247 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(code_label 604 603 605 118 253 "" [2 uses])
(note 605 604 606 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 118 (set (reg:SI 203 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])) fnmatch_loop.c:251 -1
     (nil))
(insn 607 606 608 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 203 [ D.11716 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 608 607 609 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1913)
            (pc))) fnmatch_loop.c:251 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1913)
(note 609 608 610 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 119 (set (reg:SI 678)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:251 -1
     (nil))
(insn 611 610 612 119 (parallel [
            (set (reg:SI 677)
                (lshiftrt:SI (reg:SI 678)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:251 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 612 611 613 119 (set (reg:QI 679)
        (subreg:QI (reg:SI 677) 0)) fnmatch_loop.c:251 -1
     (nil))
(insn 613 612 614 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 679)
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 614 613 2072 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2088)
            (pc))) fnmatch_loop.c:251 612 {*jcc_1}
     (int_list:REG_BR_PROB 4550 (nil))
 -> 2088)
(note 2072 614 615 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 615 2072 616 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 203 [ D.11716 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:251 -1
     (nil))
(insn 616 615 617 120 (set (reg:QI 681 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(insn 617 616 618 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 681 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 618 617 2073 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1913)
            (pc))) fnmatch_loop.c:251 -1
     (int_list:REG_BR_PROB 1651 (nil))
 -> 1913)
(note 2073 618 2088 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(code_label 2088 2073 2011 122 405 "" [1 uses])
(note 2011 2088 26 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 26 2011 27 122 (set (reg/v/f:DI 97 [ pattern ])
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:56 -1
     (nil))
(insn 27 26 1917 122 (set (reg/v:SI 613 [ not ])
        (const_int 0 [0])) -1
     (nil))
(code_label 1917 27 620 123 380 "" [1 uses])
(note 620 1917 621 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:255 -1
     (nil))
(jump_insn 622 621 623 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 629)
            (pc))) fnmatch_loop.c:255 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 629)
(note 623 622 624 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 124 (set (reg:SI 5 di)
        (reg:SI 201 [ D.11716 ])) fnmatch_loop.c:255 -1
     (nil))
(call_insn/i 625 624 626 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:255 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 626 625 627 124 (set (reg/v:SI 129 [ fn ])
        (reg:SI 0 ax)) fnmatch_loop.c:255 -1
     (nil))
(jump_insn 627 626 628 124 (set (pc)
        (label_ref 632)) -1
     (nil)
 -> 632)
(barrier 628 627 629)
(code_label 629 628 630 125 256 "" [1 uses])
(note 630 629 631 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 125 (set (reg/v:SI 129 [ fn ])
        (reg:SI 201 [ D.11716 ])) fnmatch_loop.c:255 -1
     (nil))
(code_label 632 631 633 126 257 "" [1 uses])
(note 633 632 634 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 126 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 97 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:257 -1
     (nil))
(insn 635 634 636 126 (set (reg/v:SI 106 [ c ])
        (reg:SI 203 [ D.11716 ])) fnmatch_loop.c:257 -1
     (nil))
(insn 636 635 637 126 (parallel [
            (set (reg:SI 682)
                (lshiftrt:SI (reg/v:SI 624 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 637 636 638 126 (parallel [
            (set (reg:SI 683)
                (xor:SI (reg:SI 682)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 638 637 639 126 (parallel [
            (set (reg:QI 577 [ D.11715 ])
                (and:QI (subreg:QI (reg:SI 683) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 639 638 640 126 (set (reg:DI 239 [ D.11724 ])
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:418 -1
     (nil))
(insn 640 639 641 126 (set (reg:DI 238 [ D.11724 ])
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:418 -1
     (nil))
(insn 641 640 642 126 (parallel [
            (set (reg:DI 684 [ D.11731 ])
                (minus:DI (reg/v/f:DI 622 [ string_end ])
                    (reg/v/f:DI 103 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:39 -1
     (nil))
(insn 642 641 643 126 (parallel [
            (set (reg:DI 686 [ D.11724 ])
                (ashiftrt:DI (reg:DI 684 [ D.11731 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:39 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 684 [ D.11731 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 643 642 644 126 (parallel [
            (set (reg/v:DI 475 [ len ])
                (plus:DI (reg:DI 686 [ D.11724 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:39 -1
     (nil))
(jump_insn 644 643 645 126 (set (pc)
        (label_ref 647)) ../locale/weightwc.h:39 -1
     (nil)
 -> 647)
(barrier 645 644 1418)
(code_label 1418 645 646 127 342 "" [2 uses])
(note 646 1418 647 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(code_label 647 646 648 128 258 "" [1 uses])
(note 648 647 649 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:260 -1
     (nil))
(insn 650 649 651 128 (set (reg:QI 688 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(insn 651 650 652 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 688 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(jump_insn 652 651 2074 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 677)
            (pc))) fnmatch_loop.c:260 -1
     (int_list:REG_BR_PROB 3600 (nil))
 -> 677)
(note 2074 652 653 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 653 2074 654 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 577 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(jump_insn 654 653 655 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 677)
            (pc))) fnmatch_loop.c:260 -1
     (int_list:REG_BR_PROB 5625 (nil))
 -> 677)
(note 655 654 656 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 130 (set (reg:SI 206 [ D.11716 ])
        (mem:SI (reg/v/f:DI 568 [ pattern ]) [2 *pattern_8+0 S4 A32])) fnmatch_loop.c:262 -1
     (nil))
(insn 657 656 658 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 206 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:262 -1
     (nil))
(jump_insn 658 657 659 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:262 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 659 658 660 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:264 -1
     (nil))
(jump_insn 661 660 662 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 668)
            (pc))) fnmatch_loop.c:264 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 668)
(note 662 661 663 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 132 (set (reg:SI 5 di)
        (reg:SI 206 [ D.11716 ])) fnmatch_loop.c:264 -1
     (nil))
(call_insn/i 664 663 665 132 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 665 664 666 132 (set (reg/v:SI 106 [ c ])
        (reg:SI 0 ax)) fnmatch_loop.c:264 -1
     (nil))
(jump_insn 666 665 667 132 (set (pc)
        (label_ref 671)) -1
     (nil)
 -> 671)
(barrier 667 666 668)
(code_label 668 667 669 133 260 "" [1 uses])
(note 669 668 670 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 133 (set (reg/v:SI 106 [ c ])
        (reg:SI 206 [ D.11716 ])) fnmatch_loop.c:264 -1
     (nil))
(code_label 671 670 672 134 261 "" [1 uses])
(note 672 671 673 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 134 (parallel [
            (set (reg/v/f:DI 208 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:265 -1
     (nil))
(insn 674 673 58 134 (set (reg:SI 605 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_8 + 4B]+0 S4 A32])) -1
     (nil))
(insn 58 674 675 134 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 208 [ pattern ])) fnmatch_loop.c:265 -1
     (nil))
(jump_insn 675 58 676 134 (set (pc)
        (label_ref 1384)) fnmatch_loop.c:267 -1
     (nil)
 -> 1384)
(barrier 676 675 677)
(code_label 677 676 678 135 259 "" [2 uses])
(note 678 677 679 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:269 -1
     (nil))
(jump_insn 680 679 681 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1090)
            (pc))) fnmatch_loop.c:269 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1090)
(note 681 680 682 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 136 (set (reg:SI 605 [ D.11716 ])
        (mem:SI (reg/v/f:DI 568 [ pattern ]) [2 *pattern_8+0 S4 A32])) fnmatch_loop.c:269 -1
     (nil))
(insn 683 682 684 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 605 [ D.11716 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:269 -1
     (nil))
(jump_insn 684 683 685 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) fnmatch_loop.c:269 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 782)
(note 685 684 29 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 29 685 30 137 (set (reg/v/f:DI 202 [ pattern ])
        (reg/v/f:DI 568 [ pattern ])) -1
     (nil))
(insn 30 29 753 137 (set (reg/v:DI 213 [ c1 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 753 30 686 138 273 "" [1 uses])
(note 686 753 687 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 687 686 688 138 (parallel [
            (set (reg/v/f:DI 209 [ pattern ])
                (plus:DI (reg/v/f:DI 202 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:286 -1
     (nil))
(insn 688 687 689 138 (set (reg:SI 210 [ D.11716 ])
        (mem:SI (reg/v/f:DI 209 [ pattern ]) [2 MEM[base: pattern_261, offset: 0B]+0 S4 A32])) fnmatch_loop.c:286 -1
     (nil))
(insn 689 688 690 138 (set (reg/v:SI 211 [ c ])
        (reg:SI 210 [ D.11716 ])) fnmatch_loop.c:286 -1
     (nil))
(insn 690 689 691 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 211 [ c ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:287 -1
     (nil))
(jump_insn 691 690 692 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 736)
            (pc))) fnmatch_loop.c:287 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 736)
(note 692 691 693 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 209 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_261 + 4B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:287 -1
     (nil))
(jump_insn 694 693 695 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) fnmatch_loop.c:287 612 {*jcc_1}
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1399)
(note 695 694 696 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 140 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg/v:DI 213 [ c1 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -8208 [0xffffffffffffdff0])) [2 str S4 A32])
        (const_int 0 [0])) fnmatch_loop.c:302 -1
     (nil))
(insn 697 696 31 140 (set (reg:SI 532 [ D.11716 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8208 [0xffffffffffffdff0])) [2 MEM[(const wchar_t *)&str]+0 S4 A128])) -1
     (nil))
(insn 31 697 32 140 (parallel [
            (set (reg/v/f:DI 529 [ cp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10272 [0xffffffffffffd7e0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:265 -1
     (nil))
(insn 32 31 2012 140 (parallel [
            (set (reg/v/f:DI 523 [ wcs ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8208 [0xffffffffffffdff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:302 -1
     (nil))
(jump_insn 2012 32 2013 140 (set (pc)
        (label_ref 722)) -1
     (nil)
 -> 722)
(barrier 2013 2012 2015)
(code_label 2015 2013 2014 141 391 "" [1 uses])
(note 2014 2015 33 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 33 2014 722 141 (set (reg/v/f:DI 529 [ cp ])
        (reg/v/f:DI 530 [ cp ])) fnmatch.c:309 -1
     (nil))
(code_label 722 33 698 142 268 "" [1 uses])
(note 698 722 699 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 699 698 700 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 532 [ D.11716 ])
            (const_int 36 [0x24]))) fnmatch.c:304 -1
     (nil))
(insn 700 699 701 142 (set (reg:QI 690 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(insn 701 700 702 142 (parallel [
            (set (reg:DI 691)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10272 [0xffffffffffffd7e0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 702 701 703 142 (parallel [
            (set (reg:DI 692)
                (plus:DI (reg:DI 691)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 703 702 704 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 529 [ cp ])
            (reg:DI 692))) fnmatch.c:304 -1
     (nil))
(insn 704 703 705 142 (set (reg:QI 694 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(insn 705 704 706 142 (parallel [
            (set (reg:QI 695 [ D.11715 ])
                (ior:QI (reg:QI 690 [ D.11715 ])
                    (reg:QI 694 [ D.11715 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 706 705 707 142 (parallel [
            (set (reg:SI 696 [ D.11716 ])
                (and:SI (reg:SI 532 [ D.11716 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 707 706 708 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 696 [ D.11716 ])
            (const_int 64 [0x40]))) fnmatch.c:304 -1
     (nil))
(insn 708 707 709 142 (set (reg:QI 698 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(insn 709 708 710 142 (parallel [
            (set (reg:QI 699 [ D.11715 ])
                (ior:QI (reg:QI 695 [ D.11715 ])
                    (reg:QI 698 [ D.11715 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 710 709 711 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 699 [ D.11715 ])
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(jump_insn 711 710 2075 142 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1922)
            (pc))) fnmatch.c:304 612 {*jcc_1}
     (int_list:REG_BR_PROB 50 (nil))
 -> 1922)
(note 2075 711 712 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 712 2075 713 143 (parallel [
            (set (reg:SI 700 [ D.11730 ])
                (plus:SI (reg:SI 532 [ D.11716 ])
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:304 -1
     (nil))
(insn 713 712 714 143 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 700 [ D.11730 ])
            (const_int 94 [0x5e]))) fnmatch.c:304 -1
     (nil))
(insn 714 713 715 143 (set (reg:QI 702 [ D.11715 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(insn 715 714 716 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 702 [ D.11715 ])
            (const_int 0 [0]))) fnmatch.c:304 -1
     (nil))
(jump_insn 716 715 717 143 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1922)
            (pc))) fnmatch.c:304 612 {*jcc_1}
     (int_list:REG_BR_PROB 50 (nil))
 -> 1922)
(note 717 716 718 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 144 (parallel [
            (set (reg/v/f:DI 530 [ cp ])
                (plus:DI (reg/v/f:DI 529 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:307 -1
     (nil))
(insn 719 718 720 144 (parallel [
            (set (reg/v/f:DI 523 [ wcs ])
                (plus:DI (reg/v/f:DI 523 [ wcs ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:307 -1
     (nil))
(insn 720 719 721 144 (set (mem:QI (plus:DI (reg/v/f:DI 530 [ cp ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: cp_756, offset: -1B]+0 S1 A8])
        (subreg:QI (reg:SI 532 [ D.11716 ]) 0)) fnmatch.c:307 -1
     (nil))
(insn 721 720 723 144 (set (reg:SI 532 [ D.11716 ])
        (mem:SI (reg/v/f:DI 523 [ wcs ]) [2 MEM[base: wcs_757, offset: 0B]+0 S4 A32])) fnmatch.c:309 -1
     (nil))
(insn 723 721 724 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 532 [ D.11716 ])
            (const_int 0 [0]))) fnmatch.c:309 -1
     (nil))
(jump_insn 724 723 725 144 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2015)
            (pc))) fnmatch.c:309 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 2015)
(note 725 724 726 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 145 (set (mem:QI (plus:DI (reg/v/f:DI 529 [ cp ])
                (const_int 1 [0x1])) [0 MEM[(char *)cp_755 + 1B]+0 S1 A8])
        (const_int 0 [0])) fnmatch.c:311 -1
     (nil))
(insn 727 726 728 145 (parallel [
            (set (reg:DI 703)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10272 [0xffffffffffffd7e0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:314 -1
     (nil))
(insn 728 727 729 145 (set (reg:DI 5 di)
        (reg:DI 703)) fnmatch.c:314 -1
     (nil))
(call_insn 729 728 730 145 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wctype") [flags 0x41]  <function_decl 0x2aeef6e85360 __wctype>) [0 __wctype S1 A8])
            (const_int 0 [0]))) fnmatch.c:314 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wctype") [flags 0x41]  <function_decl 0x2aeef6e85360 __wctype>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 730 729 731 145 (set (reg:DI 533 [ D.11714 ])
        (reg:DI 0 ax)) fnmatch.c:314 -1
     (nil))
(insn 731 730 732 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 533 [ D.11714 ])
            (const_int 0 [0]))) fnmatch_loop.c:306 -1
     (nil))
(jump_insn 732 731 735 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1922)
            (pc))) fnmatch_loop.c:306 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1922)
(note 735 732 733 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(jump_insn 733 735 734 146 (set (pc)
        (label_ref 757)) -1
     (nil)
 -> 757)
(barrier 734 733 736)
(code_label 736 734 737 147 265 "" [1 uses])
(note 737 736 738 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 147 (parallel [
            (set (reg:SI 704 [ D.11717 ])
                (plus:SI (reg/v:SI 211 [ c ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:292 -1
     (nil))
(insn 739 738 740 147 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 704 [ D.11717 ])
            (const_int 24 [0x18]))) fnmatch_loop.c:292 -1
     (nil))
(jump_insn 740 739 742 147 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 745)
            (pc))) fnmatch_loop.c:292 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 745)
(note 742 740 743 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(jump_insn 743 742 744 148 (set (pc)
        (label_ref:DI 1399)) fnmatch_loop.c:298 654 {jump}
     (nil)
 -> 1399)
(barrier 744 743 745)
(code_label 745 744 746 149 271 "" [1 uses])
(note 746 745 747 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 747 746 748 149 (parallel [
            (set (reg/v:DI 213 [ c1 ])
                (plus:DI (reg/v:DI 213 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 748 747 749 149 (parallel [
            (set (reg:DI 705)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8208 [0xffffffffffffdff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 749 748 750 149 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg/v:DI 213 [ c1 ])
                        (const_int 4 [0x4]))
                    (reg:DI 705))
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[symbol: str, index: c1_265, step: 4, offset: -4B]+0 S4 A32])
        (reg:SI 210 [ D.11716 ])) fnmatch_loop.c:300 -1
     (nil))
(insn 750 749 751 149 (set (reg/v/f:DI 202 [ pattern ])
        (reg/v/f:DI 209 [ pattern ])) -1
     (nil))
(insn 751 750 752 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 213 [ c1 ])
            (const_int 2048 [0x800]))) fnmatch_loop.c:281 -1
     (nil))
(jump_insn 752 751 756 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1922)
            (pc))) fnmatch_loop.c:281 612 {*jcc_1}
     (int_list:REG_BR_PROB 105 (nil))
 -> 1922)
(note 756 752 754 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(jump_insn 754 756 755 150 (set (pc)
        (label_ref 753)) -1
     (nil)
 -> 753)
(barrier 755 754 757)
(code_label 757 755 758 151 270 "" [1 uses])
(note 758 757 759 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 151 (set (reg:DI 4 si)
        (reg:DI 533 [ D.11714 ])) fnmatch_loop.c:317 -1
     (nil))
(insn 760 759 761 151 (set (reg:SI 5 di)
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:317 -1
     (nil))
(call_insn 761 760 762 151 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___iswctype") [flags 0x43]  <function_decl 0x2aeef6e85288 __iswctype>) [0 __iswctype S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:317 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___iswctype") [flags 0x43]  <function_decl 0x2aeef6e85288 __iswctype>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 762 761 763 151 (set (reg:SI 217 [ D.11716 ])
        (reg:SI 0 ax)) fnmatch_loop.c:317 -1
     (nil))
(insn 763 762 764 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 217 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:317 -1
     (nil))
(jump_insn 764 763 765 151 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 775)
            (pc))) fnmatch_loop.c:317 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 775)
(note 765 764 766 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 767 152 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 209 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:335 -1
     (nil))
(insn 767 766 768 152 (set (reg/v:SI 106 [ c ])
        (mem:SI (plus:DI (reg/v/f:DI 209 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_261 + 8B]+0 S4 A32])) fnmatch_loop.c:335 -1
     (nil))
(jump_insn 768 767 769 152 (set (pc)
        (label_ref 1694)) fnmatch_loop.c:270 -1
     (nil)
 -> 1694)
(barrier 769 768 1922)
(code_label 1922 769 772 154 381 "" [4 uses])
(note 772 1922 90 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 90 772 773 154 (set (reg:SI 122 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:284 -1
     (nil))
(jump_insn 773 90 774 154 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:284 -1
     (nil)
 -> 1908)
(barrier 774 773 775)
(code_label 775 774 776 155 274 "" [1 uses])
(note 776 775 777 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 155 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 209 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:289 -1
     (nil))
(insn 778 777 2037 155 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 202 [ pattern ])
                (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_554 + 12B]+0 S4 A32])) -1
     (nil))
(jump_insn 2037 778 2038 155 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 2038 2037 2040)
(code_label 2040 2038 2039 156 397 "" [1 uses])
(note 2039 2040 35 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 35 2039 1087 156 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 266 [ pattern ])) fnmatch_loop.c:469 -1
     (nil))
(code_label 1087 35 779 157 307 "" [6 uses])
(note 779 1087 780 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(jump_insn 780 779 781 157 (set (pc)
        (label_ref 1811)) -1
     (nil)
 -> 1811)
(barrier 781 780 782)
(code_label 782 781 783 158 264 "" [1 uses])
(note 783 782 784 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 605 [ D.11716 ])
            (const_int 61 [0x3d]))) fnmatch_loop.c:338 -1
     (nil))
(jump_insn 785 784 786 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1097)
            (pc))) fnmatch_loop.c:338 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1097)
(note 786 785 787 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 788 159 (set (reg/v:SI 223 [ c ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_8 + 4B]+0 S4 A32])) fnmatch_loop.c:350 -1
     (nil))
(insn 788 787 789 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 223 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:351 -1
     (nil))
(jump_insn 789 788 790 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) fnmatch_loop.c:351 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1399)
(note 790 789 791 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 791 790 792 160 (set (reg:DI 707)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:347 -1
     (nil))
(insn 792 791 793 160 (set (reg/f:DI 706)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 707)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:347 -1
     (nil))
(insn 793 792 794 160 (set (reg/f:DI 220 [ D.11723 ])
        (mem/f:DI (plus:DI (reg/f:DI 706)
                (const_int 24 [0x18])) [1 _284->__locales+24 S8 A64])) fnmatch_loop.c:347 -1
     (nil))
(insn 794 793 795 160 (set (reg/v:SI 221 [ nrules ])
        (mem:SI (plus:DI (reg/f:DI 220 [ D.11723 ])
                (const_int 64 [0x40])) [0 _285->values[0].word+0 S4 A64])) fnmatch_loop.c:346 -1
     (nil))
(insn 795 794 796 160 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8208 [0xffffffffffffdff0])) [2 str+0 S4 A128])
        (reg/v:SI 223 [ c ])) fnmatch_loop.c:357 -1
     (nil))
(insn 796 795 797 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_8 + 8B]+0 S4 A32])
            (const_int 61 [0x3d]))) fnmatch_loop.c:360 -1
     (nil))
(jump_insn 797 796 798 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) fnmatch_loop.c:360 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1399)
(note 798 797 799 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 800 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_8 + 12B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:360 -1
     (nil))
(jump_insn 800 799 801 161 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) fnmatch_loop.c:360 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1399)
(note 801 800 802 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 802 801 803 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 221 [ nrules ])
            (const_int 0 [0]))) fnmatch_loop.c:368 -1
     (nil))
(jump_insn 803 802 804 162 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 812)
            (pc))) fnmatch_loop.c:368 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 812)
(note 804 803 805 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 223 [ c ])
            (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32]))) fnmatch_loop.c:370 -1
     (nil))
(jump_insn 806 805 886 163 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1083)
            (pc))) fnmatch_loop.c:370 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1083)
(code_label 886 806 807 164 288 "" [7 uses])
(note 807 886 808 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 808 807 809 164 (parallel [
            (set (reg/v/f:DI 257 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:439 -1
     (nil))
(insn 809 808 66 164 (set (reg/v:SI 106 [ c ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 16 [0x10])) [2 MEM[(const wchar_t *)pattern_8 + 16B]+0 S4 A32])) fnmatch_loop.c:439 -1
     (nil))
(insn 66 809 810 164 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 257 [ pattern ])) fnmatch_loop.c:439 -1
     (nil))
(jump_insn 810 66 811 164 (set (pc)
        (label_ref 1694)) fnmatch_loop.c:339 -1
     (nil)
 -> 1694)
(barrier 811 810 812)
(code_label 812 811 813 165 279 "" [1 uses])
(note 813 812 814 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 814 813 815 165 (set (reg/v/f:DI 230 [ table ])
        (mem/f:DI (plus:DI (reg/f:DI 220 [ D.11723 ])
                (const_int 136 [0x88])) [0 _285->values[9].string+0 S8 A64])) fnmatch_loop.c:388 -1
     (nil))
(insn 815 814 816 165 (set (reg/v/f:DI 231 [ weights ])
        (mem/f:DI (plus:DI (reg/f:DI 220 [ D.11723 ])
                (const_int 144 [0x90])) [0 _285->values[10].string+0 S8 A64])) fnmatch_loop.c:390 -1
     (nil))
(insn 816 815 817 165 (set (reg/v/f:DI 232 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 220 [ D.11723 ])
                (const_int 152 [0x98])) [0 _285->values[11].string+0 S8 A64])) fnmatch_loop.c:392 -1
     (nil))
(insn 817 816 818 165 (set (reg/v/f:DI 233 [ indirect ])
        (mem/f:DI (plus:DI (reg/f:DI 220 [ D.11723 ])
                (const_int 160 [0xa0])) [0 _285->values[12].string+0 S8 A64])) fnmatch_loop.c:394 -1
     (nil))
(insn 818 817 819 165 (set (reg:SI 4 si)
        (reg/v:SI 223 [ c ])) ../locale/weightwc.h:30 -1
     (nil))
(insn 819 818 820 165 (set (reg:DI 5 di)
        (reg/v/f:DI 230 [ table ])) ../locale/weightwc.h:30 -1
     (nil))
(call_insn 820 819 821 165 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__collidx_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d360 __collidx_table_lookup>) [0 __collidx_table_lookup S1 A8])
            (const_int 0 [0]))) ../locale/weightwc.h:30 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__collidx_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d360 __collidx_table_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 821 820 822 165 (set (reg/v:SI 444 [ i ])
        (reg:SI 0 ax)) ../locale/weightwc.h:30 -1
     (nil))
(insn 822 821 823 165 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 444 [ i ])
            (const_int 0 [0]))) ../locale/weightwc.h:32 -1
     (nil))
(jump_insn 823 822 824 165 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2019)
            (pc))) ../locale/weightwc.h:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 2019)
(note 824 823 825 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 166 (parallel [
            (set (reg:SI 708 [ D.11716 ])
                (neg:SI (reg/v:SI 444 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(insn 826 825 827 166 (set (reg:DI 709 [ D.11714 ])
        (sign_extend:DI (reg:SI 708 [ D.11716 ]))) ../locale/weightwc.h:38 -1
     (nil))
(insn 827 826 828 166 (parallel [
            (set (reg:DI 710 [ D.11714 ])
                (ashift:DI (reg:DI 709 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(insn 828 827 829 166 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 232 [ extra ])
                    (reg:DI 710 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(jump_insn 829 828 830 166 (set (pc)
        (label_ref 832)) ../locale/weightwc.h:38 -1
     (nil)
 -> 832)
(barrier 830 829 846)
(code_label 846 830 831 167 284 "" [4 uses])
(note 831 846 832 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(code_label 832 831 833 168 282 "" [1 uses])
(note 833 832 834 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 834 833 835 168 (set (reg/v:SI 448 [ i ])
        (mem:SI (reg/v/f:DI 107 [ cp ]) [2 *cp_630+0 S4 A32])) ../locale/weightwc.h:46 -1
     (nil))
(insn 835 834 836 168 (parallel [
            (set (reg/v/f:DI 449 [ cp ])
                (plus:DI (reg/v/f:DI 107 [ cp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:51 -1
     (nil))
(insn 836 835 837 168 (set (reg:SI 711)
        (mem:SI (plus:DI (reg/v/f:DI 107 [ cp ])
                (const_int 4 [0x4])) [2 MEM[(const int32_t *)cp_630 + 4B]+0 S4 A32])) ../locale/weightwc.h:51 -1
     (nil))
(insn 837 836 838 168 (set (reg/v:DI 451 [ nhere ])
        (sign_extend:DI (reg:SI 711))) ../locale/weightwc.h:51 -1
     (nil))
(insn 838 837 839 168 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 448 [ i ])
            (const_int 0 [0]))) ../locale/weightwc.h:53 -1
     (nil))
(jump_insn 839 838 840 168 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 849)
            (pc))) ../locale/weightwc.h:53 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 849)
(note 840 839 841 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 451 [ nhere ])
            (const_int 0 [0]))) ../locale/weightwc.h:66 -1
     (nil))
(jump_insn 842 841 843 169 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2023)
            (pc))) ../locale/weightwc.h:66 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 2023)
(note 843 842 844 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 844 843 845 170 (parallel [
            (set (reg:DI 712 [ D.11714 ])
                (ashift:DI (reg/v:DI 451 [ nhere ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:74 -1
     (nil))
(insn 845 844 847 170 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 449 [ cp ])
                    (reg:DI 712 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:74 -1
     (nil))
(jump_insn 847 845 848 170 (set (pc)
        (label_ref 846)) ../locale/weightwc.h:74 -1
     (nil)
 -> 846)
(barrier 848 847 849)
(code_label 849 848 850 171 283 "" [1 uses])
(note 850 849 851 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 851 850 852 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 451 [ nhere ])
            (const_int 1 [0x1]))) ../locale/weightwc.h:87 -1
     (nil))
(jump_insn 852 851 853 171 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 858)
            (pc))) ../locale/weightwc.h:87 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 858)
(note 853 852 854 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 172 (parallel [
            (set (reg:DI 713 [ D.11714 ])
                (ashift:DI (reg/v:DI 451 [ nhere ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:89 -1
     (nil))
(insn 855 854 856 172 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 449 [ cp ])
                    (reg:DI 713 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:89 -1
     (nil))
(jump_insn 856 855 857 172 (set (pc)
        (label_ref 846)) ../locale/weightwc.h:89 -1
     (nil)
 -> 846)
(barrier 857 856 858)
(code_label 858 857 859 173 285 "" [1 uses])
(note 859 858 860 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 173 (set (reg:SI 457 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 107 [ cp ])
                (const_int 8 [0x8])) [2 MEM[(const int32_t *)cp_630 + 8B]+0 S4 A32])) ../locale/weightwc.h:93 -1
     (nil))
(insn 861 860 862 173 (set (reg:SI 458 [ D.11716 ])
        (mem:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8204 [0xffffffffffffdff4])) [2 MEM[(const int32_t *)&str + 4B]+0 S4 A32])) ../locale/weightwc.h:93 -1
     (nil))
(insn 862 861 863 173 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 457 [ D.11716 ])
            (reg:SI 458 [ D.11716 ]))) ../locale/weightwc.h:93 -1
     (nil))
(jump_insn 863 862 864 173 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 868)
            (pc))) ../locale/weightwc.h:93 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 868)
(note 864 863 865 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 174 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 107 [ cp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:95 -1
     (nil))
(jump_insn 866 865 867 174 (set (pc)
        (label_ref 846)) ../locale/weightwc.h:95 -1
     (nil)
 -> 846)
(barrier 867 866 868)
(code_label 868 867 869 175 286 "" [1 uses])
(note 869 868 870 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 870 869 871 175 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 458 [ D.11716 ])
            (mem:SI (plus:DI (reg/v/f:DI 107 [ cp ])
                    (const_int 12 [0xc])) [2 MEM[(const int32_t *)cp_630 + 12B]+0 S4 A32]))) ../locale/weightwc.h:99 -1
     (nil))
(jump_insn 871 870 872 175 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 876)
            (pc))) ../locale/weightwc.h:99 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 876)
(note 872 871 873 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 176 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 107 [ cp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:101 -1
     (nil))
(jump_insn 874 873 875 176 (set (pc)
        (label_ref 846)) ../locale/weightwc.h:101 -1
     (nil)
 -> 846)
(barrier 875 874 876)
(code_label 876 875 877 177 287 "" [1 uses])
(note 877 876 878 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 177 (parallel [
            (set (reg:SI 714 [ D.11716 ])
                (minus:SI (reg:SI 458 [ D.11716 ])
                    (reg:SI 457 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 879 878 880 177 (set (reg:DI 715 [ offset ])
        (sign_extend:DI (reg:SI 714 [ D.11716 ]))) ../locale/weightwc.h:110 -1
     (nil))
(insn 880 879 881 177 (parallel [
            (set (reg:SI 716 [ D.11716 ])
                (neg:SI (reg/v:SI 448 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 881 880 882 177 (set (reg:DI 717 [ D.11714 ])
        (sign_extend:DI (reg:SI 716 [ D.11716 ]))) ../locale/weightwc.h:110 -1
     (nil))
(insn 882 881 883 177 (parallel [
            (set (reg:DI 718)
                (plus:DI (reg:DI 715 [ offset ])
                    (reg:DI 717 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 883 882 2016 177 (set (reg:SI 467 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 718)
                    (const_int 4 [0x4]))
                (reg/v/f:DI 233 [ indirect ])) [2 *_662+0 S4 A32])) ../locale/weightwc.h:110 -1
     (nil))
(jump_insn 2016 883 2017 177 (set (pc)
        (label_ref 884)) -1
     (nil)
 -> 884)
(barrier 2017 2016 2019)
(code_label 2019 2017 2018 178 392 "" [1 uses])
(note 2018 2019 39 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 39 2018 2020 178 (set (reg:SI 467 [ D.11716 ])
        (reg/v:SI 444 [ i ])) ../locale/weightwc.h:32 -1
     (nil))
(jump_insn 2020 39 2021 178 (set (pc)
        (label_ref 884)) -1
     (nil)
 -> 884)
(barrier 2021 2020 2023)
(code_label 2023 2021 2022 179 393 "" [1 uses])
(note 2022 2023 40 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 40 2022 884 179 (set (reg:SI 467 [ D.11716 ])
        (reg/v:SI 448 [ i ])) ../locale/weightwc.h:46 -1
     (nil))
(code_label 884 40 885 180 281 "" [2 uses])
(note 885 884 887 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 887 885 888 180 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 467 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:408 -1
     (nil))
(jump_insn 888 887 889 180 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) fnmatch_loop.c:408 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 886)
(note 889 888 890 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 181 (parallel [
            (set (reg:SI 455 [ D.11716 ])
                (and:SI (reg:SI 467 [ D.11716 ])
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 891 890 892 181 (set (reg:DI 719 [ D.11714 ])
        (sign_extend:DI (reg:SI 455 [ D.11716 ]))) fnmatch_loop.c:413 -1
     (nil))
(insn 892 891 893 181 (parallel [
            (set (reg:DI 235 [ D.11714 ])
                (ashift:DI (reg:DI 719 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:413 -1
     (nil))
(insn 893 892 894 181 (set (reg/v:SI 237 [ len ])
        (mem:SI (plus:DI (reg/v/f:DI 231 [ weights ])
                (reg:DI 235 [ D.11714 ])) [2 *_302+0 S4 A32])) fnmatch_loop.c:413 -1
     (nil))
(insn 894 893 895 181 (set (reg:SI 4 si)
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 *np_31+0 S4 A32])) ../locale/weightwc.h:30 -1
     (nil))
(insn 895 894 896 181 (set (reg:DI 5 di)
        (reg/v/f:DI 230 [ table ])) ../locale/weightwc.h:30 -1
     (nil))
(call_insn 896 895 897 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__collidx_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d360 __collidx_table_lookup>) [0 __collidx_table_lookup S1 A8])
            (const_int 0 [0]))) ../locale/weightwc.h:30 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__collidx_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d360 __collidx_table_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 897 896 898 181 (set (reg/v:SI 471 [ i ])
        (reg:SI 0 ax)) ../locale/weightwc.h:30 -1
     (nil))
(insn 898 897 899 181 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 471 [ i ])
            (const_int 0 [0]))) ../locale/weightwc.h:32 -1
     (nil))
(jump_insn 899 898 900 181 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2027)
            (pc))) ../locale/weightwc.h:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 2027)
(note 900 899 901 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 182 (parallel [
            (set (reg/v/f:DI 469 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:29 -1
     (nil))
(insn 902 901 903 182 (parallel [
            (set (reg:SI 720 [ D.11716 ])
                (neg:SI (reg/v:SI 471 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(insn 903 902 904 182 (set (reg:DI 721 [ D.11714 ])
        (sign_extend:DI (reg:SI 720 [ D.11716 ]))) ../locale/weightwc.h:38 -1
     (nil))
(insn 904 903 905 182 (parallel [
            (set (reg:DI 722 [ D.11714 ])
                (ashift:DI (reg:DI 721 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(insn 905 904 906 182 (parallel [
            (set (reg/v/f:DI 468 [ cp ])
                (plus:DI (reg/v/f:DI 232 [ extra ])
                    (reg:DI 722 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:38 -1
     (nil))
(jump_insn 906 905 907 182 (set (pc)
        (label_ref 909)) ../locale/weightwc.h:38 -1
     (nil)
 -> 909)
(barrier 907 906 978)
(code_label 978 907 908 183 301 "" [4 uses])
(note 908 978 909 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(code_label 909 908 910 184 290 "" [1 uses])
(note 910 909 911 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 184 (set (reg/v:SI 476 [ i ])
        (mem:SI (reg/v/f:DI 468 [ cp ]) [2 *cp_674+0 S4 A32])) ../locale/weightwc.h:46 -1
     (nil))
(insn 912 911 913 184 (parallel [
            (set (reg/v/f:DI 477 [ cp ])
                (plus:DI (reg/v/f:DI 468 [ cp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:51 -1
     (nil))
(insn 913 912 914 184 (set (reg:SI 723)
        (mem:SI (plus:DI (reg/v/f:DI 468 [ cp ])
                (const_int 4 [0x4])) [2 MEM[(const int32_t *)cp_674 + 4B]+0 S4 A32])) ../locale/weightwc.h:51 -1
     (nil))
(insn 914 913 915 184 (set (reg/v:DI 479 [ nhere ])
        (sign_extend:DI (reg:SI 723))) ../locale/weightwc.h:51 -1
     (nil))
(insn 915 914 916 184 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 476 [ i ])
            (const_int 0 [0]))) ../locale/weightwc.h:53 -1
     (nil))
(jump_insn 916 915 917 184 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 931)
            (pc))) ../locale/weightwc.h:53 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 931)
(note 917 916 918 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 918 917 919 185 (parallel [
            (set (reg:DI 437 [ D.11714 ])
                (plus:DI (reg/v:DI 479 [ nhere ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:83 -1
     (nil))
(insn 919 918 920 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 437 [ D.11714 ])
            (const_int 0 [0]))) ../locale/weightwc.h:83 -1
     (nil))
(jump_insn 920 919 921 185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) ../locale/weightwc.h:83 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1000)
(note 921 920 922 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 922 921 923 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 475 [ len ])
            (const_int 0 [0]))) ../locale/weightwc.h:83 -1
     (nil))
(jump_insn 923 922 924 186 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 994)
            (pc))) ../locale/weightwc.h:83 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 994)
(note 924 923 925 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 925 924 926 187 (set (reg:SI 724)
        (mem:SI (plus:DI (reg/v/f:DI 468 [ cp ])
                (const_int 8 [0x8])) [2 MEM[(const int32_t *)cp_674 + 8B]+0 S4 A32])) ../locale/weightwc.h:84 -1
     (nil))
(insn 926 925 927 187 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 724)
            (mem:SI (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])) [2 MEM[(const int32_t *)np_31 + 4B]+0 S4 A32]))) ../locale/weightwc.h:84 -1
     (nil))
(jump_insn 927 926 930 187 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 994)
            (pc))) ../locale/weightwc.h:84 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 994)
(note 930 927 43 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 43 930 928 188 (set (reg/v:DI 491 [ cnt ])
        (const_int 0 [0])) ../locale/weightwc.h:84 -1
     (nil))
(jump_insn 928 43 929 188 (set (pc)
        (label_ref 985)) ../locale/weightwc.h:84 -1
     (nil)
 -> 985)
(barrier 929 928 931)
(code_label 931 929 932 189 291 "" [1 uses])
(note 932 931 933 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 933 932 934 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 475 [ len ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 934 933 935 189 (set (reg:QI 726 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 935 934 936 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 726 [ D.11715 ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(jump_insn 936 935 2076 189 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2032)
            (pc))) ../locale/weightwc.h:62 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 2032)
(note 2076 936 937 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 937 2076 938 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 479 [ nhere ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 938 937 939 190 (set (reg:QI 728 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 939 938 940 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 728 [ D.11715 ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(jump_insn 940 939 941 190 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2032)
            (pc))) ../locale/weightwc.h:62 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 2032)
(note 941 940 942 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 942 941 943 191 (set (reg:SI 729)
        (mem:SI (plus:DI (reg/v/f:DI 468 [ cp ])
                (const_int 8 [0x8])) [2 MEM[(const int32_t *)cp_674 + 8B]+0 S4 A32])) ../locale/weightwc.h:63 -1
     (nil))
(insn 943 942 944 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 729)
            (mem:SI (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])) [2 MEM[(const int32_t *)np_31 + 4B]+0 S4 A32]))) ../locale/weightwc.h:63 -1
     (nil))
(jump_insn 944 943 947 191 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 974)
            (pc))) ../locale/weightwc.h:63 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 974)
(note 947 944 41 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 41 947 945 192 (set (reg/v:DI 483 [ cnt ])
        (const_int 0 [0])) ../locale/weightwc.h:63 -1
     (nil))
(jump_insn 945 41 946 192 (set (pc)
        (label_ref 955)) ../locale/weightwc.h:63 -1
     (nil)
 -> 955)
(barrier 946 945 960)
(code_label 960 946 948 193 299 "" [1 uses])
(note 948 960 949 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 949 948 950 193 (set (reg:SI 730)
        (mem:SI (plus:DI (mult:DI (reg/v:DI 483 [ cnt ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 477 [ cp ])) [2 MEM[base: cp_676, index: cnt_685, step: 4, offset: 0B]+0 S4 A32])) ../locale/weightwc.h:63 -1
     (nil))
(insn 950 949 951 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 730)
            (mem:SI (plus:DI (plus:DI (mult:DI (reg/v:DI 483 [ cnt ])
                            (const_int 4 [0x4]))
                        (reg/v/f:DI 103 [ np ]))
                    (const_int 4 [0x4])) [2 MEM[base: np_31, index: cnt_685, step: 4, offset: 4B]+0 S4 A32]))) ../locale/weightwc.h:63 -1
     (nil))
(jump_insn 951 950 954 193 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 970)
            (pc))) ../locale/weightwc.h:63 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 970)
(note 954 951 952 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(jump_insn 952 954 953 194 (set (pc)
        (label_ref 957)) ../locale/weightwc.h:63 -1
     (nil)
 -> 957)
(barrier 953 952 955)
(code_label 955 953 956 195 297 "" [1 uses])
(note 956 955 957 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(code_label 957 956 958 196 298 "" [1 uses])
(note 958 957 959 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 959 958 961 196 (parallel [
            (set (reg/v:DI 483 [ cnt ])
                (plus:DI (reg/v:DI 483 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:62 -1
     (nil))
(insn 961 959 962 196 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 479 [ nhere ])
            (reg/v:DI 483 [ cnt ]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 962 961 963 196 (set (reg:QI 732 [ D.11715 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 963 962 964 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 732 [ D.11715 ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(jump_insn 964 963 2077 196 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 970)
            (pc))) ../locale/weightwc.h:62 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 970)
(note 2077 964 965 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 965 2077 966 197 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 475 [ len ])
            (reg/v:DI 483 [ cnt ]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 966 965 967 197 (set (reg:QI 734 [ D.11715 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(insn 967 966 968 197 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 734 [ D.11715 ])
            (const_int 0 [0]))) ../locale/weightwc.h:62 -1
     (nil))
(jump_insn 968 967 2078 197 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 960)
            (pc))) ../locale/weightwc.h:62 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 960)
(note 2078 968 2029 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2029 2078 2030 198 (set (pc)
        (label_ref 970)) -1
     (nil)
 -> 970)
(barrier 2030 2029 2032)
(code_label 2032 2030 2031 200 395 "" [2 uses])
(note 2031 2032 42 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 42 2031 970 200 (set (reg/v:DI 483 [ cnt ])
        (const_int 0 [0])) ../locale/weightwc.h:62 -1
     (nil))
(code_label 970 42 971 201 295 "" [3 uses])
(note 971 970 972 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 479 [ nhere ])
            (reg/v:DI 483 [ cnt ]))) ../locale/weightwc.h:66 -1
     (nil))
(jump_insn 973 972 974 201 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2036)
            (pc))) ../locale/weightwc.h:66 612 {*jcc_1}
     (int_list:REG_BR_PROB 471 (nil))
 -> 2036)
(code_label 974 973 975 202 296 "" [1 uses])
(note 975 974 976 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 202 (parallel [
            (set (reg:DI 735 [ D.11714 ])
                (ashift:DI (reg/v:DI 479 [ nhere ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:74 -1
     (nil))
(insn 977 976 979 202 (parallel [
            (set (reg/v/f:DI 468 [ cp ])
                (plus:DI (reg/v/f:DI 477 [ cp ])
                    (reg:DI 735 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:74 -1
     (nil))
(jump_insn 979 977 980 202 (set (pc)
        (label_ref 978)) ../locale/weightwc.h:74 -1
     (nil)
 -> 978)
(barrier 980 979 991)
(code_label 991 980 981 203 302 "" [1 uses])
(note 981 991 982 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 982 981 983 203 (set (reg:SI 736)
        (mem:SI (plus:DI (mult:DI (reg/v:DI 491 [ cnt ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 477 [ cp ])) [2 MEM[base: cp_676, index: cnt_697, step: 4, offset: 0B]+0 S4 A32])) ../locale/weightwc.h:84 -1
     (nil))
(insn 983 982 984 203 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 736)
            (mem:SI (plus:DI (plus:DI (mult:DI (reg/v:DI 491 [ cnt ])
                            (const_int 4 [0x4]))
                        (reg/v/f:DI 103 [ np ]))
                    (const_int 4 [0x4])) [2 MEM[base: np_31, index: cnt_697, step: 4, offset: 4B]+0 S4 A32]))) ../locale/weightwc.h:84 -1
     (nil))
(jump_insn 984 983 985 203 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 994)
            (pc))) ../locale/weightwc.h:84 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 994)
(code_label 985 984 986 204 294 "" [1 uses])
(note 986 985 987 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 987 986 988 204 (parallel [
            (set (reg/v:DI 491 [ cnt ])
                (plus:DI (reg/v:DI 491 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:83 -1
     (nil))
(insn 988 987 989 204 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 437 [ D.11714 ])
            (reg/v:DI 491 [ cnt ]))) ../locale/weightwc.h:83 -1
     (nil))
(jump_insn 989 988 990 204 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) ../locale/weightwc.h:83 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1000)
(note 990 989 992 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 992 990 993 205 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 475 [ len ])
            (reg/v:DI 491 [ cnt ]))) ../locale/weightwc.h:83 -1
     (nil))
(jump_insn 993 992 994 205 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 991)
            (pc))) ../locale/weightwc.h:83 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 991)
(code_label 994 993 995 206 293 "" [3 uses])
(note 995 994 996 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 206 (parallel [
            (set (reg:DI 737 [ D.11714 ])
                (ashift:DI (reg/v:DI 479 [ nhere ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:89 -1
     (nil))
(insn 997 996 998 206 (parallel [
            (set (reg/v/f:DI 468 [ cp ])
                (plus:DI (reg/v/f:DI 477 [ cp ])
                    (reg:DI 737 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:89 -1
     (nil))
(jump_insn 998 997 999 206 (set (pc)
        (label_ref 978)) ../locale/weightwc.h:89 -1
     (nil)
 -> 978)
(barrier 999 998 1000)
(code_label 1000 999 1001 207 292 "" [2 uses])
(note 1001 1000 1002 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 1002 1001 1003 207 (parallel [
            (set (reg:DI 493 [ D.11714 ])
                (ashift:DI (reg/v:DI 479 [ nhere ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:93 -1
     (nil))
(insn 1003 1002 1004 207 (set (reg:SI 496 [ D.11716 ])
        (mem:SI (plus:DI (plus:DI (reg/v/f:DI 477 [ cp ])
                    (reg:DI 493 [ D.11714 ]))
                (const_int -4 [0xfffffffffffffffc])) [2 *_703+0 S4 A32])) ../locale/weightwc.h:93 -1
     (nil))
(insn 1004 1003 1005 207 (set (reg:SI 498 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 103 [ np ])
                (reg:DI 493 [ D.11714 ])) [2 *_705+0 S4 A32])) ../locale/weightwc.h:93 -1
     (nil))
(insn 1005 1004 1006 207 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 496 [ D.11716 ])
            (reg:SI 498 [ D.11716 ]))) ../locale/weightwc.h:93 -1
     (nil))
(jump_insn 1006 1005 1007 207 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1012)
            (pc))) ../locale/weightwc.h:93 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1012)
(note 1007 1006 1008 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 1008 1007 1009 208 (parallel [
            (set (reg:DI 738 [ D.11714 ])
                (ashift:DI (reg/v:DI 479 [ nhere ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:95 -1
     (nil))
(insn 1009 1008 1010 208 (parallel [
            (set (reg/v/f:DI 468 [ cp ])
                (plus:DI (reg/v/f:DI 477 [ cp ])
                    (reg:DI 738 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:95 -1
     (nil))
(jump_insn 1010 1009 1011 208 (set (pc)
        (label_ref 978)) ../locale/weightwc.h:95 -1
     (nil)
 -> 978)
(barrier 1011 1010 1012)
(code_label 1012 1011 1013 209 303 "" [1 uses])
(note 1013 1012 1014 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 209 (parallel [
            (set (reg:DI 500 [ D.11714 ])
                (ashift:DI (reg/v:DI 479 [ nhere ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:99 -1
     (nil))
(insn 1015 1014 1016 209 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 498 [ D.11716 ])
            (mem:SI (plus:DI (plus:DI (reg/v/f:DI 477 [ cp ])
                        (reg:DI 500 [ D.11714 ]))
                    (const_int -4 [0xfffffffffffffffc])) [2 *_711+0 S4 A32]))) ../locale/weightwc.h:99 -1
     (nil))
(jump_insn 1016 1015 1017 209 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1021)
            (pc))) ../locale/weightwc.h:99 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1021)
(note 1017 1016 1018 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 1018 1017 1019 210 (parallel [
            (set (reg/v/f:DI 468 [ cp ])
                (plus:DI (reg/v/f:DI 477 [ cp ])
                    (reg:DI 500 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:101 -1
     (nil))
(jump_insn 1019 1018 1020 210 (set (pc)
        (label_ref 978)) ../locale/weightwc.h:101 -1
     (nil)
 -> 978)
(barrier 1020 1019 1021)
(code_label 1021 1020 1022 211 304 "" [1 uses])
(note 1022 1021 1023 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1022 1024 211 (parallel [
            (set (reg:SI 739 [ D.11716 ])
                (minus:SI (reg:SI 498 [ D.11716 ])
                    (reg:SI 496 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 1024 1023 1025 211 (set (reg:DI 740 [ offset ])
        (sign_extend:DI (reg:SI 739 [ D.11716 ]))) ../locale/weightwc.h:110 -1
     (nil))
(insn 1025 1024 1026 211 (parallel [
            (set (reg:SI 741 [ D.11716 ])
                (neg:SI (reg/v:SI 476 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 1026 1025 1027 211 (set (reg:DI 742 [ D.11714 ])
        (sign_extend:DI (reg:SI 741 [ D.11716 ]))) ../locale/weightwc.h:110 -1
     (nil))
(insn 1027 1026 1028 211 (parallel [
            (set (reg:DI 743)
                (plus:DI (reg:DI 740 [ offset ])
                    (reg:DI 742 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weightwc.h:110 -1
     (nil))
(insn 1028 1027 2024 211 (set (reg:SI 511 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 743)
                    (const_int 4 [0x4]))
                (reg/v/f:DI 233 [ indirect ])) [2 *_720+0 S4 A32])) ../locale/weightwc.h:110 -1
     (nil))
(jump_insn 2024 1028 2025 211 (set (pc)
        (label_ref 1029)) -1
     (nil)
 -> 1029)
(barrier 2025 2024 2027)
(code_label 2027 2025 2026 212 394 "" [1 uses])
(note 2026 2027 44 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 44 2026 2033 212 (set (reg:SI 511 [ D.11716 ])
        (reg/v:SI 471 [ i ])) ../locale/weightwc.h:32 -1
     (nil))
(jump_insn 2033 44 2034 212 (set (pc)
        (label_ref 1029)) -1
     (nil)
 -> 1029)
(barrier 2034 2033 2036)
(code_label 2036 2034 2035 213 396 "" [1 uses])
(note 2035 2036 45 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 45 2035 1029 213 (set (reg:SI 511 [ D.11716 ])
        (reg/v:SI 476 [ i ])) ../locale/weightwc.h:46 -1
     (nil))
(code_label 1029 45 1030 214 289 "" [2 uses])
(note 1030 1029 1031 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 511 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:419 -1
     (nil))
(jump_insn 1032 1031 1033 214 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) fnmatch_loop.c:419 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 886)
(note 1033 1032 1034 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 215 (parallel [
            (set (reg:SI 744 [ D.11716 ])
                (ashiftrt:SI (reg:SI 467 [ D.11716 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:420 -1
     (nil))
(insn 1035 1034 1036 215 (parallel [
            (set (reg:SI 745 [ D.11716 ])
                (ashiftrt:SI (reg:SI 511 [ D.11716 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:420 -1
     (nil))
(insn 1036 1035 1037 215 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 744 [ D.11716 ])
            (reg:SI 745 [ D.11716 ]))) fnmatch_loop.c:420 -1
     (nil))
(jump_insn 1037 1036 1038 215 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) fnmatch_loop.c:420 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 886)
(note 1038 1037 1039 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 1039 1038 1040 216 (parallel [
            (set (reg:SI 225 [ D.11716 ])
                (and:SI (reg:SI 511 [ D.11716 ])
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1040 1039 1041 216 (set (reg:DI 746 [ D.11714 ])
        (sign_extend:DI (reg:SI 225 [ D.11716 ]))) fnmatch_loop.c:421 -1
     (nil))
(insn 1041 1040 1042 216 (parallel [
            (set (reg:DI 246 [ D.11714 ])
                (ashift:DI (reg:DI 746 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:421 -1
     (nil))
(insn 1042 1041 1043 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 237 [ len ])
            (mem:SI (plus:DI (reg/v/f:DI 231 [ weights ])
                    (reg:DI 246 [ D.11714 ])) [2 *_314+0 S4 A32]))) fnmatch_loop.c:421 -1
     (nil))
(jump_insn 1043 1042 1044 216 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) fnmatch_loop.c:421 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 886)
(note 1044 1043 1045 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1045 1044 1046 217 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 237 [ len ])
            (const_int 0 [0]))) fnmatch_loop.c:428 -1
     (nil))
(jump_insn 1046 1045 1047 217 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1072)
            (pc))) fnmatch_loop.c:428 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1072)
(note 1047 1046 1048 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 218 (parallel [
            (set (reg:SI 747 [ D.11716 ])
                (plus:SI (reg:SI 455 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:429 -1
     (nil))
(insn 1049 1048 1050 218 (set (reg:DI 590 [ D.11714 ])
        (sign_extend:DI (reg:SI 747 [ D.11716 ]))) fnmatch_loop.c:429 -1
     (nil))
(insn 1050 1049 1051 218 (parallel [
            (set (reg:SI 748 [ D.11716 ])
                (plus:SI (reg:SI 225 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:430 -1
     (nil))
(insn 1051 1050 1052 218 (set (reg:DI 597 [ D.11714 ])
        (sign_extend:DI (reg:SI 748 [ D.11716 ]))) fnmatch_loop.c:430 -1
     (nil))
(insn 1052 1051 1053 218 (set (reg:SI 749)
        (mem:SI (plus:DI (plus:DI (reg/v/f:DI 231 [ weights ])
                    (reg:DI 246 [ D.11714 ]))
                (const_int 4 [0x4])) [2 *_879+0 S4 A32])) fnmatch_loop.c:429 -1
     (nil))
(insn 1053 1052 1054 218 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 749)
            (mem:SI (plus:DI (plus:DI (reg/v/f:DI 231 [ weights ])
                        (reg:DI 235 [ D.11714 ]))
                    (const_int 4 [0x4])) [2 *_820+0 S4 A32]))) fnmatch_loop.c:429 -1
     (nil))
(jump_insn 1054 1053 1055 218 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 886)
            (pc))) fnmatch_loop.c:429 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 886)
(note 1055 1054 1056 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 1056 1055 1057 219 (parallel [
            (set (reg:DI 750 [ D.11714 ])
                (plus:DI (reg:DI 235 [ D.11714 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1057 1056 46 219 (parallel [
            (set (reg:DI 136 [ ivtmp.335 ])
                (plus:DI (reg/v/f:DI 231 [ weights ])
                    (reg:DI 750 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 46 1057 1065 219 (set (reg/v:SI 100 [ cnt ])
        (const_int 0 [0])) fnmatch_loop.c:429 -1
     (nil))
(code_label 1065 46 1058 220 306 "" [1 uses])
(note 1058 1065 1059 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 1059 1058 1060 220 (parallel [
            (set (reg/v:SI 100 [ cnt ])
                (plus:SI (reg/v:SI 100 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:431 -1
     (nil))
(insn 1060 1059 1061 220 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 237 [ len ])
            (reg/v:SI 100 [ cnt ]))) fnmatch_loop.c:428 -1
     (nil))
(jump_insn 1061 1060 1062 220 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1083)
            (pc))) fnmatch_loop.c:428 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1083)
(note 1062 1061 1063 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 1063 1062 1064 221 (set (reg:SI 252 [ D.11716 ])
        (mem:SI (reg:DI 136 [ ivtmp.335 ]) [2 MEM[base: _512, offset: 0B]+0 S4 A32])) fnmatch_loop.c:429 -1
     (nil))
(insn 1064 1063 1066 221 (parallel [
            (set (reg:DI 136 [ ivtmp.335 ])
                (plus:DI (reg:DI 136 [ ivtmp.335 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1066 1064 1067 221 (parallel [
            (set (reg:DI 751 [ D.11719 ])
                (minus:DI (reg:DI 597 [ D.11714 ])
                    (reg:DI 590 [ D.11714 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:430 -1
     (nil))
(insn 1067 1066 1068 221 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ D.11716 ])
            (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 751 [ D.11719 ])
                            (const_int 4 [0x4]))
                        (reg:DI 136 [ ivtmp.335 ]))
                    (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: _517, index: _1045, step: 4, offset: -4B]+0 S4 A32]))) fnmatch_loop.c:429 -1
     (nil))
(jump_insn 1068 1067 1071 221 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1065)
            (pc))) fnmatch_loop.c:429 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1065)
(note 1071 1068 1069 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1069 1071 1070 222 (set (pc)
        (label_ref 886)) -1
     (nil)
 -> 886)
(barrier 1070 1069 1072)
(code_label 1072 1070 1073 223 305 "" [1 uses])
(note 1073 1072 1074 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1074 1073 1075 223 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 237 [ len ])
            (const_int 0 [0]))) fnmatch_loop.c:433 -1
     (nil))
(jump_insn 1075 1074 1078 223 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1083)
            (pc))) fnmatch_loop.c:433 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1083)
(note 1078 1075 1076 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1076 1078 1077 224 (set (pc)
        (label_ref 886)) -1
     (nil)
 -> 886)
(barrier 1077 1076 1083)
(code_label 1083 1077 1084 226 280 "" [3 uses])
(note 1084 1083 1085 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 226 (parallel [
            (set (reg/v/f:DI 227 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:366 -1
     (nil))
(insn 1086 1085 34 226 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 16 [0x10])) [2 MEM[(const wchar_t *)pattern_8 + 16B]+0 S4 A32])) -1
     (nil))
(insn 34 1086 1088 226 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 227 [ pattern ])) -1
     (nil))
(jump_insn 1088 34 1089 226 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 1089 1088 1090)
(code_label 1090 1089 1091 227 263 "" [1 uses])
(note 1091 1090 1092 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 1092 1091 1093 227 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:442 -1
     (nil))
(jump_insn 1093 1092 1096 227 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1867)
            (pc))) fnmatch_loop.c:442 -1
     (int_list:REG_BR_PROB 256 (nil))
 -> 1867)
(note 1096 1093 1094 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1094 1096 1095 228 (set (pc)
        (label_ref 1373)) -1
     (nil)
 -> 1373)
(barrier 1095 1094 1097)
(code_label 1097 1095 1098 229 277 "" [1 uses])
(note 1098 1097 1099 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 1099 1098 1100 229 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 605 [ D.11716 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:457 -1
     (nil))
(jump_insn 1100 1099 1101 229 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) fnmatch_loop.c:457 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1376)
(note 1101 1100 47 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 47 1101 48 230 (set (reg/v/f:DI 98 [ pattern ])
        (reg/v/f:DI 568 [ pattern ])) -1
     (nil))
(insn 48 47 1126 230 (set (reg/v:DI 111 [ c1 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 1126 48 1102 231 315 "" [1 uses])
(note 1102 1126 1103 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1103 1102 1104 231 (parallel [
            (set (reg/v/f:DI 262 [ pattern ])
                (plus:DI (reg/v/f:DI 98 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:466 -1
     (nil))
(insn 1104 1103 1105 231 (set (reg/v:SI 264 [ c ])
        (mem:SI (reg/v/f:DI 262 [ pattern ]) [2 MEM[base: pattern_339, offset: 0B]+0 S4 A32])) fnmatch_loop.c:466 -1
     (nil))
(insn 1105 1104 1106 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 264 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:467 -1
     (nil))
(jump_insn 1106 1105 1107 231 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1118)
            (pc))) fnmatch_loop.c:467 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1118)
(note 1107 1106 1108 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 1108 1107 1109 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[base: pattern_339, offset: 4B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:467 -1
     (nil))
(jump_insn 1109 1108 1110 232 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1122)
            (pc))) fnmatch_loop.c:467 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1122)
(note 1110 1109 1111 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 233 (parallel [
            (set (reg/v/f:DI 266 [ pattern ])
                (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:469 -1
     (nil))
(insn 1112 1111 1113 233 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 262 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_339 + 8B]+0 S4 A32])) fnmatch_loop.c:480 -1
     (nil))
(insn 1113 1112 1114 233 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 584 [ D.11716 ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:480 -1
     (nil))
(jump_insn 1114 1113 1117 233 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1129)
            (pc))) fnmatch_loop.c:480 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1129)
(note 1117 1114 49 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 49 1117 1115 234 (set (reg/v:SI 130 [ is_range ])
        (const_int 0 [0])) fnmatch_loop.c:480 -1
     (nil))
(jump_insn 1115 49 1116 234 (set (pc)
        (label_ref 1135)) -1
     (nil)
 -> 1135)
(barrier 1116 1115 1118)
(code_label 1118 1116 1119 235 311 "" [1 uses])
(note 1119 1118 1120 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1120 1119 1121 235 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 264 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:472 -1
     (nil))
(jump_insn 1121 1120 1122 235 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:472 -1
     (int_list:REG_BR_PROB 617 (nil))
 -> 1906)
(code_label 1122 1121 1123 236 312 "" [1 uses])
(note 1123 1122 1124 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 1124 1123 1125 236 (parallel [
            (set (reg/v:DI 111 [ c1 ])
                (plus:DI (reg/v:DI 111 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:474 -1
     (nil))
(insn 1125 1124 1127 236 (set (reg/v/f:DI 98 [ pattern ])
        (reg/v/f:DI 262 [ pattern ])) -1
     (nil))
(jump_insn 1127 1125 1128 236 (set (pc)
        (label_ref 1126)) fnmatch_loop.c:475 -1
     (nil)
 -> 1126)
(barrier 1128 1127 1129)
(code_label 1129 1128 1130 237 313 "" [1 uses])
(note 1130 1129 1131 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1131 1130 1132 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_339 + 12B]+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:480 -1
     (nil))
(insn 1132 1131 1133 237 (set (reg:QI 753)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:480 -1
     (nil))
(insn 1133 1132 1134 237 (set (reg:SI 752 [ D.11715 ])
        (zero_extend:SI (reg:QI 753))) fnmatch_loop.c:480 -1
     (nil))
(insn 1134 1133 1135 237 (set (reg/v:SI 130 [ is_range ])
        (reg:SI 752 [ D.11715 ])) fnmatch_loop.c:480 -1
     (nil))
(code_label 1135 1134 1136 238 314 "" [1 uses])
(note 1136 1135 1137 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 1137 1136 1138 238 (set (reg:DI 755)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:460 -1
     (nil))
(insn 1138 1137 1139 238 (set (reg/f:DI 754)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 755)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:460 -1
     (nil))
(insn 1139 1138 1140 238 (set (reg/f:DI 260 [ D.11723 ])
        (mem/f:DI (plus:DI (reg/f:DI 754)
                (const_int 24 [0x18])) [1 _336->__locales+24 S8 A64])) fnmatch_loop.c:460 -1
     (nil))
(insn 1140 1139 1141 238 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 260 [ D.11723 ])
                    (const_int 64 [0x40])) [0 _337->values[0].word+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:482 -1
     (nil))
(jump_insn 1141 1140 1142 238 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1163)
            (pc))) fnmatch_loop.c:482 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1163)
(note 1142 1141 1143 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 1143 1142 1144 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 111 [ c1 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:487 -1
     (nil))
(jump_insn 1144 1143 1145 239 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:487 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1145 1144 1146 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 1146 1145 1147 240 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 130 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1147 1146 1148 240 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1152)
            (pc))) fnmatch_loop.c:490 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1152)
(note 1148 1147 1149 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 1149 1148 50 241 (set (reg:SI 614 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_8 + 4B]+0 S4 A32])) -1
     (nil))
(insn 50 1149 1150 241 (set (reg/v:SI 109 [ cold ])
        (reg:SI 614 [ D.11716 ])) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1150 50 1151 241 (set (pc)
        (label_ref 1157)) -1
     (nil)
 -> 1157)
(barrier 1151 1150 1152)
(code_label 1152 1151 1153 242 317 "" [1 uses])
(note 1153 1152 1154 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 1154 1153 1155 242 (set (reg:SI 332 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_8 + 4B]+0 S4 A32])) fnmatch_loop.c:490 -1
     (nil))
(insn 1155 1154 1156 242 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])
            (reg:SI 332 [ D.11716 ]))) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1156 1155 2041 242 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2040)
            (pc))) fnmatch_loop.c:490 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 2040)
(note 2041 1156 51 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 51 2041 1157 243 (set (reg/v:SI 109 [ cold ])
        (reg:SI 332 [ D.11716 ])) -1
     (nil))
(code_label 1157 51 1158 244 318 "" [1 uses])
(note 1158 1157 1159 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 1159 1158 1160 244 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:494 -1
     (nil))
(insn 1160 1159 60 244 (set (reg/v:SI 106 [ c ])
        (reg:SI 584 [ D.11716 ])) fnmatch_loop.c:494 -1
     (nil))
(insn 60 1160 1161 244 (set (reg/v:SI 110 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:455 -1
     (nil))
(jump_insn 1161 60 1162 244 (set (pc)
        (label_ref 1412)) -1
     (nil)
 -> 1412)
(barrier 1162 1161 1163)
(code_label 1163 1162 1164 245 316 "" [1 uses])
(note 1164 1163 1165 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 1165 1164 1166 245 (set (reg:DI 756)
        (reg/f:DI 7 sp)) fnmatch_loop.c:497 -1
     (nil))
(insn 1166 1165 1167 245 (set (reg/f:DI 268 [ D.11720 ])
        (reg:DI 756)) fnmatch_loop.c:497 -1
     (nil))
(insn 1167 1166 1168 245 (set (reg/v:DI 269 [ n ])
        (reg/v:DI 111 [ c1 ])) fnmatch_loop.c:501 -1
     (nil))
(insn 1168 1167 1169 245 (parallel [
            (set (reg:DI 757)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1169 1168 1170 245 (parallel [
            (set (reg:DI 758)
                (plus:DI (reg/v:DI 111 [ c1 ])
                    (reg:DI 757)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1170 1169 1171 245 (parallel [
            (set (reg:DI 760)
                (udiv:DI (reg:DI 758)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 761)
                (umod:DI (reg:DI 758)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1171 1170 1172 245 (parallel [
            (set (reg:DI 762)
                (mult:DI (reg:DI 760)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1172 1171 1173 245 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 762)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1173 1172 1174 245 (set (reg:DI 763)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:501 -1
     (nil))
(insn 1174 1173 1175 245 (parallel [
            (set (reg/f:DI 764)
                (plus:DI (reg:DI 763)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:501 -1
     (nil))
(insn 1175 1174 1176 245 (set (reg/f:DI 270 [ str.37 ])
        (reg/f:DI 764)) fnmatch_loop.c:501 -1
     (nil))
(insn 1176 1175 1177 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 111 [ c1 ])
            (const_int 0 [0]))) fnmatch_loop.c:517 -1
     (nil))
(jump_insn 1177 1176 1199 245 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1187)
            (pc))) fnmatch_loop.c:517 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1187)
(code_label 1199 1177 1178 246 324 "" [1 uses])
(note 1178 1199 1179 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 1179 1178 1180 246 (set (reg/v:SI 278 [ table_size ])
        (mem:SI (plus:DI (reg/f:DI 260 [ D.11723 ])
                (const_int 168 [0xa8])) [0 _337->values[13].word+0 S4 A64])) fnmatch_loop.c:521 -1
     (nil))
(insn 1180 1179 1181 246 (set (reg/v/f:DI 279 [ symb_table ])
        (mem/f:DI (plus:DI (reg/f:DI 260 [ D.11723 ])
                (const_int 176 [0xb0])) [0 _337->values[14].string+0 S8 A64])) fnmatch_loop.c:524 -1
     (nil))
(insn 1181 1180 1182 246 (set (reg/v:SI 517 [ hash ])
        (subreg:SI (reg/v:DI 111 [ c1 ]) 0)) ../locale/elem-hash.h:24 -1
     (nil))
(insn 1182 1181 1183 246 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:DI 269 [ n ])
            (const_int 0 [0]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1183 1182 1186 246 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1203)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1203)
(note 1186 1183 1184 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1184 1186 1185 247 (set (pc)
        (label_ref 1215)) ../locale/elem-hash.h:26 -1
     (nil)
 -> 1215)
(barrier 1185 1184 1187)
(code_label 1187 1185 1188 248 320 "" [1 uses])
(note 1188 1187 52 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 52 1188 1196 248 (set (reg/v:SI 176 [ strcnt ])
        (const_int 0 [0])) fnmatch_loop.c:517 -1
     (nil))
(code_label 1196 52 1189 249 323 "" [1 uses])
(note 1189 1196 1190 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 1190 1189 1191 249 (parallel [
            (set (reg/v:SI 271 [ strcnt ])
                (plus:SI (reg/v:SI 176 [ strcnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:518 -1
     (nil))
(insn 1191 1190 1192 249 (set (reg:DI 272 [ D.11714 ])
        (zero_extend:DI (reg/v:SI 271 [ strcnt ]))) fnmatch_loop.c:518 -1
     (nil))
(insn 1192 1191 1193 249 (set (reg:DI 765)
        (zero_extend:DI (reg/v:SI 176 [ strcnt ]))) fnmatch_loop.c:518 -1
     (nil))
(insn 1193 1192 1194 249 (set (reg:SI 766)
        (mem:SI (plus:DI (mult:DI (reg:DI 272 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 568 [ pattern ])) [2 *_356+0 S4 A32])) fnmatch_loop.c:518 -1
     (nil))
(insn 1194 1193 1195 249 (set (mem/j:QI (plus:DI (reg/f:DI 270 [ str.37 ])
                (reg:DI 765)) [0 *str.37_351 S1 A8])
        (subreg:QI (reg:SI 766) 0)) fnmatch_loop.c:518 -1
     (nil))
(insn 1195 1194 1197 249 (set (reg/v:SI 176 [ strcnt ])
        (reg/v:SI 271 [ strcnt ])) fnmatch_loop.c:517 -1
     (nil))
(insn 1197 1195 1198 249 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 111 [ c1 ])
            (reg:DI 272 [ D.11714 ]))) fnmatch_loop.c:517 -1
     (nil))
(jump_insn 1198 1197 1202 249 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1196)
            (pc))) fnmatch_loop.c:517 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1196)
(note 1202 1198 1200 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1200 1202 1201 250 (set (pc)
        (label_ref 1199)) -1
     (nil)
 -> 1199)
(barrier 1201 1200 1203)
(code_label 1203 1201 1204 251 321 "" [1 uses])
(note 1204 1203 1205 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 1205 1204 1206 251 (set (reg:DI 113 [ ivtmp.378 ])
        (reg/f:DI 270 [ str.37 ])) -1
     (nil))
(insn 1206 1205 1212 251 (parallel [
            (set (reg:DI 295 [ D.11731 ])
                (plus:DI (reg/f:DI 270 [ str.37 ])
                    (reg/v:DI 111 [ c1 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1212 1206 1207 252 325 "" [1 uses])
(note 1207 1212 1208 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 1208 1207 1209 252 (parallel [
            (set (reg/v:SI 513 [ result ])
                (ashift:SI (reg/v:SI 517 [ hash ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:28 -1
     (nil))
(insn 1209 1208 1210 252 (set (reg:SI 767 [ D.11716 ])
        (sign_extend:SI (mem:QI (reg:DI 113 [ ivtmp.378 ]) [0 MEM[base: _379, offset: 0B]+0 S1 A8]))) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1210 1209 1211 252 (parallel [
            (set (reg/v:SI 517 [ hash ])
                (plus:SI (reg:SI 767 [ D.11716 ])
                    (reg/v:SI 513 [ result ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1211 1210 1213 252 (parallel [
            (set (reg:DI 113 [ ivtmp.378 ])
                (plus:DI (reg:DI 113 [ ivtmp.378 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1213 1211 1214 252 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 113 [ ivtmp.378 ])
            (reg:DI 295 [ D.11731 ]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1214 1213 1215 252 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1212)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1212)
(code_label 1215 1214 1216 253 322 "" [1 uses])
(note 1216 1215 1217 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1217 1216 1218 253 (parallel [
            (set (reg:SI 769)
                (div:SI (reg/v:SI 517 [ hash ])
                    (reg/v:SI 278 [ table_size ])))
            (set (reg:SI 768)
                (mod:SI (reg/v:SI 517 [ hash ])
                    (reg/v:SI 278 [ table_size ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:535 -1
     (nil))
(insn 1218 1217 1219 253 (set (reg/v:SI 281 [ elem ])
        (reg:SI 768)) fnmatch_loop.c:535 -1
     (nil))
(insn 1219 1218 1220 253 (parallel [
            (set (reg:SI 770 [ D.11716 ])
                (ashift:SI (reg/v:SI 281 [ elem ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:536 -1
     (nil))
(insn 1220 1219 1221 253 (set (reg:DI 283 [ D.11714 ])
        (sign_extend:DI (reg:SI 770 [ D.11716 ]))) fnmatch_loop.c:536 -1
     (nil))
(insn 1221 1220 1222 253 (set (reg:SI 294 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 283 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 279 [ symb_table ])) [2 *_368+0 S4 A32])) fnmatch_loop.c:536 -1
     (nil))
(insn 1222 1221 1223 253 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 294 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:536 -1
     (nil))
(jump_insn 1223 1222 1224 253 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1329)
            (pc))) fnmatch_loop.c:536 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1329)
(note 1224 1223 1225 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 1225 1224 1226 254 (set (reg/v/f:DI 280 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 260 [ D.11723 ])
                (const_int 184 [0xb8])) [0 _337->values[15].string+0 S8 A64])) fnmatch_loop.c:527 -1
     (nil))
(insn 1226 1225 1227 254 (parallel [
            (set (reg:SI 771 [ D.11716 ])
                (plus:SI (reg/v:SI 278 [ table_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1227 1226 1228 254 (parallel [
            (set (reg:SI 774)
                (div:SI (reg/v:SI 517 [ hash ])
                    (reg:SI 771 [ D.11716 ])))
            (set (reg:SI 773 [ D.11716 ])
                (mod:SI (reg/v:SI 517 [ hash ])
                    (reg:SI 771 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1228 1227 1229 254 (parallel [
            (set (reg/v:SI 288 [ second ])
                (plus:SI (reg:SI 773 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1229 1228 1230 254 (parallel [
            (set (reg:SI 775 [ D.11716 ])
                (ashift:SI (reg/v:SI 288 [ second ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1230 1229 1231 254 (set (reg:DI 776 [ D.11714 ])
        (sign_extend:DI (reg:SI 775 [ D.11716 ]))) -1
     (nil))
(insn 1231 1230 1232 254 (parallel [
            (set (reg:DI 489 [ D.11719 ])
                (ashift:DI (reg:DI 776 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1232 1231 1233 254 (parallel [
            (set (reg:DI 777 [ D.11719 ])
                (plus:DI (reg:DI 283 [ D.11714 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1233 1232 1234 254 (parallel [
            (set (reg:DI 778 [ D.11719 ])
                (ashift:DI (reg:DI 777 [ D.11719 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1234 1233 1235 254 (parallel [
            (set (reg:DI 319 [ ivtmp.370 ])
                (plus:DI (reg/v/f:DI 279 [ symb_table ])
                    (reg:DI 778 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1235 1234 1236 254 (set (reg:SI 573 [ D.11730 ])
        (reg/v:SI 281 [ elem ])) -1
     (nil))
(insn 1236 1235 1237 254 (set (reg:SI 571 [ D.11730 ])
        (reg/v:SI 288 [ second ])) -1
     (nil))
(insn 1237 1236 1238 254 (parallel [
            (set (reg:SI 779 [ D.11730 ])
                (plus:SI (reg:SI 571 [ D.11730 ])
                    (reg:SI 573 [ D.11730 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1238 1237 1239 254 (parallel [
            (set (reg:SI 780 [ D.11730 ])
                (ashift:SI (reg:SI 779 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1239 1238 1240 254 (set (reg:DI 781 [ D.11719 ])
        (sign_extend:DI (reg:SI 780 [ D.11730 ]))) -1
     (nil))
(insn 1240 1239 1241 254 (parallel [
            (set (reg:SI 782 [ D.11730 ])
                (ashift:SI (reg:SI 573 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1241 1240 1242 254 (set (reg:DI 783 [ D.11719 ])
        (sign_extend:DI (reg:SI 782 [ D.11730 ]))) -1
     (nil))
(insn 1242 1241 1243 254 (parallel [
            (set (reg:DI 784 [ D.11719 ])
                (minus:DI (reg:DI 781 [ D.11719 ])
                    (reg:DI 783 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1243 1242 1244 254 (parallel [
            (set (reg:SI 785 [ D.11730 ])
                (ashift:SI (reg:SI 571 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1244 1243 1245 254 (set (reg:DI 786 [ D.11719 ])
        (sign_extend:DI (reg:SI 785 [ D.11730 ]))) -1
     (nil))
(insn 1245 1244 1290 254 (parallel [
            (set (reg:DI 576 [ D.11719 ])
                (minus:DI (reg:DI 784 [ D.11719 ])
                    (reg:DI 786 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1290 1245 1246 255 330 "" [1 uses])
(note 1246 1290 1247 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 1247 1246 1248 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 517 [ hash ])
            (reg:SI 294 [ D.11716 ]))) fnmatch_loop.c:543 -1
     (nil))
(jump_insn 1248 1247 1249 255 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1286)
            (pc))) fnmatch_loop.c:543 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1286)
(note 1249 1248 1250 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 1250 1249 1251 256 (set (reg:SI 296 [ D.11716 ])
        (mem:SI (reg:DI 319 [ ivtmp.370 ]) [2 MEM[base: _881, offset: 0B]+0 S4 A32])) fnmatch_loop.c:545 -1
     (nil))
(insn 1251 1250 1252 256 (set (reg:DI 297 [ D.11719 ])
        (sign_extend:DI (reg:SI 296 [ D.11716 ]))) fnmatch_loop.c:545 -1
     (nil))
(insn 1252 1251 1253 256 (set (reg:QI 299 [ D.11733 ])
        (mem:QI (plus:DI (reg/v/f:DI 280 [ extra ])
                (reg:DI 297 [ D.11719 ])) [0 *_389+0 S1 A8])) fnmatch_loop.c:545 -1
     (nil))
(insn 1253 1252 1254 256 (set (reg:DI 787 [ D.11714 ])
        (zero_extend:DI (reg:QI 299 [ D.11733 ]))) fnmatch_loop.c:544 -1
     (nil))
(insn 1254 1253 1255 256 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 111 [ c1 ])
            (reg:DI 787 [ D.11714 ]))) fnmatch_loop.c:544 -1
     (nil))
(jump_insn 1255 1254 1256 256 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1286)
            (pc))) fnmatch_loop.c:544 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1286)
(note 1256 1255 1257 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1257 1256 1258 257 (parallel [
            (set (reg:DI 788 [ D.11719 ])
                (plus:DI (reg:DI 297 [ D.11719 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:546 -1
     (nil))
(insn 1258 1257 1259 257 (parallel [
            (set (reg:DI 789 [ D.11732 ])
                (plus:DI (reg/v/f:DI 280 [ extra ])
                    (reg:DI 788 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:546 -1
     (nil))
(insn 1259 1258 1260 257 (set (reg:DI 1 dx)
        (reg/v:DI 111 [ c1 ])) fnmatch_loop.c:546 -1
     (nil))
(insn 1260 1259 1261 257 (set (reg:DI 4 si)
        (reg:DI 789 [ D.11732 ])) fnmatch_loop.c:546 -1
     (nil))
(insn 1261 1260 1262 257 (set (reg:DI 5 di)
        (reg/f:DI 270 [ str.37 ])) fnmatch_loop.c:546 -1
     (nil))
(call_insn/i 1262 1261 1263 257 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:546 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1263 1262 1264 257 (set (reg:SI 790)
        (reg:SI 0 ax)) fnmatch_loop.c:546 -1
     (nil))
(insn 1264 1263 1265 257 (set (reg:SI 791)
        (reg:SI 790)) fnmatch_loop.c:546 -1
     (nil))
(insn 1265 1264 1266 257 (set (reg:SI 303 [ D.11716 ])
        (reg:SI 791)) fnmatch_loop.c:546 -1
     (nil))
(insn 1266 1265 1267 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 303 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:546 -1
     (nil))
(jump_insn 1267 1266 1268 257 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1286)
            (pc))) fnmatch_loop.c:546 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1286)
(note 1268 1267 1269 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1269 1268 1270 258 (set (reg:SI 792 [ D.11716 ])
        (zero_extend:SI (reg:QI 299 [ D.11733 ]))) fnmatch_loop.c:553 -1
     (nil))
(insn 1270 1269 1271 258 (parallel [
            (set (reg:SI 793 [ D.11716 ])
                (plus:SI (reg:SI 792 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:553 -1
     (nil))
(insn 1271 1270 1272 258 (parallel [
            (set (reg/v:SI 306 [ idx ])
                (plus:SI (reg:SI 793 [ D.11716 ])
                    (reg:SI 296 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:553 -1
     (nil))
(insn 1272 1271 1273 258 (set (reg:DI 794 [ D.11719 ])
        (sign_extend:DI (reg/v:SI 306 [ idx ]))) fnmatch_loop.c:570 -1
     (nil))
(insn 1273 1272 1274 258 (set (reg:SI 795 [ D.11716 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 280 [ extra ])
                    (reg:DI 794 [ D.11719 ])) [0 *_404+0 S1 A8]))) fnmatch_loop.c:570 -1
     (nil))
(insn 1274 1273 1275 258 (parallel [
            (set (reg:SI 311 [ D.11716 ])
                (plus:SI (reg:SI 795 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:570 -1
     (nil))
(insn 1275 1274 1276 258 (parallel [
            (set (reg:SI 796 [ idx ])
                (plus:SI (reg/v:SI 306 [ idx ])
                    (reg:SI 311 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:572 -1
     (nil))
(insn 1276 1275 1277 258 (parallel [
            (set (reg:SI 313 [ D.11716 ])
                (plus:SI (reg:SI 796 [ idx ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:572 -1
     (nil))
(insn 1277 1276 1278 258 (parallel [
            (set (reg:SI 797 [ idx ])
                (and:SI (reg:SI 313 [ D.11716 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:574 -1
     (nil))
(insn 1278 1277 1279 258 (set (reg:DI 315 [ D.11719 ])
        (sign_extend:DI (reg:SI 797 [ idx ]))) fnmatch_loop.c:574 -1
     (nil))
(insn 1279 1278 1280 258 (parallel [
            (set (reg:DI 798 [ D.11719 ])
                (plus:DI (reg:DI 315 [ D.11719 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:574 -1
     (nil))
(insn 1280 1279 1281 258 (parallel [
            (set (reg/v/f:DI 317 [ wextra ])
                (plus:DI (reg/v/f:DI 280 [ extra ])
                    (reg:DI 798 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:574 -1
     (nil))
(insn 1281 1280 1282 258 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 130 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:577 -1
     (nil))
(jump_insn 1282 1281 1285 258 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1301)
            (pc))) fnmatch_loop.c:577 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1301)
(note 1285 1282 1283 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1283 1285 1284 259 (set (pc)
        (label_ref 1296)) -1
     (nil)
 -> 1296)
(barrier 1284 1283 1286)
(code_label 1286 1284 1287 260 327 "" [3 uses])
(note 1287 1286 1288 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 1288 1287 1289 260 (parallel [
            (set (reg:DI 319 [ ivtmp.370 ])
                (plus:DI (reg:DI 319 [ ivtmp.370 ])
                    (reg:DI 489 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1289 1288 1291 260 (set (reg:SI 294 [ D.11716 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 576 [ D.11719 ])
                        (const_int 4 [0x4]))
                    (reg:DI 319 [ ivtmp.370 ]))
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: _325, index: _884, step: 4, offset: -4B]+0 S4 A32])) fnmatch_loop.c:560 -1
     (nil))
(insn 1291 1289 1292 260 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 294 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:560 -1
     (nil))
(jump_insn 1292 1291 1295 260 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1290)
            (pc))) fnmatch_loop.c:560 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1290)
(note 1295 1292 1293 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1293 1295 1294 261 (set (pc)
        (label_ref 1329)) -1
     (nil)
 -> 1329)
(barrier 1294 1293 1296)
(code_label 1296 1294 1297 262 329 "" [1 uses])
(note 1297 1296 1298 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 1298 1297 1299 262 (set (reg:SI 582 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 315 [ D.11719 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 317 [ wextra ])) [2 *_873+0 S4 A32])) -1
     (nil))
(jump_insn 1299 1298 1300 262 (set (pc)
        (label_ref 1320)) -1
     (nil)
 -> 1320)
(barrier 1300 1299 1301)
(code_label 1301 1300 1302 263 328 "" [1 uses])
(note 1302 1301 1303 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 1303 1302 53 263 (set (reg:SI 582 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 315 [ D.11719 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 317 [ wextra ])) [2 *_882+0 S4 A32])) -1
     (nil))
(insn 53 1303 1304 263 (set (reg/v:DI 112 [ c1 ])
        (const_int 0 [0])) fnmatch_loop.c:577 -1
     (nil))
(jump_insn 1304 53 1305 263 (set (pc)
        (label_ref 1311)) -1
     (nil)
 -> 1311)
(barrier 1305 1304 1314)
(code_label 1314 1305 1306 264 333 "" [1 uses])
(note 1306 1314 1307 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 1307 1306 1308 264 (set (reg:SI 321 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg/v:DI 112 [ c1 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 103 [ np ])) [2 MEM[base: np_31, index: c1_53, step: 4, offset: 0B]+0 S4 A32])) fnmatch_loop.c:583 -1
     (nil))
(insn 1308 1307 1309 264 (parallel [
            (set (reg/v:DI 112 [ c1 ])
                (plus:DI (reg/v:DI 112 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:583 -1
     (nil))
(insn 1309 1308 1310 264 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 321 [ D.11716 ])
            (mem:SI (plus:DI (mult:DI (reg/v:DI 112 [ c1 ])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 317 [ wextra ])) [2 MEM[base: wextra_413, index: c1_421, step: 4, offset: 0B]+0 S4 A32]))) fnmatch_loop.c:583 -1
     (nil))
(jump_insn 1310 1309 1311 264 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1320)
            (pc))) fnmatch_loop.c:583 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1320)
(code_label 1311 1310 1312 265 332 "" [1 uses])
(note 1312 1311 1313 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 1313 1312 1315 265 (set (reg:SI 318 [ D.11716 ])
        (subreg:SI (reg/v:DI 112 [ c1 ]) 0)) fnmatch_loop.c:581 -1
     (nil))
(insn 1315 1313 1316 265 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 318 [ D.11716 ])
            (reg:SI 582 [ D.11716 ]))) fnmatch_loop.c:580 -1
     (nil))
(jump_insn 1316 1315 1317 265 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1314)
            (pc))) fnmatch_loop.c:580 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1314)
(note 1317 1316 1318 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 1318 1317 1319 266 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 318 [ D.11716 ])
            (reg:SI 582 [ D.11716 ]))) fnmatch_loop.c:586 -1
     (nil))
(jump_insn 1319 1318 1320 266 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1365)
            (pc))) fnmatch_loop.c:586 -1
     (int_list:REG_BR_PROB 714 (nil))
 -> 1365)
(code_label 1320 1319 1321 267 331 "" [2 uses])
(note 1321 1320 1322 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 1322 1321 1323 267 (parallel [
            (set (reg:SI 799 [ D.11716 ])
                (plus:SI (reg:SI 582 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:601 -1
     (nil))
(insn 1323 1322 1324 267 (set (reg:DI 800 [ D.11714 ])
        (sign_extend:DI (reg:SI 799 [ D.11716 ]))) fnmatch_loop.c:601 -1
     (nil))
(insn 1324 1323 1325 267 (set (reg/v:SI 109 [ cold ])
        (mem:SI (plus:DI (mult:DI (reg:DI 800 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 317 [ wextra ])) [2 *_431+0 S4 A32])) fnmatch_loop.c:601 -1
     (nil))
(insn 1325 1324 1326 267 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:609 -1
     (nil))
(insn 1326 1325 56 267 (set (reg/v:SI 106 [ c ])
        (reg:SI 584 [ D.11716 ])) fnmatch_loop.c:609 -1
     (nil))
(insn 56 1326 1327 267 (set (reg/v:SI 110 [ is_seqval ])
        (const_int 1 [0x1])) fnmatch_loop.c:599 -1
     (nil))
(jump_insn 1327 56 1328 267 (set (pc)
        (label_ref 1358)) -1
     (nil)
 -> 1358)
(barrier 1328 1327 1329)
(code_label 1329 1328 1330 268 326 "" [2 uses])
(note 1330 1329 1331 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 1331 1330 1332 268 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 111 [ c1 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:611 -1
     (nil))
(jump_insn 1332 1331 1333 268 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1351)
            (pc))) fnmatch_loop.c:611 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1351)
(note 1333 1332 1334 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 1334 1333 1335 269 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 130 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1335 1334 1336 269 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1340)
            (pc))) fnmatch_loop.c:615 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1340)
(note 1336 1335 1337 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 1337 1336 54 270 (set (reg:SI 600 [ D.11716 ])
        (sign_extend:SI (mem/j:QI (reg/f:DI 270 [ str.37 ]) [0 *str.37_351+0 S1 A8]))) -1
     (nil))
(insn 54 1337 1338 270 (set (reg/v:SI 109 [ cold ])
        (reg:SI 600 [ D.11716 ])) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1338 54 1339 270 (set (pc)
        (label_ref 1345)) -1
     (nil)
 -> 1345)
(barrier 1339 1338 1340)
(code_label 1340 1339 1341 271 337 "" [1 uses])
(note 1341 1340 1342 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 1342 1341 1343 271 (set (reg:SI 330 [ D.11716 ])
        (sign_extend:SI (mem/j:QI (reg/f:DI 270 [ str.37 ]) [0 *str.37_351+0 S1 A8]))) fnmatch_loop.c:615 -1
     (nil))
(insn 1343 1342 1344 271 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])
            (reg:SI 330 [ D.11716 ]))) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1344 1343 2042 271 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1365)
            (pc))) fnmatch_loop.c:615 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1365)
(note 2042 1344 55 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 55 2042 1345 272 (set (reg/v:SI 109 [ cold ])
        (reg:SI 330 [ D.11716 ])) -1
     (nil))
(code_label 1345 55 1346 273 338 "" [1 uses])
(note 1346 1345 1347 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1346 1348 273 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 262 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:619 -1
     (nil))
(insn 1348 1347 57 273 (set (reg/v:SI 106 [ c ])
        (reg:SI 584 [ D.11716 ])) fnmatch_loop.c:619 -1
     (nil))
(insn 57 1348 1349 273 (set (reg/v:SI 110 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:455 -1
     (nil))
(jump_insn 1349 57 1350 273 (set (pc)
        (label_ref 1358)) -1
     (nil)
 -> 1358)
(barrier 1350 1349 1351)
(code_label 1351 1350 1352 274 336 "" [1 uses])
(note 1352 1351 1353 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 1353 1352 1354 274 (clobber (mem:BLK (scratch) [0  A8])) fnmatch_loop.c:622 -1
     (nil))
(insn 1354 1353 1355 274 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) fnmatch_loop.c:622 -1
     (nil))
(insn 1355 1354 86 274 (set (reg/f:DI 7 sp)
        (reg/f:DI 268 [ D.11720 ])) fnmatch_loop.c:622 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 86 1355 1356 274 (set (reg:SI 122 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:622 -1
     (nil))
(jump_insn 1356 86 1357 274 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:622 -1
     (nil)
 -> 1908)
(barrier 1357 1356 1358)
(code_label 1358 1357 1359 275 335 "" [2 uses])
(note 1359 1358 1360 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 1360 1359 1361 275 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 1361 1360 1362 275 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 1362 1361 1363 275 (set (reg/f:DI 7 sp)
        (reg/f:DI 268 [ D.11720 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 1363 1362 1364 275 (set (pc)
        (label_ref 1412)) -1
     (nil)
 -> 1412)
(barrier 1364 1363 1365)
(code_label 1365 1364 1366 276 334 "" [2 uses])
(note 1366 1365 1367 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 1367 1366 1368 276 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 1368 1367 1369 276 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 1369 1368 1370 276 (set (reg/f:DI 7 sp)
        (reg/f:DI 268 [ D.11720 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1370 1369 36 276 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 98 [ pattern ])
                (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_10 + 12B]+0 S4 A32])) -1
     (nil))
(insn 36 1370 1371 276 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 266 [ pattern ])) -1
     (nil))
(jump_insn 1371 36 1372 276 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 1372 1371 1373)
(code_label 1373 1372 1374 277 309 "" [1 uses])
(note 1374 1373 1375 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 1375 1374 1376 277 (set (reg:SI 605 [ D.11716 ])
        (mem:SI (reg/v/f:DI 568 [ pattern ]) [2 *pattern_8+0 S4 A32])) -1
     (nil))
(code_label 1376 1375 1377 278 310 "" [1 uses])
(note 1377 1376 1378 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 1378 1377 1379 278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:629 -1
     (nil))
(jump_insn 1379 1378 1380 278 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1384)
            (pc))) fnmatch_loop.c:629 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1384)
(note 1380 1379 1381 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 1381 1380 1382 279 (set (reg:SI 5 di)
        (reg/v:SI 106 [ c ])) fnmatch_loop.c:629 -1
     (nil))
(call_insn/i 1382 1381 1383 279 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:629 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 1383 1382 1384 279 (set (reg/v:SI 106 [ c ])
        (reg:SI 0 ax)) fnmatch_loop.c:629 -1
     (nil))
(code_label 1384 1383 1385 280 262 ("normal_bracket") [2 uses])
(note 1385 1384 1386 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 1386 1385 1387 280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 605 [ D.11716 ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1387 1386 1388 280 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1399)
            (pc))) fnmatch_loop.c:636 -1
     (int_list:REG_BR_PROB 6861 (nil))
 -> 1399)
(note 1388 1387 1389 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 1389 1388 1390 281 (set (reg:SI 333 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_12 + 4B]+0 S4 A32])) fnmatch_loop.c:635 -1
     (nil))
(insn 1390 1389 1391 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 333 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1391 1390 1392 281 (set (reg:QI 802 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1392 1391 1393 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 802 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1393 1392 2079 281 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) fnmatch_loop.c:636 612 {*jcc_1}
     (int_list:REG_BR_PROB 1400 (nil))
 -> 1399)
(note 2079 1393 1394 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 1394 2079 1395 282 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 333 [ D.11716 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1395 1394 1396 282 (set (reg:QI 804 [ D.11715 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1396 1395 1397 282 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 804 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1397 1396 2080 282 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1407)
            (pc))) fnmatch_loop.c:636 -1
     (int_list:REG_BR_PROB 8372 (nil))
 -> 1407)
(note 2080 1397 1399 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(code_label 1399 2080 1400 284 339 "" [7 uses])
(note 1400 1399 1401 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 1401 1400 1402 284 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 129 [ fn ])
            (reg/v:SI 106 [ c ]))) fnmatch_loop.c:638 -1
     (nil))
(jump_insn 1402 1401 1403 284 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1407)
            (pc))) fnmatch_loop.c:638 -1
     (int_list:REG_BR_PROB 9778 (nil))
 -> 1407)
(note 1403 1402 1404 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 1404 1403 1405 285 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (reg/v/f:DI 568 [ pattern ]) [2 *pattern_871+0 S4 A32])) -1
     (nil))
(jump_insn 1405 1404 1406 285 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 1406 1405 1407)
(code_label 1407 1406 1408 286 340 "" [2 uses])
(note 1408 1407 1409 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 1409 1408 1410 286 (set (reg/v:SI 109 [ cold ])
        (reg/v:SI 106 [ c ])) fnmatch_loop.c:644 -1
     (nil))
(insn 1410 1409 1411 286 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:645 -1
     (nil))
(insn 1411 1410 59 286 (set (reg/v:SI 106 [ c ])
        (reg:SI 605 [ D.11716 ])) fnmatch_loop.c:645 -1
     (nil))
(insn 59 1411 1412 286 (set (reg/v:SI 110 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:643 -1
     (nil))
(code_label 1412 59 1413 287 319 "" [2 uses])
(note 1413 1412 1414 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 1414 1413 1415 287 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ c ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:648 -1
     (nil))
(jump_insn 1415 1414 1416 287 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1694)
            (pc))) fnmatch_loop.c:648 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1694)
(note 1416 1415 1417 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 1417 1416 1419 288 (set (reg:SI 334 [ D.11716 ])
        (mem:SI (reg/v/f:DI 568 [ pattern ]) [2 *pattern_13+0 S4 A32])) fnmatch_loop.c:648 -1
     (nil))
(insn 1419 1417 1420 288 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 334 [ D.11716 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:648 -1
     (nil))
(jump_insn 1420 1419 1421 288 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1418)
            (pc))) fnmatch_loop.c:648 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 1418)
(note 1421 1420 1422 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 1422 1421 1423 289 (parallel [
            (set (reg/v/f:DI 101 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:661 -1
     (nil))
(insn 1423 1422 1424 289 (set (reg:SI 4 si)
        (reg/v:SI 129 [ fn ])) fnmatch_loop.c:665 -1
     (nil))
(insn 1424 1423 1425 289 (set (reg:DI 5 di)
        (reg/v/f:DI 146 [ collseq ])) fnmatch_loop.c:665 -1
     (nil))
(call_insn 1425 1424 1426 289 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>) [0 __collseq_table_lookup S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:665 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 1426 1425 1427 289 (set (reg/v:SI 335 [ fcollseq ])
        (reg:SI 0 ax)) fnmatch_loop.c:665 -1
     (nil))
(insn 1427 1426 1428 289 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 335 [ fcollseq ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:666 -1
     (nil))
(jump_insn 1428 1427 1429 289 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1690)
            (pc))) fnmatch_loop.c:666 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1690)
(note 1429 1428 1430 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 1430 1429 1431 290 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 110 [ is_seqval ])
            (const_int 0 [0]))) fnmatch_loop.c:672 -1
     (nil))
(jump_insn 1431 1430 1432 290 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1436)
            (pc))) fnmatch_loop.c:672 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1436)
(note 1432 1431 1433 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 1433 1432 1434 291 (set (reg/v:SI 114 [ lcollseq ])
        (reg/v:SI 109 [ cold ])) fnmatch_loop.c:673 -1
     (nil))
(jump_insn 1434 1433 1435 291 (set (pc)
        (label_ref 1442)) -1
     (nil)
 -> 1442)
(barrier 1435 1434 1436)
(code_label 1436 1435 1437 292 344 "" [1 uses])
(note 1437 1436 1438 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 1438 1437 1439 292 (set (reg:SI 4 si)
        (reg/v:SI 109 [ cold ])) fnmatch_loop.c:675 -1
     (nil))
(insn 1439 1438 1440 292 (set (reg:DI 5 di)
        (reg/v/f:DI 146 [ collseq ])) fnmatch_loop.c:675 -1
     (nil))
(call_insn 1440 1439 1441 292 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>) [0 __collseq_table_lookup S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:675 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 1441 1440 1442 292 (set (reg/v:SI 114 [ lcollseq ])
        (reg:SI 0 ax)) fnmatch_loop.c:675 -1
     (nil))
(code_label 1442 1441 1443 293 345 "" [1 uses])
(note 1443 1442 1444 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 1444 1443 1445 293 (set (reg/v:SI 115 [ hcollseq ])
        (reg:SI 334 [ D.11716 ])) fnmatch_loop.c:661 -1
     (nil))
(insn 1445 1444 1446 293 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 115 [ hcollseq ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:682 -1
     (nil))
(jump_insn 1446 1445 1447 293 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1637)
            (pc))) fnmatch_loop.c:682 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1637)
(note 1447 1446 1448 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1447 1449 294 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_13 + 4B]+0 S4 A32])
            (const_int 46 [0x2e]))) fnmatch_loop.c:682 -1
     (nil))
(jump_insn 1449 1448 1450 294 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1652)
            (pc))) fnmatch_loop.c:682 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1652)
(note 1450 1449 61 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 61 1450 62 295 (set (reg/v/f:DI 99 [ pattern ])
        (reg/v/f:DI 101 [ pattern ])) -1
     (nil))
(insn 62 61 1476 295 (set (reg/v:DI 117 [ c1 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 1476 62 1451 296 352 "" [1 uses])
(note 1451 1476 1452 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 1452 1451 1453 296 (parallel [
            (set (reg/v/f:DI 99 [ pattern ])
                (plus:DI (reg/v/f:DI 99 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:692 -1
     (nil))
(insn 1453 1452 1454 296 (set (reg/v:SI 342 [ c ])
        (mem:SI (reg/v/f:DI 99 [ pattern ]) [2 MEM[base: pattern_472, offset: 0B]+0 S4 A32])) fnmatch_loop.c:692 -1
     (nil))
(insn 1454 1453 1455 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 342 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:693 -1
     (nil))
(jump_insn 1455 1454 1456 296 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1469)
            (pc))) fnmatch_loop.c:693 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1469)
(note 1456 1455 1457 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 1457 1456 1458 297 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 99 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[base: pattern_472, offset: 4B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:693 -1
     (nil))
(jump_insn 1458 1457 1459 297 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1473)
            (pc))) fnmatch_loop.c:693 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1473)
(note 1459 1458 1460 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 1460 1459 1461 298 (set (reg:DI 806)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:685 -1
     (nil))
(insn 1461 1460 1462 298 (set (reg/f:DI 805)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 806)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:685 -1
     (nil))
(insn 1462 1461 1463 298 (set (reg/f:DI 339 [ D.11723 ])
        (mem/f:DI (plus:DI (reg/f:DI 805)
                (const_int 24 [0x18])) [1 _469->__locales+24 S8 A64])) fnmatch_loop.c:685 -1
     (nil))
(insn 1463 1462 1464 298 (parallel [
            (set (reg/v/f:DI 344 [ pattern ])
                (plus:DI (reg/v/f:DI 99 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:695 -1
     (nil))
(insn 1464 1463 1465 298 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 339 [ D.11723 ])
                    (const_int 64 [0x40])) [0 _470->values[0].word+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:703 -1
     (nil))
(jump_insn 1465 1464 1468 298 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1479)
            (pc))) fnmatch_loop.c:703 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1479)
(note 1468 1465 1466 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1466 1468 1467 299 (set (pc)
        (label_ref 1487)) -1
     (nil)
 -> 1487)
(barrier 1467 1466 1469)
(code_label 1469 1467 1470 300 348 "" [1 uses])
(note 1470 1469 1471 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 1471 1470 1472 300 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 342 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:698 -1
     (nil))
(jump_insn 1472 1471 1473 300 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:698 -1
     (int_list:REG_BR_PROB 617 (nil))
 -> 1906)
(code_label 1473 1472 1474 301 349 "" [1 uses])
(note 1474 1473 1475 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 1475 1474 1477 301 (parallel [
            (set (reg/v:DI 117 [ c1 ])
                (plus:DI (reg/v:DI 117 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:700 -1
     (nil))
(jump_insn 1477 1475 1478 301 (set (pc)
        (label_ref 1476)) fnmatch_loop.c:701 -1
     (nil)
 -> 1476)
(barrier 1478 1477 1479)
(code_label 1479 1478 1480 302 350 "" [1 uses])
(note 1480 1479 1481 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 1481 1480 1482 302 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 117 [ c1 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:709 -1
     (nil))
(jump_insn 1482 1481 1483 302 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:709 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1483 1482 1484 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 1484 1483 95 303 (set (reg/v:SI 115 [ hcollseq ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_13 + 8B]+0 S4 A32])) fnmatch_loop.c:712 -1
     (nil))
(insn 95 1484 1485 303 (set (reg/v/f:DI 101 [ pattern ])
        (reg/v/f:DI 344 [ pattern ])) fnmatch_loop.c:695 -1
     (nil))
(jump_insn 1485 95 1486 303 (set (pc)
        (label_ref 1925)) -1
     (nil)
 -> 1925)
(barrier 1486 1485 1487)
(code_label 1487 1486 1488 304 351 "" [1 uses])
(note 1488 1487 1489 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 1489 1488 1490 304 (set (reg:DI 807)
        (reg/f:DI 7 sp)) fnmatch_loop.c:715 -1
     (nil))
(insn 1490 1489 1491 304 (set (reg/f:DI 345 [ D.11720 ])
        (reg:DI 807)) fnmatch_loop.c:715 -1
     (nil))
(insn 1491 1490 1492 304 (set (reg/v:DI 346 [ n ])
        (reg/v:DI 117 [ c1 ])) fnmatch_loop.c:719 -1
     (nil))
(insn 1492 1491 1493 304 (parallel [
            (set (reg:DI 808)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1493 1492 1494 304 (parallel [
            (set (reg:DI 809)
                (plus:DI (reg/v:DI 117 [ c1 ])
                    (reg:DI 808)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1494 1493 1495 304 (parallel [
            (set (reg:DI 811)
                (udiv:DI (reg:DI 809)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 812)
                (umod:DI (reg:DI 809)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1495 1494 1496 304 (parallel [
            (set (reg:DI 813)
                (mult:DI (reg:DI 811)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1496 1495 1497 304 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 813)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1497 1496 1498 304 (set (reg:DI 814)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:719 -1
     (nil))
(insn 1498 1497 1499 304 (parallel [
            (set (reg/f:DI 815)
                (plus:DI (reg:DI 814)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:719 -1
     (nil))
(insn 1499 1498 1500 304 (set (reg/f:DI 347 [ str.49 ])
        (reg/f:DI 815)) fnmatch_loop.c:719 -1
     (nil))
(insn 1500 1499 1501 304 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 117 [ c1 ])
            (const_int 0 [0]))) fnmatch_loop.c:735 -1
     (nil))
(jump_insn 1501 1500 1523 304 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1511)
            (pc))) fnmatch_loop.c:735 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1511)
(code_label 1523 1501 1502 305 358 "" [1 uses])
(note 1502 1523 1503 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1502 1504 305 (set (reg/v:SI 355 [ table_size ])
        (mem:SI (plus:DI (reg/f:DI 339 [ D.11723 ])
                (const_int 168 [0xa8])) [0 _470->values[13].word+0 S4 A64])) fnmatch_loop.c:739 -1
     (nil))
(insn 1504 1503 1505 305 (set (reg/v/f:DI 356 [ symb_table ])
        (mem/f:DI (plus:DI (reg/f:DI 339 [ D.11723 ])
                (const_int 176 [0xb0])) [0 _470->values[14].string+0 S8 A64])) fnmatch_loop.c:742 -1
     (nil))
(insn 1505 1504 1506 305 (set (reg/v:SI 521 [ hash ])
        (subreg:SI (reg/v:DI 117 [ c1 ]) 0)) ../locale/elem-hash.h:24 -1
     (nil))
(insn 1506 1505 1507 305 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:DI 346 [ n ])
            (const_int 0 [0]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1507 1506 1510 305 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1527)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1527)
(note 1510 1507 1508 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1508 1510 1509 306 (set (pc)
        (label_ref 1539)) ../locale/elem-hash.h:26 -1
     (nil)
 -> 1539)
(barrier 1509 1508 1511)
(code_label 1511 1509 1512 307 354 "" [1 uses])
(note 1512 1511 63 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 63 1512 1520 307 (set (reg/v:SI 454 [ strcnt ])
        (const_int 0 [0])) fnmatch_loop.c:735 -1
     (nil))
(code_label 1520 63 1513 308 357 "" [1 uses])
(note 1513 1520 1514 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 1514 1513 1515 308 (parallel [
            (set (reg/v:SI 348 [ strcnt ])
                (plus:SI (reg/v:SI 454 [ strcnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:736 -1
     (nil))
(insn 1515 1514 1516 308 (set (reg:DI 349 [ D.11714 ])
        (zero_extend:DI (reg/v:SI 348 [ strcnt ]))) fnmatch_loop.c:736 -1
     (nil))
(insn 1516 1515 1517 308 (set (reg:DI 816)
        (zero_extend:DI (reg/v:SI 454 [ strcnt ]))) fnmatch_loop.c:736 -1
     (nil))
(insn 1517 1516 1518 308 (set (reg:SI 817)
        (mem:SI (plus:DI (mult:DI (reg:DI 349 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 101 [ pattern ])) [2 *_487+0 S4 A32])) fnmatch_loop.c:736 -1
     (nil))
(insn 1518 1517 1519 308 (set (mem/j:QI (plus:DI (reg/f:DI 347 [ str.49 ])
                (reg:DI 816)) [0 *str.49_482 S1 A8])
        (subreg:QI (reg:SI 817) 0)) fnmatch_loop.c:736 -1
     (nil))
(insn 1519 1518 1521 308 (set (reg/v:SI 454 [ strcnt ])
        (reg/v:SI 348 [ strcnt ])) fnmatch_loop.c:735 -1
     (nil))
(insn 1521 1519 1522 308 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 117 [ c1 ])
            (reg:DI 349 [ D.11714 ]))) fnmatch_loop.c:735 -1
     (nil))
(jump_insn 1522 1521 1526 308 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1520)
            (pc))) fnmatch_loop.c:735 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1520)
(note 1526 1522 1524 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1524 1526 1525 309 (set (pc)
        (label_ref 1523)) -1
     (nil)
 -> 1523)
(barrier 1525 1524 1527)
(code_label 1527 1525 1528 310 355 "" [1 uses])
(note 1528 1527 1529 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 1529 1528 1530 310 (set (reg:DI 118 [ ivtmp.302 ])
        (reg/f:DI 347 [ str.49 ])) -1
     (nil))
(insn 1530 1529 1536 310 (parallel [
            (set (reg:DI 373 [ D.11731 ])
                (plus:DI (reg/f:DI 347 [ str.49 ])
                    (reg/v:DI 117 [ c1 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1536 1530 1531 311 359 "" [1 uses])
(note 1531 1536 1532 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 1532 1531 1533 311 (parallel [
            (set (reg/v:SI 518 [ result ])
                (ashift:SI (reg/v:SI 521 [ hash ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:28 -1
     (nil))
(insn 1533 1532 1534 311 (set (reg:SI 818 [ D.11716 ])
        (sign_extend:SI (mem:QI (reg:DI 118 [ ivtmp.302 ]) [0 MEM[base: _510, offset: 0B]+0 S1 A8]))) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1534 1533 1535 311 (parallel [
            (set (reg/v:SI 521 [ hash ])
                (plus:SI (reg:SI 818 [ D.11716 ])
                    (reg/v:SI 518 [ result ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1535 1534 1537 311 (parallel [
            (set (reg:DI 118 [ ivtmp.302 ])
                (plus:DI (reg:DI 118 [ ivtmp.302 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1537 1535 1538 311 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 118 [ ivtmp.302 ])
            (reg:DI 373 [ D.11731 ]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1538 1537 1539 311 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1536)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1536)
(code_label 1539 1538 1540 312 356 "" [1 uses])
(note 1540 1539 1541 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 1541 1540 1542 312 (parallel [
            (set (reg:SI 820)
                (div:SI (reg/v:SI 521 [ hash ])
                    (reg/v:SI 355 [ table_size ])))
            (set (reg:SI 819)
                (mod:SI (reg/v:SI 521 [ hash ])
                    (reg/v:SI 355 [ table_size ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:754 -1
     (nil))
(insn 1542 1541 1543 312 (set (reg/v:SI 358 [ elem ])
        (reg:SI 819)) fnmatch_loop.c:754 -1
     (nil))
(insn 1543 1542 1544 312 (parallel [
            (set (reg:SI 821 [ D.11716 ])
                (ashift:SI (reg/v:SI 358 [ elem ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:755 -1
     (nil))
(insn 1544 1543 1545 312 (set (reg:DI 360 [ D.11714 ])
        (sign_extend:DI (reg:SI 821 [ D.11716 ]))) fnmatch_loop.c:755 -1
     (nil))
(insn 1545 1544 1546 312 (set (reg:SI 372 [ D.11716 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 360 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 356 [ symb_table ])) [2 *_499+0 S4 A32])) fnmatch_loop.c:755 -1
     (nil))
(insn 1546 1545 1547 312 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 372 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:755 -1
     (nil))
(jump_insn 1547 1546 1548 312 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1630)
            (pc))) fnmatch_loop.c:755 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1630)
(note 1548 1547 1549 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 1549 1548 1550 313 (set (reg/v/f:DI 357 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 339 [ D.11723 ])
                (const_int 184 [0xb8])) [0 _470->values[15].string+0 S8 A64])) fnmatch_loop.c:745 -1
     (nil))
(insn 1550 1549 1551 313 (parallel [
            (set (reg:SI 822 [ D.11716 ])
                (plus:SI (reg/v:SI 355 [ table_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1551 1550 1552 313 (parallel [
            (set (reg:SI 825)
                (div:SI (reg/v:SI 521 [ hash ])
                    (reg:SI 822 [ D.11716 ])))
            (set (reg:SI 824 [ D.11716 ])
                (mod:SI (reg/v:SI 521 [ hash ])
                    (reg:SI 822 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1552 1551 1553 313 (parallel [
            (set (reg/v:SI 365 [ second ])
                (plus:SI (reg:SI 824 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1553 1552 1554 313 (parallel [
            (set (reg:SI 826 [ D.11716 ])
                (ashift:SI (reg/v:SI 365 [ second ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1554 1553 1555 313 (set (reg:DI 827 [ D.11714 ])
        (sign_extend:DI (reg:SI 826 [ D.11716 ]))) -1
     (nil))
(insn 1555 1554 1556 313 (parallel [
            (set (reg:DI 615 [ D.11719 ])
                (ashift:DI (reg:DI 827 [ D.11714 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1556 1555 1557 313 (parallel [
            (set (reg:DI 828 [ D.11719 ])
                (plus:DI (reg:DI 360 [ D.11714 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1557 1556 1558 313 (parallel [
            (set (reg:DI 829 [ D.11719 ])
                (ashift:DI (reg:DI 828 [ D.11719 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1558 1557 1559 313 (parallel [
            (set (reg:DI 603 [ ivtmp.294 ])
                (plus:DI (reg/v/f:DI 356 [ symb_table ])
                    (reg:DI 829 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1559 1558 1560 313 (set (reg:SI 587 [ D.11730 ])
        (reg/v:SI 358 [ elem ])) -1
     (nil))
(insn 1560 1559 1561 313 (set (reg:SI 560 [ D.11730 ])
        (reg/v:SI 365 [ second ])) -1
     (nil))
(insn 1561 1560 1562 313 (parallel [
            (set (reg:SI 830 [ D.11730 ])
                (plus:SI (reg:SI 560 [ D.11730 ])
                    (reg:SI 587 [ D.11730 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1562 1561 1563 313 (parallel [
            (set (reg:SI 831 [ D.11730 ])
                (ashift:SI (reg:SI 830 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1563 1562 1564 313 (set (reg:DI 832 [ D.11719 ])
        (sign_extend:DI (reg:SI 831 [ D.11730 ]))) -1
     (nil))
(insn 1564 1563 1565 313 (parallel [
            (set (reg:SI 833 [ D.11730 ])
                (ashift:SI (reg:SI 587 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1565 1564 1566 313 (set (reg:DI 834 [ D.11719 ])
        (sign_extend:DI (reg:SI 833 [ D.11730 ]))) -1
     (nil))
(insn 1566 1565 1567 313 (parallel [
            (set (reg:DI 835 [ D.11719 ])
                (minus:DI (reg:DI 832 [ D.11719 ])
                    (reg:DI 834 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1567 1566 1568 313 (parallel [
            (set (reg:SI 836 [ D.11730 ])
                (ashift:SI (reg:SI 560 [ D.11730 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1568 1567 1569 313 (set (reg:DI 837 [ D.11719 ])
        (sign_extend:DI (reg:SI 836 [ D.11730 ]))) -1
     (nil))
(insn 1569 1568 1627 313 (parallel [
            (set (reg:DI 607 [ D.11719 ])
                (minus:DI (reg:DI 835 [ D.11719 ])
                    (reg:DI 837 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1627 1569 1570 314 363 "" [1 uses])
(note 1570 1627 1571 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 1571 1570 1572 314 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 372 [ D.11716 ])
            (reg/v:SI 521 [ hash ]))) fnmatch_loop.c:762 -1
     (nil))
(jump_insn 1572 1571 1573 314 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1623)
            (pc))) fnmatch_loop.c:762 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1623)
(note 1573 1572 1574 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 1574 1573 1575 315 (set (reg:SI 376 [ D.11716 ])
        (mem:SI (reg:DI 603 [ ivtmp.294 ]) [2 MEM[base: _1041, offset: 0B]+0 S4 A32])) fnmatch_loop.c:764 -1
     (nil))
(insn 1575 1574 1576 315 (set (reg:DI 377 [ D.11719 ])
        (sign_extend:DI (reg:SI 376 [ D.11716 ]))) fnmatch_loop.c:764 -1
     (nil))
(insn 1576 1575 1577 315 (set (reg:QI 379 [ D.11733 ])
        (mem:QI (plus:DI (reg/v/f:DI 357 [ extra ])
                (reg:DI 377 [ D.11719 ])) [0 *_520+0 S1 A8])) fnmatch_loop.c:764 -1
     (nil))
(insn 1577 1576 1578 315 (set (reg:DI 838 [ D.11714 ])
        (zero_extend:DI (reg:QI 379 [ D.11733 ]))) fnmatch_loop.c:763 -1
     (nil))
(insn 1578 1577 1579 315 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 117 [ c1 ])
            (reg:DI 838 [ D.11714 ]))) fnmatch_loop.c:763 -1
     (nil))
(jump_insn 1579 1578 1580 315 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1623)
            (pc))) fnmatch_loop.c:763 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1623)
(note 1580 1579 1581 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 1581 1580 1582 316 (parallel [
            (set (reg:DI 839 [ D.11719 ])
                (plus:DI (reg:DI 377 [ D.11719 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:765 -1
     (nil))
(insn 1582 1581 1583 316 (parallel [
            (set (reg:DI 840 [ D.11732 ])
                (plus:DI (reg/v/f:DI 357 [ extra ])
                    (reg:DI 839 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:765 -1
     (nil))
(insn 1583 1582 1584 316 (set (reg:DI 1 dx)
        (reg/v:DI 117 [ c1 ])) fnmatch_loop.c:765 -1
     (nil))
(insn 1584 1583 1585 316 (set (reg:DI 4 si)
        (reg:DI 840 [ D.11732 ])) fnmatch_loop.c:765 -1
     (nil))
(insn 1585 1584 1586 316 (set (reg:DI 5 di)
        (reg/f:DI 347 [ str.49 ])) fnmatch_loop.c:765 -1
     (nil))
(call_insn/i 1586 1585 1587 316 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:765 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1587 1586 1588 316 (set (reg:SI 841)
        (reg:SI 0 ax)) fnmatch_loop.c:765 -1
     (nil))
(insn 1588 1587 1589 316 (set (reg:SI 842)
        (reg:SI 841)) fnmatch_loop.c:765 -1
     (nil))
(insn 1589 1588 1590 316 (set (reg:SI 383 [ D.11716 ])
        (reg:SI 842)) fnmatch_loop.c:765 -1
     (nil))
(insn 1590 1589 1591 316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 383 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:765 -1
     (nil))
(jump_insn 1591 1590 1592 316 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1623)
            (pc))) fnmatch_loop.c:765 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1623)
(note 1592 1591 1593 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 1593 1592 1594 317 (set (reg:SI 843 [ D.11716 ])
        (zero_extend:SI (reg:QI 379 [ D.11733 ]))) fnmatch_loop.c:771 -1
     (nil))
(insn 1594 1593 1595 317 (parallel [
            (set (reg:SI 844 [ D.11716 ])
                (plus:SI (reg:SI 843 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:771 -1
     (nil))
(insn 1595 1594 1596 317 (parallel [
            (set (reg/v:SI 386 [ idx ])
                (plus:SI (reg:SI 844 [ D.11716 ])
                    (reg:SI 376 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:771 -1
     (nil))
(insn 1596 1595 1597 317 (set (reg:DI 845 [ D.11719 ])
        (sign_extend:DI (reg/v:SI 386 [ idx ]))) fnmatch_loop.c:788 -1
     (nil))
(insn 1597 1596 1598 317 (set (reg:SI 846 [ D.11716 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 357 [ extra ])
                    (reg:DI 845 [ D.11719 ])) [0 *_535+0 S1 A8]))) fnmatch_loop.c:788 -1
     (nil))
(insn 1598 1597 1599 317 (parallel [
            (set (reg:SI 391 [ D.11716 ])
                (plus:SI (reg:SI 846 [ D.11716 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:788 -1
     (nil))
(insn 1599 1598 1600 317 (parallel [
            (set (reg:SI 847 [ idx ])
                (plus:SI (reg/v:SI 386 [ idx ])
                    (reg:SI 391 [ D.11716 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:790 -1
     (nil))
(insn 1600 1599 1601 317 (parallel [
            (set (reg:SI 393 [ D.11716 ])
                (plus:SI (reg:SI 847 [ idx ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:790 -1
     (nil))
(insn 1601 1600 1602 317 (parallel [
            (set (reg:SI 848 [ idx ])
                (and:SI (reg:SI 393 [ D.11716 ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:792 -1
     (nil))
(insn 1602 1601 1603 317 (set (reg:DI 395 [ D.11719 ])
        (sign_extend:DI (reg:SI 848 [ idx ]))) fnmatch_loop.c:792 -1
     (nil))
(insn 1603 1602 1604 317 (parallel [
            (set (reg:DI 849 [ D.11719 ])
                (plus:DI (reg:DI 395 [ D.11719 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:792 -1
     (nil))
(insn 1604 1603 1605 317 (parallel [
            (set (reg/v/f:DI 397 [ wextra ])
                (plus:DI (reg/v/f:DI 357 [ extra ])
                    (reg:DI 849 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:792 -1
     (nil))
(insn 1605 1604 1606 317 (set (reg:SI 851)
        (mem:SI (plus:DI (mult:DI (reg:DI 395 [ D.11719 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 397 [ wextra ])) [2 *_546+0 S4 A32])) fnmatch_loop.c:797 -1
     (nil))
(insn 1606 1605 1607 317 (parallel [
            (set (reg:SI 850 [ D.11716 ])
                (plus:SI (reg:SI 851)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:797 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (mult:DI (reg:DI 395 [ D.11719 ])
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 397 [ wextra ])) [2 *_546+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1607 1606 1608 317 (set (reg:DI 852 [ D.11714 ])
        (sign_extend:DI (reg:SI 850 [ D.11716 ]))) fnmatch_loop.c:797 -1
     (nil))
(insn 1608 1607 1609 317 (set (reg/v:SI 120 [ hcollseq ])
        (mem:SI (plus:DI (mult:DI (reg:DI 852 [ D.11714 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 397 [ wextra ])) [2 *_551+0 S4 A32])) fnmatch_loop.c:797 -1
     (nil))
(insn 1609 1608 1610 317 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 1610 1609 1611 317 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 1611 1610 1612 317 (set (reg/f:DI 7 sp)
        (reg/f:DI 345 [ D.11720 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1612 1611 1613 317 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ lcollseq ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1613 1612 1614 317 (set (reg:QI 854 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1614 1613 1615 317 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 854 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1615 1614 2081 317 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2044)
            (pc))) fnmatch_loop.c:827 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2044)
(note 2081 1615 1616 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 1616 2081 1617 318 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 114 [ lcollseq ])
            (reg/v:SI 335 [ fcollseq ]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1617 1616 1618 318 (set (reg:QI 856 [ D.11715 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1618 1617 1619 318 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 856 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1619 1618 1622 318 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2044)
            (pc))) fnmatch_loop.c:827 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2044)
(note 1622 1619 65 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 65 1622 1620 319 (set (reg/v/f:DI 101 [ pattern ])
        (reg/v/f:DI 344 [ pattern ])) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1620 65 1621 319 (set (pc)
        (label_ref 1690)) fnmatch_loop.c:827 -1
     (nil)
 -> 1690)
(barrier 1621 1620 1623)
(code_label 1623 1621 1624 320 361 "" [3 uses])
(note 1624 1623 1625 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 1625 1624 1626 320 (parallel [
            (set (reg:DI 603 [ ivtmp.294 ])
                (plus:DI (reg:DI 603 [ ivtmp.294 ])
                    (reg:DI 615 [ D.11719 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1626 1625 1628 320 (set (reg:SI 372 [ D.11716 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 607 [ D.11719 ])
                        (const_int 4 [0x4]))
                    (reg:DI 603 [ ivtmp.294 ]))
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: _94, index: _1042, step: 4, offset: -4B]+0 S4 A32])) fnmatch_loop.c:778 -1
     (nil))
(insn 1628 1626 1629 320 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 372 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:778 -1
     (nil))
(jump_insn 1629 1628 1630 320 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1627)
            (pc))) fnmatch_loop.c:778 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1627)
(code_label 1630 1629 1631 321 360 "" [1 uses])
(note 1631 1630 1632 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1631 1633 321 (clobber (mem:BLK (scratch) [0  A8])) fnmatch_loop.c:811 -1
     (nil))
(insn 1633 1632 1634 321 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) fnmatch_loop.c:811 -1
     (nil))
(insn 1634 1633 89 321 (set (reg/f:DI 7 sp)
        (reg/f:DI 345 [ D.11720 ])) fnmatch_loop.c:811 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 89 1634 1635 321 (set (reg:SI 122 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:811 -1
     (nil))
(jump_insn 1635 89 1636 321 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:811 -1
     (nil)
 -> 1908)
(barrier 1636 1635 1637)
(code_label 1637 1636 1638 322 346 "" [1 uses])
(note 1638 1637 1639 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 1639 1638 1640 322 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 115 [ hcollseq ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:817 -1
     (nil))
(insn 1640 1639 1641 322 (set (reg:QI 858 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(insn 1641 1640 1642 322 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 858 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(jump_insn 1642 1641 2082 322 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1648)
            (pc))) fnmatch_loop.c:817 -1
     (int_list:REG_BR_PROB 2073 (nil))
 -> 1648)
(note 2082 1642 1643 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 1643 2082 1644 323 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 577 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(jump_insn 1644 1643 1645 323 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1648)
            (pc))) fnmatch_loop.c:817 -1
     (int_list:REG_BR_PROB 2615 (nil))
 -> 1648)
(note 1645 1644 1646 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 1646 1645 1647 324 (parallel [
            (set (reg/v/f:DI 101 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:818 -1
     (nil))
(insn 1647 1646 1648 324 (set (reg/v:SI 115 [ hcollseq ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_13 + 4B]+0 S4 A32])) fnmatch_loop.c:818 -1
     (nil))
(code_label 1648 1647 1649 325 364 "" [2 uses])
(note 1649 1648 1650 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 1650 1649 1651 325 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 115 [ hcollseq ])
            (const_int 0 [0]))) fnmatch_loop.c:819 -1
     (nil))
(jump_insn 1651 1650 1652 325 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:819 -1
     (int_list:REG_BR_PROB 270 (nil))
 -> 1906)
(code_label 1652 1651 1653 326 347 "" [1 uses])
(note 1653 1652 1654 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 1654 1653 1655 326 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:821 -1
     (nil))
(jump_insn 1655 1654 1656 326 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1925)
            (pc))) fnmatch_loop.c:821 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1925)
(note 1656 1655 1657 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 1657 1656 1658 327 (set (reg:SI 5 di)
        (reg/v:SI 115 [ hcollseq ])) fnmatch_loop.c:821 -1
     (nil))
(call_insn/i 1658 1657 1659 327 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:821 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 1659 1658 1660 327 (set (reg/v:SI 115 [ hcollseq ])
        (reg:SI 0 ax)) fnmatch_loop.c:821 -1
     (nil))
(jump_insn 1660 1659 1661 327 (set (pc)
        (label_ref 1925)) -1
     (nil)
 -> 1925)
(barrier 1661 1660 1927)
(code_label 1927 1661 1662 328 382 "" [2 uses])
(note 1662 1927 1663 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 1663 1662 1664 328 (set (reg:SI 4 si)
        (reg/v:SI 115 [ hcollseq ])) fnmatch_loop.c:841 -1
     (nil))
(insn 1664 1663 1665 328 (set (reg:DI 5 di)
        (reg/v/f:DI 146 [ collseq ])) fnmatch_loop.c:841 -1
     (nil))
(call_insn 1665 1664 1666 328 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>) [0 __collseq_table_lookup S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:841 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__collseq_table_lookup") [flags 0x41]  <function_decl 0x2aeef6e8d510 __collseq_table_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 1666 1665 1667 328 (set (reg/v:SI 120 [ hcollseq ])
        (reg:SI 0 ax)) fnmatch_loop.c:841 -1
     (nil))
(insn 1667 1666 1668 328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 120 [ hcollseq ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:843 -1
     (nil))
(jump_insn 1668 1667 1669 328 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1676)
            (pc))) fnmatch_loop.c:843 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1676)
(note 1669 1668 1670 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 1670 1669 1671 329 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ lcollseq ])
            (reg/v:SI 335 [ fcollseq ]))) fnmatch_loop.c:848 -1
     (nil))
(jump_insn 1671 1670 1672 329 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1690)
            (pc))) fnmatch_loop.c:848 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1690)
(note 1672 1671 1673 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 1673 1672 37 330 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (reg/v/f:DI 101 [ pattern ]) [2 *pattern_822+0 S4 A32])) -1
     (nil))
(insn 37 1673 1674 330 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 101 [ pattern ])) fnmatch_loop.c:848 -1
     (nil))
(jump_insn 1674 37 1675 330 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 1675 1674 2044)
(code_label 2044 1675 2043 331 398 "" [2 uses])
(note 2043 2044 64 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 64 2043 1676 331 (set (reg/v/f:DI 101 [ pattern ])
        (reg/v/f:DI 344 [ pattern ])) fnmatch_loop.c:827 -1
     (nil))
(code_label 1676 64 1677 332 362 "" [1 uses])
(note 1677 1676 1678 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 1678 1677 1679 332 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 114 [ lcollseq ])
            (reg/v:SI 120 [ hcollseq ]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1679 1678 1680 332 (set (reg:QI 860 [ D.11715 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1680 1679 1681 332 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 860 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1681 1680 2083 332 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1690)
            (pc))) fnmatch_loop.c:858 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 1690)
(note 2083 1681 1682 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 1682 2083 1683 333 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 120 [ hcollseq ])
            (reg/v:SI 335 [ fcollseq ]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1683 1682 1684 333 (set (reg:QI 862 [ D.11715 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1684 1683 1685 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 862 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1685 1684 1686 333 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1690)
            (pc))) fnmatch_loop.c:858 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 1690)
(note 1686 1685 1687 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 1687 1686 38 334 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (reg/v/f:DI 101 [ pattern ]) [2 *pattern_555+0 S4 A32])) -1
     (nil))
(insn 38 1687 1688 334 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 101 [ pattern ])) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1688 38 1689 334 (set (pc)
        (label_ref 1087)) -1
     (nil)
 -> 1087)
(barrier 1689 1688 1690)
(code_label 1690 1689 1691 335 343 ("range_not_matched") [6 uses])
(note 1691 1690 1692 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 1692 1691 1693 335 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 101 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:881 -1
     (nil))
(insn 1693 1692 1694 335 (set (reg/v:SI 106 [ c ])
        (mem:SI (reg/v/f:DI 101 [ pattern ]) [2 *pattern_18+0 S4 A32])) fnmatch_loop.c:881 -1
     (nil))
(code_label 1694 1693 1695 336 275 "" [3 uses])
(note 1695 1694 1696 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 1696 1695 1697 336 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ c ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:885 -1
     (nil))
(jump_insn 1697 1696 1698 336 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1418)
            (pc))) fnmatch_loop.c:885 -1
     (int_list:REG_BR_PROB 9769 (nil))
 -> 1418)
(note 1698 1697 1699 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 1699 1698 1700 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 613 [ not ])
            (const_int 0 [0]))) fnmatch_loop.c:889 -1
     (nil))
(jump_insn 1700 1699 1703 337 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:889 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1703 1700 74 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 74 1703 75 338 (set (reg/v/f:DI 102 [ pattern ])
        (reg/v/f:DI 568 [ pattern ])) -1
     (nil))
(insn 75 74 1701 338 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 1701 75 1702 338 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 1702 1701 1815)
(code_label 1815 1702 1704 339 376 "" [1 uses])
(note 1704 1815 1705 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 1705 1704 1706 339 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 412 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:897 -1
     (nil))
(jump_insn 1706 1705 1707 339 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:897 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1707 1706 1708 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 1708 1707 1709 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 412 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:901 -1
     (nil))
(insn 1709 1708 1710 340 (set (reg:QI 864 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(insn 1710 1709 1711 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 864 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(jump_insn 1711 1710 2084 340 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1722)
            (pc))) fnmatch_loop.c:901 -1
     (int_list:REG_BR_PROB 3600 (nil))
 -> 1722)
(note 2084 1711 1712 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 1712 2084 1713 341 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 577 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(jump_insn 1713 1712 1714 341 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1722)
            (pc))) fnmatch_loop.c:901 -1
     (int_list:REG_BR_PROB 5625 (nil))
 -> 1722)
(note 1714 1713 1715 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 1715 1714 1716 342 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_23 + 4B]+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:903 -1
     (nil))
(jump_insn 1716 1715 1717 342 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:903 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1717 1716 1718 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 1718 1717 1719 343 (parallel [
            (set (reg/v/f:DI 414 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:906 -1
     (nil))
(insn 1719 1718 68 343 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_23 + 8B]+0 S4 A32])) -1
     (nil))
(insn 68 1719 1720 343 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 414 [ pattern ])) fnmatch_loop.c:906 -1
     (nil))
(jump_insn 1720 68 1721 343 (set (pc)
        (label_ref 1809)) fnmatch_loop.c:906 -1
     (nil)
 -> 1809)
(barrier 1721 1720 1722)
(code_label 1722 1721 1723 344 365 "" [2 uses])
(note 1723 1722 1724 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 1724 1723 1725 344 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 412 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:908 -1
     (nil))
(jump_insn 1725 1724 1726 344 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1730)
            (pc))) fnmatch_loop.c:908 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1730)
(note 1726 1725 1727 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn 1727 1726 70 345 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_23 + 4B]+0 S4 A32])) -1
     (nil))
(insn 70 1727 1728 345 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:895 -1
     (nil))
(jump_insn 1728 70 1729 345 (set (pc)
        (label_ref 1809)) -1
     (nil)
 -> 1809)
(barrier 1729 1728 1730)
(code_label 1730 1729 1731 346 367 "" [1 uses])
(note 1731 1730 1732 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn 1732 1731 1733 346 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_23 + 4B]+0 S4 A32])) fnmatch_loop.c:908 -1
     (nil))
(insn 1733 1732 1734 346 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 584 [ D.11716 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:908 -1
     (nil))
(jump_insn 1734 1733 1737 346 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1950)
            (pc))) fnmatch_loop.c:908 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1950)
(note 1737 1734 1735 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1735 1737 1736 347 (set (pc)
        (label_ref 1767)) -1
     (nil)
 -> 1767)
(barrier 1736 1735 1756)
(code_label 1756 1736 1738 348 372 "" [1 uses])
(note 1738 1756 1739 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn 1739 1738 1740 348 (parallel [
            (set (reg/v/f:DI 416 [ pattern ])
                (plus:DI (reg/v/f:DI 416 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:915 -1
     (nil))
(insn 1740 1739 1741 348 (set (reg:SI 417 [ D.11716 ])
        (mem:SI (reg/v/f:DI 416 [ pattern ]) [2 MEM[base: pattern_583, offset: 0B]+0 S4 A32])) fnmatch_loop.c:915 -1
     (nil))
(insn 1741 1740 1742 348 (set (reg/v:SI 418 [ c ])
        (reg:SI 417 [ D.11716 ])) fnmatch_loop.c:915 -1
     (nil))
(insn 1742 1741 1743 348 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 142 [ D.11721 ])
            (reg/v/f:DI 416 [ pattern ]))) fnmatch_loop.c:916 -1
     (nil))
(jump_insn 1743 1742 1956 348 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:916 -1
     (int_list:REG_BR_PROB 105 (nil))
 -> 1906)
(code_label 1956 1743 1744 349 383 "" [1 uses])
(note 1744 1956 1745 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 1745 1744 1746 349 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 417 [ D.11716 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:919 -1
     (nil))
(jump_insn 1746 1745 1747 349 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1754)
            (pc))) fnmatch_loop.c:919 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1754)
(note 1747 1746 1748 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 1748 1747 1749 350 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 416 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[base: pattern_1029, offset: 4B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:919 -1
     (nil))
(jump_insn 1749 1748 1750 350 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1754)
            (pc))) fnmatch_loop.c:919 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1754)
(note 1750 1749 1751 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 1751 1750 1752 351 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 416 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_1029 + 8B]+0 S4 A32])) -1
     (nil))
(jump_insn 1752 1751 1753 351 (set (pc)
        (label_ref 1762)) -1
     (nil)
 -> 1762)
(barrier 1753 1752 1754)
(code_label 1754 1753 1755 352 370 "" [2 uses])
(note 1755 1754 1757 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn 1757 1755 1758 352 (parallel [
            (set (reg:SI 865 [ D.11717 ])
                (plus:SI (reg/v:SI 418 [ c ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:922 -1
     (nil))
(insn 1758 1757 1759 352 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 865 [ D.11717 ])
            (const_int 24 [0x18]))) fnmatch_loop.c:922 -1
     (nil))
(jump_insn 1759 1758 1760 352 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1756)
            (pc))) fnmatch_loop.c:922 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1756)
(note 1760 1759 1761 353 [bb 353] NOTE_INSN_BASIC_BLOCK)
(insn 1761 1760 1762 353 (parallel [
            (set (reg/v/f:DI 416 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:924 -1
     (nil))
(code_label 1762 1761 1763 354 371 "" [1 uses])
(note 1763 1762 1764 354 [bb 354] NOTE_INSN_BASIC_BLOCK)
(insn 1764 1763 1765 354 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 416 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:928 -1
     (nil))
(jump_insn 1765 1764 1766 354 (set (pc)
        (label_ref 1809)) fnmatch_loop.c:909 -1
     (nil)
 -> 1809)
(barrier 1766 1765 1767)
(code_label 1767 1766 1768 355 369 "" [1 uses])
(note 1768 1767 1769 355 [bb 355] NOTE_INSN_BASIC_BLOCK)
(insn 1769 1768 1770 355 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 584 [ D.11716 ])
            (const_int 61 [0x3d]))) fnmatch_loop.c:930 -1
     (nil))
(jump_insn 1770 1769 1771 355 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1785)
            (pc))) fnmatch_loop.c:930 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1785)
(note 1771 1770 1772 356 [bb 356] NOTE_INSN_BASIC_BLOCK)
(insn 1772 1771 1773 356 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_23 + 8B]+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:933 -1
     (nil))
(jump_insn 1773 1772 1774 356 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:933 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1774 1773 1775 357 [bb 357] NOTE_INSN_BASIC_BLOCK)
(insn 1775 1774 1776 357 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_23 + 12B]+0 S4 A32])
            (const_int 61 [0x3d]))) fnmatch_loop.c:936 -1
     (nil))
(jump_insn 1776 1775 1777 357 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:936 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1777 1776 1778 358 [bb 358] NOTE_INSN_BASIC_BLOCK)
(insn 1778 1777 1779 358 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 16 [0x10])) [2 MEM[(const wchar_t *)pattern_23 + 16B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:936 -1
     (nil))
(jump_insn 1779 1778 1780 358 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:936 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1780 1779 1781 359 [bb 359] NOTE_INSN_BASIC_BLOCK)
(insn 1781 1780 1782 359 (parallel [
            (set (reg/v/f:DI 425 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:938 -1
     (nil))
(insn 1782 1781 71 359 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 20 [0x14])) [2 MEM[(const wchar_t *)pattern_23 + 20B]+0 S4 A32])) -1
     (nil))
(insn 71 1782 1783 359 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 425 [ pattern ])) fnmatch_loop.c:938 -1
     (nil))
(jump_insn 1783 71 1784 359 (set (pc)
        (label_ref 1809)) fnmatch_loop.c:938 -1
     (nil)
 -> 1809)
(barrier 1784 1783 1785)
(code_label 1785 1784 1786 360 373 "" [1 uses])
(note 1786 1785 1787 360 [bb 360] NOTE_INSN_BASIC_BLOCK)
(insn 1787 1786 1788 360 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 584 [ D.11716 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:940 -1
     (nil))
(jump_insn 1788 1787 1789 360 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2048)
            (pc))) fnmatch_loop.c:940 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 2048)
(note 1789 1788 1790 361 [bb 361] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1790 1789 1791 361 (set (pc)
        (label_ref 1793)) -1
     (nil)
 -> 1793)
(barrier 1791 1790 1800)
(code_label 1800 1791 1792 362 375 "" [2 uses])
(note 1792 1800 67 362 [bb 362] NOTE_INSN_BASIC_BLOCK)
(insn 67 1792 1793 362 (set (reg/v/f:DI 102 [ pattern ])
        (reg/v/f:DI 119 [ pattern ])) fnmatch_loop.c:439 -1
     (nil))
(code_label 1793 67 1794 363 374 "" [1 uses])
(note 1794 1793 1795 363 [bb 363] NOTE_INSN_BASIC_BLOCK)
(insn 1795 1794 1796 363 (parallel [
            (set (reg/v/f:DI 119 [ pattern ])
                (plus:DI (reg/v/f:DI 102 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:944 -1
     (nil))
(insn 1796 1795 1797 363 (set (reg/v:SI 427 [ c ])
        (mem:SI (reg/v/f:DI 119 [ pattern ]) [2 MEM[base: pattern_597, offset: 0B]+0 S4 A32])) fnmatch_loop.c:944 -1
     (nil))
(insn 1797 1796 1798 363 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 427 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:945 -1
     (nil))
(jump_insn 1798 1797 1799 363 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:945 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1906)
(note 1799 1798 1801 364 [bb 364] NOTE_INSN_BASIC_BLOCK)
(insn 1801 1799 1802 364 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 427 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:948 -1
     (nil))
(jump_insn 1802 1801 1803 364 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1800)
            (pc))) fnmatch_loop.c:948 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1800)
(note 1803 1802 1804 365 [bb 365] NOTE_INSN_BASIC_BLOCK)
(insn 1804 1803 1805 365 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 119 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[base: pattern_597, offset: 4B]+0 S4 A32])
            (const_int 93 [0x5d]))) fnmatch_loop.c:948 -1
     (nil))
(jump_insn 1805 1804 1806 365 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1800)
            (pc))) fnmatch_loop.c:948 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1800)
(note 1806 1805 1807 366 [bb 366] NOTE_INSN_BASIC_BLOCK)
(insn 1807 1806 1808 366 (parallel [
            (set (reg/v/f:DI 568 [ pattern ])
                (plus:DI (reg/v/f:DI 102 [ pattern ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:951 -1
     (nil))
(insn 1808 1807 2045 366 (set (reg:SI 584 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 102 [ pattern ])
                (const_int 12 [0xc])) [2 MEM[(const wchar_t *)pattern_22 + 12B]+0 S4 A32])) -1
     (nil))
(jump_insn 2045 1808 2046 366 (set (pc)
        (label_ref 1809)) -1
     (nil)
 -> 1809)
(barrier 2046 2045 2048)
(code_label 2048 2046 2047 367 399 "" [1 uses])
(note 2047 2048 69 367 [bb 367] NOTE_INSN_BASIC_BLOCK)
(insn 69 2047 1809 367 (set (reg/v/f:DI 568 [ pattern ])
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:895 -1
     (nil))
(code_label 1809 69 1810 368 366 "" [5 uses])
(note 1810 1809 1811 368 [bb 368] NOTE_INSN_BASIC_BLOCK)
(code_label 1811 1810 1812 369 276 "" [1 uses])
(note 1812 1811 1813 369 [bb 369] NOTE_INSN_BASIC_BLOCK)
(insn 1813 1812 1814 369 (parallel [
            (set (reg/v/f:DI 102 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:895 -1
     (nil))
(insn 1814 1813 1816 369 (set (reg/v:SI 412 [ c ])
        (reg:SI 584 [ D.11716 ])) fnmatch_loop.c:895 -1
     (nil))
(insn 1816 1814 1817 369 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 412 [ c ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:895 -1
     (nil))
(jump_insn 1817 1816 1818 369 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1815)
            (pc))) fnmatch_loop.c:895 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1815)
(note 1818 1817 1819 370 [bb 370] NOTE_INSN_BASIC_BLOCK)
(insn 1819 1818 1820 370 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 613 [ not ])
            (const_int 0 [0]))) fnmatch_loop.c:954 -1
     (nil))
(jump_insn 1820 1819 1823 370 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:954 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1823 1820 76 371 [bb 371] NOTE_INSN_BASIC_BLOCK)
(insn 76 1823 1821 371 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 1821 76 1822 371 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 1822 1821 1824)
(code_label 1824 1822 1825 372 196 "" [3 uses])
(note 1825 1824 1826 372 [bb 372] NOTE_INSN_BASIC_BLOCK)
(insn 1826 1825 1827 372 (parallel [
            (set (reg:SI 866 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:962 -1
     (nil))
(insn 1827 1826 1828 372 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 866 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:962 -1
     (nil))
(jump_insn 1828 1827 1829 372 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) fnmatch_loop.c:962 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1863)
(note 1829 1828 1830 373 [bb 373] NOTE_INSN_BASIC_BLOCK)
(insn 1830 1829 1831 373 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 4 [0x4])) [2 MEM[(const wchar_t *)pattern_25 + 4B]+0 S4 A32])
            (const_int 40 [0x28]))) fnmatch_loop.c:962 -1
     (nil))
(jump_insn 1831 1830 1832 373 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) fnmatch_loop.c:962 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 1863)
(note 1832 1831 1833 374 [bb 374] NOTE_INSN_BASIC_BLOCK)
(insn 1833 1832 1834 374 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:964 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1834 1833 1835 374 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:964 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1835 1834 1836 374 (set (reg:SI 38 r9)
        (reg/v:SI 624 [ flags ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1836 1835 1837 374 (set (reg:SI 37 r8)
        (reg/v:SI 623 [ no_leading_period ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1837 1836 1838 374 (set (reg:DI 2 cx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1838 1837 1839 374 (set (reg:DI 1 dx)
        (reg/v/f:DI 103 [ np ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1839 1838 1840 374 (set (reg:DI 4 si)
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1840 1839 1841 374 (set (reg:SI 5 di)
        (reg/v:SI 121 [ c ])) fnmatch_loop.c:964 -1
     (nil))
(call_insn 1841 1840 1842 374 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>) [0 ext_wmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:964 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_wmatch") [flags 0x3]  <function_decl 0x2aeef6f18360 ext_wmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1842 1841 1843 374 (set (reg/v:SI 433 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:964 -1
     (nil))
(insn 1843 1842 1844 374 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:966 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1844 1843 1845 374 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 433 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:966 -1
     (nil))
(jump_insn 1845 1844 1848 374 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2052)
            (pc))) fnmatch_loop.c:966 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 2052)
(note 1848 1845 1846 375 [bb 375] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1846 1848 1847 375 (set (pc)
        (label_ref 1863)) -1
     (nil)
 -> 1863)
(barrier 1847 1846 1849)
(code_label 1849 1847 1850 376 199 "" [1 uses])
(note 1850 1849 1851 376 [bb 376] NOTE_INSN_BASIC_BLOCK)
(insn 1851 1850 1852 376 (parallel [
            (set (reg:SI 867 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:972 -1
     (nil))
(insn 1852 1851 1853 376 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 867 [ D.11716 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:972 -1
     (nil))
(jump_insn 1853 1852 1854 376 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) fnmatch_loop.c:972 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1863)
(note 1854 1853 1855 377 [bb 377] NOTE_INSN_BASIC_BLOCK)
(insn 1855 1854 1856 377 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:974 -1
     (nil))
(jump_insn 1856 1855 1857 377 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:974 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1857 1856 1858 378 [bb 378] NOTE_INSN_BASIC_BLOCK)
(insn 1858 1857 1859 378 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:974 -1
     (nil))
(jump_insn 1859 1858 1862 378 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:974 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 1862 1859 77 379 [bb 379] NOTE_INSN_BASIC_BLOCK)
(insn 77 1862 1860 379 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 1 [0x1])) fnmatch_loop.c:977 -1
     (nil))
(jump_insn 1860 77 1861 379 (set (pc)
        (label_ref 1884)) -1
     (nil)
 -> 1884)
(barrier 1861 1860 1863)
(code_label 1863 1861 1864 380 195 ("normal_match") [57 uses])
(note 1864 1863 1865 380 [bb 380] NOTE_INSN_BASIC_BLOCK)
(insn 1865 1864 1866 380 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1866 1865 1867 380 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 212 (nil))
 -> 1906)
(code_label 1867 1866 1868 381 308 "" [1 uses])
(note 1868 1867 1869 381 [bb 381] NOTE_INSN_BASIC_BLOCK)
(insn 1869 1868 1870 381 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1870 1869 1871 381 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1877)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1877)
(note 1871 1870 1872 382 [bb 382] NOTE_INSN_BASIC_BLOCK)
(insn 1872 1871 1873 382 (set (reg:SI 5 di)
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:983 -1
     (nil))
(call_insn/i 1873 1872 1874 382 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>) [0 __towlower S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:983 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower") [flags 0x43]  <function_decl 0x2aeef6e87438 __towlower>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 1874 1873 1875 382 (set (reg:SI 132 [ D.11718 ])
        (reg:SI 0 ax)) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1875 1874 1876 382 (set (pc)
        (label_ref 1880)) -1
     (nil)
 -> 1880)
(barrier 1876 1875 1877)
(code_label 1877 1876 1878 383 377 "" [1 uses])
(note 1878 1877 1879 383 [bb 383] NOTE_INSN_BASIC_BLOCK)
(insn 1879 1878 1880 383 (set (reg:SI 132 [ D.11718 ])
        (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])) fnmatch_loop.c:983 -1
     (nil))
(code_label 1880 1879 1881 384 378 "" [1 uses])
(note 1881 1880 1882 384 [bb 384] NOTE_INSN_BASIC_BLOCK)
(insn 1882 1881 1883 384 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.11718 ])
            (reg/v:SI 121 [ c ]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1883 1882 2053 384 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1906)
(note 2053 1883 78 385 [bb 385] NOTE_INSN_BASIC_BLOCK)
(insn 78 2053 1884 385 (set (reg/v:SI 623 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(code_label 1884 78 1885 386 209 "" [6 uses])
(note 1885 1884 1886 386 [bb 386] NOTE_INSN_BASIC_BLOCK)
(insn 1886 1885 80 386 (parallel [
            (set (reg/v/f:DI 103 [ np ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:988 -1
     (nil))
(insn 80 1886 1887 386 (set (reg/v/f:DI 620 [ pattern ])
        (reg/v/f:DI 102 [ pattern ])) fnmatch_loop.c:988 -1
     (nil))
(code_label 1887 80 1888 387 249 "" [1 uses])
(note 1888 1887 1889 387 [bb 387] NOTE_INSN_BASIC_BLOCK)
(code_label 1889 1888 1890 388 193 "" [1 uses])
(note 1890 1889 1891 388 [bb 388] NOTE_INSN_BASIC_BLOCK)
(insn 1891 1890 1892 388 (parallel [
            (set (reg/v/f:DI 102 [ pattern ])
                (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:56 -1
     (nil))
(insn 1892 1891 1894 388 (set (reg/v:SI 121 [ c ])
        (mem:SI (reg/v/f:DI 620 [ pattern ]) [2 *pattern_25+0 S4 A32])) fnmatch_loop.c:56 -1
     (nil))
(insn 1894 1892 1895 388 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 121 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:56 -1
     (nil))
(jump_insn 1895 1894 1896 388 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1893)
            (pc))) fnmatch_loop.c:56 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1893)
(note 1896 1895 1897 389 [bb 389] NOTE_INSN_BASIC_BLOCK)
(insn 1897 1896 1898 389 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:991 -1
     (nil))
(jump_insn 1898 1897 1899 389 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2057)
            (pc))) fnmatch_loop.c:991 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 2057)
(note 1899 1898 1900 390 [bb 390] NOTE_INSN_BASIC_BLOCK)
(insn 1900 1899 1901 390 (parallel [
            (set (reg:SI 868 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:994 -1
     (nil))
(insn 1901 1900 1902 390 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 868 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:994 -1
     (nil))
(jump_insn 1902 1901 1903 390 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:994 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1906)
(note 1903 1902 1904 391 [bb 391] NOTE_INSN_BASIC_BLOCK)
(insn 1904 1903 1905 391 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 103 [ np ]) [2 MEM[(const wchar_t *)np_31]+0 S4 A32])
            (const_int 47 [0x2f]))) fnmatch_loop.c:994 -1
     (nil))
(jump_insn 1905 1904 1906 391 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2061)
            (pc))) fnmatch_loop.c:994 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 2061)
(code_label 1906 1905 1907 392 204 "" [34 uses])
(note 1907 1906 91 392 [bb 392] NOTE_INSN_BASIC_BLOCK)
(insn 91 1907 1983 392 (set (reg:SI 122 [ D.11716 ])
        (const_int 1 [0x1])) fnmatch_loop.c:998 -1
     (nil))
(jump_insn 1983 91 1984 392 (set (pc)
        (label_ref 1908)) fnmatch_loop.c:998 -1
     (nil)
 -> 1908)
(barrier 1984 1983 1986)
(code_label 1986 1984 1985 393 384 "" [1 uses])
(note 1985 1986 82 393 [bb 393] NOTE_INSN_BASIC_BLOCK)
(insn 82 1985 1987 393 (set (reg:SI 122 [ D.11716 ])
        (reg/v:SI 441 [ res ])) fnmatch_loop.c:66 -1
     (nil))
(jump_insn 1987 82 1988 393 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 1988 1987 1990)
(code_label 1990 1988 1989 394 385 "" [1 uses])
(note 1989 1990 87 394 [bb 394] NOTE_INSN_BASIC_BLOCK)
(insn 87 1989 1991 394 (set (reg:SI 122 [ D.11716 ])
        (reg/v:SI 151 [ res ])) fnmatch_loop.c:96 -1
     (nil))
(jump_insn 1991 87 1992 394 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 1992 1991 1994)
(code_label 1994 1992 1993 395 386 "" [1 uses])
(note 1993 1994 84 395 [bb 395] NOTE_INSN_BASIC_BLOCK)
(insn 84 1993 2049 395 (set (reg:SI 122 [ D.11716 ])
        (const_int 0 [0])) fnmatch_loop.c:150 -1
     (nil))
(jump_insn 2049 84 2050 395 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 2050 2049 2052)
(code_label 2052 2050 2051 396 400 "" [1 uses])
(note 2051 2052 83 396 [bb 396] NOTE_INSN_BASIC_BLOCK)
(insn 83 2051 2054 396 (set (reg:SI 122 [ D.11716 ])
        (reg/v:SI 433 [ res ])) fnmatch_loop.c:964 -1
     (nil))
(jump_insn 2054 83 2055 396 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 2055 2054 2057)
(code_label 2057 2055 2056 397 401 "" [1 uses])
(note 2056 2057 85 397 [bb 397] NOTE_INSN_BASIC_BLOCK)
(insn 85 2056 2058 397 (set (reg:SI 122 [ D.11716 ])
        (const_int 0 [0])) fnmatch_loop.c:992 -1
     (nil))
(jump_insn 2058 85 2059 397 (set (pc)
        (label_ref 1908)) -1
     (nil)
 -> 1908)
(barrier 2059 2058 2061)
(code_label 2061 2059 2060 398 402 "" [1 uses])
(note 2060 2061 92 398 [bb 398] NOTE_INSN_BASIC_BLOCK)
(insn 92 2060 1908 398 (set (reg:SI 122 [ D.11716 ])
        (const_int 0 [0])) fnmatch_loop.c:992 -1
     (nil))
(code_label 1908 92 1909 399 207 "" [14 uses])
(note 1909 1908 1910 399 [bb 399] NOTE_INSN_BASIC_BLOCK)
(insn 1910 1909 1911 399 (set (reg:SI 619 [ <retval> ])
        (reg:SI 122 [ D.11716 ])) -1
     (nil))
(jump_insn 1911 1910 1912 399 (set (pc)
        (label_ref 1979)) -1
     (nil)
 -> 1979)
(barrier 1912 1911 1913)
(code_label 1913 1912 1914 400 254 "" [2 uses])
(note 1914 1913 1915 400 [bb 400] NOTE_INSN_BASIC_BLOCK)
(insn 1915 1914 1916 400 (parallel [
            (set (reg/v/f:DI 97 [ pattern ])
                (plus:DI (reg/v/f:DI 620 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:253 -1
     (nil))
(insn 1916 1915 28 400 (set (reg:SI 203 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 620 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_25 + 8B]+0 S4 A32])) -1
     (nil))
(insn 28 1916 1918 400 (set (reg/v:SI 613 [ not ])
        (const_int 1 [0x1])) fnmatch_loop.c:253 -1
     (nil))
(jump_insn 1918 28 1919 400 (set (pc)
        (label_ref 1917)) -1
     (nil)
 -> 1917)
(barrier 1919 1918 1925)
(code_label 1925 1919 1926 402 353 "" [3 uses])
(note 1926 1925 1928 402 [bb 402] NOTE_INSN_BASIC_BLOCK)
(insn 1928 1926 1929 402 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ lcollseq ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1929 1928 1930 402 (set (reg:QI 871 [ D.11715 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1930 1929 1931 402 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 871 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1931 1930 2085 402 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1927)
            (pc))) fnmatch_loop.c:827 -1
     (int_list:REG_BR_PROB 726 (nil))
 -> 1927)
(note 2085 1931 1932 403 [bb 403] NOTE_INSN_BASIC_BLOCK)
(insn 1932 2085 1933 403 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 114 [ lcollseq ])
            (reg/v:SI 335 [ fcollseq ]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1933 1932 1934 403 (set (reg:QI 873 [ D.11715 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(insn 1934 1933 1935 403 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 873 [ D.11715 ])
            (const_int 0 [0]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1935 1934 1938 403 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1927)
            (pc))) fnmatch_loop.c:827 -1
     (int_list:REG_BR_PROB 783 (nil))
 -> 1927)
(note 1938 1935 1936 404 [bb 404] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1936 1938 1937 404 (set (pc)
        (label_ref 1690)) fnmatch_loop.c:827 -1
     (nil)
 -> 1690)
(barrier 1937 1936 1939)
(code_label 1939 1937 1940 405 212 "" [1 uses])
(note 1940 1939 1941 405 [bb 405] NOTE_INSN_BASIC_BLOCK)
(insn 1941 1940 1942 405 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ np ])
            (reg/v/f:DI 622 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 1942 1941 1945 405 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 201 (nil))
 -> 1906)
(note 1945 1942 1943 406 [bb 406] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1943 1945 1944 406 (set (pc)
        (label_ref 232)) fnmatch_loop.c:89 -1
     (nil)
 -> 232)
(barrier 1944 1943 1950)
(code_label 1950 1944 1951 408 368 "" [1 uses])
(note 1951 1950 1952 408 [bb 408] NOTE_INSN_BASIC_BLOCK)
(insn 1952 1951 1953 408 (parallel [
            (set (reg/v/f:DI 416 [ pattern ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:915 -1
     (nil))
(insn 1953 1952 1954 408 (set (reg:SI 417 [ D.11716 ])
        (mem:SI (plus:DI (reg/v/f:DI 568 [ pattern ])
                (const_int 8 [0x8])) [2 MEM[(const wchar_t *)pattern_23 + 8B]+0 S4 A32])) fnmatch_loop.c:915 -1
     (nil))
(insn 1954 1953 1955 408 (set (reg/v:SI 418 [ c ])
        (reg:SI 417 [ D.11716 ])) fnmatch_loop.c:915 -1
     (nil))
(insn 1955 1954 1957 408 (parallel [
            (set (reg/f:DI 142 [ D.11721 ])
                (plus:DI (reg/v/f:DI 568 [ pattern ])
                    (const_int 8196 [0x2004])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 1957 1955 1958 408 (set (pc)
        (label_ref 1956)) -1
     (nil)
 -> 1956)
(barrier 1958 1957 1959)
(code_label 1959 1958 1960 409 240 "" [2 uses])
(note 1960 1959 1961 409 [bb 409] NOTE_INSN_BASIC_BLOCK)
(insn 1961 1960 1962 409 (parallel [
            (set (reg:SI 874 [ D.11716 ])
                (and:SI (reg/v:SI 624 [ flags ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (nil))
(insn 1962 1961 1963 409 (parallel [
            (set (reg:DI 875 [ D.11721 ])
                (plus:DI (reg/v/f:DI 103 [ np ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (nil))
(insn 1963 1962 1964 409 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1964 1963 1965 409 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 626 [ alloca_used ])) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1965 1964 1966 409 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:194 -1
     (nil))
(insn 1966 1965 1967 409 (set (reg:SI 37 r8)
        (reg/v:SI 624 [ flags ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1967 1966 1968 409 (set (reg:SI 2 cx)
        (reg:SI 874 [ D.11716 ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1968 1967 1969 409 (set (reg:DI 1 dx)
        (reg/v/f:DI 622 [ string_end ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1969 1968 1970 409 (set (reg:DI 4 si)
        (reg:DI 875 [ D.11721 ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1970 1969 1971 409 (set (reg:DI 5 di)
        (reg/v/f:DI 163 [ p ])) fnmatch_loop.c:194 -1
     (nil))
(call_insn 1971 1970 1972 409 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1972 1971 1973 409 (set (reg:SI 175 [ D.11716 ])
        (reg:SI 0 ax)) fnmatch_loop.c:194 -1
     (nil))
(insn 1973 1972 1974 409 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1974 1973 1975 409 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.11716 ])
            (const_int 0 [0]))) fnmatch_loop.c:194 -1
     (nil))
(jump_insn 1975 1974 1978 409 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 565)
            (pc))) fnmatch_loop.c:194 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 565)
(note 1978 1975 1976 410 [bb 410] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1976 1978 1977 410 (set (pc)
        (label_ref 561)) -1
     (nil)
 -> 561)
(barrier 1977 1976 1979)
(code_label 1979 1977 1982 411 192 "" [1 uses])
(note 1982 1979 1980 411 [bb 411] NOTE_INSN_BASIC_BLOCK)
(insn 1980 1982 1981 411 (set (reg/i:SI 0 ax)
        (reg:SI 619 [ <retval> ])) fnmatch_loop.c:999 -1
     (nil))
(insn 1981 1980 0 411 (use (reg/i:SI 0 ax)) fnmatch_loop.c:999 -1
     (nil))

;; Function ext_match (ext_match, funcdef_no=47, decl_uid=8695, cgraph_uid=47, symbol_order=56)

Partition 0: size 8 align 8
	list

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86
Edge 4->73 redirected to 103
Edge 7->9 redirected to 104
Edge 16->73 redirected to 105
Edge 33->35 redirected to 106
Edge 45->73 redirected to 107
Edge 52->86 redirected to 108
Edge 54->56 redirected to 109
Edge 56->73 redirected to 110
Edge 59->73 redirected to 111
Edge 61->73 redirected to 112
Edge 68->71 redirected to 113
Edge 69->71 redirected to 114
Edge 71->73 redirected to 115
Edge 76->79 redirected to 116
Edge 80->73 redirected to 117
Edge 82->73 redirected to 118
Edge 85->73 redirected to 119
Edge 86->73 redirected to 120
Purged non-fallthru edges from bb 122


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 13->15 redirected to 16
Forwarding edge 14->15 to 16 failed.
Deleted label in block 15.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 35->36 to 112 failed.
Forwarding edge 44->45 to 115 failed.
Redirecting jump 304 from 102 to 103.
Redirecting jump 406 from 102 to 103.
Redirecting jump 456 from 102 to 103.
Redirecting jump 490 from 102 to 103.
Forwarding edge 88->89 to 80 failed.
Redirecting jump 702 from 102 to 103.
Redirecting jump 710 from 102 to 103.
Redirecting jump 720 from 102 to 103.
Redirecting jump 724 from 102 to 103.
Redirecting jump 728 from 102 to 103.
Redirecting jump 740 from 102 to 103.
Redirecting jump 748 from 102 to 103.
Redirecting jump 752 from 102 to 103.
Redirecting jump 756 from 102 to 103.
Redirecting jump 760 from 102 to 103.
Merging block 102 into block 101...
Merged blocks 101 and 102.
Merged 101 and 102 without moving.
Forwarding edge 110->111 to 104 failed.
Forwarding edge 118->119 to 69 failed.
Forwarding edge 120->121 to 69 failed.
Forwarding edge 123->124 to 65 failed.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 16 failed.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 35->36 to 112 failed.
Forwarding edge 44->45 to 115 failed.
Forwarding edge 88->89 to 80 failed.
Forwarding edge 110->111 to 104 failed.
Forwarding edge 118->119 to 69 failed.
Forwarding edge 120->121 to 69 failed.
Forwarding edge 123->124 to 65 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 53 NOTE_INSN_DELETED)
(note 53 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 53 3 2 (set (reg/v:SI 207 [ opt ])
        (reg:SI 5 di [ opt ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 208 [ pattern ])
        (reg:DI 4 si [ pattern ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 209 [ string ])
        (reg:DI 1 dx [ string ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 210 [ string_end ])
        (reg:DI 2 cx [ string_end ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 211 [ no_leading_period ])
        (reg:SI 37 r8 [ no_leading_period ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 212 [ flags ])
        (reg:SI 38 r9 [ flags ])) fnmatch_loop.c:1050 -1
     (nil))
(insn 8 7 9 2 (set (reg/v:DI 213 [ alloca_used ])
        (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])) fnmatch_loop.c:1050 -1
     (expr_list:REG_EQUIV (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])
        (nil)))
(note 9 8 55 2 NOTE_INSN_FUNCTION_BEG)
(insn 55 9 56 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1058 -1
     (nil))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg/v/f:DI 208 [ pattern ])) fnmatch_loop.c:1060 -1
     (nil))
(call_insn/i 57 56 58 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aeef698e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1060 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aeef698e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 2 (set (reg:DI 215)
        (reg:DI 0 ax)) fnmatch_loop.c:1060 -1
     (nil))
(insn 59 58 60 2 (set (reg:DI 216)
        (reg:DI 215)) fnmatch_loop.c:1060 -1
     (nil))
(insn 60 59 61 2 (set (reg/v:DI 102 [ slen ])
        (reg:DI 216)) fnmatch_loop.c:1060 -1
     (nil))
(insn 61 60 12 2 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 208 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(insn 12 61 13 2 (set (reg/v/f:DI 88 [ p ])
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1068 -1
     (nil))
(insn 13 12 14 2 (set (reg/v:SI 192 [ any_malloced ])
        (const_int 0 [0])) fnmatch_loop.c:1061 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/v/f:DI 92 [ lastp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1059 -1
     (nil))
(insn 15 14 62 2 (set (reg/v:SI 90 [ level ])
        (const_int 0 [0])) fnmatch_loop.c:1067 -1
     (nil))
(jump_insn 62 15 63 2 (set (pc)
        (label_ref 65)) fnmatch_loop.c:1068 -1
     (nil)
 -> 65)
(barrier 63 62 157)
(code_label 157 63 64 4 678 "" [3 uses])
(note 64 157 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 65 64 66 5 664 "" [1 uses])
(note 66 65 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 5 (set (reg:QI 113 [ D.11784 ])
        (mem:QI (reg/v/f:DI 94 [ p ]) [0 *p_275+0 S1 A8])) fnmatch_loop.c:1069 -1
     (nil))
(insn 68 67 69 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.11784 ])
            (const_int 0 [0]))) fnmatch_loop.c:1069 -1
     (nil))
(jump_insn 69 68 70 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 697)
            (pc))) fnmatch_loop.c:1069 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 697)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.11784 ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:1075 -1
     (nil))
(jump_insn 72 71 73 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) fnmatch_loop.c:1075 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 137)
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:1078 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) fnmatch_loop.c:1078 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 86)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:1079 -1
     (nil))
(call_insn 78 77 79 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1079 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 8 (set (reg/f:DI 115 [ D.11785 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1079 -1
     (nil))
(insn 80 79 81 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 115 [ D.11785 ])
            (const_int 0 [0]))) fnmatch_loop.c:1079 -1
     (nil))
(jump_insn 81 80 82 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 701)
            (pc))) fnmatch_loop.c:1079 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 701)
(note 82 81 16 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 16 82 698 9 (set (reg:SI 101 [ D.11780 ])
        (const_int 1 [0x1])) fnmatch_loop.c:1079 -1
     (nil))
(jump_insn 698 16 699 9 (set (pc)
        (label_ref 83)) -1
     (nil)
 -> 83)
(barrier 699 698 701)
(code_label 701 699 700 10 722 "" [1 uses])
(note 700 701 17 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 17 700 83 10 (set (reg:SI 101 [ D.11780 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1079 -1
     (nil))
(code_label 83 17 84 11 668 "" [1 uses])
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 101 [ D.11780 ])) fnmatch_loop.c:1079 -1
     (nil))
(code_label 86 85 87 12 667 "" [1 uses])
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:QI 121 [ D.11784 ])
        (mem:QI (plus:DI (reg/v/f:DI 94 [ p ])
                (const_int 1 [0x1])) [0 MEM[(const char *)p_275 + 1B]+0 S1 A8])) fnmatch_loop.c:1083 -1
     (nil))
(insn 89 88 90 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.11784 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 90 89 91 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) fnmatch_loop.c:1083 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 106)
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (set (reg:SI 219)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:1083 -1
     (nil))
(insn 93 92 94 13 (parallel [
            (set (reg:SI 218)
                (lshiftrt:SI (reg:SI 219)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1083 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 94 93 95 13 (set (reg:QI 220)
        (subreg:QI (reg:SI 218) 0)) fnmatch_loop.c:1083 -1
     (nil))
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 220)
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 96 95 764 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 769)
            (pc))) fnmatch_loop.c:1083 612 {*jcc_1}
     (int_list:REG_BR_PROB 3600 (nil))
 -> 769)
(note 764 96 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 764 98 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.11784 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:1083 -1
     (nil))
(insn 98 97 99 14 (set (reg:QI 222 [ D.11778 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(insn 99 98 100 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ D.11778 ])
            (const_int 0 [0]))) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 100 99 765 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) fnmatch_loop.c:1083 -1
     (int_list:REG_BR_PROB 4375 (nil))
 -> 106)
(note 765 100 769 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(code_label 769 765 102 16 739 "" [1 uses])
(note 102 769 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1083 -1
     (nil))
(jump_insn 104 103 105 16 (set (pc)
        (label_ref 110)) fnmatch_loop.c:1083 -1
     (nil)
 -> 110)
(barrier 105 104 106)
(code_label 106 105 107 17 669 "" [2 uses])
(note 107 106 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 17 (parallel [
            (set (reg/v/f:DI 117 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1084 -1
     (nil))
(insn 109 108 18 17 (set (reg:QI 121 [ D.11784 ])
        (mem:QI (plus:DI (reg/v/f:DI 94 [ p ])
                (const_int 2 [0x2])) [0 MEM[(const char *)p_275 + 2B]+0 S1 A8])) -1
     (nil))
(insn 18 109 110 17 (set (reg/v/f:DI 94 [ p ])
        (reg/v/f:DI 117 [ p ])) fnmatch_loop.c:1084 -1
     (nil))
(code_label 110 18 111 18 671 "" [1 uses])
(note 111 110 112 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.11784 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1086 -1
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) fnmatch_loop.c:1086 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 127)
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (parallel [
            (set (reg/v/f:DI 118 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1087 -1
     (nil))
(insn 116 115 19 19 (set (reg:QI 121 [ D.11784 ])
        (mem:QI (plus:DI (reg/v/f:DI 94 [ p ])
                (const_int 1 [0x1])) [0 MEM[(const char *)p_15 + 1B]+0 S1 A8])) -1
     (nil))
(insn 19 116 117 19 (set (reg/v/f:DI 94 [ p ])
        (reg/v/f:DI 118 [ p ])) fnmatch_loop.c:1087 -1
     (nil))
(jump_insn 117 19 118 19 (set (pc)
        (label_ref 127)) -1
     (nil)
 -> 127)
(barrier 118 117 131)
(code_label 131 118 119 20 674 "" [1 uses])
(note 119 131 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 20 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1090 -1
     (nil))
(insn 121 120 122 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.11784 ])
            (const_int 0 [0]))) fnmatch_loop.c:1090 -1
     (nil))
(jump_insn 122 121 123 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 705)
            (pc))) fnmatch_loop.c:1090 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 705)
(note 123 122 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 21 (set (reg:QI 121 [ D.11784 ])
        (mem:QI (reg/v/f:DI 94 [ p ]) [0 MEM[base: p_76, offset: 0B]+0 S1 A8])) -1
     (nil))
(jump_insn 125 124 126 21 (set (pc)
        (label_ref 129)) -1
     (nil)
 -> 129)
(barrier 126 125 127)
(code_label 127 126 128 22 672 "" [2 uses])
(note 128 127 129 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(code_label 129 128 130 23 673 "" [1 uses])
(note 130 129 132 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 132 130 133 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.11784 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:1089 -1
     (nil))
(jump_insn 133 132 136 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) fnmatch_loop.c:1089 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 131)
(note 136 133 134 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 134 136 135 24 (set (pc)
        (label_ref 257)) -1
     (nil)
 -> 257)
(barrier 135 134 137)
(code_label 137 135 138 25 666 "" [1 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 25 (parallel [
            (set (reg:QI 119 [ D.11782 ])
                (plus:QI (reg:QI 113 [ D.11784 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 140 139 141 25 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 119 [ D.11782 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 141 140 142 25 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 209)
(note 142 141 143 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 26 (set (reg:SI 223 [ D.11780 ])
        (zero_extend:SI (reg:QI 119 [ D.11782 ]))) fnmatch_loop.c:1098 -1
     (nil))
(insn 144 143 145 26 (set (reg:DI 225)
        (const_int 3221227009 [0xc0000601])) fnmatch_loop.c:1098 -1
     (nil))
(insn 145 144 146 26 (parallel [
            (set (reg:DI 224 [ D.11781 ])
                (lshiftrt:DI (reg:DI 225)
                    (subreg:QI (reg:SI 223 [ D.11780 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 146 145 147 26 (parallel [
            (set (reg:DI 226 [ D.11781 ])
                (and:DI (reg:DI 224 [ D.11781 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 147 146 148 26 (parallel [
            (set (reg:DI 227 [ D.11781 ])
                (xor:DI (reg:DI 226 [ D.11781 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 148 147 149 26 (parallel [
            (set (reg:QI 228 [ D.11778 ])
                (and:QI (subreg:QI (reg:DI 227 [ D.11781 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1098 -1
     (nil))
(insn 149 148 150 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 228 [ D.11778 ])
            (const_int 0 [0]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 150 149 151 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 160)
(note 151 150 152 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)p_275 + 1B]+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:1098 -1
     (nil))
(jump_insn 153 152 154 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) fnmatch_loop.c:1098 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 160)
(note 154 153 155 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 28 (parallel [
            (set (reg/v:SI 90 [ level ])
                (plus:SI (reg/v:SI 90 [ level ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1100 -1
     (nil))
(insn 156 155 158 28 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 158 156 159 28 (set (pc)
        (label_ref 157)) fnmatch_loop.c:1068 -1
     (nil)
 -> 157)
(barrier 159 158 160)
(code_label 160 159 161 29 677 "" [2 uses])
(note 161 160 162 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.11784 ])
            (const_int 41 [0x29]))) fnmatch_loop.c:1101 -1
     (nil))
(jump_insn 163 162 164 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) fnmatch_loop.c:1101 -1
     (int_list:REG_BR_PROB 2059 (nil))
 -> 209)
(note 164 163 165 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ level ])
            (const_int 0 [0]))) fnmatch_loop.c:1103 -1
     (nil))
(jump_insn 166 165 167 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) fnmatch_loop.c:1103 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 171)
(note 167 166 168 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 31 (parallel [
            (set (reg/v:SI 90 [ level ])
                (plus:SI (reg/v:SI 90 [ level ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1103 -1
     (nil))
(jump_insn 169 168 170 31 (set (pc)
        (label_ref 257)) fnmatch_loop.c:1103 -1
     (nil)
 -> 257)
(barrier 170 169 171)
(code_label 171 170 172 32 679 "" [1 uses])
(note 172 171 173 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 32 (parallel [
            (set (reg:SI 229 [ D.11786 ])
                (plus:SI (reg/v:SI 207 [ opt ])
                    (const_int -63 [0xffffffffffffffc1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 174 173 175 32 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 229 [ D.11786 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 175 174 176 32 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) fnmatch_loop.c:1129 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 179)
(note 176 175 177 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 33 (parallel [
            (set (reg:DI 230 [ D.11787 ])
                (minus:DI (reg/v/f:DI 94 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 178 177 179 33 (parallel [
            (set (reg/v:DI 102 [ slen ])
                (plus:DI (reg:DI 230 [ D.11787 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(code_label 179 178 180 34 680 "" [1 uses])
(note 180 179 181 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 34 (parallel [
            (set (reg/v:DI 129 [ slen ])
                (plus:DI (reg/v:DI 102 [ slen ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 182 181 183 34 (parallel [
            (set (reg:DI 130 [ D.11781 ])
                (plus:DI (reg/v:DI 129 [ slen ])
                    (reg/v:DI 213 [ alloca_used ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 183 182 184 34 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 130 [ D.11781 ])
            (const_int 4096 [0x1000]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 184 183 185 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 583)
(note 185 184 186 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 35 (set (reg:DI 5 di)
        (reg:DI 130 [ D.11781 ])) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(call_insn/u 187 186 188 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>) [0 __libc_alloca_cutoff S1 A8])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 35 (set (reg:SI 187 [ D.11780 ])
        (reg:SI 0 ax)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(insn 189 188 190 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.11780 ])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 190 189 193 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 583)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 583)
(note 193 190 191 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 191 193 192 36 (set (pc)
        (label_ref 571)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil)
 -> 571)
(barrier 192 191 579)
(code_label 579 192 194 37 717 "" [2 uses])
(note 194 579 195 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 37 (set (mem/f:DI (reg/v/f:DI 98 [ newp ]) [1 newp_22->next+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(insn 196 195 197 37 (set (mem:QI (plus:DI (reg/v/f:DI 98 [ newp ])
                (const_int 8 [0x8])) [0 newp_22->malloced+0 S1 A64])
        (reg:QI 199 [ D.11784 ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 197 196 198 37 (parallel [
            (set (reg:DI 231 [ D.11787 ])
                (minus:DI (reg/v/f:DI 94 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 198 197 199 37 (parallel [
            (set (reg:DI 232 [ D.11783 ])
                (plus:DI (reg/v/f:DI 98 [ newp ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 199 198 200 37 (set (reg:DI 1 dx)
        (reg:DI 231 [ D.11787 ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 200 199 201 37 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 201 200 202 37 (set (reg:DI 5 di)
        (reg:DI 232 [ D.11783 ])) fnmatch_loop.c:1129 -1
     (nil))
(call_insn 202 201 203 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aeef6bf0af8 __mempcpy>) [0 __mempcpy S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aeef6bf0af8 __mempcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 203 202 204 37 (set (reg/f:DI 139 [ D.11788 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1129 -1
     (nil))
(insn 204 203 205 37 (set (mem:QI (reg/f:DI 139 [ D.11788 ]) [0 MEM[(char *)_115]+0 S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(insn 205 204 206 37 (set (mem/f:DI (reg/v/f:DI 92 [ lastp ]) [1 *lastp_274+0 S8 A64])
        (reg/v/f:DI 98 [ newp ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 206 205 207 37 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 207 206 208 37 (set (pc)
        (label_ref 262)) fnmatch_loop.c:1068 -1
     (nil)
 -> 262)
(barrier 208 207 209)
(code_label 209 208 210 38 676 "" [2 uses])
(note 210 209 211 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ D.11784 ])
            (const_int 124 [0x7c]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 212 211 213 38 (set (reg:QI 234 [ D.11778 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 213 212 214 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 234 [ D.11778 ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(jump_insn 214 213 766 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 257)
            (pc))) fnmatch_loop.c:1134 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 257)
(note 766 214 215 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 215 766 216 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ level ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 216 215 217 39 (set (reg:QI 236 [ D.11778 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(insn 217 216 218 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 236 [ D.11778 ])
            (const_int 0 [0]))) fnmatch_loop.c:1134 -1
     (nil))
(jump_insn 218 217 219 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 257)
            (pc))) fnmatch_loop.c:1134 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 257)
(note 219 218 220 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 40 (parallel [
            (set (reg:SI 237 [ D.11786 ])
                (plus:SI (reg/v:SI 207 [ opt ])
                    (const_int -63 [0xffffffffffffffc1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 221 220 222 40 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 237 [ D.11786 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 222 221 223 40 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 709)
            (pc))) fnmatch_loop.c:1136 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 709)
(note 223 222 224 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 41 (parallel [
            (set (reg:DI 238 [ D.11787 ])
                (minus:DI (reg/v/f:DI 94 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 225 224 706 41 (parallel [
            (set (reg/v:DI 103 [ slen ])
                (plus:DI (reg:DI 238 [ D.11787 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 706 225 707 41 (set (pc)
        (label_ref 226)) -1
     (nil)
 -> 226)
(barrier 707 706 709)
(code_label 709 707 708 42 724 "" [1 uses])
(note 708 709 23 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 23 708 226 42 (set (reg/v:DI 103 [ slen ])
        (reg/v:DI 102 [ slen ])) fnmatch_loop.c:1136 -1
     (nil))
(code_label 226 23 227 43 684 "" [1 uses])
(note 227 226 228 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 43 (parallel [
            (set (reg/v:DI 147 [ slen ])
                (plus:DI (reg/v:DI 103 [ slen ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 229 228 230 43 (parallel [
            (set (reg:DI 148 [ D.11781 ])
                (plus:DI (reg/v:DI 147 [ slen ])
                    (reg/v:DI 213 [ alloca_used ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 230 229 231 43 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 148 [ D.11781 ])
            (const_int 4096 [0x1000]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 231 230 232 43 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 615)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 615)
(note 232 231 233 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 44 (set (reg:DI 5 di)
        (reg:DI 148 [ D.11781 ])) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(call_insn/u 234 233 235 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>) [0 __libc_alloca_cutoff S1 A8])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_alloca_cutoff") [flags 0x43]  <function_decl 0x2aeef6b351b0 __libc_alloca_cutoff>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 235 234 236 44 (set (reg:SI 191 [ D.11780 ])
        (reg:SI 0 ax)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(insn 236 235 237 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 191 [ D.11780 ])
            (const_int 0 [0]))) ../sysdeps/pthread/allocalim.h:28 -1
     (nil))
(jump_insn 237 236 240 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 615)
            (pc))) ../sysdeps/pthread/allocalim.h:28 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 615)
(note 240 237 238 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(jump_insn 238 240 239 45 (set (pc)
        (label_ref 603)) ../sysdeps/pthread/allocalim.h:28 -1
     (nil)
 -> 603)
(barrier 239 238 611)
(code_label 611 239 241 46 718 "" [2 uses])
(note 241 611 242 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 46 (set (mem/f:DI (reg/v/f:DI 99 [ newp ]) [1 newp_23->next+0 S8 A64])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(insn 243 242 244 46 (set (mem:QI (plus:DI (reg/v/f:DI 99 [ newp ])
                (const_int 8 [0x8])) [0 newp_23->malloced+0 S1 A64])
        (reg:QI 140 [ D.11784 ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 244 243 245 46 (parallel [
            (set (reg:DI 239 [ D.11787 ])
                (minus:DI (reg/v/f:DI 94 [ p ])
                    (reg/v/f:DI 88 [ p ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 245 244 246 46 (parallel [
            (set (reg:DI 240 [ D.11783 ])
                (plus:DI (reg/v/f:DI 99 [ newp ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 246 245 247 46 (set (reg:DI 1 dx)
        (reg:DI 239 [ D.11787 ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 247 246 248 46 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 248 247 249 46 (set (reg:DI 5 di)
        (reg:DI 240 [ D.11783 ])) fnmatch_loop.c:1136 -1
     (nil))
(call_insn 249 248 250 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aeef6bf0af8 __mempcpy>) [0 __mempcpy S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aeef6bf0af8 __mempcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 250 249 251 46 (set (reg/f:DI 157 [ D.11788 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1136 -1
     (nil))
(insn 251 250 252 46 (set (mem:QI (reg/f:DI 157 [ D.11788 ]) [0 MEM[(char *)_148]+0 S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(insn 252 251 253 46 (set (mem/f:DI (reg/v/f:DI 92 [ lastp ]) [1 *lastp_274+0 S8 A64])
        (reg/v/f:DI 99 [ newp ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 253 252 254 46 (set (reg/v/f:DI 92 [ lastp ])
        (reg/v/f:DI 99 [ newp ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 254 253 10 46 (parallel [
            (set (reg/v/f:DI 88 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1137 -1
     (nil))
(insn 10 254 11 46 (set (reg/v/f:DI 94 [ p ])
        (reg/v/f:DI 88 [ p ])) fnmatch_loop.c:1068 -1
     (nil))
(insn 11 10 255 46 (set (reg/v:SI 90 [ level ])
        (const_int 0 [0])) fnmatch_loop.c:1137 -1
     (nil))
(jump_insn 255 11 256 46 (set (pc)
        (label_ref 157)) fnmatch_loop.c:1137 -1
     (nil)
 -> 157)
(barrier 256 255 257)
(code_label 257 256 258 47 675 "" [4 uses])
(note 258 257 259 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 47 (parallel [
            (set (reg/v/f:DI 94 [ p ])
                (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1068 -1
     (nil))
(insn 260 259 261 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ level ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:1068 -1
     (nil))
(jump_insn 261 260 262 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) fnmatch_loop.c:1068 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 157)
(code_label 262 261 263 48 683 "" [1 uses])
(note 263 262 264 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 48 (set (reg/v/f:DI 158 [ runp ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])) fnmatch_loop.c:1140 -1
     (nil))
(insn 265 264 266 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 158 [ runp ])
            (const_int 0 [0]))) fnmatch_loop.c:1140 -1
     (nil))
(jump_insn 266 265 267 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) fnmatch_loop.c:1140 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 274)
(note 267 266 268 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 49 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.8914") [flags 0x2]  <var_decl 0x2aeef6f31120 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1140 -1
     (nil))
(insn 269 268 270 49 (set (reg:SI 1 dx)
        (const_int 1140 [0x474])) fnmatch_loop.c:1140 -1
     (nil))
(insn 270 269 271 49 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1140 -1
     (nil))
(insn 271 270 272 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2aeef723c870 *.LC4>)) fnmatch_loop.c:1140 -1
     (nil))
(call_insn 272 271 273 49 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 273 272 274)
(code_label 274 273 275 50 687 "" [1 uses])
(note 275 274 276 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 94 [ p ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[(const char *)p_253 + -1B]+0 S1 A8])
            (const_int 41 [0x29]))) fnmatch_loop.c:1141 -1
     (nil))
(jump_insn 277 276 278 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) fnmatch_loop.c:1141 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 285)
(note 278 277 279 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 279 278 280 51 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.8914") [flags 0x2]  <var_decl 0x2aeef6f31120 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1141 -1
     (nil))
(insn 280 279 281 51 (set (reg:SI 1 dx)
        (const_int 1141 [0x475])) fnmatch_loop.c:1141 -1
     (nil))
(insn 281 280 282 51 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1141 -1
     (nil))
(insn 282 281 283 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2aeef723c900 *.LC5>)) fnmatch_loop.c:1141 -1
     (nil))
(call_insn 283 282 284 51 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 284 283 285)
(code_label 285 284 286 52 688 "" [1 uses])
(note 286 285 287 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 52 (parallel [
            (set (reg:SI 241)
                (plus:SI (reg/v:SI 207 [ opt ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1144 -1
     (nil))
(insn 288 287 289 52 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 241)
            (const_int 31 [0x1f]))) fnmatch_loop.c:1144 -1
     (nil))
(jump_insn 289 288 767 52 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 530)
            (pc))) fnmatch_loop.c:1144 -1
     (int_list:REG_BR_PROB 833 (nil))
 -> 530)
(note 767 289 290 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 290 767 291 53 (set (reg:DI 242)
        (zero_extend:DI (reg:SI 241))) fnmatch_loop.c:1144 -1
     (nil))
(insn 291 290 292 53 (set (reg/f:DI 243)
        (label_ref:DI 297)) fnmatch_loop.c:1144 -1
     (insn_list:REG_LABEL_OPERAND 297 (nil)))
(insn 292 291 293 53 (set (reg:SI 244)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 242)
                    (const_int 2 [0x2]))
                (reg/f:DI 243)) [0  S4 A8])) fnmatch_loop.c:1144 -1
     (nil))
(insn 293 292 294 53 (set (reg:DI 245)
        (sign_extend:DI (reg:SI 244))) fnmatch_loop.c:1144 -1
     (nil))
(insn 294 293 295 53 (set (reg:DI 247)
        (label_ref:DI 297)) fnmatch_loop.c:1144 -1
     (insn_list:REG_LABEL_OPERAND 297 (nil)))
(insn 295 294 296 53 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg:DI 245)
                    (reg:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1144 -1
     (nil))
(jump_insn 296 295 297 53 (parallel [
            (set (pc)
                (reg:DI 246))
            (use (label_ref 297))
        ]) fnmatch_loop.c:1144 -1
     (nil)
 -> 297)
(code_label 297 296 298 691 "" [3 uses])
(jump_table_data 298 297 299 (addr_diff_vec:SI (label_ref:DI 297)
         [
            (label_ref:DI 300)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 307)
            (label_ref:DI 322)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 530)
            (label_ref:DI 409)
            (label_ref:DI 424)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 299 298 300)
(code_label 300 299 301 54 690 "" [1 uses])
(note 301 300 302 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 54 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 209 [ string ])
            (reg/v/f:DI 210 [ string_end ]))) fnmatch_loop.c:1213 -1
     (nil))
(jump_insn 303 302 306 54 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) fnmatch_loop.c:1213 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 459)
(note 306 303 48 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 48 306 304 55 (set (reg/v:SI 97 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1237 -1
     (nil))
(jump_insn 304 48 305 55 (set (pc)
        (label_ref:DI 540)) fnmatch_loop.c:1213 654 {jump}
     (nil)
 -> 540)
(barrier 305 304 307)
(code_label 307 305 308 56 692 "" [1 uses])
(note 308 307 309 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 56 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 310 309 311 56 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 311 310 312 56 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1147 -1
     (nil))
(insn 312 311 313 56 (set (reg:SI 37 r8)
        (reg/v:SI 212 [ flags ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 313 312 314 56 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 314 313 315 56 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 315 314 316 56 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1147 -1
     (nil))
(insn 316 315 317 56 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1147 -1
     (nil))
(call_insn 317 316 318 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1147 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 318 317 319 56 (set (reg:SI 160 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1147 -1
     (nil))
(insn 319 318 320 56 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1147 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 320 319 321 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1147 -1
     (nil))
(jump_insn 321 320 322 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 713)
            (pc))) fnmatch_loop.c:1147 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 713)
(code_label 322 321 323 57 693 "" [1 uses])
(note 323 322 324 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 57 (parallel [
            (set (reg:SI 120 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 325 324 326 57 (parallel [
            (set (reg:SI 162 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 326 325 327 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.11780 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 327 326 328 57 (set (reg:SI 248)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 212 [ flags ])
            (reg:SI 162 [ D.11780 ]))) -1
     (nil))
(insn 328 327 329 57 (set (reg:SI 104 [ D.11780 ])
        (reg:SI 248)) -1
     (nil))
(insn 329 328 330 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.11780 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 330 329 331 57 (set (reg:SI 249)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 212 [ flags ])
            (reg:SI 162 [ D.11780 ]))) -1
     (nil))
(insn 331 330 27 57 (set (reg:SI 105 [ D.11780 ])
        (reg:SI 249)) -1
     (nil))
(insn 27 331 403 57 (set (reg/f:DI 161 [ D.11779 ])
        (reg/v/f:DI 158 [ runp ])) fnmatch_loop.c:1158 -1
     (nil))
(code_label 403 27 332 58 704 "" [1 uses])
(note 332 403 333 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 58 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 209 [ string ])
            (reg/v/f:DI 210 [ string_end ]))) fnmatch_loop.c:1155 -1
     (nil))
(jump_insn 334 333 335 58 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) fnmatch_loop.c:1155 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 399)
(note 335 334 28 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 28 335 396 59 (set (reg/v/f:DI 163 [ string ])
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1155 -1
     (nil))
(code_label 396 28 336 60 703 "" [1 uses])
(note 336 396 337 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 338 337 339 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 635)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 635)
(note 339 338 340 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 61 (parallel [
            (set (reg:DI 250 [ D.11783 ])
                (plus:DI (reg/f:DI 161 [ D.11779 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 341 340 342 61 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 342 341 343 61 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 343 342 344 61 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1158 -1
     (nil))
(insn 344 343 345 61 (set (reg:SI 37 r8)
        (reg:SI 162 [ D.11780 ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 345 344 346 61 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 346 345 347 61 (set (reg:DI 1 dx)
        (reg/v/f:DI 163 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 347 346 348 61 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 348 347 349 61 (set (reg:DI 5 di)
        (reg:DI 250 [ D.11783 ])) fnmatch_loop.c:1158 -1
     (nil))
(call_insn 349 348 350 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 350 349 351 61 (set (reg:SI 203 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1158 -1
     (nil))
(insn 351 350 352 61 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 352 351 353 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 203 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 353 352 648 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 393)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 393)
(code_label 648 353 354 62 719 "" [1 uses])
(note 354 648 355 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 209 [ string ])
            (reg/v/f:DI 163 [ string ]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 356 355 357 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 655)
            (pc))) fnmatch_loop.c:1163 -1
     (int_list:REG_BR_PROB 1 (nil))
 -> 655)
(note 357 356 358 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 163 [ string ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: string_238, offset: -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1166 -1
     (nil))
(jump_insn 359 358 360 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 715)
            (pc))) fnmatch_loop.c:1166 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 715)
(note 360 359 361 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 64 (parallel [
            (set (reg:SI 251 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1166 -1
     (nil))
(insn 362 361 363 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 251 [ D.11780 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1166 -1
     (nil))
(insn 363 362 364 64 (set (reg:QI 253)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1166 -1
     (nil))
(insn 364 363 365 64 (set (reg:SI 252 [ D.11778 ])
        (zero_extend:SI (reg:QI 253))) fnmatch_loop.c:1166 -1
     (nil))
(insn 365 364 366 64 (set (reg:SI 91 [ D.11780 ])
        (reg:SI 252 [ D.11778 ])) fnmatch_loop.c:1166 -1
     (nil))
(jump_insn 366 365 367 64 (set (pc)
        (label_ref 673)) -1
     (nil)
 -> 673)
(barrier 367 366 688)
(code_label 688 367 368 65 720 "" [1 uses])
(note 368 688 369 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 163 [ string ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: string_238, offset: -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1175 -1
     (nil))
(jump_insn 370 369 371 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 719)
            (pc))) fnmatch_loop.c:1175 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 719)
(note 371 370 372 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 66 (parallel [
            (set (reg:SI 254 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1175 -1
     (nil))
(insn 373 372 374 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 254 [ D.11780 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1175 -1
     (nil))
(insn 374 373 375 66 (set (reg:QI 256)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1175 -1
     (nil))
(insn 375 374 376 66 (set (reg:SI 255 [ D.11778 ])
        (zero_extend:SI (reg:QI 256))) fnmatch_loop.c:1175 -1
     (nil))
(insn 376 375 716 66 (set (reg:SI 106 [ D.11780 ])
        (reg:SI 255 [ D.11778 ])) fnmatch_loop.c:1175 -1
     (nil))
(jump_insn 716 376 717 66 (set (pc)
        (label_ref 377)) -1
     (nil)
 -> 377)
(barrier 717 716 719)
(code_label 719 717 718 67 727 "" [1 uses])
(note 718 719 29 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 29 718 377 67 (set (reg:SI 106 [ D.11780 ])
        (const_int 0 [0])) fnmatch_loop.c:1175 -1
     (nil))
(code_label 377 29 378 68 702 "" [1 uses])
(note 378 377 379 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 68 (parallel [
            (set (reg:DI 257 [ D.11789 ])
                (plus:DI (reg/v/f:DI 208 [ pattern ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (nil))
(insn 380 379 381 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 381 380 382 68 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 382 381 383 68 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1171 -1
     (nil))
(insn 383 382 384 68 (set (reg:SI 37 r8)
        (reg:SI 105 [ D.11780 ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 384 383 385 68 (set (reg:SI 2 cx)
        (reg:SI 106 [ D.11780 ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 385 384 386 68 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 386 385 387 68 (set (reg:DI 4 si)
        (reg/v/f:DI 163 [ string ])) fnmatch_loop.c:1171 -1
     (nil))
(insn 387 386 388 68 (set (reg:DI 5 di)
        (reg:DI 257 [ D.11789 ])) fnmatch_loop.c:1171 -1
     (nil))
(call_insn 388 387 389 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 389 388 390 68 (set (reg:SI 170 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1171 -1
     (nil))
(insn 390 389 391 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 391 390 392 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1171 -1
     (nil))
(jump_insn 392 391 393 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 723)
            (pc))) fnmatch_loop.c:1171 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 723)
(code_label 393 392 394 69 699 "" [3 uses])
(note 394 393 395 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 397 69 (parallel [
            (set (reg/v/f:DI 163 [ string ])
                (plus:DI (reg/v/f:DI 163 [ string ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1155 -1
     (nil))
(insn 397 395 398 69 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 210 [ string_end ])
            (reg/v/f:DI 163 [ string ]))) fnmatch_loop.c:1155 -1
     (nil))
(jump_insn 398 397 399 69 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 396)
            (pc))) fnmatch_loop.c:1155 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 396)
(code_label 399 398 400 70 697 "" [1 uses])
(note 400 399 401 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 70 (set (reg/f:DI 161 [ D.11779 ])
        (mem/f:DI (reg/f:DI 161 [ D.11779 ]) [1 _304->next+0 S8 A64])) fnmatch_loop.c:1182 -1
     (nil))
(insn 402 401 404 70 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 161 [ D.11779 ])) fnmatch_loop.c:1182 -1
     (nil))
(insn 404 402 405 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 161 [ D.11779 ])
            (const_int 0 [0]))) fnmatch_loop.c:1182 -1
     (nil))
(jump_insn 405 404 408 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) fnmatch_loop.c:1182 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 403)
(note 408 405 42 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 42 408 406 71 (set (reg/v:SI 97 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1185 -1
     (nil))
(jump_insn 406 42 407 71 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 407 406 409)
(code_label 409 407 410 72 694 "" [1 uses])
(note 410 409 411 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 412 72 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 412 411 413 72 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 413 412 414 72 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1189 -1
     (nil))
(insn 414 413 415 72 (set (reg:SI 37 r8)
        (reg/v:SI 212 [ flags ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 415 414 416 72 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 416 415 417 72 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 417 416 418 72 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1189 -1
     (nil))
(insn 418 417 419 72 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1189 -1
     (nil))
(call_insn 419 418 420 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 420 419 421 72 (set (reg:SI 171 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1189 -1
     (nil))
(insn 421 420 422 72 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1189 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 422 421 423 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1189 -1
     (nil))
(jump_insn 423 422 424 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 727)
            (pc))) fnmatch_loop.c:1189 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 727)
(code_label 424 423 425 73 695 "" [1 uses])
(note 425 424 426 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 73 (parallel [
            (set (reg:SI 259 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 427 426 428 73 (parallel [
            (set (reg:SI 260 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 428 427 429 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 260 [ D.11780 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 429 428 430 73 (set (reg:SI 258)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 212 [ flags ])
            (reg:SI 259 [ D.11780 ]))) -1
     (nil))
(insn 430 429 30 73 (set (reg:SI 107 [ D.11780 ])
        (reg:SI 258)) -1
     (nil))
(insn 30 430 453 73 (set (reg/f:DI 176 [ D.11779 ])
        (reg/v/f:DI 158 [ runp ])) fnmatch_loop.c:1200 -1
     (nil))
(code_label 453 30 431 74 705 "" [1 uses])
(note 431 453 432 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 74 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 176 [ D.11779 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (nil))
(insn 433 432 434 74 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 434 433 435 74 (set (reg:DI 5 di)
        (reg:DI 261)) fnmatch_loop.c:1200 -1
     (nil))
(call_insn 435 434 436 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcat") [flags 0x43]  <function_decl 0x2aeef698bca8 strcat>) [0 __builtin_strcat S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcat") [flags 0x43]  <function_decl 0x2aeef698bca8 strcat>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 436 435 437 74 (set (reg/f:DI 174 [ D.11785 ])
        (reg:DI 0 ax)) fnmatch_loop.c:1200 -1
     (nil))
(insn 437 436 438 74 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 438 437 439 74 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 439 438 440 74 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1200 -1
     (nil))
(insn 440 439 441 74 (set (reg:SI 37 r8)
        (reg:SI 107 [ D.11780 ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 441 440 442 74 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 442 441 443 74 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 443 442 444 74 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1200 -1
     (nil))
(insn 444 443 445 74 (set (reg:DI 5 di)
        (reg/f:DI 174 [ D.11785 ])) fnmatch_loop.c:1200 -1
     (nil))
(call_insn 445 444 446 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 446 445 447 74 (set (reg:SI 175 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1200 -1
     (nil))
(insn 447 446 448 74 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1200 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 448 447 449 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1200 -1
     (nil))
(jump_insn 449 448 450 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 731)
            (pc))) fnmatch_loop.c:1200 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 731)
(note 450 449 451 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 75 (set (reg/f:DI 176 [ D.11779 ])
        (mem/f:DI (reg/f:DI 176 [ D.11779 ]) [1 _230->next+0 S8 A64])) fnmatch_loop.c:1206 -1
     (nil))
(insn 452 451 454 75 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 176 [ D.11779 ])) fnmatch_loop.c:1206 -1
     (nil))
(insn 454 452 455 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 176 [ D.11779 ])
            (const_int 0 [0]))) fnmatch_loop.c:1206 -1
     (nil))
(jump_insn 455 454 458 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 453)
            (pc))) fnmatch_loop.c:1206 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 453)
(note 458 455 45 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 45 458 456 76 (set (reg/v:SI 97 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1209 -1
     (nil))
(jump_insn 456 45 457 76 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 457 456 459)
(code_label 459 457 460 77 696 "" [1 uses])
(note 460 459 461 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 77 (parallel [
            (set (reg:SI 194 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 462 461 463 77 (parallel [
            (set (reg:SI 177 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (nil))
(insn 463 462 464 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.11780 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 464 463 465 77 (set (reg:SI 262)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 212 [ flags ])
            (reg:SI 177 [ D.11780 ]))) -1
     (nil))
(insn 465 464 466 77 (set (reg:SI 108 [ D.11780 ])
        (reg:SI 262)) -1
     (nil))
(insn 466 465 467 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.11780 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 467 466 468 77 (set (reg:SI 263)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 212 [ flags ])
            (reg:SI 177 [ D.11780 ]))) -1
     (nil))
(insn 468 467 31 77 (set (reg:SI 109 [ D.11780 ])
        (reg:SI 263)) -1
     (nil))
(insn 31 468 487 77 (set (reg/v/f:DI 181 [ string ])
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(code_label 487 31 469 78 707 "" [1 uses])
(note 469 487 32 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 32 469 496 78 (set (reg/v/f:DI 180 [ runp ])
        (reg/v/f:DI 158 [ runp ])) fnmatch_loop.c:1218 -1
     (nil))
(code_label 496 32 470 79 708 "" [1 uses])
(note 470 496 471 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 79 (parallel [
            (set (reg:DI 264 [ D.11783 ])
                (plus:DI (reg/v/f:DI 180 [ runp ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (nil))
(insn 472 471 473 79 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 473 472 474 79 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 474 473 475 79 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1218 -1
     (nil))
(insn 475 474 476 79 (set (reg:SI 37 r8)
        (reg:SI 108 [ D.11780 ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 476 475 477 79 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 477 476 478 79 (set (reg:DI 1 dx)
        (reg/v/f:DI 181 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 478 477 479 79 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1218 -1
     (nil))
(insn 479 478 480 79 (set (reg:DI 5 di)
        (reg:DI 264 [ D.11783 ])) fnmatch_loop.c:1218 -1
     (nil))
(call_insn 480 479 481 79 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1218 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 481 480 482 79 (set (reg:SI 179 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1218 -1
     (nil))
(insn 482 481 483 79 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1218 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 483 482 484 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 179 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1218 -1
     (nil))
(jump_insn 484 483 526 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 493)
            (pc))) fnmatch_loop.c:1218 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 493)
(code_label 526 484 485 80 710 "" [1 uses])
(note 485 526 486 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 488 80 (parallel [
            (set (reg/v/f:DI 181 [ string ])
                (plus:DI (reg/v/f:DI 181 [ string ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1213 -1
     (nil))
(insn 488 486 489 80 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 210 [ string_end ])
            (reg/v/f:DI 181 [ string ]))) fnmatch_loop.c:1213 -1
     (nil))
(jump_insn 489 488 492 80 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) fnmatch_loop.c:1213 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 487)
(note 492 489 47 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 47 492 490 81 (set (reg/v:SI 97 [ retval ])
        (const_int 1 [0x1])) fnmatch_loop.c:1237 -1
     (nil))
(jump_insn 490 47 491 81 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 491 490 493)
(code_label 493 491 494 82 706 "" [1 uses])
(note 494 493 495 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 497 82 (set (reg/v/f:DI 180 [ runp ])
        (mem/f:DI (reg/v/f:DI 180 [ runp ]) [1 runp_242->next+0 S8 A64])) fnmatch_loop.c:1217 -1
     (nil))
(insn 497 495 498 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 180 [ runp ])
            (const_int 0 [0]))) fnmatch_loop.c:1217 -1
     (nil))
(jump_insn 498 497 499 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 496)
            (pc))) fnmatch_loop.c:1217 -1
     (int_list:REG_BR_PROB 9507 (nil))
 -> 496)
(note 499 498 500 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 209 [ string ])
            (reg/v/f:DI 181 [ string ]))) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 501 500 502 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 735)
            (pc))) fnmatch_loop.c:1225 612 {*jcc_1}
     (int_list:REG_BR_PROB 1 (nil))
 -> 735)
(note 502 501 503 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 181 [ string ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: string_239, offset: -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:1228 -1
     (nil))
(jump_insn 504 503 505 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 739)
            (pc))) fnmatch_loop.c:1228 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 739)
(note 505 504 506 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 85 (parallel [
            (set (reg:SI 265 [ D.11780 ])
                (and:SI (reg/v:SI 212 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1228 -1
     (nil))
(insn 507 506 508 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 265 [ D.11780 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:1228 -1
     (nil))
(insn 508 507 509 85 (set (reg:QI 267)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:1228 -1
     (nil))
(insn 509 508 510 85 (set (reg:SI 266 [ D.11778 ])
        (zero_extend:SI (reg:QI 267))) fnmatch_loop.c:1228 -1
     (nil))
(insn 510 509 732 85 (set (reg:SI 110 [ D.11780 ])
        (reg:SI 266 [ D.11778 ])) fnmatch_loop.c:1228 -1
     (nil))
(jump_insn 732 510 733 85 (set (pc)
        (label_ref 511)) -1
     (nil)
 -> 511)
(barrier 733 732 735)
(code_label 735 733 734 86 731 "" [1 uses])
(note 734 735 34 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 34 734 736 86 (set (reg:SI 110 [ D.11780 ])
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 736 34 737 86 (set (pc)
        (label_ref 511)) -1
     (nil)
 -> 511)
(barrier 737 736 739)
(code_label 739 737 738 87 732 "" [1 uses])
(note 738 739 33 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 33 738 511 87 (set (reg:SI 110 [ D.11780 ])
        (const_int 0 [0])) fnmatch_loop.c:1228 -1
     (nil))
(code_label 511 33 512 88 709 "" [2 uses])
(note 512 511 513 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 88 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 514 513 515 88 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 515 514 516 88 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1225 -1
     (nil))
(insn 516 515 517 88 (set (reg:SI 37 r8)
        (reg:SI 109 [ D.11780 ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 517 516 518 88 (set (reg:SI 2 cx)
        (reg:SI 110 [ D.11780 ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 518 517 519 88 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 519 518 520 88 (set (reg:DI 4 si)
        (reg/v/f:DI 181 [ string ])) fnmatch_loop.c:1225 -1
     (nil))
(insn 520 519 521 88 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1225 -1
     (nil))
(call_insn 521 520 522 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1225 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 522 521 523 88 (set (reg:SI 184 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1225 -1
     (nil))
(insn 523 522 524 88 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1225 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 524 523 525 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 184 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1225 -1
     (nil))
(jump_insn 525 524 529 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 743)
            (pc))) fnmatch_loop.c:1225 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 743)
(note 529 525 527 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(jump_insn 527 529 528 89 (set (pc)
        (label_ref 526)) -1
     (nil)
 -> 526)
(barrier 528 527 530)
(code_label 530 528 531 90 689 "" [28 uses])
(note 531 530 532 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 90 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.8914") [flags 0x2]  <var_decl 0x2aeef6f31120 __PRETTY_FUNCTION__>)) fnmatch_loop.c:1241 -1
     (nil))
(insn 533 532 534 90 (set (reg:SI 1 dx)
        (const_int 1241 [0x4d9])) fnmatch_loop.c:1241 -1
     (nil))
(insn 534 533 535 90 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aeef723c7e0 *.LC3>)) fnmatch_loop.c:1241 -1
     (nil))
(insn 535 534 536 90 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2aeef723c990 *.LC6>)) fnmatch_loop.c:1241 -1
     (nil))
(call_insn 536 535 537 90 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1241 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 537 536 697)
(code_label 697 537 696 91 721 "" [1 uses])
(note 696 697 35 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 35 696 702 91 (set (reg/v:SI 97 [ retval ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1072 -1
     (nil))
(jump_insn 702 35 703 91 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 703 702 705)
(code_label 705 703 704 92 723 "" [1 uses])
(note 704 705 36 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 36 704 710 92 (set (reg/v:SI 97 [ retval ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:1093 -1
     (nil))
(jump_insn 710 36 711 92 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 711 710 713)
(code_label 713 711 712 93 725 "" [1 uses])
(note 712 713 39 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 39 712 720 93 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 720 39 721 93 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 721 720 723)
(code_label 723 721 722 94 728 "" [1 uses])
(note 722 723 41 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 41 722 724 94 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 724 41 725 94 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 725 724 727)
(code_label 727 725 726 95 729 "" [1 uses])
(note 726 727 43 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 43 726 728 95 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 728 43 729 95 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 729 728 731)
(code_label 731 729 730 96 730 "" [1 uses])
(note 730 731 44 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 44 730 740 96 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 740 44 741 96 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 741 740 743)
(code_label 743 741 742 97 733 "" [1 uses])
(note 742 743 46 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 46 742 748 97 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 748 46 749 97 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 749 748 751)
(code_label 751 749 750 98 735 "" [1 uses])
(note 750 751 37 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 37 750 752 98 (set (reg/v:SI 97 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 752 37 753 98 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 753 752 755)
(code_label 755 753 754 99 736 "" [1 uses])
(note 754 755 38 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 38 754 756 99 (set (reg/v:SI 97 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 756 38 757 99 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 757 756 759)
(code_label 759 757 758 100 737 "" [1 uses])
(note 758 759 49 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 49 758 760 100 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(jump_insn 760 49 761 100 (set (pc)
        (label_ref:DI 540)) 654 {jump}
     (nil)
 -> 540)
(barrier 761 760 763)
(code_label 763 761 762 101 738 "" [1 uses])
(note 762 763 40 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 40 762 538 101 (set (reg/v:SI 97 [ retval ])
        (const_int 0 [0])) fnmatch_loop.c:1064 -1
     (nil))
(note 538 40 540 ("success") NOTE_INSN_DELETED_LABEL 665)
(code_label 540 538 768 103 711 ("out") [14 uses])
(note 768 540 541 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 541 768 542 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 192 [ any_malloced ])
            (const_int 0 [0]))) fnmatch_loop.c:1248 -1
     (nil))
(jump_insn 542 541 567 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 547)
            (pc))) fnmatch_loop.c:1248 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 547)
(code_label 567 542 543 104 716 "" [1 uses])
(note 543 567 544 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 104 (set (reg:SI 206 [ <retval> ])
        (reg/v:SI 97 [ retval ])) fnmatch_loop.c:1257 -1
     (nil))
(jump_insn 545 544 546 104 (set (pc)
        (label_ref 692)) fnmatch_loop.c:1257 -1
     (nil)
 -> 692)
(barrier 546 545 547)
(code_label 547 546 548 105 712 "" [1 uses])
(note 548 547 549 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 105 (set (reg/f:DI 89 [ D.11779 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])) -1
     (nil))
(jump_insn 550 549 551 105 (set (pc)
        (label_ref 560)) -1
     (nil)
 -> 560)
(barrier 551 550 564)
(code_label 564 551 552 106 715 "" [1 uses])
(note 552 564 553 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 106 (set (reg/f:DI 185 [ D.11779 ])
        (mem/f:DI (reg/f:DI 89 [ D.11779 ]) [1 _6->next+0 S8 A64])) fnmatch_loop.c:1252 -1
     (nil))
(insn 554 553 555 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 89 [ D.11779 ])
                    (const_int 8 [0x8])) [0 _6->malloced+0 S1 A64])
            (const_int 0 [0]))) fnmatch_loop.c:1253 -1
     (nil))
(jump_insn 555 554 556 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 747)
            (pc))) fnmatch_loop.c:1253 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 747)
(note 556 555 557 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 107 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 list+0 S8 A64])
        (reg/f:DI 185 [ D.11779 ])) -1
     (nil))
(insn 558 557 559 107 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.11779 ])) fnmatch_loop.c:1254 -1
     (nil))
(call_insn 559 558 50 107 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:1254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 559 560 107 (set (reg/f:DI 89 [ D.11779 ])
        (reg/f:DI 185 [ D.11779 ])) fnmatch_loop.c:1252 -1
     (nil))
(code_label 560 50 561 108 713 "" [1 uses])
(note 561 560 744 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(jump_insn 744 561 745 108 (set (pc)
        (label_ref 562)) -1
     (nil)
 -> 562)
(barrier 745 744 747)
(code_label 747 745 746 109 734 "" [1 uses])
(note 746 747 51 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 51 746 562 109 (set (reg/f:DI 89 [ D.11779 ])
        (reg/f:DI 185 [ D.11779 ])) fnmatch_loop.c:1252 -1
     (nil))
(code_label 562 51 563 110 714 "" [1 uses])
(note 563 562 565 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 565 563 566 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.11779 ])
            (const_int 0 [0]))) fnmatch_loop.c:1249 -1
     (nil))
(jump_insn 566 565 570 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 564)
            (pc))) fnmatch_loop.c:1249 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 564)
(note 570 566 568 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(jump_insn 568 570 569 111 (set (pc)
        (label_ref 567)) -1
     (nil)
 -> 567)
(barrier 569 568 571)
(code_label 571 569 572 112 682 "" [1 uses])
(note 572 571 573 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 112 (set (reg:DI 5 di)
        (reg/v:DI 129 [ slen ])) fnmatch_loop.c:1129 -1
     (nil))
(call_insn 574 573 575 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 575 574 576 112 (set (reg/f:DI 269)
        (reg:DI 0 ax)) fnmatch_loop.c:1129 -1
     (expr_list:REG_NOALIAS (reg/f:DI 269)
        (nil)))
(insn 576 575 577 112 (set (reg/v/f:DI 98 [ newp ])
        (reg/f:DI 269)) fnmatch_loop.c:1129 -1
     (nil))
(insn 577 576 578 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ newp ])
            (const_int 0 [0]))) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 578 577 582 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 751)
            (pc))) fnmatch_loop.c:1129 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 751)
(note 582 578 20 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 20 582 21 113 (set (reg:QI 199 [ D.11784 ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 21 20 580 113 (set (reg/v:SI 192 [ any_malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 580 21 581 113 (set (pc)
        (label_ref 579)) -1
     (nil)
 -> 579)
(barrier 581 580 583)
(code_label 583 581 584 114 681 "" [2 uses])
(note 584 583 585 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 114 (parallel [
            (set (reg:DI 270 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch_loop.c:1129))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 586 585 587 114 (set (reg/v/f:DI 131 [ old__ ])
        (reg:DI 270 [ old__ ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 587 586 588 114 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg/v:DI 129 [ slen ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 588 587 589 114 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 589 588 590 114 (parallel [
            (set (reg:DI 273)
                (plus:DI (reg:DI 271)
                    (reg:DI 272)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 590 589 591 114 (parallel [
            (set (reg:DI 275)
                (udiv:DI (reg:DI 273)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 276)
                (umod:DI (reg:DI 273)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 591 590 592 114 (parallel [
            (set (reg:DI 277)
                (mult:DI (reg:DI 275)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 592 591 593 114 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 277)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 593 592 594 114 (set (reg:DI 278)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:1129 -1
     (nil))
(insn 594 593 595 114 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg:DI 278)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 595 594 596 114 (parallel [
            (set (reg:DI 280)
                (lshiftrt:DI (reg:DI 279)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 279)
            (const_int 16 [0x10]))
        (nil)))
(insn 596 595 597 114 (parallel [
            (set (reg/f:DI 281)
                (ashift:DI (reg:DI 280)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 597 596 598 114 (set (reg/v/f:DI 98 [ newp ])
        (reg/f:DI 281)) fnmatch_loop.c:1129 -1
     (nil))
(insn 598 597 599 114 (parallel [
            (set (reg:DI 282 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 131 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch_loop.c:1129)
                    ]
                     [] fnmatch_loop.c:1129))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 599 598 600 114 (set (reg/v:DI 132 [ d__ ])
        (reg:DI 282 [ d__ ])) fnmatch_loop.c:1129 -1
     (nil))
(insn 600 599 22 114 (parallel [
            (set (reg/v:DI 213 [ alloca_used ])
                (plus:DI (reg/v:DI 213 [ alloca_used ])
                    (reg/v:DI 132 [ d__ ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1129 -1
     (nil))
(insn 22 600 601 114 (set (reg:QI 199 [ D.11784 ])
        (const_int 0 [0])) fnmatch_loop.c:1129 -1
     (nil))
(jump_insn 601 22 602 114 (set (pc)
        (label_ref 579)) fnmatch_loop.c:1129 -1
     (nil)
 -> 579)
(barrier 602 601 603)
(code_label 603 602 604 115 686 "" [1 uses])
(note 604 603 605 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 115 (set (reg:DI 5 di)
        (reg/v:DI 147 [ slen ])) fnmatch_loop.c:1136 -1
     (nil))
(call_insn 606 605 607 115 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 607 606 608 115 (set (reg/f:DI 283)
        (reg:DI 0 ax)) fnmatch_loop.c:1136 -1
     (expr_list:REG_NOALIAS (reg/f:DI 283)
        (nil)))
(insn 608 607 609 115 (set (reg/v/f:DI 99 [ newp ])
        (reg/f:DI 283)) fnmatch_loop.c:1136 -1
     (nil))
(insn 609 608 610 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ newp ])
            (const_int 0 [0]))) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 610 609 614 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 755)
            (pc))) fnmatch_loop.c:1136 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 755)
(note 614 610 24 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 24 614 25 116 (set (reg:QI 140 [ D.11784 ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 25 24 612 116 (set (reg/v:SI 192 [ any_malloced ])
        (const_int 1 [0x1])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 612 25 613 116 (set (pc)
        (label_ref 611)) -1
     (nil)
 -> 611)
(barrier 613 612 615)
(code_label 615 613 616 117 685 "" [2 uses])
(note 616 615 617 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 617 616 618 117 (parallel [
            (set (reg:DI 284 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch_loop.c:1136))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 618 617 619 117 (set (reg/v/f:DI 149 [ old__ ])
        (reg:DI 284 [ old__ ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 619 618 620 117 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/v:DI 147 [ slen ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 620 619 621 117 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 621 620 622 117 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg:DI 285)
                    (reg:DI 286)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 622 621 623 117 (parallel [
            (set (reg:DI 289)
                (udiv:DI (reg:DI 287)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 290)
                (umod:DI (reg:DI 287)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 623 622 624 117 (parallel [
            (set (reg:DI 291)
                (mult:DI (reg:DI 289)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 624 623 625 117 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 625 624 626 117 (set (reg:DI 292)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch_loop.c:1136 -1
     (nil))
(insn 626 625 627 117 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg:DI 292)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 627 626 628 117 (parallel [
            (set (reg:DI 294)
                (lshiftrt:DI (reg:DI 293)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 293)
            (const_int 16 [0x10]))
        (nil)))
(insn 628 627 629 117 (parallel [
            (set (reg/f:DI 295)
                (ashift:DI (reg:DI 294)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 629 628 630 117 (set (reg/v/f:DI 99 [ newp ])
        (reg/f:DI 295)) fnmatch_loop.c:1136 -1
     (nil))
(insn 630 629 631 117 (parallel [
            (set (reg:DI 296 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 149 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch_loop.c:1136)
                    ]
                     [] fnmatch_loop.c:1136))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 631 630 632 117 (set (reg/v:DI 150 [ d__ ])
        (reg:DI 296 [ d__ ])) fnmatch_loop.c:1136 -1
     (nil))
(insn 632 631 26 117 (parallel [
            (set (reg/v:DI 213 [ alloca_used ])
                (plus:DI (reg/v:DI 213 [ alloca_used ])
                    (reg/v:DI 150 [ d__ ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1136 -1
     (nil))
(insn 26 632 633 117 (set (reg:QI 140 [ D.11784 ])
        (const_int 0 [0])) fnmatch_loop.c:1136 -1
     (nil))
(jump_insn 633 26 634 117 (set (pc)
        (label_ref 611)) fnmatch_loop.c:1136 -1
     (nil)
 -> 611)
(barrier 634 633 635)
(code_label 635 634 636 118 698 "" [1 uses])
(note 636 635 637 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 637 636 638 118 (parallel [
            (set (reg:DI 297 [ D.11783 ])
                (plus:DI (reg/f:DI 161 [ D.11779 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (nil))
(insn 638 637 639 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 639 638 640 118 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 640 639 641 118 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1158 -1
     (nil))
(insn 641 640 642 118 (set (reg:SI 37 r8)
        (reg/v:SI 212 [ flags ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 642 641 643 118 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 643 642 644 118 (set (reg:DI 1 dx)
        (reg/v/f:DI 163 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 644 643 645 118 (set (reg:DI 4 si)
        (reg/v/f:DI 209 [ string ])) fnmatch_loop.c:1158 -1
     (nil))
(insn 645 644 646 118 (set (reg:DI 5 di)
        (reg:DI 297 [ D.11783 ])) fnmatch_loop.c:1158 -1
     (nil))
(call_insn 646 645 647 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 647 646 649 118 (set (reg:SI 197 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1158 -1
     (nil))
(insn 649 647 650 118 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1158 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 650 649 651 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 197 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1158 -1
     (nil))
(jump_insn 651 650 654 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 648)
            (pc))) fnmatch_loop.c:1158 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 648)
(note 654 651 652 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(jump_insn 652 654 653 119 (set (pc)
        (label_ref 393)) fnmatch_loop.c:1158 -1
     (nil)
 -> 393)
(barrier 653 652 655)
(code_label 655 653 656 120 700 "" [1 uses])
(note 656 655 657 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 120 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 658 657 659 120 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 659 658 660 120 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1163 -1
     (nil))
(insn 660 659 661 120 (set (reg:SI 37 r8)
        (reg:SI 104 [ D.11780 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 661 660 662 120 (set (reg:SI 2 cx)
        (reg/v:SI 211 [ no_leading_period ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 662 661 663 120 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 663 662 664 120 (set (reg:DI 4 si)
        (reg/v/f:DI 163 [ string ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 664 663 665 120 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1163 -1
     (nil))
(call_insn 665 664 666 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 666 665 667 120 (set (reg:SI 196 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1163 -1
     (nil))
(insn 667 666 668 120 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 668 667 669 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 196 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 669 668 672 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 759)
            (pc))) fnmatch_loop.c:1163 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 759)
(note 672 669 670 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(jump_insn 670 672 671 121 (set (pc)
        (label_ref 393)) fnmatch_loop.c:1163 -1
     (nil)
 -> 393)
(barrier 671 670 715)
(code_label 715 671 714 122 726 "" [1 uses])
(note 714 715 52 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 52 714 673 122 (set (reg:SI 91 [ D.11780 ])
        (const_int 0 [0])) fnmatch_loop.c:1166 -1
     (nil))
(code_label 673 52 674 123 701 "" [1 uses])
(note 674 673 675 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 675 674 676 123 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 676 675 677 123 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 213 [ alloca_used ])) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 677 676 678 123 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:1163 -1
     (nil))
(insn 678 677 679 123 (set (reg:SI 37 r8)
        (reg:SI 104 [ D.11780 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 679 678 680 123 (set (reg:SI 2 cx)
        (reg:SI 91 [ D.11780 ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 680 679 681 123 (set (reg:DI 1 dx)
        (reg/v/f:DI 210 [ string_end ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 681 680 682 123 (set (reg:DI 4 si)
        (reg/v/f:DI 163 [ string ])) fnmatch_loop.c:1163 -1
     (nil))
(insn 682 681 683 123 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ p ])) fnmatch_loop.c:1163 -1
     (nil))
(call_insn 683 682 684 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:1163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 684 683 685 123 (set (reg:SI 195 [ D.11780 ])
        (reg:SI 0 ax)) fnmatch_loop.c:1163 -1
     (nil))
(insn 685 684 686 123 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:1163 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 686 685 687 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 195 [ D.11780 ])
            (const_int 0 [0]))) fnmatch_loop.c:1163 -1
     (nil))
(jump_insn 687 686 691 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 763)
            (pc))) fnmatch_loop.c:1163 612 {*jcc_1}
     (int_list:REG_BR_PROB 299 (nil))
 -> 763)
(note 691 687 689 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(jump_insn 689 691 690 124 (set (pc)
        (label_ref 688)) fnmatch_loop.c:1163 -1
     (nil)
 -> 688)
(barrier 690 689 692)
(code_label 692 690 695 125 663 "" [1 uses])
(note 695 692 693 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 693 695 694 125 (set (reg/i:SI 0 ax)
        (reg:SI 206 [ <retval> ])) fnmatch_loop.c:1258 -1
     (nil))
(insn 694 693 0 125 (use (reg/i:SI 0 ax)) fnmatch_loop.c:1258 -1
     (nil))

;; Function internal_fnmatch (internal_fnmatch, funcdef_no=45, decl_uid=8687, cgraph_uid=45, symbol_order=54)

Partition 1: size 2049 align 16
	str	end

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227

;; Generating RTL for gimple basic block 228

;; Generating RTL for gimple basic block 229

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233

;; Generating RTL for gimple basic block 234

;; Generating RTL for gimple basic block 235

;; Generating RTL for gimple basic block 236

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238

;; Generating RTL for gimple basic block 239

;; Generating RTL for gimple basic block 240

;; Generating RTL for gimple basic block 241

;; Generating RTL for gimple basic block 242

;; Generating RTL for gimple basic block 243

;; Generating RTL for gimple basic block 244

;; Generating RTL for gimple basic block 245

;; Generating RTL for gimple basic block 246

;; Generating RTL for gimple basic block 247

;; Generating RTL for gimple basic block 248

;; Generating RTL for gimple basic block 249

;; Generating RTL for gimple basic block 250

;; Generating RTL for gimple basic block 251

;; Generating RTL for gimple basic block 252

;; Generating RTL for gimple basic block 253

;; Generating RTL for gimple basic block 254

;; Generating RTL for gimple basic block 255

;; Generating RTL for gimple basic block 256

;; Generating RTL for gimple basic block 257

;; Generating RTL for gimple basic block 258

;; Generating RTL for gimple basic block 259

;; Generating RTL for gimple basic block 260

;; Generating RTL for gimple basic block 261

;; Generating RTL for gimple basic block 262

;; Generating RTL for gimple basic block 263

;; Generating RTL for gimple basic block 264

;; Generating RTL for gimple basic block 265

;; Generating RTL for gimple basic block 266

;; Generating RTL for gimple basic block 267

;; Generating RTL for gimple basic block 268

;; Generating RTL for gimple basic block 269

;; Generating RTL for gimple basic block 270

;; Generating RTL for gimple basic block 271

;; Generating RTL for gimple basic block 272

;; Generating RTL for gimple basic block 273

;; Generating RTL for gimple basic block 274

;; Generating RTL for gimple basic block 275

;; Generating RTL for gimple basic block 276

;; Generating RTL for gimple basic block 277

;; Generating RTL for gimple basic block 278

;; Generating RTL for gimple basic block 279

;; Generating RTL for gimple basic block 280

;; Generating RTL for gimple basic block 281

;; Generating RTL for gimple basic block 282

;; Generating RTL for gimple basic block 283

;; Generating RTL for gimple basic block 284

;; Generating RTL for gimple basic block 285

;; Generating RTL for gimple basic block 286

;; Generating RTL for gimple basic block 287

;; Generating RTL for gimple basic block 288

;; Generating RTL for gimple basic block 289

;; Generating RTL for gimple basic block 290

;; Generating RTL for gimple basic block 291

;; Generating RTL for gimple basic block 292

;; Generating RTL for gimple basic block 293

;; Generating RTL for gimple basic block 294

;; Generating RTL for gimple basic block 295

;; Generating RTL for gimple basic block 296

;; Generating RTL for gimple basic block 297

;; Generating RTL for gimple basic block 298

;; Generating RTL for gimple basic block 299

;; Generating RTL for gimple basic block 300

;; Generating RTL for gimple basic block 301

;; Generating RTL for gimple basic block 302

;; Generating RTL for gimple basic block 303

;; Generating RTL for gimple basic block 304

;; Generating RTL for gimple basic block 305

;; Generating RTL for gimple basic block 306

;; Generating RTL for gimple basic block 307

;; Generating RTL for gimple basic block 308

;; Generating RTL for gimple basic block 309

;; Generating RTL for gimple basic block 310

;; Generating RTL for gimple basic block 311

;; Generating RTL for gimple basic block 312

;; Generating RTL for gimple basic block 313

;; Generating RTL for gimple basic block 314

;; Generating RTL for gimple basic block 315

;; Generating RTL for gimple basic block 316

;; Generating RTL for gimple basic block 317

;; Generating RTL for gimple basic block 318
Edge 9->310 redirected to 358
Edge 19->22 redirected to 359
Edge 26->310 redirected to 360
Edge 43->310 redirected to 361
Edge 45->47 redirected to 362
Edge 58->66 redirected to 363
Edge 64->66 redirected to 364
Edge 84->86 redirected to 365
Edge 122->222 redirected to 368
Edge 141->154 redirected to 370
Edge 142->155 redirected to 372
Edge 143->148 redirected to 374
Edge 154->171 redirected to 375
Edge 182->299 redirected to 376
Edge 195->118 redirected to 377
Edge 215->118 redirected to 379
Edge 281->288 redirected to 381
Edge 293->310 redirected to 382
Edge 306->310 redirected to 384
Edge 308->310 redirected to 385
Purged non-fallthru edges from bb 388
Purged non-fallthru edges from bb 390
Purged non-fallthru edges from bb 392
Purged non-fallthru edges from bb 394
Purged non-fallthru edges from bb 397
Purged non-fallthru edges from bb 402
Purged non-fallthru edges from bb 404
Purged non-fallthru edges from bb 406


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 14 failed.
Forwarding edge 12->13 to 9 failed.
Edge 17->19 redirected to 20
Forwarding edge 18->19 to 20 failed.
Deleted label in block 19.
Forwarding edge 36->37 to 40 failed.
Edge 41->43 redirected to 44
Forwarding edge 42->43 to 44 failed.
Deleted label in block 43.
Edge 44->46 redirected to 47
Forwarding edge 45->46 to 47 failed.
Deleted label in block 46.
Edge 48->50 redirected to 51
Forwarding edge 49->50 to 51 failed.
Deleted label in block 50.
Forwarding edge 53->54 to 51 failed.
Forwarding edge 65->66 to 68 failed.
Forwarding edge 76->77 to 106 failed.
Forwarding edge 78->79 to 107 failed.
Forwarding edge 86->87 to 407 failed.
Forwarding edge 116->117 to 120 failed.
Edge 121->123 redirected to 124
Forwarding edge 122->123 to 124 failed.
Deleted label in block 123.
Forwarding edge 142->143 to 148 failed.
Edge 188->190 redirected to 193
Forwarding edge 189->190 to 193 failed.
Deleted label in block 190.
Merging block 191 into block 190...
Merged blocks 190 and 191.
Merged 190 and 191 without moving.
Forwarding edge 189->190 to 193 failed.
Forwarding edge 189->190 to 193 failed.
Edge 199->201 redirected to 204
Forwarding edge 200->201 to 204 failed.
Deleted label in block 201.
Merging block 202 into block 201...
Merged blocks 201 and 202.
Merged 201 and 202 without moving.
Forwarding edge 200->201 to 204 failed.
Forwarding edge 200->201 to 204 failed.
Forwarding edge 204->205 to 207 failed.
Forwarding edge 233->234 to 236 failed.
Forwarding edge 237->238 to 280 failed.
Forwarding edge 246->247 to 241 failed.
Forwarding edge 264->265 to 268 failed.
Forwarding edge 266->267 to 274 failed.
Edge 284->286 redirected to 289
Forwarding edge 285->286 to 289 failed.
Deleted label in block 286.
Merging block 287 into block 286...
Merged blocks 286 and 287.
Merged 286 and 287 without moving.
Forwarding edge 285->286 to 289 failed.
Forwarding edge 285->286 to 289 failed.
Forwarding edge 302->303 to 308 failed.
Forwarding edge 316->317 to 331 failed.
Forwarding edge 318->319 to 390 failed.
Forwarding edge 342->343 to 351 failed.
Forwarding edge 370->371 to 376 failed.
Forwarding edge 399->400 to 331 failed.
Forwarding edge 404->405 to 216 failed.
Forwarding edge 407->408 to 107 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 14 failed.
Forwarding edge 12->13 to 9 failed.
Forwarding edge 18->19 to 20 failed.
Forwarding edge 36->37 to 40 failed.
Forwarding edge 42->43 to 44 failed.
Forwarding edge 45->46 to 47 failed.
Forwarding edge 49->50 to 51 failed.
Forwarding edge 53->54 to 51 failed.
Forwarding edge 65->66 to 68 failed.
Forwarding edge 76->77 to 106 failed.
Forwarding edge 78->79 to 107 failed.
Forwarding edge 86->87 to 407 failed.
Forwarding edge 116->117 to 120 failed.
Forwarding edge 122->123 to 124 failed.
Forwarding edge 142->143 to 148 failed.
Forwarding edge 189->190 to 193 failed.
Forwarding edge 200->201 to 204 failed.
Forwarding edge 204->205 to 207 failed.
Forwarding edge 233->234 to 236 failed.
Forwarding edge 237->238 to 280 failed.
Forwarding edge 246->247 to 241 failed.
Forwarding edge 264->265 to 268 failed.
Forwarding edge 266->267 to 274 failed.
Forwarding edge 285->286 to 289 failed.
Forwarding edge 302->303 to 308 failed.
Forwarding edge 316->317 to 331 failed.
Forwarding edge 318->319 to 390 failed.
Forwarding edge 342->343 to 351 failed.
Forwarding edge 370->371 to 376 failed.
Forwarding edge 399->400 to 331 failed.
Forwarding edge 404->405 to 216 failed.
Forwarding edge 407->408 to 107 failed.


;;
;; Full RTL generated for this function:
;;
(note 56 0 145 NOTE_INSN_DELETED)
(note 145 56 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 57 145 58 2 (set (reg/v/f:DI 703 [ pattern ])
        (reg:DI 5 di [ pattern ])) fnmatch_loop.c:43 -1
     (nil))
(insn 58 57 59 2 (set (reg/v/f:DI 704 [ string ])
        (reg:DI 4 si [ string ])) fnmatch_loop.c:43 -1
     (nil))
(insn 59 58 60 2 (set (reg/v/f:DI 705 [ string_end ])
        (reg:DI 1 dx [ string_end ])) fnmatch_loop.c:43 -1
     (nil))
(insn 60 59 61 2 (set (reg/v:SI 706 [ no_leading_period ])
        (reg:SI 2 cx [ no_leading_period ])) fnmatch_loop.c:43 -1
     (nil))
(insn 61 60 62 2 (set (reg/v:SI 707 [ flags ])
        (reg:SI 37 r8 [ flags ])) fnmatch_loop.c:43 -1
     (nil))
(insn 62 61 63 2 (set (reg/v/f:DI 708 [ ends ])
        (reg:DI 38 r9 [ ends ])) fnmatch_loop.c:43 -1
     (nil))
(insn 63 62 64 2 (set (reg/v:DI 709 [ alloca_used ])
        (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])) fnmatch_loop.c:43 -1
     (expr_list:REG_EQUIV (mem/c:DI (reg/f:DI 81 virtual-incoming-args) [6 alloca_used+0 S8 A64])
        (nil)))
(note 64 63 147 2 NOTE_INSN_FUNCTION_BEG)
(insn 147 64 148 2 (set (reg:DI 711)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:52 -1
     (nil))
(insn 148 147 149 2 (set (reg/f:DI 710)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 711)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:52 -1
     (nil))
(insn 149 148 150 2 (set (reg/f:DI 712)
        (mem/f:DI (plus:DI (reg/f:DI 710)
                (const_int 24 [0x18])) [1 _110->__locales+24 S8 A64])) fnmatch_loop.c:51 -1
     (nil))
(insn 150 149 151 2 (set (reg/v/f:DI 183 [ collseq ])
        (mem/f:DI (plus:DI (reg/f:DI 712)
                (const_int 192 [0xc0])) [0 _111->values[16].string+0 S8 A64])) fnmatch_loop.c:51 -1
     (nil))
(insn 151 150 153 2 (parallel [
            (set (reg:SI 160 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:171 -1
     (nil))
(insn 153 151 154 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 160 [ D.11944 ])
            (const_int 1 [0x1]))) -1
     (nil))
(insn 154 153 155 2 (parallel [
            (set (reg:SI 713)
                (if_then_else:SI (ltu:SI (reg:CC 17 flags)
                        (const_int 0 [0]))
                    (const_int -1 [0xffffffffffffffff])
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 155 154 156 2 (set (reg:SI 713)
        (not:SI (reg:SI 713))) -1
     (nil))
(insn 156 155 157 2 (parallel [
            (set (reg:SI 713)
                (and:SI (reg:SI 713)
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 157 156 158 2 (set (reg:SI 162 [ D.11944 ])
        (reg:SI 713)) -1
     (nil))
(insn 158 157 159 2 (parallel [
            (set (reg/v:SI 240 [ flags ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:182 -1
     (nil))
(insn 159 158 160 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 160 159 161 2 (set (reg:SI 714)
        (if_then_else:SI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 707 [ flags ])
            (reg/v:SI 240 [ flags ]))) -1
     (nil))
(insn 161 160 133 2 (set (reg/v:SI 163 [ flags ])
        (reg:SI 714)) -1
     (nil))
(insn 133 161 162 2 (set (reg/v/f:DI 147 [ np ])
        (reg/v/f:DI 704 [ string ])) fnmatch_loop.c:44 -1
     (nil))
(jump_insn 162 133 163 2 (set (pc)
        (label_ref 1869)) fnmatch_loop.c:56 -1
     (nil)
 -> 1869)
(barrier 163 162 1873)
(code_label 1873 163 164 4 968 "" [1 uses])
(note 164 1873 165 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 4 (parallel [
            (set (reg:SI 186 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:59 -1
     (nil))
(insn 166 165 167 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:59 -1
     (nil))
(jump_insn 167 166 168 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) fnmatch_loop.c:59 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 174)
(note 168 167 169 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 5 (set (reg:DI 715)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:59 -1
     (nil))
(insn 170 169 171 5 (set (reg:DI 716 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 159 [ c ]))) fnmatch_loop.c:59 -1
     (nil))
(insn 171 170 172 5 (set (reg/f:DI 717)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 715)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:59 -1
     (nil))
(insn 172 171 173 5 (set (reg/v:SI 191 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 716 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 717)) [2 *_123+0 S4 A32])) fnmatch_loop.c:59 -1
     (nil))
(insn 173 172 174 5 (set (reg/v:QI 159 [ c ])
        (subreg:QI (reg/v:SI 191 [ __res ]) 0)) fnmatch_loop.c:59 -1
     (nil))
(code_label 174 173 175 6 789 "" [1 uses])
(note 175 174 176 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 6 (parallel [
            (set (reg:QI 718)
                (plus:QI (reg/v:QI 159 [ c ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:61 -1
     (nil))
(insn 177 176 178 6 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 718)
            (const_int 59 [0x3b]))) fnmatch_loop.c:61 -1
     (nil))
(jump_insn 178 177 2044 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) fnmatch_loop.c:61 -1
     (int_list:REG_BR_PROB 714 (nil))
 -> 1840)
(note 2044 178 179 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 179 2044 180 7 (set (reg:DI 719)
        (zero_extend:DI (reg:QI 718))) fnmatch_loop.c:61 -1
     (nil))
(insn 180 179 181 7 (set (reg/f:DI 720)
        (label_ref:DI 186)) fnmatch_loop.c:61 -1
     (insn_list:REG_LABEL_OPERAND 186 (nil)))
(insn 181 180 182 7 (set (reg:SI 721)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 719)
                    (const_int 2 [0x2]))
                (reg/f:DI 720)) [0  S4 A8])) fnmatch_loop.c:61 -1
     (nil))
(insn 182 181 183 7 (set (reg:DI 722)
        (sign_extend:DI (reg:SI 721))) fnmatch_loop.c:61 -1
     (nil))
(insn 183 182 184 7 (set (reg:DI 724)
        (label_ref:DI 186)) fnmatch_loop.c:61 -1
     (insn_list:REG_LABEL_OPERAND 186 (nil)))
(insn 184 183 185 7 (parallel [
            (set (reg:DI 723)
                (plus:DI (reg:DI 722)
                    (reg:DI 724)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:61 -1
     (nil))
(jump_insn 185 184 186 7 (parallel [
            (set (pc)
                (reg:DI 723))
            (use (label_ref 186))
        ]) fnmatch_loop.c:61 -1
     (nil)
 -> 186)
(code_label 186 185 187 792 "" [3 uses])
(jump_table_data 187 186 188 (addr_diff_vec:SI (label_ref:DI 186)
         [
            (label_ref:DI 1800)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 298)
            (label_ref:DI 1800)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1826)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 189)
            (label_ref:DI 1800)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 1840)
            (label_ref:DI 627)
            (label_ref:DI 247)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 188 187 189)
(code_label 189 188 190 8 795 "" [1 uses])
(note 190 189 191 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 8 (parallel [
            (set (reg:SI 725 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:64 -1
     (nil))
(insn 192 191 193 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 725 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:64 -1
     (nil))
(jump_insn 193 192 202 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) fnmatch_loop.c:64 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 200)
(code_label 202 193 194 9 801 "" [2 uses])
(note 194 202 195 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:72 -1
     (nil))
(jump_insn 196 195 199 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:72 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 199 196 197 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 197 199 198 10 (set (pc)
        (label_ref 222)) -1
     (nil)
 -> 222)
(barrier 198 197 200)
(code_label 200 198 201 11 798 "" [1 uses])
(note 201 200 203 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 204 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:64 -1
     (nil))
(jump_insn 204 203 205 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) fnmatch_loop.c:64 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 202)
(note 205 204 206 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:66 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 207 206 208 12 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:66 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 208 207 209 12 (set (reg:SI 38 r9)
        (reg/v:SI 707 [ flags ])) fnmatch_loop.c:66 -1
     (nil))
(insn 209 208 210 12 (set (reg:SI 37 r8)
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:66 -1
     (nil))
(insn 210 209 211 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:66 -1
     (nil))
(insn 211 210 212 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:66 -1
     (nil))
(insn 212 211 213 12 (set (reg:DI 4 si)
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:66 -1
     (nil))
(insn 213 212 214 12 (set (reg:SI 5 di)
        (const_int 63 [0x3f])) fnmatch_loop.c:66 -1
     (nil))
(call_insn 214 213 215 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>) [0 ext_match S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:66 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 215 214 216 12 (set (reg/v:SI 528 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:66 -1
     (nil))
(insn 216 215 217 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:68 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 217 216 218 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 528 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:68 -1
     (nil))
(jump_insn 218 217 221 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1963)
            (pc))) fnmatch_loop.c:68 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1963)
(note 221 218 219 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 219 221 220 13 (set (pc)
        (label_ref 202)) -1
     (nil)
 -> 202)
(barrier 220 219 222)
(code_label 222 220 223 14 800 "" [1 uses])
(note 223 222 224 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 14 (set (reg:QI 526 [ D.11951 ])
        (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])) fnmatch_loop.c:74 -1
     (nil))
(insn 225 224 226 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 526 [ D.11951 ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:74 -1
     (nil))
(jump_insn 226 225 227 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) fnmatch_loop.c:74 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 233)
(note 227 226 228 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:74 -1
     (nil))
(jump_insn 229 228 232 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:74 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 232 229 131 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 131 232 230 16 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 230 131 231 16 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 231 230 233)
(code_label 233 231 234 17 803 "" [1 uses])
(note 234 233 235 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 526 [ D.11951 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:76 -1
     (nil))
(insn 236 235 237 17 (set (reg:QI 727 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 237 236 238 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 727 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(jump_insn 238 237 2045 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2068)
            (pc))) fnmatch_loop.c:76 612 {*jcc_1}
     (int_list:REG_BR_PROB 4900 (nil))
 -> 2068)
(note 2045 238 239 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 239 2045 240 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 706 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 240 239 241 18 (set (reg:QI 729 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(insn 241 240 242 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 729 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:76 -1
     (nil))
(jump_insn 242 241 2046 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:76 -1
     (int_list:REG_BR_PROB 392 (nil))
 -> 1886)
(note 2046 242 2068 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(code_label 2068 2046 246 20 993 "" [1 uses])
(note 246 2068 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 124 246 244 20 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 244 124 245 20 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 245 244 247)
(code_label 247 245 248 21 797 "" [1 uses])
(note 248 247 249 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 21 (parallel [
            (set (reg:SI 730 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:81 -1
     (nil))
(insn 250 249 251 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 730 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:81 -1
     (nil))
(jump_insn 251 250 252 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) fnmatch_loop.c:81 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 272)
(note 252 251 253 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 22 (parallel [
            (set (reg/v/f:DI 146 [ pattern ])
                (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:83 -1
     (nil))
(insn 254 253 255 22 (set (reg/v:QI 252 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])) fnmatch_loop.c:83 -1
     (nil))
(insn 255 254 256 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 252 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:84 -1
     (nil))
(jump_insn 256 255 257 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:84 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 257 256 258 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:87 -1
     (nil))
(jump_insn 259 258 260 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1908)
            (pc))) fnmatch_loop.c:87 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1908)
(note 260 259 261 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 24 (set (reg:DI 731)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:87 -1
     (nil))
(insn 262 261 263 24 (set (reg/f:DI 698 [ D.11952 ])
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 731)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:87 -1
     (nil))
(insn 263 262 264 24 (set (reg:DI 732 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 252 [ c ]))) fnmatch_loop.c:87 -1
     (nil))
(insn 264 263 265 24 (set (reg/v:SI 256 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 732 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 698 [ D.11952 ])) [2 *_239+0 S4 A32])) fnmatch_loop.c:87 -1
     (nil))
(insn 265 264 266 24 (set (reg/v:QI 257 [ c ])
        (subreg:QI (reg/v:SI 256 [ __res ]) 0)) fnmatch_loop.c:87 -1
     (nil))
(insn 266 265 267 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 267 266 268 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 268 267 269 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 25 (set (reg:SI 697 [ D.11944 ])
        (zero_extend:SI (subreg:QI (reg/v:SI 256 [ __res ]) 0))) -1
     (nil))
(jump_insn 270 269 271 25 (set (pc)
        (label_ref 282)) -1
     (nil)
 -> 282)
(barrier 271 270 272)
(code_label 272 271 273 26 806 "" [1 uses])
(note 273 272 274 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 275 274 276 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 276 275 277 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 278 277 279 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1965)
            (pc))) fnmatch_loop.c:89 612 {*jcc_1}
     (int_list:REG_BR_PROB 5017 (nil))
 -> 1965)
(note 279 278 280 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 28 (set (reg:DI 733)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) -1
     (nil))
(insn 281 280 65 28 (set (reg/f:DI 698 [ D.11952 ])
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 733)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) -1
     (nil))
(insn 65 281 282 28 (set (reg:SI 697 [ D.11944 ])
        (const_int 92 [0x5c])) fnmatch_loop.c:89 -1
     (nil))
(code_label 282 65 283 29 808 "" [1 uses])
(note 283 282 284 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 29 (set (reg:DI 734 [ D.11940 ])
        (zero_extend:DI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8]))) fnmatch_loop.c:89 -1
     (nil))
(insn 285 284 67 29 (set (reg/v:SI 263 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 734 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 698 [ D.11952 ])) [2 *_247+0 S4 A32])) fnmatch_loop.c:89 -1
     (nil))
(insn 67 285 286 29 (set (reg:SI 161 [ D.11944 ])
        (reg/v:SI 263 [ __res ])) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 286 67 287 29 (set (pc)
        (label_ref 291)) -1
     (nil)
 -> 291)
(barrier 287 286 1965)
(code_label 1965 287 1964 30 974 "" [1 uses])
(note 1964 1965 66 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 66 1964 288 30 (set (reg:SI 697 [ D.11944 ])
        (const_int 92 [0x5c])) -1
     (nil))
(code_label 288 66 289 31 809 "" [1 uses])
(note 289 288 290 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 31 (set (reg:SI 161 [ D.11944 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8]))) fnmatch_loop.c:89 -1
     (nil))
(code_label 291 290 292 32 810 "" [1 uses])
(note 292 291 293 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ D.11944 ])
            (reg:SI 697 [ D.11944 ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 294 293 297 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 297 294 125 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 125 297 295 33 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 295 125 296 33 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 296 295 298)
(code_label 298 296 299 34 793 "" [1 uses])
(note 299 298 300 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 34 (parallel [
            (set (reg:SI 545 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 301 300 302 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 545 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:94 -1
     (nil))
(jump_insn 302 301 303 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) fnmatch_loop.c:94 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 323)
(note 303 302 304 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:94 -1
     (nil))
(jump_insn 305 304 306 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) fnmatch_loop.c:94 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 323)
(note 306 305 307 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:96 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 308 307 309 36 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:96 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 309 308 310 36 (set (reg:SI 38 r9)
        (reg/v:SI 707 [ flags ])) fnmatch_loop.c:96 -1
     (nil))
(insn 310 309 311 36 (set (reg:SI 37 r8)
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:96 -1
     (nil))
(insn 311 310 312 36 (set (reg:DI 2 cx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:96 -1
     (nil))
(insn 312 311 313 36 (set (reg:DI 1 dx)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:96 -1
     (nil))
(insn 313 312 314 36 (set (reg:DI 4 si)
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:96 -1
     (nil))
(insn 314 313 315 36 (set (reg:SI 5 di)
        (const_int 42 [0x2a])) fnmatch_loop.c:96 -1
     (nil))
(call_insn 315 314 316 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>) [0 ext_match S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:96 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 316 315 317 36 (set (reg/v:SI 194 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:96 -1
     (nil))
(insn 317 316 318 36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:98 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 318 317 319 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 194 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:98 -1
     (nil))
(jump_insn 319 318 322 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1969)
            (pc))) fnmatch_loop.c:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1969)
(note 322 319 320 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(jump_insn 320 322 321 37 (set (pc)
        (label_ref 333)) -1
     (nil)
 -> 333)
(barrier 321 320 323)
(code_label 323 321 324 38 811 "" [2 uses])
(note 324 323 325 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 708 [ ends ])
            (const_int 0 [0]))) fnmatch_loop.c:101 -1
     (nil))
(jump_insn 326 325 327 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) fnmatch_loop.c:101 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 333)
(note 327 326 328 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 39 (set (mem/f:DI (reg/v/f:DI 708 [ ends ]) [1 ends_138(D)->pattern+0 S8 A128])
        (reg/v/f:DI 703 [ pattern ])) fnmatch_loop.c:103 -1
     (nil))
(insn 329 328 330 39 (set (mem/f:DI (plus:DI (reg/v/f:DI 708 [ ends ])
                (const_int 8 [0x8])) [1 ends_138(D)->string+0 S8 A64])
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:104 -1
     (nil))
(insn 330 329 140 39 (set (mem:SI (plus:DI (reg/v/f:DI 708 [ ends ])
                (const_int 16 [0x10])) [2 ends_138(D)->no_leading_period+0 S4 A128])
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:105 -1
     (nil))
(insn 140 330 331 39 (set (reg:SI 160 [ D.11944 ])
        (const_int 0 [0])) fnmatch_loop.c:106 -1
     (nil))
(jump_insn 331 140 332 39 (set (pc)
        (label_ref 1888)) fnmatch_loop.c:106 -1
     (nil)
 -> 1888)
(barrier 332 331 333)
(code_label 333 332 334 40 812 "" [2 uses])
(note 334 333 335 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 336 335 337 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 347)
            (pc))) fnmatch_loop.c:109 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 347)
(note 337 336 338 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])
            (const_int 46 [0x2e]))) fnmatch_loop.c:109 -1
     (nil))
(insn 339 338 340 41 (set (reg:QI 736 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 340 339 341 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 736 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 341 340 2047 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) fnmatch_loop.c:109 612 {*jcc_1}
     (int_list:REG_BR_PROB 4900 (nil))
 -> 347)
(note 2047 341 342 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 342 2047 343 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 706 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 343 342 344 42 (set (reg:QI 738 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(insn 344 343 345 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 738 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:109 -1
     (nil))
(jump_insn 345 344 2048 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:109 -1
     (int_list:REG_BR_PROB 392 (nil))
 -> 1886)
(note 2048 345 347 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(code_label 347 2048 348 44 813 "" [2 uses])
(note 348 347 349 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 44 (parallel [
            (set (reg/v/f:DI 206 [ p ])
                (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:112 -1
     (nil))
(insn 350 349 351 44 (set (reg/v:QI 208 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])) fnmatch_loop.c:112 -1
     (nil))
(insn 351 350 352 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 42 [0x2a]))) fnmatch_loop.c:112 -1
     (nil))
(insn 352 351 353 44 (set (reg:QI 740 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 353 352 354 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 740 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 354 353 2049 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2069)
            (pc))) fnmatch_loop.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 4850 (nil))
 -> 2069)
(note 2049 354 355 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 355 2049 356 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:112 -1
     (nil))
(insn 356 355 357 45 (set (reg:QI 742 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 357 356 358 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 742 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 358 357 2050 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 415)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 583 (nil))
 -> 415)
(note 2050 358 2069 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(code_label 2069 2050 360 47 994 "" [1 uses])
(note 360 2069 361 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 545 [ D.11944 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 362 361 363 47 (set (reg:QI 743)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 363 362 406 47 (set (reg:QI 696 [ D.11946 ])
        (reg:QI 743)) -1
     (nil))
(code_label 406 363 364 48 823 "" [2 uses])
(note 364 406 365 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 206 [ p ]) [0 *p_997+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:114 -1
     (nil))
(insn 366 365 367 48 (set (reg:QI 745 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(insn 367 366 368 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 745 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(jump_insn 368 367 2051 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 385)
            (pc))) fnmatch_loop.c:114 612 {*jcc_1}
     (int_list:REG_BR_PROB 3550 (nil))
 -> 385)
(note 2051 368 369 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 369 2051 370 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 696 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:114 -1
     (nil))
(jump_insn 370 369 2052 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) fnmatch_loop.c:114 -1
     (int_list:REG_BR_PROB 4496 (nil))
 -> 378)
(note 2052 370 385 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(code_label 385 2052 372 51 821 "" [2 uses])
(note 372 385 373 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:125 -1
     (nil))
(jump_insn 374 373 377 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 389)
            (pc))) fnmatch_loop.c:125 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 389)
(note 377 374 68 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 68 377 375 52 (set (reg/v/f:DI 143 [ p ])
        (reg/v/f:DI 206 [ p ])) -1
     (nil))
(jump_insn 375 68 376 52 (set (pc)
        (label_ref 402)) -1
     (nil)
 -> 402)
(barrier 376 375 378)
(code_label 378 376 379 53 817 "" [1 uses])
(note 379 378 380 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 53 (set (reg:DI 5 di)
        (reg/v/f:DI 206 [ p ])) fnmatch_loop.c:116 -1
     (nil))
(call_insn 381 380 382 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("end_pattern") [flags 0x3]  <function_decl 0x2aeef6edf438 end_pattern>) [0 end_pattern S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("end_pattern") [flags 0x3]  <function_decl 0x2aeef6edf438 end_pattern>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 382 381 383 53 (set (reg/v/f:DI 143 [ p ])
        (reg:DI 0 ax)) fnmatch_loop.c:116 -1
     (nil))
(insn 383 382 384 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 143 [ p ])
            (reg/v/f:DI 206 [ p ]))) fnmatch_loop.c:117 -1
     (nil))
(jump_insn 384 383 388 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 402)
            (pc))) fnmatch_loop.c:117 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 402)
(note 388 384 386 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 386 388 387 54 (set (pc)
        (label_ref 385)) -1
     (nil)
 -> 385)
(barrier 387 386 389)
(code_label 389 387 390 55 819 "" [1 uses])
(note 390 389 391 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 705 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:128 -1
     (nil))
(jump_insn 392 391 393 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:128 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1886)
(note 393 392 394 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_995]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:131 -1
     (nil))
(jump_insn 395 394 396 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) fnmatch_loop.c:131 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 399)
(note 396 395 397 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:132 -1
     (nil))
(jump_insn 398 397 399 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:132 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 1886)
(code_label 399 398 400 58 822 "" [1 uses])
(note 400 399 401 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 69 58 (parallel [
            (set (reg/v/f:DI 147 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:140 -1
     (nil))
(insn 69 401 402 58 (set (reg/v/f:DI 143 [ p ])
        (reg/v/f:DI 206 [ p ])) fnmatch_loop.c:140 -1
     (nil))
(code_label 402 69 403 59 820 "" [2 uses])
(note 403 402 404 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 59 (parallel [
            (set (reg/v/f:DI 206 [ p ])
                (plus:DI (reg/v/f:DI 143 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:112 -1
     (nil))
(insn 405 404 407 59 (set (reg/v:QI 208 [ c ])
        (mem:QI (reg/v/f:DI 143 [ p ]) [0 *p_5+0 S1 A8])) fnmatch_loop.c:112 -1
     (nil))
(insn 407 405 408 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 63 [0x3f]))) fnmatch_loop.c:112 -1
     (nil))
(insn 408 407 409 59 (set (reg:QI 747 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 409 408 410 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 747 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 410 409 2053 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 4850 (nil))
 -> 406)
(note 2053 410 411 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 411 2053 412 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 42 [0x2a]))) fnmatch_loop.c:112 -1
     (nil))
(insn 412 411 413 60 (set (reg:QI 749 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(insn 413 412 414 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 749 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:112 -1
     (nil))
(jump_insn 414 413 415 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) fnmatch_loop.c:112 -1
     (int_list:REG_BR_PROB 9417 (nil))
 -> 406)
(code_label 415 414 416 61 815 "" [1 uses])
(note 416 415 417 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:144 -1
     (nil))
(jump_insn 418 417 419 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) fnmatch_loop.c:144 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 439)
(note 419 418 420 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:152 -1
     (nil))
(jump_insn 421 420 422 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1888)
            (pc))) fnmatch_loop.c:152 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 1888)
(note 422 421 423 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 63 (parallel [
            (set (reg:SI 750 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:154 -1
     (nil))
(insn 424 423 425 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 750 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:154 -1
     (nil))
(jump_insn 425 424 426 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1973)
            (pc))) fnmatch_loop.c:154 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 1973)
(note 426 425 427 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 64 (parallel [
            (set (reg:DI 751 [ D.11953 ])
                (minus:DI (reg/v/f:DI 705 [ string_end ])
                    (reg/v/f:DI 147 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:158 -1
     (nil))
(insn 428 427 429 64 (set (reg:DI 1 dx)
        (reg:DI 751 [ D.11953 ])) fnmatch_loop.c:158 -1
     (nil))
(insn 429 428 430 64 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) fnmatch_loop.c:158 -1
     (nil))
(insn 430 429 431 64 (set (reg:DI 5 di)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:158 -1
     (nil))
(call_insn/i 431 430 432 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memchr") [flags 0x43]  <function_decl 0x2aeef6989af8 memchr>) [0 __builtin_memchr S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memchr") [flags 0x43]  <function_decl 0x2aeef6989af8 memchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 432 431 433 64 (set (reg/f:DI 249 [ D.11947 ])
        (reg:DI 0 ax)) fnmatch_loop.c:158 -1
     (nil))
(insn 433 432 434 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 249 [ D.11947 ])
            (const_int 0 [0]))) fnmatch_loop.c:66 -1
     (nil))
(insn 434 433 435 64 (set (reg:QI 753)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:66 -1
     (nil))
(insn 435 434 436 64 (set (reg:SI 752 [ D.11946 ])
        (zero_extend:SI (reg:QI 753))) fnmatch_loop.c:66 -1
     (nil))
(insn 436 435 437 64 (set (reg:SI 160 [ D.11944 ])
        (reg:SI 752 [ D.11946 ])) fnmatch_loop.c:66 -1
     (nil))
(jump_insn 437 436 438 64 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 438 437 439)
(code_label 439 438 440 65 824 "" [1 uses])
(note 440 439 441 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 65 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [1 end.pattern+0 S8 A128])
        (const_int 0 [0])) fnmatch_loop.c:170 -1
     (nil))
(insn 442 441 443 65 (parallel [
            (set (reg:DI 212 [ D.11940 ])
                (minus:DI (reg/v/f:DI 705 [ string_end ])
                    (reg/v/f:DI 147 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:171 -1
     (nil))
(insn 443 442 444 65 (set (reg:DI 1 dx)
        (reg:DI 212 [ D.11940 ])) fnmatch_loop.c:171 -1
     (nil))
(insn 444 443 445 65 (set (reg:SI 4 si)
        (reg:SI 162 [ D.11944 ])) fnmatch_loop.c:171 -1
     (nil))
(insn 445 444 446 65 (set (reg:DI 5 di)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:171 -1
     (nil))
(call_insn/i 446 445 447 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memchr") [flags 0x43]  <function_decl 0x2aeef6989af8 memchr>) [0 __builtin_memchr S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memchr") [flags 0x43]  <function_decl 0x2aeef6989af8 memchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 447 446 448 65 (set (reg/v/f:DI 149 [ string_end ])
        (reg:DI 0 ax)) fnmatch_loop.c:171 -1
     (nil))
(insn 448 447 449 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 149 [ string_end ])
            (const_int 0 [0]))) fnmatch_loop.c:173 -1
     (nil))
(jump_insn 449 448 450 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1977)
            (pc))) fnmatch_loop.c:173 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1977)
(note 450 449 1974 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1974 450 1975 66 (set (pc)
        (label_ref 451)) -1
     (nil)
 -> 451)
(barrier 1975 1974 1977)
(code_label 1977 1975 1976 67 977 "" [1 uses])
(note 1976 1977 70 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 70 1976 451 67 (set (reg/v/f:DI 149 [ string_end ])
        (reg/v/f:DI 705 [ string_end ])) -1
     (nil))
(code_label 451 70 452 68 825 "" [1 uses])
(note 452 451 453 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:176 -1
     (nil))
(jump_insn 454 453 455 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) fnmatch_loop.c:176 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 474)
(note 455 454 456 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 545 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:177 -1
     (nil))
(jump_insn 457 456 458 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) fnmatch_loop.c:177 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 512)
(note 458 457 459 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 70 (parallel [
            (set (reg:QI 298 [ D.11942 ])
                (plus:QI (reg/v:QI 208 [ c ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 460 459 461 70 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 298 [ D.11942 ])
            (const_int 31 [0x1f]))) fnmatch_loop.c:178 -1
     (nil))
(jump_insn 461 460 462 70 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) fnmatch_loop.c:178 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 537)
(note 462 461 463 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 463 462 464 71 (set (reg:SI 754 [ D.11944 ])
        (zero_extend:SI (reg:QI 298 [ D.11942 ]))) fnmatch_loop.c:178 -1
     (nil))
(insn 464 463 465 71 (set (reg:DI 756)
        (const_int 2147484673 [0x80000401])) fnmatch_loop.c:178 -1
     (nil))
(insn 465 464 466 71 (parallel [
            (set (reg:DI 755 [ D.11940 ])
                (lshiftrt:DI (reg:DI 756)
                    (subreg:QI (reg:SI 754 [ D.11944 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 466 465 467 71 (parallel [
            (set (reg:DI 757 [ D.11940 ])
                (and:DI (reg:DI 755 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 467 466 468 71 (parallel [
            (set (reg:DI 758 [ D.11940 ])
                (xor:DI (reg:DI 757 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 468 467 469 71 (parallel [
            (set (reg:QI 759 [ D.11946 ])
                (and:QI (subreg:QI (reg:DI 758 [ D.11940 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:178 -1
     (nil))
(insn 469 468 470 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 759 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:178 -1
     (nil))
(jump_insn 470 469 471 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) fnmatch_loop.c:178 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 512)
(note 471 470 472 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 206 [ p ]) [0 *p_996+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:179 -1
     (nil))
(jump_insn 473 472 474 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) fnmatch_loop.c:179 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 512)
(code_label 474 473 475 73 826 "" [1 uses])
(note 475 474 476 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 73 (parallel [
            (set (reg/v/f:DI 241 [ p ])
                (plus:DI (reg/v/f:DI 206 [ p ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:184 -1
     (nil))
(insn 477 476 478 73 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 149 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:184 -1
     (nil))
(jump_insn 478 477 479 73 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) fnmatch_loop.c:184 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 619)
(note 479 478 506 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(code_label 506 479 480 75 833 "" [1 uses])
(note 480 506 481 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 75 (parallel [
            (set (reg:DI 760)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (nil))
(insn 482 481 483 75 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 483 482 484 75 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 484 483 485 75 (set (reg:DI 38 r9)
        (reg:DI 760)) fnmatch_loop.c:185 -1
     (nil))
(insn 485 484 486 75 (set (reg:SI 37 r8)
        (reg/v:SI 163 [ flags ])) fnmatch_loop.c:185 -1
     (nil))
(insn 486 485 487 75 (set (reg:SI 2 cx)
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:185 -1
     (nil))
(insn 487 486 488 75 (set (reg:DI 1 dx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:185 -1
     (nil))
(insn 488 487 489 75 (set (reg:DI 4 si)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:185 -1
     (nil))
(insn 489 488 490 75 (set (reg:DI 5 di)
        (reg/v/f:DI 241 [ p ])) fnmatch_loop.c:185 -1
     (nil))
(call_insn 490 489 491 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 491 490 492 75 (set (reg:SI 242 [ D.11944 ])
        (reg:SI 0 ax)) fnmatch_loop.c:185 -1
     (nil))
(insn 492 491 493 75 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:185 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 493 492 494 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:185 -1
     (nil))
(jump_insn 494 493 598 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 502)
            (pc))) fnmatch_loop.c:185 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 502)
(code_label 598 494 495 76 842 "" [1 uses])
(note 495 598 496 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 76 (set (reg/v/f:DI 703 [ pattern ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [1 end.pattern+0 S8 A128])) fnmatch_loop.c:212 -1
     (nil))
(insn 497 496 498 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 703 [ pattern ])
            (const_int 0 [0]))) fnmatch_loop.c:212 -1
     (nil))
(jump_insn 498 497 501 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) fnmatch_loop.c:212 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 623)
(note 501 498 499 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn 499 501 500 77 (set (pc)
        (label_ref 613)) -1
     (nil)
 -> 613)
(barrier 500 499 502)
(code_label 502 500 503 78 830 "" [1 uses])
(note 503 502 504 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 78 (parallel [
            (set (reg/v/f:DI 147 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:184 -1
     (nil))
(insn 505 504 507 78 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:184 -1
     (nil))
(insn 507 505 508 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 149 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:184 -1
     (nil))
(jump_insn 508 507 511 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 506)
            (pc))) fnmatch_loop.c:184 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 506)
(note 511 508 509 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(jump_insn 509 511 510 79 (set (pc)
        (label_ref 619)) -1
     (nil)
 -> 619)
(barrier 510 509 512)
(code_label 512 510 513 80 827 "" [3 uses])
(note 513 512 514 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:189 -1
     (nil))
(jump_insn 515 514 516 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) fnmatch_loop.c:189 -1
     (int_list:REG_BR_PROB 7044 (nil))
 -> 537)
(note 516 515 517 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:189 -1
     (nil))
(jump_insn 518 517 519 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1981)
            (pc))) fnmatch_loop.c:189 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1981)
(note 519 518 520 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 82 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 705 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 521 520 522 82 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 619)
(note 522 521 523 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 523 522 524 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_992]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 524 523 525 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1936)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1936)
(note 525 524 531 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(code_label 531 525 526 85 836 "" [1 uses])
(note 526 531 527 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 527 526 528 85 (parallel [
            (set (reg/v/f:DI 147 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:192 -1
     (nil))
(insn 528 527 529 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 705 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 529 528 530 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 619)
(note 530 529 532 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 532 530 533 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[base: np_179, offset: 0B]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:191 -1
     (nil))
(jump_insn 533 532 536 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 531)
            (pc))) fnmatch_loop.c:191 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 531)
(note 536 533 534 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(jump_insn 534 536 535 87 (set (pc)
        (label_ref 1936)) -1
     (nil)
 -> 1936)
(barrier 535 534 537)
(code_label 537 535 538 88 828 "" [2 uses])
(note 538 537 539 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 540 539 541 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1985)
            (pc))) fnmatch_loop.c:201 612 {*jcc_1}
     (int_list:REG_BR_PROB 3100 (nil))
 -> 1985)
(note 541 540 72 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 72 541 1978 89 (set (reg/v:SI 164 [ flags ])
        (reg/v:SI 707 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 1978 72 1979 89 (set (pc)
        (label_ref 542)) -1
     (nil)
 -> 542)
(barrier 1979 1978 1981)
(code_label 1981 1979 1980 90 978 "" [1 uses])
(note 1980 1981 71 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 71 1980 1982 90 (set (reg/v:SI 164 [ flags ])
        (reg/v:SI 240 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(jump_insn 1982 71 1983 90 (set (pc)
        (label_ref 542)) -1
     (nil)
 -> 542)
(barrier 1983 1982 1985)
(code_label 1985 1983 1984 91 979 "" [1 uses])
(note 1984 1985 73 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 73 1984 542 91 (set (reg/v:SI 164 [ flags ])
        (reg/v:SI 240 [ flags ])) fnmatch_loop.c:201 -1
     (nil))
(code_label 542 73 543 92 834 "" [2 uses])
(note 543 542 544 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 208 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:203 -1
     (nil))
(jump_insn 545 544 546 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) fnmatch_loop.c:203 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 552)
(note 546 545 547 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 93 (parallel [
            (set (reg:SI 761 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:203 -1
     (nil))
(insn 548 547 549 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 761 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:203 -1
     (nil))
(jump_insn 549 548 550 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) fnmatch_loop.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 552)
(note 550 549 551 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 94 (set (reg/v:QI 208 [ c ])
        (mem:QI (reg/v/f:DI 206 [ p ]) [0 *p_996+0 S1 A8])) fnmatch_loop.c:204 -1
     (nil))
(code_label 552 551 553 95 837 "" [2 uses])
(note 553 552 554 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:205 -1
     (nil))
(jump_insn 555 554 556 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 562)
            (pc))) fnmatch_loop.c:205 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 562)
(note 556 555 557 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 96 (set (reg:DI 762)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:205 -1
     (nil))
(insn 558 557 559 96 (set (reg:DI 763 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 208 [ c ]))) fnmatch_loop.c:205 -1
     (nil))
(insn 559 558 560 96 (set (reg/f:DI 764)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 762)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:205 -1
     (nil))
(insn 560 559 561 96 (set (reg/v:SI 228 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 763 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 764)) [2 *_193+0 S4 A32])) fnmatch_loop.c:205 -1
     (nil))
(insn 561 560 562 96 (set (reg/v:QI 208 [ c ])
        (subreg:QI (reg/v:SI 228 [ __res ]) 0)) fnmatch_loop.c:205 -1
     (nil))
(code_label 562 561 563 97 838 "" [1 uses])
(note 563 562 564 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 97 (parallel [
            (set (reg/v/f:DI 229 [ p ])
                (plus:DI (reg/v/f:DI 206 [ p ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:206 -1
     (nil))
(insn 565 564 566 97 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 149 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:206 -1
     (nil))
(jump_insn 566 565 567 97 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) fnmatch_loop.c:206 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 619)
(note 567 566 568 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 606 98 (set (reg:SI 695 [ D.11944 ])
        (zero_extend:SI (reg/v:QI 208 [ c ]))) -1
     (nil))
(code_label 606 568 569 99 843 "" [1 uses])
(note 569 606 570 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 570 569 571 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 571 570 572 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 579)
            (pc))) fnmatch_loop.c:207 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 579)
(note 572 571 573 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 573 572 574 100 (set (reg:DI 765)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:207 -1
     (nil))
(insn 574 573 575 100 (set (reg:DI 766 [ D.11940 ])
        (zero_extend:DI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[base: np_872, offset: 0B]+0 S1 A8]))) fnmatch_loop.c:207 -1
     (nil))
(insn 575 574 576 100 (set (reg/f:DI 767)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 765)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:207 -1
     (nil))
(insn 576 575 74 100 (set (reg/v:SI 236 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 766 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 767)) [2 *_202+0 S4 A32])) fnmatch_loop.c:207 -1
     (nil))
(insn 74 576 577 100 (set (reg:SI 165 [ D.11944 ])
        (reg/v:SI 236 [ __res ])) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 577 74 578 100 (set (pc)
        (label_ref 582)) -1
     (nil)
 -> 582)
(barrier 578 577 579)
(code_label 579 578 580 101 839 "" [1 uses])
(note 580 579 581 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 582 101 (set (reg:SI 165 [ D.11944 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[base: np_872, offset: 0B]+0 S1 A8]))) fnmatch_loop.c:207 -1
     (nil))
(code_label 582 581 583 102 840 "" [1 uses])
(note 583 582 584 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.11944 ])
            (reg:SI 695 [ D.11944 ]))) fnmatch_loop.c:207 -1
     (nil))
(jump_insn 585 584 586 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 602)
            (pc))) fnmatch_loop.c:207 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 602)
(note 586 585 587 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 103 (parallel [
            (set (reg:DI 768)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (nil))
(insn 588 587 589 103 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 589 588 590 103 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 590 589 591 103 (set (reg:DI 38 r9)
        (reg:DI 768)) fnmatch_loop.c:208 -1
     (nil))
(insn 591 590 592 103 (set (reg:SI 37 r8)
        (reg/v:SI 164 [ flags ])) fnmatch_loop.c:208 -1
     (nil))
(insn 592 591 593 103 (set (reg:SI 2 cx)
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:208 -1
     (nil))
(insn 593 592 594 103 (set (reg:DI 1 dx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:208 -1
     (nil))
(insn 594 593 595 103 (set (reg:DI 4 si)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:208 -1
     (nil))
(insn 595 594 596 103 (set (reg:DI 5 di)
        (reg/v/f:DI 229 [ p ])) fnmatch_loop.c:208 -1
     (nil))
(call_insn 596 595 597 103 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:208 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 597 596 599 103 (set (reg:SI 239 [ D.11944 ])
        (reg:SI 0 ax)) fnmatch_loop.c:208 -1
     (nil))
(insn 599 597 600 103 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:208 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 600 599 601 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 239 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:208 -1
     (nil))
(jump_insn 601 600 602 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 598)
            (pc))) fnmatch_loop.c:208 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 598)
(code_label 602 601 603 104 841 "" [1 uses])
(note 603 602 604 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 604 603 605 104 (parallel [
            (set (reg/v/f:DI 147 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:206 -1
     (nil))
(insn 605 604 607 104 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:206 -1
     (nil))
(insn 607 605 608 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 149 [ string_end ])
            (reg/v/f:DI 147 [ np ]))) fnmatch_loop.c:206 -1
     (nil))
(jump_insn 608 607 609 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 606)
            (pc))) fnmatch_loop.c:206 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 606)
(note 609 608 610 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 105 (set (reg/v/f:DI 703 [ pattern ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [1 end.pattern+0 S8 A128])) fnmatch_loop.c:216 -1
     (nil))
(insn 611 610 612 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 703 [ pattern ])
            (const_int 0 [0]))) fnmatch_loop.c:216 -1
     (nil))
(jump_insn 612 611 613 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 619)
            (pc))) fnmatch_loop.c:216 -1
     (int_list:REG_BR_PROB 909 (nil))
 -> 619)
(code_label 613 612 614 106 832 "" [1 uses])
(note 614 613 615 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 106 (set (reg/v/f:DI 147 [ np ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2056 [0xfffffffffffff7f8])) [1 end.string+0 S8 A64])) fnmatch_loop.c:219 -1
     (nil))
(insn 616 615 617 106 (set (reg/v:SI 706 [ no_leading_period ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2048 [0xfffffffffffff800])) [2 end.no_leading_period+0 S4 A128])) fnmatch_loop.c:220 -1
     (nil))
(jump_insn 617 616 618 106 (set (pc)
        (label_ref 1867)) fnmatch_loop.c:221 -1
     (nil)
 -> 1867)
(barrier 618 617 619)
(code_label 619 618 620 107 829 "" [7 uses])
(note 620 619 144 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 144 620 621 107 (set (reg:SI 160 [ D.11944 ])
        (const_int 1 [0x1])) fnmatch_loop.c:227 -1
     (nil))
(jump_insn 621 144 622 107 (set (pc)
        (label_ref 1888)) fnmatch_loop.c:227 -1
     (nil)
 -> 1888)
(barrier 622 621 623)
(code_label 623 622 624 108 831 "" [2 uses])
(note 624 623 138 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 138 624 625 108 (set (reg:SI 160 [ D.11944 ])
        (const_int 0 [0])) fnmatch_loop.c:196 -1
     (nil))
(jump_insn 625 138 626 108 (set (pc)
        (label_ref 1888)) fnmatch_loop.c:196 -1
     (nil)
 -> 1888)
(barrier 626 625 627)
(code_label 627 626 628 109 796 "" [1 uses])
(note 628 627 629 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 630 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 0 [0]))) fnmatch_loop.c:238 -1
     (nil))
(jump_insn 630 629 631 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 641)
            (pc))) fnmatch_loop.c:238 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 641)
(note 631 630 632 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aeef719e510 *.LC0>)) fnmatch_loop.c:239 -1
     (nil))
(call_insn 633 632 634 110 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:239 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2aeef6b35e58 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 634 633 635 110 (set (reg/f:DI 267 [ D.11954 ])
        (reg:DI 0 ax)) fnmatch_loop.c:239 -1
     (nil))
(insn 635 634 636 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 267 [ D.11954 ])
            (const_int 0 [0]))) fnmatch_loop.c:239 -1
     (nil))
(jump_insn 636 635 637 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1989)
            (pc))) fnmatch_loop.c:239 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1989)
(note 637 636 75 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 75 637 1986 111 (set (reg:SI 166 [ D.11944 ])
        (const_int 1 [0x1])) fnmatch_loop.c:239 -1
     (nil))
(jump_insn 1986 75 1987 111 (set (pc)
        (label_ref 638)) -1
     (nil)
 -> 638)
(barrier 1987 1986 1989)
(code_label 1989 1987 1988 112 980 "" [1 uses])
(note 1988 1989 76 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 76 1988 638 112 (set (reg:SI 166 [ D.11944 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch_loop.c:239 -1
     (nil))
(code_label 638 76 639 113 846 "" [1 uses])
(note 639 638 640 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 640 639 641 113 (set (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
        (reg:SI 166 [ D.11944 ])) fnmatch_loop.c:239 -1
     (nil))
(code_label 641 640 642 114 845 "" [1 uses])
(note 642 641 643 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 643 642 644 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:241 -1
     (nil))
(jump_insn 644 643 645 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:241 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 645 644 646 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 647 115 (set (reg:QI 268 [ D.11951 ])
        (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])) fnmatch_loop.c:244 -1
     (nil))
(insn 647 646 648 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 268 [ D.11951 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:244 -1
     (nil))
(jump_insn 648 647 649 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 655)
            (pc))) fnmatch_loop.c:244 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 655)
(note 649 648 650 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 706 [ no_leading_period ])
            (const_int 0 [0]))) fnmatch_loop.c:244 -1
     (nil))
(jump_insn 651 650 654 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:244 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 654 651 652 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(jump_insn 652 654 653 117 (set (pc)
        (label_ref 662)) -1
     (nil)
 -> 662)
(barrier 653 652 655)
(code_label 655 653 656 118 847 "" [1 uses])
(note 656 655 657 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 268 [ D.11951 ])
            (const_int 47 [0x2f]))) fnmatch_loop.c:247 -1
     (nil))
(jump_insn 658 657 659 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) fnmatch_loop.c:247 -1
     (int_list:REG_BR_PROB 6133 (nil))
 -> 662)
(note 659 658 660 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 660 659 661 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:247 -1
     (nil))
(jump_insn 661 660 662 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:247 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(code_label 662 661 663 120 848 "" [2 uses])
(note 663 662 664 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 120 (set (reg:QI 270 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])) fnmatch_loop.c:251 -1
     (nil))
(insn 665 664 666 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 270 [ D.11951 ])
            (const_int 33 [0x21]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 666 665 667 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1893)
            (pc))) fnmatch_loop.c:251 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1893)
(note 667 666 668 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 121 (set (reg:SI 771)
        (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])) fnmatch_loop.c:251 -1
     (nil))
(insn 669 668 670 121 (parallel [
            (set (reg:SI 770)
                (lshiftrt:SI (reg:SI 771)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:251 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (symbol_ref:DI ("posixly_correct") [flags 0x2]  <var_decl 0x2aeef6e1d2d0 posixly_correct>) [2 posixly_correct+0 S4 A32])
            (const_int 31 [0x1f]))
        (nil)))
(insn 670 669 671 121 (set (reg:QI 772)
        (subreg:QI (reg:SI 770) 0)) fnmatch_loop.c:251 -1
     (nil))
(insn 671 670 672 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 772)
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 672 671 2054 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2070)
            (pc))) fnmatch_loop.c:251 612 {*jcc_1}
     (int_list:REG_BR_PROB 4550 (nil))
 -> 2070)
(note 2054 672 673 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 673 2054 674 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 270 [ D.11951 ])
            (const_int 94 [0x5e]))) fnmatch_loop.c:251 -1
     (nil))
(insn 674 673 675 122 (set (reg:QI 774 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(insn 675 674 676 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 774 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:251 -1
     (nil))
(jump_insn 676 675 2055 122 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1893)
            (pc))) fnmatch_loop.c:251 -1
     (int_list:REG_BR_PROB 1651 (nil))
 -> 1893)
(note 2055 676 2070 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(code_label 2070 2055 1990 124 995 "" [1 uses])
(note 1990 2070 77 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 77 1990 78 124 (set (reg/v/f:DI 144 [ pattern ])
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:56 -1
     (nil))
(insn 78 77 1897 124 (set (reg/v:SI 659 [ not ])
        (const_int 0 [0])) -1
     (nil))
(code_label 1897 78 678 125 969 "" [1 uses])
(note 678 1897 679 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:255 -1
     (nil))
(jump_insn 680 679 681 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 689)
            (pc))) fnmatch_loop.c:255 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 689)
(note 681 680 682 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 126 (set (reg:DI 775)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:255 -1
     (nil))
(insn 683 682 684 126 (set (reg:DI 776 [ D.11940 ])
        (zero_extend:DI (reg:QI 268 [ D.11951 ]))) fnmatch_loop.c:255 -1
     (nil))
(insn 684 683 685 126 (set (reg/f:DI 777)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 775)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:255 -1
     (nil))
(insn 685 684 686 126 (set (reg:SI 778)
        (mem:SI (plus:DI (mult:DI (reg:DI 776 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 777)) [2 *_266+0 S4 A32])) fnmatch_loop.c:255 -1
     (nil))
(insn 686 685 687 126 (set (reg/v:QI 167 [ fn ])
        (subreg:QI (reg:SI 778) 0)) fnmatch_loop.c:255 -1
     (nil))
(jump_insn 687 686 688 126 (set (pc)
        (label_ref 692)) -1
     (nil)
 -> 692)
(barrier 688 687 689)
(code_label 689 688 690 127 851 "" [1 uses])
(note 690 689 691 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 691 690 692 127 (set (reg/v:QI 167 [ fn ])
        (reg:QI 268 [ D.11951 ])) fnmatch_loop.c:255 -1
     (nil))
(code_label 692 691 693 128 852 "" [1 uses])
(note 693 692 694 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 128 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 144 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:257 -1
     (nil))
(insn 695 694 696 128 (set (reg/v:QI 148 [ c ])
        (reg:QI 270 [ D.11951 ])) fnmatch_loop.c:257 -1
     (nil))
(insn 696 695 697 128 (parallel [
            (set (reg:SI 779)
                (lshiftrt:SI (reg/v:SI 707 [ flags ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 697 696 698 128 (parallel [
            (set (reg:SI 780)
                (xor:SI (reg:SI 779)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 698 697 699 128 (parallel [
            (set (reg:QI 677 [ D.11946 ])
                (and:QI (subreg:QI (reg:SI 780) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 699 698 700 128 (set (pc)
        (label_ref 702)) -1
     (nil)
 -> 702)
(barrier 700 699 1457)
(code_label 1457 700 701 129 935 "" [2 uses])
(note 701 1457 702 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(code_label 702 701 703 130 853 "" [1 uses])
(note 703 702 704 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 148 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:260 -1
     (nil))
(insn 705 704 706 130 (set (reg:QI 782 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(insn 706 705 707 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 782 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(jump_insn 707 706 2056 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) fnmatch_loop.c:260 -1
     (int_list:REG_BR_PROB 3600 (nil))
 -> 734)
(note 2056 707 708 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 708 2056 709 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 677 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:260 -1
     (nil))
(jump_insn 709 708 710 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) fnmatch_loop.c:260 -1
     (int_list:REG_BR_PROB 5625 (nil))
 -> 734)
(note 710 709 711 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 132 (set (reg:QI 278 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_8+0 S1 A8])) fnmatch_loop.c:262 -1
     (nil))
(insn 712 711 713 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 278 [ D.11951 ])
            (const_int 0 [0]))) fnmatch_loop.c:262 -1
     (nil))
(jump_insn 713 712 714 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:262 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 714 713 715 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:264 -1
     (nil))
(jump_insn 716 715 717 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 725)
            (pc))) fnmatch_loop.c:264 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 725)
(note 717 716 718 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 134 (set (reg:DI 783)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:264 -1
     (nil))
(insn 719 718 720 134 (set (reg:DI 784 [ D.11940 ])
        (zero_extend:DI (reg:QI 278 [ D.11951 ]))) fnmatch_loop.c:264 -1
     (nil))
(insn 720 719 721 134 (set (reg/f:DI 785)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 783)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:264 -1
     (nil))
(insn 721 720 722 134 (set (reg:SI 786)
        (mem:SI (plus:DI (mult:DI (reg:DI 784 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 785)) [2 *_279+0 S4 A32])) fnmatch_loop.c:264 -1
     (nil))
(insn 722 721 723 134 (set (reg/v:QI 148 [ c ])
        (subreg:QI (reg:SI 786) 0)) fnmatch_loop.c:264 -1
     (nil))
(jump_insn 723 722 724 134 (set (pc)
        (label_ref 728)) -1
     (nil)
 -> 728)
(barrier 724 723 725)
(code_label 725 724 726 135 855 "" [1 uses])
(note 726 725 727 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 727 726 728 135 (set (reg/v:QI 148 [ c ])
        (reg:QI 278 [ D.11951 ])) fnmatch_loop.c:264 -1
     (nil))
(code_label 728 727 729 136 856 "" [1 uses])
(note 729 728 730 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 136 (parallel [
            (set (reg/v/f:DI 285 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:265 -1
     (nil))
(insn 731 730 108 136 (set (reg:QI 664 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) -1
     (nil))
(insn 108 731 732 136 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 285 [ pattern ])) fnmatch_loop.c:265 -1
     (nil))
(jump_insn 732 108 733 136 (set (pc)
        (label_ref 1423)) fnmatch_loop.c:267 -1
     (nil)
 -> 1423)
(barrier 733 732 734)
(code_label 734 733 735 137 854 "" [2 uses])
(note 735 734 736 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 148 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:269 -1
     (nil))
(jump_insn 737 736 738 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1180)
            (pc))) fnmatch_loop.c:269 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1180)
(note 738 737 739 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 138 (set (reg:QI 664 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_8+0 S1 A8])) fnmatch_loop.c:269 -1
     (nil))
(insn 740 739 741 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 664 [ D.11951 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:269 -1
     (nil))
(jump_insn 741 740 742 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 815)
            (pc))) fnmatch_loop.c:269 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 815)
(note 742 741 80 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 80 742 81 139 (set (reg/v/f:DI 475 [ pattern ])
        (reg/v/f:DI 667 [ pattern ])) -1
     (nil))
(insn 81 80 783 139 (set (reg/v:DI 290 [ c1 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 783 81 743 140 865 "" [1 uses])
(note 743 783 744 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 140 (parallel [
            (set (reg/v/f:DI 286 [ pattern ])
                (plus:DI (reg/v/f:DI 475 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:286 -1
     (nil))
(insn 745 744 746 140 (set (reg:QI 287 [ D.11951 ])
        (mem:QI (reg/v/f:DI 286 [ pattern ]) [0 MEM[base: pattern_285, offset: 0B]+0 S1 A8])) fnmatch_loop.c:286 -1
     (nil))
(insn 746 745 747 140 (set (reg/v:QI 288 [ c ])
        (reg:QI 287 [ D.11951 ])) fnmatch_loop.c:286 -1
     (nil))
(insn 747 746 748 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 288 [ c ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:287 -1
     (nil))
(jump_insn 748 747 749 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 763)
            (pc))) fnmatch_loop.c:287 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 763)
(note 749 748 750 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 750 749 751 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 286 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_285 + 1B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:287 -1
     (nil))
(jump_insn 751 750 752 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 768)
            (pc))) fnmatch_loop.c:287 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 768)
(note 752 751 753 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 753 752 754 142 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg/v:DI 290 [ c1 ]))
                (const_int -2064 [0xfffffffffffff7f0])) [0 str S1 A8])
        (const_int 0 [0])) fnmatch_loop.c:302 -1
     (nil))
(insn 754 753 755 142 (parallel [
            (set (reg:DI 787)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:305 -1
     (nil))
(insn 755 754 756 142 (set (reg:DI 5 di)
        (reg:DI 787)) fnmatch_loop.c:305 -1
     (nil))
(call_insn 756 755 757 142 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__wctype") [flags 0x41]  <function_decl 0x2aeef6e85360 __wctype>) [0 __wctype S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:305 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__wctype") [flags 0x41]  <function_decl 0x2aeef6e85360 __wctype>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 757 756 758 142 (set (reg/v:DI 292 [ wt ])
        (reg:DI 0 ax)) fnmatch_loop.c:305 -1
     (nil))
(insn 758 757 759 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 292 [ wt ])
            (const_int 0 [0]))) fnmatch_loop.c:306 -1
     (nil))
(jump_insn 759 758 762 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 804)
            (pc))) fnmatch_loop.c:306 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 804)
(note 762 759 760 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(jump_insn 760 762 761 143 (set (pc)
        (label_ref 787)) -1
     (nil)
 -> 787)
(barrier 761 760 763)
(code_label 763 761 764 144 860 "" [1 uses])
(note 764 763 765 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 765 764 766 144 (parallel [
            (set (reg:QI 788 [ D.11942 ])
                (plus:QI (reg/v:QI 288 [ c ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:292 -1
     (nil))
(insn 766 765 767 144 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 788 [ D.11942 ])
            (const_int 24 [0x18]))) fnmatch_loop.c:292 -1
     (nil))
(jump_insn 767 766 768 144 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 773)
            (pc))) fnmatch_loop.c:292 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 773)
(code_label 768 767 769 145 861 "" [1 uses])
(note 769 768 770 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 770 769 771 145 (set (reg:QI 664 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_8+0 S1 A8])) -1
     (nil))
(jump_insn 771 770 772 145 (set (pc)
        (label_ref 1423)) -1
     (nil)
 -> 1423)
(barrier 772 771 773)
(code_label 773 772 774 146 864 "" [1 uses])
(note 774 773 775 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 775 774 776 146 (parallel [
            (set (reg/v:DI 290 [ c1 ])
                (plus:DI (reg/v:DI 290 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 776 775 777 146 (parallel [
            (set (reg:DI 789)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2064 [0xfffffffffffff7f0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 777 776 778 146 (parallel [
            (set (reg:DI 790)
                (plus:DI (reg:DI 789)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 778 777 779 146 (parallel [
            (set (reg/f:DI 791)
                (plus:DI (reg/v:DI 290 [ c1 ])
                    (reg:DI 790)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:300 -1
     (nil))
(insn 779 778 780 146 (set (mem:QI (reg/f:DI 791) [0 MEM[symbol: str, index: c1_289, offset: -1B]+0 S1 A8])
        (reg:QI 287 [ D.11951 ])) fnmatch_loop.c:300 -1
     (nil))
(insn 780 779 781 146 (set (reg/v/f:DI 475 [ pattern ])
        (reg/v/f:DI 286 [ pattern ])) -1
     (nil))
(insn 781 780 782 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 290 [ c1 ])
            (const_int 2048 [0x800]))) fnmatch_loop.c:281 -1
     (nil))
(jump_insn 782 781 786 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 804)
            (pc))) fnmatch_loop.c:281 -1
     (int_list:REG_BR_PROB 105 (nil))
 -> 804)
(note 786 782 784 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(jump_insn 784 786 785 147 (set (pc)
        (label_ref 783)) -1
     (nil)
 -> 783)
(barrier 785 784 787)
(code_label 787 785 788 148 863 "" [1 uses])
(note 788 787 789 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 148 (set (reg:QI 294 [ D.11942 ])
        (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])) fnmatch_loop.c:314 -1
     (nil))
(insn 790 789 791 148 (parallel [
            (set (reg:QI 792 [ D.11942 ])
                (lshiftrt:QI (reg:QI 294 [ D.11942 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:314 -1
     (nil))
(insn 791 790 792 148 (set (reg:DI 793 [ D.11940 ])
        (zero_extend:DI (reg:QI 792 [ D.11942 ]))) fnmatch_loop.c:314 -1
     (nil))
(insn 792 791 793 148 (parallel [
            (set (reg:QI 794 [ D.11942 ])
                (and:QI (reg:QI 294 [ D.11942 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:314 -1
     (nil))
(insn 793 792 794 148 (set (reg:SI 795 [ D.11944 ])
        (zero_extend:SI (reg:QI 794 [ D.11942 ]))) fnmatch_loop.c:314 -1
     (nil))
(insn 794 793 795 148 (set (reg:SI 797)
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 793 [ D.11940 ])
                        (const_int 4 [0x4]))
                    (reg/v:DI 292 [ wt ]))
                (const_int -32 [0xffffffffffffffe0])) [2 *_304+0 S4 A32])) fnmatch_loop.c:314 -1
     (nil))
(insn 795 794 796 148 (parallel [
            (set (reg:SI 796 [ D.11956 ])
                (lshiftrt:SI (reg:SI 797)
                    (subreg:QI (reg:SI 795 [ D.11944 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:314 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 793 [ D.11940 ])
                            (const_int 4 [0x4]))
                        (reg/v:DI 292 [ wt ]))
                    (const_int -32 [0xffffffffffffffe0])) [2 *_304+0 S4 A32])
            (subreg:QI (reg:SI 795 [ D.11944 ]) 0))
        (nil)))
(insn 796 795 797 148 (parallel [
            (set (reg:SI 798 [ D.11956 ])
                (and:SI (reg:SI 796 [ D.11956 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:314 -1
     (nil))
(insn 797 796 798 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 798 [ D.11956 ])
            (const_int 0 [0]))) fnmatch_loop.c:314 -1
     (nil))
(jump_insn 798 797 799 148 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 808)
            (pc))) fnmatch_loop.c:314 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 808)
(note 799 798 800 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 800 799 801 149 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 286 [ pattern ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:335 -1
     (nil))
(insn 801 800 802 149 (set (reg/v:QI 148 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 286 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_285 + 2B]+0 S1 A8])) fnmatch_loop.c:335 -1
     (nil))
(jump_insn 802 801 803 149 (set (pc)
        (label_ref 1670)) fnmatch_loop.c:270 -1
     (nil)
 -> 1670)
(barrier 803 802 804)
(code_label 804 803 805 150 862 "" [2 uses])
(note 805 804 141 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 141 805 806 150 (set (reg:SI 160 [ D.11944 ])
        (const_int 1 [0x1])) fnmatch_loop.c:284 -1
     (nil))
(jump_insn 806 141 807 150 (set (pc)
        (label_ref 1888)) fnmatch_loop.c:284 -1
     (nil)
 -> 1888)
(barrier 807 806 808)
(code_label 808 807 809 151 866 "" [1 uses])
(note 809 808 810 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 810 809 811 151 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 286 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:289 -1
     (nil))
(insn 811 810 2017 151 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 475 [ pattern ])
                (const_int 3 [0x3])) [0 MEM[(const char *)pattern_550 + 3B]+0 S1 A8])) -1
     (nil))
(jump_insn 2017 811 2018 151 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 2018 2017 2020)
(code_label 2020 2018 2019 152 987 "" [1 uses])
(note 2019 2020 83 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 83 2019 2022 152 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 355 [ pattern ])) fnmatch_loop.c:469 -1
     (nil))
(jump_insn 2022 83 2023 152 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 2023 2022 2025)
(code_label 2025 2023 2024 153 988 "" [1 uses])
(note 2024 2025 85 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 85 2024 842 153 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 355 [ pattern ])) fnmatch_loop.c:469 -1
     (nil))
(code_label 842 85 812 154 873 "" [7 uses])
(note 812 842 813 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(jump_insn 813 812 814 154 (set (pc)
        (label_ref 1787)) -1
     (nil)
 -> 1787)
(barrier 814 813 815)
(code_label 815 814 816 155 859 "" [1 uses])
(note 816 815 817 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 664 [ D.11951 ])
            (const_int 61 [0x3d]))) fnmatch_loop.c:338 -1
     (nil))
(jump_insn 818 817 819 155 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1187)
            (pc))) fnmatch_loop.c:338 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1187)
(note 819 818 820 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 820 819 821 156 (set (reg/v:QI 311 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) fnmatch_loop.c:350 -1
     (nil))
(insn 821 820 822 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 311 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:351 -1
     (nil))
(jump_insn 822 821 823 156 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) fnmatch_loop.c:351 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1438)
(note 823 822 824 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 824 823 825 157 (set (reg:QI 313 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_8 + 2B]+0 S1 A8])) fnmatch_loop.c:359 -1
     (nil))
(insn 825 824 826 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 313 [ D.11951 ])
            (const_int 61 [0x3d]))) fnmatch_loop.c:360 -1
     (nil))
(jump_insn 826 825 827 157 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) fnmatch_loop.c:360 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1438)
(note 827 826 828 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 3 [0x3])) [0 MEM[(const char *)pattern_8 + 3B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:360 -1
     (nil))
(jump_insn 829 828 830 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1995)
            (pc))) fnmatch_loop.c:360 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1995)
(note 830 829 831 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 159 (set (reg:DI 800)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:347 -1
     (nil))
(insn 832 831 833 159 (set (reg/f:DI 799)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 800)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:347 -1
     (nil))
(insn 833 832 834 159 (set (reg/f:DI 308 [ D.11950 ])
        (mem/f:DI (plus:DI (reg/f:DI 799)
                (const_int 24 [0x18])) [1 _317->__locales+24 S8 A64])) fnmatch_loop.c:347 -1
     (nil))
(insn 834 833 835 159 (parallel [
            (set (reg/v/f:DI 315 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:366 -1
     (nil))
(insn 835 834 836 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 308 [ D.11950 ])
                    (const_int 64 [0x40])) [0 _318->values[0].word+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:368 -1
     (nil))
(jump_insn 836 835 837 159 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 845)
            (pc))) fnmatch_loop.c:368 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 845)
(note 837 836 838 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 838 837 839 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 311 [ c ])
            (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8]))) fnmatch_loop.c:370 -1
     (nil))
(jump_insn 839 838 840 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:370 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1174)
(note 840 839 841 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 87 161 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 4 [0x4])) [0 MEM[(const char *)pattern_8 + 4B]+0 S1 A8])) -1
     (nil))
(insn 87 841 843 161 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 315 [ pattern ])) fnmatch_loop.c:366 -1
     (nil))
(jump_insn 843 87 844 161 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 844 843 845)
(code_label 845 844 846 162 871 "" [1 uses])
(note 846 845 847 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 162 (set (reg/v/f:DI 318 [ table ])
        (mem/f:DI (plus:DI (reg/f:DI 308 [ D.11950 ])
                (const_int 80 [0x50])) [0 _318->values[2].string+0 S8 A64])) fnmatch_loop.c:397 -1
     (nil))
(insn 848 847 849 162 (set (reg/v/f:DI 320 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 308 [ D.11950 ])
                (const_int 96 [0x60])) [0 _318->values[4].string+0 S8 A64])) fnmatch_loop.c:401 -1
     (nil))
(insn 849 848 850 162 (set (reg/v/f:DI 321 [ indirect ])
        (mem/f:DI (plus:DI (reg/f:DI 308 [ D.11950 ])
                (const_int 104 [0x68])) [0 _318->values[5].string+0 S8 A64])) fnmatch_loop.c:403 -1
     (nil))
(insn 850 849 851 162 (set (reg:DI 801 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 311 [ c ]))) ../locale/weight.h:29 -1
     (nil))
(insn 851 850 852 162 (set (reg:SI 534 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 801 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 318 [ table ])) [2 *_634+0 S4 A32])) ../locale/weight.h:29 -1
     (nil))
(insn 852 851 853 162 (set (reg/v:DI 535 [ i ])
        (sign_extend:DI (reg:SI 534 [ D.11944 ]))) ../locale/weight.h:29 -1
     (nil))
(insn 853 852 854 162 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 535 [ i ])
            (const_int 0 [0]))) ../locale/weight.h:33 -1
     (nil))
(jump_insn 854 853 855 162 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 902)
            (pc))) ../locale/weight.h:33 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 902)
(note 855 854 856 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 856 855 857 163 (parallel [
            (set (reg:DI 802 [ D.11953 ])
                (neg:DI (reg/v:DI 535 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:39 -1
     (nil))
(insn 857 856 858 163 (parallel [
            (set (reg/v/f:DI 538 [ cp ])
                (plus:DI (reg/v/f:DI 320 [ extra ])
                    (reg:DI 802 [ D.11953 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:39 -1
     (nil))
(jump_insn 858 857 859 163 (set (pc)
        (label_ref 861)) ../locale/weight.h:39 -1
     (nil)
 -> 861)
(barrier 859 858 875)
(code_label 875 859 860 164 877 "" [3 uses])
(note 860 875 861 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(code_label 861 860 862 165 875 "" [1 uses])
(note 862 861 863 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 863 862 864 165 (set (reg:SI 534 [ D.11944 ])
        (mem:SI (reg/v/f:DI 538 [ cp ]) [2 MEM[(const int32_t *)cp_640]+0 S4 A32])) ../locale/weight.h:47 -1
     (nil))
(insn 864 863 865 165 (parallel [
            (set (reg/v/f:DI 539 [ cp ])
                (plus:DI (reg/v/f:DI 538 [ cp ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:53 -1
     (nil))
(insn 865 864 866 165 (set (reg/v:DI 541 [ nhere ])
        (zero_extend:DI (mem:QI (plus:DI (reg/v/f:DI 538 [ cp ])
                    (const_int 4 [0x4])) [0 MEM[(const unsigned char *)cp_640 + 4B]+0 S1 A8]))) ../locale/weight.h:53 -1
     (nil))
(insn 866 865 867 165 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 534 [ D.11944 ])
            (const_int 0 [0]))) ../locale/weight.h:55 -1
     (nil))
(jump_insn 867 866 868 165 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 884)
            (pc))) ../locale/weight.h:55 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 884)
(note 868 867 869 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 869 868 870 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 541 [ nhere ])
            (const_int 0 [0]))) ../locale/weight.h:68 -1
     (nil))
(jump_insn 870 869 871 166 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 902)
            (pc))) ../locale/weight.h:68 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 902)
(note 871 870 872 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 872 871 873 167 (parallel [
            (set (reg/v/f:DI 538 [ cp ])
                (plus:DI (reg/v/f:DI 539 [ cp ])
                    (reg/v:DI 541 [ nhere ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:76 -1
     (nil))
(insn 873 872 874 167 (parallel [
            (set (reg:DI 803 [ D.11940 ])
                (plus:DI (reg/v:DI 541 [ nhere ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:77 -1
     (nil))
(insn 874 873 876 167 (parallel [
            (set (reg:DI 543 [ D.11940 ])
                (and:DI (reg:DI 803 [ D.11940 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:77 -1
     (nil))
(insn 876 874 877 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 543 [ D.11940 ])
            (const_int 0 [0]))) ../locale/weight.h:77 -1
     (nil))
(jump_insn 877 876 878 167 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) ../locale/weight.h:77 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 875)
(note 878 877 879 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 168 (set (reg:DI 805)
        (const_int 4 [0x4])) ../locale/weight.h:78 -1
     (nil))
(insn 880 879 881 168 (parallel [
            (set (reg:DI 804 [ D.11940 ])
                (minus:DI (reg:DI 805)
                    (reg:DI 543 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:78 -1
     (nil))
(insn 881 880 882 168 (parallel [
            (set (reg/v/f:DI 538 [ cp ])
                (plus:DI (reg/v/f:DI 538 [ cp ])
                    (reg:DI 804 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:78 -1
     (nil))
(jump_insn 882 881 883 168 (set (pc)
        (label_ref 875)) ../locale/weight.h:78 -1
     (nil)
 -> 875)
(barrier 883 882 884)
(code_label 884 883 885 169 876 "" [1 uses])
(note 885 884 886 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 886 885 887 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 541 [ nhere ])
            (const_int 0 [0]))) ../locale/weight.h:91 -1
     (nil))
(jump_insn 887 886 888 169 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 897)
            (pc))) ../locale/weight.h:91 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 897)
(note 888 887 889 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 170 (parallel [
            (set (reg:DI 547 [ D.11940 ])
                (ashift:DI (reg/v:DI 541 [ nhere ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:96 -1
     (nil))
(insn 890 889 891 170 (parallel [
            (set (reg:DI 806 [ D.11940 ])
                (plus:DI (reg:DI 547 [ D.11940 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 891 890 892 170 (parallel [
            (set (reg:DI 807 [ D.11940 ])
                (plus:DI (reg:DI 547 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 892 891 893 170 (parallel [
            (set (reg:DI 808 [ D.11940 ])
                (and:DI (reg:DI 807 [ D.11940 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 893 892 894 170 (parallel [
            (set (reg:DI 809 [ D.11940 ])
                (minus:DI (reg:DI 806 [ D.11940 ])
                    (reg:DI 808 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 894 893 895 170 (parallel [
            (set (reg/v/f:DI 538 [ cp ])
                (plus:DI (reg/v/f:DI 539 [ cp ])
                    (reg:DI 809 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(jump_insn 895 894 896 170 (set (pc)
        (label_ref 875)) ../locale/weight.h:98 -1
     (nil)
 -> 875)
(barrier 896 895 897)
(code_label 897 896 898 171 878 "" [1 uses])
(note 898 897 899 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 900 171 (set (reg:DI 810 [ D.11940 ])
        (sign_extend:DI (reg:SI 534 [ D.11944 ]))) ../locale/weight.h:131 -1
     (nil))
(insn 900 899 901 171 (parallel [
            (set (reg:DI 811 [ D.11940 ])
                (neg:DI (reg:DI 810 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:131 -1
     (nil))
(insn 901 900 902 171 (set (reg:SI 534 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 811 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 321 [ indirect ])) [2 *_662+0 S4 A32])) ../locale/weight.h:131 -1
     (nil))
(code_label 902 901 903 172 874 "" [2 uses])
(note 903 902 904 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 904 903 905 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 534 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:408 -1
     (nil))
(jump_insn 905 904 906 172 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:408 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1174)
(note 906 905 907 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 907 906 908 173 (set (reg:DI 812 [ D.11940 ])
        (zero_extend:DI (mem:QI (reg/v/f:DI 147 [ np ]) [0 *np_28+0 S1 A8]))) ../locale/weight.h:29 -1
     (nil))
(insn 908 907 909 173 (set (reg:SI 561 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 812 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 318 [ table ])) [2 *_670+0 S4 A32])) ../locale/weight.h:29 -1
     (nil))
(insn 909 908 910 173 (set (reg/v:DI 562 [ i ])
        (sign_extend:DI (reg:SI 561 [ D.11944 ]))) ../locale/weight.h:29 -1
     (nil))
(insn 910 909 911 173 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 562 [ i ])
            (const_int 0 [0]))) ../locale/weight.h:33 -1
     (nil))
(jump_insn 911 910 912 173 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1122)
            (pc))) ../locale/weight.h:33 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 1122)
(note 912 911 913 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 913 912 914 174 (parallel [
            (set (reg/v/f:DI 556 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:29 -1
     (nil))
(insn 914 913 915 174 (parallel [
            (set (reg:DI 813 [ D.11953 ])
                (neg:DI (reg/v:DI 562 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:39 -1
     (nil))
(insn 915 914 916 174 (parallel [
            (set (reg/v/f:DI 566 [ cp ])
                (plus:DI (reg/v/f:DI 320 [ extra ])
                    (reg:DI 813 [ D.11953 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:39 -1
     (nil))
(insn 916 915 917 174 (parallel [
            (set (reg:DI 814 [ D.11953 ])
                (minus:DI (reg/v/f:DI 705 [ string_end ])
                    (reg/v/f:DI 147 [ np ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:41 -1
     (nil))
(insn 917 916 918 174 (parallel [
            (set (reg/v:DI 565 [ len ])
                (plus:DI (reg:DI 814 [ D.11953 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:41 -1
     (nil))
(insn 918 917 919 174 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 565 [ len ])
            (const_int 0 [0]))) -1
     (nil))
(insn 919 918 920 174 (set (reg:QI 815)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 920 919 921 174 (set (reg:QI 700 [ D.11946 ])
        (reg:QI 815)) -1
     (nil))
(jump_insn 921 920 922 174 (set (pc)
        (label_ref 924)) -1
     (nil)
 -> 924)
(barrier 922 921 991)
(code_label 991 922 923 175 891 "" [4 uses])
(note 923 991 924 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(code_label 924 923 925 176 880 "" [1 uses])
(note 925 924 926 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 176 (set (reg:SI 561 [ D.11944 ])
        (mem:SI (reg/v/f:DI 566 [ cp ]) [2 MEM[(const int32_t *)cp_677]+0 S4 A32])) ../locale/weight.h:47 -1
     (nil))
(insn 927 926 928 176 (parallel [
            (set (reg/v/f:DI 568 [ cp ])
                (plus:DI (reg/v/f:DI 566 [ cp ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:53 -1
     (nil))
(insn 928 927 929 176 (set (reg/v:DI 570 [ nhere ])
        (zero_extend:DI (mem:QI (plus:DI (reg/v/f:DI 566 [ cp ])
                    (const_int 4 [0x4])) [0 MEM[(const unsigned char *)cp_677 + 4B]+0 S1 A8]))) ../locale/weight.h:53 -1
     (nil))
(insn 929 928 930 176 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 561 [ D.11944 ])
            (const_int 0 [0]))) ../locale/weight.h:55 -1
     (nil))
(jump_insn 930 929 931 176 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 945)
            (pc))) ../locale/weight.h:55 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 945)
(note 931 930 932 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 932 931 933 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(insn 933 932 934 177 (set (reg:QI 817 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(insn 934 933 935 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 817 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(jump_insn 935 934 2057 177 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2000)
            (pc))) ../locale/weight.h:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 2000)
(note 2057 935 936 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 936 2057 937 178 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 700 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(jump_insn 937 936 938 178 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2000)
            (pc))) ../locale/weight.h:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 2000)
(note 938 937 939 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 939 938 940 179 (set (reg:QI 818)
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) ../locale/weight.h:88 -1
     (nil))
(insn 940 939 941 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 818)
            (mem:QI (plus:DI (reg/v/f:DI 566 [ cp ])
                    (const_int 5 [0x5])) [0 MEM[(const unsigned char *)cp_677 + 5B]+0 S1 A8]))) ../locale/weight.h:88 -1
     (nil))
(jump_insn 941 940 944 179 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2005)
            (pc))) ../locale/weight.h:88 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 2005)
(note 944 941 90 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 90 944 942 180 (set (reg/v:DI 583 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:88 -1
     (nil))
(jump_insn 942 90 943 180 (set (pc)
        (label_ref 1007)) ../locale/weight.h:88 -1
     (nil)
 -> 1007)
(barrier 943 942 945)
(code_label 945 943 946 181 881 "" [1 uses])
(note 946 945 947 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(insn 948 947 949 181 (set (reg:QI 820 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(insn 949 948 950 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 820 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(jump_insn 950 949 2058 181 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2010)
            (pc))) ../locale/weight.h:64 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 2010)
(note 2058 950 951 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 951 2058 952 182 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 700 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(jump_insn 952 951 953 182 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2010)
            (pc))) ../locale/weight.h:64 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 2010)
(note 953 952 954 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 183 (set (reg:QI 821)
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) ../locale/weight.h:65 -1
     (nil))
(insn 955 954 956 183 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 821)
            (mem:QI (plus:DI (reg/v/f:DI 566 [ cp ])
                    (const_int 5 [0x5])) [0 MEM[(const unsigned char *)cp_677 + 5B]+0 S1 A8]))) ../locale/weight.h:65 -1
     (nil))
(jump_insn 956 955 959 183 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 986)
            (pc))) ../locale/weight.h:65 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 986)
(note 959 956 88 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 88 959 957 184 (set (reg/v:DI 573 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:65 -1
     (nil))
(jump_insn 957 88 958 184 (set (pc)
        (label_ref 967)) ../locale/weight.h:65 -1
     (nil)
 -> 967)
(barrier 958 957 972)
(code_label 972 958 960 185 889 "" [1 uses])
(note 960 972 961 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 961 960 962 185 (set (reg:QI 822)
        (mem:QI (plus:DI (reg/v/f:DI 568 [ cp ])
                (reg/v:DI 573 [ cnt ])) [0 MEM[base: cp_680, index: cnt_688, offset: 0B]+0 S1 A8])) ../locale/weight.h:65 -1
     (nil))
(insn 962 961 963 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 822)
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 147 [ np ])
                        (reg/v:DI 573 [ cnt ]))
                    (const_int 1 [0x1])) [0 MEM[base: np_28, index: cnt_688, offset: 1B]+0 S1 A8]))) ../locale/weight.h:65 -1
     (nil))
(jump_insn 963 962 966 185 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 982)
            (pc))) ../locale/weight.h:65 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 982)
(note 966 963 964 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(jump_insn 964 966 965 186 (set (pc)
        (label_ref 969)) ../locale/weight.h:65 -1
     (nil)
 -> 969)
(barrier 965 964 967)
(code_label 967 965 968 187 887 "" [1 uses])
(note 968 967 969 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(code_label 969 968 970 188 888 "" [1 uses])
(note 970 969 971 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 971 970 973 188 (parallel [
            (set (reg/v:DI 573 [ cnt ])
                (plus:DI (reg/v:DI 573 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:64 -1
     (nil))
(insn 973 971 974 188 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 570 [ nhere ])
            (reg/v:DI 573 [ cnt ]))) ../locale/weight.h:64 -1
     (nil))
(insn 974 973 975 188 (set (reg:QI 824 [ D.11946 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(insn 975 974 976 188 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 824 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(jump_insn 976 975 2059 188 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 982)
            (pc))) ../locale/weight.h:64 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 982)
(note 2059 976 977 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 977 2059 978 189 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 565 [ len ])
            (reg/v:DI 573 [ cnt ]))) ../locale/weight.h:64 -1
     (nil))
(insn 978 977 979 189 (set (reg:QI 826 [ D.11946 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(insn 979 978 980 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 826 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:64 -1
     (nil))
(jump_insn 980 979 2060 189 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 972)
            (pc))) ../locale/weight.h:64 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 972)
(note 2060 980 2007 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2007 2060 2008 190 (set (pc)
        (label_ref 982)) -1
     (nil)
 -> 982)
(barrier 2008 2007 2010)
(code_label 2010 2008 2009 192 984 "" [2 uses])
(note 2009 2010 89 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 89 2009 982 192 (set (reg/v:DI 573 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:64 -1
     (nil))
(code_label 982 89 983 193 885 "" [3 uses])
(note 983 982 984 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 984 983 985 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (reg/v:DI 573 [ cnt ]))) ../locale/weight.h:68 -1
     (nil))
(jump_insn 985 984 986 193 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1122)
            (pc))) ../locale/weight.h:68 -1
     (int_list:REG_BR_PROB 236 (nil))
 -> 1122)
(code_label 986 985 987 194 886 "" [1 uses])
(note 987 986 988 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 988 987 989 194 (parallel [
            (set (reg/v/f:DI 566 [ cp ])
                (plus:DI (reg/v/f:DI 568 [ cp ])
                    (reg/v:DI 570 [ nhere ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:76 -1
     (nil))
(insn 989 988 990 194 (parallel [
            (set (reg:DI 827 [ D.11940 ])
                (plus:DI (reg/v:DI 570 [ nhere ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:77 -1
     (nil))
(insn 990 989 992 194 (parallel [
            (set (reg:DI 578 [ D.11940 ])
                (and:DI (reg:DI 827 [ D.11940 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:77 -1
     (nil))
(insn 992 990 993 194 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 578 [ D.11940 ])
            (const_int 0 [0]))) ../locale/weight.h:77 -1
     (nil))
(jump_insn 993 992 994 194 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 991)
            (pc))) ../locale/weight.h:77 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 991)
(note 994 993 995 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 995 994 996 195 (set (reg:DI 829)
        (const_int 4 [0x4])) ../locale/weight.h:78 -1
     (nil))
(insn 996 995 997 195 (parallel [
            (set (reg:DI 828 [ D.11940 ])
                (minus:DI (reg:DI 829)
                    (reg:DI 578 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:78 -1
     (nil))
(insn 997 996 998 195 (parallel [
            (set (reg/v/f:DI 566 [ cp ])
                (plus:DI (reg/v/f:DI 566 [ cp ])
                    (reg:DI 828 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:78 -1
     (nil))
(jump_insn 998 997 999 195 (set (pc)
        (label_ref 991)) ../locale/weight.h:78 -1
     (nil)
 -> 991)
(barrier 999 998 1012)
(code_label 1012 999 1000 196 893 "" [1 uses])
(note 1000 1012 1001 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 1001 1000 1002 196 (set (reg:QI 830)
        (mem:QI (plus:DI (reg/v/f:DI 568 [ cp ])
                (reg/v:DI 583 [ cnt ])) [0 MEM[base: cp_680, index: cnt_702, offset: 0B]+0 S1 A8])) ../locale/weight.h:88 -1
     (nil))
(insn 1002 1001 1003 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 830)
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 147 [ np ])
                        (reg/v:DI 583 [ cnt ]))
                    (const_int 1 [0x1])) [0 MEM[base: np_28, index: cnt_702, offset: 1B]+0 S1 A8]))) ../locale/weight.h:88 -1
     (nil))
(jump_insn 1003 1002 1006 196 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) ../locale/weight.h:88 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1022)
(note 1006 1003 1004 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1004 1006 1005 197 (set (pc)
        (label_ref 1009)) ../locale/weight.h:88 -1
     (nil)
 -> 1009)
(barrier 1005 1004 1007)
(code_label 1007 1005 1008 198 884 "" [1 uses])
(note 1008 1007 1009 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(code_label 1009 1008 1010 199 892 "" [1 uses])
(note 1010 1009 1011 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 1011 1010 1013 199 (parallel [
            (set (reg/v:DI 583 [ cnt ])
                (plus:DI (reg/v:DI 583 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:87 -1
     (nil))
(insn 1013 1011 1014 199 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 570 [ nhere ])
            (reg/v:DI 583 [ cnt ]))) ../locale/weight.h:87 -1
     (nil))
(insn 1014 1013 1015 199 (set (reg:QI 832 [ D.11946 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(insn 1015 1014 1016 199 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 832 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(jump_insn 1016 1015 2061 199 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1022)
            (pc))) ../locale/weight.h:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 1022)
(note 2061 1016 1017 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 1017 2061 1018 200 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 565 [ len ])
            (reg/v:DI 583 [ cnt ]))) ../locale/weight.h:87 -1
     (nil))
(insn 1018 1017 1019 200 (set (reg:QI 834 [ D.11946 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(insn 1019 1018 1020 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 834 [ D.11946 ])
            (const_int 0 [0]))) ../locale/weight.h:87 -1
     (nil))
(jump_insn 1020 1019 2062 200 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1012)
            (pc))) ../locale/weight.h:87 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 1012)
(note 2062 1020 1997 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1997 2062 1998 201 (set (pc)
        (label_ref 1022)) -1
     (nil)
 -> 1022)
(barrier 1998 1997 2000)
(code_label 2000 1998 1999 203 982 "" [2 uses])
(note 1999 2000 91 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 91 1999 1022 203 (set (reg/v:DI 583 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:87 -1
     (nil))
(code_label 1022 91 1023 204 882 "" [3 uses])
(note 1023 1022 1024 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1024 1023 1025 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (reg/v:DI 583 [ cnt ]))) ../locale/weight.h:91 -1
     (nil))
(jump_insn 1025 1024 2001 204 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2012)
            (pc))) ../locale/weight.h:91 612 {*jcc_1}
     (int_list:REG_BR_PROB 236 (nil))
 -> 2012)
(note 2001 1025 2002 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2002 2001 2003 205 (set (pc)
        (label_ref 1026)) -1
     (nil)
 -> 1026)
(barrier 2003 2002 2005)
(code_label 2005 2003 2004 206 983 "" [1 uses])
(note 2004 2005 92 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 92 2004 1026 206 (set (reg/v:DI 583 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:88 -1
     (nil))
(code_label 1026 92 1027 207 883 "" [1 uses])
(note 1027 1026 1028 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 1028 1027 1029 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 565 [ len ])
            (reg/v:DI 583 [ cnt ]))) ../locale/weight.h:93 -1
     (nil))
(jump_insn 1029 1028 1030 207 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1051)
            (pc))) ../locale/weight.h:93 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1051)
(note 1030 1029 1031 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 208 (set (reg:QI 835)
        (mem:QI (plus:DI (reg/v/f:DI 568 [ cp ])
                (reg/v:DI 583 [ cnt ])) [0 *_706+0 S1 A8])) ../locale/weight.h:93 -1
     (nil))
(insn 1032 1031 1033 208 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 835)
            (mem:QI (plus:DI (reg/v/f:DI 556 [ np ])
                    (reg/v:DI 583 [ cnt ])) [0 *_708+0 S1 A8]))) ../locale/weight.h:93 -1
     (nil))
(jump_insn 1033 1032 1034 208 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1051)
            (pc))) ../locale/weight.h:93 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1051)
(note 1034 1033 1035 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 1035 1034 1036 209 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (const_int 0 [0]))) ../locale/weight.h:104 -1
     (nil))
(jump_insn 1036 1035 1037 209 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1041)
            (pc))) ../locale/weight.h:104 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1041)
(note 1037 1036 1038 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 1038 1037 1039 210 (set (reg:QI 648 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) -1
     (nil))
(jump_insn 1039 1038 1040 210 (set (pc)
        (label_ref 1072)) -1
     (nil)
 -> 1072)
(barrier 1040 1039 1041)
(code_label 1041 1040 1042 211 897 "" [1 uses])
(note 1042 1041 1043 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 1043 1042 1044 211 (parallel [
            (set (reg/f:DI 658 [ D.11945 ])
                (plus:DI (reg/v/f:DI 568 [ cp ])
                    (reg/v:DI 570 [ nhere ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:105 -1
     (nil))
(insn 1044 1043 1045 211 (set (reg:QI 597 [ D.11942 ])
        (mem:QI (reg/f:DI 658 [ D.11945 ]) [0 *_1004+0 S1 A8])) ../locale/weight.h:105 -1
     (nil))
(insn 1045 1044 1046 211 (set (reg:QI 648 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) ../locale/weight.h:105 -1
     (nil))
(insn 1046 1045 1047 211 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 648 [ D.11942 ])
            (reg:QI 597 [ D.11942 ]))) ../locale/weight.h:105 -1
     (nil))
(jump_insn 1047 1046 1050 211 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1916)
            (pc))) ../locale/weight.h:105 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1916)
(note 1050 1047 93 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 93 1050 1048 212 (set (reg/v:DI 600 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:105 -1
     (nil))
(jump_insn 1048 93 1049 212 (set (pc)
        (label_ref 1066)) ../locale/weight.h:105 -1
     (nil)
 -> 1066)
(barrier 1049 1048 1051)
(code_label 1051 1049 1052 213 896 "" [2 uses])
(note 1052 1051 1053 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 1053 1052 1054 213 (parallel [
            (set (reg:DI 591 [ D.11940 ])
                (ashift:DI (reg/v:DI 570 [ nhere ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:96 -1
     (nil))
(insn 1054 1053 1055 213 (parallel [
            (set (reg:DI 836 [ D.11940 ])
                (plus:DI (reg:DI 591 [ D.11940 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 1055 1054 1056 213 (parallel [
            (set (reg:DI 837 [ D.11940 ])
                (plus:DI (reg:DI 591 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 1056 1055 1057 213 (parallel [
            (set (reg:DI 838 [ D.11940 ])
                (and:DI (reg:DI 837 [ D.11940 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 1057 1056 1058 213 (parallel [
            (set (reg:DI 839 [ D.11940 ])
                (minus:DI (reg:DI 836 [ D.11940 ])
                    (reg:DI 838 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(insn 1058 1057 1059 213 (parallel [
            (set (reg/v/f:DI 566 [ cp ])
                (plus:DI (reg/v/f:DI 568 [ cp ])
                    (reg:DI 839 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:98 -1
     (nil))
(jump_insn 1059 1058 1060 213 (set (pc)
        (label_ref 991)) ../locale/weight.h:98 -1
     (nil)
 -> 991)
(barrier 1060 1059 1069)
(code_label 1069 1060 1061 214 902 "" [1 uses])
(note 1061 1069 1062 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 1062 1061 1063 214 (set (reg:QI 597 [ D.11942 ])
        (mem:QI (plus:DI (reg/f:DI 658 [ D.11945 ])
                (reg/v:DI 600 [ cnt ])) [0 MEM[base: _1004, index: cnt_722, offset: 0B]+0 S1 A8])) ../locale/weight.h:105 -1
     (nil))
(insn 1063 1062 1064 214 (set (reg:QI 599 [ D.11942 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 147 [ np ])
                    (reg/v:DI 600 [ cnt ]))
                (const_int 1 [0x1])) [0 MEM[base: np_28, index: cnt_722, offset: 1B]+0 S1 A8])) ../locale/weight.h:105 -1
     (nil))
(insn 1064 1063 1065 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 597 [ D.11942 ])
            (reg:QI 599 [ D.11942 ]))) ../locale/weight.h:105 -1
     (nil))
(jump_insn 1065 1064 1066 214 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1919)
            (pc))) ../locale/weight.h:105 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1919)
(code_label 1066 1065 1067 215 900 "" [1 uses])
(note 1067 1066 1068 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 1068 1067 1070 215 (parallel [
            (set (reg/v:DI 600 [ cnt ])
                (plus:DI (reg/v:DI 600 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:104 -1
     (nil))
(insn 1070 1068 1071 215 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 570 [ nhere ])
            (reg/v:DI 600 [ cnt ]))) ../locale/weight.h:104 -1
     (nil))
(jump_insn 1071 1070 1072 215 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1069)
            (pc))) ../locale/weight.h:104 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1069)
(code_label 1072 1071 1073 216 898 "" [2 uses])
(note 1073 1072 1074 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 1074 1073 1075 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 566 [ cp ])
                    (const_int 5 [0x5])) [0 MEM[(const unsigned char *)cp_677 + 5B]+0 S1 A8])
            (reg:QI 648 [ D.11942 ]))) ../locale/weight.h:120 -1
     (nil))
(jump_insn 1075 1074 1076 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1090)
            (pc))) ../locale/weight.h:120 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1090)
(note 1076 1075 1077 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 217 (set (reg:QI 689 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) -1
     (nil))
(insn 1078 1077 95 217 (set (reg:QI 690 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 566 [ cp ])
                (const_int 5 [0x5])) [0 MEM[(const unsigned char *)cp_677 + 5B]+0 S1 A8])) -1
     (nil))
(insn 95 1078 1079 217 (set (reg/v:DI 606 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:120 -1
     (nil))
(jump_insn 1079 95 1080 217 (set (pc)
        (label_ref 1099)) -1
     (nil)
 -> 1099)
(barrier 1080 1079 1921)
(code_label 1921 1080 1081 218 971 "" [1 uses])
(note 1081 1921 1082 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1082 1081 1083 218 (parallel [
            (set (reg:DI 601 [ D.11940 ])
                (ashift:DI (reg/v:DI 570 [ nhere ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:111 -1
     (nil))
(insn 1083 1082 1084 218 (parallel [
            (set (reg:DI 840 [ D.11940 ])
                (plus:DI (reg:DI 601 [ D.11940 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:113 -1
     (nil))
(insn 1084 1083 1085 218 (parallel [
            (set (reg:DI 841 [ D.11940 ])
                (plus:DI (reg:DI 601 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:113 -1
     (nil))
(insn 1085 1084 1086 218 (parallel [
            (set (reg:DI 842 [ D.11940 ])
                (and:DI (reg:DI 841 [ D.11940 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:113 -1
     (nil))
(insn 1086 1085 1087 218 (parallel [
            (set (reg:DI 843 [ D.11940 ])
                (minus:DI (reg:DI 840 [ D.11940 ])
                    (reg:DI 842 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:113 -1
     (nil))
(insn 1087 1086 1088 218 (parallel [
            (set (reg/v/f:DI 566 [ cp ])
                (plus:DI (reg/v/f:DI 568 [ cp ])
                    (reg:DI 843 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:113 -1
     (nil))
(jump_insn 1088 1087 1089 218 (set (pc)
        (label_ref 991)) ../locale/weight.h:113 -1
     (nil)
 -> 991)
(barrier 1089 1088 1090)
(code_label 1090 1089 1091 219 903 "" [1 uses])
(note 1091 1090 94 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 94 1091 1096 219 (set (reg/v:DI 606 [ cnt ])
        (const_int 0 [0])) ../locale/weight.h:120 -1
     (nil))
(code_label 1096 94 1092 220 905 "" [1 uses])
(note 1092 1096 1093 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 1093 1092 1094 220 (parallel [
            (set (reg/v:DI 606 [ cnt ])
                (plus:DI (reg/v:DI 606 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:120 -1
     (nil))
(insn 1094 1093 1095 220 (set (reg:QI 690 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 568 [ cp ])
                (reg/v:DI 606 [ cnt ])) [0 MEM[base: cp_680, index: cnt_735, offset: 0B]+0 S1 A8])) ../locale/weight.h:120 -1
     (nil))
(insn 1095 1094 1097 220 (set (reg:QI 689 [ D.11942 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 147 [ np ])
                    (reg/v:DI 606 [ cnt ]))
                (const_int 1 [0x1])) [0 MEM[base: np_28, index: cnt_735, offset: 1B]+0 S1 A8])) ../locale/weight.h:120 -1
     (nil))
(insn 1097 1095 1098 220 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 690 [ D.11942 ])
            (reg:QI 689 [ D.11942 ]))) ../locale/weight.h:120 -1
     (nil))
(jump_insn 1098 1097 1099 220 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1096)
            (pc))) ../locale/weight.h:120 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1096)
(code_label 1099 1098 1100 221 904 "" [1 uses])
(note 1100 1099 96 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 96 1100 1114 221 (set (reg/v:DI 607 [ offset ])
        (const_int 0 [0])) ../locale/weight.h:120 -1
     (nil))
(code_label 1114 96 1101 222 906 "" [1 uses])
(note 1101 1114 1102 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 1102 1101 1103 222 (parallel [
            (set (reg/v:DI 608 [ offset ])
                (ashift:DI (reg/v:DI 607 [ offset ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:124 -1
     (nil))
(insn 1103 1102 1104 222 (set (reg:SI 844 [ D.11944 ])
        (zero_extend:SI (reg:QI 689 [ D.11942 ]))) ../locale/weight.h:125 -1
     (nil))
(insn 1104 1103 1105 222 (set (reg:SI 845 [ D.11944 ])
        (zero_extend:SI (reg:QI 690 [ D.11942 ]))) ../locale/weight.h:125 -1
     (nil))
(insn 1105 1104 1106 222 (parallel [
            (set (reg:SI 846 [ D.11944 ])
                (minus:SI (reg:SI 844 [ D.11944 ])
                    (reg:SI 845 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:125 -1
     (nil))
(insn 1106 1105 1107 222 (set (reg:DI 847 [ D.11940 ])
        (sign_extend:DI (reg:SI 846 [ D.11944 ]))) ../locale/weight.h:125 -1
     (nil))
(insn 1107 1106 1108 222 (parallel [
            (set (reg/v:DI 607 [ offset ])
                (plus:DI (reg:DI 847 [ D.11940 ])
                    (reg/v:DI 608 [ offset ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:125 -1
     (nil))
(insn 1108 1107 1109 222 (parallel [
            (set (reg/v:DI 606 [ cnt ])
                (plus:DI (reg/v:DI 606 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:127 -1
     (nil))
(insn 1109 1108 1110 222 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 570 [ nhere ])
            (reg/v:DI 606 [ cnt ]))) ../locale/weight.h:127 -1
     (nil))
(jump_insn 1110 1109 1111 222 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1117)
            (pc))) ../locale/weight.h:127 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1117)
(note 1111 1110 1112 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1112 1111 1113 223 (set (reg:QI 689 [ D.11942 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 147 [ np ])
                    (reg/v:DI 606 [ cnt ]))
                (const_int 1 [0x1])) [0 MEM[base: np_28, index: cnt_752, offset: 1B]+0 S1 A8])) -1
     (nil))
(insn 1113 1112 1115 223 (set (reg:QI 690 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 568 [ cp ])
                (reg/v:DI 606 [ cnt ])) [0 MEM[base: cp_680, index: cnt_752, offset: 0B]+0 S1 A8])) -1
     (nil))
(jump_insn 1115 1113 1116 223 (set (pc)
        (label_ref 1114)) -1
     (nil)
 -> 1114)
(barrier 1116 1115 2012)
(code_label 2012 1116 2011 224 985 "" [1 uses])
(note 2011 2012 97 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 97 2011 1117 224 (set (reg/v:DI 607 [ offset ])
        (const_int 0 [0])) ../locale/weight.h:85 -1
     (nil))
(code_label 1117 97 1118 225 895 "" [1 uses])
(note 1118 1117 1119 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 1119 1118 1120 225 (set (reg:DI 848 [ D.11940 ])
        (sign_extend:DI (reg:SI 561 [ D.11944 ]))) ../locale/weight.h:131 -1
     (nil))
(insn 1120 1119 1121 225 (parallel [
            (set (reg:DI 849 [ D.11940 ])
                (minus:DI (reg/v:DI 607 [ offset ])
                    (reg:DI 848 [ D.11940 ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/weight.h:131 -1
     (nil))
(insn 1121 1120 1122 225 (set (reg:SI 561 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 849 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 321 [ indirect ])) [2 *_757+0 S4 A32])) ../locale/weight.h:131 -1
     (nil))
(code_label 1122 1121 1123 226 879 "" [2 uses])
(note 1123 1122 1124 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 1124 1123 1125 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 561 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:419 -1
     (nil))
(jump_insn 1125 1124 1126 226 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:419 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1174)
(note 1126 1125 1127 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 1127 1126 1128 227 (parallel [
            (set (reg:SI 850 [ D.11944 ])
                (ashiftrt:SI (reg:SI 534 [ D.11944 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:420 -1
     (nil))
(insn 1128 1127 1129 227 (parallel [
            (set (reg:SI 851 [ D.11944 ])
                (ashiftrt:SI (reg:SI 561 [ D.11944 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:420 -1
     (nil))
(insn 1129 1128 1130 227 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 850 [ D.11944 ])
            (reg:SI 851 [ D.11944 ]))) fnmatch_loop.c:420 -1
     (nil))
(jump_insn 1130 1129 1131 227 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:420 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1174)
(note 1131 1130 1132 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1132 1131 1133 228 (set (reg/v/f:DI 319 [ weights ])
        (mem/f:DI (plus:DI (reg/f:DI 308 [ D.11950 ])
                (const_int 88 [0x58])) [0 _318->values[3].string+0 S8 A64])) fnmatch_loop.c:399 -1
     (nil))
(insn 1133 1132 1134 228 (parallel [
            (set (reg:SI 632 [ D.11944 ])
                (and:SI (reg:SI 534 [ D.11944 ])
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1134 1133 1135 228 (set (reg:DI 852 [ D.11941 ])
        (sign_extend:DI (reg:SI 632 [ D.11944 ]))) fnmatch_loop.c:413 -1
     (nil))
(insn 1135 1134 1136 228 (set (reg/v:SI 325 [ len ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 319 [ weights ])
                    (reg:DI 852 [ D.11941 ])) [0 *_333+0 S1 A8]))) fnmatch_loop.c:413 -1
     (nil))
(insn 1136 1135 1137 228 (parallel [
            (set (reg:SI 567 [ D.11944 ])
                (and:SI (reg:SI 561 [ D.11944 ])
                    (const_int 16777215 [0xffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1137 1136 1138 228 (set (reg:DI 853 [ D.11941 ])
        (sign_extend:DI (reg:SI 567 [ D.11944 ]))) fnmatch_loop.c:421 -1
     (nil))
(insn 1138 1137 1139 228 (set (reg:SI 854 [ D.11944 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 319 [ weights ])
                    (reg:DI 853 [ D.11941 ])) [0 *_344+0 S1 A8]))) fnmatch_loop.c:421 -1
     (nil))
(insn 1139 1138 1140 228 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 325 [ len ])
            (reg:SI 854 [ D.11944 ]))) fnmatch_loop.c:421 -1
     (nil))
(jump_insn 1140 1139 1141 228 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:421 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1174)
(note 1141 1140 1142 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 229 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 325 [ len ])
            (const_int 0 [0]))) fnmatch_loop.c:428 -1
     (nil))
(jump_insn 1143 1142 1144 229 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1169)
            (pc))) fnmatch_loop.c:428 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1169)
(note 1144 1143 1145 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 230 (parallel [
            (set (reg:SI 855 [ D.11944 ])
                (plus:SI (reg:SI 632 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:429 -1
     (nil))
(insn 1146 1145 1147 230 (set (reg:DI 205 [ D.11941 ])
        (sign_extend:DI (reg:SI 855 [ D.11944 ]))) fnmatch_loop.c:429 -1
     (nil))
(insn 1147 1146 1148 230 (parallel [
            (set (reg/f:DI 204 [ D.11945 ])
                (plus:DI (reg/v/f:DI 319 [ weights ])
                    (reg:DI 205 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:429 -1
     (nil))
(insn 1148 1147 1149 230 (parallel [
            (set (reg:SI 856 [ D.11944 ])
                (plus:SI (reg:SI 567 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:430 -1
     (nil))
(insn 1149 1148 1150 230 (set (reg:DI 346 [ D.11941 ])
        (sign_extend:DI (reg:SI 856 [ D.11944 ]))) fnmatch_loop.c:430 -1
     (nil))
(insn 1150 1149 1151 230 (set (reg:QI 857)
        (mem:QI (reg/f:DI 204 [ D.11945 ]) [0 *_156+0 S1 A8])) fnmatch_loop.c:429 -1
     (nil))
(insn 1151 1150 1152 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 857)
            (mem:QI (plus:DI (reg/v/f:DI 319 [ weights ])
                    (reg:DI 346 [ D.11941 ])) [0 *_72+0 S1 A8]))) fnmatch_loop.c:429 -1
     (nil))
(jump_insn 1152 1151 1153 230 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1174)
            (pc))) fnmatch_loop.c:429 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1174)
(note 1153 1152 1154 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1154 1153 98 231 (set (reg:DI 634 [ ivtmp.478 ])
        (reg/f:DI 204 [ D.11945 ])) -1
     (nil))
(insn 98 1154 1162 231 (set (reg/v:SI 343 [ cnt ])
        (const_int 0 [0])) fnmatch_loop.c:429 -1
     (nil))
(code_label 1162 98 1155 232 908 "" [1 uses])
(note 1155 1162 1156 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1157 232 (parallel [
            (set (reg/v:SI 343 [ cnt ])
                (plus:SI (reg/v:SI 343 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:431 -1
     (nil))
(insn 1157 1156 1158 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 325 [ len ])
            (reg/v:SI 343 [ cnt ]))) fnmatch_loop.c:428 -1
     (nil))
(jump_insn 1158 1157 1159 232 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1169)
            (pc))) fnmatch_loop.c:428 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1169)
(note 1159 1158 1160 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 233 (set (reg:QI 338 [ D.11942 ])
        (mem:QI (plus:DI (reg:DI 634 [ ivtmp.478 ])
                (const_int 1 [0x1])) [0 MEM[base: _509, offset: 1B]+0 S1 A8])) fnmatch_loop.c:429 -1
     (nil))
(insn 1161 1160 1163 233 (parallel [
            (set (reg:DI 634 [ ivtmp.478 ])
                (plus:DI (reg:DI 634 [ ivtmp.478 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1163 1161 1164 233 (parallel [
            (set (reg:DI 858 [ D.11941 ])
                (minus:DI (reg:DI 634 [ ivtmp.478 ])
                    (reg:DI 205 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:430 -1
     (nil))
(insn 1164 1163 1165 233 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 338 [ D.11942 ])
            (mem:QI (plus:DI (reg:DI 858 [ D.11941 ])
                    (reg:DI 346 [ D.11941 ])) [0 MEM[base: _516, index: _362, offset: 0B]+0 S1 A8]))) fnmatch_loop.c:429 -1
     (nil))
(jump_insn 1165 1164 1168 233 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1162)
            (pc))) fnmatch_loop.c:429 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1162)
(note 1168 1165 1166 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1166 1168 1167 234 (set (pc)
        (label_ref 1174)) -1
     (nil)
 -> 1174)
(barrier 1167 1166 1169)
(code_label 1169 1167 1170 235 907 "" [2 uses])
(note 1170 1169 1171 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1171 1170 82 235 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 4 [0x4])) [0 MEM[(const char *)pattern_8 + 4B]+0 S1 A8])) -1
     (nil))
(insn 82 1171 1172 235 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 315 [ pattern ])) -1
     (nil))
(jump_insn 1172 82 1173 235 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 1173 1172 1174)
(code_label 1174 1173 1175 236 872 "" [7 uses])
(note 1175 1174 1176 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 1176 1175 1177 236 (parallel [
            (set (reg/v/f:DI 344 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:439 -1
     (nil))
(insn 1177 1176 116 236 (set (reg/v:QI 148 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 4 [0x4])) [0 MEM[(const char *)pattern_8 + 4B]+0 S1 A8])) fnmatch_loop.c:439 -1
     (nil))
(insn 116 1177 1178 236 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 344 [ pattern ])) fnmatch_loop.c:439 -1
     (nil))
(jump_insn 1178 116 1179 236 (set (pc)
        (label_ref 1670)) fnmatch_loop.c:339 -1
     (nil)
 -> 1670)
(barrier 1179 1178 1180)
(code_label 1180 1179 1181 237 858 "" [1 uses])
(note 1181 1180 1182 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1182 1181 1183 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 148 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:442 -1
     (nil))
(jump_insn 1183 1182 1186 237 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2016)
            (pc))) fnmatch_loop.c:442 612 {*jcc_1}
     (int_list:REG_BR_PROB 256 (nil))
 -> 2016)
(note 1186 1183 1184 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1184 1186 1185 238 (set (pc)
        (label_ref 1410)) -1
     (nil)
 -> 1410)
(barrier 1185 1184 1187)
(code_label 1187 1185 1188 239 869 "" [1 uses])
(note 1188 1187 1189 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 1189 1188 1190 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 664 [ D.11951 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:457 -1
     (nil))
(jump_insn 1190 1189 1191 239 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1413)
            (pc))) fnmatch_loop.c:457 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1413)
(note 1191 1190 99 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 99 1191 1192 240 (set (reg/v/f:DI 145 [ pattern ])
        (reg/v/f:DI 667 [ pattern ])) -1
     (nil))
(jump_insn 1192 99 1193 240 (set (pc)
        (label_ref 1195)) -1
     (nil)
 -> 1195)
(barrier 1193 1192 1204)
(code_label 1204 1193 1194 241 914 "" [2 uses])
(note 1194 1204 100 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 100 1194 1195 241 (set (reg/v/f:DI 145 [ pattern ])
        (reg/v/f:DI 350 [ pattern ])) -1
     (nil))
(code_label 1195 100 1196 242 912 "" [1 uses])
(note 1196 1195 1197 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 1197 1196 1198 242 (parallel [
            (set (reg/f:DI 371 [ D.11943 ])
                (minus:DI (reg/v/f:DI 145 [ pattern ])
                    (reg/v/f:DI 667 [ pattern ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1198 1197 1199 242 (set (reg:DI 376 [ D.11940 ])
        (reg/f:DI 371 [ D.11943 ])) -1
     (nil))
(insn 1199 1198 1200 242 (parallel [
            (set (reg/v/f:DI 350 [ pattern ])
                (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:466 -1
     (nil))
(insn 1200 1199 1201 242 (set (reg/v:QI 352 [ c ])
        (mem:QI (reg/v/f:DI 350 [ pattern ]) [0 MEM[base: pattern_368, offset: 0B]+0 S1 A8])) fnmatch_loop.c:466 -1
     (nil))
(insn 1201 1200 1202 242 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 352 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:467 -1
     (nil))
(jump_insn 1202 1201 1203 242 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1215)
            (pc))) fnmatch_loop.c:467 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1215)
(note 1203 1202 1205 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 1205 1203 1206 243 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 350 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[base: pattern_368, offset: 1B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:467 -1
     (nil))
(jump_insn 1206 1205 1207 243 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1204)
            (pc))) fnmatch_loop.c:467 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1204)
(note 1207 1206 1208 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 1208 1207 1209 244 (parallel [
            (set (reg/v/f:DI 355 [ pattern ])
                (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:469 -1
     (nil))
(insn 1209 1208 1210 244 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 145 [ pattern ])
                (const_int 3 [0x3])) [0 MEM[(const char *)pattern_10 + 3B]+0 S1 A8])) fnmatch_loop.c:480 -1
     (nil))
(insn 1210 1209 1211 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 678 [ D.11951 ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:480 -1
     (nil))
(jump_insn 1211 1210 1214 244 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1222)
            (pc))) fnmatch_loop.c:480 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1222)
(note 1214 1211 101 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 101 1214 1212 245 (set (reg/v:SI 168 [ is_range ])
        (const_int 0 [0])) fnmatch_loop.c:480 -1
     (nil))
(jump_insn 1212 101 1213 245 (set (pc)
        (label_ref 1228)) -1
     (nil)
 -> 1228)
(barrier 1213 1212 1215)
(code_label 1215 1213 1216 246 913 "" [1 uses])
(note 1216 1215 1217 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 1217 1216 1218 246 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 352 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:472 -1
     (nil))
(jump_insn 1218 1217 1221 246 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:472 -1
     (int_list:REG_BR_PROB 617 (nil))
 -> 1886)
(note 1221 1218 1219 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1219 1221 1220 247 (set (pc)
        (label_ref 1204)) -1
     (nil)
 -> 1204)
(barrier 1220 1219 1222)
(code_label 1222 1220 1223 248 915 "" [1 uses])
(note 1223 1222 1224 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1223 1225 248 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 4 [0x4])) [0 MEM[(const char *)pattern_10 + 4B]+0 S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:480 -1
     (nil))
(insn 1225 1224 1226 248 (set (reg:QI 860)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:480 -1
     (nil))
(insn 1226 1225 1227 248 (set (reg:SI 859 [ D.11946 ])
        (zero_extend:SI (reg:QI 860))) fnmatch_loop.c:480 -1
     (nil))
(insn 1227 1226 1228 248 (set (reg/v:SI 168 [ is_range ])
        (reg:SI 859 [ D.11946 ])) fnmatch_loop.c:480 -1
     (nil))
(code_label 1228 1227 1229 249 916 "" [1 uses])
(note 1229 1228 1230 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 1230 1229 1231 249 (set (reg:DI 862)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:460 -1
     (nil))
(insn 1231 1230 1232 249 (set (reg/f:DI 861)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 862)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:460 -1
     (nil))
(insn 1232 1231 1233 249 (set (reg/f:DI 348 [ D.11950 ])
        (mem/f:DI (plus:DI (reg/f:DI 861)
                (const_int 24 [0x18])) [1 _365->__locales+24 S8 A64])) fnmatch_loop.c:460 -1
     (nil))
(insn 1233 1232 1234 249 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 348 [ D.11950 ])
                    (const_int 64 [0x40])) [0 _366->values[0].word+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:482 -1
     (nil))
(jump_insn 1234 1233 1235 249 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1256)
            (pc))) fnmatch_loop.c:482 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1256)
(note 1235 1234 1236 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 1236 1235 1237 250 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 376 [ D.11940 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:487 -1
     (nil))
(jump_insn 1237 1236 1238 250 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:487 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1238 1237 1239 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 1239 1238 1240 251 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1240 1239 1241 251 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1245)
            (pc))) fnmatch_loop.c:490 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1245)
(note 1241 1240 1242 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 1242 1241 102 252 (set (reg:QI 685 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) -1
     (nil))
(insn 102 1242 1243 252 (set (reg/v:QI 150 [ cold ])
        (reg:QI 685 [ D.11951 ])) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1243 102 1244 252 (set (pc)
        (label_ref 1250)) -1
     (nil)
 -> 1250)
(barrier 1244 1243 1245)
(code_label 1245 1244 1246 253 918 "" [1 uses])
(note 1246 1245 1247 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1247 1246 1248 253 (set (reg:QI 408 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) fnmatch_loop.c:490 -1
     (nil))
(insn 1248 1247 1249 253 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])
            (reg:QI 408 [ D.11951 ]))) fnmatch_loop.c:490 -1
     (nil))
(jump_insn 1249 1248 2021 253 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2020)
            (pc))) fnmatch_loop.c:490 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 2020)
(note 2021 1249 103 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 103 2021 1250 254 (set (reg/v:QI 150 [ cold ])
        (reg:QI 408 [ D.11951 ])) -1
     (nil))
(code_label 1250 103 1251 255 919 "" [1 uses])
(note 1251 1250 1252 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 1252 1251 1253 255 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:494 -1
     (nil))
(insn 1253 1252 112 255 (set (reg/v:QI 148 [ c ])
        (reg:QI 678 [ D.11951 ])) fnmatch_loop.c:494 -1
     (nil))
(insn 112 1253 1254 255 (set (reg/v:SI 151 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:455 -1
     (nil))
(jump_insn 1254 112 1255 255 (set (pc)
        (label_ref 1451)) -1
     (nil)
 -> 1451)
(barrier 1255 1254 1256)
(code_label 1256 1255 1257 256 917 "" [1 uses])
(note 1257 1256 1258 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 1258 1257 1259 256 (set (reg/v:SI 358 [ table_size ])
        (mem:SI (plus:DI (reg/f:DI 348 [ D.11950 ])
                (const_int 168 [0xa8])) [0 _366->values[13].word+0 S4 A64])) fnmatch_loop.c:521 -1
     (nil))
(insn 1259 1258 1260 256 (set (reg/v/f:DI 359 [ symb_table ])
        (mem/f:DI (plus:DI (reg/f:DI 348 [ D.11950 ])
                (const_int 176 [0xb0])) [0 _366->values[14].string+0 S8 A64])) fnmatch_loop.c:524 -1
     (nil))
(insn 1260 1259 1261 256 (parallel [
            (set (reg/v/f:DI 362 [ str ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:532 -1
     (nil))
(insn 1261 1260 1262 256 (set (reg/v:SI 624 [ hash ])
        (subreg:SI (reg:DI 376 [ D.11940 ]) 0)) ../locale/elem-hash.h:24 -1
     (nil))
(insn 1262 1261 1263 256 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/f:DI 371 [ D.11943 ])
            (const_int 0 [0]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1263 1262 1264 256 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1275)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1275)
(note 1264 1263 1265 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 257 (parallel [
            (set (reg:DI 863 [ D.11941 ])
                (plus:DI (reg:DI 376 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1266 1265 104 257 (parallel [
            (set (reg/f:DI 375 [ D.11943 ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (reg:DI 863 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 104 1266 1272 257 (set (reg/v/f:DI 621 [ str ])
        (reg/v/f:DI 362 [ str ])) ../locale/elem-hash.h:26 -1
     (nil))
(code_label 1272 104 1267 258 922 "" [1 uses])
(note 1267 1272 1268 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1268 1267 1269 258 (parallel [
            (set (reg/v:SI 619 [ result ])
                (ashift:SI (reg/v:SI 624 [ hash ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:28 -1
     (nil))
(insn 1269 1268 1270 258 (parallel [
            (set (reg/v/f:DI 621 [ str ])
                (plus:DI (reg/v/f:DI 621 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1270 1269 1271 258 (set (reg:SI 864 [ D.11944 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 621 [ str ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: str_764, offset: -1B]+0 S1 A8]))) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1271 1270 1273 258 (parallel [
            (set (reg/v:SI 624 [ hash ])
                (plus:SI (reg:SI 864 [ D.11944 ])
                    (reg/v:SI 619 [ result ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1273 1271 1274 258 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 375 [ D.11943 ])
            (reg/v/f:DI 621 [ str ]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1274 1273 1275 258 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1272)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1272)
(code_label 1275 1274 1276 259 921 "" [1 uses])
(note 1276 1275 1277 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 1277 1276 1278 259 (parallel [
            (set (reg:SI 866)
                (div:SI (reg/v:SI 624 [ hash ])
                    (reg/v:SI 358 [ table_size ])))
            (set (reg:SI 865)
                (mod:SI (reg/v:SI 624 [ hash ])
                    (reg/v:SI 358 [ table_size ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:535 -1
     (nil))
(insn 1278 1277 1279 259 (set (reg/v:SI 363 [ elem ])
        (reg:SI 865)) fnmatch_loop.c:535 -1
     (nil))
(insn 1279 1278 1280 259 (parallel [
            (set (reg:SI 867 [ D.11944 ])
                (ashift:SI (reg/v:SI 363 [ elem ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:536 -1
     (nil))
(insn 1280 1279 1281 259 (set (reg:DI 365 [ D.11940 ])
        (sign_extend:DI (reg:SI 867 [ D.11944 ]))) fnmatch_loop.c:536 -1
     (nil))
(insn 1281 1280 1282 259 (set (reg:SI 378 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 365 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 359 [ symb_table ])) [2 *_386+0 S4 A32])) fnmatch_loop.c:536 -1
     (nil))
(insn 1282 1281 1283 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 378 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:536 -1
     (nil))
(jump_insn 1283 1282 1284 259 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1388)
            (pc))) fnmatch_loop.c:536 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1388)
(note 1284 1283 1285 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 260 (set (reg/v/f:DI 360 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 348 [ D.11950 ])
                (const_int 184 [0xb8])) [0 _366->values[15].string+0 S8 A64])) fnmatch_loop.c:527 -1
     (nil))
(insn 1286 1285 1287 260 (parallel [
            (set (reg:SI 868 [ D.11944 ])
                (plus:SI (reg/v:SI 358 [ table_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1287 1286 1288 260 (parallel [
            (set (reg:SI 871)
                (div:SI (reg/v:SI 624 [ hash ])
                    (reg:SI 868 [ D.11944 ])))
            (set (reg:SI 870 [ D.11944 ])
                (mod:SI (reg/v:SI 624 [ hash ])
                    (reg:SI 868 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1288 1287 1289 260 (parallel [
            (set (reg/v:SI 370 [ second ])
                (plus:SI (reg:SI 870 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:538 -1
     (nil))
(insn 1289 1288 1290 260 (parallel [
            (set (reg:SI 872 [ D.11944 ])
                (ashift:SI (reg/v:SI 370 [ second ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1290 1289 1291 260 (set (reg:DI 873 [ D.11940 ])
        (sign_extend:DI (reg:SI 872 [ D.11944 ]))) -1
     (nil))
(insn 1291 1290 1292 260 (parallel [
            (set (reg:DI 598 [ D.11941 ])
                (ashift:DI (reg:DI 873 [ D.11940 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1292 1291 1293 260 (parallel [
            (set (reg:DI 874 [ D.11941 ])
                (plus:DI (reg:DI 365 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1293 1292 1294 260 (parallel [
            (set (reg:DI 875 [ D.11941 ])
                (ashift:DI (reg:DI 874 [ D.11941 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1294 1293 1295 260 (parallel [
            (set (reg:DI 392 [ ivtmp.538 ])
                (plus:DI (reg/v/f:DI 359 [ symb_table ])
                    (reg:DI 875 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1295 1294 1296 260 (set (reg:SI 671 [ D.11957 ])
        (reg/v:SI 363 [ elem ])) -1
     (nil))
(insn 1296 1295 1297 260 (set (reg:SI 670 [ D.11957 ])
        (reg/v:SI 370 [ second ])) -1
     (nil))
(insn 1297 1296 1298 260 (parallel [
            (set (reg:SI 876 [ D.11957 ])
                (plus:SI (reg:SI 670 [ D.11957 ])
                    (reg:SI 671 [ D.11957 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1298 1297 1299 260 (parallel [
            (set (reg:SI 877 [ D.11957 ])
                (ashift:SI (reg:SI 876 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1299 1298 1300 260 (set (reg:DI 878 [ D.11941 ])
        (sign_extend:DI (reg:SI 877 [ D.11957 ]))) -1
     (nil))
(insn 1300 1299 1301 260 (parallel [
            (set (reg:SI 879 [ D.11957 ])
                (ashift:SI (reg:SI 671 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1301 1300 1302 260 (set (reg:DI 880 [ D.11941 ])
        (sign_extend:DI (reg:SI 879 [ D.11957 ]))) -1
     (nil))
(insn 1302 1301 1303 260 (parallel [
            (set (reg:DI 881 [ D.11941 ])
                (minus:DI (reg:DI 878 [ D.11941 ])
                    (reg:DI 880 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1303 1302 1304 260 (parallel [
            (set (reg:SI 882 [ D.11957 ])
                (ashift:SI (reg:SI 670 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1304 1303 1305 260 (set (reg:DI 883 [ D.11941 ])
        (sign_extend:DI (reg:SI 882 [ D.11957 ]))) -1
     (nil))
(insn 1305 1304 1341 260 (parallel [
            (set (reg:DI 174 [ D.11941 ])
                (minus:DI (reg:DI 881 [ D.11941 ])
                    (reg:DI 883 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1341 1305 1306 261 927 "" [1 uses])
(note 1306 1341 1307 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 1307 1306 1308 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 624 [ hash ])
            (reg:SI 378 [ D.11944 ]))) fnmatch_loop.c:543 -1
     (nil))
(jump_insn 1308 1307 1309 261 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) fnmatch_loop.c:543 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1337)
(note 1309 1308 1310 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 1310 1309 1311 262 (set (reg:SI 381 [ D.11944 ])
        (mem:SI (reg:DI 392 [ ivtmp.538 ]) [2 MEM[base: _77, offset: 0B]+0 S4 A32])) fnmatch_loop.c:545 -1
     (nil))
(insn 1311 1310 1312 262 (set (reg:DI 382 [ D.11941 ])
        (sign_extend:DI (reg:SI 381 [ D.11944 ]))) fnmatch_loop.c:545 -1
     (nil))
(insn 1312 1311 1313 262 (set (reg:QI 384 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 360 [ extra ])
                (reg:DI 382 [ D.11941 ])) [0 *_407+0 S1 A8])) fnmatch_loop.c:545 -1
     (nil))
(insn 1313 1312 1314 262 (set (reg:DI 884 [ D.11940 ])
        (zero_extend:DI (reg:QI 384 [ D.11942 ]))) fnmatch_loop.c:544 -1
     (nil))
(insn 1314 1313 1315 262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 376 [ D.11940 ])
            (reg:DI 884 [ D.11940 ]))) fnmatch_loop.c:544 -1
     (nil))
(jump_insn 1315 1314 1316 262 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) fnmatch_loop.c:544 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1337)
(note 1316 1315 1317 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 1317 1316 1318 263 (parallel [
            (set (reg:DI 885 [ D.11941 ])
                (plus:DI (reg:DI 382 [ D.11941 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:546 -1
     (nil))
(insn 1318 1317 1319 263 (parallel [
            (set (reg:DI 886 [ D.11945 ])
                (plus:DI (reg/v/f:DI 360 [ extra ])
                    (reg:DI 885 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:546 -1
     (nil))
(insn 1319 1318 1320 263 (set (reg:DI 1 dx)
        (reg:DI 376 [ D.11940 ])) fnmatch_loop.c:546 -1
     (nil))
(insn 1320 1319 1321 263 (set (reg:DI 4 si)
        (reg:DI 886 [ D.11945 ])) fnmatch_loop.c:546 -1
     (nil))
(insn 1321 1320 1322 263 (set (reg:DI 5 di)
        (reg/v/f:DI 362 [ str ])) fnmatch_loop.c:546 -1
     (nil))
(call_insn/i 1322 1321 1323 263 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:546 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1323 1322 1324 263 (set (reg:SI 887)
        (reg:SI 0 ax)) fnmatch_loop.c:546 -1
     (nil))
(insn 1324 1323 1325 263 (set (reg:SI 888)
        (reg:SI 887)) fnmatch_loop.c:546 -1
     (nil))
(insn 1325 1324 1326 263 (set (reg:SI 388 [ D.11944 ])
        (reg:SI 888)) fnmatch_loop.c:546 -1
     (nil))
(insn 1326 1325 1327 263 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 388 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:546 -1
     (nil))
(jump_insn 1327 1326 1328 263 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1337)
            (pc))) fnmatch_loop.c:546 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1337)
(note 1328 1327 1329 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 1329 1328 1330 264 (set (reg:SI 889 [ D.11944 ])
        (zero_extend:SI (reg:QI 384 [ D.11942 ]))) fnmatch_loop.c:553 -1
     (nil))
(insn 1330 1329 1331 264 (parallel [
            (set (reg:SI 890 [ D.11944 ])
                (plus:SI (reg:SI 889 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:553 -1
     (nil))
(insn 1331 1330 1332 264 (parallel [
            (set (reg/v:SI 391 [ idx ])
                (plus:SI (reg:SI 890 [ D.11944 ])
                    (reg:SI 381 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:553 -1
     (nil))
(insn 1332 1331 1333 264 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:577 -1
     (nil))
(jump_insn 1333 1332 1336 264 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1353)
            (pc))) fnmatch_loop.c:577 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1353)
(note 1336 1333 1334 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1334 1336 1335 265 (set (pc)
        (label_ref 1347)) -1
     (nil)
 -> 1347)
(barrier 1335 1334 1337)
(code_label 1337 1335 1338 266 924 "" [3 uses])
(note 1338 1337 1339 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 266 (parallel [
            (set (reg:DI 392 [ ivtmp.538 ])
                (plus:DI (reg:DI 392 [ ivtmp.538 ])
                    (reg:DI 598 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1340 1339 1342 266 (set (reg:SI 378 [ D.11944 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 174 [ D.11941 ])
                        (const_int 4 [0x4]))
                    (reg:DI 392 [ ivtmp.538 ]))
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: _354, index: _78, step: 4, offset: -4B]+0 S4 A32])) fnmatch_loop.c:560 -1
     (nil))
(insn 1342 1340 1343 266 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 378 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:560 -1
     (nil))
(jump_insn 1343 1342 1346 266 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1341)
            (pc))) fnmatch_loop.c:560 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1341)
(note 1346 1343 1344 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1344 1346 1345 267 (set (pc)
        (label_ref 1388)) -1
     (nil)
 -> 1388)
(barrier 1345 1344 1347)
(code_label 1347 1345 1348 268 926 "" [1 uses])
(note 1348 1347 1349 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 1349 1348 1350 268 (set (reg:DI 891 [ D.11941 ])
        (sign_extend:DI (reg/v:SI 391 [ idx ]))) -1
     (nil))
(insn 1350 1349 1351 268 (set (reg:QI 682 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 360 [ extra ])
                (reg:DI 891 [ D.11941 ])) [0 *_1133+0 S1 A8])) -1
     (nil))
(jump_insn 1351 1350 1352 268 (set (pc)
        (label_ref 1374)) -1
     (nil)
 -> 1374)
(barrier 1352 1351 1353)
(code_label 1353 1352 1354 269 925 "" [1 uses])
(note 1354 1353 1355 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 1355 1354 1356 269 (set (reg:DI 892 [ D.11941 ])
        (sign_extend:DI (reg/v:SI 391 [ idx ]))) -1
     (nil))
(insn 1356 1355 1357 269 (set (reg:QI 682 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 360 [ extra ])
                (reg:DI 892 [ D.11941 ])) [0 *_1138+0 S1 A8])) -1
     (nil))
(insn 1357 1356 105 269 (set (reg:DI 699 [ D.11940 ])
        (zero_extend:DI (reg:QI 682 [ D.11942 ]))) -1
     (nil))
(insn 105 1357 1358 269 (set (reg/v:DI 152 [ c1 ])
        (const_int 0 [0])) fnmatch_loop.c:577 -1
     (nil))
(jump_insn 1358 105 1359 269 (set (pc)
        (label_ref 1366)) -1
     (nil)
 -> 1366)
(barrier 1359 1358 1368)
(code_label 1368 1359 1360 270 930 "" [1 uses])
(note 1360 1368 1361 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 1361 1360 1362 270 (set (reg:SI 394 [ D.11944 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                    (reg/v:DI 152 [ c1 ])) [0 MEM[base: np_28, index: c1_46, offset: 0B]+0 S1 A8]))) fnmatch_loop.c:590 -1
     (nil))
(insn 1362 1361 1363 270 (parallel [
            (set (reg/v:DI 152 [ c1 ])
                (plus:DI (reg/v:DI 152 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:590 -1
     (nil))
(insn 1363 1362 1364 270 (set (reg:SI 893 [ D.11944 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 360 [ extra ])
                    (reg/v:DI 152 [ c1 ])) [0 MEM[base: extra_379, index: c1_428, offset: 0B]+0 S1 A8]))) fnmatch_loop.c:590 -1
     (nil))
(insn 1364 1363 1365 270 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 394 [ D.11944 ])
            (reg:SI 893 [ D.11944 ]))) fnmatch_loop.c:590 -1
     (nil))
(jump_insn 1365 1364 1366 270 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1374)
            (pc))) fnmatch_loop.c:590 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1374)
(code_label 1366 1365 1367 271 929 "" [1 uses])
(note 1367 1366 1369 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 1369 1367 1370 271 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 152 [ c1 ])
            (reg:DI 699 [ D.11940 ]))) fnmatch_loop.c:589 -1
     (nil))
(jump_insn 1370 1369 1373 271 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1368)
            (pc))) fnmatch_loop.c:589 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1368)
(note 1373 1370 84 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 84 1373 1371 272 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 355 [ pattern ])) fnmatch_loop.c:469 -1
     (nil))
(jump_insn 1371 84 1372 272 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 1372 1371 1374)
(code_label 1374 1372 1375 273 928 "" [2 uses])
(note 1375 1374 1376 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 1376 1375 1377 273 (set (reg:SI 894 [ D.11944 ])
        (zero_extend:SI (reg:QI 682 [ D.11942 ]))) fnmatch_loop.c:605 -1
     (nil))
(insn 1377 1376 1378 273 (parallel [
            (set (reg:SI 895 [ D.11944 ])
                (plus:SI (reg:SI 894 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:605 -1
     (nil))
(insn 1378 1377 1379 273 (parallel [
            (set (reg:SI 896 [ idx ])
                (plus:SI (reg:SI 895 [ D.11944 ])
                    (reg/v:SI 391 [ idx ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:605 -1
     (nil))
(insn 1379 1378 1380 273 (parallel [
            (set (reg:SI 400 [ D.11944 ])
                (plus:SI (reg:SI 896 [ idx ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:605 -1
     (nil))
(insn 1380 1379 1381 273 (parallel [
            (set (reg:SI 897 [ idx ])
                (and:SI (reg:SI 400 [ D.11944 ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:606 -1
     (nil))
(insn 1381 1380 1382 273 (set (reg:DI 898 [ D.11941 ])
        (sign_extend:DI (reg:SI 897 [ idx ]))) fnmatch_loop.c:606 -1
     (nil))
(insn 1382 1381 1383 273 (set (reg:SI 899)
        (mem:SI (plus:DI (reg/v/f:DI 360 [ extra ])
                (reg:DI 898 [ D.11941 ])) [2 *_441+0 S4 A32])) fnmatch_loop.c:606 -1
     (nil))
(insn 1383 1382 1384 273 (set (reg/v:QI 150 [ cold ])
        (subreg:QI (reg:SI 899) 0)) fnmatch_loop.c:606 -1
     (nil))
(insn 1384 1383 1385 273 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:609 -1
     (nil))
(insn 1385 1384 110 273 (set (reg/v:QI 148 [ c ])
        (reg:QI 678 [ D.11951 ])) fnmatch_loop.c:609 -1
     (nil))
(insn 110 1385 1386 273 (set (reg/v:SI 151 [ is_seqval ])
        (const_int 1 [0x1])) fnmatch_loop.c:599 -1
     (nil))
(jump_insn 1386 110 1387 273 (set (pc)
        (label_ref 1451)) -1
     (nil)
 -> 1451)
(barrier 1387 1386 1388)
(code_label 1388 1387 1389 274 923 "" [2 uses])
(note 1389 1388 1390 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 1390 1389 1391 274 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 376 [ D.11940 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:611 -1
     (nil))
(jump_insn 1391 1390 1392 274 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:611 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1392 1391 1393 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 1393 1392 1394 275 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ is_range ])
            (const_int 0 [0]))) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1394 1393 1395 275 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1399)
            (pc))) fnmatch_loop.c:615 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1399)
(note 1395 1394 1396 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 1396 1395 106 276 (set (reg:QI 679 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) -1
     (nil))
(insn 106 1396 1397 276 (set (reg/v:QI 150 [ cold ])
        (reg:QI 679 [ D.11951 ])) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1397 106 1398 276 (set (pc)
        (label_ref 1404)) -1
     (nil)
 -> 1404)
(barrier 1398 1397 1399)
(code_label 1399 1398 1400 277 931 "" [1 uses])
(note 1400 1399 1401 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 1401 1400 1402 277 (set (reg:QI 406 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_8 + 1B]+0 S1 A8])) fnmatch_loop.c:615 -1
     (nil))
(insn 1402 1401 1403 277 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])
            (reg:QI 406 [ D.11951 ]))) fnmatch_loop.c:615 -1
     (nil))
(jump_insn 1403 1402 2026 277 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2025)
            (pc))) fnmatch_loop.c:615 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 2025)
(note 2026 1403 107 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 107 2026 1404 278 (set (reg/v:QI 150 [ cold ])
        (reg:QI 406 [ D.11951 ])) -1
     (nil))
(code_label 1404 107 1405 279 932 "" [1 uses])
(note 1405 1404 1406 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 1406 1405 1407 279 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 145 [ pattern ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:619 -1
     (nil))
(insn 1407 1406 113 279 (set (reg/v:QI 148 [ c ])
        (reg:QI 678 [ D.11951 ])) fnmatch_loop.c:619 -1
     (nil))
(insn 113 1407 1408 279 (set (reg/v:SI 151 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:455 -1
     (nil))
(jump_insn 1408 113 1409 279 (set (pc)
        (label_ref 1451)) -1
     (nil)
 -> 1451)
(barrier 1409 1408 1410)
(code_label 1410 1409 1411 280 910 "" [1 uses])
(note 1411 1410 1412 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 1412 1411 1413 280 (set (reg:QI 664 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_8+0 S1 A8])) -1
     (nil))
(code_label 1413 1412 1414 281 911 "" [1 uses])
(note 1414 1413 1415 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 1415 1414 1416 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:629 -1
     (nil))
(jump_insn 1416 1415 1417 281 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1423)
            (pc))) fnmatch_loop.c:629 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1423)
(note 1417 1416 1418 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 1418 1417 1419 282 (set (reg:DI 900)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:629 -1
     (nil))
(insn 1419 1418 1420 282 (set (reg:DI 901 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 148 [ c ]))) fnmatch_loop.c:629 -1
     (nil))
(insn 1420 1419 1421 282 (set (reg/f:DI 902)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 900)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:629 -1
     (nil))
(insn 1421 1420 1422 282 (set (reg/v:SI 413 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 901 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 902)) [2 *_459+0 S4 A32])) fnmatch_loop.c:629 -1
     (nil))
(insn 1422 1421 1423 282 (set (reg/v:QI 148 [ c ])
        (subreg:QI (reg/v:SI 413 [ __res ]) 0)) fnmatch_loop.c:629 -1
     (nil))
(code_label 1423 1422 1424 283 857 ("normal_bracket") [3 uses])
(note 1424 1423 1425 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 1425 1424 1426 283 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 664 [ D.11951 ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1426 1425 1427 283 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) fnmatch_loop.c:636 -1
     (int_list:REG_BR_PROB 7009 (nil))
 -> 1438)
(note 1427 1426 1428 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 1428 1427 1429 284 (set (reg:QI 414 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_11 + 1B]+0 S1 A8])) fnmatch_loop.c:635 -1
     (nil))
(insn 1429 1428 1430 284 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 414 [ D.11951 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1430 1429 1431 284 (set (reg:QI 904 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1431 1430 1432 284 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 904 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1432 1431 2063 284 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1438)
            (pc))) fnmatch_loop.c:636 612 {*jcc_1}
     (int_list:REG_BR_PROB 1400 (nil))
 -> 1438)
(note 2063 1432 1433 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 1433 2063 1434 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 414 [ D.11951 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1434 1433 1435 285 (set (reg:QI 906 [ D.11946 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(insn 1435 1434 1436 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 906 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:636 -1
     (nil))
(jump_insn 1436 1435 2064 285 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1446)
            (pc))) fnmatch_loop.c:636 -1
     (int_list:REG_BR_PROB 8372 (nil))
 -> 1446)
(note 2064 1436 1992 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1992 2064 1993 286 (set (pc)
        (label_ref 1438)) -1
     (nil)
 -> 1438)
(barrier 1993 1992 1995)
(code_label 1995 1993 1994 288 981 "" [1 uses])
(note 1994 1995 109 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 109 1994 1438 288 (set (reg:QI 664 [ D.11951 ])
        (reg:QI 313 [ D.11951 ])) fnmatch_loop.c:635 -1
     (nil))
(code_label 1438 109 1439 289 870 "" [5 uses])
(note 1439 1438 1440 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 1440 1439 1441 289 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 167 [ fn ])
            (reg/v:QI 148 [ c ]))) fnmatch_loop.c:638 -1
     (nil))
(jump_insn 1441 1440 1442 289 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1446)
            (pc))) fnmatch_loop.c:638 -1
     (int_list:REG_BR_PROB 9778 (nil))
 -> 1446)
(note 1442 1441 1443 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 1443 1442 1444 290 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_1041+0 S1 A8])) -1
     (nil))
(jump_insn 1444 1443 1445 290 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 1445 1444 1446)
(code_label 1446 1445 1447 291 933 "" [2 uses])
(note 1447 1446 1448 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1447 1449 291 (set (reg/v:QI 150 [ cold ])
        (reg/v:QI 148 [ c ])) fnmatch_loop.c:644 -1
     (nil))
(insn 1449 1448 1450 291 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:645 -1
     (nil))
(insn 1450 1449 111 291 (set (reg/v:QI 148 [ c ])
        (reg:QI 664 [ D.11951 ])) fnmatch_loop.c:645 -1
     (nil))
(insn 111 1450 1451 291 (set (reg/v:SI 151 [ is_seqval ])
        (const_int 0 [0])) fnmatch_loop.c:643 -1
     (nil))
(code_label 1451 111 1452 292 920 "" [3 uses])
(note 1452 1451 1453 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 1453 1452 1454 292 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 148 [ c ])
            (const_int 45 [0x2d]))) fnmatch_loop.c:648 -1
     (nil))
(jump_insn 1454 1453 1455 292 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1670)
            (pc))) fnmatch_loop.c:648 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1670)
(note 1455 1454 1456 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1458 293 (set (reg:QI 416 [ D.11951 ])
        (mem:QI (reg/v/f:DI 667 [ pattern ]) [0 *pattern_12+0 S1 A8])) fnmatch_loop.c:648 -1
     (nil))
(insn 1458 1456 1459 293 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 416 [ D.11951 ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:648 -1
     (nil))
(jump_insn 1459 1458 1460 293 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1457)
            (pc))) fnmatch_loop.c:648 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1457)
(note 1460 1459 1461 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 1461 1460 1462 294 (parallel [
            (set (reg/v/f:DI 476 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:661 -1
     (nil))
(insn 1462 1461 1463 294 (set (reg/v:QI 154 [ cend ])
        (reg:QI 416 [ D.11951 ])) fnmatch_loop.c:661 -1
     (nil))
(insn 1463 1462 1464 294 (set (reg:DI 907 [ D.11941 ])
        (zero_extend:DI (reg/v:QI 167 [ fn ]))) fnmatch_loop.c:677 -1
     (nil))
(insn 1464 1463 1465 294 (set (reg/v:SI 420 [ fcollseq ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 183 [ collseq ])
                    (reg:DI 907 [ D.11941 ])) [0 *_474+0 S1 A8]))) fnmatch_loop.c:677 -1
     (nil))
(insn 1465 1464 1466 294 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 151 [ is_seqval ])
            (const_int 0 [0]))) fnmatch_loop.c:678 -1
     (nil))
(jump_insn 1466 1465 1467 294 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1471)
            (pc))) fnmatch_loop.c:678 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1471)
(note 1467 1466 1468 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 1468 1467 1469 295 (set (reg/v:SI 171 [ lcollseq ])
        (sign_extend:SI (reg/v:QI 150 [ cold ]))) fnmatch_loop.c:678 -1
     (nil))
(jump_insn 1469 1468 1470 295 (set (pc)
        (label_ref 1475)) -1
     (nil)
 -> 1475)
(barrier 1470 1469 1471)
(code_label 1471 1470 1472 296 936 "" [1 uses])
(note 1472 1471 1473 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 1473 1472 1474 296 (set (reg:DI 908 [ D.11941 ])
        (zero_extend:DI (reg/v:QI 150 [ cold ]))) fnmatch_loop.c:678 -1
     (nil))
(insn 1474 1473 1475 296 (set (reg/v:SI 171 [ lcollseq ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 183 [ collseq ])
                    (reg:DI 908 [ D.11941 ])) [0 *_480+0 S1 A8]))) fnmatch_loop.c:678 -1
     (nil))
(code_label 1475 1474 1476 297 937 "" [1 uses])
(note 1476 1475 1477 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 1477 1476 1478 297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 154 [ cend ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:682 -1
     (nil))
(jump_insn 1478 1477 1479 297 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1617)
            (pc))) fnmatch_loop.c:682 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1617)
(note 1479 1478 1480 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 1480 1479 1481 298 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_12 + 1B]+0 S1 A8])
            (const_int 46 [0x2e]))) fnmatch_loop.c:682 -1
     (nil))
(jump_insn 1481 1480 1482 298 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1632)
            (pc))) fnmatch_loop.c:682 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1632)
(note 1482 1481 114 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 114 1482 1508 299 (set (reg/v:DI 156 [ c1 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 1508 114 1483 300 944 "" [1 uses])
(note 1483 1508 1484 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 1484 1483 1485 300 (parallel [
            (set (reg/v/f:DI 476 [ pattern ])
                (plus:DI (reg/v/f:DI 476 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:692 -1
     (nil))
(insn 1485 1484 1486 300 (set (reg/v:QI 430 [ c ])
        (mem:QI (reg/v/f:DI 476 [ pattern ]) [0 MEM[base: pattern_487, offset: 0B]+0 S1 A8])) fnmatch_loop.c:692 -1
     (nil))
(insn 1486 1485 1487 300 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 430 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:693 -1
     (nil))
(jump_insn 1487 1486 1488 300 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1501)
            (pc))) fnmatch_loop.c:693 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1501)
(note 1488 1487 1489 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 1489 1488 1490 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 476 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[base: pattern_487, offset: 1B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:693 -1
     (nil))
(jump_insn 1490 1489 1491 301 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1505)
            (pc))) fnmatch_loop.c:693 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1505)
(note 1491 1490 1492 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 1492 1491 1493 302 (set (reg:DI 910)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:685 -1
     (nil))
(insn 1493 1492 1494 302 (set (reg/f:DI 909)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 910)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch_loop.c:685 -1
     (nil))
(insn 1494 1493 1495 302 (set (reg/f:DI 427 [ D.11950 ])
        (mem/f:DI (plus:DI (reg/f:DI 909)
                (const_int 24 [0x18])) [1 _484->__locales+24 S8 A64])) fnmatch_loop.c:685 -1
     (nil))
(insn 1495 1494 1496 302 (parallel [
            (set (reg/v/f:DI 476 [ pattern ])
                (plus:DI (reg/v/f:DI 476 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:695 -1
     (nil))
(insn 1496 1495 1497 302 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 427 [ D.11950 ])
                    (const_int 64 [0x40])) [0 _485->values[0].word+0 S4 A64])
            (const_int 0 [0]))) fnmatch_loop.c:703 -1
     (nil))
(jump_insn 1497 1496 1500 302 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1511)
            (pc))) fnmatch_loop.c:703 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1511)
(note 1500 1497 1498 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1498 1500 1499 303 (set (pc)
        (label_ref 1519)) -1
     (nil)
 -> 1519)
(barrier 1499 1498 1501)
(code_label 1501 1499 1502 304 940 "" [1 uses])
(note 1502 1501 1503 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1502 1504 304 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 430 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:698 -1
     (nil))
(jump_insn 1504 1503 1505 304 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:698 -1
     (int_list:REG_BR_PROB 618 (nil))
 -> 1886)
(code_label 1505 1504 1506 305 941 "" [1 uses])
(note 1506 1505 1507 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1506 1509 305 (parallel [
            (set (reg/v:DI 156 [ c1 ])
                (plus:DI (reg/v:DI 156 [ c1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:700 -1
     (nil))
(jump_insn 1509 1507 1510 305 (set (pc)
        (label_ref 1508)) fnmatch_loop.c:701 -1
     (nil)
 -> 1508)
(barrier 1510 1509 1511)
(code_label 1511 1510 1512 306 942 "" [1 uses])
(note 1512 1511 1513 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 1513 1512 1514 306 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 156 [ c1 ])
            (const_int 1 [0x1]))) fnmatch_loop.c:709 -1
     (nil))
(jump_insn 1514 1513 1515 306 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:709 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1515 1514 1516 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 1516 1515 1517 307 (set (reg/v:QI 154 [ cend ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_12 + 2B]+0 S1 A8])) fnmatch_loop.c:712 -1
     (nil))
(jump_insn 1517 1516 1518 307 (set (pc)
        (label_ref 1900)) -1
     (nil)
 -> 1900)
(barrier 1518 1517 1519)
(code_label 1519 1518 1520 308 943 "" [1 uses])
(note 1520 1519 1521 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 1521 1520 1522 308 (set (reg/v:SI 433 [ table_size ])
        (mem:SI (plus:DI (reg/f:DI 427 [ D.11950 ])
                (const_int 168 [0xa8])) [0 _485->values[13].word+0 S4 A64])) fnmatch_loop.c:739 -1
     (nil))
(insn 1522 1521 1523 308 (set (reg/v/f:DI 434 [ symb_table ])
        (mem/f:DI (plus:DI (reg/f:DI 427 [ D.11950 ])
                (const_int 176 [0xb0])) [0 _485->values[14].string+0 S8 A64])) fnmatch_loop.c:742 -1
     (nil))
(insn 1523 1522 1524 308 (parallel [
            (set (reg/v/f:DI 437 [ str ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:751 -1
     (nil))
(insn 1524 1523 1525 308 (set (reg/v:SI 631 [ hash ])
        (subreg:SI (reg/v:DI 156 [ c1 ]) 0)) ../locale/elem-hash.h:24 -1
     (nil))
(insn 1525 1524 1526 308 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:DI 156 [ c1 ])
            (const_int 0 [0]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1526 1525 1527 308 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1537)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1537)
(note 1527 1526 1528 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 1528 1527 115 309 (parallel [
            (set (reg/f:DI 157 [ D.11943 ])
                (plus:DI (reg/v/f:DI 437 [ str ])
                    (reg/v:DI 156 [ c1 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 115 1528 1534 309 (set (reg/v/f:DI 628 [ str ])
        (reg/v/f:DI 437 [ str ])) ../locale/elem-hash.h:26 -1
     (nil))
(code_label 1534 115 1529 310 947 "" [1 uses])
(note 1529 1534 1530 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 1530 1529 1531 310 (parallel [
            (set (reg/v:SI 627 [ result ])
                (ashift:SI (reg/v:SI 631 [ hash ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:28 -1
     (nil))
(insn 1531 1530 1532 310 (parallel [
            (set (reg/v/f:DI 628 [ str ])
                (plus:DI (reg/v/f:DI 628 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1532 1531 1533 310 (set (reg:SI 911 [ D.11944 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 628 [ str ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: str_774, offset: -1B]+0 S1 A8]))) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1533 1532 1535 310 (parallel [
            (set (reg/v:SI 631 [ hash ])
                (plus:SI (reg:SI 911 [ D.11944 ])
                    (reg/v:SI 627 [ result ])))
            (clobber (reg:CC 17 flags))
        ]) ../locale/elem-hash.h:29 -1
     (nil))
(insn 1535 1533 1536 310 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 157 [ D.11943 ])
            (reg/v/f:DI 628 [ str ]))) ../locale/elem-hash.h:26 -1
     (nil))
(jump_insn 1536 1535 1537 310 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1534)
            (pc))) ../locale/elem-hash.h:26 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1534)
(code_label 1537 1536 1538 311 946 "" [1 uses])
(note 1538 1537 1539 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 1539 1538 1540 311 (parallel [
            (set (reg:SI 913)
                (div:SI (reg/v:SI 631 [ hash ])
                    (reg/v:SI 433 [ table_size ])))
            (set (reg:SI 912)
                (mod:SI (reg/v:SI 631 [ hash ])
                    (reg/v:SI 433 [ table_size ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:754 -1
     (nil))
(insn 1540 1539 1541 311 (set (reg/v:SI 438 [ elem ])
        (reg:SI 912)) fnmatch_loop.c:754 -1
     (nil))
(insn 1541 1540 1542 311 (parallel [
            (set (reg:SI 914 [ D.11944 ])
                (ashift:SI (reg/v:SI 438 [ elem ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:755 -1
     (nil))
(insn 1542 1541 1543 311 (set (reg:DI 440 [ D.11940 ])
        (sign_extend:DI (reg:SI 914 [ D.11944 ]))) fnmatch_loop.c:755 -1
     (nil))
(insn 1543 1542 1544 311 (set (reg:SI 450 [ D.11944 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 440 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 434 [ symb_table ])) [2 *_503+0 S4 A32])) fnmatch_loop.c:755 -1
     (nil))
(insn 1544 1543 1545 311 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 450 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:755 -1
     (nil))
(jump_insn 1545 1544 1546 311 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:755 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1886)
(note 1546 1545 1547 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 1547 1546 1548 312 (set (reg/v/f:DI 435 [ extra ])
        (mem/f:DI (plus:DI (reg/f:DI 427 [ D.11950 ])
                (const_int 184 [0xb8])) [0 _485->values[15].string+0 S8 A64])) fnmatch_loop.c:745 -1
     (nil))
(insn 1548 1547 1549 312 (parallel [
            (set (reg:SI 915 [ D.11944 ])
                (plus:SI (reg/v:SI 433 [ table_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1549 1548 1550 312 (parallel [
            (set (reg:SI 918)
                (div:SI (reg/v:SI 631 [ hash ])
                    (reg:SI 915 [ D.11944 ])))
            (set (reg:SI 917 [ D.11944 ])
                (mod:SI (reg/v:SI 631 [ hash ])
                    (reg:SI 915 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1550 1549 1551 312 (parallel [
            (set (reg/v:SI 445 [ second ])
                (plus:SI (reg:SI 917 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:757 -1
     (nil))
(insn 1551 1550 1552 312 (parallel [
            (set (reg:SI 919 [ D.11944 ])
                (ashift:SI (reg/v:SI 445 [ second ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1552 1551 1553 312 (set (reg:DI 920 [ D.11940 ])
        (sign_extend:DI (reg:SI 919 [ D.11944 ]))) -1
     (nil))
(insn 1553 1552 1554 312 (parallel [
            (set (reg:DI 663 [ D.11941 ])
                (ashift:DI (reg:DI 920 [ D.11940 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1554 1553 1555 312 (parallel [
            (set (reg:DI 921 [ D.11941 ])
                (plus:DI (reg:DI 440 [ D.11940 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1555 1554 1556 312 (parallel [
            (set (reg:DI 922 [ D.11941 ])
                (ashift:DI (reg:DI 921 [ D.11941 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1556 1555 1557 312 (parallel [
            (set (reg:DI 691 [ ivtmp.448 ])
                (plus:DI (reg/v/f:DI 434 [ symb_table ])
                    (reg:DI 922 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1557 1556 1558 312 (set (reg:SI 353 [ D.11957 ])
        (reg/v:SI 438 [ elem ])) -1
     (nil))
(insn 1558 1557 1559 312 (set (reg:SI 372 [ D.11957 ])
        (reg/v:SI 445 [ second ])) -1
     (nil))
(insn 1559 1558 1560 312 (parallel [
            (set (reg:SI 923 [ D.11957 ])
                (plus:SI (reg:SI 353 [ D.11957 ])
                    (reg:SI 372 [ D.11957 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1560 1559 1561 312 (parallel [
            (set (reg:SI 924 [ D.11957 ])
                (ashift:SI (reg:SI 923 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1561 1560 1562 312 (set (reg:DI 925 [ D.11941 ])
        (sign_extend:DI (reg:SI 924 [ D.11957 ]))) -1
     (nil))
(insn 1562 1561 1563 312 (parallel [
            (set (reg:SI 926 [ D.11957 ])
                (ashift:SI (reg:SI 353 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1563 1562 1564 312 (set (reg:DI 927 [ D.11941 ])
        (sign_extend:DI (reg:SI 926 [ D.11957 ]))) -1
     (nil))
(insn 1564 1563 1565 312 (parallel [
            (set (reg:DI 928 [ D.11941 ])
                (minus:DI (reg:DI 925 [ D.11941 ])
                    (reg:DI 927 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1565 1564 1566 312 (parallel [
            (set (reg:SI 929 [ D.11957 ])
                (ashift:SI (reg:SI 372 [ D.11957 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1566 1565 1567 312 (set (reg:DI 930 [ D.11941 ])
        (sign_extend:DI (reg:SI 929 [ D.11957 ]))) -1
     (nil))
(insn 1567 1566 1611 312 (parallel [
            (set (reg:DI 474 [ D.11941 ])
                (minus:DI (reg:DI 928 [ D.11941 ])
                    (reg:DI 930 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1611 1567 1568 313 951 "" [1 uses])
(note 1568 1611 1569 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 1569 1568 1570 313 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 631 [ hash ])
            (reg:SI 450 [ D.11944 ]))) fnmatch_loop.c:762 -1
     (nil))
(jump_insn 1570 1569 1571 313 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1607)
            (pc))) fnmatch_loop.c:762 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1607)
(note 1571 1570 1572 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 1572 1571 1573 314 (set (reg:SI 452 [ D.11944 ])
        (mem:SI (reg:DI 691 [ ivtmp.448 ]) [2 MEM[base: _743, offset: 0B]+0 S4 A32])) fnmatch_loop.c:764 -1
     (nil))
(insn 1573 1572 1574 314 (set (reg:DI 453 [ D.11941 ])
        (sign_extend:DI (reg:SI 452 [ D.11944 ]))) fnmatch_loop.c:764 -1
     (nil))
(insn 1574 1573 1575 314 (set (reg:QI 455 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 435 [ extra ])
                (reg:DI 453 [ D.11941 ])) [0 *_524+0 S1 A8])) fnmatch_loop.c:764 -1
     (nil))
(insn 1575 1574 1576 314 (set (reg:DI 931 [ D.11940 ])
        (zero_extend:DI (reg:QI 455 [ D.11942 ]))) fnmatch_loop.c:763 -1
     (nil))
(insn 1576 1575 1577 314 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 156 [ c1 ])
            (reg:DI 931 [ D.11940 ]))) fnmatch_loop.c:763 -1
     (nil))
(jump_insn 1577 1576 1578 314 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1607)
            (pc))) fnmatch_loop.c:763 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1607)
(note 1578 1577 1579 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 1579 1578 1580 315 (parallel [
            (set (reg:DI 932 [ D.11941 ])
                (plus:DI (reg:DI 453 [ D.11941 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:765 -1
     (nil))
(insn 1580 1579 1581 315 (parallel [
            (set (reg:DI 933 [ D.11945 ])
                (plus:DI (reg/v/f:DI 435 [ extra ])
                    (reg:DI 932 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:765 -1
     (nil))
(insn 1581 1580 1582 315 (set (reg:DI 1 dx)
        (reg/v:DI 156 [ c1 ])) fnmatch_loop.c:765 -1
     (nil))
(insn 1582 1581 1583 315 (set (reg:DI 4 si)
        (reg:DI 933 [ D.11945 ])) fnmatch_loop.c:765 -1
     (nil))
(insn 1583 1582 1584 315 (set (reg:DI 5 di)
        (reg/v/f:DI 437 [ str ])) fnmatch_loop.c:765 -1
     (nil))
(call_insn/i 1584 1583 1585 315 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:765 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcmp") [flags 0x43]  <function_decl 0x2aeef6989ca8 memcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1585 1584 1586 315 (set (reg:SI 934)
        (reg:SI 0 ax)) fnmatch_loop.c:765 -1
     (nil))
(insn 1586 1585 1587 315 (set (reg:SI 935)
        (reg:SI 934)) fnmatch_loop.c:765 -1
     (nil))
(insn 1587 1586 1588 315 (set (reg:SI 459 [ D.11944 ])
        (reg:SI 935)) fnmatch_loop.c:765 -1
     (nil))
(insn 1588 1587 1589 315 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 459 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:765 -1
     (nil))
(jump_insn 1589 1588 1590 315 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1607)
            (pc))) fnmatch_loop.c:765 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1607)
(note 1590 1589 1591 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 1591 1590 1592 316 (set (reg:SI 936 [ D.11944 ])
        (zero_extend:SI (reg:QI 455 [ D.11942 ]))) fnmatch_loop.c:771 -1
     (nil))
(insn 1592 1591 1593 316 (parallel [
            (set (reg:SI 937 [ D.11944 ])
                (plus:SI (reg:SI 936 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:771 -1
     (nil))
(insn 1593 1592 1594 316 (parallel [
            (set (reg/v:SI 462 [ idx ])
                (plus:SI (reg:SI 937 [ D.11944 ])
                    (reg:SI 452 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:771 -1
     (nil))
(insn 1594 1593 1595 316 (set (reg:DI 938 [ D.11941 ])
        (sign_extend:DI (reg/v:SI 462 [ idx ]))) fnmatch_loop.c:800 -1
     (nil))
(insn 1595 1594 1596 316 (set (reg:SI 939 [ D.11944 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 435 [ extra ])
                    (reg:DI 938 [ D.11941 ])) [0 *_539+0 S1 A8]))) fnmatch_loop.c:800 -1
     (nil))
(insn 1596 1595 1597 316 (parallel [
            (set (reg:SI 467 [ D.11944 ])
                (plus:SI (reg:SI 939 [ D.11944 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:800 -1
     (nil))
(insn 1597 1596 1598 316 (parallel [
            (set (reg:SI 940 [ idx ])
                (plus:SI (reg/v:SI 462 [ idx ])
                    (reg:SI 467 [ D.11944 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:801 -1
     (nil))
(insn 1598 1597 1599 316 (parallel [
            (set (reg:SI 469 [ D.11944 ])
                (plus:SI (reg:SI 940 [ idx ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:801 -1
     (nil))
(insn 1599 1598 1600 316 (parallel [
            (set (reg:SI 941 [ idx ])
                (and:SI (reg:SI 469 [ D.11944 ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:802 -1
     (nil))
(insn 1600 1599 1601 316 (set (reg:DI 942 [ D.11941 ])
        (sign_extend:DI (reg:SI 941 [ idx ]))) fnmatch_loop.c:802 -1
     (nil))
(insn 1601 1600 1602 316 (set (reg:SI 473 [ D.11944 ])
        (mem:SI (plus:DI (reg/v/f:DI 435 [ extra ])
                (reg:DI 942 [ D.11941 ])) [2 *_547+0 S4 A32])) fnmatch_loop.c:802 -1
     (nil))
(insn 1602 1601 1603 316 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 171 [ lcollseq ])
            (reg/v:SI 420 [ fcollseq ]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1603 1602 1606 316 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1644)
            (pc))) fnmatch_loop.c:827 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1644)
(note 1606 1603 1604 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1604 1606 1605 317 (set (pc)
        (label_ref 1666)) fnmatch_loop.c:827 -1
     (nil)
 -> 1666)
(barrier 1605 1604 1607)
(code_label 1607 1605 1608 318 948 "" [3 uses])
(note 1608 1607 1609 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 1609 1608 1610 318 (parallel [
            (set (reg:DI 691 [ ivtmp.448 ])
                (plus:DI (reg:DI 691 [ ivtmp.448 ])
                    (reg:DI 663 [ D.11941 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1610 1609 1612 318 (set (reg:SI 450 [ D.11944 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 474 [ D.11941 ])
                        (const_int 4 [0x4]))
                    (reg:DI 691 [ ivtmp.448 ]))
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: _1039, index: _549, step: 4, offset: -4B]+0 S4 A32])) fnmatch_loop.c:778 -1
     (nil))
(insn 1612 1610 1613 318 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 450 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:778 -1
     (nil))
(jump_insn 1613 1612 1616 318 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1611)
            (pc))) fnmatch_loop.c:778 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1611)
(note 1616 1613 1614 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1614 1616 1615 319 (set (pc)
        (label_ref 1886)) -1
     (nil)
 -> 1886)
(barrier 1615 1614 1617)
(code_label 1617 1615 1618 320 938 "" [1 uses])
(note 1618 1617 1619 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 1619 1618 1620 320 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 154 [ cend ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:817 -1
     (nil))
(insn 1620 1619 1621 320 (set (reg:QI 944 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(insn 1621 1620 1622 320 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 944 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(jump_insn 1622 1621 2065 320 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1628)
            (pc))) fnmatch_loop.c:817 -1
     (int_list:REG_BR_PROB 2068 (nil))
 -> 1628)
(note 2065 1622 1623 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 1623 2065 1624 321 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 677 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:817 -1
     (nil))
(jump_insn 1624 1623 1625 321 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1628)
            (pc))) fnmatch_loop.c:817 -1
     (int_list:REG_BR_PROB 2607 (nil))
 -> 1628)
(note 1625 1624 1626 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 1626 1625 1627 322 (parallel [
            (set (reg/v/f:DI 476 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:818 -1
     (nil))
(insn 1627 1626 1628 322 (set (reg/v:QI 154 [ cend ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_12 + 1B]+0 S1 A8])) fnmatch_loop.c:818 -1
     (nil))
(code_label 1628 1627 1629 323 952 "" [2 uses])
(note 1629 1628 1630 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 1630 1629 1631 323 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 154 [ cend ])
            (const_int 0 [0]))) fnmatch_loop.c:819 -1
     (nil))
(jump_insn 1631 1630 1632 323 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:819 -1
     (int_list:REG_BR_PROB 271 (nil))
 -> 1886)
(code_label 1632 1631 1633 324 939 "" [1 uses])
(note 1633 1632 1634 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 1634 1633 1635 324 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:821 -1
     (nil))
(jump_insn 1635 1634 1636 324 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1900)
            (pc))) fnmatch_loop.c:821 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1900)
(note 1636 1635 1637 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 1637 1636 1638 325 (set (reg:DI 945)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:821 -1
     (nil))
(insn 1638 1637 1639 325 (set (reg:DI 946 [ D.11940 ])
        (zero_extend:DI (reg/v:QI 154 [ cend ]))) fnmatch_loop.c:821 -1
     (nil))
(insn 1639 1638 1640 325 (set (reg/f:DI 947)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 945)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:821 -1
     (nil))
(insn 1640 1639 1641 325 (set (reg/v:SI 483 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 946 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 947)) [2 *_561+0 S4 A32])) fnmatch_loop.c:821 -1
     (nil))
(insn 1641 1640 1642 325 (set (reg/v:QI 154 [ cend ])
        (subreg:QI (reg/v:SI 483 [ __res ]) 0)) fnmatch_loop.c:821 -1
     (nil))
(jump_insn 1642 1641 1643 325 (set (pc)
        (label_ref 1900)) -1
     (nil)
 -> 1900)
(barrier 1643 1642 1644)
(code_label 1644 1643 1645 326 949 "" [1 uses])
(note 1645 1644 1646 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 1646 1645 1647 326 (set (reg/v:SI 158 [ hcollseq ])
        (zero_extend:SI (subreg:QI (reg:SI 473 [ D.11944 ]) 0))) fnmatch_loop.c:837 -1
     (nil))
(jump_insn 1647 1646 1648 326 (set (pc)
        (label_ref 1652)) -1
     (nil)
 -> 1652)
(barrier 1648 1647 1902)
(code_label 1902 1648 1649 327 970 "" [1 uses])
(note 1649 1902 1650 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 1650 1649 1651 327 (set (reg:DI 948 [ D.11941 ])
        (zero_extend:DI (reg/v:QI 154 [ cend ]))) fnmatch_loop.c:854 -1
     (nil))
(insn 1651 1650 1652 327 (set (reg/v:SI 158 [ hcollseq ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 183 [ collseq ])
                    (reg:DI 948 [ D.11941 ])) [0 *_566+0 S1 A8]))) fnmatch_loop.c:854 -1
     (nil))
(code_label 1652 1651 1653 328 953 "" [1 uses])
(note 1653 1652 1654 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 1654 1653 1655 328 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 158 [ hcollseq ])
            (reg/v:SI 171 [ lcollseq ]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1655 1654 1656 328 (set (reg:QI 950 [ D.11946 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1656 1655 1657 328 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 950 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1657 1656 2066 328 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1666)
            (pc))) fnmatch_loop.c:858 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 1666)
(note 2066 1657 1658 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 1658 2066 1659 329 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 158 [ hcollseq ])
            (reg/v:SI 420 [ fcollseq ]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1659 1658 1660 329 (set (reg:QI 952 [ D.11946 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(insn 1660 1659 1661 329 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 952 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1661 1660 1662 329 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1666)
            (pc))) fnmatch_loop.c:858 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 1666)
(note 1662 1661 1663 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 1663 1662 86 330 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (reg/v/f:DI 476 [ pattern ]) [0 *pattern_551+0 S1 A8])) -1
     (nil))
(insn 86 1663 1664 330 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 476 [ pattern ])) fnmatch_loop.c:858 -1
     (nil))
(jump_insn 1664 86 1665 330 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 1665 1664 1666)
(code_label 1666 1665 1667 331 950 "" [4 uses])
(note 1667 1666 1668 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 1668 1667 1669 331 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 476 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:881 -1
     (nil))
(insn 1669 1668 1670 331 (set (reg/v:QI 148 [ c ])
        (mem:QI (reg/v/f:DI 476 [ pattern ]) [0 *pattern_552+0 S1 A8])) fnmatch_loop.c:881 -1
     (nil))
(code_label 1670 1669 1671 332 867 "" [3 uses])
(note 1671 1670 1672 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 1672 1671 1673 332 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 148 [ c ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:885 -1
     (nil))
(jump_insn 1673 1672 1674 332 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1457)
            (pc))) fnmatch_loop.c:885 -1
     (int_list:REG_BR_PROB 9783 (nil))
 -> 1457)
(note 1674 1673 1675 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 1675 1674 1676 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 659 [ not ])
            (const_int 0 [0]))) fnmatch_loop.c:889 -1
     (nil))
(jump_insn 1676 1675 1679 333 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:889 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1679 1676 126 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 126 1679 127 334 (set (reg/v/f:DI 146 [ pattern ])
        (reg/v/f:DI 667 [ pattern ])) -1
     (nil))
(insn 127 126 1677 334 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 1677 127 1678 334 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 1678 1677 1791)
(code_label 1791 1678 1680 335 965 "" [1 uses])
(note 1680 1791 1681 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 1681 1680 1682 335 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 491 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:897 -1
     (nil))
(jump_insn 1682 1681 1683 335 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:897 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1683 1682 1684 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 1684 1683 1685 336 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 491 [ c ])
            (const_int 92 [0x5c]))) fnmatch_loop.c:901 -1
     (nil))
(insn 1685 1684 1686 336 (set (reg:QI 954 [ D.11946 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(insn 1686 1685 1687 336 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 954 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(jump_insn 1687 1686 2067 336 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1698)
            (pc))) fnmatch_loop.c:901 -1
     (int_list:REG_BR_PROB 3600 (nil))
 -> 1698)
(note 2067 1687 1688 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 1688 2067 1689 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 677 [ D.11946 ])
            (const_int 0 [0]))) fnmatch_loop.c:901 -1
     (nil))
(jump_insn 1689 1688 1690 337 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1698)
            (pc))) fnmatch_loop.c:901 -1
     (int_list:REG_BR_PROB 5625 (nil))
 -> 1698)
(note 1690 1689 1691 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 1691 1690 1692 338 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_20 + 1B]+0 S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:903 -1
     (nil))
(jump_insn 1692 1691 1693 338 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:903 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1693 1692 1694 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 1694 1693 1695 339 (parallel [
            (set (reg/v/f:DI 493 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:906 -1
     (nil))
(insn 1695 1694 118 339 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_20 + 2B]+0 S1 A8])) -1
     (nil))
(insn 118 1695 1696 339 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 493 [ pattern ])) fnmatch_loop.c:906 -1
     (nil))
(jump_insn 1696 118 1697 339 (set (pc)
        (label_ref 1785)) fnmatch_loop.c:906 -1
     (nil)
 -> 1785)
(barrier 1697 1696 1698)
(code_label 1698 1697 1699 340 954 "" [2 uses])
(note 1699 1698 1700 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 1700 1699 1701 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 491 [ c ])
            (const_int 91 [0x5b]))) fnmatch_loop.c:908 -1
     (nil))
(jump_insn 1701 1700 1702 340 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1706)
            (pc))) fnmatch_loop.c:908 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1706)
(note 1702 1701 1703 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 1703 1702 120 341 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_20 + 1B]+0 S1 A8])) -1
     (nil))
(insn 120 1703 1704 341 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:895 -1
     (nil))
(jump_insn 1704 120 1705 341 (set (pc)
        (label_ref 1785)) -1
     (nil)
 -> 1785)
(barrier 1705 1704 1706)
(code_label 1706 1705 1707 342 956 "" [1 uses])
(note 1707 1706 1708 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 1708 1707 1709 342 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 1 [0x1])) [0 MEM[(const char *)pattern_20 + 1B]+0 S1 A8])) fnmatch_loop.c:908 -1
     (nil))
(insn 1709 1708 1710 342 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 678 [ D.11951 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:908 -1
     (nil))
(jump_insn 1710 1709 1713 342 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1927)
            (pc))) fnmatch_loop.c:908 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1927)
(note 1713 1710 1711 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1711 1713 1712 343 (set (pc)
        (label_ref 1743)) -1
     (nil)
 -> 1743)
(barrier 1712 1711 1732)
(code_label 1732 1712 1714 344 961 "" [1 uses])
(note 1714 1732 1715 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 1715 1714 1716 344 (parallel [
            (set (reg/v/f:DI 495 [ pattern ])
                (plus:DI (reg/v/f:DI 495 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:915 -1
     (nil))
(insn 1716 1715 1717 344 (set (reg:QI 496 [ D.11951 ])
        (mem:QI (reg/v/f:DI 495 [ pattern ]) [0 MEM[base: pattern_582, offset: 0B]+0 S1 A8])) fnmatch_loop.c:915 -1
     (nil))
(insn 1717 1716 1718 344 (set (reg/v:QI 497 [ c ])
        (reg:QI 496 [ D.11951 ])) fnmatch_loop.c:915 -1
     (nil))
(insn 1718 1717 1719 344 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 495 [ pattern ])
            (reg/f:DI 657 [ D.11943 ]))) fnmatch_loop.c:916 -1
     (nil))
(jump_insn 1719 1718 1933 344 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:916 -1
     (int_list:REG_BR_PROB 105 (nil))
 -> 1886)
(code_label 1933 1719 1720 345 972 "" [1 uses])
(note 1720 1933 1721 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn 1721 1720 1722 345 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 496 [ D.11951 ])
            (const_int 58 [0x3a]))) fnmatch_loop.c:919 -1
     (nil))
(jump_insn 1722 1721 1723 345 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1730)
            (pc))) fnmatch_loop.c:919 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1730)
(note 1723 1722 1724 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn 1724 1723 1725 346 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 495 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[base: pattern_853, offset: 1B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:919 -1
     (nil))
(jump_insn 1725 1724 1726 346 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1730)
            (pc))) fnmatch_loop.c:919 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1730)
(note 1726 1725 1727 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn 1727 1726 1728 347 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 495 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_853 + 2B]+0 S1 A8])) -1
     (nil))
(jump_insn 1728 1727 1729 347 (set (pc)
        (label_ref 1738)) -1
     (nil)
 -> 1738)
(barrier 1729 1728 1730)
(code_label 1730 1729 1731 348 959 "" [2 uses])
(note 1731 1730 1733 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn 1733 1731 1734 348 (parallel [
            (set (reg:QI 955 [ D.11942 ])
                (plus:QI (reg/v:QI 497 [ c ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:922 -1
     (nil))
(insn 1734 1733 1735 348 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 955 [ D.11942 ])
            (const_int 24 [0x18]))) fnmatch_loop.c:922 -1
     (nil))
(jump_insn 1735 1734 1736 348 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1732)
            (pc))) fnmatch_loop.c:922 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1732)
(note 1736 1735 1737 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 1737 1736 1738 349 (parallel [
            (set (reg/v/f:DI 495 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:924 -1
     (nil))
(code_label 1738 1737 1739 350 960 "" [1 uses])
(note 1739 1738 1740 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 1740 1739 1741 350 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 495 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:928 -1
     (nil))
(jump_insn 1741 1740 1742 350 (set (pc)
        (label_ref 1785)) fnmatch_loop.c:909 -1
     (nil)
 -> 1785)
(barrier 1742 1741 1743)
(code_label 1743 1742 1744 351 958 "" [1 uses])
(note 1744 1743 1745 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 1745 1744 1746 351 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 678 [ D.11951 ])
            (const_int 61 [0x3d]))) fnmatch_loop.c:930 -1
     (nil))
(jump_insn 1746 1745 1747 351 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1761)
            (pc))) fnmatch_loop.c:930 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1761)
(note 1747 1746 1748 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn 1748 1747 1749 352 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2 [0x2])) [0 MEM[(const char *)pattern_20 + 2B]+0 S1 A8])
            (const_int 0 [0]))) fnmatch_loop.c:933 -1
     (nil))
(jump_insn 1749 1748 1750 352 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:933 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1750 1749 1751 353 [bb 353] NOTE_INSN_BASIC_BLOCK)
(insn 1751 1750 1752 353 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 3 [0x3])) [0 MEM[(const char *)pattern_20 + 3B]+0 S1 A8])
            (const_int 61 [0x3d]))) fnmatch_loop.c:936 -1
     (nil))
(jump_insn 1752 1751 1753 353 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:936 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1753 1752 1754 354 [bb 354] NOTE_INSN_BASIC_BLOCK)
(insn 1754 1753 1755 354 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 4 [0x4])) [0 MEM[(const char *)pattern_20 + 4B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:936 -1
     (nil))
(jump_insn 1755 1754 1756 354 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:936 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1756 1755 1757 355 [bb 355] NOTE_INSN_BASIC_BLOCK)
(insn 1757 1756 1758 355 (parallel [
            (set (reg/v/f:DI 504 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:938 -1
     (nil))
(insn 1758 1757 121 355 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 5 [0x5])) [0 MEM[(const char *)pattern_20 + 5B]+0 S1 A8])) -1
     (nil))
(insn 121 1758 1759 355 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 504 [ pattern ])) fnmatch_loop.c:938 -1
     (nil))
(jump_insn 1759 121 1760 355 (set (pc)
        (label_ref 1785)) fnmatch_loop.c:938 -1
     (nil)
 -> 1785)
(barrier 1760 1759 1761)
(code_label 1761 1760 1762 356 962 "" [1 uses])
(note 1762 1761 1763 356 [bb 356] NOTE_INSN_BASIC_BLOCK)
(insn 1763 1762 1764 356 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 678 [ D.11951 ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:940 -1
     (nil))
(jump_insn 1764 1763 1765 356 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2030)
            (pc))) fnmatch_loop.c:940 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 2030)
(note 1765 1764 1766 357 [bb 357] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1766 1765 1767 357 (set (pc)
        (label_ref 1769)) -1
     (nil)
 -> 1769)
(barrier 1767 1766 1776)
(code_label 1776 1767 1768 358 964 "" [2 uses])
(note 1768 1776 117 358 [bb 358] NOTE_INSN_BASIC_BLOCK)
(insn 117 1768 1769 358 (set (reg/v/f:DI 146 [ pattern ])
        (reg/v/f:DI 505 [ pattern ])) fnmatch_loop.c:439 -1
     (nil))
(code_label 1769 117 1770 359 963 "" [1 uses])
(note 1770 1769 1771 359 [bb 359] NOTE_INSN_BASIC_BLOCK)
(insn 1771 1770 1772 359 (parallel [
            (set (reg/v/f:DI 505 [ pattern ])
                (plus:DI (reg/v/f:DI 146 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:944 -1
     (nil))
(insn 1772 1771 1773 359 (set (reg/v:QI 507 [ c ])
        (mem:QI (reg/v/f:DI 505 [ pattern ]) [0 MEM[base: pattern_596, offset: 0B]+0 S1 A8])) fnmatch_loop.c:944 -1
     (nil))
(insn 1773 1772 1774 359 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 507 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:945 -1
     (nil))
(jump_insn 1774 1773 1775 359 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:945 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1886)
(note 1775 1774 1777 360 [bb 360] NOTE_INSN_BASIC_BLOCK)
(insn 1777 1775 1778 360 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 507 [ c ])
            (const_int 46 [0x2e]))) fnmatch_loop.c:948 -1
     (nil))
(jump_insn 1778 1777 1779 360 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1776)
            (pc))) fnmatch_loop.c:948 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1776)
(note 1779 1778 1780 361 [bb 361] NOTE_INSN_BASIC_BLOCK)
(insn 1780 1779 1781 361 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 505 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[base: pattern_596, offset: 1B]+0 S1 A8])
            (const_int 93 [0x5d]))) fnmatch_loop.c:948 -1
     (nil))
(jump_insn 1781 1780 1782 361 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1776)
            (pc))) fnmatch_loop.c:948 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1776)
(note 1782 1781 1783 362 [bb 362] NOTE_INSN_BASIC_BLOCK)
(insn 1783 1782 1784 362 (parallel [
            (set (reg/v/f:DI 667 [ pattern ])
                (plus:DI (reg/v/f:DI 146 [ pattern ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:951 -1
     (nil))
(insn 1784 1783 2027 362 (set (reg:QI 678 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 146 [ pattern ])
                (const_int 3 [0x3])) [0 MEM[(const char *)pattern_19 + 3B]+0 S1 A8])) -1
     (nil))
(jump_insn 2027 1784 2028 362 (set (pc)
        (label_ref 1785)) -1
     (nil)
 -> 1785)
(barrier 2028 2027 2030)
(code_label 2030 2028 2029 363 989 "" [1 uses])
(note 2029 2030 119 363 [bb 363] NOTE_INSN_BASIC_BLOCK)
(insn 119 2029 1785 363 (set (reg/v/f:DI 667 [ pattern ])
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:895 -1
     (nil))
(code_label 1785 119 1786 364 955 "" [5 uses])
(note 1786 1785 1787 364 [bb 364] NOTE_INSN_BASIC_BLOCK)
(code_label 1787 1786 1788 365 868 "" [1 uses])
(note 1788 1787 1789 365 [bb 365] NOTE_INSN_BASIC_BLOCK)
(insn 1789 1788 1790 365 (parallel [
            (set (reg/v/f:DI 146 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:895 -1
     (nil))
(insn 1790 1789 1792 365 (set (reg/v:QI 491 [ c ])
        (reg:QI 678 [ D.11951 ])) fnmatch_loop.c:895 -1
     (nil))
(insn 1792 1790 1793 365 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 491 [ c ])
            (const_int 93 [0x5d]))) fnmatch_loop.c:895 -1
     (nil))
(jump_insn 1793 1792 1794 365 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1791)
            (pc))) fnmatch_loop.c:895 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1791)
(note 1794 1793 1795 366 [bb 366] NOTE_INSN_BASIC_BLOCK)
(insn 1795 1794 1796 366 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 659 [ not ])
            (const_int 0 [0]))) fnmatch_loop.c:954 -1
     (nil))
(jump_insn 1796 1795 1799 366 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:954 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1799 1796 128 367 [bb 367] NOTE_INSN_BASIC_BLOCK)
(insn 128 1799 1797 367 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(jump_insn 1797 128 1798 367 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 1798 1797 1800)
(code_label 1800 1798 1801 368 791 "" [3 uses])
(note 1801 1800 1802 368 [bb 368] NOTE_INSN_BASIC_BLOCK)
(insn 1802 1801 1803 368 (parallel [
            (set (reg:SI 956 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:962 -1
     (nil))
(insn 1803 1802 1804 368 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 956 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:962 -1
     (nil))
(jump_insn 1804 1803 1805 368 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) fnmatch_loop.c:962 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1840)
(note 1805 1804 1806 369 [bb 369] NOTE_INSN_BASIC_BLOCK)
(insn 1806 1805 1807 369 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)pattern_22 + 1B]+0 S1 A8])
            (const_int 40 [0x28]))) fnmatch_loop.c:962 -1
     (nil))
(jump_insn 1807 1806 1808 369 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) fnmatch_loop.c:962 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 1840)
(note 1808 1807 1809 370 [bb 370] NOTE_INSN_BASIC_BLOCK)
(insn 1809 1808 1810 370 (set (reg:SI 957 [ D.11944 ])
        (zero_extend:SI (reg/v:QI 159 [ c ]))) fnmatch_loop.c:964 -1
     (nil))
(insn 1810 1809 1811 370 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:964 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1811 1810 1812 370 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:964 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1812 1811 1813 370 (set (reg:SI 38 r9)
        (reg/v:SI 707 [ flags ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1813 1812 1814 370 (set (reg:SI 37 r8)
        (reg/v:SI 706 [ no_leading_period ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1814 1813 1815 370 (set (reg:DI 2 cx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1815 1814 1816 370 (set (reg:DI 1 dx)
        (reg/v/f:DI 147 [ np ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1816 1815 1817 370 (set (reg:DI 4 si)
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:964 -1
     (nil))
(insn 1817 1816 1818 370 (set (reg:SI 5 di)
        (reg:SI 957 [ D.11944 ])) fnmatch_loop.c:964 -1
     (nil))
(call_insn 1818 1817 1819 370 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>) [0 ext_match S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:964 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ext_match") [flags 0x3]  <function_decl 0x2aeef6edf360 ext_match>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1819 1818 1820 370 (set (reg/v:SI 515 [ res ])
        (reg:SI 0 ax)) fnmatch_loop.c:964 -1
     (nil))
(insn 1820 1819 1821 370 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:966 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1821 1820 1822 370 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 515 [ res ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch_loop.c:966 -1
     (nil))
(jump_insn 1822 1821 1825 370 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2034)
            (pc))) fnmatch_loop.c:966 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 2034)
(note 1825 1822 1823 371 [bb 371] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1823 1825 1824 371 (set (pc)
        (label_ref 1840)) -1
     (nil)
 -> 1840)
(barrier 1824 1823 1826)
(code_label 1826 1824 1827 372 794 "" [1 uses])
(note 1827 1826 1828 372 [bb 372] NOTE_INSN_BASIC_BLOCK)
(insn 1828 1827 1829 372 (parallel [
            (set (reg:SI 958 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:972 -1
     (nil))
(insn 1829 1828 1830 372 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 958 [ D.11944 ])
            (const_int 5 [0x5]))) fnmatch_loop.c:972 -1
     (nil))
(jump_insn 1830 1829 1831 372 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1840)
            (pc))) fnmatch_loop.c:972 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1840)
(note 1831 1830 1832 373 [bb 373] NOTE_INSN_BASIC_BLOCK)
(insn 1832 1831 1833 373 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:974 -1
     (nil))
(jump_insn 1833 1832 1834 373 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:974 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1834 1833 1835 374 [bb 374] NOTE_INSN_BASIC_BLOCK)
(insn 1835 1834 1836 374 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:974 -1
     (nil))
(jump_insn 1836 1835 1839 374 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:974 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 1839 1836 129 375 [bb 375] NOTE_INSN_BASIC_BLOCK)
(insn 129 1839 1837 375 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 1 [0x1])) fnmatch_loop.c:977 -1
     (nil))
(jump_insn 1837 129 1838 375 (set (pc)
        (label_ref 1864)) -1
     (nil)
 -> 1864)
(barrier 1838 1837 1840)
(code_label 1840 1838 1841 376 790 ("normal_match") [57 uses])
(note 1841 1840 1842 376 [bb 376] NOTE_INSN_BASIC_BLOCK)
(insn 1842 1841 1843 376 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1843 1842 1844 376 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 211 (nil))
 -> 1886)
(note 1844 1843 1845 377 [bb 377] NOTE_INSN_BASIC_BLOCK)
(insn 1845 1844 2013 377 (set (reg:SI 675 [ D.11944 ])
        (zero_extend:SI (reg/v:QI 159 [ c ]))) -1
     (nil))
(jump_insn 2013 1845 2014 377 (set (pc)
        (label_ref 1846)) -1
     (nil)
 -> 1846)
(barrier 2014 2013 2016)
(code_label 2016 2014 2015 378 986 "" [1 uses])
(note 2015 2016 122 378 [bb 378] NOTE_INSN_BASIC_BLOCK)
(insn 122 2015 1846 378 (set (reg:SI 675 [ D.11944 ])
        (const_int 91 [0x5b])) -1
     (nil))
(code_label 1846 122 1847 379 909 "" [1 uses])
(note 1847 1846 1848 379 [bb 379] NOTE_INSN_BASIC_BLOCK)
(insn 1848 1847 1849 379 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1849 1848 1850 379 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1857)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1857)
(note 1850 1849 1851 380 [bb 380] NOTE_INSN_BASIC_BLOCK)
(insn 1851 1850 1852 380 (set (reg:DI 959)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_TOLOWER") [flags 0x60]  <var_decl 0x2aeef6d82630 __libc_tsd_CTYPE_TOLOWER>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch_loop.c:983 -1
     (nil))
(insn 1852 1851 1853 380 (set (reg:DI 960 [ D.11940 ])
        (zero_extend:DI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8]))) fnmatch_loop.c:983 -1
     (nil))
(insn 1853 1852 1854 380 (set (reg/f:DI 961)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 959)) [1 MEM[(const __int32_t * *)&__libc_tsd_CTYPE_TOLOWER]+0 S8 A64])) fnmatch_loop.c:983 -1
     (nil))
(insn 1854 1853 123 380 (set (reg/v:SI 522 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 960 [ D.11940 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 961)) [2 *_616+0 S4 A32])) fnmatch_loop.c:983 -1
     (nil))
(insn 123 1854 1855 380 (set (reg:SI 172 [ D.11944 ])
        (reg/v:SI 522 [ __res ])) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1855 123 1856 380 (set (pc)
        (label_ref 1860)) -1
     (nil)
 -> 1860)
(barrier 1856 1855 1857)
(code_label 1857 1856 1858 381 966 "" [1 uses])
(note 1858 1857 1859 381 [bb 381] NOTE_INSN_BASIC_BLOCK)
(insn 1859 1858 1860 381 (set (reg:SI 172 [ D.11944 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8]))) fnmatch_loop.c:983 -1
     (nil))
(code_label 1860 1859 1861 382 967 "" [1 uses])
(note 1861 1860 1862 382 [bb 382] NOTE_INSN_BASIC_BLOCK)
(insn 1862 1861 1863 382 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 172 [ D.11944 ])
            (reg:SI 675 [ D.11944 ]))) fnmatch_loop.c:983 -1
     (nil))
(jump_insn 1863 1862 2035 382 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:983 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1886)
(note 2035 1863 130 383 [bb 383] NOTE_INSN_BASIC_BLOCK)
(insn 130 2035 1864 383 (set (reg/v:SI 706 [ no_leading_period ])
        (const_int 0 [0])) fnmatch_loop.c:58 -1
     (nil))
(code_label 1864 130 1865 384 804 "" [6 uses])
(note 1865 1864 1866 384 [bb 384] NOTE_INSN_BASIC_BLOCK)
(insn 1866 1865 132 384 (parallel [
            (set (reg/v/f:DI 147 [ np ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:988 -1
     (nil))
(insn 132 1866 1867 384 (set (reg/v/f:DI 703 [ pattern ])
        (reg/v/f:DI 146 [ pattern ])) fnmatch_loop.c:988 -1
     (nil))
(code_label 1867 132 1868 385 844 "" [1 uses])
(note 1868 1867 1869 385 [bb 385] NOTE_INSN_BASIC_BLOCK)
(code_label 1869 1868 1870 386 788 "" [1 uses])
(note 1870 1869 1871 386 [bb 386] NOTE_INSN_BASIC_BLOCK)
(insn 1871 1870 1872 386 (parallel [
            (set (reg/v/f:DI 146 [ pattern ])
                (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:56 -1
     (nil))
(insn 1872 1871 1874 386 (set (reg/v:QI 159 [ c ])
        (mem:QI (reg/v/f:DI 703 [ pattern ]) [0 *pattern_22+0 S1 A8])) fnmatch_loop.c:56 -1
     (nil))
(insn 1874 1872 1875 386 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 159 [ c ])
            (const_int 0 [0]))) fnmatch_loop.c:56 -1
     (nil))
(jump_insn 1875 1874 1876 386 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1873)
            (pc))) fnmatch_loop.c:56 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1873)
(note 1876 1875 1877 387 [bb 387] NOTE_INSN_BASIC_BLOCK)
(insn 1877 1876 1878 387 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:991 -1
     (nil))
(jump_insn 1878 1877 1879 387 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2039)
            (pc))) fnmatch_loop.c:991 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 2039)
(note 1879 1878 1880 388 [bb 388] NOTE_INSN_BASIC_BLOCK)
(insn 1880 1879 1881 388 (parallel [
            (set (reg:SI 962 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:994 -1
     (nil))
(insn 1881 1880 1882 388 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 962 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:994 -1
     (nil))
(jump_insn 1882 1881 1883 388 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:994 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1886)
(note 1883 1882 1884 389 [bb 389] NOTE_INSN_BASIC_BLOCK)
(insn 1884 1883 1885 389 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 147 [ np ]) [0 MEM[(const char *)np_28]+0 S1 A8])
            (const_int 47 [0x2f]))) fnmatch_loop.c:994 -1
     (nil))
(jump_insn 1885 1884 1886 389 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2043)
            (pc))) fnmatch_loop.c:994 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 2043)
(code_label 1886 1885 1887 390 799 "" [37 uses])
(note 1887 1886 142 390 [bb 390] NOTE_INSN_BASIC_BLOCK)
(insn 142 1887 1960 390 (set (reg:SI 160 [ D.11944 ])
        (const_int 1 [0x1])) fnmatch_loop.c:998 -1
     (nil))
(jump_insn 1960 142 1961 390 (set (pc)
        (label_ref 1888)) fnmatch_loop.c:998 -1
     (nil)
 -> 1888)
(barrier 1961 1960 1963)
(code_label 1963 1961 1962 391 973 "" [1 uses])
(note 1962 1963 134 391 [bb 391] NOTE_INSN_BASIC_BLOCK)
(insn 134 1962 1966 391 (set (reg:SI 160 [ D.11944 ])
        (reg/v:SI 528 [ res ])) fnmatch_loop.c:66 -1
     (nil))
(jump_insn 1966 134 1967 391 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 1967 1966 1969)
(code_label 1969 1967 1968 392 975 "" [1 uses])
(note 1968 1969 139 392 [bb 392] NOTE_INSN_BASIC_BLOCK)
(insn 139 1968 1970 392 (set (reg:SI 160 [ D.11944 ])
        (reg/v:SI 194 [ res ])) fnmatch_loop.c:96 -1
     (nil))
(jump_insn 1970 139 1971 392 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 1971 1970 1973)
(code_label 1973 1971 1972 393 976 "" [1 uses])
(note 1972 1973 136 393 [bb 393] NOTE_INSN_BASIC_BLOCK)
(insn 136 1972 2031 393 (set (reg:SI 160 [ D.11944 ])
        (const_int 0 [0])) fnmatch_loop.c:150 -1
     (nil))
(jump_insn 2031 136 2032 393 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 2032 2031 2034)
(code_label 2034 2032 2033 394 990 "" [1 uses])
(note 2033 2034 135 394 [bb 394] NOTE_INSN_BASIC_BLOCK)
(insn 135 2033 2036 394 (set (reg:SI 160 [ D.11944 ])
        (reg/v:SI 515 [ res ])) fnmatch_loop.c:964 -1
     (nil))
(jump_insn 2036 135 2037 394 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 2037 2036 2039)
(code_label 2039 2037 2038 395 991 "" [1 uses])
(note 2038 2039 137 395 [bb 395] NOTE_INSN_BASIC_BLOCK)
(insn 137 2038 2040 395 (set (reg:SI 160 [ D.11944 ])
        (const_int 0 [0])) fnmatch_loop.c:992 -1
     (nil))
(jump_insn 2040 137 2041 395 (set (pc)
        (label_ref 1888)) -1
     (nil)
 -> 1888)
(barrier 2041 2040 2043)
(code_label 2043 2041 2042 396 992 "" [1 uses])
(note 2042 2043 143 396 [bb 396] NOTE_INSN_BASIC_BLOCK)
(insn 143 2042 1888 396 (set (reg:SI 160 [ D.11944 ])
        (const_int 0 [0])) fnmatch_loop.c:992 -1
     (nil))
(code_label 1888 143 1889 397 802 "" [12 uses])
(note 1889 1888 1890 397 [bb 397] NOTE_INSN_BASIC_BLOCK)
(insn 1890 1889 1891 397 (set (reg:SI 702 [ <retval> ])
        (reg:SI 160 [ D.11944 ])) -1
     (nil))
(jump_insn 1891 1890 1892 397 (set (pc)
        (label_ref 1956)) -1
     (nil)
 -> 1956)
(barrier 1892 1891 1893)
(code_label 1893 1892 1894 398 849 "" [2 uses])
(note 1894 1893 1895 398 [bb 398] NOTE_INSN_BASIC_BLOCK)
(insn 1895 1894 1896 398 (parallel [
            (set (reg/v/f:DI 144 [ pattern ])
                (plus:DI (reg/v/f:DI 703 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:253 -1
     (nil))
(insn 1896 1895 79 398 (set (reg:QI 270 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 703 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_22 + 2B]+0 S1 A8])) -1
     (nil))
(insn 79 1896 1898 398 (set (reg/v:SI 659 [ not ])
        (const_int 1 [0x1])) fnmatch_loop.c:253 -1
     (nil))
(jump_insn 1898 79 1899 398 (set (pc)
        (label_ref 1897)) -1
     (nil)
 -> 1897)
(barrier 1899 1898 1900)
(code_label 1900 1899 1901 399 945 "" [3 uses])
(note 1901 1900 1903 399 [bb 399] NOTE_INSN_BASIC_BLOCK)
(insn 1903 1901 1904 399 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 171 [ lcollseq ])
            (reg/v:SI 420 [ fcollseq ]))) fnmatch_loop.c:827 -1
     (nil))
(jump_insn 1904 1903 1907 399 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1902)
            (pc))) fnmatch_loop.c:827 -1
     (int_list:REG_BR_PROB 2504 (nil))
 -> 1902)
(note 1907 1904 1905 400 [bb 400] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1905 1907 1906 400 (set (pc)
        (label_ref 1666)) fnmatch_loop.c:827 -1
     (nil)
 -> 1666)
(barrier 1906 1905 1908)
(code_label 1908 1906 1909 401 807 "" [1 uses])
(note 1909 1908 1910 401 [bb 401] NOTE_INSN_BASIC_BLOCK)
(insn 1910 1909 1911 401 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 147 [ np ])
            (reg/v/f:DI 705 [ string_end ]))) fnmatch_loop.c:89 -1
     (nil))
(jump_insn 1911 1910 1912 401 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1886)
            (pc))) fnmatch_loop.c:89 -1
     (int_list:REG_BR_PROB 201 (nil))
 -> 1886)
(note 1912 1911 1913 402 [bb 402] NOTE_INSN_BASIC_BLOCK)
(insn 1913 1912 1914 402 (set (reg:SI 697 [ D.11944 ])
        (zero_extend:SI (reg/v:QI 252 [ c ]))) -1
     (nil))
(jump_insn 1914 1913 1915 402 (set (pc)
        (label_ref 288)) -1
     (nil)
 -> 288)
(barrier 1915 1914 1916)
(code_label 1916 1915 1917 403 899 "" [1 uses])
(note 1917 1916 1918 403 [bb 403] NOTE_INSN_BASIC_BLOCK)
(insn 1918 1917 1919 403 (set (reg:QI 599 [ D.11942 ])
        (mem:QI (plus:DI (reg/v/f:DI 147 [ np ])
                (const_int 1 [0x1])) [0 MEM[(const unsigned char *)np_28 + 1B]+0 S1 A8])) -1
     (nil))
(code_label 1919 1918 1920 404 901 "" [1 uses])
(note 1920 1919 1922 404 [bb 404] NOTE_INSN_BASIC_BLOCK)
(insn 1922 1920 1923 404 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 597 [ D.11942 ])
            (reg:QI 599 [ D.11942 ]))) ../locale/weight.h:108 -1
     (nil))
(jump_insn 1923 1922 1926 404 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1921)
            (pc))) ../locale/weight.h:108 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1921)
(note 1926 1923 1924 405 [bb 405] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1924 1926 1925 405 (set (pc)
        (label_ref 1072)) ../locale/weight.h:108 -1
     (nil)
 -> 1072)
(barrier 1925 1924 1927)
(code_label 1927 1925 1928 406 957 "" [1 uses])
(note 1928 1927 1929 406 [bb 406] NOTE_INSN_BASIC_BLOCK)
(insn 1929 1928 1930 406 (parallel [
            (set (reg/v/f:DI 495 [ pattern ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:915 -1
     (nil))
(insn 1930 1929 1931 406 (set (reg:QI 496 [ D.11951 ])
        (mem:QI (plus:DI (reg/v/f:DI 667 [ pattern ])
                (const_int 2 [0x2])) [0 MEM[(const char *)pattern_20 + 2B]+0 S1 A8])) fnmatch_loop.c:915 -1
     (nil))
(insn 1931 1930 1932 406 (set (reg/v:QI 497 [ c ])
        (reg:QI 496 [ D.11951 ])) fnmatch_loop.c:915 -1
     (nil))
(insn 1932 1931 1934 406 (parallel [
            (set (reg/f:DI 657 [ D.11943 ])
                (plus:DI (reg/v/f:DI 667 [ pattern ])
                    (const_int 2049 [0x801])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 1934 1932 1935 406 (set (pc)
        (label_ref 1933)) -1
     (nil)
 -> 1933)
(barrier 1935 1934 1936)
(code_label 1936 1935 1937 407 835 "" [2 uses])
(note 1937 1936 1938 407 [bb 407] NOTE_INSN_BASIC_BLOCK)
(insn 1938 1937 1939 407 (parallel [
            (set (reg:SI 964 [ D.11944 ])
                (and:SI (reg/v:SI 707 [ flags ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (nil))
(insn 1939 1938 1940 407 (parallel [
            (set (reg:DI 965 [ D.11943 ])
                (plus:DI (reg/v/f:DI 147 [ np ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (nil))
(insn 1940 1939 1941 407 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1941 1940 1942 407 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 709 [ alloca_used ])) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1942 1941 1943 407 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch_loop.c:194 -1
     (nil))
(insn 1943 1942 1944 407 (set (reg:SI 37 r8)
        (reg/v:SI 707 [ flags ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1944 1943 1945 407 (set (reg:SI 2 cx)
        (reg:SI 964 [ D.11944 ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1945 1944 1946 407 (set (reg:DI 1 dx)
        (reg/v/f:DI 705 [ string_end ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1946 1945 1947 407 (set (reg:DI 4 si)
        (reg:DI 965 [ D.11943 ])) fnmatch_loop.c:194 -1
     (nil))
(insn 1947 1946 1948 407 (set (reg:DI 5 di)
        (reg/v/f:DI 206 [ p ])) fnmatch_loop.c:194 -1
     (nil))
(call_insn 1948 1947 1949 407 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch_loop.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1949 1948 1950 407 (set (reg:SI 220 [ D.11944 ])
        (reg:SI 0 ax)) fnmatch_loop.c:194 -1
     (nil))
(insn 1950 1949 1951 407 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch_loop.c:194 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1951 1950 1952 407 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 220 [ D.11944 ])
            (const_int 0 [0]))) fnmatch_loop.c:194 -1
     (nil))
(jump_insn 1952 1951 1955 407 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) fnmatch_loop.c:194 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 623)
(note 1955 1952 1953 408 [bb 408] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1953 1955 1954 408 (set (pc)
        (label_ref 619)) -1
     (nil)
 -> 619)
(barrier 1954 1953 1956)
(code_label 1956 1954 1959 409 787 "" [1 uses])
(note 1959 1956 1957 409 [bb 409] NOTE_INSN_BASIC_BLOCK)
(insn 1957 1959 1958 409 (set (reg/i:SI 0 ax)
        (reg:SI 702 [ <retval> ])) fnmatch_loop.c:999 -1
     (nil))
(insn 1958 1957 0 409 (use (reg/i:SI 0 ax)) fnmatch_loop.c:999 -1
     (nil))

;; Function __fnmatch (__fnmatch, funcdef_no=53, decl_uid=8644, cgraph_uid=53, symbol_order=62)

Partition 1: size 8 align 8
	p
Partition 0: size 8 align 16
	ps

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33
Edge 3->8 redirected to 36
Edge 6->15 redirected to 37
Edge 13->31 redirected to 38
Edge 20->30 redirected to 39


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 66 from 36 to 38.
Redirecting jump 95 from 36 to 38.
Redirecting jump 179 from 36 to 38.
Redirecting jump 210 from 36 to 38.
Redirecting jump 225 from 36 to 38.
Redirecting jump 310 from 36 to 38.
Merging block 36 into block 35...
Merged blocks 35 and 36.
Merged 35 and 36 without moving.
Removing jump 296.
Merging block 39 into block 38...
Merged blocks 38 and 39.
Merged 38 and 39 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 18 NOTE_INSN_DELETED)
(note 18 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 18 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 pattern+0 S8 A64])
        (reg:DI 5 di [ pattern ])) fnmatch.c:327 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 string+0 S8 A64])
        (reg:DI 4 si [ string ])) fnmatch.c:327 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 131 [ flags ])
        (reg:SI 1 dx [ flags ])) fnmatch.c:327 -1
     (nil))
(note 5 4 20 2 NOTE_INSN_FUNCTION_BEG)
(insn 20 5 21 2 (set (reg:DI 133)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_LOCALE") [flags 0x60]  <var_decl 0x2aeef6d82f30 __libc_tsd_LOCALE>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch.c:329 -1
     (nil))
(insn 21 20 22 2 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 133)) [1 __libc_tsd_LOCALE+0 S8 A64])) fnmatch.c:329 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 134)
        (mem/f:DI (reg/f:DI 132) [1 _20->__locales+0 S8 A64])) fnmatch.c:329 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 134)
                    (const_int 168 [0xa8])) [0 _21->values[13].word+0 S4 A64])
            (const_int 1 [0x1]))) fnmatch.c:329 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) fnmatch.c:329 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 271)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:341 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:DI (reg:DI 135) [0 MEM[(void *)&ps]+0 S8 A128])
        (const_int 0 [0])) fnmatch.c:341 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 97 [ D.11974 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 pattern+0 S8 A64])) fnmatch.c:342 -1
     (nil))
(insn 29 28 30 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 p+0 S8 A64])
        (reg/f:DI 97 [ D.11974 ])) fnmatch.c:342 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (const_int 1024 [0x400])) fnmatch.c:344 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.11974 ])) fnmatch.c:344 -1
     (nil))
(call_insn/i 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strnlen") [flags 0x43]  <function_decl 0x2aeef6ba3510 __strnlen>) [0 __strnlen S1 A8])
            (const_int 0 [0]))) fnmatch.c:344 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strnlen") [flags 0x43]  <function_decl 0x2aeef6ba3510 __strnlen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 4 (set (reg/v:DI 98 [ n ])
        (reg:DI 0 ax)) fnmatch.c:344 -1
     (nil))
(insn 34 33 35 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 98 [ n ])
            (const_int 1023 [0x3ff]))) fnmatch.c:348 -1
     (nil))
(jump_insn 35 34 36 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 305)
            (pc))) fnmatch.c:348 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 305)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 5 (parallel [
            (set (reg:DI 136 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch.c:350))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 38 37 39 5 (set (reg/v/f:DI 99 [ old__ ])
        (reg:DI 136 [ old__ ])) fnmatch.c:350 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 100 [ D.11975 ])
                (plus:DI (reg/v:DI 98 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg:DI 137 [ D.11975 ])
                (ashift:DI (reg:DI 100 [ D.11975 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg:DI 137 [ D.11975 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 43 42 44 5 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg:DI 138)
                    (reg:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:DI 142)
                (udiv:DI (reg:DI 140)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 143)
                (umod:DI (reg:DI 140)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 144)
                (mult:DI (reg:DI 142)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 144)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 47 46 48 5 (set (reg:DI 145)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch.c:350 -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg:DI 145)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 147)
                (lshiftrt:DI (reg:DI 146)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 146)
            (const_int 16 [0x10]))
        (nil)))
(insn 50 49 51 5 (parallel [
            (set (reg/f:DI 148)
                (ashift:DI (reg:DI 147)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 51 50 52 5 (set (reg/v/f:DI 89 [ wpattern ])
        (reg/f:DI 148)) fnmatch.c:350 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg:DI 149 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 99 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch.c:350)
                    ]
                     [] fnmatch.c:350))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch.c:350 -1
     (nil))
(insn 53 52 54 5 (set (reg/v:DI 102 [ d__ ])
        (reg:DI 149 [ d__ ])) fnmatch.c:350 -1
     (nil))
(insn 54 53 55 5 (set (reg/v:DI 92 [ alloca_used ])
        (reg/v:DI 102 [ d__ ])) fnmatch.c:350 -1
     (nil))
(insn 55 54 56 5 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:352 -1
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:352 -1
     (nil))
(insn 57 56 58 5 (set (reg:DI 2 cx)
        (reg:DI 150)) fnmatch.c:352 -1
     (nil))
(insn 58 57 59 5 (set (reg:DI 1 dx)
        (reg:DI 100 [ D.11975 ])) fnmatch.c:352 -1
     (nil))
(insn 59 58 60 5 (set (reg:DI 4 si)
        (reg:DI 151)) fnmatch.c:352 -1
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ wpattern ])) fnmatch.c:352 -1
     (nil))
(call_insn 61 60 62 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:352 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 62 61 63 5 (set (reg/v:DI 103 [ n ])
        (reg:DI 0 ax)) fnmatch.c:352 -1
     (nil))
(insn 63 62 64 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 103 [ n ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch.c:353 -1
     (nil))
(jump_insn 64 63 85 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) fnmatch.c:353 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 68)
(code_label 85 64 65 6 1267 "" [1 uses])
(note 65 85 11 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 11 65 66 6 (set (reg:SI 93 [ D.11970 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch.c:357 -1
     (nil))
(jump_insn 66 11 67 6 (set (pc)
        (label_ref:DI 293)) 654 {jump}
     (nil)
 -> 293)
(barrier 67 66 68)
(code_label 68 67 69 7 1264 "" [1 uses])
(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 p+0 S8 A64])
            (const_int 0 [0]))) fnmatch.c:358 -1
     (nil))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 309)
            (pc))) fnmatch.c:358 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 309)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:360 -1
     (nil))
(insn 74 73 302 8 (set (mem/c:DI (reg:DI 152) [0 MEM[(void *)&ps]+0 S8 A128])
        (const_int 0 [0])) fnmatch.c:360 -1
     (nil))
(jump_insn 302 74 303 8 (set (pc)
        (label_ref 75)) fnmatch.c:361 -1
     (nil)
 -> 75)
(barrier 303 302 305)
(code_label 305 303 304 9 1279 "" [1 uses])
(note 304 305 6 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 6 304 75 9 (set (reg/v:DI 92 [ alloca_used ])
        (const_int 0 [0])) fnmatch.c:338 -1
     (nil))
(code_label 75 6 76 10 1263 ("prepare_wpattern") [1 uses])
(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 10 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:367 -1
     (nil))
(insn 78 77 79 10 (parallel [
            (set (reg:DI 154)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:367 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 2 cx)
        (reg:DI 153)) fnmatch.c:367 -1
     (nil))
(insn 80 79 81 10 (set (reg:DI 1 dx)
        (const_int 0 [0])) fnmatch.c:367 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 4 si)
        (reg:DI 154)) fnmatch.c:367 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (const_int 0 [0])) fnmatch.c:367 -1
     (nil))
(call_insn 83 82 84 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:367 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 84 83 86 10 (set (reg/v:DI 105 [ n ])
        (reg:DI 0 ax)) fnmatch.c:367 -1
     (nil))
(insn 86 84 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 105 [ n ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch.c:368 -1
     (nil))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) fnmatch.c:368 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 85)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg:DI 155)
        (const_int 4611686018427387902 [0x3ffffffffffffffe])) fnmatch.c:373 -1
     (nil))
(insn 90 89 91 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 105 [ n ])
            (reg:DI 155))) fnmatch.c:373 -1
     (nil))
(jump_insn 91 90 92 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) fnmatch.c:373 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 97)
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:DI 156)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2aeef6d82900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch.c:375 -1
     (nil))
(insn 94 93 13 12 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 156)) [2 __libc_errno+0 S4 A32])
        (const_int 12 [0xc])) fnmatch.c:375 -1
     (nil))
(insn 13 94 95 12 (set (reg:SI 93 [ D.11970 ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch.c:376 -1
     (nil))
(jump_insn 95 13 96 12 (set (pc)
        (label_ref:DI 293)) fnmatch.c:376 654 {jump}
     (nil)
 -> 293)
(barrier 96 95 97)
(code_label 97 96 98 13 1268 "" [1 uses])
(note 98 97 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 13 (parallel [
            (set (reg:DI 106 [ D.11975 ])
                (plus:DI (reg/v:DI 105 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:379 -1
     (nil))
(insn 100 99 101 13 (parallel [
            (set (reg:DI 157 [ D.11975 ])
                (ashift:DI (reg:DI 106 [ D.11975 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:378 -1
     (nil))
(insn 101 100 102 13 (set (reg:DI 5 di)
        (reg:DI 157 [ D.11975 ])) fnmatch.c:378 -1
     (nil))
(call_insn 102 101 103 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch.c:378 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 13 (set (reg/f:DI 158)
        (reg:DI 0 ax)) fnmatch.c:378 -1
     (expr_list:REG_NOALIAS (reg/f:DI 158)
        (nil)))
(insn 104 103 105 13 (set (reg/v/f:DI 88 [ wpattern ])
        (reg/f:DI 158)) fnmatch.c:378 -1
     (nil))
(insn 105 104 106 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 ps.__count+0 S4 A128])
            (const_int 0 [0]))) fnmatch.c:380 -1
     (nil))
(jump_insn 106 105 107 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) fnmatch.c:380 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 114)
(note 107 106 108 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 14 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9240") [flags 0x2]  <var_decl 0x2aeef6f76ea0 __PRETTY_FUNCTION__>)) fnmatch.c:380 -1
     (nil))
(insn 109 108 110 14 (set (reg:SI 1 dx)
        (const_int 380 [0x17c])) fnmatch.c:380 -1
     (nil))
(insn 110 109 111 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2aeef77c0480 *.LC11>)) fnmatch.c:380 -1
     (nil))
(insn 111 110 112 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2aeef77c0510 *.LC12>)) fnmatch.c:380 -1
     (nil))
(call_insn 112 111 113 14 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch.c:380 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 113 112 114)
(code_label 114 113 115 15 1269 "" [1 uses])
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ wpattern ])
            (const_int 0 [0]))) fnmatch.c:381 -1
     (nil))
(jump_insn 117 116 118 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 313)
            (pc))) fnmatch.c:381 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 313)
(note 118 117 119 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 16 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:383 -1
     (nil))
(insn 120 119 121 16 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:383 -1
     (nil))
(insn 121 120 122 16 (set (reg:DI 2 cx)
        (reg:DI 159)) fnmatch.c:383 -1
     (nil))
(insn 122 121 123 16 (set (reg:DI 1 dx)
        (reg:DI 106 [ D.11975 ])) fnmatch.c:383 -1
     (nil))
(insn 123 122 124 16 (set (reg:DI 4 si)
        (reg:DI 160)) fnmatch.c:383 -1
     (nil))
(insn 124 123 125 16 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:383 -1
     (nil))
(call_insn 125 124 8 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:383 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 8 125 306 16 (set (reg/v/f:DI 89 [ wpattern ])
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:383 -1
     (nil))
(jump_insn 306 8 307 16 (set (pc)
        (label_ref 126)) -1
     (nil)
 -> 126)
(barrier 307 306 309)
(code_label 309 307 308 17 1280 "" [1 uses])
(note 308 309 7 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 7 308 126 17 (set (reg/v/f:DI 88 [ wpattern ])
        (const_int 0 [0])) fnmatch.c:334 -1
     (nil))
(code_label 126 7 127 18 1266 "" [1 uses])
(note 127 126 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 ps.__count+0 S4 A128])
            (const_int 0 [0]))) fnmatch.c:386 -1
     (nil))
(jump_insn 129 128 130 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) fnmatch.c:386 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 137)
(note 130 129 131 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 19 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9240") [flags 0x2]  <var_decl 0x2aeef6f76ea0 __PRETTY_FUNCTION__>)) fnmatch.c:386 -1
     (nil))
(insn 132 131 133 19 (set (reg:SI 1 dx)
        (const_int 386 [0x182])) fnmatch.c:386 -1
     (nil))
(insn 133 132 134 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2aeef77c0480 *.LC11>)) fnmatch.c:386 -1
     (nil))
(insn 134 133 135 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2aeef77c0510 *.LC12>)) fnmatch.c:386 -1
     (nil))
(call_insn 135 134 136 19 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch.c:386 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 136 135 137)
(code_label 137 136 138 20 1270 "" [1 uses])
(note 138 137 139 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 20 (set (reg/f:DI 110 [ D.11974 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 string+0 S8 A64])) fnmatch.c:388 -1
     (nil))
(insn 140 139 141 20 (set (reg:DI 4 si)
        (const_int 1024 [0x400])) fnmatch.c:388 -1
     (nil))
(insn 141 140 142 20 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.11974 ])) fnmatch.c:388 -1
     (nil))
(call_insn/i 142 141 143 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strnlen") [flags 0x43]  <function_decl 0x2aeef6ba3510 __strnlen>) [0 __strnlen S1 A8])
            (const_int 0 [0]))) fnmatch.c:388 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strnlen") [flags 0x43]  <function_decl 0x2aeef6ba3510 __strnlen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 143 142 144 20 (set (reg/v:DI 111 [ n ])
        (reg:DI 0 ax)) fnmatch.c:388 -1
     (nil))
(insn 144 143 145 20 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 p+0 S8 A64])
        (reg/f:DI 110 [ D.11974 ])) fnmatch.c:392 -1
     (nil))
(insn 145 144 146 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 111 [ n ])
            (const_int 1023 [0x3ff]))) fnmatch.c:393 -1
     (nil))
(jump_insn 146 145 147 20 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) fnmatch.c:393 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 188)
(note 147 146 148 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 21 (parallel [
            (set (reg:DI 161 [ old__ ])
                (asm_operands/v:DI ("mov %%rsp, %0") ("=r") 0 []
                     []
                     [] fnmatch.c:395))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 149 148 150 21 (set (reg/v/f:DI 112 [ old__ ])
        (reg:DI 161 [ old__ ])) fnmatch.c:395 -1
     (nil))
(insn 150 149 151 21 (parallel [
            (set (reg:DI 113 [ D.11975 ])
                (plus:DI (reg/v:DI 111 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 151 150 152 21 (parallel [
            (set (reg:DI 162 [ D.11975 ])
                (ashift:DI (reg:DI 113 [ D.11975 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 152 151 153 21 (parallel [
            (set (reg:DI 163)
                (plus:DI (reg:DI 162 [ D.11975 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 153 152 154 21 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 154 153 155 21 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg:DI 163)
                    (reg:DI 164)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 155 154 156 21 (parallel [
            (set (reg:DI 167)
                (udiv:DI (reg:DI 165)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 168)
                (umod:DI (reg:DI 165)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 156 155 157 21 (parallel [
            (set (reg:DI 169)
                (mult:DI (reg:DI 167)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 157 156 158 21 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 158 157 159 21 (set (reg:DI 170)
        (reg/f:DI 83 virtual-stack-dynamic)) fnmatch.c:395 -1
     (nil))
(insn 159 158 160 21 (parallel [
            (set (reg:DI 171)
                (plus:DI (reg:DI 170)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 160 159 161 21 (parallel [
            (set (reg:DI 172)
                (lshiftrt:DI (reg:DI 171)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 171)
            (const_int 16 [0x10]))
        (nil)))
(insn 161 160 162 21 (parallel [
            (set (reg/f:DI 173)
                (ashift:DI (reg:DI 172)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 162 161 163 21 (set (reg/v/f:DI 91 [ wstring ])
        (reg/f:DI 173)) fnmatch.c:395 -1
     (nil))
(insn 163 162 164 21 (parallel [
            (set (reg:DI 174 [ d__ ])
                (asm_operands/v:DI ("sub %%rsp , %0") ("=r") 0 [
                        (reg/v/f:DI 112 [ old__ ])
                    ]
                     [
                        (asm_input:DI ("0") fnmatch.c:395)
                    ]
                     [] fnmatch.c:395))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 164 163 165 21 (set (reg/v:DI 115 [ d__ ])
        (reg:DI 174 [ d__ ])) fnmatch.c:395 -1
     (nil))
(insn 165 164 166 21 (parallel [
            (set (reg/v:DI 92 [ alloca_used ])
                (plus:DI (reg/v:DI 92 [ alloca_used ])
                    (reg/v:DI 115 [ d__ ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:395 -1
     (nil))
(insn 166 165 167 21 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:397 -1
     (nil))
(insn 167 166 168 21 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:397 -1
     (nil))
(insn 168 167 169 21 (set (reg:DI 2 cx)
        (reg:DI 175)) fnmatch.c:397 -1
     (nil))
(insn 169 168 170 21 (set (reg:DI 1 dx)
        (reg:DI 113 [ D.11975 ])) fnmatch.c:397 -1
     (nil))
(insn 170 169 171 21 (set (reg:DI 4 si)
        (reg:DI 176)) fnmatch.c:397 -1
     (nil))
(insn 171 170 172 21 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ wstring ])) fnmatch.c:397 -1
     (nil))
(call_insn 172 171 173 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:397 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 173 172 174 21 (set (reg/v:DI 87 [ n ])
        (reg:DI 0 ax)) fnmatch.c:397 -1
     (nil))
(insn 174 173 175 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 87 [ n ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch.c:398 -1
     (nil))
(jump_insn 175 174 198 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) fnmatch.c:398 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 181)
(code_label 198 175 176 22 1274 "" [1 uses])
(note 176 198 177 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 22 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:404 -1
     (nil))
(call_insn 178 177 15 22 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch.c:404 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 178 179 22 (set (reg:SI 93 [ D.11970 ])
        (const_int -1 [0xffffffffffffffff])) fnmatch.c:405 -1
     (nil))
(jump_insn 179 15 180 22 (set (pc)
        (label_ref:DI 293)) fnmatch.c:405 654 {jump}
     (nil)
 -> 293)
(barrier 180 179 181)
(code_label 181 180 182 23 1272 "" [1 uses])
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 p+0 S8 A64])
            (const_int 0 [0]))) fnmatch.c:407 -1
     (nil))
(jump_insn 184 183 185 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 317)
            (pc))) fnmatch.c:407 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 317)
(note 185 184 186 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 24 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:409 -1
     (nil))
(insn 187 186 188 24 (set (mem/c:DI (reg:DI 177) [0 MEM[(void *)&ps]+0 S8 A128])
        (const_int 0 [0])) fnmatch.c:409 -1
     (nil))
(code_label 188 187 189 25 1271 ("prepare_wstring") [1 uses])
(note 189 188 190 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 25 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:416 -1
     (nil))
(insn 191 190 192 25 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:416 -1
     (nil))
(insn 192 191 193 25 (set (reg:DI 2 cx)
        (reg:DI 178)) fnmatch.c:416 -1
     (nil))
(insn 193 192 194 25 (set (reg:DI 1 dx)
        (const_int 0 [0])) fnmatch.c:416 -1
     (nil))
(insn 194 193 195 25 (set (reg:DI 4 si)
        (reg:DI 179)) fnmatch.c:416 -1
     (nil))
(insn 195 194 196 25 (set (reg:DI 5 di)
        (const_int 0 [0])) fnmatch.c:416 -1
     (nil))
(call_insn 196 195 197 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:416 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 197 196 199 25 (set (reg/v:DI 87 [ n ])
        (reg:DI 0 ax)) fnmatch.c:416 -1
     (nil))
(insn 199 197 200 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 87 [ n ])
            (const_int -1 [0xffffffffffffffff]))) fnmatch.c:417 -1
     (nil))
(jump_insn 200 199 201 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) fnmatch.c:417 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 198)
(note 201 200 202 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 26 (set (reg:DI 180)
        (const_int 4611686018427387902 [0x3ffffffffffffffe])) fnmatch.c:422 -1
     (nil))
(insn 203 202 204 26 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 87 [ n ])
            (reg:DI 180))) fnmatch.c:422 -1
     (nil))
(jump_insn 204 203 205 26 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) fnmatch.c:422 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 212)
(note 205 204 206 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 27 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:424 -1
     (nil))
(call_insn 207 206 208 27 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch.c:424 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 208 207 209 27 (set (reg:DI 181)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2aeef6d82900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [17  S8 A8])) fnmatch.c:425 -1
     (nil))
(insn 209 208 16 27 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 181)) [2 __libc_errno+0 S4 A32])
        (const_int 12 [0xc])) fnmatch.c:425 -1
     (nil))
(insn 16 209 210 27 (set (reg:SI 93 [ D.11970 ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch.c:426 -1
     (nil))
(jump_insn 210 16 211 27 (set (pc)
        (label_ref:DI 293)) fnmatch.c:426 654 {jump}
     (nil)
 -> 293)
(barrier 211 210 212)
(code_label 212 211 213 28 1275 "" [1 uses])
(note 213 212 214 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 28 (parallel [
            (set (reg:DI 118 [ D.11975 ])
                (plus:DI (reg/v:DI 87 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:430 -1
     (nil))
(insn 215 214 216 28 (parallel [
            (set (reg:DI 182 [ D.11975 ])
                (ashift:DI (reg:DI 118 [ D.11975 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:429 -1
     (nil))
(insn 216 215 217 28 (set (reg:DI 5 di)
        (reg:DI 182 [ D.11975 ])) fnmatch.c:429 -1
     (nil))
(call_insn 217 216 218 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fnmatch.c:429 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aeef69b4360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 218 217 219 28 (set (reg/f:DI 183)
        (reg:DI 0 ax)) fnmatch.c:429 -1
     (expr_list:REG_NOALIAS (reg/f:DI 183)
        (nil)))
(insn 219 218 220 28 (set (reg/v/f:DI 90 [ wstring ])
        (reg/f:DI 183)) fnmatch.c:429 -1
     (nil))
(insn 220 219 221 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ wstring ])
            (const_int 0 [0]))) fnmatch.c:431 -1
     (nil))
(jump_insn 221 220 222 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) fnmatch.c:431 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 227)
(note 222 221 223 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 29 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:433 -1
     (nil))
(call_insn 224 223 17 29 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch.c:433 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 224 225 29 (set (reg:SI 93 [ D.11970 ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch.c:434 -1
     (nil))
(jump_insn 225 17 226 29 (set (pc)
        (label_ref:DI 293)) fnmatch.c:434 654 {jump}
     (nil)
 -> 293)
(barrier 226 225 227)
(code_label 227 226 228 30 1276 "" [1 uses])
(note 228 227 229 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 ps.__count+0 S4 A128])
            (const_int 0 [0]))) fnmatch.c:436 -1
     (nil))
(jump_insn 230 229 231 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 238)
            (pc))) fnmatch.c:436 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 238)
(note 231 230 232 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 31 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.9240") [flags 0x2]  <var_decl 0x2aeef6f76ea0 __PRETTY_FUNCTION__>)) fnmatch.c:436 -1
     (nil))
(insn 233 232 234 31 (set (reg:SI 1 dx)
        (const_int 436 [0x1b4])) fnmatch.c:436 -1
     (nil))
(insn 234 233 235 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2aeef77c0480 *.LC11>)) fnmatch.c:436 -1
     (nil))
(insn 235 234 236 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2aeef77c0510 *.LC12>)) fnmatch.c:436 -1
     (nil))
(call_insn 236 235 237 31 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) fnmatch.c:436 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2aeef6a58e58 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 237 236 238)
(code_label 238 237 239 32 1277 "" [1 uses])
(note 239 238 240 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 32 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:437 -1
     (nil))
(insn 241 240 242 32 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:437 -1
     (nil))
(insn 242 241 243 32 (set (reg:DI 2 cx)
        (reg:DI 184)) fnmatch.c:437 -1
     (nil))
(insn 243 242 244 32 (set (reg:DI 1 dx)
        (reg:DI 118 [ D.11975 ])) fnmatch.c:437 -1
     (nil))
(insn 244 243 245 32 (set (reg:DI 4 si)
        (reg:DI 185)) fnmatch.c:437 -1
     (nil))
(insn 245 244 246 32 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ wstring ])) fnmatch.c:437 -1
     (nil))
(call_insn 246 245 10 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>) [0 __mbsrtowcs S1 A8])
            (const_int 0 [0]))) fnmatch.c:437 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mbsrtowcs") [flags 0x41]  <function_decl 0x2aeef6e60d80 __mbsrtowcs>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 10 246 314 32 (set (reg/v/f:DI 91 [ wstring ])
        (reg/v/f:DI 90 [ wstring ])) fnmatch.c:437 -1
     (nil))
(jump_insn 314 10 315 32 (set (pc)
        (label_ref 247)) -1
     (nil)
 -> 247)
(barrier 315 314 317)
(code_label 317 315 316 33 1282 "" [1 uses])
(note 316 317 9 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 9 316 247 33 (set (reg/v/f:DI 90 [ wstring ])
        (const_int 0 [0])) fnmatch.c:336 -1
     (nil))
(code_label 247 9 248 34 1273 "" [1 uses])
(note 248 247 249 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 34 (parallel [
            (set (reg:SI 186 [ D.11970 ])
                (and:SI (reg/v:SI 131 [ flags ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:440 -1
     (nil))
(insn 250 249 251 34 (parallel [
            (set (reg:DI 187 [ D.11975 ])
                (ashift:DI (reg/v:DI 87 [ n ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:440 -1
     (nil))
(insn 251 250 252 34 (parallel [
            (set (reg:DI 188 [ D.11976 ])
                (plus:DI (reg/v/f:DI 91 [ wstring ])
                    (reg:DI 187 [ D.11975 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:440 -1
     (nil))
(insn 252 251 253 34 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:440 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 253 252 254 34 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (reg/v:DI 92 [ alloca_used ])) fnmatch.c:440 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 254 253 255 34 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch.c:440 -1
     (nil))
(insn 255 254 256 34 (set (reg:SI 37 r8)
        (reg/v:SI 131 [ flags ])) fnmatch.c:440 -1
     (nil))
(insn 256 255 257 34 (set (reg:SI 2 cx)
        (reg:SI 186 [ D.11970 ])) fnmatch.c:440 -1
     (nil))
(insn 257 256 258 34 (set (reg:DI 1 dx)
        (reg:DI 188 [ D.11976 ])) fnmatch.c:440 -1
     (nil))
(insn 258 257 259 34 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ wstring ])) fnmatch.c:440 -1
     (nil))
(insn 259 258 260 34 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ wpattern ])) fnmatch.c:440 -1
     (nil))
(call_insn 260 259 261 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>) [0 internal_fnwmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch.c:440 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnwmatch") [flags 0x3]  <function_decl 0x2aeef6f18e58 internal_fnwmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 261 260 262 34 (set (reg/v:SI 124 [ res ])
        (reg:SI 0 ax)) fnmatch.c:440 -1
     (nil))
(insn 262 261 263 34 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ wstring ])) fnmatch.c:444 -1
     (nil))
(call_insn 263 262 264 34 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch.c:444 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 264 263 265 34 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ wpattern ])) fnmatch.c:445 -1
     (nil))
(call_insn 265 264 266 34 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fnmatch.c:445 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aeef69aae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 266 265 12 34 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:447 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 266 310 34 (set (reg:SI 93 [ D.11970 ])
        (reg/v:SI 124 [ res ])) fnmatch.c:447 -1
     (nil))
(jump_insn 310 12 311 34 (set (pc)
        (label_ref:DI 293)) fnmatch.c:447 654 {jump}
     (nil)
 -> 293)
(barrier 311 310 313)
(code_label 313 311 312 35 1281 "" [1 uses])
(note 312 313 14 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 14 312 269 35 (set (reg:SI 93 [ D.11970 ])
        (const_int -2 [0xfffffffffffffffe])) fnmatch.c:382 -1
     (nil))
(jump_insn 269 14 270 35 (set (pc)
        (label_ref 293)) -1
     (nil)
 -> 293)
(barrier 270 269 271)
(code_label 271 270 272 37 1262 "" [1 uses])
(note 272 271 273 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 37 (set (reg/f:DI 126 [ D.11974 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 string+0 S8 A64])) fnmatch.c:451 -1
     (nil))
(insn 274 273 275 37 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.11974 ])) fnmatch.c:451 -1
     (nil))
(call_insn/i 275 274 276 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aeef698e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) fnmatch.c:451 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aeef698e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 276 275 277 37 (set (reg:DI 190)
        (reg:DI 0 ax)) fnmatch.c:451 -1
     (nil))
(insn 277 276 278 37 (set (reg:DI 191)
        (reg:DI 190)) fnmatch.c:451 -1
     (nil))
(insn 278 277 279 37 (set (reg:DI 127 [ D.11975 ])
        (reg:DI 191)) fnmatch.c:451 -1
     (nil))
(insn 279 278 280 37 (parallel [
            (set (reg:SI 192 [ D.11970 ])
                (and:SI (reg/v:SI 131 [ flags ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:451 -1
     (nil))
(insn 280 279 281 37 (parallel [
            (set (reg:DI 193 [ D.11974 ])
                (plus:DI (reg/f:DI 126 [ D.11974 ])
                    (reg:DI 127 [ D.11975 ])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:451 -1
     (nil))
(insn 281 280 282 37 (set (reg:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 pattern+0 S8 A64])) fnmatch.c:451 -1
     (nil))
(insn 282 281 283 37 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:451 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 283 282 284 37 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [6  S8 A64])
        (const_int 0 [0])) fnmatch.c:451 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 284 283 285 37 (set (reg:DI 38 r9)
        (const_int 0 [0])) fnmatch.c:451 -1
     (nil))
(insn 285 284 286 37 (set (reg:SI 37 r8)
        (reg/v:SI 131 [ flags ])) fnmatch.c:451 -1
     (nil))
(insn 286 285 287 37 (set (reg:SI 2 cx)
        (reg:SI 192 [ D.11970 ])) fnmatch.c:451 -1
     (nil))
(insn 287 286 288 37 (set (reg:DI 1 dx)
        (reg:DI 193 [ D.11974 ])) fnmatch.c:451 -1
     (nil))
(insn 288 287 289 37 (set (reg:DI 4 si)
        (reg/f:DI 126 [ D.11974 ])) fnmatch.c:451 -1
     (nil))
(insn 289 288 290 37 (set (reg:DI 5 di)
        (reg:DI 194)) fnmatch.c:451 -1
     (nil))
(call_insn 290 289 291 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>) [0 internal_fnmatch S1 A8])
            (const_int 16 [0x10]))) fnmatch.c:451 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_fnmatch") [flags 0x3]  <function_decl 0x2aeef6edf288 internal_fnmatch>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 291 290 292 37 (set (reg:SI 93 [ D.11970 ])
        (reg:SI 0 ax)) fnmatch.c:451 -1
     (nil))
(insn 292 291 293 37 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) fnmatch.c:451 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 293 292 294 38 1278 "" [7 uses])
(note 294 293 295 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 299 38 (set (reg:SI 130 [ <retval> ])
        (reg:SI 93 [ D.11970 ])) -1
     (nil))
(insn 299 295 300 38 (set (reg/i:SI 0 ax)
        (reg:SI 130 [ <retval> ])) fnmatch.c:453 -1
     (nil))
(insn 300 299 0 38 (use (reg/i:SI 0 ax)) fnmatch.c:453 -1
     (nil))
