
;; Function __printf_size (__printf_size, funcdef_no=48, decl_uid=11525, cgraph_uid=48, symbol_order=66)

Partition 2: size 20 align 16
	fp_info
Partition 0: size 16 align 16
	fpnum
Partition 1: size 8 align 8
	ptr

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117
Edge 2->4 redirected to 134
Edge 24->30 redirected to 136
Edge 28->30 redirected to 137
Edge 79->105 redirected to 138
Edge 89->105 redirected to 139
Edge 94->105 redirected to 140
Edge 108->77 redirected to 141
Edge 109->24 redirected to 142
Edge 113->25 redirected to 144
Purged non-fallthru edges from bb 146
Purged non-fallthru edges from bb 148
Purged non-fallthru edges from bb 150
Purged non-fallthru edges from bb 153
Purged non-fallthru edges from bb 155
Purged non-fallthru edges from bb 157


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 9->11 redirected to 12
Forwarding edge 9->10 to 135 failed.
Forwarding edge 9->10 to 135 failed.
deleting block 11
Edge 19->21 redirected to 22
Forwarding edge 19->20 to 134 failed.
Forwarding edge 19->20 to 134 failed.
deleting block 21
Edge 22->24 redirected to 25
Forwarding edge 22->23 to 135 failed.
Forwarding edge 22->23 to 135 failed.
deleting block 24
Forwarding edge 35->36 to 38 failed.
Forwarding edge 54->55 to 139 failed.
Forwarding edge 65->66 to 140 failed.
Forwarding edge 76->77 to 141 failed.
Forwarding edge 84->85 to 148 failed.
Forwarding edge 88->89 to 91 failed.
Forwarding edge 91->92 to 152 failed.
Forwarding edge 116->117 to 132 failed.
Forwarding edge 135->136 to 97 failed.
Edge 142->144 redirected to 145
Forwarding edge 143->144 to 145 failed.
Deleted label in block 144.
Forwarding edge 146->147 to 86 failed.
Edge 148->150 redirected to 151
Forwarding edge 149->150 to 151 failed.
Deleted label in block 150.
Edge 152->154 redirected to 155
Forwarding edge 153->154 to 155 failed.
Deleted label in block 154.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 135 failed.
Forwarding edge 19->20 to 134 failed.
Forwarding edge 22->23 to 135 failed.
Forwarding edge 35->36 to 38 failed.
Forwarding edge 54->55 to 139 failed.
Forwarding edge 65->66 to 140 failed.
Forwarding edge 76->77 to 141 failed.
Forwarding edge 84->85 to 148 failed.
Forwarding edge 88->89 to 91 failed.
Forwarding edge 91->92 to 152 failed.
Forwarding edge 116->117 to 132 failed.
Forwarding edge 135->136 to 97 failed.
Forwarding edge 143->144 to 145 failed.
Forwarding edge 146->147 to 86 failed.
Forwarding edge 149->150 to 151 failed.
Forwarding edge 153->154 to 155 failed.


;;
;; Full RTL generated for this function:
;;
(note 62 0 94 NOTE_INSN_DELETED)
(note 94 62 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 63 94 64 2 (set (reg/v/f:DI 308 [ fp ])
        (reg:DI 5 di [ fp ])) printf_size.c:90 -1
     (nil))
(insn 64 63 65 2 (set (reg/v/f:DI 309 [ info ])
        (reg:DI 4 si [ info ])) printf_size.c:90 -1
     (nil))
(insn 65 64 66 2 (set (reg/v/f:DI 310 [ args ])
        (reg:DI 1 dx [ args ])) printf_size.c:90 -1
     (nil))
(note 66 65 96 2 NOTE_INSN_FUNCTION_BEG)
(insn 96 66 97 2 (set (reg:DI 311)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_B") [flags 0x60]  <var_decl 0x2b5ea0468240 __libc_tsd_CTYPE_B>)
                    ] UNSPEC_GOTNTPOFF)) [22  S8 A8])) printf_size.c:99 -1
     (nil))
(insn 97 96 98 2 (set (reg:SI 313)
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 8 [0x8])) [2 info_61(D)->spec+0 S4 A32])) printf_size.c:99 -1
     (nil))
(insn 98 97 99 2 (set (reg:DI 312 [ D.11999 ])
        (sign_extend:DI (reg:SI 313))) printf_size.c:99 -1
     (nil))
(insn 99 98 100 2 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 311)) [4 MEM[(const short unsigned int * *)&__libc_tsd_CTYPE_B]+0 S8 A64])) printf_size.c:99 -1
     (nil))
(insn 100 99 101 2 (set (reg:HI 315)
        (mem:HI (plus:DI (mult:DI (reg:DI 312 [ D.11999 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 314)) [3 *_65+0 S2 A16])) -1
     (nil))
(insn 101 100 102 2 (parallel [
            (set (reg:HI 306 [ D.12000 ])
                (and:HI (reg:HI 315)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 312 [ D.11999 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 314)) [3 *_65+0 S2 A16])
            (const_int 256 [0x100]))
        (nil)))
(insn 102 101 103 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 306 [ D.12000 ])
            (const_int 0 [0]))) printf_size.c:99 -1
     (nil))
(insn 103 102 104 2 (set (reg:QI 317)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:99 -1
     (nil))
(insn 104 103 105 2 (set (reg:SI 316 [ D.11991 ])
        (zero_extend:SI (reg:QI 317))) printf_size.c:99 -1
     (nil))
(insn 105 104 106 2 (set (reg:DI 318)
        (sign_extend:DI (reg:SI 316 [ D.11991 ]))) printf_size.c:99 -1
     (nil))
(insn 106 105 107 2 (set (reg:DI 319)
        (reg:DI 318)) printf_size.c:99 -1
     (nil))
(insn 107 106 108 2 (parallel [
            (set (reg:DI 320)
                (ashift:DI (reg:DI 319)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:99 -1
     (nil))
(insn 108 107 109 2 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 320)
                    (reg:DI 318)))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 318)
            (const_int 5 [0x5]))
        (nil)))
(insn 109 108 110 2 (parallel [
            (set (reg:DI 322)
                (ashift:DI (reg:DI 321)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:99 -1
     (nil))
(insn 110 109 111 2 (set (reg:DI 321)
        (reg:DI 322)) printf_size.c:99 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 318)
            (const_int 10 [0xa]))
        (nil)))
(insn 111 110 112 2 (parallel [
            (set (reg/v/f:DI 176 [ tag ])
                (plus:DI (reg:DI 321)
                    (symbol_ref:DI ("units.11527") [flags 0x2]  <var_decl 0x2b5ea06a56c0 units>)))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:99 -1
     (nil))
(insn 112 111 113 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 306 [ D.12000 ])
            (const_int 0 [0]))) printf_size.c:100 -1
     (nil))
(jump_insn 113 112 114 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 899)
            (pc))) printf_size.c:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 899)
(note 114 113 67 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 67 114 896 4 (set (reg/v:SI 153 [ divisor ])
        (const_int 1000 [0x3e8])) printf_size.c:100 -1
     (nil))
(jump_insn 896 67 897 4 (set (pc)
        (label_ref 115)) -1
     (nil)
 -> 115)
(barrier 897 896 899)
(code_label 899 897 898 5 79 "" [1 uses])
(note 898 899 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 68 898 115 5 (set (reg/v:SI 153 [ divisor ])
        (const_int 1024 [0x400])) printf_size.c:100 -1
     (nil))
(code_label 115 68 116 6 2 "" [1 uses])
(note 116 115 117 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 6 (parallel [
            (set (reg:DI 323)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:109 -1
     (nil))
(insn 118 117 121 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 ptr+0 S8 A64])
        (reg:DI 323)) printf_size.c:109 -1
     (nil))
(insn 121 118 122 6 (set (reg:QI 326)
        (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 13 [0xd])) [1 *info_61(D)+13 S1 A8])) printf_size.c:119 -1
     (nil))
(insn 122 121 123 6 (parallel [
            (set (reg:QI 177 [ D.12001 ])
                (lshiftrt:QI (reg:QI 326)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:119 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 13 [0xd])) [1 *info_61(D)+13 S1 A8])
            (const_int 2 [0x2]))
        (nil)))
(insn 123 122 124 6 (parallel [
            (set (reg:QI 177 [ D.12001 ])
                (and:QI (reg:QI 177 [ D.12001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:119 -1
     (nil))
(insn 124 123 125 6 (set (reg/v:SI 178 [ wide ])
        (zero_extend:SI (reg:QI 177 [ D.12001 ]))) printf_size.c:119 -1
     (nil))
(insn 125 124 126 6 (set (reg:QI 179 [ D.11997 ])
        (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])) printf_size.c:123 -1
     (nil))
(insn 126 125 127 6 (parallel [
            (set (reg:QI 327 [ D.11997 ])
                (and:QI (reg:QI 179 [ D.11997 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:123 -1
     (nil))
(insn 127 126 128 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 327 [ D.11997 ])
            (const_int 0 [0]))) printf_size.c:123 -1
     (nil))
(jump_insn 128 127 129 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) printf_size.c:123 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 172)
(note 129 128 130 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 7 (set (reg/f:DI 328)
        (mem/f:DI (reg/v/f:DI 310 [ args ]) [4 *args_75(D)+0 S8 A64])) printf_size.c:125 -1
     (nil))
(insn 131 130 132 7 (set (reg:XF 150 [ D.11992 ])
        (mem:XF (reg/f:DI 328) [10 MEM[(const long double *)_76]+0 S16 A128])) printf_size.c:125 -1
     (nil))
(insn 132 131 133 7 (set (mem/c:XF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.ldbl+0 S16 A128])
        (reg:XF 150 [ D.11992 ])) printf_size.c:125 -1
     (nil))
(insn 133 132 134 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 150 [ D.11992 ])
            (reg:XF 150 [ D.11992 ]))) printf_size.c:128 -1
     (nil))
(jump_insn 134 133 135 7 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 885)
            (pc))) printf_size.c:128 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 885)
(note 135 134 136 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 8 (set (reg:HI 329)
        (unspec:HI [
                (reg:XF 150 [ D.11992 ])
            ] UNSPEC_FXAM)) printf_size.c:134 -1
     (nil))
(insn 137 136 138 8 (parallel [
            (set (zero_extract:SI (reg:HI 329)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (and:SI (zero_extract:SI (reg:HI 329)
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 69 [0x45])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:134 -1
     (nil))
(insn 138 137 139 8 (set (reg:CC 17 flags)
        (compare:CC (subreg:QI (zero_extract:SI (reg:HI 329)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8])) 0)
            (const_int 5 [0x5]))) printf_size.c:134 -1
     (nil))
(insn 139 138 140 8 (set (reg:QI 330)
        (eq:QI (reg:CC 17 flags)
            (const_int 0 [0]))) printf_size.c:134 -1
     (nil))
(insn 140 139 141 8 (set (reg:SI 182 [ D.11995 ])
        (zero_extend:SI (reg:QI 330))) printf_size.c:134 -1
     (nil))
(insn 141 140 142 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 182 [ D.11995 ])
            (const_int 0 [0]))) printf_size.c:134 -1
     (nil))
(jump_insn 142 141 143 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) printf_size.c:134 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 772)
(note 143 142 144 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 9 (set (reg:XF 304 [ D.11992 ])
        (float:XF (reg/v:SI 153 [ divisor ]))) printf_size.c:141 -1
     (nil))
(insn 145 144 146 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 150 [ D.11992 ])
            (reg:XF 304 [ D.11992 ]))) printf_size.c:141 -1
     (nil))
(jump_insn 146 145 932 9 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 945)
            (pc))) printf_size.c:141 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 945)
(note 932 146 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 147 932 148 10 (set (pc)
        (label_ref 786)) printf_size.c:141 -1
     (nil)
 -> 786)
(barrier 148 147 945)
(code_label 945 148 150 12 88 "" [1 uses])
(note 150 945 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)tag_69 + 1B]+0 S1 A8])
            (const_int 0 [0]))) printf_size.c:141 -1
     (nil))
(jump_insn 152 151 153 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 786)
            (pc))) printf_size.c:141 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 786)
(note 153 152 165 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(code_label 165 153 154 14 9 "" [1 uses])
(note 154 165 155 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 14 (set (reg:XF 150 [ D.11992 ])
        (div:XF (reg:XF 150 [ D.11992 ])
            (reg:XF 304 [ D.11992 ]))) printf_size.c:143 -1
     (nil))
(insn 156 155 157 14 (parallel [
            (set (reg/v/f:DI 176 [ tag ])
                (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:144 -1
     (nil))
(insn 157 156 158 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 150 [ D.11992 ])
            (reg:XF 304 [ D.11992 ]))) printf_size.c:141 -1
     (nil))
(jump_insn 158 157 159 14 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) printf_size.c:141 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 163)
(note 159 158 160 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 15 (set (mem/c:XF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.ldbl+0 S16 A128])
        (reg:XF 150 [ D.11992 ])) -1
     (nil))
(jump_insn 161 160 162 15 (set (pc)
        (label_ref 786)) -1
     (nil)
 -> 786)
(barrier 162 161 163)
(code_label 163 162 164 16 8 "" [1 uses])
(note 164 163 166 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 166 164 167 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])) [0 MEM[base: tag_86, offset: 1B]+0 S1 A8])
            (const_int 0 [0]))) printf_size.c:141 -1
     (nil))
(jump_insn 167 166 168 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) printf_size.c:141 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 165)
(note 168 167 169 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 17 (set (mem/c:XF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.ldbl+0 S16 A128])
        (reg:XF 150 [ D.11992 ])) -1
     (nil))
(jump_insn 170 169 171 17 (set (pc)
        (label_ref 786)) -1
     (nil)
 -> 786)
(barrier 171 170 172)
(code_label 172 171 173 18 3 "" [1 uses])
(note 173 172 174 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 18 (set (reg/f:DI 331)
        (mem/f:DI (reg/v/f:DI 310 [ args ]) [4 *args_75(D)+0 S8 A64])) printf_size.c:150 -1
     (nil))
(insn 175 174 176 18 (set (reg:DF 187 [ D.12004 ])
        (mem:DF (reg/f:DI 331) [7 MEM[(const double *)_87]+0 S8 A64])) printf_size.c:150 -1
     (nil))
(insn 176 175 177 18 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.dbl.d+0 S8 A128])
        (reg:DF 187 [ D.12004 ])) printf_size.c:150 -1
     (nil))
(insn 177 176 178 18 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 187 [ D.12004 ])
            (reg:DF 187 [ D.12004 ]))) printf_size.c:153 -1
     (nil))
(jump_insn 178 177 179 18 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 885)
            (pc))) printf_size.c:153 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 885)
(note 179 178 180 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 19 (set (reg:V2DF 333)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [7  S16 A128])) printf_size.c:159 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 181 180 182 19 (parallel [
            (set (reg:DF 332 [ D.12004 ])
                (abs:DF (reg:DF 187 [ D.12004 ])))
            (use (reg:V2DF 333))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:159 -1
     (expr_list:REG_EQUAL (abs:DF (reg:DF 187 [ D.12004 ]))
        (nil)))
(insn 182 181 183 19 (set (reg:DF 334)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [7  S8 A64])) printf_size.c:159 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 183 182 184 19 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 332 [ D.12004 ])
            (reg:DF 334))) printf_size.c:159 -1
     (nil))
(jump_insn 184 183 934 19 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 946)
            (pc))) printf_size.c:159 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 946)
(note 934 184 185 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 185 934 186 20 (set (pc)
        (label_ref 779)) printf_size.c:159 -1
     (nil)
 -> 779)
(barrier 186 185 946)
(code_label 946 186 188 22 89 "" [1 uses])
(note 188 946 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 22 (set (reg:DF 254 [ D.12004 ])
        (float:DF (reg/v:SI 153 [ divisor ]))) printf_size.c:166 -1
     (nil))
(insn 190 189 191 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 187 [ D.12004 ])
            (reg:DF 254 [ D.12004 ]))) printf_size.c:166 -1
     (nil))
(jump_insn 191 190 936 22 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 947)
            (pc))) printf_size.c:166 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 947)
(note 936 191 192 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 192 936 193 23 (set (pc)
        (label_ref 786)) printf_size.c:166 -1
     (nil)
 -> 786)
(barrier 193 192 947)
(code_label 947 193 195 25 90 "" [1 uses])
(note 195 947 196 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)tag_69 + 1B]+0 S1 A8])
            (const_int 0 [0]))) printf_size.c:166 -1
     (nil))
(jump_insn 197 196 198 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 786)
            (pc))) printf_size.c:166 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 786)
(note 198 197 210 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(code_label 210 198 199 27 14 "" [1 uses])
(note 199 210 200 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 27 (set (reg:DF 187 [ D.12004 ])
        (div:DF (reg:DF 187 [ D.12004 ])
            (reg:DF 254 [ D.12004 ]))) printf_size.c:168 -1
     (nil))
(insn 201 200 202 27 (parallel [
            (set (reg/v/f:DI 176 [ tag ])
                (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:169 -1
     (nil))
(insn 202 201 203 27 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 187 [ D.12004 ])
            (reg:DF 254 [ D.12004 ]))) printf_size.c:166 -1
     (nil))
(jump_insn 203 202 204 27 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) printf_size.c:166 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 208)
(note 204 203 205 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 28 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.dbl.d+0 S8 A128])
        (reg:DF 187 [ D.12004 ])) -1
     (nil))
(jump_insn 206 205 207 28 (set (pc)
        (label_ref 786)) -1
     (nil)
 -> 786)
(barrier 207 206 208)
(code_label 208 207 209 29 13 "" [1 uses])
(note 209 208 211 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 211 209 212 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 176 [ tag ])
                    (const_int 1 [0x1])) [0 MEM[base: tag_97, offset: 1B]+0 S1 A8])
            (const_int 0 [0]))) printf_size.c:166 -1
     (nil))
(jump_insn 212 211 213 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) printf_size.c:166 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 210)
(note 213 212 214 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 30 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [0 fpnum.dbl.d+0 S8 A128])
        (reg:DF 187 [ D.12004 ])) -1
     (nil))
(jump_insn 215 214 216 30 (set (pc)
        (label_ref 786)) -1
     (nil)
 -> 786)
(barrier 216 215 811)
(code_label 811 216 217 31 70 "" [2 uses])
(note 217 811 218 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 31 (parallel [
            (set (reg:QI 335 [ D.11997 ])
                (and:QI (reg:QI 179 [ D.11997 ])
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:177 -1
     (nil))
(insn 219 218 220 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 335 [ D.11997 ])
            (const_int 0 [0]))) printf_size.c:177 -1
     (nil))
(jump_insn 220 219 900 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 830)
            (pc))) printf_size.c:177 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 830)
(note 900 220 75 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 75 900 923 32 (set (reg/v:SI 210 [ is_neg ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 923 75 924 32 (set (pc)
        (label_ref 808)) -1
     (nil)
 -> 808)
(barrier 924 923 926)
(code_label 926 924 925 33 86 "" [1 uses])
(note 925 926 73 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 73 925 74 33 (set (reg/v/f:DI 226 [ wspecial ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b5ea07741b0 *.LC0>)) -1
     (nil))
(insn 74 73 808 33 (set (reg/v/f:DI 157 [ special ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b5ea0774240 *.LC1>)) -1
     (nil))
(code_label 808 74 221 34 69 "" [1 uses])
(note 221 808 222 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 34 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 190 [ width ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:179 -1
     (nil))
(insn 223 222 224 34 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 149 [ done ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(insn 224 223 225 34 (set (reg:QI 336)
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(insn 225 224 226 34 (set (reg:QI 148 [ D.11991 ])
        (reg:QI 336)) printf_size.c:181 -1
     (nil))
(insn 226 225 227 34 (parallel [
            (set (reg:QI 337)
                (lshiftrt:QI (reg:QI 179 [ D.11997 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 227 226 228 34 (parallel [
            (set (reg:QI 338)
                (xor:QI (reg:QI 337)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 228 227 229 34 (parallel [
            (set (reg:QI 339 [ D.11991 ])
                (and:QI (reg:QI 338)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 229 228 230 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 339 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(jump_insn 230 229 938 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 902)
            (pc))) printf_size.c:181 612 {*jcc_1}
     (int_list:REG_BR_PROB 1350 (nil))
 -> 902)
(note 938 230 231 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 231 938 232 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(jump_insn 232 231 927 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 902)
            (pc))) printf_size.c:181 612 {*jcc_1}
     (int_list:REG_BR_PROB 1561 (nil))
 -> 902)
(note 927 232 928 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 928 927 929 36 (set (pc)
        (label_ref 836)) -1
     (nil)
 -> 836)
(barrier 929 928 931)
(code_label 931 929 930 37 87 "" [1 uses])
(note 930 931 76 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 76 930 836 37 (set (reg/v:SI 210 [ is_neg ])
        (const_int 0 [0])) printf_size.c:181 -1
     (nil))
(code_label 836 76 233 38 71 "" [1 uses])
(note 233 836 234 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:182 -1
     (nil))
(jump_insn 235 234 236 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) printf_size.c:182 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 245)
(note 236 235 237 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 39 (set (reg:DI 194 [ D.12005 ])
        (sign_extend:DI (reg/v:SI 149 [ done ]))) printf_size.c:182 -1
     (nil))
(insn 238 237 239 39 (set (reg:DI 1 dx)
        (reg:DI 194 [ D.12005 ])) printf_size.c:182 -1
     (nil))
(insn 239 238 240 39 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:182 -1
     (nil))
(insn 240 239 241 39 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:182 -1
     (nil))
(call_insn 241 240 242 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>) [0 _IO_wpadn S1 A8])
            (const_int 0 [0]))) printf_size.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 242 241 243 39 (set (reg:DI 154 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:182 -1
     (nil))
(jump_insn 243 242 244 39 (set (pc)
        (label_ref 253)) -1
     (nil)
 -> 253)
(barrier 244 243 245)
(code_label 245 244 246 40 17 "" [1 uses])
(note 246 245 247 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 40 (set (reg:DI 194 [ D.12005 ])
        (sign_extend:DI (reg/v:SI 149 [ done ]))) printf_size.c:182 -1
     (nil))
(insn 248 247 249 40 (set (reg:DI 1 dx)
        (reg:DI 194 [ D.12005 ])) printf_size.c:182 -1
     (nil))
(insn 249 248 250 40 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:182 -1
     (nil))
(insn 250 249 251 40 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:182 -1
     (nil))
(call_insn 251 250 252 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>) [0 _IO_padn S1 A8])
            (const_int 0 [0]))) printf_size.c:182 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 252 251 253 40 (set (reg:DI 154 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:182 -1
     (nil))
(code_label 253 252 254 41 18 "" [1 uses])
(note 254 253 255 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 154 [ D.11994 ])
            (reg:DI 194 [ D.12005 ]))) printf_size.c:182 -1
     (nil))
(jump_insn 256 255 317 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 906)
            (pc))) printf_size.c:182 612 {*jcc_1}
     (int_list:REG_BR_PROB 9032 (nil))
 -> 906)
(code_label 317 256 257 42 27 "" [9 uses])
(note 257 317 85 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 85 257 258 42 (set (reg:SI 155 [ D.11995 ])
        (const_int -1 [0xffffffffffffffff])) printf_size.c:182 -1
     (nil))
(jump_insn 258 85 259 42 (set (pc)
        (label_ref 767)) -1
     (nil)
 -> 767)
(barrier 259 258 902)
(code_label 902 259 901 43 80 "" [2 uses])
(note 901 902 79 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 79 901 80 43 (set (reg/v:SI 234 [ done ])
        (reg/v:SI 149 [ done ])) printf_size.c:179 -1
     (nil))
(insn 80 79 903 43 (set (reg/v:SI 149 [ done ])
        (const_int 0 [0])) printf_size.c:118 -1
     (nil))
(jump_insn 903 80 904 43 (set (pc)
        (label_ref 260)) -1
     (nil)
 -> 260)
(barrier 904 903 906)
(code_label 906 904 905 44 81 "" [1 uses])
(note 905 906 77 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 77 905 78 44 (set (reg/v:SI 234 [ done ])
        (reg/v:SI 149 [ done ])) -1
     (nil))
(insn 78 77 260 44 (set (reg:QI 148 [ D.11991 ])
        (const_int 1 [0x1])) -1
     (nil))
(code_label 260 78 261 45 16 "" [1 uses])
(note 261 260 262 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 210 [ is_neg ])
            (const_int 0 [0]))) printf_size.c:184 -1
     (nil))
(jump_insn 263 262 264 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) printf_size.c:184 -1
     (int_list:REG_BR_PROB 4624 (nil))
 -> 323)
(note 264 263 265 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:185 -1
     (nil))
(jump_insn 266 265 267 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) printf_size.c:185 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 293)
(note 267 266 268 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 47 (set (reg/f:DI 195 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:185 -1
     (nil))
(insn 269 268 270 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 195 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:185 -1
     (nil))
(jump_insn 270 269 271 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) printf_size.c:185 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 275)
(note 271 270 272 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 48 (set (reg/f:DI 196 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 195 [ D.12006 ])
                (const_int 32 [0x20])) [4 _113->_IO_write_ptr+0 S8 A64])) printf_size.c:185 -1
     (nil))
(insn 273 272 274 48 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 196 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 195 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _113->_IO_write_end+0 S8 A64]))) printf_size.c:185 -1
     (nil))
(jump_insn 274 273 275 48 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) printf_size.c:185 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 286)
(code_label 275 274 276 49 22 "" [1 uses])
(note 276 275 277 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 49 (set (reg:SI 4 si)
        (const_int 45 [0x2d])) printf_size.c:185 -1
     (nil))
(insn 278 277 279 49 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:185 -1
     (nil))
(call_insn 279 278 280 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 280 279 281 49 (set (reg:SI 199 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:185 -1
     (nil))
(insn 281 280 282 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:185 -1
     (nil))
(insn 282 281 283 49 (set (reg:QI 340)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:185 -1
     (nil))
(insn 283 282 284 49 (set (reg:QI 156 [ D.11991 ])
        (reg:QI 340)) printf_size.c:185 -1
     (nil))
(jump_insn 284 283 285 49 (set (pc)
        (label_ref 315)) printf_size.c:185 -1
     (nil)
 -> 315)
(barrier 285 284 286)
(code_label 286 285 287 50 23 "" [1 uses])
(note 287 286 288 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 50 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg/f:DI 196 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:185 -1
     (nil))
(insn 289 288 290 50 (set (mem/f:DI (plus:DI (reg/f:DI 195 [ D.12006 ])
                (const_int 32 [0x20])) [4 _113->_IO_write_ptr+0 S8 A64])
        (reg:DI 341)) printf_size.c:185 -1
     (nil))
(insn 290 289 291 50 (set (mem:SI (reg/f:DI 196 [ D.12007 ]) [2 *_117+0 S4 A32])
        (const_int 45 [0x2d])) printf_size.c:185 -1
     (nil))
(jump_insn 291 290 292 50 (set (pc)
        (label_ref 815)) printf_size.c:185 -1
     (nil)
 -> 815)
(barrier 292 291 293)
(code_label 293 292 294 51 21 "" [1 uses])
(note 294 293 295 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 51 (set (reg/f:DI 200 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:185 -1
     (nil))
(insn 296 295 297 51 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 200 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:185 -1
     (nil))
(jump_insn 297 296 298 51 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 308)
            (pc))) printf_size.c:185 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 308)
(note 298 297 299 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 52 (set (reg:SI 4 si)
        (const_int 45 [0x2d])) printf_size.c:185 -1
     (nil))
(insn 300 299 301 52 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:185 -1
     (nil))
(call_insn 301 300 302 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 302 301 303 52 (set (reg:SI 202 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:185 -1
     (nil))
(insn 303 302 304 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:185 -1
     (nil))
(insn 304 303 305 52 (set (reg:QI 342)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:185 -1
     (nil))
(insn 305 304 306 52 (set (reg:QI 156 [ D.11991 ])
        (reg:QI 342)) printf_size.c:185 -1
     (nil))
(jump_insn 306 305 307 52 (set (pc)
        (label_ref 315)) -1
     (nil)
 -> 315)
(barrier 307 306 308)
(code_label 308 307 309 53 26 "" [1 uses])
(note 309 308 310 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 53 (parallel [
            (set (reg:DI 343)
                (plus:DI (reg/f:DI 200 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:185 -1
     (nil))
(insn 311 310 312 53 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 343)) printf_size.c:185 -1
     (nil))
(insn 312 311 313 53 (set (mem:QI (reg/f:DI 200 [ D.12009 ]) [0 *_128+0 S1 A8])
        (const_int 45 [0x2d])) printf_size.c:185 -1
     (nil))
(jump_insn 313 312 314 53 (set (pc)
        (label_ref 815)) printf_size.c:185 -1
     (nil)
 -> 815)
(barrier 314 313 315)
(code_label 315 314 316 54 24 "" [2 uses])
(note 316 315 318 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 318 316 319 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 156 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:185 -1
     (nil))
(jump_insn 319 318 322 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:185 -1
     (int_list:REG_BR_PROB 2752 (nil))
 -> 317)
(note 322 319 320 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 320 322 321 55 (set (pc)
        (label_ref 815)) -1
     (nil)
 -> 815)
(barrier 321 320 323)
(code_label 323 321 324 56 20 "" [2 uses])
(note 324 323 325 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 56 (set (reg:QI 204 [ D.11997 ])
        (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])) printf_size.c:186 -1
     (nil))
(insn 326 325 327 56 (parallel [
            (set (reg:QI 344 [ D.11997 ])
                (and:QI (reg:QI 204 [ D.11997 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:186 -1
     (nil))
(insn 327 326 328 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 344 [ D.11997 ])
            (const_int 0 [0]))) printf_size.c:186 -1
     (nil))
(jump_insn 328 327 329 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) printf_size.c:186 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 387)
(note 329 328 330 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:187 -1
     (nil))
(jump_insn 331 330 332 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 358)
            (pc))) printf_size.c:187 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 358)
(note 332 331 333 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 58 (set (reg/f:DI 206 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:187 -1
     (nil))
(insn 334 333 335 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:187 -1
     (nil))
(jump_insn 335 334 336 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 340)
            (pc))) printf_size.c:187 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 340)
(note 336 335 337 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 59 (set (reg/f:DI 208 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 206 [ D.12006 ])
                (const_int 32 [0x20])) [4 _142->_IO_write_ptr+0 S8 A64])) printf_size.c:187 -1
     (nil))
(insn 338 337 339 59 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 208 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 206 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _142->_IO_write_end+0 S8 A64]))) printf_size.c:187 -1
     (nil))
(jump_insn 339 338 340 59 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 351)
            (pc))) printf_size.c:187 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 351)
(code_label 340 339 341 60 30 "" [1 uses])
(note 341 340 342 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 60 (set (reg:SI 4 si)
        (const_int 43 [0x2b])) printf_size.c:187 -1
     (nil))
(insn 343 342 344 60 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:187 -1
     (nil))
(call_insn 344 343 345 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:187 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 345 344 346 60 (set (reg:SI 212 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:187 -1
     (nil))
(insn 346 345 347 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 212 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:187 -1
     (nil))
(insn 347 346 348 60 (set (reg:QI 345)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:187 -1
     (nil))
(insn 348 347 349 60 (set (reg:QI 158 [ D.11991 ])
        (reg:QI 345)) printf_size.c:187 -1
     (nil))
(jump_insn 349 348 350 60 (set (pc)
        (label_ref 380)) printf_size.c:187 -1
     (nil)
 -> 380)
(barrier 350 349 351)
(code_label 351 350 352 61 31 "" [1 uses])
(note 352 351 353 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 61 (parallel [
            (set (reg:DI 346)
                (plus:DI (reg/f:DI 208 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:187 -1
     (nil))
(insn 354 353 355 61 (set (mem/f:DI (plus:DI (reg/f:DI 206 [ D.12006 ])
                (const_int 32 [0x20])) [4 _142->_IO_write_ptr+0 S8 A64])
        (reg:DI 346)) printf_size.c:187 -1
     (nil))
(insn 355 354 356 61 (set (mem:SI (reg/f:DI 208 [ D.12007 ]) [2 *_146+0 S4 A32])
        (const_int 43 [0x2b])) printf_size.c:187 -1
     (nil))
(jump_insn 356 355 357 61 (set (pc)
        (label_ref 820)) printf_size.c:187 -1
     (nil)
 -> 820)
(barrier 357 356 358)
(code_label 358 357 359 62 29 "" [1 uses])
(note 359 358 360 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 62 (set (reg/f:DI 213 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:187 -1
     (nil))
(insn 361 360 362 62 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 213 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:187 -1
     (nil))
(jump_insn 362 361 363 62 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) printf_size.c:187 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 373)
(note 363 362 364 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 63 (set (reg:SI 4 si)
        (const_int 43 [0x2b])) printf_size.c:187 -1
     (nil))
(insn 365 364 366 63 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:187 -1
     (nil))
(call_insn 366 365 367 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:187 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 367 366 368 63 (set (reg:SI 215 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:187 -1
     (nil))
(insn 368 367 369 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 215 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:187 -1
     (nil))
(insn 369 368 370 63 (set (reg:QI 347)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:187 -1
     (nil))
(insn 370 369 371 63 (set (reg:QI 158 [ D.11991 ])
        (reg:QI 347)) printf_size.c:187 -1
     (nil))
(jump_insn 371 370 372 63 (set (pc)
        (label_ref 380)) -1
     (nil)
 -> 380)
(barrier 372 371 373)
(code_label 373 372 374 64 34 "" [1 uses])
(note 374 373 375 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 64 (parallel [
            (set (reg:DI 348)
                (plus:DI (reg/f:DI 213 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:187 -1
     (nil))
(insn 376 375 377 64 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 348)) printf_size.c:187 -1
     (nil))
(insn 377 376 378 64 (set (mem:QI (reg/f:DI 213 [ D.12009 ]) [0 *_157+0 S1 A8])
        (const_int 43 [0x2b])) printf_size.c:187 -1
     (nil))
(jump_insn 378 377 379 64 (set (pc)
        (label_ref 820)) printf_size.c:187 -1
     (nil)
 -> 820)
(barrier 379 378 380)
(code_label 380 379 381 65 32 "" [2 uses])
(note 381 380 382 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:187 -1
     (nil))
(jump_insn 383 382 386 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:187 -1
     (int_list:REG_BR_PROB 2766 (nil))
 -> 317)
(note 386 383 384 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(jump_insn 384 386 385 66 (set (pc)
        (label_ref 820)) -1
     (nil)
 -> 820)
(barrier 385 384 387)
(code_label 387 385 388 67 28 "" [1 uses])
(note 388 387 389 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 67 (parallel [
            (set (reg:QI 349 [ D.11997 ])
                (and:QI (reg:QI 204 [ D.11997 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:188 -1
     (nil))
(insn 390 389 391 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 349 [ D.11997 ])
            (const_int 0 [0]))) printf_size.c:188 -1
     (nil))
(jump_insn 391 390 392 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 848)
            (pc))) printf_size.c:188 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 848)
(note 392 391 393 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:189 -1
     (nil))
(jump_insn 394 393 395 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 421)
            (pc))) printf_size.c:189 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 421)
(note 395 394 396 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 69 (set (reg/f:DI 218 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:189 -1
     (nil))
(insn 397 396 398 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 218 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:189 -1
     (nil))
(jump_insn 398 397 399 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) printf_size.c:189 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 403)
(note 399 398 400 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 70 (set (reg/f:DI 219 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 218 [ D.12006 ])
                (const_int 32 [0x20])) [4 _170->_IO_write_ptr+0 S8 A64])) printf_size.c:189 -1
     (nil))
(insn 401 400 402 70 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 219 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 218 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _170->_IO_write_end+0 S8 A64]))) printf_size.c:189 -1
     (nil))
(jump_insn 402 401 403 70 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) printf_size.c:189 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 414)
(code_label 403 402 404 71 37 "" [1 uses])
(note 404 403 405 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 71 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:189 -1
     (nil))
(insn 406 405 407 71 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:189 -1
     (nil))
(call_insn 407 406 408 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 408 407 409 71 (set (reg:SI 223 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:189 -1
     (nil))
(insn 409 408 410 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 223 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:189 -1
     (nil))
(insn 410 409 411 71 (set (reg:QI 350)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:189 -1
     (nil))
(insn 411 410 412 71 (set (reg:QI 159 [ D.11991 ])
        (reg:QI 350)) printf_size.c:189 -1
     (nil))
(jump_insn 412 411 413 71 (set (pc)
        (label_ref 443)) printf_size.c:189 -1
     (nil)
 -> 443)
(barrier 413 412 414)
(code_label 414 413 415 72 38 "" [1 uses])
(note 415 414 416 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 72 (parallel [
            (set (reg:DI 351)
                (plus:DI (reg/f:DI 219 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:189 -1
     (nil))
(insn 417 416 418 72 (set (mem/f:DI (plus:DI (reg/f:DI 218 [ D.12006 ])
                (const_int 32 [0x20])) [4 _170->_IO_write_ptr+0 S8 A64])
        (reg:DI 351)) printf_size.c:189 -1
     (nil))
(insn 418 417 419 72 (set (mem:SI (reg/f:DI 219 [ D.12007 ]) [2 *_174+0 S4 A32])
        (const_int 32 [0x20])) printf_size.c:189 -1
     (nil))
(jump_insn 419 418 420 72 (set (pc)
        (label_ref 825)) printf_size.c:189 -1
     (nil)
 -> 825)
(barrier 420 419 421)
(code_label 421 420 422 73 36 "" [1 uses])
(note 422 421 423 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 73 (set (reg/f:DI 224 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:189 -1
     (nil))
(insn 424 423 425 73 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 224 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:189 -1
     (nil))
(jump_insn 425 424 426 73 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) printf_size.c:189 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 436)
(note 426 425 427 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 74 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:189 -1
     (nil))
(insn 428 427 429 74 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:189 -1
     (nil))
(call_insn 429 428 430 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 430 429 431 74 (set (reg:SI 227 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:189 -1
     (nil))
(insn 431 430 432 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 227 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:189 -1
     (nil))
(insn 432 431 433 74 (set (reg:QI 352)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:189 -1
     (nil))
(insn 433 432 434 74 (set (reg:QI 159 [ D.11991 ])
        (reg:QI 352)) printf_size.c:189 -1
     (nil))
(jump_insn 434 433 435 74 (set (pc)
        (label_ref 443)) -1
     (nil)
 -> 443)
(barrier 435 434 436)
(code_label 436 435 437 75 41 "" [1 uses])
(note 437 436 438 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 75 (parallel [
            (set (reg:DI 353)
                (plus:DI (reg/f:DI 224 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:189 -1
     (nil))
(insn 439 438 440 75 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 353)) printf_size.c:189 -1
     (nil))
(insn 440 439 441 75 (set (mem:QI (reg/f:DI 224 [ D.12009 ]) [0 *_185+0 S1 A8])
        (const_int 32 [0x20])) printf_size.c:189 -1
     (nil))
(jump_insn 441 440 442 75 (set (pc)
        (label_ref 825)) printf_size.c:189 -1
     (nil)
 -> 825)
(barrier 442 441 443)
(code_label 443 442 444 76 39 "" [2 uses])
(note 444 443 445 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 159 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:189 -1
     (nil))
(jump_insn 446 445 449 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:189 -1
     (int_list:REG_BR_PROB 2719 (nil))
 -> 317)
(note 449 446 447 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn 447 449 448 77 (set (pc)
        (label_ref 825)) -1
     (nil)
 -> 825)
(barrier 448 447 850)
(code_label 850 448 450 78 73 "" [1 uses])
(note 450 850 451 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 78 (parallel [
            (set (reg:SI 151 [ D.11993 ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 452 451 488 78 (set (reg/v:SI 152 [ done ])
        (reg:SI 151 [ D.11993 ])) -1
     (nil))
(code_label 488 452 453 79 45 "" [1 uses])
(note 453 488 454 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 79 (parallel [
            (set (reg/v/f:DI 226 [ wspecial ])
                (plus:DI (reg/v/f:DI 226 [ wspecial ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 455 454 456 79 (set (reg/v:SI 229 [ outc ])
        (mem:SI (plus:DI (reg/v/f:DI 226 [ wspecial ])
                (const_int -4 [0xfffffffffffffffc])) [2 MEM[base: wspecial_198, offset: -4B]+0 S4 A32])) printf_size.c:191 -1
     (nil))
(insn 456 455 457 79 (set (reg/f:DI 230 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:191 -1
     (nil))
(insn 457 456 458 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 230 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:191 -1
     (nil))
(jump_insn 458 457 459 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 463)
(note 459 458 460 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 80 (set (reg/f:DI 232 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 230 [ D.12006 ])
                (const_int 32 [0x20])) [4 _200->_IO_write_ptr+0 S8 A64])) printf_size.c:191 -1
     (nil))
(insn 461 460 462 80 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 232 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 230 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _200->_IO_write_end+0 S8 A64]))) printf_size.c:191 -1
     (nil))
(jump_insn 462 461 463 80 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 474)
(code_label 463 462 464 81 42 "" [1 uses])
(note 464 463 465 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 81 (set (reg:SI 4 si)
        (reg/v:SI 229 [ outc ])) printf_size.c:191 -1
     (nil))
(insn 466 465 467 81 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:191 -1
     (nil))
(call_insn 467 466 468 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 468 467 469 81 (set (reg:SI 237 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:191 -1
     (nil))
(insn 469 468 470 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 237 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:191 -1
     (nil))
(insn 470 469 471 81 (set (reg:QI 354)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:191 -1
     (nil))
(insn 471 470 472 81 (set (reg:QI 160 [ D.11991 ])
        (reg:QI 354)) printf_size.c:191 -1
     (nil))
(jump_insn 472 471 473 81 (set (pc)
        (label_ref 482)) printf_size.c:191 -1
     (nil)
 -> 482)
(barrier 473 472 474)
(code_label 474 473 475 82 43 "" [1 uses])
(note 475 474 476 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 82 (parallel [
            (set (reg:DI 355)
                (plus:DI (reg/f:DI 232 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 477 476 478 82 (set (mem/f:DI (plus:DI (reg/f:DI 230 [ D.12006 ])
                (const_int 32 [0x20])) [4 _200->_IO_write_ptr+0 S8 A64])
        (reg:DI 355)) printf_size.c:191 -1
     (nil))
(insn 478 477 479 82 (set (mem:SI (reg/f:DI 232 [ D.12007 ]) [2 *_204+0 S4 A32])
        (reg/v:SI 229 [ outc ])) printf_size.c:191 -1
     (nil))
(insn 479 478 480 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 229 [ outc ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:191 -1
     (nil))
(insn 480 479 481 82 (set (reg:QI 356)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:191 -1
     (nil))
(insn 481 480 482 82 (set (reg:QI 160 [ D.11991 ])
        (reg:QI 356)) printf_size.c:191 -1
     (nil))
(code_label 482 481 483 83 44 "" [1 uses])
(note 483 482 484 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:191 -1
     (nil))
(jump_insn 485 484 486 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 818 (nil))
 -> 317)
(note 486 485 487 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 489 84 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 489 487 490 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 152 [ done ])
            (reg/v:SI 149 [ done ]))) printf_size.c:191 -1
     (nil))
(jump_insn 490 489 493 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 7500 (nil))
 -> 488)
(note 493 490 491 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(jump_insn 491 493 492 85 (set (pc)
        (label_ref 857)) -1
     (nil)
 -> 857)
(barrier 492 491 853)
(code_label 853 492 494 86 74 "" [1 uses])
(note 494 853 495 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 86 (parallel [
            (set (reg:SI 240 [ D.11993 ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 496 495 523 86 (set (reg/v:SI 152 [ done ])
        (reg:SI 240 [ D.11993 ])) -1
     (nil))
(code_label 523 496 497 87 49 "" [1 uses])
(note 497 523 498 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 87 (parallel [
            (set (reg/v/f:DI 157 [ special ])
                (plus:DI (reg/v/f:DI 157 [ special ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 499 498 500 87 (set (reg:QI 243 [ D.12003 ])
        (mem:QI (plus:DI (reg/v/f:DI 157 [ special ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: special_235, offset: -1B]+0 S1 A8])) printf_size.c:191 -1
     (nil))
(insn 500 499 501 87 (set (reg/f:DI 247 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:191 -1
     (nil))
(insn 501 500 502 87 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 247 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:191 -1
     (nil))
(jump_insn 502 501 503 87 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 515)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 515)
(note 503 502 504 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 88 (set (reg:SI 357 [ outc ])
        (sign_extend:SI (reg:QI 243 [ D.12003 ]))) printf_size.c:191 -1
     (nil))
(insn 505 504 506 88 (set (reg:SI 358 [ D.11995 ])
        (zero_extend:SI (subreg:QI (reg:SI 357 [ outc ]) 0))) printf_size.c:191 -1
     (nil))
(insn 506 505 507 88 (set (reg:SI 4 si)
        (reg:SI 358 [ D.11995 ])) printf_size.c:191 -1
     (nil))
(insn 507 506 508 88 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:191 -1
     (nil))
(call_insn 508 507 509 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 509 508 510 88 (set (reg:SI 252 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:191 -1
     (nil))
(insn 510 509 511 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 252 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:191 -1
     (nil))
(jump_insn 511 510 514 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 818 (nil))
 -> 317)
(note 514 511 512 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(jump_insn 512 514 513 89 (set (pc)
        (label_ref 520)) -1
     (nil)
 -> 520)
(barrier 513 512 515)
(code_label 515 513 516 90 47 "" [1 uses])
(note 516 515 517 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 517 516 518 90 (parallel [
            (set (reg:DI 359)
                (plus:DI (reg/f:DI 247 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 518 517 519 90 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 359)) printf_size.c:191 -1
     (nil))
(insn 519 518 520 90 (set (mem:QI (reg/f:DI 247 [ D.12009 ]) [0 *_255+0 S1 A8])
        (reg:QI 243 [ D.12003 ])) printf_size.c:191 -1
     (nil))
(code_label 520 519 521 91 48 "" [1 uses])
(note 521 520 522 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 524 91 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:191 -1
     (nil))
(insn 524 522 525 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 152 [ done ])
            (reg/v:SI 149 [ done ]))) printf_size.c:191 -1
     (nil))
(jump_insn 525 524 528 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 7500 (nil))
 -> 523)
(note 528 525 526 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(jump_insn 526 528 527 92 (set (pc)
        (label_ref 871)) -1
     (nil)
 -> 871)
(barrier 527 526 859)
(code_label 859 527 529 93 75 "" [1 uses])
(note 529 859 530 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 93 (set (reg:DI 246 [ D.12005 ])
        (sign_extend:DI (reg/v:SI 234 [ done ]))) printf_size.c:194 -1
     (nil))
(insn 531 530 532 93 (set (reg:DI 1 dx)
        (reg:DI 246 [ D.12005 ])) printf_size.c:194 -1
     (nil))
(insn 532 531 533 93 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:194 -1
     (nil))
(insn 533 532 534 93 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:194 -1
     (nil))
(call_insn 534 533 535 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>) [0 _IO_wpadn S1 A8])
            (const_int 0 [0]))) printf_size.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 535 534 536 93 (set (reg:DI 161 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:194 -1
     (nil))
(jump_insn 536 535 537 93 (set (pc)
        (label_ref 545)) -1
     (nil)
 -> 545)
(barrier 537 536 873)
(code_label 873 537 538 94 77 "" [1 uses])
(note 538 873 539 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 539 538 540 94 (set (reg:DI 246 [ D.12005 ])
        (sign_extend:DI (reg/v:SI 234 [ done ]))) printf_size.c:194 -1
     (nil))
(insn 540 539 541 94 (set (reg:DI 1 dx)
        (reg:DI 246 [ D.12005 ])) printf_size.c:194 -1
     (nil))
(insn 541 540 542 94 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:194 -1
     (nil))
(insn 542 541 543 94 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:194 -1
     (nil))
(call_insn 543 542 544 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>) [0 _IO_padn S1 A8])
            (const_int 0 [0]))) printf_size.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 544 543 545 94 (set (reg:DI 161 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:194 -1
     (nil))
(code_label 545 544 546 95 51 "" [1 uses])
(note 546 545 547 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 161 [ D.11994 ])
            (reg:DI 246 [ D.12005 ]))) printf_size.c:194 -1
     (nil))
(jump_insn 548 547 549 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:194 -1
     (int_list:REG_BR_PROB 968 (nil))
 -> 317)
(note 549 548 550 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 88 96 (parallel [
            (set (reg/v:SI 256 [ done ])
                (plus:SI (reg/v:SI 152 [ done ])
                    (reg/v:SI 234 [ done ])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:194 -1
     (nil))
(insn 88 550 551 96 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 256 [ done ])) printf_size.c:194 -1
     (nil))
(jump_insn 551 88 552 96 (set (pc)
        (label_ref 767)) printf_size.c:194 -1
     (nil)
 -> 767)
(barrier 552 551 799)
(code_label 799 552 553 97 68 "" [1 uses])
(note 553 799 84 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 84 553 919 97 (set (reg:SI 162 [ D.11996 ])
        (const_int 3 [0x3])) printf_size.c:203 -1
     (nil))
(jump_insn 919 84 920 97 (set (pc)
        (label_ref 796)) -1
     (nil)
 -> 796)
(barrier 920 919 922)
(code_label 922 920 921 98 85 "" [1 uses])
(note 921 922 83 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 83 921 796 98 (set (reg:SI 162 [ D.11996 ])
        (reg:SI 257 [ D.11995 ])) -1
     (nil))
(code_label 796 83 554 99 67 "" [1 uses])
(note 554 796 555 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 555 554 557 99 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 fp_info.prec+0 S4 A128])
        (reg:SI 162 [ D.11996 ])) printf_size.c:203 -1
     (nil))
(insn 557 555 558 99 (parallel [
            (set (reg:QI 361)
                (and:QI (reg:QI 177 [ D.12001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:204 -1
     (nil))
(insn 558 557 559 99 (parallel [
            (set (reg:QI 362)
                (ashift:QI (reg:QI 361)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:204 -1
     (nil))
(insn 559 558 560 99 (set (reg:QI 363)
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -19 [0xffffffffffffffed])) [0 +0 S1 A8])) printf_size.c:204 -1
     (nil))
(insn 560 559 561 99 (parallel [
            (set (reg:QI 364)
                (and:QI (reg:QI 363)
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:204 -1
     (nil))
(insn 561 560 562 99 (parallel [
            (set (reg:QI 365)
                (ior:QI (reg:QI 364)
                    (reg:QI 362)))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:204 -1
     (nil))
(insn 562 561 563 99 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -19 [0xffffffffffffffed])) [0 +0 S1 A8])
        (reg:QI 365)) printf_size.c:204 -1
     (nil))
(insn 563 562 564 99 (set (reg:QI 367)
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 fp_info+12 S1 A32])) printf_size.c:206 -1
     (nil))
(insn 564 563 565 99 (parallel [
            (set (reg:QI 366 [ D.11997 ])
                (and:QI (reg:QI 367)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:206 -1
     (expr_list:REG_EQUAL (and:QI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 fp_info+12 S1 A32])
            (const_int 32 [0x20]))
        (nil)))
(insn 565 564 566 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 366 [ D.11997 ])
            (const_int 0 [0]))) printf_size.c:206 -1
     (nil))
(jump_insn 566 565 567 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) printf_size.c:206 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 685)
(note 567 566 568 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 fp_info.pad+0 S4 A128])
            (const_int 32 [0x20]))) printf_size.c:206 -1
     (nil))
(jump_insn 569 568 570 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) printf_size.c:206 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 685)
(note 570 569 571 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 101 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 fp_info.width+0 S4 A32])
        (const_int 0 [0])) printf_size.c:210 -1
     (nil))
(insn 572 571 573 101 (parallel [
            (set (reg:DI 368)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:212 -1
     (nil))
(insn 573 572 574 101 (parallel [
            (set (reg:DI 369)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:212 -1
     (nil))
(insn 574 573 575 101 (set (reg:DI 1 dx)
        (reg:DI 368)) printf_size.c:212 -1
     (nil))
(insn 575 574 576 101 (set (reg:DI 4 si)
        (reg:DI 369)) printf_size.c:212 -1
     (nil))
(insn 576 575 577 101 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:212 -1
     (nil))
(call_insn 577 576 578 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_fp") [flags 0x41]  <function_decl 0x2b5ea0547798 __printf_fp>) [0 __printf_fp S1 A8])
            (const_int 0 [0]))) printf_size.c:212 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_fp") [flags 0x41]  <function_decl 0x2b5ea0547798 __printf_fp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 578 577 579 101 (set (reg/v:SI 261 [ done ])
        (reg:SI 0 ax)) printf_size.c:212 -1
     (nil))
(insn 579 578 580 101 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 261 [ done ])
            (const_int 0 [0]))) printf_size.c:213 -1
     (nil))
(jump_insn 580 579 581 101 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 910)
            (pc))) printf_size.c:213 612 {*jcc_1}
     (int_list:REG_BR_PROB 1912 (nil))
 -> 910)
(note 581 580 582 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 582 581 583 102 (set (reg:QI 262 [ D.12003 ])
        (mem:QI (reg/v/f:DI 176 [ tag ]) [0 *tag_119+0 S1 A8])) printf_size.c:215 -1
     (nil))
(insn 583 582 584 102 (set (reg/v:SI 263 [ outc ])
        (sign_extend:SI (reg:QI 262 [ D.12003 ]))) printf_size.c:215 -1
     (nil))
(insn 584 583 585 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(jump_insn 585 584 586 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 616)
            (pc))) printf_size.c:215 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 616)
(note 586 585 587 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 103 (set (reg/f:DI 264 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:215 -1
     (nil))
(insn 588 587 589 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 264 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(jump_insn 589 588 590 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 594)
            (pc))) printf_size.c:215 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 594)
(note 590 589 591 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 591 590 592 104 (set (reg/f:DI 266 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 264 [ D.12006 ])
                (const_int 32 [0x20])) [4 _294->_IO_write_ptr+0 S8 A64])) printf_size.c:215 -1
     (nil))
(insn 592 591 593 104 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 266 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 264 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _294->_IO_write_end+0 S8 A64]))) printf_size.c:215 -1
     (nil))
(jump_insn 593 592 594 104 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 606)
            (pc))) printf_size.c:215 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 606)
(code_label 594 593 595 105 54 "" [1 uses])
(note 595 594 596 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 596 595 597 105 (set (reg:SI 370 [ D.12008 ])
        (sign_extend:SI (reg:QI 262 [ D.12003 ]))) printf_size.c:215 -1
     (nil))
(insn 597 596 598 105 (set (reg:SI 4 si)
        (reg:SI 370 [ D.12008 ])) printf_size.c:215 -1
     (nil))
(insn 598 597 599 105 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:215 -1
     (nil))
(call_insn 599 598 600 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 600 599 601 105 (set (reg:SI 271 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:215 -1
     (nil))
(insn 601 600 602 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 271 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:215 -1
     (nil))
(insn 602 601 603 105 (set (reg:QI 371)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(insn 603 602 604 105 (set (reg:QI 163 [ D.11991 ])
        (reg:QI 371)) printf_size.c:215 -1
     (nil))
(jump_insn 604 603 605 105 (set (pc)
        (label_ref 644)) printf_size.c:215 -1
     (nil)
 -> 644)
(barrier 605 604 606)
(code_label 606 605 607 106 55 "" [1 uses])
(note 607 606 608 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 106 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg/f:DI 266 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:215 -1
     (nil))
(insn 609 608 610 106 (set (mem/f:DI (plus:DI (reg/f:DI 264 [ D.12006 ])
                (const_int 32 [0x20])) [4 _294->_IO_write_ptr+0 S8 A64])
        (reg:DI 372)) printf_size.c:215 -1
     (nil))
(insn 610 609 611 106 (set (mem:SI (reg/f:DI 266 [ D.12007 ]) [2 *_298+0 S4 A32])
        (reg/v:SI 263 [ outc ])) printf_size.c:215 -1
     (nil))
(insn 611 610 612 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 263 [ outc ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:215 -1
     (nil))
(insn 612 611 613 106 (set (reg:QI 373)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(insn 613 612 614 106 (set (reg:QI 163 [ D.11991 ])
        (reg:QI 373)) printf_size.c:215 -1
     (nil))
(jump_insn 614 613 615 106 (set (pc)
        (label_ref 644)) printf_size.c:215 -1
     (nil)
 -> 644)
(barrier 615 614 616)
(code_label 616 615 617 107 53 "" [1 uses])
(note 617 616 618 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 618 617 619 107 (set (reg/f:DI 272 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:215 -1
     (nil))
(insn 619 618 620 107 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 272 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:215 -1
     (nil))
(jump_insn 620 619 621 107 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 632)
            (pc))) printf_size.c:215 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 632)
(note 621 620 622 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 622 621 623 108 (set (reg:SI 374 [ D.11995 ])
        (zero_extend:SI (subreg:QI (reg/v:SI 263 [ outc ]) 0))) printf_size.c:215 -1
     (nil))
(insn 623 622 624 108 (set (reg:SI 4 si)
        (reg:SI 374 [ D.11995 ])) printf_size.c:215 -1
     (nil))
(insn 624 623 625 108 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:215 -1
     (nil))
(call_insn 625 624 626 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 626 625 627 108 (set (reg:SI 276 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:215 -1
     (nil))
(insn 627 626 628 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 276 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:215 -1
     (nil))
(insn 628 627 629 108 (set (reg:QI 375)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(insn 629 628 630 108 (set (reg:QI 163 [ D.11991 ])
        (reg:QI 375)) printf_size.c:215 -1
     (nil))
(jump_insn 630 629 631 108 (set (pc)
        (label_ref 644)) -1
     (nil)
 -> 644)
(barrier 631 630 632)
(code_label 632 631 633 109 57 "" [1 uses])
(note 633 632 634 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 109 (parallel [
            (set (reg:DI 376)
                (plus:DI (reg/f:DI 272 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:215 -1
     (nil))
(insn 635 634 636 109 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 376)) printf_size.c:215 -1
     (nil))
(insn 636 635 637 109 (set (mem:QI (reg/f:DI 272 [ D.12009 ]) [0 *_311+0 S1 A8])
        (reg:QI 262 [ D.12003 ])) printf_size.c:215 -1
     (nil))
(insn 637 636 638 109 (parallel [
            (set (reg/v:SI 238 [ done ])
                (plus:SI (reg/v:SI 261 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:215 -1
     (nil))
(insn 638 637 639 109 (set (reg:SI 207 [ D.11995 ])
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])) printf_size.c:216 -1
     (nil))
(insn 639 638 640 109 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 207 [ D.11995 ])
            (reg/v:SI 238 [ done ]))) printf_size.c:216 -1
     (nil))
(jump_insn 640 639 643 109 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 666)
            (pc))) printf_size.c:216 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 666)
(note 643 640 92 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 92 643 641 110 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 238 [ done ])) printf_size.c:216 -1
     (nil))
(jump_insn 641 92 642 110 (set (pc)
        (label_ref 767)) printf_size.c:216 -1
     (nil)
 -> 767)
(barrier 642 641 644)
(code_label 644 642 645 111 56 "" [3 uses])
(note 645 644 646 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 647 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 163 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:215 -1
     (nil))
(jump_insn 647 646 648 111 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:215 -1
     (int_list:REG_BR_PROB 736 (nil))
 -> 317)
(note 648 647 649 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 112 (parallel [
            (set (reg/v:SI 238 [ done ])
                (plus:SI (reg/v:SI 261 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:215 -1
     (nil))
(insn 650 649 651 112 (set (reg:SI 207 [ D.11995 ])
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])) printf_size.c:216 -1
     (nil))
(insn 651 650 652 112 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 238 [ done ])
            (reg:SI 207 [ D.11995 ]))) printf_size.c:216 -1
     (nil))
(jump_insn 652 651 653 112 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 914)
            (pc))) printf_size.c:216 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 914)
(note 653 652 654 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 654 653 655 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:217 -1
     (nil))
(jump_insn 655 654 656 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 666)
            (pc))) printf_size.c:217 -1
     (int_list:REG_BR_PROB 486 (nil))
 -> 666)
(note 656 655 657 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 114 (parallel [
            (set (reg:SI 377 [ D.11995 ])
                (minus:SI (reg:SI 207 [ D.11995 ])
                    (reg/v:SI 238 [ done ])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:217 -1
     (nil))
(insn 658 657 659 114 (set (reg:DI 378 [ D.12005 ])
        (sign_extend:DI (reg:SI 377 [ D.11995 ]))) printf_size.c:217 -1
     (nil))
(insn 659 658 660 114 (set (reg:DI 1 dx)
        (reg:DI 378 [ D.12005 ])) printf_size.c:217 -1
     (nil))
(insn 660 659 661 114 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:217 -1
     (nil))
(insn 661 660 662 114 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:217 -1
     (nil))
(call_insn 662 661 663 114 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>) [0 _IO_wpadn S1 A8])
            (const_int 0 [0]))) printf_size.c:217 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_wpadn") [flags 0x41]  <function_decl 0x2b5ea05c8af8 _IO_wpadn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 663 662 664 114 (set (reg:DI 164 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:217 -1
     (nil))
(jump_insn 664 663 665 114 (set (pc)
        (label_ref 675)) -1
     (nil)
 -> 675)
(barrier 665 664 666)
(code_label 666 665 667 115 58 "" [2 uses])
(note 667 666 668 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 115 (parallel [
            (set (reg:SI 379 [ D.11995 ])
                (minus:SI (reg:SI 207 [ D.11995 ])
                    (reg/v:SI 238 [ done ])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:217 -1
     (nil))
(insn 669 668 670 115 (set (reg:DI 380 [ D.12005 ])
        (sign_extend:DI (reg:SI 379 [ D.11995 ]))) printf_size.c:217 -1
     (nil))
(insn 670 669 671 115 (set (reg:DI 1 dx)
        (reg:DI 380 [ D.12005 ])) printf_size.c:217 -1
     (nil))
(insn 671 670 672 115 (set (reg:SI 4 si)
        (const_int 32 [0x20])) printf_size.c:217 -1
     (nil))
(insn 672 671 673 115 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:217 -1
     (nil))
(call_insn 673 672 674 115 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>) [0 _IO_padn S1 A8])
            (const_int 0 [0]))) printf_size.c:217 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_padn") [flags 0x41]  <function_decl 0x2b5ea05c8288 _IO_padn>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 674 673 675 115 (set (reg:DI 164 [ D.11994 ])
        (reg:DI 0 ax)) printf_size.c:217 -1
     (nil))
(code_label 675 674 676 116 59 "" [1 uses])
(note 676 675 677 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 677 676 678 116 (set (reg:SI 155 [ D.11995 ])
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])) printf_size.c:217 -1
     (nil))
(insn 678 677 679 116 (parallel [
            (set (reg:SI 381 [ D.11995 ])
                (minus:SI (reg:SI 155 [ D.11995 ])
                    (reg/v:SI 238 [ done ])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:217 -1
     (nil))
(insn 679 678 680 116 (set (reg:DI 382 [ D.12005 ])
        (sign_extend:DI (reg:SI 381 [ D.11995 ]))) printf_size.c:217 -1
     (nil))
(insn 680 679 681 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 164 [ D.11994 ])
            (reg:DI 382 [ D.12005 ]))) printf_size.c:217 -1
     (nil))
(jump_insn 681 680 684 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:217 -1
     (int_list:REG_BR_PROB 968 (nil))
 -> 317)
(note 684 681 682 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(jump_insn 682 684 683 117 (set (pc)
        (label_ref 767)) -1
     (nil)
 -> 767)
(barrier 683 682 685)
(code_label 685 683 686 118 52 "" [2 uses])
(note 686 685 690 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 690 686 691 118 (set (reg:SI 386)
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])) printf_size.c:224 -1
     (nil))
(insn 691 690 692 118 (parallel [
            (set (reg:SI 385 [ D.11995 ])
                (plus:SI (reg:SI 386)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:224 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 692 691 693 118 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [2 fp_info.width+0 S4 A32])
        (reg:SI 385 [ D.11995 ])) printf_size.c:224 -1
     (nil))
(insn 693 692 694 118 (parallel [
            (set (reg:DI 387)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:226 -1
     (nil))
(insn 694 693 695 118 (parallel [
            (set (reg:DI 388)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:226 -1
     (nil))
(insn 695 694 696 118 (set (reg:DI 1 dx)
        (reg:DI 387)) printf_size.c:226 -1
     (nil))
(insn 696 695 697 118 (set (reg:DI 4 si)
        (reg:DI 388)) printf_size.c:226 -1
     (nil))
(insn 697 696 698 118 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:226 -1
     (nil))
(call_insn 698 697 699 118 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_fp") [flags 0x41]  <function_decl 0x2b5ea0547798 __printf_fp>) [0 __printf_fp S1 A8])
            (const_int 0 [0]))) printf_size.c:226 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_fp") [flags 0x41]  <function_decl 0x2b5ea0547798 __printf_fp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 699 698 700 118 (set (reg/v:SI 287 [ done ])
        (reg:SI 0 ax)) printf_size.c:226 -1
     (nil))
(insn 700 699 701 118 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 287 [ done ])
            (const_int 0 [0]))) printf_size.c:227 -1
     (nil))
(jump_insn 701 700 702 118 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 918)
            (pc))) printf_size.c:227 612 {*jcc_1}
     (int_list:REG_BR_PROB 1912 (nil))
 -> 918)
(note 702 701 703 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 119 (set (reg:QI 288 [ D.12003 ])
        (mem:QI (reg/v/f:DI 176 [ tag ]) [0 *tag_119+0 S1 A8])) printf_size.c:228 -1
     (nil))
(insn 704 703 705 119 (set (reg/v:SI 289 [ outc ])
        (sign_extend:SI (reg:QI 288 [ D.12003 ]))) printf_size.c:228 -1
     (nil))
(insn 705 704 706 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(jump_insn 706 705 707 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 737)
            (pc))) printf_size.c:228 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 737)
(note 707 706 708 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 708 707 709 120 (set (reg/f:DI 290 [ D.12006 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 160 [0xa0])) [4 fp_106(D)->_wide_data+0 S8 A64])) printf_size.c:228 -1
     (nil))
(insn 709 708 710 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 290 [ D.12006 ])
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(jump_insn 710 709 711 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 715)
            (pc))) printf_size.c:228 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 715)
(note 711 710 712 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 713 121 (set (reg/f:DI 292 [ D.12007 ])
        (mem/f:DI (plus:DI (reg/f:DI 290 [ D.12006 ])
                (const_int 32 [0x20])) [4 _346->_IO_write_ptr+0 S8 A64])) printf_size.c:228 -1
     (nil))
(insn 713 712 714 121 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 292 [ D.12007 ])
            (mem/f:DI (plus:DI (reg/f:DI 290 [ D.12006 ])
                    (const_int 40 [0x28])) [4 _346->_IO_write_end+0 S8 A64]))) printf_size.c:228 -1
     (nil))
(jump_insn 714 713 715 121 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 727)
            (pc))) printf_size.c:228 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 727)
(code_label 715 714 716 122 61 "" [1 uses])
(note 716 715 717 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 717 716 718 122 (set (reg:SI 389 [ D.12008 ])
        (sign_extend:SI (reg:QI 288 [ D.12003 ]))) printf_size.c:228 -1
     (nil))
(insn 718 717 719 122 (set (reg:SI 4 si)
        (reg:SI 389 [ D.12008 ])) printf_size.c:228 -1
     (nil))
(insn 719 718 720 122 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:228 -1
     (nil))
(call_insn 720 719 721 122 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) printf_size.c:228 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__woverflow") [flags 0x41]  <function_decl 0x2b5ea05a8798 __woverflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 721 720 722 122 (set (reg:SI 297 [ D.12008 ])
        (reg:SI 0 ax)) printf_size.c:228 -1
     (nil))
(insn 722 721 723 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 297 [ D.12008 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:228 -1
     (nil))
(insn 723 722 724 122 (set (reg:QI 390)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(insn 724 723 725 122 (set (reg:QI 165 [ D.11991 ])
        (reg:QI 390)) printf_size.c:228 -1
     (nil))
(jump_insn 725 724 726 122 (set (pc)
        (label_ref 760)) printf_size.c:228 -1
     (nil)
 -> 760)
(barrier 726 725 727)
(code_label 727 726 728 123 62 "" [1 uses])
(note 728 727 729 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 123 (parallel [
            (set (reg:DI 391)
                (plus:DI (reg/f:DI 292 [ D.12007 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:228 -1
     (nil))
(insn 730 729 731 123 (set (mem/f:DI (plus:DI (reg/f:DI 290 [ D.12006 ])
                (const_int 32 [0x20])) [4 _346->_IO_write_ptr+0 S8 A64])
        (reg:DI 391)) printf_size.c:228 -1
     (nil))
(insn 731 730 732 123 (set (mem:SI (reg/f:DI 292 [ D.12007 ]) [2 *_350+0 S4 A32])
        (reg/v:SI 289 [ outc ])) printf_size.c:228 -1
     (nil))
(insn 732 731 733 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 289 [ outc ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:228 -1
     (nil))
(insn 733 732 734 123 (set (reg:QI 392)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(insn 734 733 735 123 (set (reg:QI 165 [ D.11991 ])
        (reg:QI 392)) printf_size.c:228 -1
     (nil))
(jump_insn 735 734 736 123 (set (pc)
        (label_ref 760)) printf_size.c:228 -1
     (nil)
 -> 760)
(barrier 736 735 737)
(code_label 737 736 738 124 60 "" [1 uses])
(note 738 737 739 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 124 (set (reg/f:DI 298 [ D.12009 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])) printf_size.c:228 -1
     (nil))
(insn 740 739 741 124 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 298 [ D.12009 ])
            (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                    (const_int 48 [0x30])) [4 fp_106(D)->_IO_write_end+0 S8 A64]))) printf_size.c:228 -1
     (nil))
(jump_insn 741 740 742 124 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 753)
            (pc))) printf_size.c:228 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 753)
(note 742 741 743 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 125 (set (reg:SI 393 [ D.11995 ])
        (zero_extend:SI (subreg:QI (reg/v:SI 289 [ outc ]) 0))) printf_size.c:228 -1
     (nil))
(insn 744 743 745 125 (set (reg:SI 4 si)
        (reg:SI 393 [ D.11995 ])) printf_size.c:228 -1
     (nil))
(insn 745 744 746 125 (set (reg:DI 5 di)
        (reg/v/f:DI 308 [ fp ])) printf_size.c:228 -1
     (nil))
(call_insn 746 745 747 125 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>) [0 __overflow S1 A8])
            (const_int 0 [0]))) printf_size.c:228 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__overflow") [flags 0x41]  <function_decl 0x2b5ea05a8510 __overflow>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 747 746 748 125 (set (reg:SI 301 [ D.11995 ])
        (reg:SI 0 ax)) printf_size.c:228 -1
     (nil))
(insn 748 747 749 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 301 [ D.11995 ])
            (const_int -1 [0xffffffffffffffff]))) printf_size.c:228 -1
     (nil))
(insn 749 748 750 125 (set (reg:QI 394)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(insn 750 749 751 125 (set (reg:QI 165 [ D.11991 ])
        (reg:QI 394)) printf_size.c:228 -1
     (nil))
(jump_insn 751 750 752 125 (set (pc)
        (label_ref 760)) -1
     (nil)
 -> 760)
(barrier 752 751 753)
(code_label 753 752 754 126 64 "" [1 uses])
(note 754 753 755 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 755 754 756 126 (parallel [
            (set (reg:DI 395)
                (plus:DI (reg/f:DI 298 [ D.12009 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:228 -1
     (nil))
(insn 756 755 757 126 (set (mem/f:DI (plus:DI (reg/v/f:DI 308 [ fp ])
                (const_int 40 [0x28])) [4 fp_106(D)->_IO_write_ptr+0 S8 A64])
        (reg:DI 395)) printf_size.c:228 -1
     (nil))
(insn 757 756 758 126 (set (mem:QI (reg/f:DI 298 [ D.12009 ]) [0 *_363+0 S1 A8])
        (reg:QI 288 [ D.12003 ])) printf_size.c:228 -1
     (nil))
(jump_insn 758 757 759 126 (set (pc)
        (label_ref 764)) printf_size.c:228 -1
     (nil)
 -> 764)
(barrier 759 758 760)
(code_label 760 759 761 127 63 "" [3 uses])
(note 761 760 762 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 762 761 763 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:228 -1
     (nil))
(jump_insn 763 762 764 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) printf_size.c:228 -1
     (int_list:REG_BR_PROB 729 (nil))
 -> 317)
(code_label 764 763 765 128 65 "" [1 uses])
(note 765 764 766 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 90 128 (parallel [
            (set (reg/v:SI 305 [ done ])
                (plus:SI (reg/v:SI 287 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:228 -1
     (nil))
(insn 90 766 907 128 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 305 [ done ])) printf_size.c:228 -1
     (nil))
(jump_insn 907 90 908 128 (set (pc)
        (label_ref 767)) -1
     (nil)
 -> 767)
(barrier 908 907 910)
(code_label 910 908 909 129 82 "" [1 uses])
(note 909 910 91 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 91 909 911 129 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 261 [ done ])) -1
     (nil))
(jump_insn 911 91 912 129 (set (pc)
        (label_ref 767)) -1
     (nil)
 -> 767)
(barrier 912 911 914)
(code_label 914 912 913 130 83 "" [1 uses])
(note 913 914 93 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 93 913 915 130 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 238 [ done ])) -1
     (nil))
(jump_insn 915 93 916 130 (set (pc)
        (label_ref 767)) -1
     (nil)
 -> 767)
(barrier 916 915 918)
(code_label 918 916 917 131 84 "" [1 uses])
(note 917 918 89 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 89 917 767 131 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 287 [ done ])) -1
     (nil))
(code_label 767 89 768 132 19 "" [9 uses])
(note 768 767 769 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 769 768 770 132 (set (reg:SI 307 [ <retval> ])
        (reg:SI 155 [ D.11995 ])) -1
     (nil))
(jump_insn 770 769 771 132 (set (pc)
        (label_ref 892)) -1
     (nil)
 -> 892)
(barrier 771 770 772)
(code_label 772 771 773 133 5 "" [1 uses])
(note 773 772 774 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 775 133 (set (reg:HI 398)
        (unspec:HI [
                (reg:XF 150 [ D.11992 ])
            ] UNSPEC_FXAM)) printf_size.c:136 -1
     (nil))
(insn 775 774 776 133 (parallel [
            (set (reg:SI 397)
                (and:SI (subreg:SI (reg:HI 398) 0)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:136 -1
     (nil))
(insn 776 775 777 133 (set (reg/v:SI 210 [ is_neg ])
        (reg:SI 397)) printf_size.c:136 -1
     (nil))
(jump_insn 777 776 778 133 (set (pc)
        (label_ref 803)) -1
     (nil)
 -> 803)
(barrier 778 777 779)
(code_label 779 778 780 134 10 "" [1 uses])
(note 780 779 781 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 134 (set (reg:SI 399)
        (unspec:SI [
                (reg:DF 187 [ D.12004 ])
            ] UNSPEC_MOVMSK)) printf_size.c:161 -1
     (nil))
(insn 782 781 783 134 (parallel [
            (set (reg:SI 399)
                (and:SI (reg:SI 399)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:161 -1
     (nil))
(insn 783 782 784 134 (set (reg/v:SI 210 [ is_neg ])
        (reg:SI 399)) printf_size.c:161 -1
     (nil))
(jump_insn 784 783 785 134 (set (pc)
        (label_ref 803)) -1
     (nil)
 -> 803)
(barrier 785 784 786)
(code_label 786 785 787 135 6 "" [8 uses])
(note 787 786 788 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 135 (set (reg:DI 400)
        (mem:DI (reg/v/f:DI 309 [ info ]) [1 *info_61(D)+0 S8 A32])) printf_size.c:201 -1
     (nil))
(insn 789 788 790 135 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 fp_info+0 S8 A128])
        (reg:DI 400)) printf_size.c:201 -1
     (nil))
(insn 790 789 791 135 (set (reg:DI 401)
        (mem:DI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 8 [0x8])) [1 *info_61(D)+8 S8 A32])) printf_size.c:201 -1
     (nil))
(insn 791 790 792 135 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 fp_info+8 S8 A64])
        (reg:DI 401)) printf_size.c:201 -1
     (nil))
(insn 792 791 793 135 (set (reg:SI 402)
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 16 [0x10])) [1 *info_61(D)+16 S4 A32])) printf_size.c:201 -1
     (nil))
(insn 793 792 794 135 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 fp_info+16 S4 A128])
        (reg:SI 402)) printf_size.c:201 -1
     (nil))
(insn 794 793 795 135 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 fp_info.spec+0 S4 A64])
        (const_int 102 [0x66])) printf_size.c:202 -1
     (nil))
(insn 795 794 797 135 (set (reg:SI 257 [ D.11995 ])
        (mem:SI (reg/v/f:DI 309 [ info ]) [2 info_61(D)->prec+0 S4 A32])) printf_size.c:203 -1
     (nil))
(insn 797 795 798 135 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 257 [ D.11995 ])
            (const_int 0 [0]))) printf_size.c:203 -1
     (nil))
(jump_insn 798 797 802 135 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 922)
            (pc))) printf_size.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 922)
(note 802 798 800 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(jump_insn 800 802 801 136 (set (pc)
        (label_ref 799)) -1
     (nil)
 -> 799)
(barrier 801 800 803)
(code_label 803 801 804 137 66 "" [2 uses])
(note 804 803 805 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 137 (set (reg:SI 403)
        (mem:SI (reg/v/f:DI 309 [ info ]) [2 info_61(D)->prec+0 S4 A32])) printf_size.c:175 -1
     (nil))
(insn 806 805 807 137 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])
            (reg:SI 403))) printf_size.c:175 -1
     (nil))
(insn 807 806 809 137 (set (reg/v:SI 190 [ width ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])
            (reg:SI 403))) printf_size.c:175 -1
     (nil))
(insn 809 807 810 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 210 [ is_neg ])
            (const_int 0 [0]))) printf_size.c:177 -1
     (nil))
(jump_insn 810 809 814 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 926)
            (pc))) printf_size.c:177 612 {*jcc_1}
     (int_list:REG_BR_PROB 5667 (nil))
 -> 926)
(note 814 810 69 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 69 814 70 138 (set (reg/v/f:DI 226 [ wspecial ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b5ea07741b0 *.LC0>)) -1
     (nil))
(insn 70 69 812 138 (set (reg/v/f:DI 157 [ special ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b5ea0774240 *.LC1>)) -1
     (nil))
(jump_insn 812 70 813 138 (set (pc)
        (label_ref 811)) -1
     (nil)
 -> 811)
(barrier 813 812 815)
(code_label 815 813 816 139 25 "" [3 uses])
(note 816 815 817 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 139 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:185 -1
     (nil))
(jump_insn 818 817 819 139 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 819 818 820)
(code_label 820 819 821 140 33 "" [3 uses])
(note 821 820 822 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 822 821 823 140 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:187 -1
     (nil))
(jump_insn 823 822 824 140 (set (pc)
        (label_ref 848)) -1
     (nil)
 -> 848)
(barrier 824 823 825)
(code_label 825 824 826 141 40 "" [3 uses])
(note 826 825 827 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 827 826 828 141 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 149 [ done ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:189 -1
     (nil))
(jump_insn 828 827 829 141 (set (pc)
        (label_ref 848)) printf_size.c:189 -1
     (nil)
 -> 848)
(barrier 829 828 830)
(code_label 830 829 831 142 15 "" [1 uses])
(note 831 830 832 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 832 831 833 142 (parallel [
            (set (reg/v:SI 149 [ done ])
                (plus:SI (reg/v:SI 190 [ width ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:179 -1
     (nil))
(insn 833 832 834 142 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 149 [ done ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(insn 834 833 835 142 (set (reg:QI 404)
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(insn 835 834 837 142 (set (reg:QI 148 [ D.11991 ])
        (reg:QI 404)) printf_size.c:181 -1
     (nil))
(insn 837 835 838 142 (parallel [
            (set (reg:QI 405)
                (lshiftrt:QI (reg:QI 179 [ D.11997 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 838 837 839 142 (parallel [
            (set (reg:QI 406)
                (xor:QI (reg:QI 405)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 839 838 840 142 (parallel [
            (set (reg:QI 407 [ D.11991 ])
                (and:QI (reg:QI 406)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:181 -1
     (nil))
(insn 840 839 841 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 407 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(jump_insn 841 840 939 142 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 948)
            (pc))) printf_size.c:181 612 {*jcc_1}
     (int_list:REG_BR_PROB 1350 (nil))
 -> 948)
(note 939 841 842 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 842 939 843 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:181 -1
     (nil))
(jump_insn 843 842 940 143 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 931)
            (pc))) printf_size.c:181 612 {*jcc_1}
     (int_list:REG_BR_PROB 8439 (nil))
 -> 931)
(note 940 843 948 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(code_label 948 940 847 145 91 "" [1 uses])
(note 847 948 81 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 81 847 82 145 (set (reg/v:SI 234 [ done ])
        (reg/v:SI 149 [ done ])) printf_size.c:179 -1
     (nil))
(insn 82 81 845 145 (set (reg/v:SI 149 [ done ])
        (const_int 0 [0])) printf_size.c:118 -1
     (nil))
(jump_insn 845 82 846 145 (set (pc)
        (label_ref 323)) printf_size.c:181 -1
     (nil)
 -> 323)
(barrier 846 845 848)
(code_label 848 846 849 146 35 "" [4 uses])
(note 849 848 851 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 851 849 852 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 178 [ wide ])
            (const_int 0 [0]))) printf_size.c:191 -1
     (nil))
(jump_insn 852 851 856 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 850)
            (pc))) printf_size.c:191 -1
     (int_list:REG_BR_PROB 3752 (nil))
 -> 850)
(note 856 852 854 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(jump_insn 854 856 855 147 (set (pc)
        (label_ref 853)) printf_size.c:191 -1
     (nil)
 -> 853)
(barrier 855 854 857)
(code_label 857 855 858 148 46 "" [1 uses])
(note 858 857 860 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 860 858 861 148 (set (reg:QI 409)
        (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])) printf_size.c:193 -1
     (nil))
(insn 861 860 862 148 (parallel [
            (set (reg:QI 408)
                (lshiftrt:QI (reg:QI 409)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:193 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])
            (const_int 5 [0x5]))
        (nil)))
(insn 862 861 863 148 (parallel [
            (set (reg:QI 410 [ D.11991 ])
                (and:QI (reg:QI 408)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:193 -1
     (nil))
(insn 863 862 864 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 410 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:193 -1
     (nil))
(jump_insn 864 863 941 148 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 949)
            (pc))) printf_size.c:193 612 {*jcc_1}
     (int_list:REG_BR_PROB 2531 (nil))
 -> 949)
(note 941 864 865 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 865 941 866 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:193 -1
     (nil))
(jump_insn 866 865 942 149 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 859)
            (pc))) printf_size.c:193 -1
     (int_list:REG_BR_PROB 6611 (nil))
 -> 859)
(note 942 866 949 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(code_label 949 942 870 151 92 "" [1 uses])
(note 870 949 87 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 87 870 868 151 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 152 [ done ])) printf_size.c:193 -1
     (nil))
(jump_insn 868 87 869 151 (set (pc)
        (label_ref 767)) printf_size.c:193 -1
     (nil)
 -> 767)
(barrier 869 868 871)
(code_label 871 869 872 152 50 "" [1 uses])
(note 872 871 874 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 874 872 875 152 (set (reg:QI 412)
        (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])) printf_size.c:193 -1
     (nil))
(insn 875 874 876 152 (parallel [
            (set (reg:QI 411)
                (lshiftrt:QI (reg:QI 412)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:193 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem:QI (plus:DI (reg/v/f:DI 309 [ info ])
                    (const_int 12 [0xc])) [1 *info_61(D)+12 S1 A32])
            (const_int 5 [0x5]))
        (nil)))
(insn 876 875 877 152 (parallel [
            (set (reg:QI 413 [ D.11991 ])
                (and:QI (reg:QI 411)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:193 -1
     (nil))
(insn 877 876 878 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 413 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:193 -1
     (nil))
(jump_insn 878 877 943 152 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 950)
            (pc))) printf_size.c:193 612 {*jcc_1}
     (int_list:REG_BR_PROB 2533 (nil))
 -> 950)
(note 943 878 879 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 879 943 880 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11991 ])
            (const_int 0 [0]))) printf_size.c:193 -1
     (nil))
(jump_insn 880 879 944 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 873)
            (pc))) printf_size.c:193 -1
     (int_list:REG_BR_PROB 6608 (nil))
 -> 873)
(note 944 880 950 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(code_label 950 944 884 155 93 "" [1 uses])
(note 884 950 86 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 86 884 882 155 (set (reg:SI 155 [ D.11995 ])
        (reg/v:SI 152 [ done ])) printf_size.c:193 -1
     (nil))
(jump_insn 882 86 883 155 (set (pc)
        (label_ref 767)) printf_size.c:193 -1
     (nil)
 -> 767)
(barrier 883 882 885)
(code_label 885 883 886 156 4 "" [2 uses])
(note 886 885 887 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 888 156 (set (reg:SI 414)
        (mem:SI (plus:DI (reg/v/f:DI 309 [ info ])
                (const_int 4 [0x4])) [2 info_61(D)->width+0 S4 A32])) printf_size.c:175 -1
     (nil))
(insn 888 887 889 156 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 309 [ info ]) [2 info_61(D)->prec+0 S4 A32])
            (reg:SI 414))) printf_size.c:175 -1
     (nil))
(insn 889 888 71 156 (set (reg/v:SI 190 [ width ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (mem:SI (reg/v/f:DI 309 [ info ]) [2 info_61(D)->prec+0 S4 A32])
            (reg:SI 414))) printf_size.c:175 -1
     (nil))
(insn 71 889 72 156 (set (reg/v/f:DI 226 [ wspecial ])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b5ea07742d0 *.LC2>)) printf_size.c:175 -1
     (nil))
(insn 72 71 890 156 (set (reg/v/f:DI 157 [ special ])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b5ea0774360 *.LC3>)) printf_size.c:175 -1
     (nil))
(jump_insn 890 72 891 156 (set (pc)
        (label_ref 811)) printf_size.c:175 -1
     (nil)
 -> 811)
(barrier 891 890 892)
(code_label 892 891 895 157 1 "" [1 uses])
(note 895 892 893 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 893 895 894 157 (set (reg/i:SI 0 ax)
        (reg:SI 307 [ <retval> ])) printf_size.c:232 -1
     (nil))
(insn 894 893 0 157 (use (reg/i:SI 0 ax)) printf_size.c:232 -1
     (nil))

;; Function printf_size_info (printf_size_info, funcdef_no=49, decl_uid=8882, cgraph_uid=50, symbol_order=68)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6
Edge 3->5 redirected to 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 24.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 91 [ info ])
        (reg:DI 5 di [ info ])) printf_size.c:239 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 92 [ n ])
        (reg:DI 4 si [ n ])) printf_size.c:239 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 93 [ argtypes ])
        (reg:DI 1 dx [ argtypes ])) printf_size.c:239 -1
     (nil))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 92 [ n ])
            (const_int 0 [0]))) printf_size.c:241 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) printf_size.c:241 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 21)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:QI 95)
        (mem:QI (plus:DI (reg/v/f:DI 91 [ info ])
                (const_int 12 [0xc])) [1 *info_5(D)+12 S1 A32])) printf_size.c:242 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:QI 94 [ D.12018 ])
                (and:QI (reg:QI 95)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf_size.c:242 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 91 [ info ])
                    (const_int 12 [0xc])) [1 *info_5(D)+12 S1 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.12018 ])
            (const_int 0 [0]))) printf_size.c:242 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) printf_size.c:242 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 33)
(note 17 16 7 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 7 17 30 5 (set (reg:SI 87 [ D.12017 ])
        (const_int 7 [0x7])) printf_size.c:242 -1
     (nil))
(jump_insn 30 7 31 5 (set (pc)
        (label_ref 18)) -1
     (nil)
 -> 18)
(barrier 31 30 33)
(code_label 33 31 32 6 182 "" [1 uses])
(note 32 33 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 32 18 6 (set (reg:SI 87 [ D.12017 ])
        (const_int 263 [0x107])) printf_size.c:242 -1
     (nil))
(code_label 18 6 19 7 181 "" [1 uses])
(note 19 18 20 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 7 (set (mem:SI (reg/v/f:DI 93 [ argtypes ]) [2 *argtypes_8(D)+0 S4 A32])
        (reg:SI 87 [ D.12017 ])) printf_size.c:242 -1
     (nil))
(code_label 21 20 22 8 180 "" [1 uses])
(note 22 21 23 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 27 8 (set (reg:SI 90 [ <retval> ])
        (const_int 1 [0x1])) printf_size.c:244 -1
     (nil))
(insn 27 23 28 8 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) printf_size.c:245 -1
     (nil))
(insn 28 27 0 8 (use (reg/i:SI 0 ax)) printf_size.c:245 -1
     (nil))
