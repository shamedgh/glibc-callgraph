
;; Function __getutline_r (__getutline_r, funcdef_no=33, decl_uid=7486, cgraph_uid=33, symbol_order=37)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 24.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 95 [ line ])
        (reg:DI 5 di [ line ])) getutline_r.c:34 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ buffer ])
        (reg:DI 4 si [ buffer ])) getutline_r.c:34 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ result ])
        (reg:DI 1 dx [ result ])) getutline_r.c:34 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 101)
        (const_int 1 [0x1])) getutline_r.c:37 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 102)
        (const_int 0 [0])) getutline_r.c:37 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 98 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 101)
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                        (reg:SI 102)
                    ]
                     [
                        (asm_input:SI ("0") getutline_r.c:37)
                        (asm_input:SI ("m") getutline_r.c:37)
                        (asm_input:SI ("3") getutline_r.c:37)
                    ]
                     [] getutline_r.c:37))
            (set (reg:SI 99 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 101)
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                        (reg:SI 102)
                    ]
                     [
                        (asm_input:SI ("0") getutline_r.c:37)
                        (asm_input:SI ("m") getutline_r.c:37)
                        (asm_input:SI ("3") getutline_r.c:37)
                    ]
                     [] getutline_r.c:37))
            (set (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 101)
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                        (reg:SI 102)
                    ]
                     [
                        (asm_input:SI ("0") getutline_r.c:37)
                        (asm_input:SI ("m") getutline_r.c:37)
                        (asm_input:SI ("3") getutline_r.c:37)
                    ]
                     [] getutline_r.c:37))
            (set (reg:SI 100 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 101)
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                        (reg:SI 102)
                    ]
                     [
                        (asm_input:SI ("0") getutline_r.c:37)
                        (asm_input:SI ("m") getutline_r.c:37)
                        (asm_input:SI ("3") getutline_r.c:37)
                    ]
                     [] getutline_r.c:37))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) getutline_r.c:37 -1
     (nil))
(insn 11 10 12 2 (set (reg/v:SI 87 [ ignore1 ])
        (reg:SI 98 [ ignore1 ])) getutline_r.c:37 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:SI 88 [ ignore2 ])
        (reg:SI 99 [ ignore2 ])) getutline_r.c:37 -1
     (nil))
(insn 13 12 14 2 (set (reg/v:SI 89 [ ignore3 ])
        (reg:SI 100 [ ignore3 ])) getutline_r.c:37 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 103)
        (mem/f/c:DI (symbol_ref:DI ("__libc_utmp_jump_table") [flags 0x42]  <var_decl 0x2ac737f95360 __libc_utmp_jump_table>) [1 __libc_utmp_jump_table+0 S8 A64])) getutline_r.c:39 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 24 [0x18])) [1 _6->getutline_r+0 S8 A64])) getutline_r.c:39 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 97 [ result ])) getutline_r.c:39 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/v/f:DI 96 [ buffer ])) getutline_r.c:39 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ line ])) getutline_r.c:39 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 104) [0 *_7 S1 A8])
            (const_int 0 [0]))) getutline_r.c:39 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 21 2 (set (reg/v:SI 92 [ retval ])
        (reg:SI 0 ax)) getutline_r.c:39 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") getutline_r.c:41)
                    ]
                     [] getutline_r.c:41))
            (set (reg:SI 105 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("__libc_utmp_lock") [flags 0x42]  <var_decl 0x2ac737f95480 __libc_utmp_lock>) [3 __libc_utmp_lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") getutline_r.c:41)
                    ]
                     [] getutline_r.c:41))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) getutline_r.c:41 -1
     (nil))
(insn 22 21 23 2 (set (reg/v:SI 93 [ ignore ])
        (reg:SI 105 [ ignore ])) getutline_r.c:41 -1
     (nil))
(insn 23 22 27 2 (set (reg:SI 94 [ <retval> ])
        (reg/v:SI 92 [ retval ])) getutline_r.c:43 -1
     (nil))
(insn 27 23 28 2 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) getutline_r.c:44 -1
     (nil))
(insn 28 27 0 2 (use (reg/i:SI 0 ax)) getutline_r.c:44 -1
     (nil))
