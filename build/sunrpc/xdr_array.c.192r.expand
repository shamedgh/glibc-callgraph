
;; Function xdr_array (*__GI_xdr_array, funcdef_no=46, decl_uid=6188, cgraph_uid=46, symbol_order=49)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19
Edge 5->17 redirected to 25
Edge 7->17 redirected to 26
Edge 9->17 redirected to 27
Edge 15->17 redirected to 28
Edge 18->17 redirected to 29
Purged edges from bb 31
Purged non-fallthru edges from bb 33


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 6->7 to 30 failed.
Forwarding edge 10->11 to 12 failed.
Removing jump 55.
Edge 19->21 redirected to 22
Forwarding edge 20->21 to 22 failed.
Deleted label in block 21.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 30 failed.
Forwarding edge 10->11 to 12 failed.
Forwarding edge 20->21 to 22 failed.


;;
;; Full RTL generated for this function:
;;
(note 2 0 20 NOTE_INSN_DELETED)
(note 20 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 20 4 2 (set (reg/v/f:DI 105 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_array.c:67 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ addrp ])
        (reg:DI 4 si [ addrp ])) xdr_array.c:67 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 107 [ sizep ])
        (reg:DI 1 dx [ sizep ])) xdr_array.c:67 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 108 [ maxsize ])
        (reg:SI 2 cx [ maxsize ])) xdr_array.c:67 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 109 [ elsize ])
        (reg:SI 37 r8 [ elsize ])) xdr_array.c:67 -1
     (nil))
(insn 8 7 9 2 (set (reg/v/f:DI 110 [ elproc ])
        (reg:DI 38 r9 [ elproc ])) xdr_array.c:67 -1
     (nil))
(note 9 8 22 2 NOTE_INSN_FUNCTION_BEG)
(insn 22 9 23 2 (set (reg/v/f:DI 89 [ target ])
        (mem/f:DI (reg/v/f:DI 106 [ addrp ]) [1 *addrp_11(D)+0 S8 A64])) xdr_array.c:69 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg/v/f:DI 107 [ sizep ])) xdr_array.c:74 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ xdrs ])) xdr_array.c:74 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x43]  <function_decl 0x2b96ce58cd80 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) xdr_array.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x43]  <function_decl 0x2b96ce58cd80 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 2 (set (reg:SI 88 [ D.7145 ])
        (reg:SI 0 ax)) xdr_array.c:74 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.7145 ])
            (const_int 0 [0]))) xdr_array.c:74 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) xdr_array.c:74 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 125)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/v:SI 90 [ c ])
        (mem:SI (reg/v/f:DI 107 [ sizep ]) [4 *sizep_14(D)+0 S4 A32])) xdr_array.c:78 -1
     (nil))
(insn 31 30 32 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ c ])
            (reg/v:SI 108 [ maxsize ]))) xdr_array.c:83 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) xdr_array.c:83 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 38)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:SI 114)
        (const_int -1 [0xffffffffffffffff])) xdr_array.c:83 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 112 [ D.7146 ])
                (udiv:SI (reg:SI 114)
                    (reg/v:SI 109 [ elsize ])))
            (set (reg:SI 113)
                (umod:SI (reg:SI 114)
                    (reg/v:SI 109 [ elsize ])))
            (clobber (reg:CC 17 flags))
        ]) xdr_array.c:83 -1
     (nil))
(insn 36 35 37 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ c ])
            (reg:SI 112 [ D.7146 ]))) xdr_array.c:83 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) xdr_array.c:83 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 45)
(code_label 38 37 39 6 3 "" [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 105 [ xdrs ]) [3 xdrs_13(D)->x_op+0 S4 A64])
            (const_int 2 [0x2]))) xdr_array.c:83 -1
     (nil))
(jump_insn 41 40 44 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) xdr_array.c:83 612 {*jcc_1}
     (int_list:REG_BR_PROB 6218 (nil))
 -> 148)
(note 44 41 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 42 44 43 7 (set (pc)
        (label_ref 130)) -1
     (nil)
 -> 130)
(barrier 43 42 45)
(code_label 45 43 46 8 4 "" [1 uses])
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ target ])
            (const_int 0 [0]))) xdr_array.c:92 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) xdr_array.c:92 -1
     (int_list:REG_BR_PROB 7866 (nil))
 -> 57)
(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 9 (set (reg:SI 115 [ D.7147 ])
        (mem:SI (reg/v/f:DI 105 [ xdrs ]) [3 xdrs_13(D)->x_op+0 S4 A64])) xdr_array.c:93 -1
     (nil))
(insn 51 50 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.7147 ])
            (const_int 1 [0x1]))) xdr_array.c:93 -1
     (nil))
(jump_insn 52 51 165 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) xdr_array.c:93 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 64)
(note 165 52 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 165 54 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.7147 ])
            (const_int 2 [0x2]))) xdr_array.c:93 -1
     (nil))
(jump_insn 54 53 166 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 152)
            (pc))) xdr_array.c:93 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 152)
(note 166 54 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(code_label 57 166 58 12 6 "" [1 uses])
(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ c ])
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(jump_insn 60 59 63 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) xdr_array.c:115 -1
     (int_list:REG_BR_PROB 9081 (nil))
 -> 93)
(note 63 60 11 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 11 63 61 13 (set (reg/v:SI 99 [ stat ])
        (const_int 1 [0x1])) xdr_array.c:115 -1
     (nil))
(jump_insn 61 11 62 13 (set (pc)
        (label_ref 117)) xdr_array.c:115 -1
     (nil)
 -> 117)
(barrier 62 61 64)
(code_label 64 62 65 14 7 "" [1 uses])
(note 65 64 66 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ c ])
            (const_int 0 [0]))) xdr_array.c:96 -1
     (nil))
(jump_insn 67 66 68 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) xdr_array.c:96 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 156)
(note 68 67 69 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 15 (set (reg:DI 103 [ D.7148 ])
        (zero_extend:DI (reg/v:SI 109 [ elsize ]))) xdr_array.c:98 -1
     (nil))
(insn 70 69 71 15 (set (reg:DI 116 [ D.7148 ])
        (zero_extend:DI (reg/v:SI 90 [ c ]))) xdr_array.c:98 -1
     (nil))
(insn 71 70 72 15 (set (reg:DI 4 si)
        (reg:DI 103 [ D.7148 ])) xdr_array.c:98 -1
     (nil))
(insn 72 71 73 15 (set (reg:DI 5 di)
        (reg:DI 116 [ D.7148 ])) xdr_array.c:98 -1
     (nil))
(call_insn 73 72 74 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b96ce1d3000 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) xdr_array.c:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b96ce1d3000 calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 74 73 75 15 (set (reg/f:DI 117)
        (reg:DI 0 ax)) xdr_array.c:98 -1
     (expr_list:REG_NOALIAS (reg/f:DI 117)
        (nil)))
(insn 75 74 76 15 (set (reg/v/f:DI 89 [ target ])
        (reg/f:DI 117)) xdr_array.c:98 -1
     (nil))
(insn 76 75 77 15 (set (mem/f:DI (reg/v/f:DI 106 [ addrp ]) [1 *addrp_11(D)+0 S8 A64])
        (reg/v/f:DI 89 [ target ])) xdr_array.c:98 -1
     (nil))
(insn 77 76 78 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ target ])
            (const_int 0 [0]))) xdr_array.c:99 -1
     (nil))
(jump_insn 78 77 79 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) xdr_array.c:99 -1
     (int_list:REG_BR_PROB 9559 (nil))
 -> 96)
(note 79 78 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 16 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) xdr_array.c:101 -1
     (nil))
(insn 81 80 82 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b96ce6297e0 *.LC0>)) xdr_array.c:101 -1
     (nil))
(insn 82 81 83 16 (set (reg:DI 5 di)
        (symbol_ref:DI ("*__GI__libc_intl_domainname") [flags 0x42]  <var_decl 0x2b96ce5c2240 _libc_intl_domainname>)) xdr_array.c:101 -1
     (nil))
(call_insn 83 82 84 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b96ce5ba510 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) xdr_array.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b96ce5ba510 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 84 83 85 16 (set (reg/f:DI 95 [ D.7149 ])
        (reg:DI 0 ax)) xdr_array.c:101 -1
     (nil))
(insn 85 84 86 16 (set (reg:DI 2 cx)
        (reg/f:DI 95 [ D.7149 ])) xdr_array.c:101 -1
     (nil))
(insn 86 85 87 16 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__func__.7063") [flags 0x2]  <var_decl 0x2b96ce5c2630 __func__>)) xdr_array.c:101 -1
     (nil))
(insn 87 86 88 16 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b96ce629870 *.LC1>)) xdr_array.c:101 -1
     (nil))
(insn 88 87 89 16 (set (reg:DI 5 di)
        (const_int 0 [0])) xdr_array.c:101 -1
     (nil))
(insn 89 88 90 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_array.c:101 -1
     (nil))
(call_insn 90 89 16 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b96ce34caf8 __fxprintf>) [0 __fxprintf S1 A8])
            (const_int 0 [0]))) xdr_array.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b96ce34caf8 __fxprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 16 90 91 16 (set (reg:SI 88 [ D.7145 ])
        (const_int 0 [0])) xdr_array.c:102 -1
     (nil))
(jump_insn 91 16 92 16 (set (pc)
        (label_ref 125)) xdr_array.c:102 -1
     (nil)
 -> 125)
(barrier 92 91 93)
(code_label 93 92 94 17 8 "" [2 uses])
(note 94 93 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 17 (set (reg:DI 103 [ D.7148 ])
        (zero_extend:DI (reg/v:SI 109 [ elsize ]))) -1
     (nil))
(code_label 96 95 97 18 10 "" [1 uses])
(note 97 96 10 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 10 97 107 18 (set (reg/v:SI 100 [ i ])
        (const_int 0 [0])) xdr_array.c:67 -1
     (nil))
(code_label 107 10 98 19 11 "" [1 uses])
(note 98 107 99 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 19 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr_array.c:117 -1
     (nil))
(insn 100 99 101 19 (set (reg:DI 4 si)
        (reg/v/f:DI 89 [ target ])) xdr_array.c:117 -1
     (nil))
(insn 101 100 102 19 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ xdrs ])) xdr_array.c:117 -1
     (nil))
(insn 102 101 103 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_array.c:117 -1
     (nil))
(call_insn 103 102 104 19 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 110 [ elproc ]) [0 *(bool_t (*<T113f>) (struct XDR *, void *, ...)) elproc_34(D) S1 A8])
            (const_int 0 [0]))) xdr_array.c:117 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 104 103 105 19 (set (reg/v:SI 99 [ stat ])
        (reg:SI 0 ax)) xdr_array.c:117 -1
     (nil))
(insn 105 104 106 19 (parallel [
            (set (reg/v/f:DI 89 [ target ])
                (plus:DI (reg/v/f:DI 89 [ target ])
                    (reg:DI 103 [ D.7148 ])))
            (clobber (reg:CC 17 flags))
        ]) xdr_array.c:118 -1
     (nil))
(insn 106 105 108 19 (parallel [
            (set (reg/v:SI 100 [ i ])
                (plus:SI (reg/v:SI 100 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) xdr_array.c:115 -1
     (nil))
(insn 108 106 109 19 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ c ])
            (reg/v:SI 100 [ i ]))) xdr_array.c:115 -1
     (nil))
(insn 109 108 110 19 (set (reg:QI 119 [ D.7150 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(insn 110 109 111 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.7150 ])
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(jump_insn 111 110 167 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) xdr_array.c:115 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 117)
(note 167 111 112 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 112 167 113 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 99 [ stat ])
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(insn 113 112 114 20 (set (reg:QI 121 [ D.7150 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(insn 114 113 115 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.7150 ])
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(jump_insn 115 114 168 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) xdr_array.c:115 -1
     (int_list:REG_BR_PROB 9529 (nil))
 -> 107)
(note 168 115 117 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(code_label 117 168 118 22 9 "" [2 uses])
(note 118 117 119 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 105 [ xdrs ]) [3 xdrs_13(D)->x_op+0 S4 A64])
            (const_int 2 [0x2]))) xdr_array.c:124 -1
     (nil))
(jump_insn 120 119 137 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) xdr_array.c:124 612 {*jcc_1}
     (int_list:REG_BR_PROB 8416 (nil))
 -> 160)
(code_label 137 120 121 23 13 "" [1 uses])
(note 121 137 122 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 23 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 106 [ addrp ]) [1 *addrp_11(D)+0 S8 A64])) xdr_array.c:126 -1
     (nil))
(call_insn 123 122 124 23 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b96ce1d6e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr_array.c:126 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b96ce1d6e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 124 123 18 23 (set (mem/f:DI (reg/v/f:DI 106 [ addrp ]) [1 *addrp_11(D)+0 S8 A64])
        (const_int 0 [0])) xdr_array.c:127 -1
     (nil))
(insn 18 124 145 23 (set (reg:SI 88 [ D.7145 ])
        (reg/v:SI 99 [ stat ])) xdr_array.c:127 -1
     (nil))
(jump_insn 145 18 146 23 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 146 145 148)
(code_label 148 146 147 24 14 "" [1 uses])
(note 147 148 13 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 13 147 149 24 (set (reg:SI 88 [ D.7145 ])
        (const_int 0 [0])) xdr_array.c:76 -1
     (nil))
(jump_insn 149 13 150 24 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 150 149 152)
(code_label 152 150 151 25 15 "" [1 uses])
(note 151 152 17 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 17 151 153 25 (set (reg:SI 88 [ D.7145 ])
        (const_int 1 [0x1])) xdr_array.c:107 -1
     (nil))
(jump_insn 153 17 154 25 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 154 153 156)
(code_label 156 154 155 26 16 "" [1 uses])
(note 155 156 19 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 19 155 157 26 (set (reg:SI 88 [ D.7145 ])
        (const_int 1 [0x1])) xdr_array.c:97 -1
     (nil))
(jump_insn 157 19 158 26 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 158 157 160)
(code_label 160 158 159 27 17 "" [1 uses])
(note 159 160 14 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 14 159 161 27 (set (reg:SI 88 [ D.7145 ])
        (reg/v:SI 99 [ stat ])) -1
     (nil))
(jump_insn 161 14 162 27 (set (pc)
        (label_ref 125)) -1
     (nil)
 -> 125)
(barrier 162 161 164)
(code_label 164 162 163 28 18 "" [1 uses])
(note 163 164 15 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 15 163 125 28 (set (reg:SI 88 [ D.7145 ])
        (const_int 1 [0x1])) xdr_array.c:97 -1
     (nil))
(code_label 125 15 126 29 2 "" [7 uses])
(note 126 125 127 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 29 (set (reg:SI 104 [ <retval> ])
        (reg:SI 88 [ D.7145 ])) -1
     (nil))
(jump_insn 128 127 129 29 (set (pc)
        (label_ref 141)) -1
     (nil)
 -> 141)
(barrier 129 128 130)
(code_label 130 129 131 30 5 "" [1 uses])
(note 131 130 132 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ target ])
            (const_int 0 [0]))) xdr_array.c:92 -1
     (nil))
(jump_insn 133 132 134 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) xdr_array.c:92 612 {*jcc_1}
     (int_list:REG_BR_PROB 941 (nil))
 -> 164)
(note 134 133 135 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ c ])
            (const_int 0 [0]))) xdr_array.c:115 -1
     (nil))
(jump_insn 136 135 140 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) xdr_array.c:115 -1
     (int_list:REG_BR_PROB 9081 (nil))
 -> 93)
(note 140 136 12 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 12 140 138 32 (set (reg/v:SI 99 [ stat ])
        (const_int 1 [0x1])) xdr_array.c:115 -1
     (nil))
(jump_insn 138 12 139 32 (set (pc)
        (label_ref 137)) xdr_array.c:115 -1
     (nil)
 -> 137)
(barrier 139 138 141)
(code_label 141 139 144 33 1 "" [1 uses])
(note 144 141 142 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 142 144 143 33 (set (reg/i:SI 0 ax)
        (reg:SI 104 [ <retval> ])) xdr_array.c:130 -1
     (nil))
(insn 143 142 0 33 (use (reg/i:SI 0 ax)) xdr_array.c:130 -1
     (nil))

;; Function xdr_vector (*__GI_xdr_vector, funcdef_no=47, decl_uid=6219, cgraph_uid=48, symbol_order=52)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 4 failed.
Removing jump 42.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 4 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_array.c:150 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ basep ])
        (reg:DI 4 si [ basep ])) xdr_array.c:150 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 93 [ nelem ])
        (reg:SI 1 dx [ nelem ])) xdr_array.c:150 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 94 [ elemsize ])
        (reg:SI 2 cx [ elemsize ])) xdr_array.c:150 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 95 [ xdr_elem ])
        (reg:DI 37 r8 [ xdr_elem ])) xdr_array.c:150 -1
     (nil))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 7 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ nelem ])
            (const_int 0 [0]))) xdr_array.c:155 -1
     (nil))
(jump_insn 13 12 35 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) xdr_array.c:155 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 17)
(code_label 35 13 14 4 41 "" [1 uses])
(note 14 35 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 14 15 4 (set (reg:SI 87 [ D.7162 ])
        (const_int 1 [0x1])) xdr_array.c:163 -1
     (nil))
(jump_insn 15 9 16 4 (set (pc)
        (label_ref 39)) xdr_array.c:155 -1
     (nil)
 -> 39)
(barrier 16 15 17)
(code_label 17 16 18 5 38 "" [1 uses])
(note 18 17 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 18 32 5 (set (reg/v:SI 89 [ i ])
        (const_int 0 [0])) xdr_array.c:155 -1
     (nil))
(code_label 32 8 19 6 40 "" [1 uses])
(note 19 32 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr_array.c:157 -1
     (nil))
(insn 21 20 22 6 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ basep ])) xdr_array.c:157 -1
     (nil))
(insn 22 21 23 6 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) xdr_array.c:157 -1
     (nil))
(insn 23 22 24 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_array.c:157 -1
     (nil))
(call_insn 24 23 25 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 95 [ xdr_elem ]) [0 *(bool_t (*<T113f>) (struct XDR *, void *, ...)) xdr_elem_9(D) S1 A8])
            (const_int 0 [0]))) xdr_array.c:157 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 25 24 26 6 (set (reg:SI 87 [ D.7162 ])
        (reg:SI 0 ax)) xdr_array.c:157 -1
     (nil))
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7162 ])
            (const_int 0 [0]))) xdr_array.c:157 -1
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) xdr_array.c:157 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 39)
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg:DI 96 [ D.7163 ])
        (zero_extend:DI (reg/v:SI 94 [ elemsize ]))) -1
     (nil))
(insn 30 29 31 7 (parallel [
            (set (reg/v/f:DI 92 [ basep ])
                (plus:DI (reg/v/f:DI 92 [ basep ])
                    (reg:DI 96 [ D.7163 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 31 30 33 7 (parallel [
            (set (reg/v:SI 89 [ i ])
                (plus:SI (reg/v:SI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) xdr_array.c:155 -1
     (nil))
(insn 33 31 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ nelem ])
            (reg/v:SI 89 [ i ]))) xdr_array.c:155 -1
     (nil))
(jump_insn 34 33 38 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) xdr_array.c:155 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 32)
(note 38 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 38 37 8 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
(barrier 37 36 39)
(code_label 39 37 40 9 39 "" [2 uses])
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 45 9 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.7162 ])) -1
     (nil))
(insn 45 41 46 9 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) xdr_array.c:164 -1
     (nil))
(insn 46 45 0 9 (use (reg/i:SI 0 ax)) xdr_array.c:164 -1
     (nil))
