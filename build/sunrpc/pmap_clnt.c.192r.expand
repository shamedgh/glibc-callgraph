
;; Function __get_myaddress (__get_myaddress, funcdef_no=44, decl_uid=10655, cgraph_uid=44, symbol_order=49)

Partition 0: size 8 align 8
	ifa

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14
Edge 13->5 redirected to 17
Purged non-fallthru edges from bb 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 12->14 redirected to 15
Forwarding edge 13->14 to 15 failed.
Deleted label in block 14.
Removing jump 74.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 13->14 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 102 [ addr ])
        (reg:DI 5 di [ addr ])) pmap_clnt.c:56 -1
     (nil))
(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 11 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:59 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 103)) pmap_clnt.c:59 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getifaddrs") [flags 0x43]  <function_decl 0x2b2604f70948 getifaddrs>) [0 getifaddrs S1 A8])
            (const_int 0 [0]))) pmap_clnt.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getifaddrs") [flags 0x43]  <function_decl 0x2b2604f70948 getifaddrs>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:SI 88 [ D.10783 ])
        (reg:SI 0 ax)) pmap_clnt.c:59 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.10783 ])
            (const_int 0 [0]))) pmap_clnt.c:59 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) pmap_clnt.c:59 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 22)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b26053b6240 *.LC0>)) pmap_clnt.c:61 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("*__GI_perror") [flags 0x43]  <function_decl 0x2b2604e550d8 perror>) [0 perror S1 A8])
        (const_int 0 [0])) pmap_clnt.c:61 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_perror") [flags 0x43]  <function_decl 0x2b2604e550d8 perror>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) pmap_clnt.c:62 -1
     (nil))
(call_insn 20 19 21 4 (call (mem:QI (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2b2604cf9000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) pmap_clnt.c:62 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2b2604cf9000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 21 20 22)
(code_label 22 21 23 5 2 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 4 5 (set (reg/v/f:DI 99 [ run ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ifa+0 S8 A64])) -1
     (nil))
(insn 4 24 80 5 (set (reg/v:SI 87 [ loopback ])
        (const_int 1 [0x1])) pmap_clnt.c:59 -1
     (nil))
(jump_insn 80 4 81 5 (set (pc)
        (label_ref 25)) -1
     (nil)
 -> 25)
(barrier 81 80 83)
(code_label 83 81 82 6 9 "" [1 uses])
(note 82 83 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 82 25 6 (set (reg/v:SI 87 [ loopback ])
        (reg/v:SI 100 [ loopback ])) pmap_clnt.c:87 -1
     (nil))
(code_label 25 5 26 7 3 ("again") [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ run ])
            (const_int 0 [0]))) pmap_clnt.c:70 -1
     (nil))
(jump_insn 28 27 29 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) pmap_clnt.c:70 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 64)
(note 29 28 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 29 61 8 (set (reg/v/f:DI 92 [ run ])
        (reg/v/f:DI 99 [ run ])) pmap_clnt.c:70 -1
     (nil))
(code_label 61 6 30 9 8 "" [1 uses])
(note 30 61 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 9 (set (reg:SI 90 [ D.10784 ])
        (mem:SI (plus:DI (reg/v/f:DI 92 [ run ])
                (const_int 16 [0x10])) [3 run_12->ifa_flags+0 S4 A64])) pmap_clnt.c:72 -1
     (nil))
(insn 32 31 33 9 (parallel [
            (set (reg:SI 104 [ D.10784 ])
                (and:SI (reg:SI 90 [ D.10784 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:72 -1
     (nil))
(insn 33 32 34 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.10784 ])
            (const_int 0 [0]))) pmap_clnt.c:72 -1
     (nil))
(jump_insn 34 33 35 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) pmap_clnt.c:72 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 58)
(note 35 34 36 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 10 (set (reg/f:DI 93 [ D.10785 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ run ])
                (const_int 24 [0x18])) [1 run_12->ifa_addr+0 S8 A64])) pmap_clnt.c:73 -1
     (nil))
(insn 37 36 38 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.10785 ])
            (const_int 0 [0]))) pmap_clnt.c:73 -1
     (nil))
(jump_insn 38 37 39 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) pmap_clnt.c:73 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 58)
(note 39 38 40 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:HI (reg/f:DI 93 [ D.10785 ]) [6 _11->sa_family+0 S2 A16])
            (const_int 2 [0x2]))) pmap_clnt.c:74 -1
     (nil))
(jump_insn 41 40 42 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) pmap_clnt.c:74 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 58)
(note 42 41 43 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 12 (parallel [
            (set (reg:SI 105)
                (lshiftrt:SI (reg:SI 90 [ D.10784 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:75 -1
     (nil))
(insn 44 43 45 12 (parallel [
            (set (reg:QI 106 [ D.10787 ])
                (and:QI (subreg:QI (reg:SI 105) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:75 -1
     (nil))
(insn 45 44 46 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.10787 ])
            (const_int 0 [0]))) pmap_clnt.c:75 -1
     (nil))
(jump_insn 46 45 84 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) pmap_clnt.c:75 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 86)
(note 84 46 47 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 47 84 48 13 (parallel [
            (set (reg:SI 107 [ D.10783 ])
                (xor:SI (reg/v:SI 87 [ loopback ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:75 -1
     (nil))
(insn 48 47 49 13 (parallel [
            (set (reg:QI 108 [ D.10787 ])
                (and:QI (subreg:QI (reg:SI 107 [ D.10783 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:75 -1
     (nil))
(insn 49 48 50 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ D.10787 ])
            (const_int 0 [0]))) pmap_clnt.c:75 -1
     (nil))
(jump_insn 50 49 85 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) pmap_clnt.c:75 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 58)
(note 85 50 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(code_label 86 85 52 15 10 "" [1 uses])
(note 52 86 53 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 15 (set (reg:TI 109)
        (mem:TI (reg/f:DI 93 [ D.10785 ]) [7 MEM[(struct sockaddr_in *)_11]+0 S16 A32])) pmap_clnt.c:77 -1
     (nil))
(insn 54 53 55 15 (set (mem:TI (reg/v/f:DI 102 [ addr ]) [7 *addr_15(D)+0 S16 A128])
        (reg:TI 109)) pmap_clnt.c:77 -1
     (nil))
(insn 55 54 7 15 (set (mem:HI (plus:DI (reg/v/f:DI 102 [ addr ])
                (const_int 2 [0x2])) [6 addr_15(D)->sin_port+0 S2 A16])
        (const_int 28416 [0x6f00])) pmap_clnt.c:78 -1
     (nil))
(insn 7 55 56 15 (set (reg:SI 88 [ D.10783 ])
        (const_int 1 [0x1])) pmap_clnt.c:79 -1
     (nil))
(jump_insn 56 7 57 15 (set (pc)
        (label_ref 69)) pmap_clnt.c:79 -1
     (nil)
 -> 69)
(barrier 57 56 58)
(code_label 58 57 59 16 5 "" [4 uses])
(note 59 58 60 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 62 16 (set (reg/v/f:DI 92 [ run ])
        (mem/f:DI (reg/v/f:DI 92 [ run ]) [1 run_12->ifa_next+0 S8 A64])) pmap_clnt.c:82 -1
     (nil))
(insn 62 60 63 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ run ])
            (const_int 0 [0]))) pmap_clnt.c:70 -1
     (nil))
(jump_insn 63 62 64 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) pmap_clnt.c:70 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 61)
(code_label 64 63 65 17 4 "" [1 uses])
(note 65 64 66 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 17 (set (reg/v:SI 100 [ loopback ])
        (const_int 0 [0])) pmap_clnt.c:87 -1
     (nil))
(insn 67 66 68 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ loopback ])
            (const_int 1 [0x1]))) pmap_clnt.c:85 -1
     (nil))
(jump_insn 68 67 69 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) pmap_clnt.c:85 612 {*jcc_1}
     (int_list:REG_BR_PROB 9700 (nil))
 -> 83)
(code_label 69 68 70 18 7 ("out") [1 uses])
(note 70 69 71 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 18 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ run ])) pmap_clnt.c:91 -1
     (nil))
(call_insn 72 71 73 18 (call (mem:QI (symbol_ref:DI ("*__GI_freeifaddrs") [flags 0x43]  <function_decl 0x2b2604f70a20 freeifaddrs>) [0 freeifaddrs S1 A8])
        (const_int 0 [0])) pmap_clnt.c:91 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_freeifaddrs") [flags 0x43]  <function_decl 0x2b2604f70a20 freeifaddrs>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 73 72 77 18 (set (reg:SI 101 [ <retval> ])
        (reg:SI 88 [ D.10783 ])) pmap_clnt.c:93 -1
     (nil))
(insn 77 73 78 18 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) pmap_clnt.c:94 -1
     (nil))
(insn 78 77 0 18 (use (reg/i:SI 0 ax)) pmap_clnt.c:94 -1
     (nil))

;; Function pmap_set (*__GI_pmap_set, funcdef_no=45, decl_uid=10607, cgraph_uid=45, symbol_order=52)

Partition 2: size 32 align 16
	parms
Partition 0: size 16 align 16
	myaddress
Partition 3: size 4 align 4
	rslt
Partition 1: size 4 align 4
	socket

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 86.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v:DI 99 [ program ])
        (reg:DI 5 di [ program ])) pmap_clnt.c:106 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 100 [ version ])
        (reg:DI 4 si [ version ])) pmap_clnt.c:106 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 101 [ protocol ])
        (reg:SI 1 dx [ protocol ])) pmap_clnt.c:106 -1
     (nil))
(insn 5 4 6 2 (set (reg:SI 103)
        (reg:SI 2 cx [ port ])) pmap_clnt.c:106 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:HI 102 [ port ])
        (subreg:HI (reg:SI 103) 0)) pmap_clnt.c:106 -1
     (nil))
(note 7 6 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 7 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 socket+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) pmap_clnt.c:108 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:113 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 104)) pmap_clnt.c:113 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__get_myaddress") [flags 0x3]  <function_decl 0x2b260537b5e8 __get_myaddress>) [0 __get_myaddress S1 A8])
            (const_int 0 [0]))) pmap_clnt.c:113 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__get_myaddress") [flags 0x3]  <function_decl 0x2b260537b5e8 __get_myaddress>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:SI 88 [ D.10792 ])
        (reg:SI 0 ax)) pmap_clnt.c:113 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.10792 ])
            (const_int 0 [0]))) pmap_clnt.c:113 -1
     (nil))
(jump_insn 17 16 39 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) pmap_clnt.c:113 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 21)
(code_label 39 17 18 4 30 "" [1 uses])
(note 18 39 8 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 8 18 19 4 (set (reg:SI 87 [ D.10791 ])
        (const_int 0 [0])) pmap_clnt.c:114 -1
     (nil))
(jump_insn 19 8 20 4 (set (pc)
        (label_ref 83)) -1
     (nil)
 -> 83)
(barrier 20 19 21)
(code_label 21 20 22 5 28 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:115 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 107)
        (symbol_ref:DI ("timeout") [flags 0x2]  <var_decl 0x2b2605385090 timeout>)) pmap_clnt.c:115 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 106)
        (mem/u/c:DI (reg/f:DI 107) [13 timeout+0 S8 A128])) pmap_clnt.c:115 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 109)
        (const:DI (plus:DI (symbol_ref:DI ("timeout") [flags 0x2]  <var_decl 0x2b2605385090 timeout>)
                (const_int 8 [0x8])))) pmap_clnt.c:115 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 108)
        (mem/u/c:DI (reg/f:DI 109) [13 timeout+8 S8 A64])) pmap_clnt.c:115 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:115 -1
     (nil))
(insn 29 28 30 5 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 400 [0x190])) pmap_clnt.c:115 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 30 29 31 5 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 400 [0x190])) pmap_clnt.c:115 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 31 30 32 5 (set (reg:DI 38 r9)
        (reg:DI 105)) pmap_clnt.c:115 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 2 cx)
        (reg:DI 106)) pmap_clnt.c:115 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 37 r8)
        (reg:DI 108)) pmap_clnt.c:115 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) pmap_clnt.c:115 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 4 si)
        (const_int 100000 [0x186a0])) pmap_clnt.c:115 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg:DI 110)) pmap_clnt.c:115 -1
     (nil))
(call_insn 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_clntudp_bufcreate") [flags 0x43]  <function_decl 0x2b26051aebd0 clntudp_bufcreate>) [0 clntudp_bufcreate S1 A8])
            (const_int 16 [0x10]))) pmap_clnt.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_clntudp_bufcreate") [flags 0x43]  <function_decl 0x2b26051aebd0 clntudp_bufcreate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list (use (reg:DI 37 r8))
                    (expr_list (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 38 37 40 5 (set (reg/v/f:DI 89 [ client ])
        (reg:DI 0 ax)) pmap_clnt.c:115 -1
     (nil))
(insn 40 38 41 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:117 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ client ])
            (const_int 0 [0]))) pmap_clnt.c:117 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) pmap_clnt.c:117 -1
     (int_list:REG_BR_PROB 2164 (nil))
 -> 39)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 parms.pm_prog+0 S8 A128])
        (reg/v:DI 99 [ program ])) pmap_clnt.c:119 -1
     (nil))
(insn 45 44 46 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 parms.pm_vers+0 S8 A64])
        (reg/v:DI 100 [ version ])) pmap_clnt.c:120 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 111)
        (sign_extend:DI (reg/v:SI 101 [ protocol ]))) pmap_clnt.c:121 -1
     (nil))
(insn 47 46 48 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [10 parms.pm_prot+0 S8 A128])
        (reg:DI 111)) pmap_clnt.c:121 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 112)
        (zero_extend:DI (reg/v:HI 102 [ port ]))) pmap_clnt.c:122 -1
     (nil))
(insn 49 48 50 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 parms.pm_port+0 S8 A64])
        (reg:DI 112)) pmap_clnt.c:122 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:123 -1
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:123 -1
     (nil))
(insn 52 51 53 6 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ client ])
                (const_int 8 [0x8])) [1 client_9->cl_ops+0 S8 A64])) pmap_clnt.c:123 -1
     (nil))
(insn 53 52 54 6 (set (mem:TI (pre_dec:DI (reg/f:DI 7 sp)) [13  S16 A64])
        (mem/u/c:TI (symbol_ref:DI ("tottimeout") [flags 0x2]  <var_decl 0x2b2605385120 tottimeout>) [13 tottimeout+0 S16 A128])) pmap_clnt.c:123 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 54 53 55 6 (set (reg/f:DI 116)
        (mem/f:DI (reg/f:DI 115) [1 _20->cl_call+0 S8 A64])) pmap_clnt.c:123 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 38 r9)
        (reg:DI 113)) pmap_clnt.c:123 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 37 r8)
        (symbol_ref:DI ("*__GI_xdr_bool") [flags 0x43]  <function_decl 0x2b260511f000 xdr_bool>)) pmap_clnt.c:123 -1
     (nil))
(insn 57 56 58 6 (set (reg:DI 2 cx)
        (reg:DI 114)) pmap_clnt.c:123 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 1 dx)
        (symbol_ref:DI ("*__GI_xdr_pmap") [flags 0x43]  <function_decl 0x2b26053675e8 xdr_pmap>)) pmap_clnt.c:123 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 4 si)
        (const_int 1 [0x1])) pmap_clnt.c:123 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ client ])) pmap_clnt.c:123 -1
     (nil))
(call_insn 61 60 62 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 116) [0 *_21 S1 A8])
            (const_int 16 [0x10]))) pmap_clnt.c:123 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 62 61 63 6 (set (reg:SI 94 [ D.10796 ])
        (reg:SI 0 ax)) pmap_clnt.c:123 -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:123 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 64 63 65 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.10796 ])
            (const_int 0 [0]))) pmap_clnt.c:123 -1
     (nil))
(jump_insn 65 64 66 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) pmap_clnt.c:123 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 76)
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) pmap_clnt.c:127 -1
     (nil))
(insn 68 67 69 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b26053c8480 *.LC2>)) pmap_clnt.c:127 -1
     (nil))
(insn 69 68 70 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("*__GI__libc_intl_domainname") [flags 0x42]  <var_decl 0x2b2604ef82d0 _libc_intl_domainname>)) pmap_clnt.c:127 -1
     (nil))
(call_insn 70 69 71 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b2604ef5288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) pmap_clnt.c:127 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b2604ef5288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 71 70 72 7 (set (reg/f:DI 95 [ D.10797 ])
        (reg:DI 0 ax)) pmap_clnt.c:127 -1
     (nil))
(insn 72 71 73 7 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.10797 ])) pmap_clnt.c:127 -1
     (nil))
(insn 73 72 74 7 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ client ])) pmap_clnt.c:127 -1
     (nil))
(call_insn 74 73 75 7 (call (mem:QI (symbol_ref:DI ("*__GI_clnt_perror") [flags 0x43]  <function_decl 0x2b26051ae288 clnt_perror>) [0 clnt_perror S1 A8])
        (const_int 0 [0])) pmap_clnt.c:127 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_clnt_perror") [flags 0x43]  <function_decl 0x2b26051ae288 clnt_perror>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [3 rslt+0 S4 A32])
        (const_int 0 [0])) pmap_clnt.c:128 -1
     (nil))
(code_label 76 75 77 8 31 "" [1 uses])
(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 8 (set (reg/f:DI 117)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ client ])
                (const_int 8 [0x8])) [1 client_9->cl_ops+0 S8 A64])) pmap_clnt.c:130 -1
     (nil))
(insn 79 78 80 8 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/f:DI 117)
                (const_int 32 [0x20])) [1 _28->cl_destroy+0 S8 A64])) pmap_clnt.c:130 -1
     (nil))
(insn 80 79 81 8 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ client ])) pmap_clnt.c:130 -1
     (nil))
(call_insn 81 80 82 8 (call (mem:QI (reg/f:DI 118) [0 *_29 S1 A8])
        (const_int 0 [0])) pmap_clnt.c:130 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 8 (set (reg:SI 87 [ D.10791 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [3 rslt+0 S4 A32])) pmap_clnt.c:132 -1
     (nil))
(code_label 83 82 84 9 29 "" [1 uses])
(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 89 9 (set (reg:SI 98 [ <retval> ])
        (reg:SI 87 [ D.10791 ])) -1
     (nil))
(insn 89 85 90 9 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) pmap_clnt.c:133 -1
     (nil))
(insn 90 89 0 9 (use (reg/i:SI 0 ax)) pmap_clnt.c:133 -1
     (nil))

;; Function pmap_unset (*__GI_pmap_unset, funcdef_no=46, decl_uid=10610, cgraph_uid=47, symbol_order=55)

Partition 2: size 32 align 16
	parms
Partition 0: size 16 align 16
	myaddress
Partition 3: size 4 align 4
	rslt
Partition 1: size 4 align 4
	socket

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 66.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:DI 95 [ program ])
        (reg:DI 5 di [ program ])) pmap_clnt.c:142 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 96 [ version ])
        (reg:DI 4 si [ version ])) pmap_clnt.c:142 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 socket+0 S4 A64])
        (const_int -1 [0xffffffffffffffff])) pmap_clnt.c:144 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:149 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 97)) pmap_clnt.c:149 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__get_myaddress") [flags 0x3]  <function_decl 0x2b260537b5e8 __get_myaddress>) [0 __get_myaddress S1 A8])
            (const_int 0 [0]))) pmap_clnt.c:149 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__get_myaddress") [flags 0x3]  <function_decl 0x2b260537b5e8 __get_myaddress>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:SI 88 [ D.10804 ])
        (reg:SI 0 ax)) pmap_clnt.c:149 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.10804 ])
            (const_int 0 [0]))) pmap_clnt.c:149 -1
     (nil))
(jump_insn 14 13 36 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) pmap_clnt.c:149 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 18)
(code_label 36 14 15 4 43 "" [1 uses])
(note 15 36 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 15 16 4 (set (reg:SI 87 [ D.10803 ])
        (const_int 0 [0])) pmap_clnt.c:150 -1
     (nil))
(jump_insn 16 5 17 4 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 17 16 18)
(code_label 18 17 19 5 41 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:151 -1
     (nil))
(insn 21 20 22 5 (set (reg/f:DI 100)
        (symbol_ref:DI ("timeout") [flags 0x2]  <var_decl 0x2b2605385090 timeout>)) pmap_clnt.c:151 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 99)
        (mem/u/c:DI (reg/f:DI 100) [13 timeout+0 S8 A128])) pmap_clnt.c:151 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 102)
        (const:DI (plus:DI (symbol_ref:DI ("timeout") [flags 0x2]  <var_decl 0x2b2605385090 timeout>)
                (const_int 8 [0x8])))) pmap_clnt.c:151 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 101)
        (mem/u/c:DI (reg/f:DI 102) [13 timeout+8 S8 A64])) pmap_clnt.c:151 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:151 -1
     (nil))
(insn 26 25 27 5 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 400 [0x190])) pmap_clnt.c:151 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 27 26 28 5 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 400 [0x190])) pmap_clnt.c:151 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 28 27 29 5 (set (reg:DI 38 r9)
        (reg:DI 98)) pmap_clnt.c:151 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 2 cx)
        (reg:DI 99)) pmap_clnt.c:151 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 37 r8)
        (reg:DI 101)) pmap_clnt.c:151 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 1 dx)
        (const_int 2 [0x2])) pmap_clnt.c:151 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 4 si)
        (const_int 100000 [0x186a0])) pmap_clnt.c:151 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 5 di)
        (reg:DI 103)) pmap_clnt.c:151 -1
     (nil))
(call_insn 34 33 35 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_clntudp_bufcreate") [flags 0x43]  <function_decl 0x2b26051aebd0 clntudp_bufcreate>) [0 clntudp_bufcreate S1 A8])
            (const_int 16 [0x10]))) pmap_clnt.c:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_clntudp_bufcreate") [flags 0x43]  <function_decl 0x2b26051aebd0 clntudp_bufcreate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list (use (reg:DI 37 r8))
                    (expr_list (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 35 34 37 5 (set (reg/v/f:DI 89 [ client ])
        (reg:DI 0 ax)) pmap_clnt.c:151 -1
     (nil))
(insn 37 35 38 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:153 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ client ])
            (const_int 0 [0]))) pmap_clnt.c:153 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) pmap_clnt.c:153 -1
     (int_list:REG_BR_PROB 2164 (nil))
 -> 36)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [10 parms.pm_prog+0 S8 A128])
        (reg/v:DI 95 [ program ])) pmap_clnt.c:155 -1
     (nil))
(insn 42 41 43 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 parms.pm_vers+0 S8 A64])
        (reg/v:DI 96 [ version ])) pmap_clnt.c:156 -1
     (nil))
(insn 43 42 44 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [10 parms.pm_prot+0 S8 A128])
        (const_int 0 [0])) pmap_clnt.c:157 -1
     (nil))
(insn 44 43 45 6 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 parms.pm_port+0 S8 A64])
        (const_int 0 [0])) pmap_clnt.c:157 -1
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:158 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:158 -1
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ client ])
                (const_int 8 [0x8])) [1 client_8->cl_ops+0 S8 A64])) pmap_clnt.c:158 -1
     (nil))
(insn 48 47 49 6 (set (mem:TI (pre_dec:DI (reg/f:DI 7 sp)) [13  S16 A64])
        (mem/u/c:TI (symbol_ref:DI ("tottimeout") [flags 0x2]  <var_decl 0x2b2605385120 tottimeout>) [13 tottimeout+0 S16 A128])) pmap_clnt.c:158 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 49 48 50 6 (set (reg/f:DI 107)
        (mem/f:DI (reg/f:DI 106) [1 _15->cl_call+0 S8 A64])) pmap_clnt.c:158 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 38 r9)
        (reg:DI 104)) pmap_clnt.c:158 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 37 r8)
        (symbol_ref:DI ("*__GI_xdr_bool") [flags 0x43]  <function_decl 0x2b260511f000 xdr_bool>)) pmap_clnt.c:158 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 2 cx)
        (reg:DI 105)) pmap_clnt.c:158 -1
     (nil))
(insn 53 52 54 6 (set (reg:DI 1 dx)
        (symbol_ref:DI ("*__GI_xdr_pmap") [flags 0x43]  <function_decl 0x2b26053675e8 xdr_pmap>)) pmap_clnt.c:158 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 4 si)
        (const_int 2 [0x2])) pmap_clnt.c:158 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ client ])) pmap_clnt.c:158 -1
     (nil))
(call_insn 56 55 57 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 107) [0 *_16 S1 A8])
            (const_int 16 [0x10]))) pmap_clnt.c:158 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 57 56 58 6 (set (reg/f:DI 108)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ client ])
                (const_int 8 [0x8])) [1 client_8->cl_ops+0 S8 A64])) pmap_clnt.c:161 -1
     (nil))
(insn 58 57 59 6 (set (reg/f:DI 109)
        (mem/f:DI (plus:DI (reg/f:DI 108)
                (const_int 32 [0x20])) [1 _18->cl_destroy+0 S8 A64])) pmap_clnt.c:161 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ client ])) pmap_clnt.c:161 -1
     (nil))
(call_insn 60 59 61 6 (call (mem:QI (reg/f:DI 109) [0 *_19 S1 A8])
        (const_int 0 [0])) pmap_clnt.c:161 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 62 6 (set (reg:SI 87 [ D.10803 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [3 rslt+0 S4 A32])) pmap_clnt.c:163 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) pmap_clnt.c:163 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 63 62 64 7 42 "" [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 69 7 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.10803 ])) -1
     (nil))
(insn 69 65 70 7 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) pmap_clnt.c:164 -1
     (nil))
(insn 70 69 0 7 (use (reg/i:SI 0 ax)) pmap_clnt.c:164 -1
     (nil))
