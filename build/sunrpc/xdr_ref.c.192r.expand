
;; Function xdr_reference (*__GI_xdr_reference, funcdef_no=46, decl_uid=6230, cgraph_uid=46, symbol_order=49)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 3->8 redirected to 11
Edge 6->8 redirected to 12
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 66.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 95 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_ref.c:64 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ pp ])
        (reg:DI 4 si [ pp ])) xdr_ref.c:64 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 97 [ size ])
        (reg:SI 1 dx [ size ])) xdr_ref.c:64 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 98 [ proc ])
        (reg:DI 2 cx [ proc ])) xdr_ref.c:64 -1
     (nil))
(note 6 5 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 6 14 2 (set (reg/v/f:DI 87 [ loc ])
        (mem/f:DI (reg/v/f:DI 96 [ pp ]) [1 *pp_6(D)+0 S8 A64])) xdr_ref.c:65 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ loc ])
            (const_int 0 [0]))) xdr_ref.c:68 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) xdr_ref.c:68 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 49)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 99 [ D.7277 ])
        (mem:SI (reg/v/f:DI 95 [ xdrs ]) [3 xdrs_8(D)->x_op+0 S4 A64])) xdr_ref.c:69 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.7277 ])
            (const_int 1 [0x1]))) xdr_ref.c:69 -1
     (nil))
(jump_insn 19 18 80 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) xdr_ref.c:69 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 24)
(note 80 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 80 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.7277 ])
            (const_int 2 [0x2]))) xdr_ref.c:69 -1
     (nil))
(jump_insn 21 20 81 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) xdr_ref.c:69 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 75)
(note 81 21 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 22 81 23 6 (set (pc)
        (label_ref 49)) xdr_ref.c:69 -1
     (nil)
 -> 49)
(barrier 23 22 24)
(code_label 24 23 25 7 3 "" [1 uses])
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:DI 100 [ D.7278 ])
        (zero_extend:DI (reg/v:SI 97 [ size ]))) xdr_ref.c:75 -1
     (nil))
(insn 27 26 28 7 (set (reg:DI 4 si)
        (reg:DI 100 [ D.7278 ])) xdr_ref.c:75 -1
     (nil))
(insn 28 27 29 7 (set (reg:DI 5 di)
        (const_int 1 [0x1])) xdr_ref.c:75 -1
     (nil))
(call_insn 29 28 30 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b7eea779000 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) xdr_ref.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b7eea779000 calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 7 (set (reg/f:DI 101)
        (reg:DI 0 ax)) xdr_ref.c:75 -1
     (expr_list:REG_NOALIAS (reg/f:DI 101)
        (nil)))
(insn 31 30 32 7 (set (reg/v/f:DI 87 [ loc ])
        (reg/f:DI 101)) xdr_ref.c:75 -1
     (nil))
(insn 32 31 33 7 (set (mem/f:DI (reg/v/f:DI 96 [ pp ]) [1 *pp_6(D)+0 S8 A64])
        (reg/v/f:DI 87 [ loc ])) xdr_ref.c:75 -1
     (nil))
(insn 33 32 34 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ loc ])
            (const_int 0 [0]))) xdr_ref.c:76 -1
     (nil))
(jump_insn 34 33 35 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) xdr_ref.c:76 -1
     (int_list:REG_BR_PROB 9559 (nil))
 -> 49)
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) xdr_ref.c:78 -1
     (nil))
(insn 37 36 38 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b7eeabe7e10 *.LC0>)) xdr_ref.c:78 -1
     (nil))
(insn 38 37 39 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("*__GI__libc_intl_domainname") [flags 0x42]  <var_decl 0x2b7eeab68240 _libc_intl_domainname>)) xdr_ref.c:78 -1
     (nil))
(call_insn 39 38 40 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b7eeab60510 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) xdr_ref.c:78 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b7eeab60510 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 40 39 41 8 (set (reg/f:DI 93 [ D.7279 ])
        (reg:DI 0 ax)) xdr_ref.c:78 -1
     (nil))
(insn 41 40 42 8 (set (reg:DI 2 cx)
        (reg/f:DI 93 [ D.7279 ])) xdr_ref.c:78 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__func__.7207") [flags 0x2]  <var_decl 0x2b7eeab68510 __func__>)) xdr_ref.c:78 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b7eeabe7ea0 *.LC1>)) xdr_ref.c:78 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (const_int 0 [0])) xdr_ref.c:78 -1
     (nil))
(insn 45 44 46 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_ref.c:78 -1
     (nil))
(call_insn 46 45 8 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b7eea8f2af8 __fxprintf>) [0 __fxprintf S1 A8])
            (const_int 0 [0]))) xdr_ref.c:78 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b7eea8f2af8 __fxprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 8 46 47 8 (set (reg:SI 88 [ D.7276 ])
        (const_int 0 [0])) xdr_ref.c:78 -1
     (nil))
(jump_insn 47 8 48 8 (set (pc)
        (label_ref 63)) xdr_ref.c:78 -1
     (nil)
 -> 63)
(barrier 48 47 49)
(code_label 49 48 50 9 2 "" [3 uses])
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr_ref.c:86 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 4 si)
        (reg/v/f:DI 87 [ loc ])) xdr_ref.c:86 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) xdr_ref.c:86 -1
     (nil))
(insn 54 53 55 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_ref.c:86 -1
     (nil))
(call_insn 55 54 56 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 98 [ proc ]) [0 *(bool_t (*<T113f>) (struct XDR *, void *, ...)) proc_17(D) S1 A8])
            (const_int 0 [0]))) xdr_ref.c:86 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 56 55 57 9 (set (reg/v:SI 91 [ stat ])
        (reg:SI 0 ax)) xdr_ref.c:86 -1
     (nil))
(insn 57 56 58 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 95 [ xdrs ]) [3 xdrs_8(D)->x_op+0 S4 A64])
            (const_int 2 [0x2]))) xdr_ref.c:88 -1
     (nil))
(jump_insn 58 57 59 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 79)
            (pc))) xdr_ref.c:88 612 {*jcc_1}
     (int_list:REG_BR_PROB 8010 (nil))
 -> 79)
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ loc ])) xdr_ref.c:90 -1
     (nil))
(call_insn 61 60 62 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b7eea77ce58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr_ref.c:90 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b7eea77ce58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 62 61 9 10 (set (mem/f:DI (reg/v/f:DI 96 [ pp ]) [1 *pp_6(D)+0 S8 A64])
        (const_int 0 [0])) xdr_ref.c:91 -1
     (nil))
(insn 9 62 72 10 (set (reg:SI 88 [ D.7276 ])
        (reg/v:SI 91 [ stat ])) xdr_ref.c:93 -1
     (nil))
(jump_insn 72 9 73 10 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 73 72 75)
(code_label 75 73 74 11 5 "" [1 uses])
(note 74 75 7 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 7 74 76 11 (set (reg:SI 88 [ D.7276 ])
        (const_int 1 [0x1])) xdr_ref.c:72 -1
     (nil))
(jump_insn 76 7 77 11 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 77 76 79)
(code_label 79 77 78 12 6 "" [1 uses])
(note 78 79 10 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 10 78 63 12 (set (reg:SI 88 [ D.7276 ])
        (reg/v:SI 91 [ stat ])) xdr_ref.c:93 -1
     (nil))
(code_label 63 10 64 13 4 "" [3 uses])
(note 64 63 65 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 69 13 (set (reg:SI 94 [ <retval> ])
        (reg:SI 88 [ D.7276 ])) -1
     (nil))
(insn 69 65 70 13 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) xdr_ref.c:94 -1
     (nil))
(insn 70 69 0 13 (use (reg/i:SI 0 ax)) xdr_ref.c:94 -1
     (nil))

;; Function xdr_pointer (*__GI_xdr_pointer, funcdef_no=47, decl_uid=6235, cgraph_uid=48, symbol_order=52)

Partition 0: size 4 align 4
	more_data

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 39.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 93 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_ref.c:119 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ objpp ])
        (reg:DI 4 si [ objpp ])) xdr_ref.c:119 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 95 [ obj_size ])
        (reg:SI 1 dx [ obj_size ])) xdr_ref.c:119 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 96 [ xdr_obj ])
        (reg:DI 2 cx [ xdr_obj ])) xdr_ref.c:119 -1
     (nil))
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 6 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 94 [ objpp ]) [1 *objpp_4(D)+0 S8 A64])
            (const_int 0 [0]))) xdr_ref.c:123 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 98)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr_ref.c:123 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 97 [ D.7287 ])
        (zero_extend:SI (reg:QI 98))) xdr_ref.c:123 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 more_data+0 S4 A32])
        (reg:SI 97 [ D.7287 ])) xdr_ref.c:123 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) xdr_ref.c:124 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (reg:DI 99)) xdr_ref.c:124 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) xdr_ref.c:124 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_bool") [flags 0x43]  <function_decl 0x2b7eeab41bd0 xdr_bool>) [0 xdr_bool S1 A8])
            (const_int 0 [0]))) xdr_ref.c:124 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_bool") [flags 0x43]  <function_decl 0x2b7eeab41bd0 xdr_bool>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 2 (set (reg:SI 87 [ D.7285 ])
        (reg:SI 0 ax)) xdr_ref.c:124 -1
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7285 ])
            (const_int 0 [0]))) xdr_ref.c:124 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) xdr_ref.c:124 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 36)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [4 more_data+0 S4 A32])
            (const_int 0 [0]))) xdr_ref.c:128 -1
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) xdr_ref.c:128 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 28)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 7 5 (set (mem/f:DI (reg/v/f:DI 94 [ objpp ]) [1 *objpp_4(D)+0 S8 A64])
        (const_int 0 [0])) xdr_ref.c:130 -1
     (nil))
(insn 7 25 26 5 (set (reg:SI 87 [ D.7285 ])
        (const_int 1 [0x1])) xdr_ref.c:131 -1
     (nil))
(jump_insn 26 7 27 5 (set (pc)
        (label_ref 36)) xdr_ref.c:131 -1
     (nil)
 -> 36)
(barrier 27 26 28)
(code_label 28 27 29 6 15 "" [1 uses])
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 96 [ xdr_obj ])) xdr_ref.c:133 -1
     (nil))
(insn 31 30 32 6 (set (reg:SI 1 dx)
        (reg/v:SI 95 [ obj_size ])) xdr_ref.c:133 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ objpp ])) xdr_ref.c:133 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) xdr_ref.c:133 -1
     (nil))
(call_insn 34 33 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_reference") [flags 0x3]  <function_decl 0x2b7eeab466c0 xdr_reference>) [0 xdr_reference S1 A8])
            (const_int 0 [0]))) xdr_ref.c:133 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_reference") [flags 0x3]  <function_decl 0x2b7eeab466c0 xdr_reference>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 35 34 36 6 (set (reg:SI 87 [ D.7285 ])
        (reg:SI 0 ax)) xdr_ref.c:133 -1
     (nil))
(code_label 36 35 37 7 14 "" [2 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 42 7 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.7285 ])) -1
     (nil))
(insn 42 38 43 7 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) xdr_ref.c:134 -1
     (nil))
(insn 43 42 0 7 (use (reg/i:SI 0 ax)) xdr_ref.c:134 -1
     (nil))
