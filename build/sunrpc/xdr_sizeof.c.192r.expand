
;; Function x_putbytes (x_putbytes, funcdef_no=40, decl_uid=5917, cgraph_uid=40, symbol_order=43)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 10.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 90 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:53 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ bp ])
        (reg:DI 4 si [ bp ])) xdr_sizeof.c:53 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 92 [ len ])
        (reg:SI 1 dx [ len ])) xdr_sizeof.c:53 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                        (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                            (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                    (reg/v:SI 92 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:54 -1
     (nil))
(insn 9 8 13 2 (set (reg:SI 89 [ <retval> ])
        (const_int 1 [0x1])) xdr_sizeof.c:55 -1
     (nil))
(insn 13 9 14 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) xdr_sizeof.c:56 -1
     (nil))
(insn 14 13 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:56 -1
     (nil))

;; Function x_getpostn (x_getpostn, funcdef_no=41, decl_uid=5920, cgraph_uid=41, symbol_order=44)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 8.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:60 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 91)
        (mem:SI (plus:DI (reg/v/f:DI 89 [ xdrs ])
                (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])) xdr_sizeof.c:61 -1
     (nil))
(insn 7 6 11 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 91)) xdr_sizeof.c:61 -1
     (nil))
(insn 11 7 12 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) xdr_sizeof.c:62 -1
     (nil))
(insn 12 11 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:62 -1
     (nil))

;; Function x_setpostn (x_setpostn, funcdef_no=42, decl_uid=5924, cgraph_uid=42, symbol_order=45)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 8.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 88 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:67 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 89 [ len ])
        (reg:SI 4 si [ len ])) xdr_sizeof.c:67 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (reg:SI 87 [ <retval> ])
        (const_int 0 [0])) xdr_sizeof.c:69 -1
     (nil))
(insn 11 7 12 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) xdr_sizeof.c:70 -1
     (nil))
(insn 12 11 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:70 -1
     (nil))

;; Function harmless (harmless, funcdef_no=44, decl_uid=5931, cgraph_uid=44, symbol_order=47)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 6.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg:SI 87 [ <retval> ])
        (const_int 0 [0])) xdr_sizeof.c:104 -1
     (nil))
(insn 9 5 10 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) xdr_sizeof.c:105 -1
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:105 -1
     (nil))

;; Function x_putint32 (x_putint32, funcdef_no=46, decl_uid=5938, cgraph_uid=46, symbol_order=49)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 9.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 90 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:122 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ int32p ])
        (reg:DI 4 si [ int32p ])) xdr_sizeof.c:122 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                        (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                            (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:123 -1
     (nil))
(insn 8 7 12 2 (set (reg:SI 89 [ <retval> ])
        (const_int 1 [0x1])) xdr_sizeof.c:124 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) xdr_sizeof.c:125 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:125 -1
     (nil))

;; Function x_destroy (x_destroy, funcdef_no=45, decl_uid=5934, cgraph_uid=45, symbol_order=48)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:109 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem:SI (plus:DI (reg/v/f:DI 88 [ xdrs ])
                (const_int 40 [0x28])) [4 xdrs_3(D)->x_handy+0 S4 A64])
        (const_int 0 [0])) xdr_sizeof.c:110 -1
     (nil))
(insn 7 6 8 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ xdrs ])
                (const_int 32 [0x20])) [3 xdrs_3(D)->x_base+0 S8 A64])
        (const_int 0 [0])) xdr_sizeof.c:111 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ D.6057 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ xdrs ])
                (const_int 24 [0x18])) [3 xdrs_3(D)->x_private+0 S8 A64])) xdr_sizeof.c:112 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6057 ])
            (const_int 0 [0]))) xdr_sizeof.c:112 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) xdr_sizeof.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 17)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6057 ])) xdr_sizeof.c:114 -1
     (nil))
(call_insn 13 12 14 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr_sizeof.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 17 4 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ xdrs ])
                (const_int 24 [0x18])) [3 xdrs_3(D)->x_private+0 S8 A64])
        (const_int 0 [0])) xdr_sizeof.c:115 -1
     (nil))
(code_label 17 14 18 6 6 "" [1 uses])
(note 18 17 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function x_inline (x_inline, funcdef_no=43, decl_uid=5928, cgraph_uid=43, symbol_order=46)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 12
Edge 3->9 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 49.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 102 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:74 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 103 [ len ])
        (reg:SI 4 si [ len ])) xdr_sizeof.c:74 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ len ])
            (const_int 0 [0]))) xdr_sizeof.c:75 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) xdr_sizeof.c:75 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 58)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 102 [ xdrs ]) [2 xdrs_5(D)->x_op+0 S4 A64])
            (const_int 0 [0]))) xdr_sizeof.c:77 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) xdr_sizeof.c:77 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 62)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 32 [0x20])) [3 xdrs_5(D)->x_base+0 S8 A64])) xdr_sizeof.c:79 -1
     (nil))
(insn 18 17 19 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 103 [ len ])
            (subreg:SI (reg/f:DI 104) 0))) xdr_sizeof.c:79 -1
     (nil))
(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) xdr_sizeof.c:79 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 25)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                        (const_int 40 [0x28])) [4 xdrs_5(D)->x_handy+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                            (const_int 40 [0x28])) [4 xdrs_5(D)->x_handy+0 S4 A64])
                    (reg/v:SI 103 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:82 -1
     (nil))
(insn 22 21 23 6 (set (reg/f:DI 87 [ D.6065 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 24 [0x18])) [3 xdrs_5(D)->x_private+0 S8 A64])) xdr_sizeof.c:83 -1
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (label_ref 46)) xdr_sizeof.c:83 -1
     (nil)
 -> 46)
(barrier 24 23 25)
(code_label 25 24 26 7 17 "" [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:DI 105)
        (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 24 [0x18])) [3 xdrs_5(D)->x_private+0 S8 A64])) xdr_sizeof.c:88 -1
     (nil))
(insn 28 27 29 7 (set (reg:DI 5 di)
        (reg:DI 105)) xdr_sizeof.c:88 -1
     (nil))
(call_insn 29 28 30 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr_sizeof.c:88 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 7 (set (reg:DI 106 [ D.6070 ])
        (zero_extend:DI (reg/v:SI 103 [ len ]))) xdr_sizeof.c:89 -1
     (nil))
(insn 31 30 32 7 (set (reg:DI 5 di)
        (reg:DI 106 [ D.6070 ])) xdr_sizeof.c:89 -1
     (nil))
(call_insn 32 31 33 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b6120e1d360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) xdr_sizeof.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b6120e1d360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 7 (set (reg/f:DI 107)
        (reg:DI 0 ax)) xdr_sizeof.c:89 -1
     (expr_list:REG_NOALIAS (reg/f:DI 107)
        (nil)))
(insn 34 33 35 7 (set (reg/f:DI 96 [ D.6071 ])
        (reg/f:DI 107)) xdr_sizeof.c:89 -1
     (nil))
(insn 35 34 36 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 24 [0x18])) [3 xdrs_5(D)->x_private+0 S8 A64])
        (reg/f:DI 96 [ D.6071 ])) xdr_sizeof.c:89 -1
     (nil))
(insn 36 35 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.6071 ])
            (const_int 0 [0]))) xdr_sizeof.c:89 -1
     (nil))
(jump_insn 37 36 38 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) xdr_sizeof.c:89 -1
     (int_list:REG_BR_PROB 9808 (nil))
 -> 42)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 6 8 (set (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 32 [0x20])) [3 xdrs_5(D)->x_base+0 S8 A64])
        (const_int 0 [0])) xdr_sizeof.c:91 -1
     (nil))
(insn 6 39 40 8 (set (reg/f:DI 87 [ D.6065 ])
        (const_int 0 [0])) xdr_sizeof.c:92 -1
     (nil))
(jump_insn 40 6 41 8 (set (pc)
        (label_ref 46)) xdr_sizeof.c:91 -1
     (nil)
 -> 46)
(barrier 41 40 42)
(code_label 42 41 43 9 18 "" [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                (const_int 32 [0x20])) [3 xdrs_5(D)->x_base+0 S8 A64])
        (zero_extend:DI (reg/v:SI 103 [ len ]))) xdr_sizeof.c:94 -1
     (nil))
(insn 45 44 7 9 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                        (const_int 40 [0x28])) [4 xdrs_5(D)->x_handy+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 102 [ xdrs ])
                            (const_int 40 [0x28])) [4 xdrs_5(D)->x_handy+0 S4 A64])
                    (reg/v:SI 103 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:95 -1
     (nil))
(insn 7 45 55 9 (set (reg/f:DI 87 [ D.6065 ])
        (reg/f:DI 96 [ D.6071 ])) xdr_sizeof.c:95 -1
     (nil))
(jump_insn 55 7 56 9 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
(barrier 56 55 58)
(code_label 58 56 57 10 19 "" [1 uses])
(note 57 58 8 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 8 57 59 10 (set (reg/f:DI 87 [ D.6065 ])
        (const_int 0 [0])) xdr_sizeof.c:76 -1
     (nil))
(jump_insn 59 8 60 10 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
(barrier 60 59 62)
(code_label 62 60 61 11 20 "" [1 uses])
(note 61 62 5 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 5 61 46 11 (set (reg/f:DI 87 [ D.6065 ])
        (const_int 0 [0])) xdr_sizeof.c:76 -1
     (nil))
(code_label 46 5 47 12 16 "" [4 uses])
(note 47 46 48 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 52 12 (set (reg:DI 101 [ <retval> ])
        (reg/f:DI 87 [ D.6065 ])) -1
     (nil))
(insn 52 48 53 12 (set (reg/i:DI 0 ax)
        (reg:DI 101 [ <retval> ])) xdr_sizeof.c:98 -1
     (nil))
(insn 53 52 0 12 (use (reg/i:DI 0 ax)) xdr_sizeof.c:98 -1
     (nil))

;; Function x_putlong (x_putlong, funcdef_no=50, decl_uid=5912, cgraph_uid=39, symbol_order=42)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 9.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 90 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_sizeof.c:44 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ longp ])
        (reg:DI 4 si [ longp ])) xdr_sizeof.c:44 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                        (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 90 [ xdrs ])
                            (const_int 40 [0x28])) [4 xdrs_2(D)->x_handy+0 S4 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:123 -1
     (nil))
(insn 8 7 12 2 (set (reg:SI 89 [ <retval> ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) xdr_sizeof.c:44 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) xdr_sizeof.c:44 -1
     (nil))

;; Function xdr_sizeof (*__GI_xdr_sizeof, funcdef_no=47, decl_uid=5825, cgraph_uid=47, symbol_order=50)

Partition 1: size 80 align 16
	ops
Partition 0: size 48 align 16
	x

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 50.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 92 [ func ])
        (reg:DI 5 di [ func ])) xdr_sizeof.c:129 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ data ])
        (reg:DI 4 si [ data ])) xdr_sizeof.c:129 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg/f:DI 94)
        (symbol_ref:DI ("x_putlong") [flags 0x3]  <function_decl 0x2b61211aee58 x_putlong>)) xdr_sizeof.c:138 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 ops.x_putlong+0 S8 A64])
        (reg/f:DI 94)) xdr_sizeof.c:138 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 95)
        (symbol_ref:DI ("x_putbytes") [flags 0x3]  <function_decl 0x2b61211ae1b0 x_putbytes>)) xdr_sizeof.c:139 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [3 ops.x_putbytes+0 S8 A64])
        (reg/f:DI 95)) xdr_sizeof.c:139 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 96)
        (symbol_ref:DI ("x_inline") [flags 0x3]  <function_decl 0x2b61211aebd0 x_inline>)) xdr_sizeof.c:140 -1
     (nil))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 ops.x_inline+0 S8 A128])
        (reg/f:DI 96)) xdr_sizeof.c:140 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 97)
        (symbol_ref:DI ("x_getpostn") [flags 0x3]  <function_decl 0x2b61211ae510 x_getpostn>)) xdr_sizeof.c:141 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [3 ops.x_getpostn+0 S8 A128])
        (reg/f:DI 97)) xdr_sizeof.c:141 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 98)
        (symbol_ref:DI ("x_setpostn") [flags 0x3]  <function_decl 0x2b61211ae870 x_setpostn>)) xdr_sizeof.c:142 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 ops.x_setpostn+0 S8 A64])
        (reg/f:DI 98)) xdr_sizeof.c:142 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 99)
        (symbol_ref:DI ("x_destroy") [flags 0x3]  <function_decl 0x2b61211b91b0 x_destroy>)) xdr_sizeof.c:143 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 ops.x_destroy+0 S8 A64])
        (reg/f:DI 99)) xdr_sizeof.c:143 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 100)
        (symbol_ref:DI ("x_putint32") [flags 0x3]  <function_decl 0x2b61211b9360 x_putint32>)) xdr_sizeof.c:144 -1
     (nil))
(insn 21 20 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 ops.x_putint32+0 S8 A64])
        (reg/f:DI 100)) xdr_sizeof.c:144 -1
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 101)
        (symbol_ref:DI ("harmless") [flags 0x3]  <function_decl 0x2b61211b9000 harmless>)) xdr_sizeof.c:147 -1
     (nil))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [3 ops.x_getlong+0 S8 A128])
        (reg/f:DI 101)) xdr_sizeof.c:147 -1
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 102)
        (symbol_ref:DI ("harmless") [flags 0x3]  <function_decl 0x2b61211b9000 harmless>)) xdr_sizeof.c:148 -1
     (nil))
(insn 25 24 26 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [3 ops.x_getbytes+0 S8 A128])
        (reg/f:DI 102)) xdr_sizeof.c:148 -1
     (nil))
(insn 26 25 27 2 (set (reg/f:DI 103)
        (symbol_ref:DI ("harmless") [flags 0x3]  <function_decl 0x2b61211b9000 harmless>)) xdr_sizeof.c:149 -1
     (nil))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 ops.x_getint32+0 S8 A128])
        (reg/f:DI 103)) xdr_sizeof.c:149 -1
     (nil))
(insn 28 27 29 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [2 x.x_op+0 S4 A128])
        (const_int 0 [0])) xdr_sizeof.c:151 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:152 -1
     (nil))
(insn 30 29 31 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [3 x.x_ops+0 S8 A64])
        (reg:DI 104)) xdr_sizeof.c:152 -1
     (nil))
(insn 31 30 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [4 x.x_handy+0 S4 A64])
        (const_int 0 [0])) xdr_sizeof.c:153 -1
     (nil))
(insn 32 31 33 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 x.x_private+0 S8 A64])
        (const_int 0 [0])) xdr_sizeof.c:154 -1
     (nil))
(insn 33 32 34 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [3 x.x_base+0 S8 A128])
        (const_int 0 [0])) xdr_sizeof.c:155 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) xdr_sizeof.c:157 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ data ])) xdr_sizeof.c:157 -1
     (nil))
(insn 36 35 37 2 (set (reg:DI 5 di)
        (reg:DI 105)) xdr_sizeof.c:157 -1
     (nil))
(insn 37 36 38 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr_sizeof.c:157 -1
     (nil))
(call_insn 38 37 39 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 92 [ func ]) [0 *(bool_t (*<Tf52>) (struct XDR *, void *, ...)) func_18(D) S1 A8])
            (const_int 0 [0]))) xdr_sizeof.c:157 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 39 38 40 2 (set (reg/v:SI 88 [ stat ])
        (reg:SI 0 ax)) xdr_sizeof.c:157 -1
     (nil))
(insn 40 39 41 2 (set (reg:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 x.x_private+0 S8 A64])) xdr_sizeof.c:158 -1
     (nil))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (reg:DI 106)) xdr_sizeof.c:158 -1
     (nil))
(call_insn 42 41 43 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr_sizeof.c:158 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b6120e13e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 44 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ stat ])
            (const_int 1 [0x1]))) xdr_sizeof.c:159 -1
     (nil))
(jump_insn 44 43 45 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) xdr_sizeof.c:159 612 {*jcc_1}
     (int_list:REG_BR_PROB 6218 (nil))
 -> 59)
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 56 4 (set (reg:DI 87 [ D.6080 ])
        (zero_extend:DI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -88 [0xffffffffffffffa8])) [4 x.x_handy+0 S4 A64]))) xdr_sizeof.c:159 -1
     (nil))
(jump_insn 56 46 57 4 (set (pc)
        (label_ref 47)) -1
     (nil)
 -> 47)
(barrier 57 56 59)
(code_label 59 57 58 5 27 "" [1 uses])
(note 58 59 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 58 47 5 (set (reg:DI 87 [ D.6080 ])
        (const_int 0 [0])) xdr_sizeof.c:159 -1
     (nil))
(code_label 47 5 48 6 26 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 53 6 (set (reg:DI 91 [ <retval> ])
        (reg:DI 87 [ D.6080 ])) xdr_sizeof.c:159 -1
     (nil))
(insn 53 49 54 6 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) xdr_sizeof.c:160 -1
     (nil))
(insn 54 53 0 6 (use (reg/i:DI 0 ax)) xdr_sizeof.c:160 -1
     (nil))
