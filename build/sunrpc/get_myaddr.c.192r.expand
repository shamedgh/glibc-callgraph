
;; Function get_myaddress (*__GI_get_myaddress, funcdef_no=43, decl_uid=6620, cgraph_uid=43, symbol_order=47)

Partition 0: size 8 align 8
	ifa

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14
Edge 13->5 redirected to 17
Purged non-fallthru edges from bb 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 12->14 redirected to 15
Forwarding edge 13->14 to 15 failed.
Deleted label in block 14.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 13->14 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 100 [ addr ])
        (reg:DI 5 di [ addr ])) get_myaddr.c:57 -1
     (nil))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 3 10 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:60 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 101)) get_myaddr.c:60 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getifaddrs") [flags 0x43]  <function_decl 0x2b0c9550a948 getifaddrs>) [0 getifaddrs S1 A8])
            (const_int 0 [0]))) get_myaddr.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getifaddrs") [flags 0x43]  <function_decl 0x2b0c9550a948 getifaddrs>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg:SI 88 [ D.8060 ])
        (reg:SI 0 ax)) get_myaddr.c:60 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8060 ])
            (const_int 0 [0]))) get_myaddr.c:60 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) get_myaddr.c:60 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 21)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b0c9553b630 *.LC0>)) get_myaddr.c:62 -1
     (nil))
(call_insn 17 16 18 4 (call (mem:QI (symbol_ref:DI ("*__GI_perror") [flags 0x43]  <function_decl 0x2b0c95384798 perror>) [0 perror S1 A8])
        (const_int 0 [0])) get_myaddr.c:62 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_perror") [flags 0x43]  <function_decl 0x2b0c95384798 perror>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) get_myaddr.c:63 -1
     (nil))
(call_insn 19 18 20 4 (call (mem:QI (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2b0c9504d000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) get_myaddr.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_exit") [flags 0x43]  <function_decl 0x2b0c9504d000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 20 19 21)
(code_label 21 20 22 5 2 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 4 5 (set (reg/v/f:DI 99 [ run ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ifa+0 S8 A64])) -1
     (nil))
(insn 4 23 74 5 (set (reg/v:SI 87 [ loopback ])
        (const_int 0 [0])) get_myaddr.c:60 -1
     (nil))
(jump_insn 74 4 75 5 (set (pc)
        (label_ref 24)) -1
     (nil)
 -> 24)
(barrier 75 74 77)
(code_label 77 75 76 6 9 "" [1 uses])
(note 76 77 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 76 24 6 (set (reg/v:SI 87 [ loopback ])
        (reg/v:SI 98 [ loopback ])) get_myaddr.c:89 -1
     (nil))
(code_label 24 5 25 7 3 ("again") [1 uses])
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ run ])
            (const_int 0 [0]))) get_myaddr.c:71 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) get_myaddr.c:71 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 63)
(note 28 27 6 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 6 28 60 8 (set (reg/v/f:DI 91 [ run ])
        (reg/v/f:DI 99 [ run ])) get_myaddr.c:71 -1
     (nil))
(code_label 60 6 29 9 8 "" [1 uses])
(note 29 60 30 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 9 (set (reg:SI 89 [ D.8061 ])
        (mem:SI (plus:DI (reg/v/f:DI 91 [ run ])
                (const_int 16 [0x10])) [3 run_28->ifa_flags+0 S4 A64])) get_myaddr.c:73 -1
     (nil))
(insn 31 30 32 9 (parallel [
            (set (reg:SI 102 [ D.8061 ])
                (and:SI (reg:SI 89 [ D.8061 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:73 -1
     (nil))
(insn 32 31 33 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.8061 ])
            (const_int 0 [0]))) get_myaddr.c:73 -1
     (nil))
(jump_insn 33 32 34 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) get_myaddr.c:73 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 57)
(note 34 33 35 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 10 (set (reg/f:DI 92 [ D.8062 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 91 [ run ])
                (const_int 24 [0x18])) [1 run_28->ifa_addr+0 S8 A64])) get_myaddr.c:74 -1
     (nil))
(insn 36 35 37 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.8062 ])
            (const_int 0 [0]))) get_myaddr.c:74 -1
     (nil))
(jump_insn 37 36 38 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) get_myaddr.c:74 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 57)
(note 38 37 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:HI (reg/f:DI 92 [ D.8062 ]) [6 _11->sa_family+0 S2 A16])
            (const_int 2 [0x2]))) get_myaddr.c:75 -1
     (nil))
(jump_insn 40 39 41 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) get_myaddr.c:75 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 57)
(note 41 40 42 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 12 (parallel [
            (set (reg:SI 103)
                (lshiftrt:SI (reg:SI 89 [ D.8061 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:77 -1
     (nil))
(insn 43 42 44 12 (parallel [
            (set (reg:SI 104)
                (xor:SI (reg:SI 103)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:77 -1
     (nil))
(insn 44 43 45 12 (parallel [
            (set (reg:QI 105 [ D.8063 ])
                (and:QI (subreg:QI (reg:SI 104) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:77 -1
     (nil))
(insn 45 44 46 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.8063 ])
            (const_int 0 [0]))) get_myaddr.c:77 -1
     (nil))
(jump_insn 46 45 78 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 80)
            (pc))) get_myaddr.c:77 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 80)
(note 78 46 47 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 47 78 48 13 (parallel [
            (set (reg:QI 106 [ D.8063 ])
                (and:QI (subreg:QI (reg/v:SI 87 [ loopback ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) get_myaddr.c:77 -1
     (nil))
(insn 48 47 49 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ D.8063 ])
            (const_int 0 [0]))) get_myaddr.c:77 -1
     (nil))
(jump_insn 49 48 79 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) get_myaddr.c:77 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 57)
(note 79 49 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(code_label 80 79 51 15 10 "" [1 uses])
(note 51 80 52 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 15 (set (reg:TI 107)
        (mem:TI (reg/f:DI 92 [ D.8062 ]) [7 MEM[(struct sockaddr_in *)_11]+0 S16 A32])) get_myaddr.c:79 -1
     (nil))
(insn 53 52 54 15 (set (mem:TI (reg/v/f:DI 100 [ addr ]) [7 *addr_15(D)+0 S16 A32])
        (reg:TI 107)) get_myaddr.c:79 -1
     (nil))
(insn 54 53 55 15 (set (mem:HI (plus:DI (reg/v/f:DI 100 [ addr ])
                (const_int 2 [0x2])) [6 addr_15(D)->sin_port+0 S2 A16])
        (const_int 28416 [0x6f00])) get_myaddr.c:80 -1
     (nil))
(jump_insn 55 54 56 15 (set (pc)
        (label_ref 68)) get_myaddr.c:81 -1
     (nil)
 -> 68)
(barrier 56 55 57)
(code_label 57 56 58 16 5 "" [4 uses])
(note 58 57 59 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 61 16 (set (reg/v/f:DI 91 [ run ])
        (mem/f:DI (reg/v/f:DI 91 [ run ]) [1 run_28->ifa_next+0 S8 A64])) get_myaddr.c:84 -1
     (nil))
(insn 61 59 62 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ run ])
            (const_int 0 [0]))) get_myaddr.c:71 -1
     (nil))
(jump_insn 62 61 63 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) get_myaddr.c:71 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 60)
(code_label 63 62 64 17 4 "" [1 uses])
(note 64 63 65 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 17 (set (reg/v:SI 98 [ loopback ])
        (const_int 1 [0x1])) get_myaddr.c:89 -1
     (nil))
(insn 66 65 67 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ loopback ])
            (const_int 0 [0]))) get_myaddr.c:87 -1
     (nil))
(jump_insn 67 66 68 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) get_myaddr.c:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 9700 (nil))
 -> 77)
(code_label 68 67 69 18 7 ("out") [1 uses])
(note 69 68 70 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 18 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ run ])) get_myaddr.c:93 -1
     (nil))
(call_insn 71 70 0 18 (call (mem:QI (symbol_ref:DI ("*__GI_freeifaddrs") [flags 0x43]  <function_decl 0x2b0c9550aa20 freeifaddrs>) [0 freeifaddrs S1 A8])
        (const_int 0 [0])) get_myaddr.c:93 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_freeifaddrs") [flags 0x43]  <function_decl 0x2b0c9550aa20 freeifaddrs>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
