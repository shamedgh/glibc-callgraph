
;; Function xdr_float (*__GI_xdr_float, funcdef_no=39, decl_uid=5806, cgraph_uid=39, symbol_order=42)

Partition 0: size 8 align 8
	tmp	tmp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 17.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 9->11 redirected to 13
deleting block 11
Removing jump 58.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_float.c:84 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ fp ])
        (reg:DI 4 si [ fp ])) xdr_float.c:84 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 100 [ D.6070 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr_float.c:91 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.6070 ])
            (const_int 1 [0x1]))) xdr_float.c:91 -1
     (nil))
(jump_insn 12 11 68 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) xdr_float.c:91 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 37)
(note 68 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 68 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.6070 ])
            (const_int 1 [0x1]))) xdr_float.c:91 -1
     (nil))
(jump_insn 14 13 69 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr_float.c:91 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 69 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 69 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.6070 ])
            (const_int 2 [0x2]))) xdr_float.c:91 -1
     (nil))
(jump_insn 16 15 70 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 67)
            (pc))) xdr_float.c:91 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 67)
(note 70 16 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 70 21 6 (set (reg:SI 87 [ D.6069 ])
        (const_int 0 [0])) xdr_float.c:157 -1
     (nil))
(jump_insn 21 6 22 6 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
(barrier 22 21 23)
(code_label 23 22 24 8 4 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:SI 102)
        (mem:SI (reg/v/f:DI 99 [ fp ]) [4 MEM[(int *)fp_8(D)]+0 S4 A32])) xdr_float.c:115 -1
     (nil))
(insn 26 25 27 8 (set (reg:DI 101)
        (sign_extend:DI (reg:SI 102))) xdr_float.c:115 -1
     (nil))
(insn 27 26 28 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 tmp+0 S8 A64])
        (reg:DI 101)) xdr_float.c:115 -1
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:116 -1
     (nil))
(insn 29 28 30 8 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr_float.c:116 -1
     (nil))
(insn 30 29 31 8 (set (reg/f:DI 105)
        (mem/f:DI (plus:DI (reg/f:DI 104)
                (const_int 8 [0x8])) [3 _12->x_putlong+0 S8 A64])) xdr_float.c:116 -1
     (nil))
(insn 31 30 32 8 (set (reg:DI 4 si)
        (reg:DI 103)) xdr_float.c:116 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr_float.c:116 -1
     (nil))
(call_insn 33 32 34 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105) [0 *_13 S1 A8])
            (const_int 0 [0]))) xdr_float.c:116 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 8 (set (reg:SI 87 [ D.6069 ])
        (reg:SI 0 ax)) xdr_float.c:116 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
(barrier 36 35 37)
(code_label 37 36 38 9 3 "" [1 uses])
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:146 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 107)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr_float.c:146 -1
     (nil))
(insn 41 40 42 9 (set (reg/f:DI 108)
        (mem/f:DI (reg/f:DI 107) [3 _17->x_getlong+0 S8 A64])) xdr_float.c:146 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 4 si)
        (reg:DI 106)) xdr_float.c:146 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr_float.c:146 -1
     (nil))
(call_insn 44 43 45 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 108) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr_float.c:146 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 44 46 9 (set (reg:SI 87 [ D.6069 ])
        (reg:SI 0 ax)) xdr_float.c:146 -1
     (nil))
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.6069 ])
            (const_int 0 [0]))) xdr_float.c:146 -1
     (nil))
(jump_insn 47 46 48 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) xdr_float.c:146 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 55)
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 tmp+0 S8 A64])) xdr_float.c:147 -1
     (nil))
(insn 50 49 7 10 (set (mem:SI (reg/v/f:DI 99 [ fp ]) [4 MEM[(int *)fp_8(D)]+0 S4 A32])
        (subreg:SI (reg:DI 109) 0)) xdr_float.c:147 -1
     (nil))
(insn 7 50 51 10 (set (reg:SI 87 [ D.6069 ])
        (const_int 1 [0x1])) xdr_float.c:148 -1
     (nil))
(jump_insn 51 7 52 10 (set (pc)
        (label_ref 55)) xdr_float.c:148 -1
     (nil)
 -> 55)
(barrier 52 51 67)
(code_label 67 52 66 12 7 "" [1 uses])
(note 66 67 5 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 5 66 55 12 (set (reg:SI 87 [ D.6069 ])
        (const_int 1 [0x1])) xdr_float.c:155 -1
     (nil))
(code_label 55 5 56 13 5 "" [4 uses])
(note 56 55 57 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 61 13 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.6069 ])) -1
     (nil))
(insn 61 57 62 13 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr_float.c:158 -1
     (nil))
(insn 62 61 0 13 (use (reg/i:SI 0 ax)) xdr_float.c:158 -1
     (nil))

;; Function xdr_double (*__GI_xdr_double, funcdef_no=40, decl_uid=5809, cgraph_uid=41, symbol_order=45)

Partition 0: size 16 align 16
	tmp	tmp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11
Edge 2->11 redirected to 14
Purged edges from bb 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 18.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 8->10 redirected to 16
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 92.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 110 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr_float.c:203 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 111 [ dp ])
        (reg:DI 4 si [ dp ])) xdr_float.c:203 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:SI 112 [ D.6091 ])
        (mem:SI (reg/v/f:DI 110 [ xdrs ]) [2 xdrs_5(D)->x_op+0 S4 A64])) xdr_float.c:211 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.6091 ])
            (const_int 1 [0x1]))) xdr_float.c:211 -1
     (nil))
(jump_insn 13 12 102 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) xdr_float.c:211 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 58)
(note 102 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 102 15 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 112 [ D.6091 ])
            (const_int 1 [0x1]))) xdr_float.c:211 -1
     (nil))
(jump_insn 15 14 103 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) xdr_float.c:211 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 24)
(note 103 15 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 103 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.6091 ])
            (const_int 2 [0x2]))) xdr_float.c:211 -1
     (nil))
(jump_insn 17 16 104 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 101)
            (pc))) xdr_float.c:211 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 101)
(note 104 17 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 104 22 6 (set (reg:SI 104 [ D.6094 ])
        (const_int 0 [0])) xdr_float.c:297 -1
     (nil))
(jump_insn 22 8 23 6 (set (pc)
        (label_ref 89)) -1
     (nil)
 -> 89)
(barrier 23 22 24)
(code_label 24 23 25 8 16 "" [1 uses])
(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 8 (set (reg:SI 114)
        (mem:SI (plus:DI (reg/v/f:DI 111 [ dp ])
                (const_int 4 [0x4])) [4 MEM[(int *)dp_7(D) + 4B]+0 S4 A32])) xdr_float.c:244 -1
     (nil))
(insn 27 26 28 8 (set (reg:DI 113)
        (sign_extend:DI (reg:SI 114))) xdr_float.c:244 -1
     (nil))
(insn 28 27 29 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 tmp+0 S8 A128])
        (reg:DI 113)) xdr_float.c:244 -1
     (nil))
(insn 29 28 30 8 (set (reg:SI 116)
        (mem:SI (reg/v/f:DI 111 [ dp ]) [4 MEM[(int *)dp_7(D)]+0 S4 A32])) xdr_float.c:245 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 115)
        (sign_extend:DI (reg:SI 116))) xdr_float.c:245 -1
     (nil))
(insn 31 30 32 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 tmp+8 S8 A64])
        (reg:DI 115)) xdr_float.c:245 -1
     (nil))
(insn 32 31 33 8 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:246 -1
     (nil))
(insn 33 32 34 8 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr_float.c:246 -1
     (nil))
(insn 34 33 35 8 (set (reg/f:DI 119)
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 8 [0x8])) [3 _30->x_putlong+0 S8 A64])) xdr_float.c:246 -1
     (nil))
(insn 35 34 36 8 (set (reg:DI 4 si)
        (reg:DI 117)) xdr_float.c:246 -1
     (nil))
(insn 36 35 37 8 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr_float.c:246 -1
     (nil))
(call_insn 37 36 38 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 119) [0 *_31 S1 A8])
            (const_int 0 [0]))) xdr_float.c:246 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 8 (set (reg:SI 104 [ D.6094 ])
        (reg:SI 0 ax)) xdr_float.c:246 -1
     (nil))
(insn 39 38 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.6094 ])
            (const_int 0 [0]))) xdr_float.c:246 -1
     (nil))
(jump_insn 40 39 41 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 89)
            (pc))) xdr_float.c:246 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 89)
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:247 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg:DI 120)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:247 -1
     (nil))
(insn 44 43 45 9 (set (reg/f:DI 122)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr_float.c:247 -1
     (nil))
(insn 45 44 46 9 (set (reg/f:DI 123)
        (mem/f:DI (plus:DI (reg/f:DI 122)
                (const_int 8 [0x8])) [3 _33->x_putlong+0 S8 A64])) xdr_float.c:247 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 4 si)
        (reg:DI 121)) xdr_float.c:247 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr_float.c:247 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 123) [0 *_34 S1 A8])
            (const_int 0 [0]))) xdr_float.c:247 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 9 (set (reg:SI 107 [ D.6094 ])
        (reg:SI 0 ax)) xdr_float.c:247 -1
     (nil))
(insn 50 49 51 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.6094 ])
            (const_int 0 [0]))) xdr_float.c:246 -1
     (nil))
(insn 51 50 52 9 (set (reg:QI 125)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr_float.c:246 -1
     (nil))
(insn 52 51 53 9 (set (reg:SI 124 [ D.6097 ])
        (zero_extend:SI (reg:QI 125))) xdr_float.c:246 -1
     (nil))
(insn 53 52 56 9 (set (reg:SI 104 [ D.6094 ])
        (reg:SI 124 [ D.6097 ])) xdr_float.c:246 -1
     (nil))
(jump_insn 56 53 57 9 (set (pc)
        (label_ref 89)) -1
     (nil)
 -> 89)
(barrier 57 56 58)
(code_label 58 57 59 11 15 "" [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:284 -1
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg:DI 126)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:284 -1
     (nil))
(insn 62 61 63 11 (set (reg/f:DI 128)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr_float.c:284 -1
     (nil))
(insn 63 62 64 11 (set (reg/f:DI 129)
        (mem/f:DI (reg/f:DI 128) [3 _8->x_getlong+0 S8 A64])) xdr_float.c:284 -1
     (nil))
(insn 64 63 65 11 (set (reg:DI 4 si)
        (reg:DI 127)) xdr_float.c:284 -1
     (nil))
(insn 65 64 66 11 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr_float.c:284 -1
     (nil))
(call_insn 66 65 67 11 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 129) [0 *_9 S1 A8])
            (const_int 0 [0]))) xdr_float.c:284 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 67 66 68 11 (set (reg:SI 90 [ D.6094 ])
        (reg:SI 0 ax)) xdr_float.c:284 -1
     (nil))
(insn 68 67 69 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.6094 ])
            (const_int 0 [0]))) xdr_float.c:284 -1
     (nil))
(jump_insn 69 68 70 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) xdr_float.c:284 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 87)
(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 12 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr_float.c:285 -1
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 131)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr_float.c:285 -1
     (nil))
(insn 73 72 74 12 (set (reg/f:DI 132)
        (mem/f:DI (reg/f:DI 131) [3 _12->x_getlong+0 S8 A64])) xdr_float.c:285 -1
     (nil))
(insn 74 73 75 12 (set (reg:DI 4 si)
        (reg:DI 130)) xdr_float.c:285 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr_float.c:285 -1
     (nil))
(call_insn 76 75 77 12 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 132) [0 *_13 S1 A8])
            (const_int 0 [0]))) xdr_float.c:285 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 76 78 12 (set (reg:SI 93 [ D.6094 ])
        (reg:SI 0 ax)) xdr_float.c:285 -1
     (nil))
(insn 78 77 79 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.6094 ])
            (const_int 0 [0]))) xdr_float.c:284 -1
     (nil))
(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) xdr_float.c:284 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 87)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:DI 133)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 tmp+0 S8 A128])) xdr_float.c:286 -1
     (nil))
(insn 82 81 83 13 (set (mem:SI (reg/v/f:DI 111 [ dp ]) [4 MEM[(int *)dp_7(D)]+0 S4 A32])
        (subreg:SI (reg:DI 133) 0)) xdr_float.c:286 -1
     (nil))
(insn 83 82 84 13 (set (reg:DI 134)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 tmp+8 S8 A64])) xdr_float.c:287 -1
     (nil))
(insn 84 83 7 13 (set (mem:SI (plus:DI (reg/v/f:DI 111 [ dp ])
                (const_int 4 [0x4])) [4 MEM[(int *)dp_7(D) + 4B]+0 S4 A32])
        (subreg:SI (reg:DI 134) 0)) xdr_float.c:287 -1
     (nil))
(insn 7 84 85 13 (set (reg:SI 104 [ D.6094 ])
        (const_int 1 [0x1])) xdr_float.c:288 -1
     (nil))
(jump_insn 85 7 86 13 (set (pc)
        (label_ref 89)) xdr_float.c:288 -1
     (nil)
 -> 89)
(barrier 86 85 87)
(code_label 87 86 88 14 19 "" [2 uses])
(note 88 87 5 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 5 88 98 14 (set (reg:SI 104 [ D.6094 ])
        (const_int 0 [0])) xdr_float.c:297 -1
     (nil))
(jump_insn 98 5 99 14 (set (pc)
        (label_ref 89)) xdr_float.c:291 -1
     (nil)
 -> 89)
(barrier 99 98 101)
(code_label 101 99 100 15 20 "" [1 uses])
(note 100 101 6 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 6 100 89 15 (set (reg:SI 104 [ D.6094 ])
        (const_int 1 [0x1])) xdr_float.c:295 -1
     (nil))
(code_label 89 6 90 16 17 "" [5 uses])
(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 95 16 (set (reg:SI 109 [ <retval> ])
        (reg:SI 104 [ D.6094 ])) -1
     (nil))
(insn 95 91 96 16 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) xdr_float.c:298 -1
     (nil))
(insn 96 95 0 16 (use (reg/i:SI 0 ax)) xdr_float.c:298 -1
     (nil))
