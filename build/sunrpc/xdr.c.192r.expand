
;; Function *__GI_xdr_opaque.part.10 (*__GI_xdr_opaque.part.10, funcdef_no=78, decl_uid=7675, cgraph_uid=10, symbol_order=135)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14
Edge 4->14 redirected to 17
Purged edges from bb 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 9 failed.
Removing jump 27.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 92.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 101 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:538 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 102 [ cp ])
        (reg:DI 4 si [ cp ])) xdr.c:538 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 103 [ cnt ])
        (reg:SI 1 dx [ cnt ])) xdr.c:538 -1
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (parallel [
            (set (reg/v:SI 87 [ rndup ])
                (and:SI (reg/v:SI 103 [ cnt ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:552 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ rndup ])
            (const_int 0 [0]))) xdr.c:553 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) xdr.c:553 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 18)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 104)
        (const_int 4 [0x4])) xdr.c:554 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg/v:SI 87 [ rndup ])
                (minus:SI (reg:SI 104)
                    (reg/v:SI 87 [ rndup ])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:554 -1
     (nil))
(code_label 18 17 19 5 2 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 105 [ D.7720 ])
        (mem:SI (reg/v/f:DI 101 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:556 -1
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.7720 ])
            (const_int 1 [0x1]))) xdr.c:556 -1
     (nil))
(jump_insn 22 21 100 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) xdr.c:556 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 33)
(note 100 22 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 100 24 6 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 105 [ D.7720 ])
            (const_int 1 [0x1]))) xdr.c:556 -1
     (nil))
(jump_insn 24 23 101 6 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) xdr.c:556 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 64)
(note 101 24 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 101 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ D.7720 ])
            (const_int 2 [0x2]))) xdr.c:556 -1
     (nil))
(jump_insn 26 25 102 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) xdr.c:556 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 99)
(note 102 26 9 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 9 102 31 8 (set (reg:SI 94 [ D.7723 ])
        (const_int 0 [0])) xdr.c:579 -1
     (nil))
(jump_insn 31 9 32 8 (set (pc)
        (label_ref 89)) -1
     (nil)
 -> 89)
(barrier 32 31 33)
(code_label 33 32 34 10 4 "" [1 uses])
(note 34 33 35 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 10 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:559 -1
     (nil))
(insn 36 35 37 10 (set (reg/f:DI 107)
        (mem/f:DI (plus:DI (reg/f:DI 106)
                (const_int 16 [0x10])) [3 _6->x_getbytes+0 S8 A64])) xdr.c:559 -1
     (nil))
(insn 37 36 38 10 (set (reg:SI 1 dx)
        (reg/v:SI 103 [ cnt ])) xdr.c:559 -1
     (nil))
(insn 38 37 39 10 (set (reg:DI 4 si)
        (reg/v/f:DI 102 [ cp ])) xdr.c:559 -1
     (nil))
(insn 39 38 40 10 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) xdr.c:559 -1
     (nil))
(call_insn 40 39 41 10 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 107) [0 *_7 S1 A8])
            (const_int 0 [0]))) xdr.c:559 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 41 40 42 10 (set (reg:SI 91 [ D.7723 ])
        (reg:SI 0 ax)) xdr.c:559 -1
     (nil))
(insn 42 41 43 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.7723 ])
            (const_int 0 [0]))) xdr.c:559 -1
     (nil))
(jump_insn 43 42 73 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) xdr.c:559 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 47)
(code_label 73 43 44 11 9 "" [1 uses])
(note 44 73 7 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 7 44 45 11 (set (reg:SI 94 [ D.7723 ])
        (const_int 0 [0])) xdr.c:561 -1
     (nil))
(jump_insn 45 7 46 11 (set (pc)
        (label_ref 89)) xdr.c:559 -1
     (nil)
 -> 89)
(barrier 46 45 47)
(code_label 47 46 48 12 7 "" [1 uses])
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ rndup ])
            (const_int 0 [0]))) xdr.c:563 -1
     (nil))
(jump_insn 50 49 77 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) xdr.c:563 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 54)
(code_label 77 50 51 13 10 "" [1 uses])
(note 51 77 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 51 52 13 (set (reg:SI 94 [ D.7723 ])
        (const_int 1 [0x1])) xdr.c:564 -1
     (nil))
(jump_insn 52 8 53 13 (set (pc)
        (label_ref 89)) xdr.c:563 -1
     (nil)
 -> 89)
(barrier 53 52 54)
(code_label 54 53 55 14 8 "" [1 uses])
(note 55 54 56 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 14 (set (reg/f:DI 108)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:565 -1
     (nil))
(insn 57 56 58 14 (set (reg/f:DI 109)
        (mem/f:DI (plus:DI (reg/f:DI 108)
                (const_int 16 [0x10])) [3 _11->x_getbytes+0 S8 A64])) xdr.c:565 -1
     (nil))
(insn 58 57 59 14 (set (reg:SI 1 dx)
        (reg/v:SI 87 [ rndup ])) xdr.c:565 -1
     (nil))
(insn 59 58 60 14 (set (reg:DI 4 si)
        (symbol_ref:DI ("crud.7173") [flags 0x2]  <var_decl 0x2b62b0a24360 crud>)) xdr.c:565 -1
     (nil))
(insn 60 59 61 14 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) xdr.c:565 -1
     (nil))
(call_insn/j 61 60 62 14 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 109) [0 *_12 S1 A8])
            (const_int 0 [0]))) xdr.c:565 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 62 61 64)
(code_label 64 62 65 15 5 "" [1 uses])
(note 65 64 66 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 15 (set (reg/f:DI 110)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:568 -1
     (nil))
(insn 67 66 68 15 (set (reg/f:DI 111)
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 24 [0x18])) [3 _14->x_putbytes+0 S8 A64])) xdr.c:568 -1
     (nil))
(insn 68 67 69 15 (set (reg:SI 1 dx)
        (reg/v:SI 103 [ cnt ])) xdr.c:568 -1
     (nil))
(insn 69 68 70 15 (set (reg:DI 4 si)
        (reg/v/f:DI 102 [ cp ])) xdr.c:568 -1
     (nil))
(insn 70 69 71 15 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) xdr.c:568 -1
     (nil))
(call_insn 71 70 72 15 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 111) [0 *_15 S1 A8])
            (const_int 0 [0]))) xdr.c:568 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 72 71 74 15 (set (reg:SI 97 [ D.7723 ])
        (reg:SI 0 ax)) xdr.c:568 -1
     (nil))
(insn 74 72 75 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.7723 ])
            (const_int 0 [0]))) xdr.c:568 -1
     (nil))
(jump_insn 75 74 76 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) xdr.c:568 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 73)
(note 76 75 78 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 79 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ rndup ])
            (const_int 0 [0]))) xdr.c:572 -1
     (nil))
(jump_insn 79 78 80 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) xdr.c:572 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 77)
(note 80 79 81 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 17 (set (reg/f:DI 112)
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:574 -1
     (nil))
(insn 82 81 83 17 (set (reg/f:DI 113)
        (mem/f:DI (plus:DI (reg/f:DI 112)
                (const_int 24 [0x18])) [3 _17->x_putbytes+0 S8 A64])) xdr.c:574 -1
     (nil))
(insn 83 82 84 17 (set (reg:SI 1 dx)
        (reg/v:SI 87 [ rndup ])) xdr.c:574 -1
     (nil))
(insn 84 83 85 17 (set (reg:DI 4 si)
        (symbol_ref:DI ("xdr_zero") [flags 0x2]  <var_decl 0x2b62b0a246c0 xdr_zero>)) xdr.c:574 -1
     (nil))
(insn 85 84 86 17 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) xdr.c:574 -1
     (nil))
(call_insn/j 86 85 87 17 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 113) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:574 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 87 86 99)
(code_label 99 87 98 18 11 "" [1 uses])
(note 98 99 6 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 6 98 89 18 (set (reg:SI 94 [ D.7723 ])
        (const_int 1 [0x1])) xdr.c:577 -1
     (nil))
(code_label 89 6 90 19 6 "" [3 uses])
(note 90 89 91 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 95 19 (set (reg:SI 100 [ <retval> ])
        (reg:SI 94 [ D.7723 ])) -1
     (nil))
(insn 95 91 96 19 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) xdr.c:580 -1
     (nil))
(insn 96 95 0 19 (use (reg/i:SI 0 ax)) xdr.c:580 -1
     (nil))

;; Function xdr_free (*__GI_xdr_free, funcdef_no=46, decl_uid=7004, cgraph_uid=46, symbol_order=50)

Partition 0: size 48 align 16
	x

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ proc ])
        (reg:DI 5 di [ proc ])) xdr.c:67 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 88 [ objp ])
        (reg:DI 4 si [ objp ])) xdr.c:67 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [2 x.x_op+0 S4 A128])
        (const_int 2 [0x2])) xdr.c:70 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:71 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ objp ])) xdr.c:71 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 89)) xdr.c:71 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr.c:71 -1
     (nil))
(call_insn 12 11 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 87 [ proc ]) [0 *(bool_t (*<T13af>) (struct XDR *, void *, ...)) proc_3(D) S1 A8])
            (const_int 0 [0]))) xdr.c:71 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; Function xdr_void (*__GI_xdr_void, funcdef_no=47, decl_uid=6839, cgraph_uid=48, symbol_order=53)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 6.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) xdr.c:85 -1
     (nil))
(insn 9 5 10 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) xdr.c:86 -1
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) xdr.c:86 -1
     (nil))

;; Function xdr_u_int (*__GI_xdr_u_int, funcdef_no=49, decl_uid=6851, cgraph_uid=52, symbol_order=59)

Partition 1: size 8 align 8
	l	l

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 12 failed.
Edge 9->11 redirected to 13
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 54.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:138 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ up ])
        (reg:DI 4 si [ up ])) xdr.c:138 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 100 [ D.7741 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:142 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7741 ])
            (const_int 1 [0x1]))) xdr.c:142 -1
     (nil))
(jump_insn 12 11 64 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) xdr.c:142 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 35)
(note 64 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 64 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.7741 ])
            (const_int 1 [0x1]))) xdr.c:142 -1
     (nil))
(jump_insn 14 13 65 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:142 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 65 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 65 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7741 ])
            (const_int 2 [0x2]))) xdr.c:142 -1
     (nil))
(jump_insn 16 15 66 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) xdr.c:142 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 19)
(note 66 16 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 17 66 18 6 (set (pc)
        (label_ref:DI 63)) xdr.c:142 654 {jump}
     (nil)
 -> 63)
(barrier 18 17 19)
(code_label 19 18 20 7 32 "" [1 uses])
(note 20 19 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 20 21 7 (set (reg:SI 87 [ D.7740 ])
        (const_int 1 [0x1])) xdr.c:155 -1
     (nil))
(jump_insn 21 6 22 7 (set (pc)
        (label_ref 51)) -1
     (nil)
 -> 51)
(barrier 22 21 23)
(code_label 23 22 24 8 31 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])
        (zero_extend:DI (mem:SI (reg/v/f:DI 99 [ up ]) [4 *up_6(D)+0 S4 A32]))) xdr.c:145 -1
     (nil))
(insn 26 25 27 8 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:146 -1
     (nil))
(insn 27 26 28 8 (set (reg/f:DI 102)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:146 -1
     (nil))
(insn 28 27 29 8 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 8 [0x8])) [3 _10->x_putlong+0 S8 A64])) xdr.c:146 -1
     (nil))
(insn 29 28 30 8 (set (reg:DI 4 si)
        (reg:DI 101)) xdr.c:146 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:146 -1
     (nil))
(call_insn 31 30 32 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 103) [0 *_11 S1 A8])
            (const_int 0 [0]))) xdr.c:146 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 8 (set (reg:SI 87 [ D.7740 ])
        (reg:SI 0 ax)) xdr.c:146 -1
     (nil))
(jump_insn 33 32 34 8 (set (pc)
        (label_ref 51)) xdr.c:146 -1
     (nil)
 -> 51)
(barrier 34 33 35)
(code_label 35 34 36 9 30 "" [1 uses])
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:149 -1
     (nil))
(insn 38 37 39 9 (set (reg/f:DI 105)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:149 -1
     (nil))
(insn 39 38 40 9 (set (reg/f:DI 106)
        (mem/f:DI (reg/f:DI 105) [3 _17->x_getlong+0 S8 A64])) xdr.c:149 -1
     (nil))
(insn 40 39 41 9 (set (reg:DI 4 si)
        (reg:DI 104)) xdr.c:149 -1
     (nil))
(insn 41 40 42 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:149 -1
     (nil))
(call_insn 42 41 43 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 106) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:149 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 43 42 44 9 (set (reg:SI 87 [ D.7740 ])
        (reg:SI 0 ax)) xdr.c:149 -1
     (nil))
(insn 44 43 45 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7740 ])
            (const_int 0 [0]))) xdr.c:149 -1
     (nil))
(jump_insn 45 44 46 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) xdr.c:149 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 51)
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 10 (set (reg:DI 107)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])) xdr.c:153 -1
     (nil))
(insn 48 47 5 10 (set (mem:SI (reg/v/f:DI 99 [ up ]) [4 *up_6(D)+0 S4 A32])
        (subreg:SI (reg:DI 107) 0)) xdr.c:153 -1
     (nil))
(insn 5 48 60 10 (set (reg:SI 87 [ D.7740 ])
        (const_int 1 [0x1])) xdr.c:155 -1
     (nil))
(jump_insn 60 5 61 10 (set (pc)
        (label_ref 51)) -1
     (nil)
 -> 51)
(barrier 61 60 63)
(code_label 63 61 62 12 34 "" [1 uses])
(note 62 63 7 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 7 62 51 12 (set (reg:SI 87 [ D.7740 ])
        (const_int 0 [0])) xdr.c:157 -1
     (nil))
(code_label 51 7 52 13 29 "" [4 uses])
(note 52 51 53 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 57 13 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.7740 ])) -1
     (nil))
(insn 57 53 58 13 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr.c:165 -1
     (nil))
(insn 58 57 0 13 (use (reg/i:SI 0 ax)) xdr.c:165 -1
     (nil))

;; Function xdr_long (*__GI_xdr_long, funcdef_no=50, decl_uid=6854, cgraph_uid=54, symbol_order=62)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 43.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:179 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ lp ])
        (reg:DI 4 si [ lp ])) xdr.c:179 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 88 [ D.7754 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:181 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.7754 ])
            (const_int 0 [0]))) xdr.c:181 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:181 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 23)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 89 [ D.7755 ])
        (mem:DI (reg/v/f:DI 99 [ lp ]) [5 *lp_6(D)+0 S8 A64])) xdr.c:183 -1
     (nil))
(insn 12 11 13 4 (set (reg:DI 100 [ D.7755 ])
        (sign_extend:DI (subreg:SI (reg:DI 89 [ D.7755 ]) 0))) xdr.c:182 -1
     (nil))
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.7755 ])
            (reg:DI 100 [ D.7755 ]))) xdr.c:182 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) xdr.c:182 -1
     (int_list:REG_BR_PROB 9078 (nil))
 -> 35)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:DI 101)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:184 -1
     (nil))
(insn 17 16 18 5 (set (reg/f:DI 102)
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 8 [0x8])) [3 _16->x_putlong+0 S8 A64])) xdr.c:184 -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 4 si)
        (reg/v/f:DI 99 [ lp ])) xdr.c:184 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:184 -1
     (nil))
(call_insn/j 20 19 21 5 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 102) [0 *_17 S1 A8])
            (const_int 0 [0]))) xdr.c:184 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 21 20 23)
(code_label 23 21 24 6 40 "" [1 uses])
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.7754 ])
            (const_int 1 [0x1]))) xdr.c:186 -1
     (nil))
(jump_insn 26 25 27 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) xdr.c:186 -1
     (int_list:REG_BR_PROB 8241 (nil))
 -> 35)
(note 27 26 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:187 -1
     (nil))
(insn 29 28 30 7 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 103) [3 _12->x_getlong+0 S8 A64])) xdr.c:187 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 4 si)
        (reg/v/f:DI 99 [ lp ])) xdr.c:187 -1
     (nil))
(insn 31 30 32 7 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:187 -1
     (nil))
(call_insn/j 32 31 33 7 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 104) [0 *_13 S1 A8])
            (const_int 0 [0]))) xdr.c:187 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 33 32 35)
(code_label 35 33 36 8 41 "" [2 uses])
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.7754 ])
            (const_int 2 [0x2]))) xdr.c:187 -1
     (nil))
(insn 38 37 39 8 (set (reg:QI 106)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:187 -1
     (nil))
(insn 39 38 40 8 (set (reg:SI 105 [ D.7760 ])
        (zero_extend:SI (reg:QI 106))) xdr.c:187 -1
     (nil))
(insn 40 39 42 8 (set (reg:SI 87 [ D.7753 ])
        (reg:SI 105 [ D.7760 ])) xdr.c:187 -1
     (nil))
(insn 42 40 46 8 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.7753 ])) -1
     (nil))
(insn 46 42 47 8 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr.c:193 -1
     (nil))
(insn 47 46 0 8 (use (reg/i:SI 0 ax)) xdr.c:193 -1
     (nil))

;; Function xdr_u_long (*__GI_xdr_u_long, funcdef_no=51, decl_uid=6857, cgraph_uid=56, symbol_order=65)

Partition 0: size 8 align 8
	tmp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 12
Edge 7->9 redirected to 13
Purged edges from bb 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 18.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 8->10 redirected to 15
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Removing jump 62.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 99 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:207 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ ulp ])
        (reg:DI 4 si [ ulp ])) xdr.c:207 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:SI 101 [ D.7771 ])
        (mem:SI (reg/v/f:DI 99 [ xdrs ]) [2 xdrs_6(D)->x_op+0 S4 A64])) xdr.c:208 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.7771 ])
            (const_int 1 [0x1]))) xdr.c:208 -1
     (nil))
(jump_insn 13 12 76 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) xdr.c:208 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 24)
(note 76 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 76 15 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 101 [ D.7771 ])
            (const_int 1 [0x1]))) xdr.c:208 -1
     (nil))
(jump_insn 15 14 77 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) xdr.c:208 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 46)
(note 77 15 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 77 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.7771 ])
            (const_int 2 [0x2]))) xdr.c:208 -1
     (nil))
(jump_insn 17 16 78 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 71)
            (pc))) xdr.c:208 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 71)
(note 78 17 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 78 22 6 (set (reg:SI 87 [ D.7770 ])
        (const_int 0 [0])) xdr.c:231 -1
     (nil))
(jump_insn 22 8 23 6 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 23 22 24)
(code_label 24 23 25 8 45 "" [1 uses])
(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 8 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:214 -1
     (nil))
(insn 27 26 28 8 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_6(D)->x_ops+0 S8 A64])) xdr.c:214 -1
     (nil))
(insn 28 27 29 8 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 103) [3 _8->x_getlong+0 S8 A64])) xdr.c:214 -1
     (nil))
(insn 29 28 30 8 (set (reg:DI 4 si)
        (reg:DI 102)) xdr.c:214 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ xdrs ])) xdr.c:214 -1
     (nil))
(call_insn 31 30 32 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 104) [0 *_9 S1 A8])
            (const_int 0 [0]))) xdr.c:214 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 8 (set (reg:SI 87 [ D.7770 ])
        (reg:SI 0 ax)) xdr.c:214 -1
     (nil))
(insn 33 32 34 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7770 ])
            (const_int 0 [0]))) xdr.c:214 -1
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) xdr.c:214 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 59)
(note 35 34 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 35 40 9 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 tmp+0 S8 A64])) xdr.c:217 -1
     (nil))
(insn 40 39 41 9 (set (reg:DI 107 [ D.7775 ])
        (zero_extend:DI (subreg:SI (reg:DI 108) 0))) xdr.c:217 -1
     (expr_list:REG_EQUAL (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [5 tmp+0 S8 A64])
            (const_int 4294967295 [0xffffffff]))
        (nil)))
(insn 41 40 5 9 (set (mem:DI (reg/v/f:DI 100 [ ulp ]) [5 *ulp_15(D)+0 S8 A64])
        (reg:DI 107 [ D.7775 ])) xdr.c:217 -1
     (nil))
(insn 5 41 44 9 (set (reg:SI 87 [ D.7770 ])
        (const_int 1 [0x1])) xdr.c:218 -1
     (nil))
(jump_insn 44 5 45 9 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 45 44 46)
(code_label 46 45 47 11 46 "" [1 uses])
(note 47 46 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 11 (set (reg:DI 94 [ D.7775 ])
        (mem:DI (reg/v/f:DI 100 [ ulp ]) [5 *ulp_15(D)+0 S8 A64])) xdr.c:223 -1
     (nil))
(insn 49 48 50 11 (set (reg:DI 109 [ D.7775 ])
        (zero_extend:DI (subreg:SI (reg:DI 94 [ D.7775 ]) 0))) xdr.c:222 -1
     (nil))
(insn 50 49 51 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 94 [ D.7775 ])
            (reg:DI 109 [ D.7775 ]))) xdr.c:222 -1
     (nil))
(jump_insn 51 50 52 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) xdr.c:222 612 {*jcc_1}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 75)
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (set (reg/f:DI 110)
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_6(D)->x_ops+0 S8 A64])) xdr.c:226 -1
     (nil))
(insn 54 53 55 12 (set (reg/f:DI 111)
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 8 [0x8])) [3 _22->x_putlong+0 S8 A64])) xdr.c:226 -1
     (nil))
(insn 55 54 56 12 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ ulp ])) xdr.c:226 -1
     (nil))
(insn 56 55 57 12 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ xdrs ])) xdr.c:226 -1
     (nil))
(call_insn 57 56 58 12 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 111) [0 *_23 S1 A8])
            (const_int 0 [0]))) xdr.c:226 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 68 12 (set (reg:SI 87 [ D.7770 ])
        (reg:SI 0 ax)) xdr.c:226 -1
     (nil))
(jump_insn 68 58 69 12 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 69 68 71)
(code_label 71 69 70 13 49 "" [1 uses])
(note 70 71 7 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 7 70 72 13 (set (reg:SI 87 [ D.7770 ])
        (const_int 1 [0x1])) xdr.c:229 -1
     (nil))
(jump_insn 72 7 73 13 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 73 72 75)
(code_label 75 73 74 14 50 "" [1 uses])
(note 74 75 6 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 6 74 59 14 (set (reg:SI 87 [ D.7770 ])
        (const_int 0 [0])) xdr.c:224 -1
     (nil))
(code_label 59 6 60 15 47 "" [5 uses])
(note 60 59 61 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 65 15 (set (reg:SI 98 [ <retval> ])
        (reg:SI 87 [ D.7770 ])) -1
     (nil))
(insn 65 61 66 15 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) xdr.c:232 -1
     (nil))
(insn 66 65 0 15 (use (reg/i:SI 0 ax)) xdr.c:232 -1
     (nil))

;; Function xdr_hyper (*__GI_xdr_hyper, funcdef_no=52, decl_uid=6860, cgraph_uid=58, symbol_order=68)

Partition 3: size 8 align 8
	t2	t2
Partition 2: size 8 align 8
	t1	t1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 55 from 11 to 13.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 89.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 110 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:245 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 111 [ llp ])
        (reg:DI 4 si [ llp ])) xdr.c:245 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:SI 89 [ D.7786 ])
        (mem:SI (reg/v/f:DI 110 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:248 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7786 ])
            (const_int 0 [0]))) xdr.c:248 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) xdr.c:248 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 40)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 90 [ D.7787 ])
        (mem:DI (reg/v/f:DI 111 [ llp ]) [5 *llp_6(D)+0 S8 A64])) xdr.c:250 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 112)
                (ashiftrt:DI (reg:DI 90 [ D.7787 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:250 -1
     (nil))
(insn 15 14 16 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])
        (reg:DI 112)) xdr.c:250 -1
     (nil))
(insn 16 15 17 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])
        (reg:DI 90 [ D.7787 ])) xdr.c:251 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:252 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 114)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:252 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 115)
        (mem/f:DI (plus:DI (reg/f:DI 114)
                (const_int 8 [0x8])) [3 _11->x_putlong+0 S8 A64])) xdr.c:252 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 113)) xdr.c:252 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr.c:252 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 115) [0 *_12 S1 A8])
            (const_int 0 [0]))) xdr.c:252 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 87 [ D.7784 ])
        (reg:SI 0 ax)) xdr.c:252 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7784 ])
            (const_int 0 [0]))) xdr.c:252 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) xdr.c:252 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 86)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:252 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 117)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:252 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/f:DI 117)
                (const_int 8 [0x8])) [3 _15->x_putlong+0 S8 A64])) xdr.c:252 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 4 si)
        (reg:DI 116)) xdr.c:252 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr.c:252 -1
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 118) [0 *_16 S1 A8])
            (const_int 0 [0]))) xdr.c:252 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 5 (set (reg:SI 96 [ D.7790 ])
        (reg:SI 0 ax)) xdr.c:252 -1
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.7790 ])
            (const_int 0 [0]))) xdr.c:252 -1
     (nil))
(insn 35 34 36 5 (set (reg:QI 120)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:252 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 119 [ D.7785 ])
        (zero_extend:SI (reg:QI 120))) xdr.c:252 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 87 [ D.7784 ])
        (reg:SI 119 [ D.7785 ])) xdr.c:252 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 39 38 40)
(code_label 40 39 41 6 56 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7786 ])
            (const_int 1 [0x1]))) xdr.c:255 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) xdr.c:255 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 80)
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:257 -1
     (nil))
(insn 46 45 47 7 (set (reg/f:DI 122)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:257 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 123)
        (mem/f:DI (reg/f:DI 122) [3 _23->x_getlong+0 S8 A64])) xdr.c:257 -1
     (nil))
(insn 48 47 49 7 (set (reg:DI 4 si)
        (reg:DI 121)) xdr.c:257 -1
     (nil))
(insn 49 48 50 7 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr.c:257 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 123) [0 *_24 S1 A8])
            (const_int 0 [0]))) xdr.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 7 (set (reg:SI 99 [ D.7790 ])
        (reg:SI 0 ax)) xdr.c:257 -1
     (nil))
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.7790 ])
            (const_int 0 [0]))) xdr.c:257 -1
     (nil))
(jump_insn 53 52 66 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) xdr.c:257 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 57)
(code_label 66 53 54 8 61 "" [1 uses])
(note 54 66 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 54 55 8 (set (reg:SI 87 [ D.7784 ])
        (const_int 0 [0])) xdr.c:258 -1
     (nil))
(jump_insn 55 5 56 8 (set (pc)
        (label_ref:DI 86)) xdr.c:257 654 {jump}
     (nil)
 -> 86)
(barrier 56 55 57)
(code_label 57 56 58 9 59 "" [1 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:257 -1
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 125)
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:257 -1
     (nil))
(insn 61 60 62 9 (set (reg/f:DI 126)
        (mem/f:DI (reg/f:DI 125) [3 _26->x_getlong+0 S8 A64])) xdr.c:257 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 4 si)
        (reg:DI 124)) xdr.c:257 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ xdrs ])) xdr.c:257 -1
     (nil))
(call_insn 64 63 65 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 126) [0 *_27 S1 A8])
            (const_int 0 [0]))) xdr.c:257 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 67 9 (set (reg:SI 102 [ D.7790 ])
        (reg:SI 0 ax)) xdr.c:257 -1
     (nil))
(insn 67 65 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.7790 ])
            (const_int 0 [0]))) xdr.c:257 -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) xdr.c:257 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 66)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (set (reg:DI 128)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])) xdr.c:260 -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 127 [ D.7787 ])
                (ashift:DI (reg:DI 128)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:260 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 72 71 73 10 (set (reg:DI 130)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])) xdr.c:260 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 129 [ D.7787 ])
        (zero_extend:DI (subreg:SI (reg:DI 130) 0))) xdr.c:260 -1
     (expr_list:REG_EQUAL (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])
            (const_int 4294967295 [0xffffffff]))
        (nil)))
(insn 74 73 75 10 (parallel [
            (set (reg:DI 131)
                (ior:DI (reg:DI 127 [ D.7787 ])
                    (reg:DI 129 [ D.7787 ])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:260 -1
     (nil))
(insn 75 74 6 10 (set (mem:DI (reg/v/f:DI 111 [ llp ]) [5 *llp_6(D)+0 S8 A64])
        (reg:DI 131)) xdr.c:260 -1
     (nil))
(insn 6 75 78 10 (set (reg:SI 87 [ D.7784 ])
        (const_int 1 [0x1])) xdr.c:261 -1
     (nil))
(jump_insn 78 6 79 10 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 79 78 80)
(code_label 80 79 81 12 58 "" [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7786 ])
            (const_int 2 [0x2]))) xdr.c:252 -1
     (nil))
(insn 83 82 84 12 (set (reg:QI 133)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:252 -1
     (nil))
(insn 84 83 85 12 (set (reg:SI 132 [ D.7785 ])
        (zero_extend:SI (reg:QI 133))) xdr.c:252 -1
     (nil))
(insn 85 84 86 12 (set (reg:SI 87 [ D.7784 ])
        (reg:SI 132 [ D.7785 ])) xdr.c:252 -1
     (nil))
(code_label 86 85 87 13 57 "" [4 uses])
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 92 13 (set (reg:SI 109 [ <retval> ])
        (reg:SI 87 [ D.7784 ])) -1
     (nil))
(insn 92 88 93 13 (set (reg/i:SI 0 ax)
        (reg:SI 109 [ <retval> ])) xdr.c:268 -1
     (nil))
(insn 93 92 0 13 (use (reg/i:SI 0 ax)) xdr.c:268 -1
     (nil))

;; Function xdr_u_hyper (*__GI_xdr_u_hyper, funcdef_no=53, decl_uid=6863, cgraph_uid=60, symbol_order=71)

Partition 3: size 8 align 8
	t2	t2
Partition 2: size 8 align 8
	t1	t1

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 55 from 11 to 13.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 89.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 114 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:281 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 115 [ ullp ])
        (reg:DI 4 si [ ullp ])) xdr.c:281 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:SI 89 [ D.7802 ])
        (mem:SI (reg/v/f:DI 114 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:284 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7802 ])
            (const_int 0 [0]))) xdr.c:284 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) xdr.c:284 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 40)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 90 [ D.7803 ])
        (mem:DI (reg/v/f:DI 115 [ ullp ]) [5 *ullp_6(D)+0 S8 A64])) xdr.c:286 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 116)
                (lshiftrt:DI (reg:DI 90 [ D.7803 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:286 -1
     (nil))
(insn 15 14 16 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])
        (reg:DI 116)) xdr.c:286 -1
     (nil))
(insn 16 15 17 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])
        (reg:DI 90 [ D.7803 ])) xdr.c:287 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:288 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 114 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:288 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 119)
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 8 [0x8])) [3 _13->x_putlong+0 S8 A64])) xdr.c:288 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg:DI 117)) xdr.c:288 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ xdrs ])) xdr.c:288 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 119) [0 *_14 S1 A8])
            (const_int 0 [0]))) xdr.c:288 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg:SI 87 [ D.7800 ])
        (reg:SI 0 ax)) xdr.c:288 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7800 ])
            (const_int 0 [0]))) xdr.c:288 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) xdr.c:288 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 86)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:288 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 121)
        (mem/f:DI (plus:DI (reg/v/f:DI 114 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:288 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 122)
        (mem/f:DI (plus:DI (reg/f:DI 121)
                (const_int 8 [0x8])) [3 _17->x_putlong+0 S8 A64])) xdr.c:288 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 4 si)
        (reg:DI 120)) xdr.c:288 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ xdrs ])) xdr.c:288 -1
     (nil))
(call_insn 32 31 33 5 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 122) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:288 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 5 (set (reg:SI 98 [ D.7807 ])
        (reg:SI 0 ax)) xdr.c:288 -1
     (nil))
(insn 34 33 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.7807 ])
            (const_int 0 [0]))) xdr.c:288 -1
     (nil))
(insn 35 34 36 5 (set (reg:QI 124)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:288 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 123 [ D.7801 ])
        (zero_extend:SI (reg:QI 124))) xdr.c:288 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 87 [ D.7800 ])
        (reg:SI 123 [ D.7801 ])) xdr.c:288 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 39 38 40)
(code_label 40 39 41 6 72 "" [1 uses])
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7802 ])
            (const_int 1 [0x1]))) xdr.c:291 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) xdr.c:291 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 80)
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:293 -1
     (nil))
(insn 46 45 47 7 (set (reg/f:DI 126)
        (mem/f:DI (plus:DI (reg/v/f:DI 114 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:293 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 127)
        (mem/f:DI (reg/f:DI 126) [3 _25->x_getlong+0 S8 A64])) xdr.c:293 -1
     (nil))
(insn 48 47 49 7 (set (reg:DI 4 si)
        (reg:DI 125)) xdr.c:293 -1
     (nil))
(insn 49 48 50 7 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ xdrs ])) xdr.c:293 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 127) [0 *_26 S1 A8])
            (const_int 0 [0]))) xdr.c:293 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 51 50 52 7 (set (reg:SI 101 [ D.7807 ])
        (reg:SI 0 ax)) xdr.c:293 -1
     (nil))
(insn 52 51 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.7807 ])
            (const_int 0 [0]))) xdr.c:293 -1
     (nil))
(jump_insn 53 52 66 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) xdr.c:293 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 57)
(code_label 66 53 54 8 77 "" [1 uses])
(note 54 66 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 54 55 8 (set (reg:SI 87 [ D.7800 ])
        (const_int 0 [0])) xdr.c:294 -1
     (nil))
(jump_insn 55 5 56 8 (set (pc)
        (label_ref:DI 86)) xdr.c:293 654 {jump}
     (nil)
 -> 86)
(barrier 56 55 57)
(code_label 57 56 58 9 75 "" [1 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:293 -1
     (nil))
(insn 60 59 61 9 (set (reg/f:DI 129)
        (mem/f:DI (plus:DI (reg/v/f:DI 114 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:293 -1
     (nil))
(insn 61 60 62 9 (set (reg/f:DI 130)
        (mem/f:DI (reg/f:DI 129) [3 _28->x_getlong+0 S8 A64])) xdr.c:293 -1
     (nil))
(insn 62 61 63 9 (set (reg:DI 4 si)
        (reg:DI 128)) xdr.c:293 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ xdrs ])) xdr.c:293 -1
     (nil))
(call_insn 64 63 65 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 130) [0 *_29 S1 A8])
            (const_int 0 [0]))) xdr.c:293 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 65 64 67 9 (set (reg:SI 104 [ D.7807 ])
        (reg:SI 0 ax)) xdr.c:293 -1
     (nil))
(insn 67 65 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.7807 ])
            (const_int 0 [0]))) xdr.c:293 -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) xdr.c:293 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 66)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (set (reg:DI 132)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])) xdr.c:296 -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 131 [ D.7803 ])
                (ashift:DI (reg:DI 132)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:296 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [5 t1+0 S8 A64])
            (const_int 32 [0x20]))
        (nil)))
(insn 72 71 73 10 (set (reg:DI 134)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])) xdr.c:296 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 133 [ D.7803 ])
        (zero_extend:DI (subreg:SI (reg:DI 134) 0))) xdr.c:296 -1
     (expr_list:REG_EQUAL (and:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [5 t2+0 S8 A64])
            (const_int 4294967295 [0xffffffff]))
        (nil)))
(insn 74 73 75 10 (parallel [
            (set (reg:DI 135)
                (ior:DI (reg:DI 131 [ D.7803 ])
                    (reg:DI 133 [ D.7803 ])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:296 -1
     (nil))
(insn 75 74 6 10 (set (mem:DI (reg/v/f:DI 115 [ ullp ]) [5 *ullp_6(D)+0 S8 A64])
        (reg:DI 135)) xdr.c:296 -1
     (nil))
(insn 6 75 78 10 (set (reg:SI 87 [ D.7800 ])
        (const_int 1 [0x1])) xdr.c:297 -1
     (nil))
(jump_insn 78 6 79 10 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 79 78 80)
(code_label 80 79 81 12 74 "" [1 uses])
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.7802 ])
            (const_int 2 [0x2]))) xdr.c:288 -1
     (nil))
(insn 83 82 84 12 (set (reg:QI 137)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:288 -1
     (nil))
(insn 84 83 85 12 (set (reg:SI 136 [ D.7801 ])
        (zero_extend:SI (reg:QI 137))) xdr.c:288 -1
     (nil))
(insn 85 84 86 12 (set (reg:SI 87 [ D.7800 ])
        (reg:SI 136 [ D.7801 ])) xdr.c:288 -1
     (nil))
(code_label 86 85 87 13 73 "" [4 uses])
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 92 13 (set (reg:SI 113 [ <retval> ])
        (reg:SI 87 [ D.7800 ])) -1
     (nil))
(insn 92 88 93 13 (set (reg/i:SI 0 ax)
        (reg:SI 113 [ <retval> ])) xdr.c:304 -1
     (nil))
(insn 93 92 0 13 (use (reg/i:SI 0 ax)) xdr.c:304 -1
     (nil))

;; Function xdr_longlong_t (*__GI_xdr_longlong_t, funcdef_no=54, decl_uid=6866, cgraph_uid=62, symbol_order=74)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:313 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ llp ])
        (reg:DI 4 si [ llp ])) xdr.c:313 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ llp ])) xdr.c:314 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) xdr.c:314 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_hyper") [flags 0x3]  <function_decl 0x2b62b0a47a20 xdr_hyper>) [0 xdr_hyper S1 A8])
            (const_int 0 [0]))) xdr.c:314 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_hyper") [flags 0x3]  <function_decl 0x2b62b0a47a20 xdr_hyper>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_u_longlong_t (*__GI_xdr_u_longlong_t, funcdef_no=55, decl_uid=6869, cgraph_uid=64, symbol_order=77)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:324 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ ullp ])
        (reg:DI 4 si [ ullp ])) xdr.c:324 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ ullp ])) xdr.c:325 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) xdr.c:325 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_u_hyper") [flags 0x3]  <function_decl 0x2b62b0a47af8 xdr_u_hyper>) [0 xdr_u_hyper S1 A8])
            (const_int 0 [0]))) xdr.c:325 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_u_hyper") [flags 0x3]  <function_decl 0x2b62b0a47af8 xdr_u_hyper>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_short (*__GI_xdr_short, funcdef_no=56, decl_uid=6842, cgraph_uid=66, symbol_order=80)

Partition 1: size 8 align 8
	l	l

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 17.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 9->11 redirected to 13
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 55.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:338 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ sp ])
        (reg:DI 4 si [ sp ])) xdr.c:338 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 100 [ D.7828 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:341 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7828 ])
            (const_int 1 [0x1]))) xdr.c:341 -1
     (nil))
(jump_insn 12 11 65 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) xdr.c:341 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 36)
(note 65 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 65 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.7828 ])
            (const_int 1 [0x1]))) xdr.c:341 -1
     (nil))
(jump_insn 14 13 66 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:341 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 66 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 66 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7828 ])
            (const_int 2 [0x2]))) xdr.c:341 -1
     (nil))
(jump_insn 16 15 67 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) xdr.c:341 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 64)
(note 67 16 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 67 21 6 (set (reg:SI 87 [ D.7827 ])
        (const_int 0 [0])) xdr.c:358 -1
     (nil))
(jump_insn 21 6 22 6 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 22 21 23)
(code_label 23 22 24 8 92 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:DI 101)
        (sign_extend:DI (mem:HI (reg/v/f:DI 99 [ sp ]) [7 *sp_6(D)+0 S2 A16]))) xdr.c:344 -1
     (nil))
(insn 26 25 27 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])
        (reg:DI 101)) xdr.c:344 -1
     (nil))
(insn 27 26 28 8 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:345 -1
     (nil))
(insn 28 27 29 8 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:345 -1
     (nil))
(insn 29 28 30 8 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 8 [0x8])) [3 _10->x_putlong+0 S8 A64])) xdr.c:345 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 4 si)
        (reg:DI 102)) xdr.c:345 -1
     (nil))
(insn 31 30 32 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:345 -1
     (nil))
(call_insn 32 31 33 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 104) [0 *_11 S1 A8])
            (const_int 0 [0]))) xdr.c:345 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 8 (set (reg:SI 87 [ D.7827 ])
        (reg:SI 0 ax)) xdr.c:345 -1
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (label_ref 52)) xdr.c:345 -1
     (nil)
 -> 52)
(barrier 35 34 36)
(code_label 36 35 37 9 91 "" [1 uses])
(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 9 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:348 -1
     (nil))
(insn 39 38 40 9 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:348 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 107)
        (mem/f:DI (reg/f:DI 106) [3 _17->x_getlong+0 S8 A64])) xdr.c:348 -1
     (nil))
(insn 41 40 42 9 (set (reg:DI 4 si)
        (reg:DI 105)) xdr.c:348 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:348 -1
     (nil))
(call_insn 43 42 44 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 107) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:348 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 9 (set (reg:SI 87 [ D.7827 ])
        (reg:SI 0 ax)) xdr.c:348 -1
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7827 ])
            (const_int 0 [0]))) xdr.c:348 -1
     (nil))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 52)
            (pc))) xdr.c:348 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 52)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])) xdr.c:352 -1
     (nil))
(insn 49 48 5 10 (set (mem:HI (reg/v/f:DI 99 [ sp ]) [7 *sp_6(D)+0 S2 A16])
        (subreg:HI (reg:DI 108) 0)) xdr.c:352 -1
     (nil))
(insn 5 49 61 10 (set (reg:SI 87 [ D.7827 ])
        (const_int 1 [0x1])) xdr.c:353 -1
     (nil))
(jump_insn 61 5 62 10 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 62 61 64)
(code_label 64 62 63 12 95 "" [1 uses])
(note 63 64 7 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 7 63 52 12 (set (reg:SI 87 [ D.7827 ])
        (const_int 1 [0x1])) xdr.c:356 -1
     (nil))
(code_label 52 7 53 13 93 "" [4 uses])
(note 53 52 54 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 58 13 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.7827 ])) -1
     (nil))
(insn 58 54 59 13 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr.c:359 -1
     (nil))
(insn 59 58 0 13 (use (reg/i:SI 0 ax)) xdr.c:359 -1
     (nil))

;; Function xdr_u_short (*__GI_xdr_u_short, funcdef_no=57, decl_uid=6845, cgraph_uid=68, symbol_order=83)

Partition 1: size 8 align 8
	l	l

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 17.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 9->11 redirected to 13
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 55.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:371 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ usp ])
        (reg:DI 4 si [ usp ])) xdr.c:371 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 100 [ D.7847 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:374 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7847 ])
            (const_int 1 [0x1]))) xdr.c:374 -1
     (nil))
(jump_insn 12 11 65 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) xdr.c:374 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 36)
(note 65 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 65 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.7847 ])
            (const_int 1 [0x1]))) xdr.c:374 -1
     (nil))
(jump_insn 14 13 66 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:374 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 66 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 66 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7847 ])
            (const_int 2 [0x2]))) xdr.c:374 -1
     (nil))
(jump_insn 16 15 67 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) xdr.c:374 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 64)
(note 67 16 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 67 21 6 (set (reg:SI 87 [ D.7846 ])
        (const_int 0 [0])) xdr.c:391 -1
     (nil))
(jump_insn 21 6 22 6 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 22 21 23)
(code_label 23 22 24 8 103 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:DI 101)
        (zero_extend:DI (mem:HI (reg/v/f:DI 99 [ usp ]) [7 *usp_6(D)+0 S2 A16]))) xdr.c:377 -1
     (nil))
(insn 26 25 27 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])
        (reg:DI 101)) xdr.c:377 -1
     (nil))
(insn 27 26 28 8 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:378 -1
     (nil))
(insn 28 27 29 8 (set (reg/f:DI 103)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:378 -1
     (nil))
(insn 29 28 30 8 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 8 [0x8])) [3 _10->x_putlong+0 S8 A64])) xdr.c:378 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 4 si)
        (reg:DI 102)) xdr.c:378 -1
     (nil))
(insn 31 30 32 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:378 -1
     (nil))
(call_insn 32 31 33 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 104) [0 *_11 S1 A8])
            (const_int 0 [0]))) xdr.c:378 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 8 (set (reg:SI 87 [ D.7846 ])
        (reg:SI 0 ax)) xdr.c:378 -1
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (label_ref 52)) xdr.c:378 -1
     (nil)
 -> 52)
(barrier 35 34 36)
(code_label 36 35 37 9 102 "" [1 uses])
(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 9 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:381 -1
     (nil))
(insn 39 38 40 9 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:381 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 107)
        (mem/f:DI (reg/f:DI 106) [3 _17->x_getlong+0 S8 A64])) xdr.c:381 -1
     (nil))
(insn 41 40 42 9 (set (reg:DI 4 si)
        (reg:DI 105)) xdr.c:381 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:381 -1
     (nil))
(call_insn 43 42 44 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 107) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:381 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 9 (set (reg:SI 87 [ D.7846 ])
        (reg:SI 0 ax)) xdr.c:381 -1
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7846 ])
            (const_int 0 [0]))) xdr.c:381 -1
     (nil))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 52)
            (pc))) xdr.c:381 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 52)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:DI 108)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])) xdr.c:385 -1
     (nil))
(insn 49 48 5 10 (set (mem:HI (reg/v/f:DI 99 [ usp ]) [7 *usp_6(D)+0 S2 A16])
        (subreg:HI (reg:DI 108) 0)) xdr.c:385 -1
     (nil))
(insn 5 49 61 10 (set (reg:SI 87 [ D.7846 ])
        (const_int 1 [0x1])) xdr.c:386 -1
     (nil))
(jump_insn 61 5 62 10 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 62 61 64)
(code_label 64 62 63 12 106 "" [1 uses])
(note 63 64 7 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 7 63 52 12 (set (reg:SI 87 [ D.7846 ])
        (const_int 1 [0x1])) xdr.c:389 -1
     (nil))
(code_label 52 7 53 13 104 "" [4 uses])
(note 53 52 54 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 58 13 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.7846 ])) -1
     (nil))
(insn 58 54 59 13 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr.c:392 -1
     (nil))
(insn 59 58 0 13 (use (reg/i:SI 0 ax)) xdr.c:392 -1
     (nil))

;; Function xdr_u_char (*__GI_xdr_u_char, funcdef_no=59, decl_uid=6937, cgraph_uid=72, symbol_order=89)

Partition 0: size 4 align 4
	u

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 93 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:427 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ cp ])
        (reg:DI 4 si [ cp ])) xdr.c:427 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 95)
        (zero_extend:SI (mem:QI (reg/v/f:DI 94 [ cp ]) [0 *cp_4(D)+0 S1 A8]))) xdr.c:430 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 u+0 S4 A32])
        (reg:SI 95)) xdr.c:430 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:431 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 96)) xdr.c:431 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) xdr.c:431 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) xdr.c:431 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:SI 87 [ D.7856 ])
        (reg:SI 0 ax)) xdr.c:431 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7856 ])
            (const_int 0 [0]))) xdr.c:431 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) xdr.c:431 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 20)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 u+0 S4 A32])) xdr.c:435 -1
     (nil))
(insn 19 18 5 4 (set (mem:QI (reg/v/f:DI 94 [ cp ]) [0 *cp_4(D)+0 S1 A8])
        (subreg:QI (reg:SI 97) 0)) xdr.c:435 -1
     (nil))
(insn 5 19 20 4 (set (reg:SI 87 [ D.7856 ])
        (const_int 1 [0x1])) xdr.c:436 -1
     (nil))
(code_label 20 5 21 5 112 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.7856 ])) -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) xdr.c:437 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) xdr.c:437 -1
     (nil))

;; Function xdr_bool (*__GI_xdr_bool, funcdef_no=60, decl_uid=6902, cgraph_uid=74, symbol_order=92)

Partition 1: size 8 align 8
	lb	lb

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 7 failed.
Removing jump 17.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Edge 9->11 redirected to 13
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 59.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 100 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:449 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 101 [ bp ])
        (reg:DI 4 si [ bp ])) xdr.c:449 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 102 [ D.7872 ])
        (mem:SI (reg/v/f:DI 100 [ xdrs ]) [2 xdrs_5(D)->x_op+0 S4 A64])) xdr.c:452 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.7872 ])
            (const_int 1 [0x1]))) xdr.c:452 -1
     (nil))
(jump_insn 12 11 69 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) xdr.c:452 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 38)
(note 69 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 69 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 102 [ D.7872 ])
            (const_int 1 [0x1]))) xdr.c:452 -1
     (nil))
(jump_insn 14 13 70 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:452 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 70 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 70 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.7872 ])
            (const_int 2 [0x2]))) xdr.c:452 -1
     (nil))
(jump_insn 16 15 71 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) xdr.c:452 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 68)
(note 71 16 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 71 21 6 (set (reg:SI 87 [ D.7870 ])
        (const_int 0 [0])) xdr.c:469 -1
     (nil))
(jump_insn 21 6 22 6 (set (pc)
        (label_ref 56)) -1
     (nil)
 -> 56)
(barrier 22 21 23)
(code_label 23 22 24 8 120 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 101 [ bp ]) [4 *bp_7(D)+0 S4 A32])
            (const_int 0 [0]))) xdr.c:455 -1
     (nil))
(insn 26 25 27 8 (set (reg:QI 104)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:455 -1
     (nil))
(insn 27 26 28 8 (set (reg:DI 103 [ D.7871 ])
        (zero_extend:DI (reg:QI 104))) xdr.c:455 -1
     (nil))
(insn 28 27 29 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 lb+0 S8 A64])
        (reg:DI 103 [ D.7871 ])) xdr.c:455 -1
     (nil))
(insn 29 28 30 8 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:456 -1
     (nil))
(insn 30 29 31 8 (set (reg/f:DI 106)
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr.c:456 -1
     (nil))
(insn 31 30 32 8 (set (reg/f:DI 107)
        (mem/f:DI (plus:DI (reg/f:DI 106)
                (const_int 8 [0x8])) [3 _10->x_putlong+0 S8 A64])) xdr.c:456 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 4 si)
        (reg:DI 105)) xdr.c:456 -1
     (nil))
(insn 33 32 34 8 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ xdrs ])) xdr.c:456 -1
     (nil))
(call_insn 34 33 35 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 107) [0 *_11 S1 A8])
            (const_int 0 [0]))) xdr.c:456 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 35 34 36 8 (set (reg:SI 87 [ D.7870 ])
        (reg:SI 0 ax)) xdr.c:456 -1
     (nil))
(jump_insn 36 35 37 8 (set (pc)
        (label_ref 56)) xdr.c:456 -1
     (nil)
 -> 56)
(barrier 37 36 38)
(code_label 38 37 39 9 119 "" [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:459 -1
     (nil))
(insn 41 40 42 9 (set (reg/f:DI 109)
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_5(D)->x_ops+0 S8 A64])) xdr.c:459 -1
     (nil))
(insn 42 41 43 9 (set (reg/f:DI 110)
        (mem/f:DI (reg/f:DI 109) [3 _17->x_getlong+0 S8 A64])) xdr.c:459 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 4 si)
        (reg:DI 108)) xdr.c:459 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ xdrs ])) xdr.c:459 -1
     (nil))
(call_insn 45 44 46 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 110) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:459 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 9 (set (reg:SI 87 [ D.7870 ])
        (reg:SI 0 ax)) xdr.c:459 -1
     (nil))
(insn 47 46 48 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7870 ])
            (const_int 0 [0]))) xdr.c:459 -1
     (nil))
(jump_insn 48 47 49 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 56)
            (pc))) xdr.c:459 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 56)
(note 49 48 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [5 lb+0 S8 A64])
            (const_int 0 [0]))) xdr.c:463 -1
     (nil))
(insn 51 50 52 10 (set (reg:QI 112)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) xdr.c:463 -1
     (nil))
(insn 52 51 53 10 (set (reg:SI 111 [ D.7871 ])
        (zero_extend:SI (reg:QI 112))) xdr.c:463 -1
     (nil))
(insn 53 52 5 10 (set (mem:SI (reg/v/f:DI 101 [ bp ]) [4 *bp_7(D)+0 S4 A32])
        (reg:SI 111 [ D.7871 ])) xdr.c:463 -1
     (nil))
(insn 5 53 65 10 (set (reg:SI 87 [ D.7870 ])
        (const_int 1 [0x1])) xdr.c:464 -1
     (nil))
(jump_insn 65 5 66 10 (set (pc)
        (label_ref 56)) -1
     (nil)
 -> 56)
(barrier 66 65 68)
(code_label 68 66 67 12 123 "" [1 uses])
(note 67 68 7 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 7 67 56 12 (set (reg:SI 87 [ D.7870 ])
        (const_int 1 [0x1])) xdr.c:467 -1
     (nil))
(code_label 56 7 57 13 121 "" [4 uses])
(note 57 56 58 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 13 (set (reg:SI 99 [ <retval> ])
        (reg:SI 87 [ D.7870 ])) -1
     (nil))
(insn 62 58 63 13 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) xdr.c:470 -1
     (nil))
(insn 63 62 0 13 (use (reg/i:SI 0 ax)) xdr.c:470 -1
     (nil))

;; Function xdr_enum (*__GI_xdr_enum, funcdef_no=61, decl_uid=6905, cgraph_uid=76, symbol_order=95)

Partition 0: size 8 align 8
	l	l

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 12 failed.
Edge 9->11 redirected to 13
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Removing jump 56.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:482 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ ep ])
        (reg:DI 4 si [ ep ])) xdr.c:482 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 100 [ D.7892 ])
        (mem:SI (reg/v/f:DI 98 [ xdrs ]) [2 xdrs_4(D)->x_op+0 S4 A64])) xdr.c:496 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7892 ])
            (const_int 1 [0x1]))) xdr.c:496 -1
     (nil))
(jump_insn 12 11 66 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) xdr.c:496 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 37)
(note 66 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 66 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.7892 ])
            (const_int 1 [0x1]))) xdr.c:496 -1
     (nil))
(jump_insn 14 13 67 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) xdr.c:496 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 67 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 67 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.7892 ])
            (const_int 2 [0x2]))) xdr.c:496 -1
     (nil))
(jump_insn 16 15 68 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) xdr.c:496 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 19)
(note 68 16 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 17 68 18 6 (set (pc)
        (label_ref:DI 65)) xdr.c:496 654 {jump}
     (nil)
 -> 65)
(barrier 18 17 19)
(code_label 19 18 20 7 132 "" [1 uses])
(note 20 19 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 20 21 7 (set (reg:SI 87 [ D.7891 ])
        (const_int 1 [0x1])) xdr.c:509 -1
     (nil))
(jump_insn 21 6 22 7 (set (pc)
        (label_ref 53)) -1
     (nil)
 -> 53)
(barrier 22 21 23)
(code_label 23 22 24 8 131 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:SI 102)
        (mem:SI (reg/v/f:DI 99 [ ep ]) [4 *ep_6(D)+0 S4 A32])) xdr.c:499 -1
     (nil))
(insn 26 25 27 8 (set (reg:DI 101)
        (sign_extend:DI (reg:SI 102))) xdr.c:499 -1
     (nil))
(insn 27 26 28 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])
        (reg:DI 101)) xdr.c:499 -1
     (nil))
(insn 28 27 29 8 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:500 -1
     (nil))
(insn 29 28 30 8 (set (reg/f:DI 104)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:500 -1
     (nil))
(insn 30 29 31 8 (set (reg/f:DI 105)
        (mem/f:DI (plus:DI (reg/f:DI 104)
                (const_int 8 [0x8])) [3 _10->x_putlong+0 S8 A64])) xdr.c:500 -1
     (nil))
(insn 31 30 32 8 (set (reg:DI 4 si)
        (reg:DI 103)) xdr.c:500 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:500 -1
     (nil))
(call_insn 33 32 34 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105) [0 *_11 S1 A8])
            (const_int 0 [0]))) xdr.c:500 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 8 (set (reg:SI 87 [ D.7891 ])
        (reg:SI 0 ax)) xdr.c:500 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (label_ref 53)) xdr.c:500 -1
     (nil)
 -> 53)
(barrier 36 35 37)
(code_label 37 36 38 9 130 "" [1 uses])
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:503 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 107)
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ xdrs ])
                (const_int 8 [0x8])) [3 xdrs_4(D)->x_ops+0 S8 A64])) xdr.c:503 -1
     (nil))
(insn 41 40 42 9 (set (reg/f:DI 108)
        (mem/f:DI (reg/f:DI 107) [3 _17->x_getlong+0 S8 A64])) xdr.c:503 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 4 si)
        (reg:DI 106)) xdr.c:503 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ xdrs ])) xdr.c:503 -1
     (nil))
(call_insn 44 43 45 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 108) [0 *_18 S1 A8])
            (const_int 0 [0]))) xdr.c:503 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 44 46 9 (set (reg:SI 87 [ D.7891 ])
        (reg:SI 0 ax)) xdr.c:503 -1
     (nil))
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7891 ])
            (const_int 0 [0]))) xdr.c:503 -1
     (nil))
(jump_insn 47 46 48 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) xdr.c:503 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 53)
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg:DI 109)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [5 l+0 S8 A64])) xdr.c:507 -1
     (nil))
(insn 50 49 5 10 (set (mem:SI (reg/v/f:DI 99 [ ep ]) [4 *ep_6(D)+0 S4 A32])
        (subreg:SI (reg:DI 109) 0)) xdr.c:507 -1
     (nil))
(insn 5 50 62 10 (set (reg:SI 87 [ D.7891 ])
        (const_int 1 [0x1])) xdr.c:509 -1
     (nil))
(jump_insn 62 5 63 10 (set (pc)
        (label_ref 53)) -1
     (nil)
 -> 53)
(barrier 63 62 65)
(code_label 65 63 64 12 134 "" [1 uses])
(note 64 65 7 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 7 64 53 12 (set (reg:SI 87 [ D.7891 ])
        (const_int 0 [0])) xdr.c:512 -1
     (nil))
(code_label 53 7 54 13 129 "" [4 uses])
(note 54 53 55 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 59 13 (set (reg:SI 97 [ <retval> ])
        (reg:SI 87 [ D.7891 ])) -1
     (nil))
(insn 59 55 60 13 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) xdr.c:525 -1
     (nil))
(insn 60 59 0 13 (use (reg/i:SI 0 ax)) xdr.c:525 -1
     (nil))

;; Function xdr_char (*__GI_xdr_char, funcdef_no=58, decl_uid=6934, cgraph_uid=70, symbol_order=86)

Partition 0: size 4 align 4
	i

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 93 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:405 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ cp ])
        (reg:DI 4 si [ cp ])) xdr.c:405 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 95)
        (sign_extend:SI (mem:QI (reg/v/f:DI 94 [ cp ]) [0 *cp_4(D)+0 S1 A8]))) xdr.c:408 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 i+0 S4 A32])
        (reg:SI 95)) xdr.c:408 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:409 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 96)) xdr.c:409 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) xdr.c:409 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) xdr.c:409 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg:SI 87 [ D.7901 ])
        (reg:SI 0 ax)) xdr.c:409 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7901 ])
            (const_int 0 [0]))) xdr.c:409 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) xdr.c:409 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 20)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 i+0 S4 A32])) xdr.c:413 -1
     (nil))
(insn 19 18 5 4 (set (mem:QI (reg/v/f:DI 94 [ cp ]) [0 *cp_4(D)+0 S1 A8])
        (subreg:QI (reg:SI 97) 0)) xdr.c:413 -1
     (nil))
(insn 5 19 20 4 (set (reg:SI 87 [ D.7901 ])
        (const_int 1 [0x1])) xdr.c:414 -1
     (nil))
(code_label 20 5 21 5 140 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.7901 ])) -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) xdr.c:415 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) xdr.c:415 -1
     (nil))

;; Function xdr_int (*__GI_xdr_int, funcdef_no=81, decl_uid=6848, cgraph_uid=50, symbol_order=56)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:97 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ ip ])
        (reg:DI 4 si [ ip ])) xdr.c:97 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ ip ])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_opaque (*__GI_xdr_opaque, funcdef_no=62, decl_uid=6921, cgraph_uid=78, symbol_order=98)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 21.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:539 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ cp ])
        (reg:DI 4 si [ cp ])) xdr.c:539 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 91 [ cnt ])
        (reg:SI 1 dx [ cnt ])) xdr.c:539 -1
     (nil))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 91 [ cnt ])
            (const_int 0 [0]))) xdr.c:546 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) xdr.c:546 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 18)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 1 dx)
        (reg/v:SI 91 [ cnt ])) -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ cp ])) -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) -1
     (nil))
(call_insn/j 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>) [0 *__GI_xdr_opaque.part.10 S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 16 15 18)
(code_label 18 16 19 5 147 "" [1 uses])
(note 19 18 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 19 20 5 (set (reg:SI 87 [ D.7908 ])
        (const_int 1 [0x1])) xdr.c:547 -1
     (nil))
(insn 20 6 24 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.7908 ])) -1
     (nil))
(insn 24 20 25 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) xdr.c:580 -1
     (nil))
(insn 25 24 0 5 (use (reg/i:SI 0 ax)) xdr.c:580 -1
     (nil))

;; Function xdr_bytes (*__GI_xdr_bytes, funcdef_no=63, decl_uid=6917, cgraph_uid=80, symbol_order=101)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 4->14 redirected to 19
Edge 5->14 redirected to 20
Edge 6->14 redirected to 21
Edge 10->14 redirected to 22
Edge 12->14 redirected to 23
Purged edges from bb 26


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 17 failed.
Forwarding edge 9->10 to 20 failed.
Edge 12->25 redirected to 16
Edge 13->25 redirected to 16
deleting block 25
Removing jump 96.
Merging block 26 into block 24...
Merged blocks 24 and 26.
Merged 24 and 26 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 17 failed.
Forwarding edge 9->10 to 20 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 95 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:594 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ cpp ])
        (reg:DI 4 si [ cpp ])) xdr.c:594 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ sizep ])
        (reg:DI 1 dx [ sizep ])) xdr.c:594 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 98 [ maxsize ])
        (reg:SI 2 cx [ maxsize ])) xdr.c:594 -1
     (nil))
(note 6 5 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 6 17 2 (set (reg/v/f:DI 88 [ sp ])
        (mem/f:DI (reg/v/f:DI 96 [ cpp ]) [3 *cpp_8(D)+0 S8 A64])) xdr.c:595 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/v/f:DI 97 [ sizep ])) xdr.c:601 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) xdr.c:601 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) xdr.c:601 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 20 19 21 2 (set (reg:SI 87 [ D.7917 ])
        (reg:SI 0 ax)) xdr.c:601 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7917 ])
            (const_int 0 [0]))) xdr.c:601 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) xdr.c:601 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 93)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg/v:SI 89 [ nodesize ])
        (mem:SI (reg/v/f:DI 97 [ sizep ]) [4 *sizep_11(D)+0 S4 A32])) xdr.c:605 -1
     (nil))
(insn 25 24 26 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 89 [ nodesize ])
            (reg/v:SI 98 [ maxsize ]))) xdr.c:606 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) xdr.c:606 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 33)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 95 [ xdrs ]) [2 xdrs_10(D)->x_op+0 S4 A64])
            (const_int 2 [0x2]))) xdr.c:606 -1
     (nil))
(jump_insn 29 28 32 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 110)
            (pc))) xdr.c:606 612 {*jcc_1}
     (int_list:REG_BR_PROB 6218 (nil))
 -> 110)
(note 32 29 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 30 32 31 6 (set (pc)
        (label_ref 85)) -1
     (nil)
 -> 85)
(barrier 31 30 33)
(code_label 33 31 34 7 150 "" [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:SI 99 [ D.7918 ])
        (mem:SI (reg/v/f:DI 95 [ xdrs ]) [2 xdrs_10(D)->x_op+0 S4 A64])) xdr.c:614 -1
     (nil))
(insn 36 35 37 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.7918 ])
            (const_int 1 [0x1]))) xdr.c:614 -1
     (nil))
(jump_insn 37 36 127 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) xdr.c:614 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 44)
(note 127 37 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 127 39 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99 [ D.7918 ])
            (const_int 1 [0x1]))) xdr.c:614 -1
     (nil))
(jump_insn 39 38 128 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) xdr.c:614 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 74)
(note 128 39 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 128 41 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.7918 ])
            (const_int 2 [0x2]))) xdr.c:614 -1
     (nil))
(jump_insn 41 40 129 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) xdr.c:614 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 85)
(note 129 41 42 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 42 129 43 10 (set (pc)
        (label_ref:DI 114)) xdr.c:614 654 {jump}
     (nil)
 -> 114)
(barrier 43 42 44)
(code_label 44 43 45 11 152 "" [1 uses])
(note 45 44 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ nodesize ])
            (const_int 0 [0]))) xdr.c:617 -1
     (nil))
(jump_insn 47 46 48 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 118)
            (pc))) xdr.c:617 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 118)
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:621 -1
     (nil))
(jump_insn 50 49 51 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 100)
            (pc))) xdr.c:621 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 100)
(note 51 50 52 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 13 (set (reg:DI 100 [ D.7919 ])
        (zero_extend:DI (reg/v:SI 89 [ nodesize ]))) xdr.c:623 -1
     (nil))
(insn 53 52 54 13 (set (reg:DI 5 di)
        (reg:DI 100 [ D.7919 ])) xdr.c:623 -1
     (nil))
(call_insn 54 53 55 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b62b0634360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) xdr.c:623 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b62b0634360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 13 (set (reg/f:DI 101)
        (reg:DI 0 ax)) xdr.c:623 -1
     (expr_list:REG_NOALIAS (reg/f:DI 101)
        (nil)))
(insn 56 55 57 13 (set (reg/v/f:DI 88 [ sp ])
        (reg/f:DI 101)) xdr.c:623 -1
     (nil))
(insn 57 56 58 13 (set (mem/f:DI (reg/v/f:DI 96 [ cpp ]) [3 *cpp_8(D)+0 S8 A64])
        (reg/v/f:DI 88 [ sp ])) xdr.c:623 -1
     (nil))
(insn 58 57 59 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:625 -1
     (nil))
(jump_insn 59 58 60 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 100)
            (pc))) xdr.c:625 612 {*jcc_1}
     (int_list:REG_BR_PROB 3426 (nil))
 -> 100)
(note 60 59 61 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 14 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) xdr.c:627 -1
     (nil))
(insn 62 61 63 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b62b0bf62d0 *.LC18>)) xdr.c:627 -1
     (nil))
(insn 63 62 64 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("*__GI__libc_intl_domainname") [flags 0x42]  <var_decl 0x2b62b0844090 _libc_intl_domainname>)) xdr.c:627 -1
     (nil))
(call_insn 64 63 65 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b62b0827ca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) xdr.c:627 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b62b0827ca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 65 64 66 14 (set (reg/f:DI 93 [ D.7920 ])
        (reg:DI 0 ax)) xdr.c:627 -1
     (nil))
(insn 66 65 67 14 (set (reg:DI 2 cx)
        (reg/f:DI 93 [ D.7920 ])) xdr.c:627 -1
     (nil))
(insn 67 66 68 14 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__func__.7187") [flags 0x2]  <var_decl 0x2b62b0a97000 __func__>)) xdr.c:627 -1
     (nil))
(insn 68 67 69 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b62b0bf6360 *.LC19>)) xdr.c:627 -1
     (nil))
(insn 69 68 70 14 (set (reg:DI 5 di)
        (const_int 0 [0])) xdr.c:627 -1
     (nil))
(insn 70 69 71 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr.c:627 -1
     (nil))
(call_insn 71 70 10 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b62b07a0af8 __fxprintf>) [0 __fxprintf S1 A8])
            (const_int 0 [0]))) xdr.c:627 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b62b07a0af8 __fxprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 10 71 72 14 (set (reg:SI 87 [ D.7917 ])
        (const_int 0 [0])) xdr.c:628 -1
     (nil))
(jump_insn 72 10 73 14 (set (pc)
        (label_ref 93)) xdr.c:628 -1
     (nil)
 -> 93)
(barrier 73 72 74)
(code_label 74 73 75 15 153 "" [1 uses])
(note 75 74 76 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ nodesize ])
            (const_int 0 [0]))) xdr.c:546 -1
     (nil))
(jump_insn 77 76 100 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 122)
            (pc))) xdr.c:546 612 {*jcc_1}
     (int_list:REG_BR_PROB 9661 (nil))
 -> 122)
(code_label 100 77 78 16 155 "" [2 uses])
(note 78 100 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 16 (set (reg:SI 1 dx)
        (reg/v:SI 89 [ nodesize ])) -1
     (nil))
(insn 80 79 81 16 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ sp ])) -1
     (nil))
(insn 81 80 82 16 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) -1
     (nil))
(call_insn/j 82 81 83 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>) [0 *__GI_xdr_opaque.part.10 S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 83 82 85)
(code_label 85 83 86 17 151 "" [2 uses])
(note 86 85 87 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:636 -1
     (nil))
(jump_insn 88 87 89 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) xdr.c:636 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 126)
(note 89 88 90 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 18 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ sp ])) xdr.c:638 -1
     (nil))
(call_insn 91 90 92 18 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b62b062ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr.c:638 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b62b062ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 92 91 11 18 (set (mem/f:DI (reg/v/f:DI 96 [ cpp ]) [3 *cpp_8(D)+0 S8 A64])
        (const_int 0 [0])) xdr.c:639 -1
     (nil))
(insn 11 92 107 18 (set (reg:SI 87 [ D.7917 ])
        (const_int 1 [0x1])) xdr.c:641 -1
     (nil))
(jump_insn 107 11 108 18 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 108 107 110)
(code_label 110 108 109 19 156 "" [1 uses])
(note 109 110 7 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 7 109 111 19 (set (reg:SI 87 [ D.7917 ])
        (const_int 0 [0])) xdr.c:603 -1
     (nil))
(jump_insn 111 7 112 19 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 112 111 114)
(code_label 114 112 113 20 157 "" [1 uses])
(note 113 114 8 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 8 113 115 20 (set (reg:SI 87 [ D.7917 ])
        (const_int 0 [0])) xdr.c:643 -1
     (nil))
(jump_insn 115 8 116 20 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 116 115 118)
(code_label 118 116 117 21 158 "" [1 uses])
(note 117 118 12 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 12 117 119 21 (set (reg:SI 87 [ D.7917 ])
        (const_int 1 [0x1])) xdr.c:619 -1
     (nil))
(jump_insn 119 12 120 21 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 120 119 122)
(code_label 122 120 121 22 159 "" [1 uses])
(note 121 122 9 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 9 121 123 22 (set (reg:SI 87 [ D.7917 ])
        (const_int 1 [0x1])) xdr.c:619 -1
     (nil))
(jump_insn 123 9 124 22 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 124 123 126)
(code_label 126 124 125 23 160 "" [1 uses])
(note 125 126 13 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 13 125 93 23 (set (reg:SI 87 [ D.7917 ])
        (const_int 1 [0x1])) xdr.c:619 -1
     (nil))
(code_label 93 13 94 24 149 "" [7 uses])
(note 94 93 95 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 104 24 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.7917 ])) -1
     (nil))
(insn 104 95 105 24 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) xdr.c:644 -1
     (nil))
(insn 105 104 0 24 (use (reg/i:SI 0 ax)) xdr.c:644 -1
     (nil))

;; Function xdr_netobj (*__GI_xdr_netobj, funcdef_no=64, decl_uid=6972, cgraph_uid=82, symbol_order=104)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:656 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ np ])
        (reg:DI 4 si [ np ])) xdr.c:656 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 93 [ D.7927 ])
                (plus:DI (reg/v/f:DI 92 [ np ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:658 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (const_int 1024 [0x400])) xdr.c:658 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 92 [ np ])) xdr.c:658 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 93 [ D.7927 ])) xdr.c:658 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) xdr.c:658 -1
     (nil))
(call_insn/j 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_bytes") [flags 0x3]  <function_decl 0x2b62b0a4f948 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) xdr.c:658 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_bytes") [flags 0x3]  <function_decl 0x2b62b0a4f948 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 13 12 0)

;; Function xdr_union (*__GI_xdr_union, funcdef_no=65, decl_uid=6931, cgraph_uid=84, symbol_order=107)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11
Edge 9->11 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 108.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 45 0 53 NOTE_INSN_DELETED)
(note 53 45 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 46 53 47 2 (set (reg/v/f:DI 137 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:687 -1
     (nil))
(insn 47 46 48 2 (set (reg/v/f:DI 138 [ dscmp ])
        (reg:DI 4 si [ dscmp ])) xdr.c:687 -1
     (nil))
(insn 48 47 49 2 (set (reg/v/f:DI 139 [ unp ])
        (reg:DI 1 dx [ unp ])) xdr.c:687 -1
     (nil))
(insn 49 48 50 2 (set (reg/v/f:DI 140 [ choices ])
        (reg:DI 2 cx [ choices ])) xdr.c:687 -1
     (nil))
(insn 50 49 51 2 (set (reg/v/f:DI 141 [ dfault ])
        (reg:DI 37 r8 [ dfault ])) xdr.c:687 -1
     (nil))
(note 51 50 55 2 NOTE_INSN_FUNCTION_BEG)
(insn 55 51 56 2 (set (reg:DI 4 si)
        (reg/v/f:DI 138 [ dscmp ])) xdr.c:693 -1
     (nil))
(insn 56 55 57 2 (set (reg:DI 5 di)
        (reg/v/f:DI 137 [ xdrs ])) xdr.c:693 -1
     (nil))
(call_insn 57 56 58 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) xdr.c:693 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_enum") [flags 0x3]  <function_decl 0x2b62b0a4f798 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 59 2 (set (reg:SI 131 [ D.7945 ])
        (reg:SI 0 ax)) xdr.c:693 -1
     (nil))
(insn 59 58 60 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.7945 ])
            (const_int 0 [0]))) xdr.c:693 -1
     (nil))
(jump_insn 60 59 61 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) xdr.c:693 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 105)
(note 61 60 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 4 (set (reg/v:SI 133 [ dscm ])
        (mem:SI (reg/v/f:DI 138 [ dscmp ]) [4 *dscmp_6(D)+0 S4 A32])) xdr.c:697 -1
     (nil))
(insn 63 62 64 4 (set (reg/f:DI 134 [ D.7947 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 140 [ choices ])
                (const_int 8 [0x8])) [3 choices_10(D)->proc+0 S8 A64])) xdr.c:703 -1
     (nil))
(insn 64 63 65 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ D.7947 ])
            (const_int 0 [0]))) xdr.c:703 -1
     (nil))
(jump_insn 65 64 66 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) xdr.c:703 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 93)
(note 66 65 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 140 [ choices ]) [4 choices_10(D)->value+0 S4 A64])
            (reg/v:SI 133 [ dscm ]))) xdr.c:705 -1
     (nil))
(jump_insn 68 67 71 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) xdr.c:705 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 75)
(note 71 68 69 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 69 71 70 6 (set (pc)
        (label_ref 84)) xdr.c:705 -1
     (nil)
 -> 84)
(barrier 70 69 90)
(code_label 90 70 72 7 179 "" [1 uses])
(note 72 90 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 133 [ dscm ])
            (mem:SI (reg/v/f:DI 140 [ choices ]) [4 MEM[base: choices_13, offset: 0B]+0 S4 A32]))) xdr.c:705 -1
     (nil))
(jump_insn 74 73 75 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) xdr.c:705 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 86)
(code_label 75 74 76 8 176 "" [1 uses])
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr.c:706 -1
     (nil))
(insn 78 77 79 8 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ unp ])) xdr.c:706 -1
     (nil))
(insn 79 78 80 8 (set (reg:DI 5 di)
        (reg/v/f:DI 137 [ xdrs ])) xdr.c:706 -1
     (nil))
(insn 80 79 81 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr.c:706 -1
     (nil))
(call_insn/j 81 80 82 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 134 [ D.7947 ]) [0 *_24 S1 A8])
            (const_int 0 [0]))) xdr.c:706 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(barrier 82 81 84)
(code_label 84 82 85 9 177 "" [1 uses])
(note 85 84 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 86 85 87 10 178 "" [1 uses])
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 10 (parallel [
            (set (reg/v/f:DI 140 [ choices ])
                (plus:DI (reg/v/f:DI 140 [ choices ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:703 -1
     (nil))
(insn 89 88 91 10 (set (reg/f:DI 134 [ D.7947 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 140 [ choices ])
                (const_int 8 [0x8])) [3 MEM[base: choices_13, offset: 8B]+0 S8 A64])) xdr.c:703 -1
     (nil))
(insn 91 89 92 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ D.7947 ])
            (const_int 0 [0]))) xdr.c:703 -1
     (nil))
(jump_insn 92 91 93 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) xdr.c:703 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 90)
(code_label 93 92 94 11 175 "" [1 uses])
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 141 [ dfault ])
            (const_int 0 [0]))) xdr.c:712 -1
     (nil))
(jump_insn 96 95 97 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 115)
            (pc))) xdr.c:712 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 115)
(note 97 96 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 12 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr.c:712 -1
     (nil))
(insn 99 98 100 12 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ unp ])) xdr.c:712 -1
     (nil))
(insn 100 99 101 12 (set (reg:DI 5 di)
        (reg/v/f:DI 137 [ xdrs ])) xdr.c:712 -1
     (nil))
(insn 101 100 102 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr.c:712 -1
     (nil))
(call_insn/j 102 101 103 12 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 141 [ dfault ]) [0 *(bool_t (*<T13af>) (struct XDR *, void *, ...)) dfault_17(D) S1 A8])
            (const_int 0 [0]))) xdr.c:712 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(barrier 103 102 115)
(code_label 115 103 114 13 180 "" [1 uses])
(note 114 115 52 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 52 114 105 13 (set (reg:SI 131 [ D.7945 ])
        (const_int 0 [0])) xdr.c:695 -1
     (nil))
(code_label 105 52 106 14 174 "" [1 uses])
(note 106 105 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 111 14 (set (reg:SI 136 [ <retval> ])
        (reg:SI 131 [ D.7945 ])) -1
     (nil))
(insn 111 107 112 14 (set (reg/i:SI 0 ax)
        (reg:SI 136 [ <retval> ])) xdr.c:714 -1
     (nil))
(insn 112 111 0 14 (use (reg/i:SI 0 ax)) xdr.c:714 -1
     (nil))

;; Function xdr_string (*__GI_xdr_string, funcdef_no=66, decl_uid=6925, cgraph_uid=86, symbol_order=110)

Partition 0: size 4 align 4
	size

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19
Edge 11->19 redirected to 22
Purged edges from bb 24
Purged edges from bb 27


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 11 failed.
Forwarding edge 16->17 to 25 failed.
Removing jump 125.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 11 failed.
Forwarding edge 16->17 to 25 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 101 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:734 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 102 [ cpp ])
        (reg:DI 4 si [ cpp ])) xdr.c:734 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 103 [ maxsize ])
        (reg:SI 1 dx [ maxsize ])) xdr.c:734 -1
     (nil))
(note 5 4 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 5 14 2 (set (reg/v/f:DI 88 [ sp ])
        (mem/f:DI (reg/v/f:DI 102 [ cpp ]) [3 *cpp_9(D)+0 S8 A64])) xdr.c:735 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 size+0 S4 A32])
        (const_int 0 [0])) xdr.c:738 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 104 [ D.7963 ])
        (mem:SI (reg/v/f:DI 101 [ xdrs ]) [2 xdrs_12(D)->x_op+0 S4 A64])) xdr.c:744 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.7963 ])
            (const_int 0 [0]))) xdr.c:744 -1
     (nil))
(jump_insn 17 16 135 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) xdr.c:744 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 29)
(note 135 17 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 135 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.7963 ])
            (const_int 2 [0x2]))) xdr.c:744 -1
     (nil))
(jump_insn 19 18 136 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) xdr.c:744 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 22)
(note 136 19 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 20 136 21 5 (set (pc)
        (label_ref 44)) xdr.c:744 -1
     (nil)
 -> 44)
(barrier 21 20 22)
(code_label 22 21 23 6 194 "" [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:747 -1
     (nil))
(jump_insn 25 24 106 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) xdr.c:747 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 36)
(code_label 106 25 26 7 202 "" [1 uses])
(note 26 106 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 26 27 7 (set (reg:SI 89 [ D.7962 ])
        (const_int 1 [0x1])) xdr.c:749 -1
     (nil))
(jump_insn 27 6 28 7 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 28 27 29)
(code_label 29 28 30 8 193 "" [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:753 -1
     (nil))
(jump_insn 32 31 51 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) xdr.c:753 -1
     (int_list:REG_BR_PROB 8075 (nil))
 -> 36)
(code_label 51 32 33 9 197 "" [3 uses])
(note 33 51 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 33 34 9 (set (reg:SI 89 [ D.7962 ])
        (const_int 0 [0])) xdr.c:754 -1
     (nil))
(jump_insn 34 7 35 9 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 35 34 36)
(code_label 36 35 37 10 195 "" [2 uses])
(note 37 36 38 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 10 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ sp ])) xdr.c:755 -1
     (nil))
(call_insn/i 39 38 40 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b62b060e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) xdr.c:755 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b62b060e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 10 (set (reg:DI 106)
        (reg:DI 0 ax)) xdr.c:755 -1
     (nil))
(insn 41 40 42 10 (set (reg:DI 107)
        (reg:DI 106)) xdr.c:755 -1
     (nil))
(insn 42 41 43 10 (set (reg:DI 91 [ D.7964 ])
        (reg:DI 107)) xdr.c:755 -1
     (nil))
(insn 43 42 44 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 size+0 S4 A32])
        (subreg:SI (reg:DI 91 [ D.7964 ]) 0)) xdr.c:755 -1
     (nil))
(code_label 44 43 45 11 192 "" [1 uses])
(note 45 44 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 11 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:760 -1
     (nil))
(insn 47 46 48 11 (set (reg:DI 4 si)
        (reg:DI 108)) xdr.c:760 -1
     (nil))
(insn 48 47 49 11 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) xdr.c:760 -1
     (nil))
(call_insn 49 48 50 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) xdr.c:760 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_u_int") [flags 0x3]  <function_decl 0x2b62b0a47798 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 50 49 52 11 (set (reg:SI 93 [ D.7965 ])
        (reg:SI 0 ax)) xdr.c:760 -1
     (nil))
(insn 52 50 53 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.7965 ])
            (const_int 0 [0]))) xdr.c:760 -1
     (nil))
(jump_insn 53 52 54 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) xdr.c:760 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 51)
(note 54 53 55 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 12 (set (reg:SI 87 [ D.7961 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 size+0 S4 A32])) xdr.c:764 -1
     (nil))
(insn 56 55 57 12 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 87 [ D.7961 ])
            (reg/v:SI 103 [ maxsize ]))) xdr.c:764 -1
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) xdr.c:764 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 51)
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 13 (parallel [
            (set (reg/v:SI 94 [ nodesize ])
                (plus:SI (reg:SI 87 [ D.7961 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) xdr.c:768 -1
     (nil))
(insn 60 59 61 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ nodesize ])
            (const_int 0 [0]))) xdr.c:769 -1
     (nil))
(jump_insn 61 60 62 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) xdr.c:769 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 51)
(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 14 (set (reg:SI 109 [ D.7963 ])
        (mem:SI (reg/v/f:DI 101 [ xdrs ]) [2 xdrs_12(D)->x_op+0 S4 A64])) xdr.c:780 -1
     (nil))
(insn 64 63 65 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.7963 ])
            (const_int 1 [0x1]))) xdr.c:780 -1
     (nil))
(jump_insn 65 64 137 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) xdr.c:780 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 72)
(note 137 65 66 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 66 137 67 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 109 [ D.7963 ])
            (const_int 1 [0x1]))) xdr.c:780 -1
     (nil))
(jump_insn 67 66 138 15 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) xdr.c:780 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 104)
(note 138 67 68 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 68 138 69 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.7963 ])
            (const_int 2 [0x2]))) xdr.c:780 -1
     (nil))
(jump_insn 69 68 139 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) xdr.c:780 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 117)
(note 139 69 70 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 70 139 71 17 (set (pc)
        (label_ref:DI 134)) xdr.c:780 654 {jump}
     (nil)
 -> 134)
(barrier 71 70 72)
(code_label 72 71 73 18 198 "" [1 uses])
(note 73 72 74 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:783 -1
     (nil))
(jump_insn 75 74 76 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) xdr.c:783 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 99)
(note 76 75 77 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 19 (set (reg:DI 110 [ D.7964 ])
        (zero_extend:DI (reg/v:SI 94 [ nodesize ]))) xdr.c:784 -1
     (nil))
(insn 78 77 79 19 (set (reg:DI 5 di)
        (reg:DI 110 [ D.7964 ])) xdr.c:784 -1
     (nil))
(call_insn 79 78 80 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b62b0634360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) xdr.c:784 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b62b0634360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 19 (set (reg/f:DI 111)
        (reg:DI 0 ax)) xdr.c:784 -1
     (expr_list:REG_NOALIAS (reg/f:DI 111)
        (nil)))
(insn 81 80 82 19 (set (reg/v/f:DI 88 [ sp ])
        (reg/f:DI 111)) xdr.c:784 -1
     (nil))
(insn 82 81 83 19 (set (mem/f:DI (reg/v/f:DI 102 [ cpp ]) [3 *cpp_9(D)+0 S8 A64])
        (reg/v/f:DI 88 [ sp ])) xdr.c:784 -1
     (nil))
(insn 83 82 84 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ sp ])
            (const_int 0 [0]))) xdr.c:785 -1
     (nil))
(jump_insn 84 83 85 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) xdr.c:785 -1
     (int_list:REG_BR_PROB 3359 (nil))
 -> 99)
(note 85 84 86 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 20 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) xdr.c:787 -1
     (nil))
(insn 87 86 88 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b62b0bf62d0 *.LC18>)) xdr.c:787 -1
     (nil))
(insn 88 87 89 20 (set (reg:DI 5 di)
        (symbol_ref:DI ("*__GI__libc_intl_domainname") [flags 0x42]  <var_decl 0x2b62b0844090 _libc_intl_domainname>)) xdr.c:787 -1
     (nil))
(call_insn 89 88 90 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b62b0827ca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) xdr.c:787 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dcgettext") [flags 0x43]  <function_decl 0x2b62b0827ca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 90 89 91 20 (set (reg/f:DI 97 [ D.7966 ])
        (reg:DI 0 ax)) xdr.c:787 -1
     (nil))
(insn 91 90 92 20 (set (reg:DI 2 cx)
        (reg/f:DI 97 [ D.7966 ])) xdr.c:787 -1
     (nil))
(insn 92 91 93 20 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__func__.7221") [flags 0x2]  <var_decl 0x2b62b0a972d0 __func__>)) xdr.c:787 -1
     (nil))
(insn 93 92 94 20 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b62b0bf6360 *.LC19>)) xdr.c:787 -1
     (nil))
(insn 94 93 95 20 (set (reg:DI 5 di)
        (const_int 0 [0])) xdr.c:787 -1
     (nil))
(insn 95 94 96 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) xdr.c:787 -1
     (nil))
(call_insn 96 95 10 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b62b07a0af8 __fxprintf>) [0 __fxprintf S1 A8])
            (const_int 0 [0]))) xdr.c:787 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b62b07a0af8 __fxprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 10 96 97 20 (set (reg:SI 89 [ D.7962 ])
        (const_int 0 [0])) xdr.c:788 -1
     (nil))
(jump_insn 97 10 98 20 (set (pc)
        (label_ref 122)) xdr.c:788 -1
     (nil)
 -> 122)
(barrier 98 97 99)
(code_label 99 98 100 21 201 "" [2 uses])
(note 100 99 101 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 21 (set (reg:DI 112 [ D.7967 ])
        (zero_extend:DI (reg:SI 87 [ D.7961 ]))) xdr.c:790 -1
     (nil))
(insn 102 101 103 21 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ sp ])
                (reg:DI 112 [ D.7967 ])) [0 *_31+0 S1 A8])
        (const_int 0 [0])) xdr.c:790 -1
     (nil))
(insn 103 102 104 21 (set (reg:SI 87 [ D.7961 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 size+0 S4 A32])) -1
     (nil))
(code_label 104 103 105 22 199 "" [1 uses])
(note 105 104 107 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 107 105 108 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7961 ])
            (const_int 0 [0]))) xdr.c:546 -1
     (nil))
(jump_insn 108 107 109 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) xdr.c:546 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 106)
(note 109 108 110 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 23 (set (reg:SI 1 dx)
        (reg:SI 87 [ D.7961 ])) -1
     (nil))
(insn 111 110 112 23 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ sp ])) -1
     (nil))
(insn 112 111 113 23 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ xdrs ])) -1
     (nil))
(call_insn 113 112 114 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>) [0 *__GI_xdr_opaque.part.10 S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_opaque.part.10") [flags 0x3]  <function_decl 0x2b62b0b2d948 *__GI_xdr_opaque.part.10>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 114 113 115 23 (set (reg:SI 89 [ D.7962 ])
        (reg:SI 0 ax)) -1
     (nil))
(jump_insn 115 114 116 23 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 116 115 117)
(code_label 117 116 118 24 200 "" [1 uses])
(note 118 117 119 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 24 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ sp ])) xdr.c:797 -1
     (nil))
(call_insn 120 119 121 24 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b62b062ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) xdr.c:797 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b62b062ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 121 120 9 24 (set (mem/f:DI (reg/v/f:DI 102 [ cpp ]) [3 *cpp_9(D)+0 S8 A64])
        (const_int 0 [0])) xdr.c:798 -1
     (nil))
(insn 9 121 131 24 (set (reg:SI 89 [ D.7962 ])
        (const_int 1 [0x1])) xdr.c:799 -1
     (nil))
(jump_insn 131 9 132 24 (set (pc)
        (label_ref 122)) xdr.c:799 -1
     (nil)
 -> 122)
(barrier 132 131 134)
(code_label 134 132 133 25 203 "" [1 uses])
(note 133 134 8 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 8 133 122 25 (set (reg:SI 89 [ D.7962 ])
        (const_int 0 [0])) xdr.c:801 -1
     (nil))
(code_label 122 8 123 26 196 "" [5 uses])
(note 123 122 124 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 128 26 (set (reg:SI 100 [ <retval> ])
        (reg:SI 89 [ D.7962 ])) -1
     (nil))
(insn 128 124 129 26 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) xdr.c:802 -1
     (nil))
(insn 129 128 0 26 (use (reg/i:SI 0 ax)) xdr.c:802 -1
     (nil))

;; Function xdr_wrapstring (*__GI_xdr_wrapstring, funcdef_no=67, decl_uid=6962, cgraph_uid=88, symbol_order=113)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 16.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) xdr.c:815 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ cpp ])
        (reg:DI 4 si [ cpp ])) xdr.c:815 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 dx)
        (const_int -1 [0xffffffffffffffff])) xdr.c:816 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ cpp ])) xdr.c:816 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) xdr.c:816 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_string") [flags 0x3]  <function_decl 0x2b62b0a4faf8 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) xdr.c:816 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_string") [flags 0x3]  <function_decl 0x2b62b0a4faf8 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 87 [ D.7970 ])
        (reg:SI 0 ax)) xdr.c:816 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.7970 ])
            (const_int 0 [0]))) -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 95)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 94 [ D.7971 ])
        (zero_extend:SI (reg:QI 95))) -1
     (nil))
(insn 15 14 19 2 (set (reg:SI 90 [ <retval> ])
        (reg:SI 94 [ D.7971 ])) -1
     (nil))
(insn 19 15 20 2 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) xdr.c:821 -1
     (nil))
(insn 20 19 0 2 (use (reg/i:SI 0 ax)) xdr.c:821 -1
     (nil))
