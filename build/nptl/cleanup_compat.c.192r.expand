
;; Function _pthread_cleanup_push (_pthread_cleanup_push, funcdef_no=42, decl_uid=7508, cgraph_uid=42, symbol_order=43)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 90 [ buffer ])
        (reg:DI 5 di [ buffer ])) cleanup_compat.c:26 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ routine ])
        (reg:DI 4 si [ routine ])) cleanup_compat.c:26 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 92 [ arg ])
        (reg:DI 1 dx [ arg ])) cleanup_compat.c:26 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (parallel [
            (set (reg:DI 93 [ self ])
                (asm_operands:DI ("mov %%fs:%c1,%0") ("=r") 0 [
                        (const_int 16 [0x10])
                    ]
                     [
                        (asm_input:DI ("i") cleanup_compat.c:27)
                    ]
                     [] cleanup_compat.c:27))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) cleanup_compat.c:27 -1
     (nil))
(insn 9 8 10 2 (set (reg/v/f:DI 87 [ self ])
        (reg:DI 93 [ self ])) cleanup_compat.c:27 -1
     (nil))
(insn 10 9 11 2 (set (mem/f:DI (reg/v/f:DI 90 [ buffer ]) [2 buffer_3(D)->__routine+0 S8 A64])
        (reg/v/f:DI 91 [ routine ])) cleanup_compat.c:29 -1
     (nil))
(insn 11 10 12 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 90 [ buffer ])
                (const_int 8 [0x8])) [2 buffer_3(D)->__arg+0 S8 A64])
        (reg/v/f:DI 92 [ arg ])) cleanup_compat.c:30 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 94 [ __value ])
                (asm_operands/v:DI ("movq %%fs:%P1,%q0") ("=r") 0 [
                        (const_int 760 [0x2f8])
                    ]
                     [
                        (asm_input:DI ("i") cleanup_compat.c:31)
                    ]
                     [] cleanup_compat.c:31))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) cleanup_compat.c:31 -1
     (nil))
(insn 13 12 14 2 (set (reg/v/f:DI 88 [ __value ])
        (reg:DI 94 [ __value ])) cleanup_compat.c:31 -1
     (nil))
(insn 14 13 15 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 90 [ buffer ])
                (const_int 24 [0x18])) [2 buffer_3(D)->__prev+0 S8 A64])
        (reg/v/f:DI 88 [ __value ])) cleanup_compat.c:31 -1
     (nil))
(insn 15 14 0 2 (parallel [
            (asm_operands/v ("movq %q0,%%fs:%P1") ("") 0 [
                    (reg/v/f:DI 90 [ buffer ])
                    (const_int 760 [0x2f8])
                ]
                 [
                    (asm_input:DI ("ir") cleanup_compat.c:33)
                    (asm_input:DI ("i") cleanup_compat.c:33)
                ]
                 [] cleanup_compat.c:33)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) cleanup_compat.c:33 -1
     (nil))

;; Function _pthread_cleanup_pop (_pthread_cleanup_pop, funcdef_no=43, decl_uid=7511, cgraph_uid=44, symbol_order=45)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
deleting block 5


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 92 [ buffer ])
        (reg:DI 5 di [ buffer ])) cleanup_compat.c:40 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 93 [ execute ])
        (reg:SI 4 si [ execute ])) cleanup_compat.c:40 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 94 [ self ])
                (asm_operands:DI ("mov %%fs:%c1,%0") ("=r") 0 [
                        (const_int 16 [0x10])
                    ]
                     [
                        (asm_input:DI ("i") cleanup_compat.c:41)
                    ]
                     [] cleanup_compat.c:41))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) cleanup_compat.c:41 -1
     (nil))
(insn 8 7 9 2 (set (reg/v/f:DI 87 [ self ])
        (reg:DI 94 [ self ])) cleanup_compat.c:41 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 95)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ buffer ])
                (const_int 24 [0x18])) [2 buffer_3(D)->__prev+0 S8 A64])) cleanup_compat.c:43 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (asm_operands/v ("movq %q0,%%fs:%P1") ("") 0 [
                    (reg/f:DI 95)
                    (const_int 760 [0x2f8])
                ]
                 [
                    (asm_input:DI ("ir") cleanup_compat.c:43)
                    (asm_input:DI ("i") cleanup_compat.c:43)
                ]
                 [] cleanup_compat.c:43)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) cleanup_compat.c:43 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ execute ])
            (const_int 0 [0]))) cleanup_compat.c:47 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 21)
            (pc))) cleanup_compat.c:47 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 21)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 96)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ buffer ])
                (const_int 8 [0x8])) [2 buffer_3(D)->__arg+0 S8 A64])) cleanup_compat.c:48 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 97)
        (mem/f:DI (reg/v/f:DI 92 [ buffer ]) [2 buffer_3(D)->__routine+0 S8 A64])) cleanup_compat.c:48 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg:DI 96)) cleanup_compat.c:48 -1
     (nil))
(call_insn/j 17 16 18 4 (call (mem:QI (reg/f:DI 97) [0 *_9 S1 A8])
        (const_int 0 [0])) cleanup_compat.c:48 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 18 17 21)
(code_label 21 18 22 6 2 "" [1 uses])
(note 22 21 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
