
;; Function __new_sem_init (__new_sem_init, funcdef_no=65, decl_uid=7588, cgraph_uid=65, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 4->6 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 31.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 92 [ sem ])
        (reg:DI 5 di [ sem ])) sem_init.c:29 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 93 [ pshared ])
        (reg:SI 4 si [ pshared ])) sem_init.c:29 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 94 [ value ])
        (reg:SI 1 dx [ value ])) sem_init.c:29 -1
     (nil))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 13 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 94 [ value ])
            (const_int 0 [0]))) sem_init.c:31 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) sem_init.c:31 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 19)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2addbae003f0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) sem_init.c:33 -1
     (nil))
(insn 16 15 8 4 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 95)) [1 errno+0 S4 A32])
        (const_int 22 [0x16])) sem_init.c:33 -1
     (nil))
(insn 8 16 17 4 (set (reg:SI 87 [ D.8728 ])
        (const_int -1 [0xffffffffffffffff])) sem_init.c:34 -1
     (nil))
(jump_insn 17 8 18 4 (set (pc)
        (label_ref 28)) sem_init.c:34 -1
     (nil)
 -> 28)
(barrier 18 17 19)
(code_label 19 18 20 5 2 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem:DI (reg/v/f:DI 92 [ sem ]) [3 MEM[(struct new_sem *)sem_14(D)].data+0 S8 A64])
        (zero_extend:DI (reg/v:SI 94 [ value ]))) sem_init.c:49 -1
     (nil))
(insn 22 21 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ pshared ])
            (const_int 0 [0]))) sem_init.c:56 -1
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 40)
            (pc))) sem_init.c:56 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 40)
(note 24 23 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 24 37 6 (set (reg:SI 88 [ D.8728 ])
        (const_int 128 [0x80])) sem_init.c:56 -1
     (nil))
(jump_insn 37 7 38 6 (set (pc)
        (label_ref 25)) -1
     (nil)
 -> 25)
(barrier 38 37 40)
(code_label 40 38 39 7 5 "" [1 uses])
(note 39 40 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 39 25 7 (set (reg:SI 88 [ D.8728 ])
        (const_int 0 [0])) sem_init.c:56 -1
     (nil))
(code_label 25 6 26 8 4 "" [1 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 9 8 (set (mem:SI (plus:DI (reg/v/f:DI 92 [ sem ])
                (const_int 8 [0x8])) [1 MEM[(struct new_sem *)sem_14(D)].private+0 S4 A64])
        (reg:SI 88 [ D.8728 ])) sem_init.c:55 -1
     (nil))
(insn 9 27 28 8 (set (reg:SI 87 [ D.8728 ])
        (const_int 0 [0])) sem_init.c:58 -1
     (nil))
(code_label 28 9 29 9 3 "" [1 uses])
(note 29 28 30 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 34 9 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.8728 ])) -1
     (nil))
(insn 34 30 35 9 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) sem_init.c:59 -1
     (nil))
(insn 35 34 0 9 (use (reg/i:SI 0 ax)) sem_init.c:59 -1
     (nil))
