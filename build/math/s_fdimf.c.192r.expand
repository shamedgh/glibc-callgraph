
;; Function __fdimf (__fdimf, funcdef_no=87, decl_uid=7619, cgraph_uid=87, symbol_order=88)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 2->7 redirected to 10
Edge 3->7 redirected to 11
Edge 4->7 redirected to 12
Edge 5->7 redirected to 13
Purged non-fallthru edges from bb 15
Purged non-fallthru edges from bb 17
Purged non-fallthru edges from bb 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 14 failed.
Forwarding edge 2->4 to 14 failed.
deleting block 5
Edge 7->9 redirected to 10
Forwarding edge 7->8 to 16 failed.
Forwarding edge 7->8 to 16 failed.
deleting block 9
Edge 10->12 redirected to 13
Forwarding edge 10->11 to 17 failed.
Forwarding edge 10->11 to 17 failed.
deleting block 12
Removing jump 45.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 14 failed.
Forwarding edge 7->8 to 16 failed.
Forwarding edge 10->11 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v:SF 93 [ x ])
        (reg:SF 21 xmm0 [ x ])) s_fdimf.c:26 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SF 94 [ y ])
        (reg:SF 22 xmm1 [ y ])) s_fdimf.c:26 -1
     (nil))
(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 4 13 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:SF 94 [ y ])
            (reg/v:SF 93 [ x ]))) s_fdimf.c:27 -1
     (nil))
(jump_insn 13 12 67 2 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 73)
            (pc))) s_fdimf.c:27 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 73)
(note 67 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 14 67 15 4 (set (pc)
        (label_ref:DI 54)) s_fdimf.c:27 654 {jump}
     (nil)
 -> 54)
(barrier 15 14 73)
(code_label 73 15 17 6 10 "" [1 uses])
(note 17 73 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg/v:SF 88 [ r ])
        (minus:SF (reg/v:SF 93 [ x ])
            (reg/v:SF 94 [ y ]))) s_fdimf.c:30 -1
     (nil))
(insn 19 18 20 6 (set (reg:V4SF 96)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 20 19 21 6 (parallel [
            (set (reg:SF 95 [ D.8900 ])
                (abs:SF (reg/v:SF 88 [ r ])))
            (use (reg:V4SF 96))
            (clobber (reg:CC 17 flags))
        ]) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (abs:SF (reg/v:SF 88 [ r ]))
        (nil)))
(insn 21 20 22 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 95 [ D.8900 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S4 A32]))) s_fdimf.c:31 -1
     (nil))
(jump_insn 22 21 23 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) s_fdimf.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 58)
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (set (reg:V4SF 98)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 25 24 26 7 (parallel [
            (set (reg:SF 97 [ D.8900 ])
                (abs:SF (reg/v:SF 93 [ x ])))
            (use (reg:V4SF 98))
            (clobber (reg:CC 17 flags))
        ]) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (abs:SF (reg/v:SF 93 [ x ]))
        (nil)))
(insn 26 25 27 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 97 [ D.8900 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S4 A32]))) s_fdimf.c:31 -1
     (nil))
(jump_insn 27 26 69 7 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) s_fdimf.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 74)
(note 69 27 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 28 69 29 8 (set (pc)
        (label_ref:DI 62)) s_fdimf.c:31 654 {jump}
     (nil)
 -> 62)
(barrier 29 28 74)
(code_label 74 29 31 10 11 "" [1 uses])
(note 31 74 32 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 10 (set (reg:V4SF 100)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 33 32 34 10 (parallel [
            (set (reg:SF 99 [ D.8900 ])
                (abs:SF (reg/v:SF 94 [ y ])))
            (use (reg:V4SF 100))
            (clobber (reg:CC 17 flags))
        ]) s_fdimf.c:31 -1
     (expr_list:REG_EQUAL (abs:SF (reg/v:SF 94 [ y ]))
        (nil)))
(insn 34 33 35 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 99 [ D.8900 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S4 A32]))) s_fdimf.c:31 -1
     (nil))
(jump_insn 35 34 71 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) s_fdimf.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 75)
(note 71 35 36 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 71 37 11 (set (pc)
        (label_ref:DI 66)) s_fdimf.c:31 654 {jump}
     (nil)
 -> 66)
(barrier 37 36 75)
(code_label 75 37 39 13 12 "" [1 uses])
(note 39 75 40 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 13 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b48688336c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [3  S8 A8])) s_fdimf.c:32 -1
     (nil))
(insn 41 40 8 13 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 101)) [1 errno+0 S4 A32])
        (const_int 34 [0x22])) s_fdimf.c:32 -1
     (nil))
(insn 8 41 51 13 (set (reg:SF 87 [ D.8900 ])
        (reg/v:SF 88 [ r ])) s_fdimf.c:32 -1
     (nil))
(jump_insn 51 8 52 13 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 52 51 54)
(code_label 54 52 53 14 6 "" [1 uses])
(note 53 54 5 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 5 53 55 14 (set (reg:SF 87 [ D.8900 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S4 A32])) s_fdimf.c:28 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 55 5 56 14 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 56 55 58)
(code_label 58 56 57 15 7 "" [1 uses])
(note 57 58 7 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 7 57 59 15 (set (reg:SF 87 [ D.8900 ])
        (reg/v:SF 88 [ r ])) s_fdimf.c:31 -1
     (nil))
(jump_insn 59 7 60 15 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 60 59 62)
(code_label 62 60 61 16 8 "" [1 uses])
(note 61 62 6 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 6 61 63 16 (set (reg:SF 87 [ D.8900 ])
        (reg/v:SF 88 [ r ])) s_fdimf.c:31 -1
     (nil))
(jump_insn 63 6 64 16 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 64 63 66)
(code_label 66 64 65 17 9 "" [1 uses])
(note 65 66 9 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 9 65 42 17 (set (reg:SF 87 [ D.8900 ])
        (reg/v:SF 88 [ r ])) s_fdimf.c:31 -1
     (nil))
(code_label 42 9 43 18 2 "" [4 uses])
(note 43 42 44 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 48 18 (set (reg:SF 92 [ <retval> ])
        (reg:SF 87 [ D.8900 ])) -1
     (nil))
(insn 48 44 49 18 (set (reg/i:SF 21 xmm0)
        (reg:SF 92 [ <retval> ])) s_fdimf.c:35 -1
     (nil))
(insn 49 48 0 18 (use (reg/i:SF 21 xmm0)) s_fdimf.c:35 -1
     (nil))
