
;; Function __clogl (__clogl, funcdef_no=77, decl_uid=2075, cgraph_uid=77, symbol_order=77)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50
Edge 2->50 redirected to 55
Edge 4->50 redirected to 56
Edge 5->50 redirected to 57
Edge 7->47 redirected to 58
Edge 8->47 redirected to 59
Edge 9->47 redirected to 60
Edge 10->14 redirected to 61
Edge 11->13 redirected to 62
Edge 15->46 redirected to 63
Edge 20->48 redirected to 64
Edge 25->28 redirected to 65
Edge 49->7 redirected to 66
Purged non-fallthru edges from bb 69
Purged non-fallthru edges from bb 72
Purged non-fallthru edges from bb 76
Purged non-fallthru edges from bb 78
Purged non-fallthru edges from bb 80
Purged non-fallthru edges from bb 82
Purged non-fallthru edges from bb 84
Purged non-fallthru edges from bb 87
Purged non-fallthru edges from bb 89
Purged non-fallthru edges from bb 91
Purged non-fallthru edges from bb 93
Purged non-fallthru edges from bb 96
Purged non-fallthru edges from bb 98
Purged non-fallthru edges from bb 101
Purged non-fallthru edges from bb 104
Predictions for insn 108 bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 7->9 redirected to 10
Forwarding edge 7->8 to 101 failed.
Forwarding edge 7->8 to 101 failed.
deleting block 9
Edge 15->17 redirected to 18
Forwarding edge 15->16 to 93 failed.
Forwarding edge 15->16 to 93 failed.
deleting block 17
Edge 27->29 redirected to 30
Forwarding edge 28->29 to 30 failed.
Deleted label in block 29.
Edge 33->35 redirected to 36
Forwarding edge 33->34 to 40 failed.
Forwarding edge 33->34 to 40 failed.
deleting block 35
Edge 36->38 redirected to 39
Forwarding edge 36->37 to 95 failed.
Forwarding edge 36->37 to 95 failed.
deleting block 38
Redirecting jump 166 from 96 to 56.
Edge 40->42 redirected to 43
Forwarding edge 40->41 to 47 failed.
Forwarding edge 40->41 to 47 failed.
deleting block 42
Edge 43->45 redirected to 46
Forwarding edge 43->44 to 47 failed.
Forwarding edge 43->44 to 47 failed.
deleting block 45
Redirecting jump 193 from 96 to 56.
Edge 48->50 redirected to 51
Forwarding edge 48->49 to 55 failed.
Forwarding edge 48->49 to 55 failed.
deleting block 50
Edge 51->53 redirected to 54
Forwarding edge 51->52 to 88 failed.
Forwarding edge 51->52 to 88 failed.
deleting block 53
Edge 56->58 redirected to 59
Forwarding edge 56->57 to 69 failed.
Forwarding edge 56->57 to 69 failed.
deleting block 58
Edge 59->61 redirected to 62
Forwarding edge 59->60 to 69 failed.
Forwarding edge 59->60 to 69 failed.
deleting block 61
Edge 64->66 redirected to 67
Forwarding edge 64->65 to 68 failed.
Forwarding edge 64->65 to 68 failed.
deleting block 66
Edge 69->71 redirected to 72
Forwarding edge 69->70 to 77 failed.
Forwarding edge 69->70 to 77 failed.
deleting block 71
Edge 77->79 redirected to 80
Forwarding edge 77->78 to 87 failed.
Forwarding edge 77->78 to 87 failed.
deleting block 79
Edge 83->85 redirected to 86
Forwarding edge 83->84 to 87 failed.
Forwarding edge 83->84 to 87 failed.
deleting block 85
Redirecting jump 457 from 94 to 26.
Redirecting jump 461 from 94 to 26.
Merging block 94 into block 93...
Merged blocks 93 and 94.
Merged 93 and 94 without moving.
Merging block 96 into block 95...
Merged blocks 95 and 96.
Merged 95 and 96 without moving.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 101 failed.
Forwarding edge 15->16 to 93 failed.
Forwarding edge 28->29 to 30 failed.
Forwarding edge 33->34 to 40 failed.
Forwarding edge 36->37 to 95 failed.
Forwarding edge 40->41 to 47 failed.
Forwarding edge 43->44 to 47 failed.
Forwarding edge 48->49 to 55 failed.
Forwarding edge 51->52 to 88 failed.
Forwarding edge 56->57 to 69 failed.
Forwarding edge 59->60 to 69 failed.
Forwarding edge 64->65 to 68 failed.
Forwarding edge 69->70 to 77 failed.
Forwarding edge 77->78 to 87 failed.
Forwarding edge 83->84 to 87 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 42 NOTE_INSN_DELETED)
(note 42 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 42 3 2 (set (reg/v:XF 136 [ x ])
        (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [1 x+0 S16 A128])) s_clogl.c:34 -1
     (expr_list:REG_EQUIV (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [1 x+0 S16 A128])
        (nil)))
(insn 3 2 4 2 (set (reg/v:XF 137 [ x+16 ])
        (mem/c:XF (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [1 x+16 S16 A128])) s_clogl.c:34 -1
     (expr_list:REG_EQUIV (mem/c:XF (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [1 x+16 S16 A128])
        (nil)))
(note 4 3 44 2 NOTE_INSN_FUNCTION_BEG)
(insn 44 4 45 2 (set (reg:XF 131 [ x$real ])
        (reg/v:XF 136 [ x ])) -1
     (nil))
(insn 45 44 46 2 (set (reg:XF 132 [ x$imag ])
        (reg/v:XF 137 [ x+16 ])) -1
     (nil))
(insn 46 45 47 2 (set (reg/v:XF 90 [ absy ])
        (abs:XF (reg:XF 131 [ x$real ]))) s_clogl.c:36 -1
     (nil))
(insn 47 46 48 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg/v:XF 90 [ absy ]))) s_clogl.c:36 -1
     (nil))
(jump_insn 48 47 49 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 446)
            (pc))) s_clogl.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 446)
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:XF 149)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [2  S16 A128])) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:XF 1.1897314953572317650212638530309702051690633222946e+4932 [0x0.ffffffffffffffffp+16384])
        (nil)))
(insn 51 50 52 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 149))) s_clogl.c:36 -1
     (nil))
(jump_insn 52 51 53 4 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 422)
            (pc))) s_clogl.c:36 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 422)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 5 (set (reg:XF 150)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S16 A128])) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:XF 3.3621031431120935062626778173217526025980793448465e-4932 [0x0.8p-16381])
        (nil)))
(insn 55 54 56 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 150))) s_clogl.c:36 -1
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 450)
            (pc))) s_clogl.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 450)
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:SF 152)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 59 58 60 6 (set (reg:XF 151)
        (float_extend:XF (reg:SF 152))) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 60 59 61 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 151))) s_clogl.c:36 -1
     (nil))
(jump_insn 61 60 481 6 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) s_clogl.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 454)
(note 481 61 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 481 63 7 (set (reg:SF 154)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 63 62 64 7 (set (reg:XF 153)
        (float_extend:XF (reg:SF 154))) s_clogl.c:36 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 64 63 65 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 153))) s_clogl.c:36 -1
     (nil))
(jump_insn 65 64 482 7 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 519)
            (pc))) s_clogl.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 519)
(note 482 65 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 66 482 67 8 (set (pc)
        (label_ref:DI 454)) s_clogl.c:36 654 {jump}
     (nil)
 -> 454)
(barrier 67 66 519)
(code_label 519 67 69 10 50 "" [1 uses])
(note 69 519 38 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 38 69 70 10 (set (reg/v:SI 113 [ rcls ])
        (const_int 2 [0x2])) s_clogl.c:36 -1
     (nil))
(jump_insn 70 38 71 10 (set (pc)
        (label_ref 431)) -1
     (nil)
 -> 431)
(barrier 71 70 480)
(code_label 480 71 479 11 49 "" [1 uses])
(note 479 480 5 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 5 479 425 11 (set (reg/v:SI 113 [ rcls ])
        (const_int 1 [0x1])) s_clogl.c:36 -1
     (nil))
(code_label 425 5 72 12 37 "" [1 uses])
(note 72 425 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (reg:XF 155)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [2  S16 A128])) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:XF 1.1897314953572317650212638530309702051690633222946e+4932 [0x0.ffffffffffffffffp+16384])
        (nil)))
(insn 74 73 75 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 155))) s_clogl.c:37 -1
     (nil))
(jump_insn 75 74 76 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 456)
            (pc))) s_clogl.c:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 456)
(note 76 75 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 13 (set (reg:XF 156)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S16 A128])) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:XF 3.3621031431120935062626778173217526025980793448465e-4932 [0x0.8p-16381])
        (nil)))
(insn 78 77 79 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 156))) s_clogl.c:37 -1
     (nil))
(jump_insn 79 78 80 13 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 460)
            (pc))) s_clogl.c:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 460)
(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 14 (set (reg:SF 158)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 82 81 83 14 (set (reg:XF 157)
        (float_extend:XF (reg:SF 158))) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 83 82 84 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 157))) s_clogl.c:37 -1
     (nil))
(jump_insn 84 83 484 14 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 464)
            (pc))) s_clogl.c:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 464)
(note 484 84 85 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 85 484 86 15 (set (reg:SF 160)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 86 85 87 15 (set (reg:XF 159)
        (float_extend:XF (reg:SF 160))) s_clogl.c:37 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 87 86 88 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 159))) s_clogl.c:37 -1
     (nil))
(jump_insn 88 87 485 15 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 520)
            (pc))) s_clogl.c:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 520)
(note 485 88 89 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 89 485 90 16 (set (pc)
        (label_ref:DI 464)) s_clogl.c:37 654 {jump}
     (nil)
 -> 464)
(barrier 90 89 520)
(code_label 520 90 92 18 51 "" [1 uses])
(note 92 520 93 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 113 [ rcls ])
            (const_int 2 [0x2]))) s_clogl.c:39 -1
     (nil))
(jump_insn 94 93 95 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 466)
            (pc))) s_clogl.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 1111 (nil))
 -> 466)
(note 95 94 96 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 19 (set (reg:HI 162)
        (unspec:HI [
                (reg:XF 131 [ x$real ])
            ] UNSPEC_FXAM)) s_clogl.c:42 -1
     (nil))
(insn 97 96 98 19 (parallel [
            (set (reg:SI 161)
                (and:SI (subreg:SI (reg:HI 162) 0)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:42 -1
     (nil))
(insn 98 97 99 19 (set (reg:SI 97 [ D.5808 ])
        (reg:SI 161)) s_clogl.c:42 -1
     (nil))
(insn 99 98 100 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.5808 ])
            (const_int 0 [0]))) s_clogl.c:42 -1
     (nil))
(jump_insn 100 99 101 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 470)
            (pc))) s_clogl.c:42 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 470)
(note 101 100 6 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 6 101 467 20 (set (reg:XF 94 [ D.5807 ])
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S16 A128])) s_clogl.c:42 -1
     (expr_list:REG_EQUAL (const_double:XF 3.14159265358979323851280895940618620443274267017841339e+0 [0x0.c90fdaa22168c235p+2])
        (nil)))
(jump_insn 467 6 468 20 (set (pc)
        (label_ref 102)) -1
     (nil)
 -> 102)
(barrier 468 467 470)
(code_label 470 468 469 21 45 "" [1 uses])
(note 469 470 7 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 7 469 8 21 (set (reg:SF 138)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:42 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 8 7 102 21 (set (reg:XF 94 [ D.5807 ])
        (float_extend:XF (reg:SF 138))) s_clogl.c:42 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(code_label 102 8 103 22 8 "" [1 uses])
(note 103 102 104 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 22 (set (reg:HI 164)
        (unspec:HI [
                (reg:XF 132 [ x$imag ])
            ] UNSPEC_FXAM)) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(insn 105 104 106 22 (parallel [
            (set (reg:SI 163)
                (and:SI (subreg:SI (reg:HI 164) 0)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(insn 106 105 107 22 (set (reg:XF 128 [ result$imag ])
        (abs:XF (reg:XF 94 [ D.5807 ]))) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(insn 107 106 108 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163)
            (const_int 0 [0]))) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(jump_insn 108 107 487 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) ../sysdeps/generic/math_private.h:346 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 110)
(note 487 108 109 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 109 487 110 23 (set (reg:XF 128 [ result$imag ])
        (neg:XF (reg:XF 128 [ result$imag ]))) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(code_label 110 109 488 24 9 "" [1 uses])
(note 488 110 111 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 111 488 112 24 (set (reg:SF 167)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [3  S4 A32])) s_clogl.c:45 -1
     (expr_list:REG_EQUAL (const_double:SF -1.0e+0 [-0x0.8p+1])
        (nil)))
(insn 112 111 113 24 (set (reg:XF 166)
        (float_extend:XF (reg:SF 167))) s_clogl.c:45 -1
     (expr_list:REG_EQUAL (const_double:XF -1.0e+0 [-0x0.8p+1])
        (nil)))
(insn 113 112 114 24 (set (reg:XF 165 [ result$real ])
        (div:XF (reg:XF 166)
            (reg/v:XF 90 [ absy ]))) s_clogl.c:45 -1
     (nil))
(insn 114 113 115 24 (set (reg/v:XF 87 [ result ])
        (reg:XF 165 [ result$real ])) s_clogl.c:45 -1
     (nil))
(insn 115 114 116 24 (set (reg/v:XF 88 [ result+16 ])
        (reg:XF 128 [ result$imag ])) s_clogl.c:45 -1
     (nil))
(jump_insn 116 115 117 24 (set (pc)
        (label_ref 408)) -1
     (nil)
 -> 408)
(barrier 117 116 466)
(code_label 466 117 465 25 44 "" [1 uses])
(note 465 466 9 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 9 465 118 25 (set (reg/v:SI 96 [ icls ])
        (const_int 2 [0x2])) s_clogl.c:37 -1
     (nil))
(code_label 118 9 119 26 7 "" [3 uses])
(note 119 118 120 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 113 [ rcls ])
            (const_int 0 [0]))) s_clogl.c:47 -1
     (nil))
(jump_insn 121 120 122 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) s_clogl.c:47 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 135)
(note 122 121 123 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 113 [ rcls ])
            (const_int 1 [0x1]))) s_clogl.c:112 -1
     (nil))
(insn 124 123 125 27 (set (reg:QI 169 [ D.5806 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) s_clogl.c:112 -1
     (nil))
(insn 125 124 126 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:112 -1
     (nil))
(jump_insn 126 125 489 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 521)
            (pc))) s_clogl.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 521)
(note 489 126 127 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 127 489 128 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 96 [ icls ])
            (const_int 1 [0x1]))) s_clogl.c:112 -1
     (nil))
(insn 128 127 129 28 (set (reg:QI 171 [ D.5806 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) s_clogl.c:112 -1
     (nil))
(insn 129 128 130 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 171 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:112 -1
     (nil))
(jump_insn 130 129 490 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 474)
            (pc))) s_clogl.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 474)
(note 490 130 521 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(code_label 521 490 132 30 52 "" [1 uses])
(note 132 521 14 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 14 132 15 30 (set (reg:SF 140)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [3  S4 A32])) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:SF +Inf [+Inf])
        (nil)))
(insn 15 14 16 30 (set (reg/v:XF 87 [ result ])
        (float_extend:XF (reg:SF 140))) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:XF +Inf [+Inf])
        (nil)))
(insn 16 15 17 30 (set (reg:SF 141)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 17 16 133 30 (set (reg/v:XF 88 [ result+16 ])
        (float_extend:XF (reg:SF 141))) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(jump_insn 133 17 134 30 (set (pc)
        (label_ref 408)) -1
     (nil)
 -> 408)
(barrier 134 133 135)
(code_label 135 134 136 31 11 "" [1 uses])
(note 136 135 137 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 31 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg/v:XF 90 [ absy ]))) s_clogl.c:53 -1
     (nil))
(jump_insn 138 137 139 31 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) s_clogl.c:53 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 140)
(note 139 138 10 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 10 139 11 32 (set (reg:XF 139)
        (reg/v:XF 114 [ absy ])) s_clogl.c:53 -1
     (nil))
(insn 11 10 12 32 (set (reg/v:XF 114 [ absy ])
        (reg/v:XF 90 [ absy ])) s_clogl.c:50 -1
     (nil))
(insn 12 11 140 32 (set (reg/v:XF 90 [ absy ])
        (reg:XF 139)) s_clogl.c:53 -1
     (nil))
(code_label 140 12 141 33 13 "" [1 uses])
(note 141 140 142 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 33 (set (reg:XF 172)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [2  S16 A128])) s_clogl.c:60 -1
     (expr_list:REG_EQUAL (const_double:XF 5.9486574767861588251063192651548510258453166114731e+4931 [0x0.ffffffffffffffffp+16383])
        (nil)))
(insn 143 142 144 33 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 172))) s_clogl.c:60 -1
     (nil))
(jump_insn 144 143 491 33 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 522)
            (pc))) s_clogl.c:60 612 {*jcc_1}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 522)
(note 491 144 145 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 145 491 146 34 (set (pc)
        (label_ref 168)) s_clogl.c:60 -1
     (nil)
 -> 168)
(barrier 146 145 522)
(code_label 522 146 148 36 53 "" [1 uses])
(note 148 522 149 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 36 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 114 [ absy ])) s_clogl.c:63 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 150 149 151 36 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) s_clogl.c:63 -1
     (nil))
(call_insn 151 150 152 36 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>) [0 __scalbnl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 152 151 153 36 (set (reg/v:XF 114 [ absy ])
        (reg:XF 8 st)) s_clogl.c:63 -1
     (nil))
(insn 153 152 154 36 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 154 153 155 36 (set (reg:XF 173)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [2  S16 A128])) s_clogl.c:64 -1
     (expr_list:REG_EQUAL (const_double:XF 6.7242062862241870125253556346435052051961586896929e-4932 [0x0.8p-16380])
        (nil)))
(insn 155 154 156 36 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 173))) s_clogl.c:64 -1
     (nil))
(jump_insn 156 155 493 36 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 523)
            (pc))) s_clogl.c:64 612 {*jcc_1}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 523)
(note 493 156 157 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(jump_insn 157 493 158 37 (set (pc)
        (label_ref:DI 476)) s_clogl.c:64 654 {jump}
     (nil)
 -> 476)
(barrier 158 157 523)
(code_label 523 158 160 39 54 "" [1 uses])
(note 160 523 161 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 39 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 90 [ absy ])) s_clogl.c:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 162 161 163 39 (set (reg:SI 5 di)
        (const_int -1 [0xffffffffffffffff])) s_clogl.c:64 -1
     (nil))
(call_insn 163 162 164 39 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>) [0 __scalbnl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:64 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 164 163 165 39 (set (reg/v:XF 90 [ absy ])
        (reg:XF 8 st)) s_clogl.c:64 -1
     (nil))
(insn 165 164 33 39 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 33 165 166 39 (set (reg/v:SI 129 [ scale ])
        (const_int -1 [0xffffffffffffffff])) s_clogl.c:62 -1
     (nil))
(jump_insn 166 33 167 39 (set (pc)
        (label_ref:DI 228)) 654 {jump}
     (nil)
 -> 228)
(barrier 167 166 168)
(code_label 168 167 169 40 14 "" [1 uses])
(note 169 168 170 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 40 (set (reg:XF 174)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S16 A128])) s_clogl.c:66 -1
     (expr_list:REG_EQUAL (const_double:XF 3.3621031431120935062626778173217526025980793448465e-4932 [0x0.8p-16381])
        (nil)))
(insn 171 170 172 40 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 174)
            (reg/v:XF 114 [ absy ]))) s_clogl.c:66 -1
     (nil))
(jump_insn 172 171 495 40 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 524)
            (pc))) s_clogl.c:66 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 524)
(note 495 172 173 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn 173 495 174 41 (set (pc)
        (label_ref 195)) s_clogl.c:66 -1
     (nil)
 -> 195)
(barrier 174 173 524)
(code_label 524 174 176 43 55 "" [1 uses])
(note 176 524 177 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 43 (set (reg:XF 175)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S16 A128])) s_clogl.c:66 -1
     (expr_list:REG_EQUAL (const_double:XF 3.3621031431120935062626778173217526025980793448465e-4932 [0x0.8p-16381])
        (nil)))
(insn 178 177 179 43 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 175)
            (reg/v:XF 90 [ absy ]))) s_clogl.c:66 -1
     (nil))
(jump_insn 179 178 497 43 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 525)
            (pc))) s_clogl.c:66 612 {*jcc_1}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 525)
(note 497 179 180 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 180 497 181 44 (set (pc)
        (label_ref 195)) s_clogl.c:66 -1
     (nil)
 -> 195)
(barrier 181 180 525)
(code_label 525 181 183 46 56 "" [1 uses])
(note 183 525 184 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 46 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 114 [ absy ])) s_clogl.c:69 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 185 184 186 46 (set (reg:SI 5 di)
        (const_int 64 [0x40])) s_clogl.c:69 -1
     (nil))
(call_insn 186 185 187 46 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>) [0 __scalbnl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:69 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 187 186 188 46 (set (reg/v:XF 114 [ absy ])
        (reg:XF 8 st)) s_clogl.c:69 -1
     (nil))
(insn 188 187 189 46 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 90 [ absy ])) s_clogl.c:70 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 189 188 190 46 (set (reg:SI 5 di)
        (const_int 64 [0x40])) s_clogl.c:70 -1
     (nil))
(call_insn 190 189 191 46 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>) [0 __scalbnl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:70 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2af96c4c8798 __scalbnl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 191 190 192 46 (set (reg/v:XF 90 [ absy ])
        (reg:XF 8 st)) s_clogl.c:70 -1
     (nil))
(insn 192 191 34 46 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:70 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 34 192 193 46 (set (reg/v:SI 129 [ scale ])
        (const_int 64 [0x40])) s_clogl.c:68 -1
     (nil))
(jump_insn 193 34 194 46 (set (pc)
        (label_ref:DI 228)) s_clogl.c:70 654 {jump}
     (nil)
 -> 228)
(barrier 194 193 195)
(code_label 195 194 196 47 18 "" [2 uses])
(note 196 195 197 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 47 (set (reg:SF 177)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:73 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 198 197 199 47 (set (reg:XF 176)
        (float_extend:XF (reg:SF 177))) s_clogl.c:73 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 199 198 200 47 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 176))) s_clogl.c:73 -1
     (nil))
(jump_insn 200 199 499 47 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 478)
            (pc))) s_clogl.c:73 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 478)
(note 499 200 201 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 201 499 202 48 (set (reg:SF 179)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:73 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 202 201 203 48 (set (reg:XF 178)
        (float_extend:XF (reg:SF 179))) s_clogl.c:73 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 203 202 204 48 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 178))) s_clogl.c:73 -1
     (nil))
(jump_insn 204 203 500 48 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 526)
            (pc))) s_clogl.c:73 612 {*jcc_1}
     (int_list:REG_BR_PROB 4777 (nil))
 -> 526)
(note 500 204 205 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 205 500 206 49 (set (pc)
        (label_ref:DI 478)) s_clogl.c:73 654 {jump}
     (nil)
 -> 478)
(barrier 206 205 526)
(code_label 526 206 208 51 57 "" [1 uses])
(note 208 526 209 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 51 (set (reg:XF 180 [ D.5807 ])
        (mult:XF (reg/v:XF 90 [ absy ])
            (reg/v:XF 90 [ absy ]))) s_clogl.c:75 -1
     (nil))
(insn 210 209 211 51 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg:XF 180 [ D.5807 ])) s_clogl.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 211 210 212 51 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>) [0 __log1pl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 212 211 213 51 (set (reg:XF 103 [ D.5807 ])
        (reg:XF 8 st)) s_clogl.c:75 -1
     (nil))
(insn 213 212 214 51 (set (reg:SF 182)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:75 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 214 213 215 51 (set (reg:XF 181)
        (float_extend:XF (reg:SF 182))) s_clogl.c:75 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 215 214 216 51 (set (reg:XF 124 [ result$real ])
        (mult:XF (reg:XF 103 [ D.5807 ])
            (reg:XF 181))) s_clogl.c:75 -1
     (nil))
(insn 216 215 217 51 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 217 216 218 51 (set (reg:XF 183)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [2  S16 A128])) s_clogl.c:76 -1
     (expr_list:REG_EQUAL (const_double:XF 3.3621031431120935062626778173217526025980793448465e-4932 [0x0.8p-16381])
        (nil)))
(insn 218 217 219 51 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 183)
            (reg:XF 124 [ result$real ]))) s_clogl.c:76 -1
     (nil))
(jump_insn 219 218 502 51 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 527)
            (pc))) s_clogl.c:76 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 527)
(note 502 219 220 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 220 502 221 52 (set (pc)
        (label_ref 399)) s_clogl.c:76 -1
     (nil)
 -> 399)
(barrier 221 220 527)
(code_label 527 221 223 54 58 "" [1 uses])
(note 223 527 224 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 54 (set (reg:XF 184 [ force_underflow_tmp2 ])
        (mult:XF (reg:XF 124 [ result$real ])
            (reg:XF 124 [ result$real ]))) s_clogl.c:76 -1
     (nil))
(insn 225 224 226 54 (parallel [
            (asm_operands/v ("") ("") 0 [
                    (reg:XF 184 [ force_underflow_tmp2 ])
                ]
                 [
                    (asm_input:XF ("f") s_clogl.c:76)
                ]
                 [] s_clogl.c:76)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) s_clogl.c:76 -1
     (nil))
(jump_insn 226 225 227 54 (set (pc)
        (label_ref 399)) s_clogl.c:76 -1
     (nil)
 -> 399)
(barrier 227 226 478)
(code_label 478 227 477 55 48 "" [2 uses])
(note 477 478 13 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 13 477 228 55 (set (reg/v:SI 129 [ scale ])
        (const_int 0 [0])) -1
     (nil))
(code_label 228 13 229 56 21 "" [3 uses])
(note 229 228 230 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 56 (set (reg:SF 186)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 231 230 232 56 (set (reg:XF 185)
        (float_extend:XF (reg:SF 186))) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 232 231 233 56 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 185))) s_clogl.c:78 -1
     (nil))
(jump_insn 233 232 504 56 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 528)
            (pc))) s_clogl.c:78 612 {*jcc_1}
     (int_list:REG_BR_PROB 7300 (nil))
 -> 528)
(note 504 233 234 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(jump_insn 234 504 235 57 (set (pc)
        (label_ref 285)) s_clogl.c:78 -1
     (nil)
 -> 285)
(barrier 235 234 528)
(code_label 528 235 237 59 59 "" [1 uses])
(note 237 528 238 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 59 (set (reg:SF 188)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [3  S4 A32])) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 239 238 240 59 (set (reg:XF 187)
        (float_extend:XF (reg:SF 188))) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:XF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 240 239 241 59 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 187)
            (reg/v:XF 114 [ absy ]))) s_clogl.c:78 -1
     (nil))
(jump_insn 241 240 506 59 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 529)
            (pc))) s_clogl.c:78 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 529)
(note 506 241 242 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(jump_insn 242 506 243 60 (set (pc)
        (label_ref 285)) s_clogl.c:78 -1
     (nil)
 -> 285)
(barrier 243 242 529)
(code_label 529 243 245 62 60 "" [1 uses])
(note 245 529 246 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 62 (set (reg:SF 193)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 247 246 248 62 (set (reg:XF 192)
        (float_extend:XF (reg:SF 193))) s_clogl.c:78 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 248 247 249 62 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 192)
            (reg/v:XF 90 [ absy ]))) s_clogl.c:78 -1
     (nil))
(insn 249 248 250 62 (set (reg:QI 191 [ D.5806 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) s_clogl.c:78 -1
     (nil))
(insn 250 249 251 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 191 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:78 -1
     (nil))
(jump_insn 251 250 508 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) s_clogl.c:78 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 285)
(note 508 251 252 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 252 508 253 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 129 [ scale ])
            (const_int 0 [0]))) s_clogl.c:78 -1
     (nil))
(insn 253 252 254 63 (set (reg:QI 195 [ D.5806 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) s_clogl.c:78 -1
     (nil))
(insn 254 253 255 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 195 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:78 -1
     (nil))
(jump_insn 255 254 256 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) s_clogl.c:78 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 285)
(note 256 255 257 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 64 (set (reg:SF 198)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:80 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 258 257 259 64 (set (reg:XF 197)
        (float_extend:XF (reg:SF 198))) s_clogl.c:80 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 259 258 260 64 (set (reg:XF 196 [ D.5807 ])
        (minus:XF (reg/v:XF 114 [ absy ])
            (reg:XF 197))) s_clogl.c:80 -1
     (nil))
(insn 260 259 261 64 (set (reg:SF 201)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:80 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 261 260 262 64 (set (reg:XF 200)
        (float_extend:XF (reg:SF 201))) s_clogl.c:80 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 262 261 263 64 (set (reg:XF 199 [ D.5807 ])
        (plus:XF (reg/v:XF 114 [ absy ])
            (reg:XF 200))) s_clogl.c:80 -1
     (nil))
(insn 263 262 264 64 (set (reg/v:XF 92 [ d2m1 ])
        (mult:XF (reg:XF 196 [ D.5807 ])
            (reg:XF 199 [ D.5807 ]))) s_clogl.c:80 -1
     (nil))
(insn 264 263 265 64 (set (reg:SF 203)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [3  S4 A32])) s_clogl.c:81 -1
     (expr_list:REG_EQUAL (const_double:SF 1.08420217248550443400745280086994171142578125e-19 [0x0.8p-62])
        (nil)))
(insn 265 264 266 64 (set (reg:XF 202)
        (float_extend:XF (reg:SF 203))) s_clogl.c:81 -1
     (expr_list:REG_EQUAL (const_double:XF 1.08420217248550443400745280086994171142578125e-19 [0x0.8p-62])
        (nil)))
(insn 266 265 267 64 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 90 [ absy ])
            (reg:XF 202))) s_clogl.c:81 -1
     (nil))
(jump_insn 267 266 509 64 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 530)
            (pc))) s_clogl.c:81 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 530)
(note 509 267 268 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 268 509 269 65 (set (pc)
        (label_ref 274)) s_clogl.c:81 -1
     (nil)
 -> 274)
(barrier 269 268 530)
(code_label 530 269 271 67 61 "" [1 uses])
(note 271 530 272 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 67 (set (reg:XF 204 [ D.5807 ])
        (mult:XF (reg/v:XF 90 [ absy ])
            (reg/v:XF 90 [ absy ]))) s_clogl.c:82 -1
     (nil))
(insn 273 272 274 67 (set (reg/v:XF 92 [ d2m1 ])
        (plus:XF (reg/v:XF 92 [ d2m1 ])
            (reg:XF 204 [ D.5807 ]))) s_clogl.c:82 -1
     (nil))
(code_label 274 273 275 68 28 "" [1 uses])
(note 275 274 276 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 68 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 92 [ d2m1 ])) s_clogl.c:83 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 277 276 278 68 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>) [0 __log1pl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:83 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 278 277 279 68 (set (reg:XF 108 [ D.5807 ])
        (reg:XF 8 st)) s_clogl.c:83 -1
     (nil))
(insn 279 278 280 68 (set (reg:SF 206)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:83 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 280 279 281 68 (set (reg:XF 205)
        (float_extend:XF (reg:SF 206))) s_clogl.c:83 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 281 280 282 68 (set (reg:XF 124 [ result$real ])
        (mult:XF (reg:XF 108 [ D.5807 ])
            (reg:XF 205))) s_clogl.c:83 -1
     (nil))
(insn 282 281 283 68 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:79 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 283 282 284 68 (set (pc)
        (label_ref 399)) s_clogl.c:79 -1
     (nil)
 -> 399)
(barrier 284 283 285)
(code_label 285 284 286 69 25 "" [4 uses])
(note 286 285 287 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 69 (set (reg:SF 208)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:85 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 288 287 289 69 (set (reg:XF 207)
        (float_extend:XF (reg:SF 208))) s_clogl.c:85 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 289 288 290 69 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 207)
            (reg/v:XF 114 [ absy ]))) s_clogl.c:85 -1
     (nil))
(jump_insn 290 289 511 69 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 531)
            (pc))) s_clogl.c:85 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 531)
(note 511 290 291 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(jump_insn 291 511 292 70 (set (pc)
        (label_ref 335)) s_clogl.c:85 -1
     (nil)
 -> 335)
(barrier 292 291 531)
(code_label 531 292 294 72 62 "" [1 uses])
(note 294 531 295 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 72 (set (reg:SF 210)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:86 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 296 295 297 72 (set (reg:XF 209)
        (float_extend:XF (reg:SF 210))) s_clogl.c:86 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 297 296 298 72 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 209))) s_clogl.c:86 -1
     (nil))
(jump_insn 298 297 299 72 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) s_clogl.c:86 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 305)
(note 299 298 300 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 129 [ scale ])
            (const_int 0 [0]))) -1
     (nil))
(insn 301 300 302 73 (set (reg:QI 211)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 302 301 303 73 (set (reg:QI 101 [ D.5806 ])
        (reg:QI 211)) -1
     (nil))
(jump_insn 303 302 304 73 (set (pc)
        (label_ref 348)) -1
     (nil)
 -> 348)
(barrier 304 303 305)
(code_label 305 304 306 74 32 "" [1 uses])
(note 306 305 307 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 129 [ scale ])
            (const_int 0 [0]))) s_clogl.c:88 -1
     (nil))
(insn 308 307 309 74 (set (reg:QI 212)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) s_clogl.c:88 -1
     (nil))
(insn 309 308 310 74 (set (reg:QI 101 [ D.5806 ])
        (reg:QI 212)) s_clogl.c:88 -1
     (nil))
(insn 310 309 311 74 (set (reg:SF 217)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [3  S4 A32])) s_clogl.c:88 -1
     (expr_list:REG_EQUAL (const_double:SF 5.42101086242752217003726400434970855712890625e-20 [0x0.8p-63])
        (nil)))
(insn 311 310 312 74 (set (reg:XF 216)
        (float_extend:XF (reg:SF 217))) s_clogl.c:88 -1
     (expr_list:REG_EQUAL (const_double:XF 5.42101086242752217003726400434970855712890625e-20 [0x0.8p-63])
        (nil)))
(insn 312 311 313 74 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 216)
            (reg/v:XF 90 [ absy ]))) s_clogl.c:88 -1
     (nil))
(insn 313 312 314 74 (set (reg:QI 215 [ D.5806 ])
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) s_clogl.c:88 -1
     (nil))
(insn 314 313 315 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 215 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:88 -1
     (nil))
(jump_insn 315 314 513 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) s_clogl.c:88 -1
     (int_list:REG_BR_PROB 3550 (nil))
 -> 348)
(note 513 315 316 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 316 513 317 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:88 -1
     (nil))
(jump_insn 317 316 318 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) s_clogl.c:88 -1
     (int_list:REG_BR_PROB 5504 (nil))
 -> 348)
(note 318 317 319 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 76 (set (reg:SF 220)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 320 319 321 76 (set (reg:XF 219)
        (float_extend:XF (reg:SF 220))) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 321 320 322 76 (set (reg:XF 218 [ D.5807 ])
        (minus:XF (reg/v:XF 114 [ absy ])
            (reg:XF 219))) s_clogl.c:91 -1
     (nil))
(insn 322 321 323 76 (set (reg:SF 223)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 323 322 324 76 (set (reg:XF 222)
        (float_extend:XF (reg:SF 223))) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 324 323 325 76 (set (reg:XF 221 [ D.5807 ])
        (plus:XF (reg/v:XF 114 [ absy ])
            (reg:XF 222))) s_clogl.c:91 -1
     (nil))
(insn 325 324 326 76 (set (reg:XF 224 [ d2m1 ])
        (mult:XF (reg:XF 218 [ D.5807 ])
            (reg:XF 221 [ D.5807 ]))) s_clogl.c:91 -1
     (nil))
(insn 326 325 327 76 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg:XF 224 [ d2m1 ])) s_clogl.c:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 327 326 328 76 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>) [0 __log1pl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:91 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 328 327 329 76 (set (reg:XF 112 [ D.5807 ])
        (reg:XF 8 st)) s_clogl.c:91 -1
     (nil))
(insn 329 328 330 76 (set (reg:SF 226)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 330 329 331 76 (set (reg:XF 225)
        (float_extend:XF (reg:SF 226))) s_clogl.c:91 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 331 330 332 76 (set (reg:XF 124 [ result$real ])
        (mult:XF (reg:XF 112 [ D.5807 ])
            (reg:XF 225))) s_clogl.c:91 -1
     (nil))
(insn 332 331 333 76 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:89 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 333 332 334 76 (set (pc)
        (label_ref 399)) s_clogl.c:89 -1
     (nil)
 -> 399)
(barrier 334 333 335)
(code_label 335 334 336 77 30 "" [1 uses])
(note 336 335 337 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 77 (set (reg:SF 228)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [3  S4 A32])) s_clogl.c:93 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 338 337 339 77 (set (reg:XF 227)
        (float_extend:XF (reg:SF 228))) s_clogl.c:93 -1
     (expr_list:REG_EQUAL (const_double:XF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 339 338 340 77 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 227)
            (reg/v:XF 114 [ absy ]))) s_clogl.c:93 -1
     (nil))
(jump_insn 340 339 514 77 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 532)
            (pc))) s_clogl.c:93 612 {*jcc_1}
     (int_list:REG_BR_PROB 3549 (nil))
 -> 532)
(note 514 340 341 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn 341 514 342 78 (set (pc)
        (label_ref 384)) s_clogl.c:93 -1
     (nil)
 -> 384)
(barrier 342 341 532)
(code_label 532 342 344 80 63 "" [1 uses])
(note 344 532 345 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 129 [ scale ])
            (const_int 0 [0]))) -1
     (nil))
(insn 346 345 347 80 (set (reg:QI 229)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 347 346 348 80 (set (reg:QI 101 [ D.5806 ])
        (reg:QI 229)) -1
     (nil))
(code_label 348 347 349 81 33 "" [3 uses])
(note 349 348 350 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 81 (set (reg:SF 233)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:95 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 351 350 352 81 (set (reg:XF 232)
        (float_extend:XF (reg:SF 233))) s_clogl.c:95 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 352 351 353 81 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg:XF 232))) s_clogl.c:95 -1
     (nil))
(insn 353 352 354 81 (set (reg:QI 231 [ D.5806 ])
        (ge:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) s_clogl.c:95 -1
     (nil))
(insn 354 353 355 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 231 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:95 -1
     (nil))
(jump_insn 355 354 516 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) s_clogl.c:95 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 384)
(note 516 355 356 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 356 516 357 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.5806 ])
            (const_int 0 [0]))) s_clogl.c:95 -1
     (nil))
(jump_insn 357 356 358 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) s_clogl.c:95 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 384)
(note 358 357 359 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 83 (set (reg:XF 234 [ D.5807 ])
        (mult:XF (reg/v:XF 114 [ absy ])
            (reg/v:XF 114 [ absy ]))) s_clogl.c:96 -1
     (nil))
(insn 360 359 361 83 (set (reg:XF 235 [ D.5807 ])
        (mult:XF (reg/v:XF 90 [ absy ])
            (reg/v:XF 90 [ absy ]))) s_clogl.c:96 -1
     (nil))
(insn 361 360 362 83 (set (reg:XF 236 [ D.5807 ])
        (plus:XF (reg:XF 234 [ D.5807 ])
            (reg:XF 235 [ D.5807 ]))) s_clogl.c:96 -1
     (nil))
(insn 362 361 363 83 (set (reg:SF 238)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:96 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 363 362 364 83 (set (reg:XF 237)
        (float_extend:XF (reg:SF 238))) s_clogl.c:96 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 364 363 365 83 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 236 [ D.5807 ])
            (reg:XF 237))) s_clogl.c:96 -1
     (nil))
(jump_insn 365 364 517 83 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 533)
            (pc))) s_clogl.c:96 612 {*jcc_1}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 533)
(note 517 365 366 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(jump_insn 366 517 367 84 (set (pc)
        (label_ref 384)) s_clogl.c:96 -1
     (nil)
 -> 384)
(barrier 367 366 533)
(code_label 533 367 369 86 64 "" [1 uses])
(note 369 533 370 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 86 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 90 [ absy ])) s_clogl.c:98 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 371 370 372 86 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 114 [ absy ])) s_clogl.c:98 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 372 371 373 86 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__x2y2m1l") [flags 0x41]  <function_decl 0x2af96c67ee58 __x2y2m1l>) [0 __x2y2m1l S1 A8])
            (const_int 32 [0x20]))) s_clogl.c:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__x2y2m1l") [flags 0x41]  <function_decl 0x2af96c67ee58 __x2y2m1l>)
        (nil))
    (nil))
(insn 373 372 374 86 (set (reg/v:XF 118 [ d2m1 ])
        (reg:XF 8 st)) s_clogl.c:98 -1
     (nil))
(insn 374 373 375 86 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 375 374 376 86 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 118 [ d2m1 ])) s_clogl.c:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 376 375 377 86 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>) [0 __log1pl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:99 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__log1pl") [flags 0x41]  <function_decl 0x2af96c4ac6c0 __log1pl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 377 376 378 86 (set (reg:XF 119 [ D.5807 ])
        (reg:XF 8 st)) s_clogl.c:99 -1
     (nil))
(insn 378 377 379 86 (set (reg:SF 240)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [3  S4 A32])) s_clogl.c:99 -1
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 379 378 380 86 (set (reg:XF 239)
        (float_extend:XF (reg:SF 240))) s_clogl.c:99 -1
     (expr_list:REG_EQUAL (const_double:XF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 380 379 381 86 (set (reg:XF 124 [ result$real ])
        (mult:XF (reg:XF 119 [ D.5807 ])
            (reg:XF 239))) s_clogl.c:99 -1
     (nil))
(insn 381 380 382 86 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:97 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 382 381 383 86 (set (pc)
        (label_ref 399)) s_clogl.c:97 -1
     (nil)
 -> 399)
(barrier 383 382 384)
(code_label 384 383 385 87 34 "" [4 uses])
(note 385 384 386 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 87 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 90 [ absy ])) s_clogl.c:103 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 387 386 388 87 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 114 [ absy ])) s_clogl.c:103 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 388 387 389 87 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__ieee754_hypotl") [flags 0x41]  <function_decl 0x2af96c6770d8 __ieee754_hypotl>) [0 __ieee754_hypotl S1 A8])
            (const_int 32 [0x20]))) s_clogl.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ieee754_hypotl") [flags 0x41]  <function_decl 0x2af96c6770d8 __ieee754_hypotl>)
        (nil))
    (nil))
(insn 389 388 390 87 (set (reg/v:XF 120 [ d ])
        (reg:XF 8 st)) s_clogl.c:103 -1
     (nil))
(insn 390 389 391 87 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:104 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 391 390 392 87 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 120 [ d ])) s_clogl.c:104 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 392 391 393 87 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__ieee754_logl") [flags 0x41]  <function_decl 0x2af96c6751b0 __ieee754_logl>) [0 __ieee754_logl S1 A8])
            (const_int 16 [0x10]))) s_clogl.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ieee754_logl") [flags 0x41]  <function_decl 0x2af96c6751b0 __ieee754_logl>)
        (nil))
    (nil))
(insn 393 392 394 87 (set (reg:XF 121 [ D.5807 ])
        (reg:XF 8 st)) s_clogl.c:104 -1
     (nil))
(insn 394 393 395 87 (set (reg:XF 241 [ D.5807 ])
        (float:XF (reg/v:SI 129 [ scale ]))) s_clogl.c:104 -1
     (nil))
(insn 395 394 396 87 (set (reg:XF 243)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [2  S16 A128])) s_clogl.c:104 -1
     (expr_list:REG_EQUAL (const_double:XF 6.93147180559945309428690474184975300886435434222221375e-1 [0x0.b17217f7d1cf79acp+0])
        (nil)))
(insn 396 395 397 87 (set (reg:XF 242 [ D.5807 ])
        (mult:XF (reg:XF 241 [ D.5807 ])
            (reg:XF 243))) s_clogl.c:104 -1
     (nil))
(insn 397 396 398 87 (set (reg:XF 124 [ result$real ])
        (minus:XF (reg:XF 121 [ D.5807 ])
            (reg:XF 242 [ D.5807 ]))) s_clogl.c:104 -1
     (nil))
(insn 398 397 399 87 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_clogl.c:104 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 399 398 400 88 23 "" [5 uses])
(note 400 399 401 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 88 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg:XF 131 [ x$real ])) s_clogl.c:107 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 402 401 403 88 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg:XF 132 [ x$imag ])) s_clogl.c:107 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 403 402 404 88 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__ieee754_atan2l") [flags 0x41]  <function_decl 0x2af96c675438 __ieee754_atan2l>) [0 __ieee754_atan2l S1 A8])
            (const_int 32 [0x20]))) s_clogl.c:107 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ieee754_atan2l") [flags 0x41]  <function_decl 0x2af96c675438 __ieee754_atan2l>)
        (nil))
    (nil))
(insn 404 403 405 88 (set (reg:XF 125 [ result$imag ])
        (reg:XF 8 st)) s_clogl.c:107 -1
     (nil))
(insn 405 404 406 88 (set (reg/v:XF 87 [ result ])
        (reg:XF 124 [ result$real ])) s_clogl.c:107 -1
     (nil))
(insn 406 405 407 88 (set (reg/v:XF 88 [ result+16 ])
        (reg:XF 125 [ result$imag ])) s_clogl.c:107 -1
     (nil))
(insn 407 406 471 88 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 471 407 472 88 (set (pc)
        (label_ref 408)) -1
     (nil)
 -> 408)
(barrier 472 471 474)
(code_label 474 472 473 89 46 "" [1 uses])
(note 473 474 18 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 18 473 19 89 (set (reg:SF 142)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 19 18 20 89 (set (reg/v:XF 87 [ result ])
        (float_extend:XF (reg:SF 142))) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(insn 20 19 21 89 (set (reg:SF 143)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 21 20 408 89 (set (reg/v:XF 88 [ result+16 ])
        (float_extend:XF (reg:SF 143))) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(code_label 408 21 409 90 10 "" [5 uses])
(note 409 408 410 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 90 (set (reg:XF 134 [ <retval> ])
        (reg/v:XF 87 [ result ])) s_clogl.c:119 -1
     (nil))
(insn 411 410 412 90 (set (reg:XF 135 [ <retval>+16 ])
        (reg/v:XF 88 [ result+16 ])) s_clogl.c:119 -1
     (nil))
(jump_insn 412 411 413 90 (set (pc)
        (label_ref 439)) s_clogl.c:119 -1
     (nil)
 -> 439)
(barrier 413 412 456)
(code_label 456 413 455 91 41 "" [1 uses])
(note 455 456 31 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 31 455 457 91 (set (reg/v:SI 96 [ icls ])
        (const_int 1 [0x1])) s_clogl.c:37 -1
     (nil))
(jump_insn 457 31 458 91 (set (pc)
        (label_ref:DI 118)) 654 {jump}
     (nil)
 -> 118)
(barrier 458 457 460)
(code_label 460 458 459 92 42 "" [1 uses])
(note 459 460 30 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 30 459 461 92 (set (reg/v:SI 96 [ icls ])
        (const_int 4 [0x4])) s_clogl.c:37 -1
     (nil))
(jump_insn 461 30 462 92 (set (pc)
        (label_ref:DI 118)) 654 {jump}
     (nil)
 -> 118)
(barrier 462 461 464)
(code_label 464 462 463 93 43 "" [2 uses])
(note 463 464 32 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 32 463 416 93 (set (reg/v:SI 96 [ icls ])
        (const_int 3 [0x3])) s_clogl.c:37 -1
     (nil))
(jump_insn 416 32 417 93 (set (pc)
        (label_ref 118)) s_clogl.c:119 -1
     (nil)
 -> 118)
(barrier 417 416 476)
(code_label 476 417 475 95 47 "" [1 uses])
(note 475 476 35 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 35 475 36 95 (set (reg/v:SI 129 [ scale ])
        (const_int -1 [0xffffffffffffffff])) s_clogl.c:62 -1
     (nil))
(insn 36 35 37 95 (set (reg:SF 148)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_clogl.c:64 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 37 36 420 95 (set (reg/v:XF 90 [ absy ])
        (float_extend:XF (reg:SF 148))) s_clogl.c:64 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 420 37 421 95 (set (pc)
        (label_ref 228)) s_clogl.c:119 -1
     (nil)
 -> 228)
(barrier 421 420 422)
(code_label 422 421 423 97 3 "" [1 uses])
(note 423 422 424 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 426 97 (set (reg/v:XF 114 [ absy ])
        (abs:XF (reg:XF 132 [ x$imag ]))) s_clogl.c:37 -1
     (nil))
(insn 426 424 427 97 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg/v:XF 114 [ absy ]))) s_clogl.c:37 -1
     (nil))
(jump_insn 427 426 430 97 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 480)
            (pc))) s_clogl.c:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 9220 (nil))
 -> 480)
(note 430 427 26 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 26 430 27 98 (set (reg:SF 146)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [3  S4 A32])) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:SF +Inf [+Inf])
        (nil)))
(insn 27 26 28 98 (set (reg/v:XF 87 [ result ])
        (float_extend:XF (reg:SF 146))) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:XF +Inf [+Inf])
        (nil)))
(insn 28 27 29 98 (set (reg:SF 147)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 29 28 428 98 (set (reg/v:XF 88 [ result+16 ])
        (float_extend:XF (reg:SF 147))) s_clogl.c:114 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(jump_insn 428 29 429 98 (set (pc)
        (label_ref 408)) s_clogl.c:37 -1
     (nil)
 -> 408)
(barrier 429 428 446)
(code_label 446 429 445 99 38 "" [1 uses])
(note 445 446 40 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 40 445 447 99 (set (reg/v:SI 113 [ rcls ])
        (const_int 0 [0])) s_clogl.c:36 -1
     (nil))
(jump_insn 447 40 448 99 (set (pc)
        (label_ref 431)) -1
     (nil)
 -> 431)
(barrier 448 447 450)
(code_label 450 448 449 100 39 "" [1 uses])
(note 449 450 39 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 39 449 451 100 (set (reg/v:SI 113 [ rcls ])
        (const_int 4 [0x4])) s_clogl.c:36 -1
     (nil))
(jump_insn 451 39 452 100 (set (pc)
        (label_ref 431)) -1
     (nil)
 -> 431)
(barrier 452 451 454)
(code_label 454 452 453 101 40 "" [2 uses])
(note 453 454 41 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 41 453 431 101 (set (reg/v:SI 113 [ rcls ])
        (const_int 3 [0x3])) s_clogl.c:36 -1
     (nil))
(code_label 431 41 432 102 2 "" [3 uses])
(note 432 431 433 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 102 (set (reg/v:XF 114 [ absy ])
        (abs:XF (reg:XF 132 [ x$imag ]))) s_clogl.c:37 -1
     (nil))
(insn 434 433 435 102 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 114 [ absy ])
            (reg/v:XF 114 [ absy ]))) s_clogl.c:37 -1
     (nil))
(jump_insn 435 434 438 102 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 425)
            (pc))) s_clogl.c:37 -1
     (int_list:REG_BR_PROB 9002 (nil))
 -> 425)
(note 438 435 22 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 22 438 23 103 (set (reg:SF 144)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 23 22 24 103 (set (reg/v:XF 87 [ result ])
        (float_extend:XF (reg:SF 144))) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(insn 24 23 25 103 (set (reg:SF 145)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 25 24 436 103 (set (reg/v:XF 88 [ result+16 ])
        (float_extend:XF (reg:SF 145))) s_clogl.c:116 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(jump_insn 436 25 437 103 (set (pc)
        (label_ref 408)) s_clogl.c:37 -1
     (nil)
 -> 408)
(barrier 437 436 439)
(code_label 439 437 444 104 1 "" [1 uses])
(note 444 439 440 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 440 444 441 104 (clobber (reg/i:XC 8 st)) s_clogl.c:120 -1
     (nil))
(insn 441 440 442 104 (set (reg:XF 8 st)
        (reg:XF 134 [ <retval> ])) s_clogl.c:120 -1
     (nil))
(insn 442 441 443 104 (set (reg:XF 9 st(1) [+16 ])
        (reg:XF 135 [ <retval>+16 ])) s_clogl.c:120 -1
     (nil))
(insn 443 442 0 104 (use (reg/i:XC 8 st)) s_clogl.c:120 -1
     (nil))
