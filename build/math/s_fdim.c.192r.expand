
;; Function __fdim (__fdim, funcdef_no=87, decl_uid=7255, cgraph_uid=87, symbol_order=88)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 2->7 redirected to 10
Edge 3->7 redirected to 11
Edge 4->7 redirected to 12
Edge 5->7 redirected to 13
Purged non-fallthru edges from bb 15
Purged non-fallthru edges from bb 17
Purged non-fallthru edges from bb 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Forwarding edge 2->4 to 14 failed.
Forwarding edge 2->4 to 14 failed.
deleting block 5
Edge 7->9 redirected to 10
Forwarding edge 7->8 to 16 failed.
Forwarding edge 7->8 to 16 failed.
deleting block 9
Edge 10->12 redirected to 13
Forwarding edge 10->11 to 17 failed.
Forwarding edge 10->11 to 17 failed.
deleting block 12
Removing jump 48.
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 14 failed.
Forwarding edge 7->8 to 16 failed.
Forwarding edge 10->11 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v:DF 93 [ x ])
        (reg:DF 21 xmm0 [ x ])) s_fdim.c:26 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DF 94 [ y ])
        (reg:DF 22 xmm1 [ y ])) s_fdim.c:26 -1
     (nil))
(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 4 13 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 94 [ y ])
            (reg/v:DF 93 [ x ]))) s_fdim.c:27 -1
     (nil))
(jump_insn 13 12 70 2 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 76)
            (pc))) s_fdim.c:27 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 76)
(note 70 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 14 70 15 4 (set (pc)
        (label_ref:DI 57)) s_fdim.c:27 654 {jump}
     (nil)
 -> 57)
(barrier 15 14 76)
(code_label 76 15 17 6 10 "" [1 uses])
(note 17 76 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg/v:DF 88 [ r ])
        (minus:DF (reg/v:DF 93 [ x ])
            (reg/v:DF 94 [ y ]))) s_fdim.c:30 -1
     (nil))
(insn 19 18 20 6 (set (reg:V2DF 96)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 20 19 21 6 (parallel [
            (set (reg:DF 95 [ D.8900 ])
                (abs:DF (reg/v:DF 88 [ r ])))
            (use (reg:V2DF 96))
            (clobber (reg:CC 17 flags))
        ]) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (abs:DF (reg/v:DF 88 [ r ]))
        (nil)))
(insn 21 20 22 6 (set (reg:DF 97)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S8 A64])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 22 21 23 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 95 [ D.8900 ])
            (reg:DF 97))) s_fdim.c:31 -1
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) s_fdim.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 61)
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg:V2DF 99)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 26 25 27 7 (parallel [
            (set (reg:DF 98 [ D.8900 ])
                (abs:DF (reg/v:DF 93 [ x ])))
            (use (reg:V2DF 99))
            (clobber (reg:CC 17 flags))
        ]) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (abs:DF (reg/v:DF 93 [ x ]))
        (nil)))
(insn 27 26 28 7 (set (reg:DF 100)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S8 A64])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 28 27 29 7 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 98 [ D.8900 ])
            (reg:DF 100))) s_fdim.c:31 -1
     (nil))
(jump_insn 29 28 72 7 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) s_fdim.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 77)
(note 72 29 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 30 72 31 8 (set (pc)
        (label_ref:DI 65)) s_fdim.c:31 654 {jump}
     (nil)
 -> 65)
(barrier 31 30 77)
(code_label 77 31 33 10 11 "" [1 uses])
(note 33 77 34 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 10 (set (reg:V2DF 102)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S16 A128])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 35 34 36 10 (parallel [
            (set (reg:DF 101 [ D.8900 ])
                (abs:DF (reg/v:DF 94 [ y ])))
            (use (reg:V2DF 102))
            (clobber (reg:CC 17 flags))
        ]) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (abs:DF (reg/v:DF 94 [ y ]))
        (nil)))
(insn 36 35 37 10 (set (reg:DF 103)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [2  S8 A64])) s_fdim.c:31 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 37 36 38 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 101 [ D.8900 ])
            (reg:DF 103))) s_fdim.c:31 -1
     (nil))
(jump_insn 38 37 74 10 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) s_fdim.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 78)
(note 74 38 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 39 74 40 11 (set (pc)
        (label_ref:DI 69)) s_fdim.c:31 654 {jump}
     (nil)
 -> 69)
(barrier 40 39 78)
(code_label 78 40 42 13 12 "" [1 uses])
(note 42 78 43 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 13 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b74d05f46c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [3  S8 A8])) s_fdim.c:32 -1
     (nil))
(insn 44 43 8 13 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 104)) [1 errno+0 S4 A32])
        (const_int 34 [0x22])) s_fdim.c:32 -1
     (nil))
(insn 8 44 54 13 (set (reg:DF 87 [ D.8900 ])
        (reg/v:DF 88 [ r ])) s_fdim.c:32 -1
     (nil))
(jump_insn 54 8 55 13 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 55 54 57)
(code_label 57 55 56 14 6 "" [1 uses])
(note 56 57 5 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 5 56 58 14 (set (reg:DF 87 [ D.8900 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S8 A64])) s_fdim.c:28 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 58 5 59 14 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 59 58 61)
(code_label 61 59 60 15 7 "" [1 uses])
(note 60 61 7 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 7 60 62 15 (set (reg:DF 87 [ D.8900 ])
        (reg/v:DF 88 [ r ])) s_fdim.c:31 -1
     (nil))
(jump_insn 62 7 63 15 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 63 62 65)
(code_label 65 63 64 16 8 "" [1 uses])
(note 64 65 6 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 6 64 66 16 (set (reg:DF 87 [ D.8900 ])
        (reg/v:DF 88 [ r ])) s_fdim.c:31 -1
     (nil))
(jump_insn 66 6 67 16 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 67 66 69)
(code_label 69 67 68 17 9 "" [1 uses])
(note 68 69 9 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 9 68 45 17 (set (reg:DF 87 [ D.8900 ])
        (reg/v:DF 88 [ r ])) s_fdim.c:31 -1
     (nil))
(code_label 45 9 46 18 2 "" [4 uses])
(note 46 45 47 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 51 18 (set (reg:DF 92 [ <retval> ])
        (reg:DF 87 [ D.8900 ])) -1
     (nil))
(insn 51 47 52 18 (set (reg/i:DF 21 xmm0)
        (reg:DF 92 [ <retval> ])) s_fdim.c:35 -1
     (nil))
(insn 52 51 0 18 (use (reg/i:DF 21 xmm0)) s_fdim.c:35 -1
     (nil))
