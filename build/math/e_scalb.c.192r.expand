
;; Function invalid_fn (invalid_fn, funcdef_no=77, decl_uid=5342, cgraph_uid=77, symbol_order=77)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Purged non-fallthru edges from bb 12
Purged non-fallthru edges from bb 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 7
Edge 4->6 redirected to 7
Forwarding edge 4->5 to 8 failed.
Forwarding edge 4->5 to 8 failed.
deleting block 6
Edge 8->10 redirected to 11
Forwarding edge 8->9 to 12 failed.
Forwarding edge 8->9 to 12 failed.
deleting block 10
Removing jump 47.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 8 failed.
Forwarding edge 8->9 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:DF 90 [ x ])
        (reg:DF 21 xmm0 [ x ])) e_scalb.c:27 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DF 91 [ fn ])
        (reg:DF 22 xmm1 [ fn ])) e_scalb.c:27 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:DF 21 xmm0)
        (reg/v:DF 91 [ fn ])) e_scalb.c:28 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__rint") [flags 0x41]  <function_decl 0x2b7c22d7e510 __rint>) [0 __rint S1 A8])
            (const_int 0 [0]))) e_scalb.c:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__rint") [flags 0x41]  <function_decl 0x2b7c22d7e510 __rint>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 10 9 11 2 (set (reg:DF 88 [ D.5426 ])
        (reg:DF 21 xmm0)) e_scalb.c:28 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 91 [ fn ])
            (reg:DF 88 [ D.5426 ]))) e_scalb.c:28 -1
     (nil))
(jump_insn 12 11 53 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) e_scalb.c:28 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 58)
(note 53 12 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 53 14 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 91 [ fn ])
            (reg:DF 88 [ D.5426 ]))) e_scalb.c:28 -1
     (nil))
(jump_insn 14 13 54 4 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) e_scalb.c:28 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 58)
(note 54 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 54 16 5 (set (pc)
        (label_ref 23)) e_scalb.c:28 -1
     (nil)
 -> 23)
(barrier 16 15 58)
(code_label 58 16 18 7 7 "" [2 uses])
(note 18 58 19 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 7 (set (reg:SF 92)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [2  S4 A32])) ../sysdeps/x86/fpu/bits/fenv.h:119 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 20 19 21 7 (parallel [
            (asm_operands/v ("divss %0, %0 ") ("") 0 [
                    (reg:SF 92)
                ]
                 [
                    (asm_input:SF ("x") ../sysdeps/x86/fpu/bits/fenv.h:119)
                ]
                 [] ../sysdeps/x86/fpu/bits/fenv.h:119)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) ../sysdeps/x86/fpu/bits/fenv.h:119 -1
     (nil))
(jump_insn 21 20 22 7 (set (pc)
        (label_ref 44)) ../sysdeps/x86/fpu/bits/fenv.h:119 -1
     (nil)
 -> 44)
(barrier 22 21 23)
(code_label 23 22 24 8 2 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (reg:DF 93)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [1  S8 A64])) e_scalb.c:33 -1
     (expr_list:REG_EQUAL (const_double:DF 6.5e+4 [0x0.fde8p+16])
        (nil)))
(insn 26 25 27 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 91 [ fn ])
            (reg:DF 93))) e_scalb.c:33 -1
     (nil))
(jump_insn 27 26 56 8 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) e_scalb.c:33 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 59)
(note 56 27 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 28 56 29 9 (set (pc)
        (label_ref 37)) e_scalb.c:33 -1
     (nil)
 -> 37)
(barrier 29 28 59)
(code_label 59 29 31 11 8 "" [1 uses])
(note 31 59 32 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 11 (set (reg:SI 5 di)
        (const_int 65000 [0xfde8])) e_scalb.c:34 -1
     (nil))
(insn 33 32 34 11 (set (reg:DF 21 xmm0)
        (reg/v:DF 90 [ x ])) e_scalb.c:34 -1
     (nil))
(call_insn/j 34 33 35 11 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>) [0 __scalbn S1 A8])
            (const_int 0 [0]))) e_scalb.c:34 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:SI (use (reg:SI 5 di))
            (nil))))
(barrier 35 34 37)
(code_label 37 35 38 12 5 "" [1 uses])
(note 38 37 39 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 12 (set (reg:SI 5 di)
        (const_int -65000 [0xffffffffffff0218])) e_scalb.c:36 -1
     (nil))
(insn 40 39 41 12 (set (reg:DF 21 xmm0)
        (reg/v:DF 90 [ x ])) e_scalb.c:36 -1
     (nil))
(call_insn/j 41 40 42 12 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>) [0 __scalbn S1 A8])
            (const_int 0 [0]))) e_scalb.c:36 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:SI (use (reg:SI 5 di))
            (nil))))
(barrier 42 41 44)
(code_label 44 42 45 13 4 "" [1 uses])
(note 45 44 5 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 5 45 46 13 (set (reg:DF 87 [ D.5426 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [1  S8 A64])) e_scalb.c:31 -1
     (expr_list:REG_EQUAL (const_double:DF +QNaN [+QNaN])
        (nil)))
(insn 46 5 50 13 (set (reg:DF 89 [ <retval> ])
        (reg:DF 87 [ D.5426 ])) -1
     (nil))
(insn 50 46 51 13 (set (reg/i:DF 21 xmm0)
        (reg:DF 89 [ <retval> ])) e_scalb.c:37 -1
     (nil))
(insn 51 50 0 13 (use (reg/i:DF 21 xmm0)) e_scalb.c:37 -1
     (nil))

;; Function __ieee754_scalb (__ieee754_scalb, funcdef_no=78, decl_uid=4928, cgraph_uid=78, symbol_order=78)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13
Edge 7->13 redirected to 16
Purged non-fallthru edges from bb 18
Purged non-fallthru edges from bb 20
Purged non-fallthru edges from bb 23


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 5->6 to 14 failed.
Forwarding edge 5->6 to 14 failed.
deleting block 7
Edge 10->12 redirected to 13
Forwarding edge 11->12 to 13 failed.
Deleted label in block 12.
Edge 15->18 redirected to 19
Edge 16->18 redirected to 19
Forwarding edge 16->17 to 20 failed.
Forwarding edge 16->17 to 20 failed.
deleting block 18
Removing jump 78.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 14 failed.
Forwarding edge 11->12 to 13 failed.
Forwarding edge 16->17 to 20 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:DF 93 [ x ])
        (reg:DF 21 xmm0 [ x ])) e_scalb.c:42 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DF 94 [ fn ])
        (reg:DF 22 xmm1 [ fn ])) e_scalb.c:42 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 93 [ x ])
            (reg/v:DF 93 [ x ]))) e_scalb.c:43 -1
     (nil))
(jump_insn 9 8 25 2 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) e_scalb.c:43 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 14)
(code_label 25 9 10 4 20 "" [2 uses])
(note 10 25 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DF 87 [ D.5433 ])
        (mult:DF (reg/v:DF 93 [ x ])
            (reg/v:DF 94 [ fn ]))) e_scalb.c:44 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (label_ref 75)) e_scalb.c:44 -1
     (nil)
 -> 75)
(barrier 13 12 14)
(code_label 14 13 15 5 16 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:V2DF 95)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [1  S16 A128])) e_scalb.c:45 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 17 16 18 5 (parallel [
            (set (reg:DF 88 [ D.5433 ])
                (abs:DF (reg/v:DF 94 [ fn ])))
            (use (reg:V2DF 95))
            (clobber (reg:CC 17 flags))
        ]) e_scalb.c:45 -1
     (expr_list:REG_EQUAL (abs:DF (reg/v:DF 94 [ fn ]))
        (nil)))
(insn 18 17 19 5 (set (reg:DF 96)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [1  S8 A64])) e_scalb.c:45 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 19 18 20 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 96)
            (reg:DF 88 [ D.5433 ]))) e_scalb.c:45 -1
     (nil))
(jump_insn 20 19 86 5 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 93)
            (pc))) e_scalb.c:45 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 93)
(note 86 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 21 86 22 6 (set (pc)
        (label_ref 46)) e_scalb.c:45 -1
     (nil)
 -> 46)
(barrier 22 21 93)
(code_label 93 22 24 8 26 "" [1 uses])
(note 24 93 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 24 27 8 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 94 [ fn ])
            (reg/v:DF 94 [ fn ]))) e_scalb.c:47 -1
     (nil))
(jump_insn 27 26 28 8 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) e_scalb.c:47 -1
     (int_list:REG_BR_PROB 663 (nil))
 -> 25)
(note 28 27 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 9 (set (reg:DF 97)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) e_scalb.c:47 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 30 29 31 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 94 [ fn ])
            (reg:DF 97))) e_scalb.c:47 -1
     (nil))
(jump_insn 31 30 32 9 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) e_scalb.c:47 -1
     (int_list:REG_BR_PROB 6335 (nil))
 -> 25)
(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 10 (set (reg:DF 98)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) e_scalb.c:49 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 34 33 35 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 93 [ x ])
            (reg:DF 98))) e_scalb.c:49 -1
     (nil))
(jump_insn 35 34 88 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) e_scalb.c:49 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 94)
(note 88 35 36 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 36 88 37 11 (set (reg:DF 99)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [1  S8 A64])) e_scalb.c:49 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 37 36 38 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 93 [ x ])
            (reg:DF 99))) e_scalb.c:49 -1
     (nil))
(jump_insn 38 37 89 11 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) e_scalb.c:49 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 85)
(note 89 38 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 94 89 40 13 27 "" [1 uses])
(note 40 94 41 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 13 (set (reg:V2DF 101)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [1  S16 A128])) e_scalb.c:51 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 42 41 43 13 (parallel [
            (set (reg:DF 100 [ D.5433 ])
                (neg:DF (reg/v:DF 94 [ fn ])))
            (use (reg:V2DF 101))
            (clobber (reg:CC 17 flags))
        ]) e_scalb.c:51 -1
     (expr_list:REG_EQUAL (neg:DF (reg/v:DF 94 [ fn ]))
        (nil)))
(insn 43 42 44 13 (set (reg:DF 87 [ D.5433 ])
        (div:DF (reg/v:DF 93 [ x ])
            (reg:DF 100 [ D.5433 ]))) e_scalb.c:51 -1
     (nil))
(jump_insn 44 43 45 13 (set (pc)
        (label_ref 75)) e_scalb.c:51 -1
     (nil)
 -> 75)
(barrier 45 44 46)
(code_label 46 45 47 14 18 "" [1 uses])
(note 47 46 48 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 14 (set (reg:DF 102)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [1  S8 A64])) e_scalb.c:53 -1
     (expr_list:REG_EQUAL (const_double:DF 2.147483648e+9 [0x0.8p+32])
        (nil)))
(insn 49 48 50 14 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 88 [ D.5433 ])
            (reg:DF 102))) e_scalb.c:53 -1
     (nil))
(jump_insn 50 49 51 14 (set (pc)
        (if_then_else (ge (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) e_scalb.c:53 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 61)
(note 51 50 52 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 15 (set (reg:SI 89 [ D.5434 ])
        (fix:SI (reg/v:DF 94 [ fn ]))) e_scalb.c:53 -1
     (nil))
(insn 53 52 54 15 (set (reg:DF 103 [ D.5433 ])
        (float:DF (reg:SI 89 [ D.5434 ]))) e_scalb.c:53 -1
     (nil))
(insn 54 53 55 15 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 94 [ fn ])
            (reg:DF 103 [ D.5433 ]))) e_scalb.c:53 -1
     (nil))
(jump_insn 55 54 90 15 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) e_scalb.c:53 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 61)
(note 90 55 56 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 56 90 57 16 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 94 [ fn ])
            (reg:DF 103 [ D.5433 ]))) e_scalb.c:53 -1
     (nil))
(jump_insn 57 56 91 16 (set (pc)
        (if_then_else (ltgt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 61)
            (pc))) e_scalb.c:53 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 61)
(note 91 57 58 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 58 91 59 17 (set (pc)
        (label_ref 68)) e_scalb.c:53 -1
     (nil)
 -> 68)
(barrier 59 58 61)
(code_label 61 59 62 19 22 "" [3 uses])
(note 62 61 63 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 19 (set (reg:DF 22 xmm1)
        (reg/v:DF 94 [ fn ])) e_scalb.c:54 -1
     (nil))
(insn 64 63 65 19 (set (reg:DF 21 xmm0)
        (reg/v:DF 93 [ x ])) e_scalb.c:54 -1
     (nil))
(call_insn/j 65 64 66 19 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("invalid_fn") [flags 0x3]  <function_decl 0x2b7c22fa75e8 invalid_fn>) [0 invalid_fn S1 A8])
            (const_int 0 [0]))) e_scalb.c:54 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("invalid_fn") [flags 0x3]  <function_decl 0x2b7c22fa75e8 invalid_fn>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(barrier 66 65 68)
(code_label 68 66 69 20 23 "" [1 uses])
(note 69 68 70 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 20 (set (reg:SI 5 di)
        (reg:SI 89 [ D.5434 ])) e_scalb.c:56 -1
     (nil))
(insn 71 70 72 20 (set (reg:DF 21 xmm0)
        (reg/v:DF 93 [ x ])) e_scalb.c:56 -1
     (nil))
(call_insn/j 72 71 73 20 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>) [0 __scalbn S1 A8])
            (const_int 0 [0]))) e_scalb.c:56 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbn") [flags 0x41]  <function_decl 0x2b7c22d84510 __scalbn>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:SI (use (reg:SI 5 di))
            (nil))))
(barrier 73 72 85)
(code_label 85 73 84 21 25 "" [1 uses])
(note 84 85 5 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 5 84 75 21 (set (reg:DF 87 [ D.5433 ])
        (reg/v:DF 93 [ x ])) e_scalb.c:50 -1
     (nil))
(code_label 75 5 76 22 17 "" [2 uses])
(note 76 75 77 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 81 22 (set (reg:DF 92 [ <retval> ])
        (reg:DF 87 [ D.5433 ])) -1
     (nil))
(insn 81 77 82 22 (set (reg/i:DF 21 xmm0)
        (reg:DF 92 [ <retval> ])) e_scalb.c:57 -1
     (nil))
(insn 82 81 0 22 (use (reg/i:DF 21 xmm0)) e_scalb.c:57 -1
     (nil))
