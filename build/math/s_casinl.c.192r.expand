
;; Function __casinl (__casinl, funcdef_no=77, decl_uid=2027, cgraph_uid=77, symbol_order=77)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 4->9 redirected to 13
Purged non-fallthru edges from bb 15
Predictions for insn 45 bb 6
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 6->7 to 8 failed.
Deleted label in block 7.
Removing jump 88.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v:XF 106 [ x ])
        (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [1 x+0 S16 A128])) s_casinl.c:27 -1
     (expr_list:REG_EQUIV (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [1 x+0 S16 A128])
        (nil)))
(insn 3 2 4 2 (set (reg/v:XF 107 [ x+16 ])
        (mem/c:XF (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [1 x+16 S16 A128])) s_casinl.c:27 -1
     (expr_list:REG_EQUIV (mem/c:XF (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [1 x+16 S16 A128])
        (nil)))
(note 4 3 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 4 14 2 (set (reg:XF 89 [ D.5709 ])
        (reg/v:XF 106 [ x ])) s_casinl.c:30 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 89 [ D.5709 ])
            (reg:XF 89 [ D.5709 ]))) s_casinl.c:30 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) s_casinl.c:30 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 20)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:XF 90 [ D.5709 ])
        (reg/v:XF 107 [ x+16 ])) s_casinl.c:30 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 90 [ D.5709 ])
            (reg:XF 90 [ D.5709 ]))) s_casinl.c:30 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) s_casinl.c:30 -1
     (int_list:REG_BR_PROB 7861 (nil))
 -> 67)
(code_label 20 19 21 5 2 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:SF 111)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_casinl.c:32 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 23 22 24 5 (set (reg:XF 110)
        (float_extend:XF (reg:SF 111))) s_casinl.c:32 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 24 23 25 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 89 [ D.5709 ])
            (reg:XF 110))) s_casinl.c:32 -1
     (nil))
(jump_insn 25 24 100 5 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) s_casinl.c:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 104)
(note 100 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 100 27 6 (set (reg:SF 113)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_casinl.c:32 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 27 26 28 6 (set (reg:XF 112)
        (float_extend:XF (reg:SF 113))) s_casinl.c:32 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 28 27 29 6 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 89 [ D.5709 ])
            (reg:XF 112))) s_casinl.c:32 -1
     (nil))
(jump_insn 29 28 101 6 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) s_casinl.c:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 99)
(note 101 29 104 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(code_label 104 101 31 8 10 "" [1 uses])
(note 31 104 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (set (reg:HI 114)
        (unspec:HI [
                (reg:XF 89 [ D.5709 ])
            ] UNSPEC_FXAM)) s_casinl.c:36 -1
     (nil))
(insn 33 32 34 8 (parallel [
            (set (zero_extract:SI (reg:HI 114)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (and:SI (zero_extract:SI (reg:HI 114)
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 69 [0x45])))
            (clobber (reg:CC 17 flags))
        ]) s_casinl.c:36 -1
     (nil))
(insn 34 33 35 8 (set (reg:CC 17 flags)
        (compare:CC (subreg:QI (zero_extract:SI (reg:HI 114)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8])) 0)
            (const_int 5 [0x5]))) s_casinl.c:36 -1
     (nil))
(insn 35 34 36 8 (set (reg:QI 115)
        (eq:QI (reg:CC 17 flags)
            (const_int 0 [0]))) s_casinl.c:36 -1
     (nil))
(insn 36 35 37 8 (set (reg:SI 99 [ D.5710 ])
        (zero_extend:SI (reg:QI 115))) s_casinl.c:36 -1
     (nil))
(insn 37 36 38 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.5710 ])
            (const_int 0 [0]))) s_casinl.c:36 -1
     (nil))
(jump_insn 38 37 61 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) s_casinl.c:36 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 54)
(code_label 61 38 39 9 8 "" [1 uses])
(note 39 61 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:HI 117)
        (unspec:HI [
                (reg/v:XF 107 [ x+16 ])
            ] UNSPEC_FXAM)) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 116)
                (and:SI (subreg:SI (reg:HI 117) 0)
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(insn 42 41 43 9 (set (reg:SF 118)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [3  S4 A32])) ../sysdeps/generic/math_private.h:346 -1
     (expr_list:REG_EQUAL (const_double:SF +Inf [+Inf])
        (nil)))
(insn 43 42 44 9 (set (reg:XF 102 [ D.5709 ])
        (float_extend:XF (reg:SF 118))) ../sysdeps/generic/math_private.h:346 -1
     (expr_list:REG_EQUAL (const_double:XF +Inf [+Inf])
        (nil)))
(insn 44 43 45 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 116)
            (const_int 0 [0]))) ../sysdeps/generic/math_private.h:346 -1
     (nil))
(jump_insn 45 44 102 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) ../sysdeps/generic/math_private.h:346 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 48)
(note 102 45 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 46 102 47 10 (set (reg:SF 119)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [3  S4 A32])) ../sysdeps/generic/math_private.h:346 -1
     (expr_list:REG_EQUAL (const_double:SF -Inf [-Inf])
        (nil)))
(insn 47 46 48 10 (set (reg:XF 102 [ D.5709 ])
        (float_extend:XF (reg:SF 119))) ../sysdeps/generic/math_private.h:346 -1
     (expr_list:REG_EQUAL (const_double:XF -Inf [-Inf])
        (nil)))
(code_label 48 47 103 11 7 "" [1 uses])
(note 103 48 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 103 50 11 (set (reg:SF 120)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [3  S4 A32])) s_casinl.c:39 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 50 49 51 11 (set (reg/v:XF 87 [ res ])
        (float_extend:XF (reg:SF 120))) s_casinl.c:39 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(insn 51 50 52 11 (set (reg/v:XF 88 [ res+16 ])
        (reg:XF 102 [ D.5709 ])) s_casinl.c:39 -1
     (nil))
(jump_insn 52 51 53 11 (set (pc)
        (label_ref 84)) s_casinl.c:39 -1
     (nil)
 -> 84)
(barrier 53 52 54)
(code_label 54 53 55 12 6 "" [1 uses])
(note 55 54 56 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 12 (set (reg:HI 121)
        (unspec:HI [
                (reg/v:XF 107 [ x+16 ])
            ] UNSPEC_FXAM)) s_casinl.c:36 -1
     (nil))
(insn 57 56 58 12 (parallel [
            (set (zero_extract:SI (reg:HI 121)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8]))
                (and:SI (zero_extract:SI (reg:HI 121)
                        (const_int 8 [0x8])
                        (const_int 8 [0x8]))
                    (const_int 69 [0x45])))
            (clobber (reg:CC 17 flags))
        ]) s_casinl.c:36 -1
     (nil))
(insn 58 57 59 12 (set (reg:CC 17 flags)
        (compare:CC (subreg:QI (zero_extract:SI (reg:HI 121)
                    (const_int 8 [0x8])
                    (const_int 8 [0x8])) 0)
            (const_int 5 [0x5]))) s_casinl.c:36 -1
     (nil))
(insn 59 58 60 12 (set (reg:QI 122)
        (eq:QI (reg:CC 17 flags)
            (const_int 0 [0]))) s_casinl.c:36 -1
     (nil))
(insn 60 59 62 12 (set (reg:SI 101 [ D.5710 ])
        (zero_extend:SI (reg:QI 122))) s_casinl.c:36 -1
     (nil))
(insn 62 60 63 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.5710 ])
            (const_int 0 [0]))) s_casinl.c:36 -1
     (nil))
(jump_insn 63 62 66 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) s_casinl.c:36 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 61)
(note 66 63 7 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 7 66 8 13 (set (reg:SF 108)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [3  S4 A32])) s_casinl.c:44 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 8 7 9 13 (set (reg/v:XF 87 [ res ])
        (float_extend:XF (reg:SF 108))) s_casinl.c:44 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(insn 9 8 10 13 (set (reg:SF 109)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [3  S4 A32])) s_casinl.c:44 -1
     (expr_list:REG_EQUAL (const_double:SF +QNaN [+QNaN])
        (nil)))
(insn 10 9 64 13 (set (reg/v:XF 88 [ res+16 ])
        (float_extend:XF (reg:SF 109))) s_casinl.c:44 -1
     (expr_list:REG_EQUAL (const_double:XF +QNaN [+QNaN])
        (nil)))
(jump_insn 64 10 65 13 (set (pc)
        (label_ref 84)) -1
     (nil)
 -> 84)
(barrier 65 64 67)
(code_label 67 65 68 14 3 "" [1 uses])
(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 14 (set (reg:XF 123 [ D.5709 ])
        (neg:XF (reg:XF 90 [ D.5709 ]))) s_casinl.c:52 -1
     (nil))
(insn 70 69 71 14 (set (reg/v:XF 92 [ y ])
        (reg:XF 123 [ D.5709 ])) s_casinl.c:52 -1
     (nil))
(insn 71 70 72 14 (set (reg/v:XF 93 [ y+16 ])
        (reg:XF 89 [ D.5709 ])) s_casinl.c:52 -1
     (nil))
(insn 72 71 73 14 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [0  S16 A8])
        (reg/v:XF 93 [ y+16 ])) s_casinl.c:54 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 73 72 74 14 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [0  S16 A8])
        (reg/v:XF 92 [ y ])) s_casinl.c:54 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 74 73 75 14 (set (reg:XC 8 st)
        (call (mem:QI (symbol_ref:DI ("__casinhl") [flags 0x41]  <function_decl 0x2b552bd32438 __casinhl>) [0 __casinhl S1 A8])
            (const_int 32 [0x20]))) s_casinl.c:54 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__casinhl") [flags 0x41]  <function_decl 0x2b552bd32438 __casinhl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 75 74 76 14 (clobber (reg:XC 124)) s_casinl.c:54 -1
     (nil))
(insn 76 75 77 14 (set (subreg:XF (reg:XC 124) 0)
        (reg:XF 8 st)) s_casinl.c:54 -1
     (nil))
(insn 77 76 78 14 (set (subreg:XF (reg:XC 124) 16)
        (reg:XF 9 st(1) [+16 ])) s_casinl.c:54 -1
     (nil))
(insn 78 77 79 14 (set (reg/v:XF 94 [ y ])
        (subreg:XF (reg:XC 124) 0)) s_casinl.c:54 -1
     (nil))
(insn 79 78 80 14 (set (reg/v:XF 95 [ y+16 ])
        (subreg:XF (reg:XC 124) 16)) s_casinl.c:54 -1
     (nil))
(insn 80 79 81 14 (set (reg:XF 125 [ D.5709 ])
        (neg:XF (reg/v:XF 94 [ y ]))) s_casinl.c:57 -1
     (nil))
(insn 81 80 82 14 (set (reg/v:XF 87 [ res ])
        (reg/v:XF 95 [ y+16 ])) s_casinl.c:57 -1
     (nil))
(insn 82 81 83 14 (set (reg/v:XF 88 [ res+16 ])
        (reg:XF 125 [ D.5709 ])) s_casinl.c:57 -1
     (nil))
(insn 83 82 96 14 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) s_casinl.c:57 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 96 83 97 14 (set (pc)
        (label_ref 84)) -1
     (nil)
 -> 84)
(barrier 97 96 99)
(code_label 99 97 98 15 9 "" [1 uses])
(note 98 99 5 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 5 98 6 15 (set (reg/v:XF 87 [ res ])
        (reg/v:XF 106 [ x ])) s_casinl.c:34 -1
     (nil))
(insn 6 5 84 15 (set (reg/v:XF 88 [ res+16 ])
        (reg/v:XF 107 [ x+16 ])) s_casinl.c:34 -1
     (nil))
(code_label 84 6 85 16 4 "" [3 uses])
(note 85 84 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 16 (set (reg:XF 104 [ <retval> ])
        (reg/v:XF 87 [ res ])) s_casinl.c:60 -1
     (nil))
(insn 87 86 91 16 (set (reg:XF 105 [ <retval>+16 ])
        (reg/v:XF 88 [ res+16 ])) s_casinl.c:60 -1
     (nil))
(insn 91 87 92 16 (clobber (reg/i:XC 8 st)) s_casinl.c:61 -1
     (nil))
(insn 92 91 93 16 (set (reg:XF 8 st)
        (reg:XF 104 [ <retval> ])) s_casinl.c:61 -1
     (nil))
(insn 93 92 94 16 (set (reg:XF 9 st(1) [+16 ])
        (reg:XF 105 [ <retval>+16 ])) s_casinl.c:61 -1
     (nil))
(insn 94 93 0 16 (use (reg/i:XC 8 st)) s_casinl.c:61 -1
     (nil))
