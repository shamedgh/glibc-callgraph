
;; Function __ldexpl (__ldexpl, funcdef_no=87, decl_uid=2639, cgraph_uid=87, symbol_order=88)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 6->8 redirected to 11
Purged non-fallthru edges from bb 14
Purged non-fallthru edges from bb 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 5->6 to 9 failed.
Forwarding edge 5->6 to 9 failed.
deleting block 7
Edge 11->13 redirected to 14
Forwarding edge 11->12 to 15 failed.
Forwarding edge 11->12 to 15 failed.
deleting block 13
Removing jump 60.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.
Forwarding edge 11->12 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:XF 92 [ value ])
        (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [2 value+0 S16 A128])) s_ldexpl.c:26 -1
     (expr_list:REG_EQUIV (mem/c:XF (reg/f:DI 81 virtual-incoming-args) [2 value+0 S16 A128])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 93 [ exp ])
        (reg:SI 5 di [ exp ])) s_ldexpl.c:26 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:XF 94 [ D.8890 ])
        (abs:XF (reg/v:XF 92 [ value ]))) s_ldexpl.c:27 -1
     (nil))
(insn 10 9 11 2 (set (reg:XF 95)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S16 A128])) s_ldexpl.c:27 -1
     (expr_list:REG_EQUAL (const_double:XF 1.1897314953572317650212638530309702051690633222946e+4932 [0x0.ffffffffffffffffp+16384])
        (nil)))
(insn 11 10 12 2 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 95)
            (reg:XF 94 [ D.8890 ]))) s_ldexpl.c:27 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) s_ldexpl.c:27 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 25)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SF 97)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_ldexpl.c:27 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 15 14 16 4 (set (reg:XF 96)
        (float_extend:XF (reg:SF 97))) s_ldexpl.c:27 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 16 15 17 4 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 92 [ value ])
            (reg:XF 96))) s_ldexpl.c:27 -1
     (nil))
(jump_insn 17 16 70 4 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) s_ldexpl.c:27 -1
     (int_list:REG_BR_PROB 100 (nil))
 -> 30)
(note 70 17 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 70 19 5 (set (reg:SF 99)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_ldexpl.c:27 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 19 18 20 5 (set (reg:XF 98)
        (float_extend:XF (reg:SF 99))) s_ldexpl.c:27 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 20 19 21 5 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 92 [ value ])
            (reg:XF 98))) s_ldexpl.c:27 -1
     (nil))
(jump_insn 21 20 71 5 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) s_ldexpl.c:27 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 25)
(note 71 21 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 22 71 23 6 (set (pc)
        (label_ref 30)) s_ldexpl.c:27 -1
     (nil)
 -> 30)
(barrier 23 22 25)
(code_label 25 23 26 8 2 "" [2 uses])
(note 26 25 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:XF 87 [ D.8890 ])
        (plus:XF (reg/v:XF 92 [ value ])
            (reg/v:XF 92 [ value ]))) s_ldexpl.c:27 -1
     (nil))
(jump_insn 28 27 29 8 (set (pc)
        (label_ref 57)) s_ldexpl.c:27 -1
     (nil)
 -> 57)
(barrier 29 28 30)
(code_label 30 29 31 9 3 "" [2 uses])
(note 31 30 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 9 (set (mem:XF (pre_dec:DI (reg/f:DI 7 sp)) [2  S16 A128])
        (reg/v:XF 92 [ value ])) s_ldexpl.c:28 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 33 32 34 9 (set (reg:SI 5 di)
        (reg/v:SI 93 [ exp ])) s_ldexpl.c:28 -1
     (nil))
(call_insn 34 33 35 9 (set (reg:XF 8 st)
        (call (mem:QI (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2aea785a7bd0 __scalbnl>) [0 __scalbnl S1 A8])
            (const_int 16 [0x10]))) s_ldexpl.c:28 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__scalbnl") [flags 0x41]  <function_decl 0x2aea785a7bd0 __scalbnl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 35 34 36 9 (set (reg/v:XF 89 [ value ])
        (reg:XF 8 st)) s_ldexpl.c:28 -1
     (nil))
(insn 36 35 37 9 (set (reg:XF 100 [ D.8890 ])
        (abs:XF (reg/v:XF 89 [ value ]))) s_ldexpl.c:29 -1
     (nil))
(insn 37 36 38 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) s_ldexpl.c:29 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 38 37 39 9 (set (reg:XF 101)
        (mem/u/c:XF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [2  S16 A128])) s_ldexpl.c:29 -1
     (expr_list:REG_EQUAL (const_double:XF 1.1897314953572317650212638530309702051690633222946e+4932 [0x0.ffffffffffffffffp+16384])
        (nil)))
(insn 39 38 40 9 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 101)
            (reg:XF 100 [ D.8890 ]))) s_ldexpl.c:29 -1
     (nil))
(jump_insn 40 39 41 9 (set (pc)
        (if_then_else (unlt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) s_ldexpl.c:29 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 53)
(note 41 40 42 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 10 (set (reg:SF 103)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_ldexpl.c:29 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 43 42 44 10 (set (reg:XF 102)
        (float_extend:XF (reg:SF 103))) s_ldexpl.c:29 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 44 43 45 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 89 [ value ])
            (reg:XF 102))) s_ldexpl.c:29 -1
     (nil))
(jump_insn 45 44 73 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) s_ldexpl.c:29 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 69)
(note 73 45 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 73 47 11 (set (reg:SF 105)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [3  S4 A32])) s_ldexpl.c:29 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 47 46 48 11 (set (reg:XF 104)
        (float_extend:XF (reg:SF 105))) s_ldexpl.c:29 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 48 47 49 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:XF 89 [ value ])
            (reg:XF 104))) s_ldexpl.c:29 -1
     (nil))
(jump_insn 49 48 74 11 (set (pc)
        (if_then_else (uneq (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) s_ldexpl.c:29 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 53)
(note 74 49 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 50 74 51 12 (set (pc)
        (label_ref:DI 69)) s_ldexpl.c:29 654 {jump}
     (nil)
 -> 69)
(barrier 51 50 53)
(code_label 53 51 54 14 6 "" [2 uses])
(note 54 53 55 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 14 (set (reg:DI 106)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aea78923480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) s_ldexpl.c:29 -1
     (nil))
(insn 56 55 5 14 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 106)) [1 errno+0 S4 A32])
        (const_int 34 [0x22])) s_ldexpl.c:29 -1
     (nil))
(insn 5 56 66 14 (set (reg:XF 87 [ D.8890 ])
        (reg/v:XF 89 [ value ])) s_ldexpl.c:29 -1
     (nil))
(jump_insn 66 5 67 14 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 67 66 69)
(code_label 69 67 68 15 8 "" [2 uses])
(note 68 69 6 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 6 68 57 15 (set (reg:XF 87 [ D.8890 ])
        (reg/v:XF 89 [ value ])) s_ldexpl.c:29 -1
     (nil))
(code_label 57 6 58 16 5 "" [2 uses])
(note 58 57 59 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 63 16 (set (reg:XF 91 [ <retval> ])
        (reg:XF 87 [ D.8890 ])) -1
     (nil))
(insn 63 59 64 16 (set (reg/i:XF 8 st)
        (reg:XF 91 [ <retval> ])) s_ldexpl.c:31 -1
     (nil))
(insn 64 63 0 16 (use (reg/i:XF 8 st)) s_ldexpl.c:31 -1
     (nil))
