
;; Function _nl_explode_name (_nl_explode_name, funcdef_no=28, decl_uid=3910, cgraph_uid=28, symbol_order=31)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33
Edge 9->13 redirected to 39
Edge 10->13 redirected to 40
Edge 16->16 redirected to 41
Edge 17->22 redirected to 42
Edge 18->31 redirected to 43
Edge 28->31 redirected to 44
Edge 29->31 redirected to 45
Purged non-fallthru edges from bb 49
Purged non-fallthru edges from bb 52


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 9->11 redirected to 49
Forwarding edge 10->11 to 49 failed.
Deleted label in block 11.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Forwarding edge 10->11 to 49 failed.
Forwarding edge 10->11 to 49 failed.
Edge 19->21 redirected to 22
Forwarding edge 20->21 to 22 failed.
Deleted label in block 21.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 49 failed.
Forwarding edge 20->21 to 22 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 48 NOTE_INSN_DELETED)
(note 48 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 48 25 2 (set (reg/v/f:DI 154 [ name ])
        (reg:DI 5 di [ name ])) explodename.c:58 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 155 [ language ])
        (reg:DI 4 si [ language ])) explodename.c:58 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 156 [ modifier ])
        (reg:DI 1 dx [ modifier ])) explodename.c:58 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 157 [ territory ])
        (reg:DI 2 cx [ territory ])) explodename.c:58 -1
     (nil))
(insn 28 27 29 2 (set (reg/v/f:DI 158 [ codeset ])
        (reg:DI 37 r8 [ codeset ])) explodename.c:58 -1
     (nil))
(insn 29 28 30 2 (set (reg/v/f:DI 159 [ normalized_codeset ])
        (reg:DI 38 r9 [ normalized_codeset ])) explodename.c:58 -1
     (nil))
(note 30 29 50 2 NOTE_INSN_FUNCTION_BEG)
(insn 50 30 51 2 (set (mem/f:DI (reg/v/f:DI 156 [ modifier ]) [1 *modifier_15(D)+0 S8 A64])
        (const_int 0 [0])) explodename.c:62 -1
     (nil))
(insn 51 50 52 2 (set (mem/f:DI (reg/v/f:DI 157 [ territory ]) [1 *territory_17(D)+0 S8 A64])
        (const_int 0 [0])) explodename.c:63 -1
     (nil))
(insn 52 51 53 2 (set (mem/f:DI (reg/v/f:DI 158 [ codeset ]) [1 *codeset_19(D)+0 S8 A64])
        (const_int 0 [0])) explodename.c:64 -1
     (nil))
(insn 53 52 54 2 (set (mem/f:DI (reg/v/f:DI 159 [ normalized_codeset ]) [1 *normalized_codeset_21(D)+0 S8 A64])
        (const_int 0 [0])) explodename.c:65 -1
     (nil))
(insn 54 53 55 2 (set (mem/f:DI (reg/v/f:DI 155 [ language ]) [1 *language_24(D)+0 S8 A64])
        (reg/v/f:DI 154 [ name ])) explodename.c:70 -1
     (nil))
(insn 55 54 56 2 (set (reg:QI 148 [ D.4029 ])
        (mem:QI (reg/v/f:DI 154 [ name ]) [0 MEM[(const char *)name_23(D)]+0 S1 A8])) explodename.c:46 -1
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg:QI 160 [ D.4029 ])
                (and:QI (reg:QI 148 [ D.4029 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:46 -1
     (nil))
(insn 57 56 58 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 58 57 59 2 (set (reg:QI 162 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 59 58 60 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 60 59 273 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 150 (nil))
 -> 98)
(note 273 60 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 61 273 62 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.4029 ])
            (const_int 95 [0x5f]))) explodename.c:46 -1
     (nil))
(insn 62 61 63 4 (set (reg:QI 164 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 63 62 64 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 164 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 64 63 65 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 98)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.4029 ])
            (const_int 46 [0x2e]))) explodename.c:46 -1
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 98)
(note 68 67 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 68 81 6 (set (reg/v/f:DI 110 [ name ])
        (reg/v/f:DI 154 [ name ])) explodename.c:46 -1
     (nil))
(code_label 81 31 69 7 4 "" [1 uses])
(note 69 81 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 7 (parallel [
            (set (reg/v/f:DI 110 [ name ])
                (plus:DI (reg/v/f:DI 110 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:47 -1
     (nil))
(insn 71 70 72 7 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (reg/v/f:DI 110 [ name ]) [0 MEM[base: name_70, offset: 0B]+0 S1 A8])) explodename.c:46 -1
     (nil))
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 73 72 74 7 (set (reg:QI 166 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 75 74 274 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 150 (nil))
 -> 94)
(note 274 75 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 76 274 77 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 95 [0x5f]))) explodename.c:46 -1
     (nil))
(insn 77 76 78 8 (set (reg:QI 168 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 94)
(note 80 79 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 80 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 64 [0x40]))) explodename.c:46 -1
     (nil))
(insn 83 82 84 9 (set (reg:QI 170 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 84 83 85 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 170 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 85 84 275 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 228)
            (pc))) explodename.c:46 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 228)
(note 275 85 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 275 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 46 [0x2e]))) explodename.c:46 -1
     (nil))
(insn 87 86 88 10 (set (reg:QI 172 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(insn 88 87 89 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:46 -1
     (nil))
(jump_insn 89 88 276 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) explodename.c:46 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 81)
(note 276 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 91 276 92 11 (set (pc)
        (label_ref 228)) explodename.c:46 -1
     (nil)
 -> 228)
(barrier 92 91 94)
(code_label 94 92 95 13 3 "" [2 uses])
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 154 [ name ])
            (reg/v/f:DI 110 [ name ]))) explodename.c:73 -1
     (nil))
(jump_insn 97 96 98 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) explodename.c:73 -1
     (int_list:REG_BR_PROB 9312 (nil))
 -> 107)
(code_label 98 97 99 14 2 "" [4 uses])
(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 14 (set (reg:SI 4 si)
        (const_int 0 [0])) explodename.c:76 -1
     (nil))
(insn 101 100 102 14 (set (reg:DI 5 di)
        (reg/v/f:DI 154 [ name ])) explodename.c:76 -1
     (nil))
(call_insn/i 102 101 103 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___rawmemchr") [flags 0x43]  <function_decl 0x2b5634136000 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) explodename.c:76 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___rawmemchr") [flags 0x43]  <function_decl 0x2b5634136000 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 103 102 104 14 (set (reg/v/f:DI 110 [ name ])
        (reg:DI 0 ax)) explodename.c:76 -1
     (nil))
(insn 104 103 40 14 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (reg/v/f:DI 110 [ name ]) [0 *name_57+0 S1 A8])) -1
     (nil))
(insn 40 104 105 14 (set (reg/v:SI 112 [ mask ])
        (const_int 0 [0])) explodename.c:69 -1
     (nil))
(jump_insn 105 40 106 14 (set (pc)
        (label_ref 191)) -1
     (nil)
 -> 191)
(barrier 106 105 107)
(code_label 107 106 108 15 7 "" [1 uses])
(note 108 107 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 95 [0x5f]))) explodename.c:79 -1
     (nil))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 248)
            (pc))) explodename.c:79 612 {*jcc_1}
     (int_list:REG_BR_PROB 1850 (nil))
 -> 248)
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (set (mem:QI (reg/v/f:DI 110 [ name ]) [0 *name_70+0 S1 A8])
        (const_int 0 [0])) explodename.c:82 -1
     (nil))
(insn 113 112 114 16 (parallel [
            (set (reg/v/f:DI 115 [ name ])
                (plus:DI (reg/v/f:DI 110 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:83 -1
     (nil))
(insn 114 113 115 16 (set (mem/f:DI (reg/v/f:DI 157 [ territory ]) [1 *territory_17(D)+0 S8 A64])
        (reg/v/f:DI 115 [ name ])) explodename.c:83 -1
     (nil))
(insn 115 114 116 16 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (plus:DI (reg/v/f:DI 110 [ name ])
                (const_int 1 [0x1])) [0 MEM[(char *)name_70 + 1B]+0 S1 A8])) explodename.c:85 -1
     (nil))
(insn 116 115 117 16 (parallel [
            (set (reg:QI 173 [ D.4029 ])
                (and:QI (reg:QI 135 [ D.4029 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:85 -1
     (nil))
(insn 117 116 118 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 118 117 119 16 (set (reg:QI 175 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 119 118 120 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 175 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(jump_insn 120 119 277 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) explodename.c:85 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 252)
(note 277 120 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 121 277 122 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 46 [0x2e]))) explodename.c:85 -1
     (nil))
(insn 122 121 123 17 (set (reg:QI 177 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 123 122 124 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 177 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(jump_insn 124 123 125 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) explodename.c:85 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 252)
(note 125 124 129 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(code_label 129 125 126 19 10 "" [1 uses])
(note 126 129 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 19 (parallel [
            (set (reg/v/f:DI 115 [ name ])
                (plus:DI (reg/v/f:DI 115 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:86 -1
     (nil))
(insn 128 127 130 19 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (reg/v/f:DI 115 [ name ]) [0 MEM[base: name_34, offset: 0B]+0 S1 A8])) explodename.c:85 -1
     (nil))
(insn 130 128 131 19 (parallel [
            (set (reg:QI 178 [ D.4029 ])
                (and:QI (reg:QI 135 [ D.4029 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:85 -1
     (nil))
(insn 131 130 132 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 132 131 133 19 (set (reg:QI 180 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 133 132 134 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(jump_insn 134 133 278 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 280)
            (pc))) explodename.c:85 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 280)
(note 278 134 135 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 135 278 136 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 46 [0x2e]))) explodename.c:85 -1
     (nil))
(insn 136 135 137 20 (set (reg:QI 182 [ D.4027 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(insn 137 136 138 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 182 [ D.4027 ])
            (const_int 0 [0]))) explodename.c:85 -1
     (nil))
(jump_insn 138 137 279 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) explodename.c:85 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 129)
(note 279 138 280 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(code_label 280 279 244 22 25 "" [1 uses])
(note 244 280 33 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 33 244 34 22 (set (reg/v/f:DI 110 [ name ])
        (reg/v/f:DI 115 [ name ])) explodename.c:86 -1
     (nil))
(insn 34 33 245 22 (set (reg/v:SI 112 [ mask ])
        (const_int 4 [0x4])) explodename.c:88 -1
     (nil))
(jump_insn 245 34 246 22 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
(barrier 246 245 248)
(code_label 248 246 247 23 18 "" [1 uses])
(note 247 248 32 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 32 247 249 23 (set (reg/v:SI 112 [ mask ])
        (const_int 0 [0])) explodename.c:69 -1
     (nil))
(jump_insn 249 32 250 23 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
(barrier 250 249 252)
(code_label 252 250 251 24 19 "" [2 uses])
(note 251 252 36 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 36 251 37 24 (set (reg/v/f:DI 110 [ name ])
        (reg/v/f:DI 115 [ name ])) explodename.c:83 -1
     (nil))
(insn 37 36 140 24 (set (reg/v:SI 112 [ mask ])
        (const_int 4 [0x4])) explodename.c:88 -1
     (nil))
(code_label 140 37 141 25 9 "" [3 uses])
(note 141 140 142 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 46 [0x2e]))) explodename.c:91 -1
     (nil))
(jump_insn 143 142 144 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) explodename.c:91 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 191)
(note 144 143 145 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 26 (set (mem:QI (reg/v/f:DI 110 [ name ]) [0 *name_2+0 S1 A8])
        (const_int 0 [0])) explodename.c:94 -1
     (nil))
(insn 146 145 147 26 (parallel [
            (set (reg/v/f:DI 118 [ name ])
                (plus:DI (reg/v/f:DI 110 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:95 -1
     (nil))
(insn 147 146 148 26 (set (mem/f:DI (reg/v/f:DI 158 [ codeset ]) [1 *codeset_19(D)+0 S8 A64])
        (reg/v/f:DI 118 [ name ])) explodename.c:95 -1
     (nil))
(insn 148 147 149 26 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (plus:DI (reg/v/f:DI 110 [ name ])
                (const_int 1 [0x1])) [0 MEM[(char *)name_2 + 1B]+0 S1 A8])) explodename.c:97 -1
     (nil))
(insn 149 148 150 26 (parallel [
            (set (reg:QI 183 [ D.4029 ])
                (and:QI (reg:QI 135 [ D.4029 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:97 -1
     (nil))
(insn 150 149 151 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:97 -1
     (nil))
(jump_insn 151 150 152 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) explodename.c:97 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 235)
(note 152 151 38 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 38 152 253 27 (set (reg/v/f:DI 143 [ name ])
        (reg/v/f:DI 118 [ name ])) explodename.c:95 -1
     (nil))
(jump_insn 253 38 254 27 (set (pc)
        (label_ref 157)) -1
     (nil)
 -> 157)
(barrier 254 253 256)
(code_label 256 254 255 28 20 "" [1 uses])
(note 255 256 39 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 39 255 157 28 (set (reg/v/f:DI 143 [ name ])
        (reg/v/f:DI 110 [ name ])) -1
     (nil))
(code_label 157 39 153 29 13 "" [1 uses])
(note 153 157 154 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 29 (parallel [
            (set (reg/v/f:DI 110 [ name ])
                (plus:DI (reg/v/f:DI 143 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:98 -1
     (nil))
(insn 155 154 156 29 (set (reg:QI 184)
        (mem:QI (reg/v/f:DI 110 [ name ]) [0 MEM[base: name_43, offset: 0B]+0 S1 A8])) explodename.c:97 -1
     (nil))
(insn 156 155 158 29 (parallel [
            (set (reg:QI 151 [ D.4029 ])
                (and:QI (reg:QI 184)
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:97 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (reg/v/f:DI 110 [ name ]) [0 MEM[base: name_43, offset: 0B]+0 S1 A8])
            (const_int -65 [0xffffffffffffffbf]))
        (nil)))
(insn 158 156 159 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 151 [ D.4029 ])
            (const_int 0 [0]))) explodename.c:97 -1
     (nil))
(jump_insn 159 158 160 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 256)
            (pc))) explodename.c:97 612 {*jcc_1}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 256)
(note 160 159 161 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 30 (parallel [
            (set (reg/v:SI 120 [ mask ])
                (ior:SI (reg/v:SI 112 [ mask ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:100 -1
     (nil))
(insn 162 161 163 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 118 [ name ])
            (reg/v/f:DI 110 [ name ]))) explodename.c:102 -1
     (nil))
(jump_insn 163 162 164 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 260)
            (pc))) explodename.c:102 612 {*jcc_1}
     (int_list:REG_BR_PROB 659 (nil))
 -> 260)
(note 164 163 165 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 31 (parallel [
            (set (reg:DI 185 [ D.4030 ])
                (minus:DI (reg/v/f:DI 110 [ name ])
                    (reg/v/f:DI 118 [ name ])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:104 -1
     (nil))
(insn 166 165 167 31 (set (reg:DI 4 si)
        (reg:DI 185 [ D.4030 ])) explodename.c:104 -1
     (nil))
(insn 167 166 168 31 (set (reg:DI 5 di)
        (reg/v/f:DI 118 [ name ])) explodename.c:104 -1
     (nil))
(call_insn 168 167 169 31 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nl_normalize_codeset") [flags 0x41]  <function_decl 0x2b5634173510 _nl_normalize_codeset>) [0 _nl_normalize_codeset S1 A8])
            (const_int 0 [0]))) explodename.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nl_normalize_codeset") [flags 0x41]  <function_decl 0x2b5634173510 _nl_normalize_codeset>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 169 168 170 31 (set (reg/f:DI 125 [ D.4032 ])
        (reg:DI 0 ax)) explodename.c:104 -1
     (nil))
(insn 170 169 171 31 (set (mem/f:DI (reg/v/f:DI 159 [ normalized_codeset ]) [1 *normalized_codeset_21(D)+0 S8 A64])
        (reg/f:DI 125 [ D.4032 ])) explodename.c:104 -1
     (nil))
(insn 171 170 172 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 125 [ D.4032 ])
            (const_int 0 [0]))) explodename.c:106 -1
     (nil))
(jump_insn 172 171 173 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 264)
            (pc))) explodename.c:106 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 264)
(note 173 172 174 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 32 (set (reg/f:DI 186)
        (mem/f:DI (reg/v/f:DI 158 [ codeset ]) [1 *codeset_19(D)+0 S8 A64])) explodename.c:108 -1
     (nil))
(insn 175 174 176 32 (set (reg:DI 4 si)
        (reg/f:DI 125 [ D.4032 ])) explodename.c:108 -1
     (nil))
(insn 176 175 177 32 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 158 [ codeset ]) [1 *codeset_19(D)+0 S8 A64])) explodename.c:108 -1
     (nil))
(call_insn/i 177 176 178 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b5633f27000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) explodename.c:108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b5633f27000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 178 177 179 32 (set (reg:SI 127 [ D.4028 ])
        (reg:SI 0 ax)) explodename.c:108 -1
     (nil))
(insn 179 178 180 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 127 [ D.4028 ])
            (const_int 0 [0]))) explodename.c:108 -1
     (nil))
(jump_insn 180 179 181 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) explodename.c:108 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 187)
(note 181 180 182 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 33 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.4032 ])) explodename.c:109 -1
     (nil))
(call_insn 183 182 184 33 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b5633f43e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) explodename.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b5633f43e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 184 183 43 33 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (plus:DI (reg/v/f:DI 143 [ name ])
                (const_int 1 [0x1])) [0 MEM[(char *)name_83 + 1B]+0 S1 A8])) -1
     (nil))
(insn 43 184 185 33 (set (reg/v:SI 112 [ mask ])
        (reg/v:SI 120 [ mask ])) explodename.c:100 -1
     (nil))
(jump_insn 185 43 186 33 (set (pc)
        (label_ref 191)) -1
     (nil)
 -> 191)
(barrier 186 185 187)
(code_label 187 186 188 34 15 "" [1 uses])
(note 188 187 189 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 34 (parallel [
            (set (reg/v:SI 112 [ mask ])
                (ior:SI (reg/v:SI 112 [ mask ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:111 -1
     (nil))
(insn 190 189 257 34 (set (reg:QI 135 [ D.4029 ])
        (mem:QI (plus:DI (reg/v/f:DI 143 [ name ])
                (const_int 1 [0x1])) [0 MEM[(char *)name_83 + 1B]+0 S1 A8])) -1
     (nil))
(jump_insn 257 190 258 34 (set (pc)
        (label_ref 191)) -1
     (nil)
 -> 191)
(barrier 258 257 260)
(code_label 260 258 259 35 21 "" [1 uses])
(note 259 260 41 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 41 259 191 35 (set (reg/v:SI 112 [ mask ])
        (reg/v:SI 120 [ mask ])) explodename.c:100 -1
     (nil))
(code_label 191 41 192 36 8 "" [5 uses])
(note 192 191 193 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.4029 ])
            (const_int 64 [0x40]))) explodename.c:116 -1
     (nil))
(jump_insn 194 193 195 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) explodename.c:116 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 203)
(note 195 194 196 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 37 (set (mem:QI (reg/v/f:DI 110 [ name ]) [0 *name_4+0 S1 A8])
        (const_int 0 [0])) explodename.c:119 -1
     (nil))
(insn 197 196 198 37 (parallel [
            (set (reg:DI 187)
                (plus:DI (reg/v/f:DI 110 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:120 -1
     (nil))
(insn 198 197 199 37 (set (mem/f:DI (reg/v/f:DI 156 [ modifier ]) [1 *modifier_15(D)+0 S8 A64])
        (reg:DI 187)) explodename.c:120 -1
     (nil))
(insn 199 198 200 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 110 [ name ])
                    (const_int 1 [0x1])) [0 MEM[(char *)name_4 + 1B]+0 S1 A8])
            (const_int 0 [0]))) explodename.c:122 -1
     (nil))
(jump_insn 200 199 201 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) explodename.c:122 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 203)
(note 201 200 202 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 38 (parallel [
            (set (reg/v:SI 112 [ mask ])
                (ior:SI (reg/v:SI 112 [ mask ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:123 -1
     (nil))
(code_label 203 202 204 39 16 "" [2 uses])
(note 204 203 205 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 39 (set (reg/f:DI 130 [ D.4032 ])
        (mem/f:DI (reg/v/f:DI 157 [ territory ]) [1 *territory_17(D)+0 S8 A64])) explodename.c:126 -1
     (nil))
(insn 206 205 207 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 130 [ D.4032 ])
            (const_int 0 [0]))) explodename.c:126 -1
     (nil))
(jump_insn 207 206 208 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) explodename.c:126 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 213)
(note 208 207 209 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 130 [ D.4032 ]) [0 *_64+0 S1 A8])
            (const_int 0 [0]))) explodename.c:126 -1
     (nil))
(jump_insn 210 209 211 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) explodename.c:126 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 213)
(note 211 210 212 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 41 (parallel [
            (set (reg/v:SI 112 [ mask ])
                (and:SI (reg/v:SI 112 [ mask ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:127 -1
     (nil))
(code_label 213 212 214 42 17 "" [2 uses])
(note 214 213 215 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 42 (set (reg/f:DI 132 [ D.4032 ])
        (mem/f:DI (reg/v/f:DI 158 [ codeset ]) [1 *codeset_19(D)+0 S8 A64])) explodename.c:129 -1
     (nil))
(insn 216 215 217 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 132 [ D.4032 ])
            (const_int 0 [0]))) explodename.c:129 -1
     (nil))
(jump_insn 217 216 218 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) explodename.c:129 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 268)
(note 218 217 219 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 132 [ D.4032 ]) [0 *_67+0 S1 A8])
            (const_int 0 [0]))) explodename.c:129 -1
     (nil))
(jump_insn 220 219 221 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 272)
            (pc))) explodename.c:129 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 272)
(note 221 220 222 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 47 44 (parallel [
            (set (reg/v:SI 134 [ mask ])
                (and:SI (reg/v:SI 112 [ mask ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:130 -1
     (nil))
(insn 47 222 261 44 (set (reg:SI 113 [ D.4028 ])
        (reg/v:SI 134 [ mask ])) explodename.c:130 -1
     (nil))
(jump_insn 261 47 262 44 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
(barrier 262 261 264)
(code_label 264 262 263 45 22 "" [1 uses])
(note 263 264 44 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 44 263 265 45 (set (reg:SI 113 [ D.4028 ])
        (const_int -1 [0xffffffffffffffff])) explodename.c:107 -1
     (nil))
(jump_insn 265 44 266 45 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
(barrier 266 265 268)
(code_label 268 266 267 46 23 "" [1 uses])
(note 267 268 46 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 46 267 269 46 (set (reg:SI 113 [ D.4028 ])
        (reg/v:SI 112 [ mask ])) -1
     (nil))
(jump_insn 269 46 270 46 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
(barrier 270 269 272)
(code_label 272 270 271 47 24 "" [1 uses])
(note 271 272 45 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 45 271 223 47 (set (reg:SI 113 [ D.4028 ])
        (reg/v:SI 112 [ mask ])) -1
     (nil))
(code_label 223 45 224 48 14 "" [3 uses])
(note 224 223 225 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 48 (set (reg:SI 153 [ <retval> ])
        (reg:SI 113 [ D.4028 ])) -1
     (nil))
(jump_insn 226 225 227 48 (set (pc)
        (label_ref 240)) -1
     (nil)
 -> 240)
(barrier 227 226 228)
(code_label 228 227 229 49 6 "" [2 uses])
(note 229 228 230 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 154 [ name ])
            (reg/v/f:DI 110 [ name ]))) explodename.c:73 -1
     (nil))
(jump_insn 231 230 234 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) explodename.c:73 -1
     (int_list:REG_BR_PROB 1118 (nil))
 -> 98)
(note 234 231 35 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 35 234 232 50 (set (reg/v:SI 112 [ mask ])
        (const_int 0 [0])) explodename.c:69 -1
     (nil))
(jump_insn 232 35 233 50 (set (pc)
        (label_ref 140)) explodename.c:73 -1
     (nil)
 -> 140)
(barrier 233 232 235)
(code_label 235 233 236 51 12 "" [1 uses])
(note 236 235 237 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 42 51 (parallel [
            (set (reg/v:SI 112 [ mask ])
                (ior:SI (reg/v:SI 112 [ mask ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) explodename.c:100 -1
     (nil))
(insn 42 237 238 51 (set (reg/v/f:DI 110 [ name ])
        (reg/v/f:DI 118 [ name ])) explodename.c:95 -1
     (nil))
(jump_insn 238 42 239 51 (set (pc)
        (label_ref 191)) explodename.c:100 -1
     (nil)
 -> 191)
(barrier 239 238 240)
(code_label 240 239 243 52 1 "" [1 uses])
(note 243 240 241 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 241 243 242 52 (set (reg/i:SI 0 ax)
        (reg:SI 153 [ <retval> ])) explodename.c:133 -1
     (nil))
(insn 242 241 0 52 (use (reg/i:SI 0 ax)) explodename.c:133 -1
     (nil))
