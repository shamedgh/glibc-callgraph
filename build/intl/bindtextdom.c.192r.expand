
;; Function set_binding_values.part.0 (set_binding_values.part.0, funcdef_no=44, decl_uid=8856, cgraph_uid=0, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72
Edge 12->15 redirected to 86
Edge 32->36 redirected to 88
Edge 33->36 redirected to 89
Edge 47->46 redirected to 90


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 69 failed.
Forwarding edge 31->32 to 35 failed.
Redirecting jump 155 from 76 to 66.
Forwarding edge 39->40 to 60 failed.
Forwarding edge 43->44 to 49 failed.
Edge 58->40 redirected to 60
Forwarding edge 62->63 to 66 failed.
Redirecting jump 308 from 75 to 66.
Forwarding edge 64->65 to 66 failed.
Removing jump 315.
Edge 66->68 redirected to 90
deleting block 68
Forwarding edge 69->70 to 29 failed.
Edge 72->76 redirected to 66
Forwarding edge 75->76 to 66 failed.
Forwarding edge 77->78 to 66 failed.
Redirecting jump 379 from 76 to 66.
Forwarding edge 79->80 to 34 failed.
Redirecting jump 387 from 33 to 34.
Forwarding edge 81->82 to 87 failed.
Edge 83->75 redirected to 66
Forwarding edge 83->84 to 31 failed.
Forwarding edge 83->84 to 31 failed.
Redirecting jump 421 from 33 to 34.
Redirecting jump 427 from 75 to 66.
Forwarding edge 88->89 to 34 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 69 failed.
Forwarding edge 31->32 to 35 failed.
deleting block 33
Forwarding edge 39->40 to 60 failed.
Deleted label in block 40.
Forwarding edge 43->44 to 49 failed.
Forwarding edge 62->63 to 66 failed.
Forwarding edge 64->65 to 66 failed.
Forwarding edge 69->70 to 29 failed.
deleting block 75
deleting block 76
Forwarding edge 77->78 to 66 failed.
Forwarding edge 79->80 to 34 failed.
Forwarding edge 81->82 to 87 failed.
Forwarding edge 83->84 to 31 failed.
Forwarding edge 88->89 to 34 failed.


try_optimize_cfg iteration 3

Forwarding edge 9->10 to 69 failed.
Forwarding edge 31->32 to 35 failed.
Forwarding edge 39->40 to 60 failed.
Forwarding edge 43->44 to 49 failed.
Forwarding edge 62->63 to 66 failed.
Forwarding edge 64->65 to 66 failed.
Forwarding edge 69->70 to 29 failed.
Forwarding edge 77->78 to 66 failed.
Forwarding edge 79->80 to 34 failed.
Forwarding edge 81->82 to 87 failed.
Forwarding edge 83->84 to 31 failed.
Forwarding edge 88->89 to 34 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 130 [ domainname ])
        (reg:DI 5 di [ domainname ])) bindtextdom.c:75 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 131 [ dirnamep ])
        (reg:DI 4 si [ dirnamep ])) bindtextdom.c:75 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 132 [ codesetp ])
        (reg:DI 1 dx [ codesetp ])) bindtextdom.c:75 -1
     (nil))
(note 5 4 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 5 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("__libc_pthread_functions_init") [flags 0x42]  <var_decl 0x2b12d434c900 __libc_pthread_functions_init>) [3 __libc_pthread_functions_init+0 S4 A32])
            (const_int 0 [0]))) bindtextdom.c:91 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) bindtextdom.c:91 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 25)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 133)
        (symbol_ref:DI ("__libc_pthread_functions") [flags 0x42]  <var_decl 0x2b12d434c870 __libc_pthread_functions>)) bindtextdom.c:91 -1
     (nil))
(insn 20 19 21 4 (set (reg/v/f:DI 88 [ __p ])
        (mem/f/c:DI (plus:DI (reg/f:DI 133)
                (const_int 328 [0x148])) [1 __libc_pthread_functions.ptr___pthread_rwlock_wrlock+0 S8 A64])) bindtextdom.c:91 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 134 [ __p ])
                (asm_operands:DI ("ror $2*8+1, %0
xor %%fs:%c2, %0") ("=r") 0 [
                        (reg/v/f:DI 88 [ __p ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") bindtextdom.c:91)
                        (asm_input:DI ("i") bindtextdom.c:91)
                    ]
                     [] bindtextdom.c:91))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) bindtextdom.c:91 -1
     (nil))
(insn 22 21 23 4 (set (reg/v/f:DI 88 [ __p ])
        (reg:DI 134 [ __p ])) bindtextdom.c:91 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_nl_state_lock") [flags 0x42]  <var_decl 0x2b12d439c630 _nl_state_lock>)) bindtextdom.c:91 -1
     (nil))
(call_insn 24 23 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 88 [ __p ]) [0 *__p_3 S1 A8])
            (const_int 0 [0]))) bindtextdom.c:91 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 25 24 26 5 2 "" [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:DI 135)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_nl_domain_bindings") [flags 0x40]  <var_decl 0x2b12d439c240 _nl_domain_bindings>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) bindtextdom.c:95 -1
     (nil))
(insn 28 27 29 5 (set (reg/v/f:DI 89 [ binding ])
        (mem/f/c:DI (reg/f:DI 135) [1 _nl_domain_bindings+0 S8 A64])) bindtextdom.c:95 -1
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ binding ])
            (const_int 0 [0]))) bindtextdom.c:95 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) bindtextdom.c:95 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 333)
(note 31 30 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(code_label 46 31 32 7 5 "" [1 uses])
(note 32 46 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/v/f:DI 89 [ binding ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:97 -1
     (nil))
(insn 34 33 35 7 (set (reg:DI 137 [ D.8913 ])
        (reg:DI 136)) bindtextdom.c:97 -1
     (nil))
(insn 35 34 36 7 (set (reg:DI 4 si)
        (reg:DI 137 [ D.8913 ])) bindtextdom.c:97 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:97 -1
     (nil))
(call_insn/i 37 36 38 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 7 (set (reg/v:SI 92 [ compare ])
        (reg:SI 0 ax)) bindtextdom.c:97 -1
     (nil))
(insn 39 38 40 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 92 [ compare ])
            (const_int 0 [0]))) bindtextdom.c:98 -1
     (nil))
(jump_insn 40 39 41 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) bindtextdom.c:98 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 341)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 92 [ compare ])
            (const_int 0 [0]))) bindtextdom.c:101 -1
     (nil))
(jump_insn 43 42 44 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) bindtextdom.c:101 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 333)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 47 9 (set (reg/v/f:DI 89 [ binding ])
        (mem/f:DI (reg/v/f:DI 89 [ binding ]) [1 binding_159->next+0 S8 A64])) bindtextdom.c:95 -1
     (nil))
(insn 47 45 48 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ binding ])
            (const_int 0 [0]))) bindtextdom.c:95 -1
     (nil))
(jump_insn 48 47 51 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) bindtextdom.c:95 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 46)
(note 51 48 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 49 51 50 10 (set (pc)
        (label_ref 333)) bindtextdom.c:95 -1
     (nil)
 -> 333)
(barrier 50 49 343)
(code_label 343 50 52 11 41 "" [1 uses])
(note 52 343 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 11 (set (reg/v/f:DI 93 [ dirname ])
        (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])) bindtextdom.c:113 -1
     (nil))
(insn 54 53 55 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ dirname ])
            (const_int 0 [0]))) bindtextdom.c:115 -1
     (nil))
(jump_insn 55 54 56 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) bindtextdom.c:115 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 61)
(note 56 55 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 12 (set (reg/f:DI 94 [ D.8908 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 8 [0x8])) [1 binding_159->dirname+0 S8 A64])) bindtextdom.c:117 -1
     (nil))
(insn 58 57 59 12 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/f:DI 94 [ D.8908 ])) bindtextdom.c:117 -1
     (nil))
(jump_insn 59 58 60 12 (set (pc)
        (label_ref 346)) bindtextdom.c:117 -1
     (nil)
 -> 346)
(barrier 60 59 61)
(code_label 61 60 62 13 6 "" [1 uses])
(note 62 61 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 13 (set (reg/v/f:DI 95 [ result ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 8 [0x8])) [1 binding_159->dirname+0 S8 A64])) bindtextdom.c:123 -1
     (nil))
(insn 64 63 65 13 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ result ])) bindtextdom.c:124 -1
     (nil))
(insn 65 64 66 13 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ dirname ])) bindtextdom.c:124 -1
     (nil))
(call_insn/i 66 65 67 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:124 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 67 66 68 13 (set (reg:SI 96 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:124 -1
     (nil))
(insn 68 67 69 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:124 -1
     (nil))
(jump_insn 69 68 70 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) bindtextdom.c:124 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 373)
(note 70 69 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 14 (set (reg/f:DI 138)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:126 -1
     (nil))
(insn 72 71 73 14 (set (reg:DI 4 si)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:126 -1
     (nil))
(insn 73 72 74 14 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ dirname ])) bindtextdom.c:126 -1
     (nil))
(call_insn/i 74 73 75 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:126 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 14 (set (reg:SI 97 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:126 -1
     (nil))
(insn 76 75 77 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:126 -1
     (nil))
(jump_insn 77 76 78 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 456)
            (pc))) bindtextdom.c:126 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 456)
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 15 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ dirname ])) bindtextdom.c:131 -1
     (nil))
(call_insn 80 79 81 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) bindtextdom.c:131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 15 (set (reg/f:DI 139)
        (reg:DI 0 ax)) bindtextdom.c:131 -1
     (expr_list:REG_NOALIAS (reg/f:DI 139)
        (nil)))
(insn 82 81 83 15 (set (reg/v/f:DI 95 [ result ])
        (reg/f:DI 139)) bindtextdom.c:131 -1
     (nil))
(insn 83 82 84 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ result ])
            (const_int 0 [0]))) bindtextdom.c:140 -1
     (nil))
(jump_insn 84 83 85 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 373)
            (pc))) bindtextdom.c:140 -1
     (int_list:REG_BR_PROB 3448 (nil))
 -> 373)
(note 85 84 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 453 16 (set (reg/f:DI 90 [ D.8908 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 8 [0x8])) [1 binding_159->dirname+0 S8 A64])) -1
     (nil))
(jump_insn 453 86 454 16 (set (pc)
        (label_ref 87)) -1
     (nil)
 -> 87)
(barrier 454 453 456)
(code_label 456 454 455 17 51 "" [1 uses])
(note 455 456 6 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 6 455 7 17 (set (reg/f:DI 90 [ D.8908 ])
        (reg/v/f:DI 95 [ result ])) bindtextdom.c:126 -1
     (nil))
(insn 7 6 87 17 (set (reg/v/f:DI 95 [ result ])
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:127 -1
     (nil))
(code_label 87 7 88 18 9 "" [1 uses])
(note 88 87 89 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 18 (set (reg:DI 140)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:142 -1
     (nil))
(insn 90 89 91 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.8908 ])
            (reg:DI 140))) bindtextdom.c:142 -1
     (nil))
(jump_insn 91 90 92 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) bindtextdom.c:142 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 95)
(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 19 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.8908 ])) bindtextdom.c:143 -1
     (nil))
(call_insn 94 93 95 19 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) bindtextdom.c:143 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 95 94 96 20 10 "" [1 uses])
(note 96 95 97 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 20 (set (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 8 [0x8])) [1 binding_159->dirname+0 S8 A64])
        (reg/v/f:DI 95 [ result ])) bindtextdom.c:145 -1
     (nil))
(insn 98 97 99 20 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/v/f:DI 95 [ result ])) bindtextdom.c:149 -1
     (nil))
(insn 99 98 100 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:153 -1
     (nil))
(jump_insn 100 99 457 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) bindtextdom.c:153 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 354)
(note 457 100 8 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 8 457 351 21 (set (reg/v:SI 125 [ modified ])
        (const_int 1 [0x1])) bindtextdom.c:146 -1
     (nil))
(code_label 351 8 101 22 42 "" [1 uses])
(note 101 351 102 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 22 (set (reg/v/f:DI 98 [ codeset ])
        (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])) bindtextdom.c:155 -1
     (nil))
(insn 103 102 104 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ codeset ])
            (const_int 0 [0]))) bindtextdom.c:157 -1
     (nil))
(jump_insn 104 103 105 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) bindtextdom.c:157 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 110)
(note 105 104 106 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 23 (set (reg/f:DI 99 [ D.8908 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 16 [0x10])) [1 binding_159->codeset+0 S8 A64])) bindtextdom.c:159 -1
     (nil))
(insn 107 106 108 23 (set (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])
        (reg/f:DI 99 [ D.8908 ])) bindtextdom.c:159 -1
     (nil))
(jump_insn 108 107 109 23 (set (pc)
        (label_ref 311)) bindtextdom.c:159 -1
     (nil)
 -> 311)
(barrier 109 108 110)
(code_label 110 109 111 24 12 "" [1 uses])
(note 111 110 112 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 24 (set (reg/v/f:DI 100 [ result ])
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 16 [0x10])) [1 binding_159->codeset+0 S8 A64])) bindtextdom.c:165 -1
     (nil))
(insn 113 112 114 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ result ])
            (const_int 0 [0]))) bindtextdom.c:166 -1
     (nil))
(jump_insn 114 113 115 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) bindtextdom.c:166 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 122)
(note 115 114 116 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 25 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ result ])) bindtextdom.c:166 -1
     (nil))
(insn 117 116 118 25 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ codeset ])) bindtextdom.c:166 -1
     (nil))
(call_insn/i 118 117 119 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:166 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 119 118 120 25 (set (reg:SI 101 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:166 -1
     (nil))
(insn 120 119 121 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:166 -1
     (nil))
(jump_insn 121 120 122 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) bindtextdom.c:166 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 135)
(code_label 122 121 123 26 14 "" [1 uses])
(note 123 122 124 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 26 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ codeset ])) bindtextdom.c:169 -1
     (nil))
(call_insn 125 124 126 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) bindtextdom.c:169 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 126 125 127 26 (set (reg/f:DI 141)
        (reg:DI 0 ax)) bindtextdom.c:169 -1
     (expr_list:REG_NOALIAS (reg/f:DI 141)
        (nil)))
(insn 127 126 128 26 (set (reg/v/f:DI 100 [ result ])
        (reg/f:DI 141)) bindtextdom.c:169 -1
     (nil))
(insn 128 127 129 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ result ])
            (const_int 0 [0]))) bindtextdom.c:177 -1
     (nil))
(jump_insn 129 128 130 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 135)
            (pc))) bindtextdom.c:177 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 135)
(note 130 129 131 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 27 (set (reg:DI 142)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 16 [0x10])) [1 binding_159->codeset+0 S8 A64])) bindtextdom.c:179 -1
     (nil))
(insn 132 131 133 27 (set (reg:DI 5 di)
        (reg:DI 142)) bindtextdom.c:179 -1
     (nil))
(call_insn 133 132 134 27 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) bindtextdom.c:179 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 134 133 10 27 (set (mem/f:DI (plus:DI (reg/v/f:DI 89 [ binding ])
                (const_int 16 [0x10])) [1 binding_159->codeset+0 S8 A64])
        (reg/v/f:DI 100 [ result ])) bindtextdom.c:181 -1
     (nil))
(insn 10 134 135 27 (set (reg/v:SI 125 [ modified ])
        (const_int 1 [0x1])) bindtextdom.c:182 -1
     (nil))
(code_label 135 10 136 28 15 "" [2 uses])
(note 136 135 137 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 28 (set (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])
        (reg/v/f:DI 100 [ result ])) bindtextdom.c:185 -1
     (nil))
(jump_insn 138 137 139 28 (set (pc)
        (label_ref 311)) bindtextdom.c:185 -1
     (nil)
 -> 311)
(barrier 139 138 337)
(code_label 337 139 140 29 40 "" [1 uses])
(note 140 337 141 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
            (const_int 0 [0]))) bindtextdom.c:189 -1
     (nil))
(jump_insn 142 141 143 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) bindtextdom.c:189 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 390)
(note 143 142 144 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:190 -1
     (nil))
(jump_insn 145 144 413 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 423)
            (pc))) bindtextdom.c:190 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 423)
(code_label 413 145 146 31 49 "" [1 uses])
(note 146 413 147 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])
            (const_int 0 [0]))) bindtextdom.c:190 -1
     (nil))
(jump_insn 148 147 151 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) bindtextdom.c:190 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 382)
(note 151 148 149 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 149 151 150 32 (set (pc)
        (label_ref 157)) bindtextdom.c:190 -1
     (nil)
 -> 157)
(barrier 150 149 305)
(code_label 305 150 153 34 36 "" [4 uses])
(note 153 305 154 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 34 (set (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])
        (const_int 0 [0])) bindtextdom.c:196 -1
     (nil))
(jump_insn 155 154 156 34 (set (pc)
        (label_ref:DI 364)) bindtextdom.c:196 654 {jump}
     (nil)
 -> 364)
(barrier 156 155 157)
(code_label 157 156 158 35 19 "" [1 uses])
(note 158 157 159 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 35 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:201 -1
     (nil))
(call_insn/i 160 159 161 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b12d3ec6948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) bindtextdom.c:201 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b12d3ec6948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 161 160 162 35 (set (reg:DI 144)
        (reg:DI 0 ax)) bindtextdom.c:201 -1
     (nil))
(insn 162 161 163 35 (set (reg:DI 145)
        (reg:DI 144)) bindtextdom.c:201 -1
     (nil))
(insn 163 162 164 35 (set (reg:DI 105 [ D.8911 ])
        (reg:DI 145)) bindtextdom.c:201 -1
     (nil))
(insn 164 163 165 35 (parallel [
            (set (reg/v:DI 106 [ len ])
                (plus:DI (reg:DI 105 [ D.8911 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:201 -1
     (nil))
(insn 165 164 166 35 (parallel [
            (set (reg:DI 146 [ D.8911 ])
                (plus:DI (reg:DI 105 [ D.8911 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:202 -1
     (nil))
(insn 166 165 167 35 (set (reg:DI 5 di)
        (reg:DI 146 [ D.8911 ])) bindtextdom.c:202 -1
     (nil))
(call_insn 167 166 168 35 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b12d3eec360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) bindtextdom.c:202 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b12d3eec360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 35 (set (reg/f:DI 147)
        (reg:DI 0 ax)) bindtextdom.c:202 -1
     (expr_list:REG_NOALIAS (reg/f:DI 147)
        (nil)))
(insn 169 168 170 35 (set (reg/v/f:DI 108 [ new_binding ])
        (reg/f:DI 147)) bindtextdom.c:202 -1
     (nil))
(insn 170 169 171 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 108 [ new_binding ])
            (const_int 0 [0]))) bindtextdom.c:205 -1
     (nil))
(jump_insn 171 170 172 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) bindtextdom.c:205 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 444)
(note 172 171 173 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 36 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/v/f:DI 108 [ new_binding ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:208 -1
     (nil))
(insn 174 173 175 36 (set (reg:DI 149)
        (reg:DI 148)) bindtextdom.c:208 -1
     (nil))
(insn 175 174 176 36 (set (reg:DI 150)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:208 -1
     (nil))
(insn 176 175 177 36 (set (reg:DI 151)
        (reg/v:DI 106 [ len ])) bindtextdom.c:208 -1
     (nil))
(insn 177 176 178 36 (set (reg:DI 1 dx)
        (reg:DI 151)) bindtextdom.c:208 -1
     (nil))
(insn 178 177 179 36 (set (reg:DI 4 si)
        (reg:DI 150)) bindtextdom.c:208 -1
     (nil))
(insn 179 178 180 36 (set (reg:DI 5 di)
        (reg:DI 149)) bindtextdom.c:208 -1
     (nil))
(call_insn 180 179 181 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b12d410b288 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) bindtextdom.c:208 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b12d410b288 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 181 180 182 36 (set (reg:DI 152)
        (reg:DI 0 ax)) bindtextdom.c:208 -1
     (nil))
(insn 182 181 183 36 (set (reg:DI 153)
        (reg:DI 152)) bindtextdom.c:208 -1
     (nil))
(insn 183 182 184 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:210 -1
     (nil))
(jump_insn 184 183 441 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) bindtextdom.c:210 -1
     (int_list:REG_BR_PROB 6701 (nil))
 -> 216)
(code_label 441 184 185 37 50 "" [1 uses])
(note 185 441 186 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 37 (set (reg/v/f:DI 110 [ dirname ])
        (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])) bindtextdom.c:212 -1
     (nil))
(insn 187 186 188 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ dirname ])
            (const_int 0 [0]))) bindtextdom.c:214 -1
     (nil))
(jump_insn 188 187 189 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 459)
            (pc))) bindtextdom.c:214 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 459)
(note 189 188 190 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 38 (set (reg/f:DI 154)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:219 -1
     (nil))
(insn 191 190 192 38 (set (reg:DI 4 si)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:219 -1
     (nil))
(insn 192 191 193 38 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ dirname ])) bindtextdom.c:219 -1
     (nil))
(call_insn/i 193 192 194 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:219 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 194 193 195 38 (set (reg:SI 111 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:219 -1
     (nil))
(insn 195 194 196 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:219 -1
     (nil))
(jump_insn 196 195 197 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 463)
            (pc))) bindtextdom.c:219 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 463)
(note 197 196 198 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 39 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ dirname ])) bindtextdom.c:225 -1
     (nil))
(call_insn 199 198 200 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) bindtextdom.c:225 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 200 199 201 39 (set (reg/f:DI 155)
        (reg:DI 0 ax)) bindtextdom.c:225 -1
     (expr_list:REG_NOALIAS (reg/f:DI 155)
        (nil)))
(insn 201 200 202 39 (set (reg/v/f:DI 112 [ dirname ])
        (reg/f:DI 155)) bindtextdom.c:225 -1
     (nil))
(insn 202 201 203 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 112 [ dirname ])
            (const_int 0 [0]))) bindtextdom.c:226 -1
     (nil))
(jump_insn 203 202 204 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 207)
            (pc))) bindtextdom.c:226 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 207)
(note 204 203 205 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 205 204 206 40 (set (pc)
        (label_ref 295)) bindtextdom.c:226 -1
     (nil)
 -> 295)
(barrier 206 205 459)
(code_label 459 206 458 41 52 "" [1 uses])
(note 458 459 12 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 12 458 460 41 (set (reg/v/f:DI 112 [ dirname ])
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:216 -1
     (nil))
(jump_insn 460 12 461 41 (set (pc)
        (label_ref 207)) -1
     (nil)
 -> 207)
(barrier 461 460 463)
(code_label 463 461 462 42 53 "" [1 uses])
(note 462 463 11 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 11 462 207 42 (set (reg/v/f:DI 112 [ dirname ])
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:216 -1
     (nil))
(code_label 207 11 208 43 23 "" [2 uses])
(note 208 207 209 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 43 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/v/f:DI 112 [ dirname ])) bindtextdom.c:238 -1
     (nil))
(insn 210 209 211 43 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ new_binding ])
                (const_int 8 [0x8])) [1 new_binding_143->dirname+0 S8 A64])
        (reg/v/f:DI 112 [ dirname ])) bindtextdom.c:239 -1
     (nil))
(insn 211 210 212 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:245 -1
     (nil))
(jump_insn 212 211 215 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) bindtextdom.c:245 -1
     (int_list:REG_BR_PROB 8236 (nil))
 -> 220)
(note 215 212 213 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 213 215 214 44 (set (pc)
        (label_ref 238)) bindtextdom.c:245 -1
     (nil)
 -> 238)
(barrier 214 213 216)
(code_label 216 214 217 45 22 "" [1 uses])
(note 217 216 218 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 45 (set (reg/f:DI 156)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:243 -1
     (nil))
(insn 219 218 220 45 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ new_binding ])
                (const_int 8 [0x8])) [1 new_binding_40->dirname+0 S8 A64])
        (reg/f:DI 156)) bindtextdom.c:243 -1
     (nil))
(code_label 220 219 221 46 25 "" [1 uses])
(note 221 220 222 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 46 (set (reg/v/f:DI 114 [ codeset ])
        (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])) bindtextdom.c:247 -1
     (nil))
(insn 223 222 224 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 114 [ codeset ])
            (const_int 0 [0]))) bindtextdom.c:249 -1
     (nil))
(jump_insn 224 223 225 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 232)
            (pc))) bindtextdom.c:249 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 232)
(note 225 224 226 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 47 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ codeset ])) bindtextdom.c:254 -1
     (nil))
(call_insn 227 226 228 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) bindtextdom.c:254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strdup") [flags 0x43]  <function_decl 0x2b12d40d0e58 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 47 (set (reg/f:DI 157)
        (reg:DI 0 ax)) bindtextdom.c:254 -1
     (expr_list:REG_NOALIAS (reg/f:DI 157)
        (nil)))
(insn 229 228 230 47 (set (reg/v/f:DI 114 [ codeset ])
        (reg/f:DI 157)) bindtextdom.c:254 -1
     (nil))
(insn 230 229 231 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 114 [ codeset ])
            (const_int 0 [0]))) bindtextdom.c:255 -1
     (nil))
(jump_insn 231 230 232 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) bindtextdom.c:255 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 285)
(code_label 232 231 233 48 27 "" [1 uses])
(note 233 232 234 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 48 (set (mem/f:DI (reg/v/f:DI 132 [ codesetp ]) [1 *codesetp_24(D)+0 S8 A64])
        (reg/v/f:DI 114 [ codeset ])) bindtextdom.c:266 -1
     (nil))
(insn 235 234 236 48 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ new_binding ])
                (const_int 16 [0x10])) [1 new_binding_42->codeset+0 S8 A64])
        (reg/v/f:DI 114 [ codeset ])) bindtextdom.c:267 -1
     (nil))
(jump_insn 236 235 237 48 (set (pc)
        (label_ref 241)) bindtextdom.c:267 -1
     (nil)
 -> 241)
(barrier 237 236 238)
(code_label 238 237 239 49 26 "" [1 uses])
(note 239 238 240 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 49 (set (mem/f:DI (plus:DI (reg/v/f:DI 108 [ new_binding ])
                (const_int 16 [0x10])) [1 new_binding_143->codeset+0 S8 A64])
        (const_int 0 [0])) bindtextdom.c:270 -1
     (nil))
(code_label 241 240 242 50 29 "" [1 uses])
(note 242 241 243 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 50 (set (reg/f:DI 158)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_nl_domain_bindings") [flags 0x40]  <var_decl 0x2b12d439c240 _nl_domain_bindings>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) bindtextdom.c:273 -1
     (nil))
(insn 244 243 245 50 (set (reg/v/f:DI 115 [ binding ])
        (mem/f/c:DI (reg/f:DI 158) [1 _nl_domain_bindings+0 S8 A64])) bindtextdom.c:273 -1
     (nil))
(insn 245 244 246 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 115 [ binding ])
            (const_int 0 [0]))) bindtextdom.c:273 -1
     (nil))
(jump_insn 246 245 247 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) bindtextdom.c:273 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 256)
(note 247 246 248 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 51 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/v/f:DI 115 [ binding ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:274 -1
     (nil))
(insn 249 248 250 51 (set (reg:DI 160 [ D.8917 ])
        (reg:DI 159)) bindtextdom.c:274 -1
     (nil))
(insn 250 249 251 51 (set (reg:DI 4 si)
        (reg:DI 160 [ D.8917 ])) bindtextdom.c:274 -1
     (nil))
(insn 251 250 252 51 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:274 -1
     (nil))
(call_insn/i 252 251 253 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 253 252 254 51 (set (reg:SI 117 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:274 -1
     (nil))
(insn 254 253 255 51 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 117 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:274 -1
     (nil))
(jump_insn 255 254 256 51 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) bindtextdom.c:274 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 263)
(code_label 256 255 257 52 30 "" [1 uses])
(note 257 256 258 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 52 (set (mem/f:DI (reg/v/f:DI 108 [ new_binding ]) [1 new_binding_179->next+0 S8 A64])
        (reg/v/f:DI 115 [ binding ])) bindtextdom.c:276 -1
     (nil))
(insn 259 258 260 52 (set (reg/f:DI 161)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_nl_domain_bindings") [flags 0x40]  <var_decl 0x2b12d439c240 _nl_domain_bindings>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) bindtextdom.c:277 -1
     (nil))
(insn 260 259 261 52 (set (mem/f/c:DI (reg/f:DI 161) [1 _nl_domain_bindings+0 S8 A64])
        (reg/v/f:DI 108 [ new_binding ])) bindtextdom.c:277 -1
     (nil))
(jump_insn 261 260 262 52 (set (pc)
        (label_ref 354)) bindtextdom.c:277 -1
     (nil)
 -> 354)
(barrier 262 261 263)
(code_label 263 262 264 53 31 "" [1 uses])
(note 264 263 464 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(jump_insn 464 264 465 53 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
(barrier 465 464 467)
(code_label 467 465 466 54 54 "" [1 uses])
(note 466 467 13 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 13 466 276 54 (set (reg/v/f:DI 115 [ binding ])
        (reg/v/f:DI 113 [ binding ])) bindtextdom.c:283 -1
     (nil))
(code_label 276 13 265 55 33 "" [1 uses])
(note 265 276 266 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 55 (set (reg/v/f:DI 113 [ binding ])
        (mem/f:DI (reg/v/f:DI 115 [ binding ]) [1 binding_61->next+0 S8 A64])) bindtextdom.c:282 -1
     (nil))
(insn 267 266 268 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 113 [ binding ])
            (const_int 0 [0]))) bindtextdom.c:282 -1
     (nil))
(jump_insn 268 267 269 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) bindtextdom.c:282 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 279)
(note 269 268 270 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 56 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/v/f:DI 113 [ binding ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:283 -1
     (nil))
(insn 271 270 272 56 (set (reg:DI 163 [ D.8918 ])
        (reg:DI 162)) bindtextdom.c:283 -1
     (nil))
(insn 272 271 273 56 (set (reg:DI 4 si)
        (reg:DI 163 [ D.8918 ])) bindtextdom.c:283 -1
     (nil))
(insn 273 272 274 56 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:283 -1
     (nil))
(call_insn/i 274 273 275 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) bindtextdom.c:283 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2b12d3ec6000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 275 274 277 56 (set (reg:SI 119 [ D.8907 ])
        (reg:SI 0 ax)) bindtextdom.c:283 -1
     (nil))
(insn 277 275 278 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 119 [ D.8907 ])
            (const_int 0 [0]))) bindtextdom.c:283 -1
     (nil))
(jump_insn 278 277 279 56 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 467)
            (pc))) bindtextdom.c:283 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 467)
(code_label 279 278 280 57 32 "" [1 uses])
(note 280 279 281 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 57 (set (mem/f:DI (reg/v/f:DI 108 [ new_binding ]) [1 new_binding_179->next+0 S8 A64])
        (reg/v/f:DI 113 [ binding ])) bindtextdom.c:286 -1
     (nil))
(insn 282 281 283 57 (set (mem/f:DI (reg/v/f:DI 115 [ binding ]) [1 binding_61->next+0 S8 A64])
        (reg/v/f:DI 108 [ new_binding ])) bindtextdom.c:287 -1
     (nil))
(jump_insn 283 282 284 57 (set (pc)
        (label_ref 354)) bindtextdom.c:287 -1
     (nil)
 -> 354)
(barrier 284 283 285)
(code_label 285 284 286 58 28 ("failed_codeset") [1 uses])
(note 286 285 287 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 289 58 (set (reg/f:DI 120 [ D.8908 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 108 [ new_binding ])
                (const_int 8 [0x8])) [1 new_binding_42->dirname+0 S8 A64])) bindtextdom.c:296 -1
     (nil))
(insn 289 287 290 58 (set (reg:DI 164)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:296 -1
     (nil))
(insn 290 289 291 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 120 [ D.8908 ])
            (reg:DI 164))) bindtextdom.c:296 -1
     (nil))
(jump_insn 291 290 292 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 295)
            (pc))) bindtextdom.c:296 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 295)
(note 292 291 293 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 59 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.8908 ])) bindtextdom.c:297 -1
     (nil))
(call_insn 294 293 295 59 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) bindtextdom.c:297 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 295 294 296 60 24 ("failed_dirname") [2 uses])
(note 296 295 297 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 60 (set (reg:DI 5 di)
        (reg/v/f:DI 108 [ new_binding ])) bindtextdom.c:299 -1
     (nil))
(call_insn 298 297 299 60 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) bindtextdom.c:299 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b12d3ee2e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 299 298 300 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:301 -1
     (nil))
(jump_insn 300 299 403 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) bindtextdom.c:301 -1
     (int_list:REG_BR_PROB 2724 (nil))
 -> 303)
(code_label 403 300 301 61 47 "" [2 uses])
(note 301 403 302 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 61 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (const_int 0 [0])) bindtextdom.c:302 -1
     (nil))
(code_label 303 302 304 62 35 "" [1 uses])
(note 304 303 306 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 306 304 307 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:303 -1
     (nil))
(jump_insn 307 306 310 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) bindtextdom.c:303 -1
     (int_list:REG_BR_PROB 8446 (nil))
 -> 305)
(note 310 307 308 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(jump_insn 308 310 309 63 (set (pc)
        (label_ref:DI 364)) bindtextdom.c:303 654 {jump}
     (nil)
 -> 364)
(barrier 309 308 311)
(code_label 311 309 312 64 13 "" [2 uses])
(note 312 311 313 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ modified ])
            (const_int 0 [0]))) bindtextdom.c:309 -1
     (nil))
(jump_insn 314 313 317 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) bindtextdom.c:309 -1
     (int_list:REG_BR_PROB 5341 (nil))
 -> 354)
(note 317 314 364 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(code_label 364 317 318 66 43 "" [7 uses])
(note 318 364 319 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("__libc_pthread_functions_init") [flags 0x42]  <var_decl 0x2b12d434c900 __libc_pthread_functions_init>) [3 __libc_pthread_functions_init+0 S4 A32])
            (const_int 0 [0]))) bindtextdom.c:312 -1
     (nil))
(jump_insn 320 319 321 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 451)
            (pc))) bindtextdom.c:312 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 451)
(note 321 320 322 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 67 (set (reg/f:DI 165)
        (symbol_ref:DI ("__libc_pthread_functions") [flags 0x42]  <var_decl 0x2b12d434c870 __libc_pthread_functions>)) bindtextdom.c:312 -1
     (nil))
(insn 323 322 324 67 (set (reg/v/f:DI 124 [ __p ])
        (mem/f/c:DI (plus:DI (reg/f:DI 165)
                (const_int 336 [0x150])) [1 __libc_pthread_functions.ptr___pthread_rwlock_unlock+0 S8 A64])) bindtextdom.c:312 -1
     (nil))
(insn 324 323 325 67 (parallel [
            (set (reg:DI 166 [ __p ])
                (asm_operands:DI ("ror $2*8+1, %0
xor %%fs:%c2, %0") ("=r") 0 [
                        (reg/v/f:DI 124 [ __p ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") bindtextdom.c:312)
                        (asm_input:DI ("i") bindtextdom.c:312)
                    ]
                     [] bindtextdom.c:312))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) bindtextdom.c:312 -1
     (nil))
(insn 325 324 326 67 (set (reg/v/f:DI 124 [ __p ])
        (reg:DI 166 [ __p ])) bindtextdom.c:312 -1
     (nil))
(insn 326 325 327 67 (set (reg:DI 5 di)
        (symbol_ref:DI ("_nl_state_lock") [flags 0x42]  <var_decl 0x2b12d439c630 _nl_state_lock>)) bindtextdom.c:312 -1
     (nil))
(call_insn/j 327 326 328 67 (set (reg:SI 0 ax)
        (call (mem:QI (reg/v/f:DI 124 [ __p ]) [0 *__p_71 S1 A8])
            (const_int 0 [0]))) bindtextdom.c:312 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 328 327 333)
(code_label 333 328 334 69 3 "" [3 uses])
(note 334 333 335 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:189 -1
     (nil))
(jump_insn 336 335 340 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) bindtextdom.c:189 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 409)
(note 340 336 338 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(jump_insn 338 340 339 70 (set (pc)
        (label_ref 337)) bindtextdom.c:189 -1
     (nil)
 -> 337)
(barrier 339 338 341)
(code_label 341 339 342 71 4 "" [1 uses])
(note 342 341 344 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 344 342 345 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:111 -1
     (nil))
(jump_insn 345 344 346 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) bindtextdom.c:111 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 343)
(code_label 346 345 347 72 7 "" [1 uses])
(note 347 346 348 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 349 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:153 -1
     (nil))
(jump_insn 349 348 376 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 364)
            (pc))) bindtextdom.c:153 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 364)
(code_label 376 349 350 73 44 "" [1 uses])
(note 350 376 9 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 9 350 352 73 (set (reg/v:SI 125 [ modified ])
        (const_int 0 [0])) bindtextdom.c:146 -1
     (nil))
(jump_insn 352 9 353 73 (set (pc)
        (label_ref 351)) bindtextdom.c:153 -1
     (nil)
 -> 351)
(barrier 353 352 354)
(code_label 354 353 355 74 11 "" [4 uses])
(note 355 354 356 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 74 (set (reg/f:DI 167)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_nl_msg_cat_cntr") [flags 0x40]  <var_decl 0x2b12d439c090 _nl_msg_cat_cntr>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) bindtextdom.c:310 -1
     (nil))
(insn 357 356 361 74 (set (reg/f:DI 168)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_nl_msg_cat_cntr") [flags 0x40]  <var_decl 0x2b12d439c090 _nl_msg_cat_cntr>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) bindtextdom.c:310 -1
     (nil))
(insn 361 357 362 74 (set (reg:SI 172)
        (mem/c:SI (reg/f:DI 168) [3 _nl_msg_cat_cntr+0 S4 A32])) bindtextdom.c:310 -1
     (nil))
(insn 362 361 363 74 (parallel [
            (set (reg:SI 171 [ D.8907 ])
                (plus:SI (reg:SI 172)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:310 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (reg/f:DI 168) [3 _nl_msg_cat_cntr+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 363 362 365 74 (set (mem/c:SI (reg/f:DI 167) [3 _nl_msg_cat_cntr+0 S4 A32])
        (reg:SI 171 [ D.8907 ])) bindtextdom.c:310 -1
     (nil))
(jump_insn 365 363 366 74 (set (pc)
        (label_ref 364)) bindtextdom.c:310 -1
     (nil)
 -> 364)
(barrier 366 365 373)
(code_label 373 366 374 77 8 "" [2 uses])
(note 374 373 375 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 377 77 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/v/f:DI 95 [ result ])) bindtextdom.c:149 -1
     (nil))
(insn 377 375 378 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:153 -1
     (nil))
(jump_insn 378 377 381 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) bindtextdom.c:153 -1
     (int_list:REG_BR_PROB 7274 (nil))
 -> 376)
(note 381 378 379 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn 379 381 380 78 (set (pc)
        (label_ref:DI 364)) bindtextdom.c:153 654 {jump}
     (nil)
 -> 364)
(barrier 380 379 382)
(code_label 382 380 383 79 18 "" [1 uses])
(note 383 382 384 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:193 -1
     (nil))
(jump_insn 385 384 389 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) bindtextdom.c:193 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 417)
(note 389 385 387 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn 387 389 388 80 (set (pc)
        (label_ref:DI 305)) bindtextdom.c:193 654 {jump}
     (nil)
 -> 305)
(barrier 388 387 390)
(code_label 390 388 391 81 16 "" [1 uses])
(note 391 390 392 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 81 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:201 -1
     (nil))
(call_insn/i 393 392 394 81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b12d3ec6948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) bindtextdom.c:201 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b12d3ec6948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 394 393 395 81 (set (reg:DI 174)
        (reg:DI 0 ax)) bindtextdom.c:201 -1
     (nil))
(insn 395 394 396 81 (set (reg:DI 175)
        (reg:DI 174)) bindtextdom.c:201 -1
     (nil))
(insn 396 395 397 81 (set (reg:DI 127 [ D.8911 ])
        (reg:DI 175)) bindtextdom.c:201 -1
     (nil))
(insn 397 396 398 81 (parallel [
            (set (reg/v:DI 129 [ len ])
                (plus:DI (reg:DI 127 [ D.8911 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:201 -1
     (nil))
(insn 398 397 399 81 (parallel [
            (set (reg:DI 176 [ D.8911 ])
                (plus:DI (reg:DI 127 [ D.8911 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:202 -1
     (nil))
(insn 399 398 400 81 (set (reg:DI 5 di)
        (reg:DI 176 [ D.8911 ])) bindtextdom.c:202 -1
     (nil))
(call_insn 400 399 401 81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b12d3eec360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) bindtextdom.c:202 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b12d3eec360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 401 400 402 81 (set (reg/f:DI 177)
        (reg:DI 0 ax)) bindtextdom.c:202 -1
     (expr_list:REG_NOALIAS (reg/f:DI 177)
        (nil)))
(insn 402 401 404 81 (set (reg/v/f:DI 108 [ new_binding ])
        (reg/f:DI 177)) bindtextdom.c:202 -1
     (nil))
(insn 404 402 405 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 108 [ new_binding ])
            (const_int 0 [0]))) bindtextdom.c:205 -1
     (nil))
(jump_insn 405 404 408 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) bindtextdom.c:205 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 403)
(note 408 405 406 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(jump_insn 406 408 407 82 (set (pc)
        (label_ref 429)) bindtextdom.c:205 -1
     (nil)
 -> 429)
(barrier 407 406 409)
(code_label 409 407 410 83 39 "" [1 uses])
(note 410 409 411 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 412 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ codesetp ])
            (const_int 0 [0]))) bindtextdom.c:190 -1
     (nil))
(jump_insn 412 411 416 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 364)
            (pc))) bindtextdom.c:190 612 {*jcc_1}
     (int_list:REG_BR_PROB 386 (nil))
 -> 364)
(note 416 412 414 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(jump_insn 414 416 415 84 (set (pc)
        (label_ref 413)) bindtextdom.c:190 -1
     (nil)
 -> 413)
(barrier 415 414 417)
(code_label 417 415 418 85 45 "" [1 uses])
(note 418 417 419 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 85 (set (reg/f:DI 178)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:194 -1
     (nil))
(insn 420 419 421 85 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/f:DI 178)) bindtextdom.c:194 -1
     (nil))
(jump_insn 421 420 422 85 (set (pc)
        (label_ref:DI 305)) bindtextdom.c:194 654 {jump}
     (nil)
 -> 305)
(barrier 422 421 423)
(code_label 423 422 424 86 17 "" [1 uses])
(note 424 423 425 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 86 (set (reg/f:DI 179)
        (symbol_ref:DI ("*__GI__nl_default_dirname") [flags 0x42]  <var_decl 0x2b12d439c120 _nl_default_dirname>)) bindtextdom.c:194 -1
     (nil))
(insn 426 425 427 86 (set (mem/f:DI (reg/v/f:DI 131 [ dirnamep ]) [1 *dirnamep_11(D)+0 S8 A64])
        (reg/f:DI 179)) bindtextdom.c:194 -1
     (nil))
(jump_insn 427 426 428 86 (set (pc)
        (label_ref:DI 364)) bindtextdom.c:194 654 {jump}
     (nil)
 -> 364)
(barrier 428 427 429)
(code_label 429 428 430 87 48 "" [1 uses])
(note 430 429 431 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 87 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/v/f:DI 108 [ new_binding ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) bindtextdom.c:208 -1
     (nil))
(insn 432 431 433 87 (set (reg:DI 181)
        (reg:DI 180)) bindtextdom.c:208 -1
     (nil))
(insn 433 432 434 87 (set (reg:DI 182)
        (reg/v/f:DI 130 [ domainname ])) bindtextdom.c:208 -1
     (nil))
(insn 434 433 435 87 (set (reg:DI 183)
        (reg/v:DI 129 [ len ])) bindtextdom.c:208 -1
     (nil))
(insn 435 434 436 87 (set (reg:DI 1 dx)
        (reg:DI 183)) bindtextdom.c:208 -1
     (nil))
(insn 436 435 437 87 (set (reg:DI 4 si)
        (reg:DI 182)) bindtextdom.c:208 -1
     (nil))
(insn 437 436 438 87 (set (reg:DI 5 di)
        (reg:DI 181)) bindtextdom.c:208 -1
     (nil))
(call_insn 438 437 439 87 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b12d410b288 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) bindtextdom.c:208 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b12d410b288 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 439 438 440 87 (set (reg:DI 184)
        (reg:DI 0 ax)) bindtextdom.c:208 -1
     (nil))
(insn 440 439 442 87 (set (reg:DI 185)
        (reg:DI 184)) bindtextdom.c:208 -1
     (nil))
(jump_insn 442 440 443 87 (set (pc)
        (label_ref 441)) bindtextdom.c:208 -1
     (nil)
 -> 441)
(barrier 443 442 444)
(code_label 444 443 445 88 21 "" [1 uses])
(note 445 444 446 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 131 [ dirnamep ])
            (const_int 0 [0]))) bindtextdom.c:301 -1
     (nil))
(jump_insn 447 446 450 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 403)
            (pc))) bindtextdom.c:301 -1
     (int_list:REG_BR_PROB 7276 (nil))
 -> 403)
(note 450 447 448 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(jump_insn 448 450 449 89 (set (pc)
        (label_ref 305)) bindtextdom.c:301 -1
     (nil)
 -> 305)
(barrier 449 448 451)
(code_label 451 449 452 90 1 "" [1 uses])
(note 452 451 0 90 [bb 90] NOTE_INSN_BASIC_BLOCK)

;; Function __bindtextdomain (__bindtextdomain, funcdef_no=42, decl_uid=8445, cgraph_uid=42, symbol_order=49)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Edge 2->5 redirected to 8
Edge 3->5 redirected to 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 24.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 90 [ domainname ])
        (reg:DI 5 di [ domainname ])) bindtextdom.c:319 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 dirname+0 S8 A64])
        (reg:DI 4 si [ dirname ])) bindtextdom.c:319 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ domainname ])
            (const_int 0 [0]))) bindtextdom.c:82 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) bindtextdom.c:82 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 33)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 90 [ domainname ]) [0 *domainname_2(D)+0 S1 A8])
            (const_int 0 [0]))) bindtextdom.c:82 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) bindtextdom.c:82 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 37)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 1 dx)
        (const_int 0 [0])) -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 4 si)
        (reg:DI 91)) -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ domainname ])) -1
     (nil))
(call_insn 19 18 20 5 (call (mem:QI (symbol_ref:DI ("set_binding_values.part.0") [flags 0x3]  <function_decl 0x2b12d4401e58 set_binding_values.part.0>) [0 set_binding_values.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_binding_values.part.0") [flags 0x3]  <function_decl 0x2b12d4401e58 set_binding_values.part.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 30 5 (set (reg/f:DI 88 [ D.8926 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 dirname+0 S8 A64])) -1
     (nil))
(jump_insn 30 20 31 5 (set (pc)
        (label_ref 21)) -1
     (nil)
 -> 21)
(barrier 31 30 33)
(code_label 33 31 32 6 124 "" [1 uses])
(note 32 33 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 32 34 6 (set (reg/f:DI 88 [ D.8926 ])
        (const_int 0 [0])) bindtextdom.c:82 -1
     (nil))
(jump_insn 34 5 35 6 (set (pc)
        (label_ref 21)) -1
     (nil)
 -> 21)
(barrier 35 34 37)
(code_label 37 35 36 7 125 "" [1 uses])
(note 36 37 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 36 21 7 (set (reg/f:DI 88 [ D.8926 ])
        (const_int 0 [0])) bindtextdom.c:82 -1
     (nil))
(code_label 21 6 22 8 123 "" [2 uses])
(note 22 21 23 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 27 8 (set (reg:DI 89 [ <retval> ])
        (reg/f:DI 88 [ D.8926 ])) bindtextdom.c:321 -1
     (nil))
(insn 27 23 28 8 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) bindtextdom.c:322 -1
     (nil))
(insn 28 27 0 8 (use (reg/i:DI 0 ax)) bindtextdom.c:322 -1
     (nil))

;; Function __bind_textdomain_codeset (__bind_textdomain_codeset, funcdef_no=43, decl_uid=8448, cgraph_uid=43, symbol_order=50)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Edge 2->5 redirected to 8
Edge 3->5 redirected to 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 24.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 90 [ domainname ])
        (reg:DI 5 di [ domainname ])) bindtextdom.c:328 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 codeset+0 S8 A64])
        (reg:DI 4 si [ codeset ])) bindtextdom.c:328 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ domainname ])
            (const_int 0 [0]))) bindtextdom.c:82 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) bindtextdom.c:82 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 33)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 90 [ domainname ]) [0 *domainname_2(D)+0 S1 A8])
            (const_int 0 [0]))) bindtextdom.c:82 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) bindtextdom.c:82 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 37)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 1 dx)
        (reg:DI 91)) -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 4 si)
        (const_int 0 [0])) -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ domainname ])) -1
     (nil))
(call_insn 19 18 20 5 (call (mem:QI (symbol_ref:DI ("set_binding_values.part.0") [flags 0x3]  <function_decl 0x2b12d4401e58 set_binding_values.part.0>) [0 set_binding_values.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_binding_values.part.0") [flags 0x3]  <function_decl 0x2b12d4401e58 set_binding_values.part.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 20 19 30 5 (set (reg/f:DI 88 [ D.8930 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 codeset+0 S8 A64])) -1
     (nil))
(jump_insn 30 20 31 5 (set (pc)
        (label_ref 21)) -1
     (nil)
 -> 21)
(barrier 31 30 33)
(code_label 33 31 32 6 129 "" [1 uses])
(note 32 33 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 32 34 6 (set (reg/f:DI 88 [ D.8930 ])
        (const_int 0 [0])) bindtextdom.c:82 -1
     (nil))
(jump_insn 34 5 35 6 (set (pc)
        (label_ref 21)) -1
     (nil)
 -> 21)
(barrier 35 34 37)
(code_label 37 35 36 7 130 "" [1 uses])
(note 36 37 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 36 21 7 (set (reg/f:DI 88 [ D.8930 ])
        (const_int 0 [0])) bindtextdom.c:82 -1
     (nil))
(code_label 21 6 22 8 128 "" [2 uses])
(note 22 21 23 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 27 8 (set (reg:DI 89 [ <retval> ])
        (reg/f:DI 88 [ D.8930 ])) bindtextdom.c:330 -1
     (nil))
(insn 27 23 28 8 (set (reg/i:DI 0 ax)
        (reg:DI 89 [ <retval> ])) bindtextdom.c:331 -1
     (nil))
(insn 28 27 0 8 (use (reg/i:DI 0 ax)) bindtextdom.c:331 -1
     (nil))
