
;; Function write_gmon (write_gmon, funcdef_no=52, decl_uid=9913, cgraph_uid=54, symbol_order=62)

Partition 6: size 1024 align 16
	iov	iov	bbbody	buf
Partition 5: size 640 align 16
	raw_arc	bbhead	thdr
Partition 7: size 24 align 16
	arc	tag	ncounts
Partition 0: size 20 align 16
	ghdr
Partition 4: size 1 align 1
	tag	tag

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 10 failed.
Forwarding edge 2->4 to 10 failed.
Edge 5->4 redirected to 10
Edge 8->4 redirected to 10
Forwarding edge 8->9 to 15 failed.
Forwarding edge 8->9 to 15 failed.
Redirecting jump 140 from 44 to 45.
Forwarding edge 21->22 to 32 failed.
Edge 30->22 redirected to 32
Redirecting jump 343 from 44 to 45.
Forwarding edge 42->43 to 33 failed.
deleting block 44


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 10 failed.
Deleted label in block 4.
Forwarding edge 8->9 to 15 failed.
Forwarding edge 21->22 to 32 failed.
Deleted label in block 22.
Forwarding edge 42->43 to 33 failed.


;;
;; Full RTL generated for this function:
;;
(note 25 0 33 NOTE_INSN_DELETED)
(note 33 25 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 26 33 35 2 NOTE_INSN_FUNCTION_BEG)
(insn 35 26 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b30ef3bbc60 *.LC0>)) gmon.c:343 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2b30eeeb4d80 getenv>) [0 getenv S1 A8])
            (const_int 0 [0]))) gmon.c:343 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_getenv") [flags 0x43]  <function_decl 0x2b30eeeb4d80 getenv>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 38 2 (set (reg/v/f:DI 113 [ env ])
        (reg:DI 0 ax)) gmon.c:343 -1
     (nil))
(insn 38 37 39 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 113 [ env ])
            (const_int 0 [0]))) gmon.c:344 -1
     (nil))
(jump_insn 39 38 40 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) gmon.c:344 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 43)
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 41 40 42 4 (set (pc)
        (label_ref 103)) -1
     (nil)
 -> 103)
(barrier 42 41 43)
(code_label 43 42 44 5 2 "" [1 uses])
(note 44 43 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 47 5 (set (reg/f:DI 203)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_enable_secure") [flags 0x40]  <var_decl 0x2b30ef17aea0 __libc_enable_secure>)
                    ] UNSPEC_GOTPCREL)) [12  S8 A8])) gmon.c:344 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (reg/f:DI 203) [7 __libc_enable_secure+0 S4 A32])
            (const_int 0 [0]))) gmon.c:344 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) gmon.c:344 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 103)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:DI 204)
        (reg/f:DI 7 sp)) gmon.c:345 -1
     (nil))
(insn 51 50 52 6 (set (reg/f:DI 115 [ D.10269 ])
        (reg:DI 204)) gmon.c:345 -1
     (nil))
(insn 52 51 53 6 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ env ])) gmon.c:346 -1
     (nil))
(call_insn/i 53 52 54 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b30eed30948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) gmon.c:346 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b30eed30948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 6 (set (reg:DI 206)
        (reg:DI 0 ax)) gmon.c:346 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 207)
        (reg:DI 206)) gmon.c:346 -1
     (nil))
(insn 56 55 57 6 (set (reg/v:DI 116 [ len ])
        (reg:DI 207)) gmon.c:346 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 117 [ D.10270 ])
                (plus:DI (reg/v:DI 116 [ len ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 59 58 60 6 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 117 [ D.10270 ])
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 211)
                (udiv:DI (reg:DI 209)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 212)
                (umod:DI (reg:DI 209)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 213)
                (mult:DI (reg:DI 211)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 63 62 64 6 (set (reg:DI 214)
        (reg/f:DI 83 virtual-stack-dynamic)) gmon.c:347 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 215)
                (plus:DI (reg:DI 214)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:347 -1
     (nil))
(insn 65 64 66 6 (set (reg/f:DI 118 [ buf.5 ])
        (reg/f:DI 215)) gmon.c:347 -1
     (nil))
(call_insn 66 65 67 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___getpid") [flags 0x43]  <function_decl 0x2b30ef2a0288 __getpid>) [0 __getpid S1 A8])
            (const_int 0 [0]))) gmon.c:348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___getpid") [flags 0x43]  <function_decl 0x2b30ef2a0288 __getpid>)
        (nil))
    (nil))
(insn 67 66 68 6 (set (reg:SI 119 [ D.10268 ])
        (reg:SI 0 ax)) gmon.c:348 -1
     (nil))
(insn 68 67 69 6 (set (reg:SI 37 r8)
        (reg:SI 119 [ D.10268 ])) gmon.c:348 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 113 [ env ])) gmon.c:348 -1
     (nil))
(insn 70 69 71 6 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b30ef3bbcf0 *.LC1>)) gmon.c:348 -1
     (nil))
(insn 71 70 72 6 (set (reg:DI 4 si)
        (reg:DI 117 [ D.10270 ])) gmon.c:348 -1
     (nil))
(insn 72 71 73 6 (set (reg:DI 5 di)
        (reg/f:DI 118 [ buf.5 ])) gmon.c:348 -1
     (nil))
(insn 73 72 74 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) gmon.c:348 -1
     (nil))
(call_insn 74 73 75 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__snprintf") [flags 0x41]  <function_decl 0x2b30ef20a000 __snprintf>) [0 __snprintf S1 A8])
            (const_int 0 [0]))) gmon.c:348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__snprintf") [flags 0x41]  <function_decl 0x2b30ef20a000 __snprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 75 74 76 6 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 438 [0x1b6])) gmon.c:349 -1
     (nil))
(insn 76 75 77 6 (set (reg/v:DI 4 si [ _a2 ])
        (const_int 131649 [0x20241])) gmon.c:349 -1
     (nil))
(insn 77 76 78 6 (set (reg/v:DI 5 di [ _a1 ])
        (reg/f:DI 118 [ buf.5 ])) gmon.c:349 -1
     (nil))
(insn 78 77 79 6 (set (reg:SI 217)
        (const_int 2 [0x2])) gmon.c:349 -1
     (nil))
(insn 79 78 80 6 (parallel [
            (set (reg:DI 216 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 217)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:349)
                        (asm_input:DI ("r") gmon.c:349)
                        (asm_input:DI ("r") gmon.c:349)
                        (asm_input:DI ("r") gmon.c:349)
                    ]
                     [] gmon.c:349))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:349 -1
     (nil))
(insn 80 79 81 6 (set (reg/v:DI 121 [ resultvar ])
        (reg:DI 216 [ resultvar ])) gmon.c:349 -1
     (nil))
(insn 81 80 82 6 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 121 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) gmon.c:349 -1
     (nil))
(jump_insn 82 81 83 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) gmon.c:349 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 92)
(note 83 82 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 7 (set (reg:DI 218)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b30ef128ab0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) gmon.c:349 -1
     (nil))
(insn 85 84 86 7 (parallel [
            (set (reg:SI 219)
                (neg:SI (subreg:SI (reg/v:DI 121 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:349 -1
     (nil))
(insn 86 85 87 7 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 218)) [7 __libc_errno+0 S4 A32])
        (reg:SI 219)) gmon.c:349 -1
     (nil))
(insn 87 86 88 7 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 88 87 89 7 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 89 88 90 7 (set (reg/f:DI 7 sp)
        (reg/f:DI 115 [ D.10269 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 90 89 91 7 (set (pc)
        (label_ref 103)) -1
     (nil)
 -> 103)
(barrier 91 90 92)
(code_label 92 91 93 8 5 "" [1 uses])
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (reg/v:SI 112 [ fd ])
        (subreg:SI (reg/v:DI 121 [ resultvar ]) 0)) gmon.c:349 -1
     (nil))
(insn 95 94 96 8 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 96 95 97 8 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 97 96 98 8 (set (reg/f:DI 7 sp)
        (reg/f:DI 115 [ D.10269 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 98 97 99 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 112 [ fd ])
            (const_int -1 [0xffffffffffffffff]))) gmon.c:352 -1
     (nil))
(jump_insn 99 98 102 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) gmon.c:352 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 103)
(note 102 99 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 100 102 101 9 (set (pc)
        (label_ref 142)) -1
     (nil)
 -> 142)
(barrier 101 100 103)
(code_label 103 101 104 10 3 "" [4 uses])
(note 104 103 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 10 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 438 [0x1b6])) gmon.c:354 -1
     (nil))
(insn 106 105 107 10 (set (reg/v:DI 4 si [ _a2 ])
        (const_int 131649 [0x20241])) gmon.c:354 -1
     (nil))
(insn 107 106 108 10 (set (reg/v:DI 5 di [ _a1 ])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b30ef3bbe10 *.LC2>)) gmon.c:354 -1
     (nil))
(insn 108 107 109 10 (set (reg:SI 221)
        (const_int 2 [0x2])) gmon.c:354 -1
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg:DI 220 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 221)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:354)
                        (asm_input:DI ("r") gmon.c:354)
                        (asm_input:DI ("r") gmon.c:354)
                        (asm_input:DI ("r") gmon.c:354)
                    ]
                     [] gmon.c:354))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:354 -1
     (nil))
(insn 110 109 111 10 (set (reg/v:DI 127 [ resultvar ])
        (reg:DI 220 [ resultvar ])) gmon.c:354 -1
     (nil))
(insn 111 110 112 10 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 127 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) gmon.c:354 -1
     (nil))
(jump_insn 112 111 113 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) gmon.c:354 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 119)
(note 113 112 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 11 (parallel [
            (set (reg:SI 130 [ D.10268 ])
                (neg:SI (subreg:SI (reg/v:DI 127 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:354 -1
     (nil))
(insn 115 114 116 11 (set (reg:DI 222)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b30ef128ab0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) gmon.c:354 -1
     (nil))
(insn 116 115 117 11 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 222)) [7 __libc_errno+0 S4 A32])
        (reg:SI 130 [ D.10268 ])) gmon.c:354 -1
     (nil))
(jump_insn 117 116 118 11 (set (pc)
        (label_ref 127)) gmon.c:354 -1
     (nil)
 -> 127)
(barrier 118 117 119)
(code_label 119 118 120 12 7 "" [1 uses])
(note 120 119 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 12 (set (reg/v:SI 112 [ fd ])
        (subreg:SI (reg/v:DI 127 [ resultvar ]) 0)) gmon.c:354 -1
     (nil))
(insn 122 121 123 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 112 [ fd ])
            (const_int 0 [0]))) gmon.c:356 -1
     (nil))
(jump_insn 123 122 124 12 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) gmon.c:356 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 142)
(note 124 123 125 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 13 (set (reg:DI 223)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b30ef128ab0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) -1
     (nil))
(insn 126 125 127 13 (set (reg:SI 130 [ D.10268 ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 223)) [7 __libc_errno+0 S4 A32])) -1
     (nil))
(code_label 127 126 128 14 8 "" [1 uses])
(note 128 127 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 14 (parallel [
            (set (reg:DI 224)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:360 -1
     (nil))
(insn 130 129 131 14 (set (reg:DI 1 dx)
        (const_int 300 [0x12c])) gmon.c:360 -1
     (nil))
(insn 131 130 132 14 (set (reg:DI 4 si)
        (reg:DI 224)) gmon.c:360 -1
     (nil))
(insn 132 131 133 14 (set (reg:SI 5 di)
        (reg:SI 130 [ D.10268 ])) gmon.c:360 -1
     (nil))
(call_insn 133 132 134 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strerror_r") [flags 0x43]  <function_decl 0x2b30eefe6510 __strerror_r>) [0 __strerror_r S1 A8])
            (const_int 0 [0]))) gmon.c:360 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strerror_r") [flags 0x43]  <function_decl 0x2b30eefe6510 __strerror_r>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 134 133 135 14 (set (reg/f:DI 131 [ D.10272 ])
        (reg:DI 0 ax)) gmon.c:360 -1
     (nil))
(insn 135 134 136 14 (set (reg:DI 1 dx)
        (reg/f:DI 131 [ D.10272 ])) gmon.c:360 -1
     (nil))
(insn 136 135 137 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b30ef3bbf30 *.LC3>)) gmon.c:360 -1
     (nil))
(insn 137 136 138 14 (set (reg:DI 5 di)
        (const_int 0 [0])) gmon.c:360 -1
     (nil))
(insn 138 137 139 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) gmon.c:360 -1
     (nil))
(call_insn 139 138 140 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b30ef21b000 __fxprintf>) [0 __fxprintf S1 A8])
            (const_int 0 [0]))) gmon.c:360 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxprintf") [flags 0x41]  <function_decl 0x2b30ef21b000 __fxprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 140 139 141 14 (set (pc)
        (label_ref:DI 418)) 654 {jump}
     (nil)
 -> 418)
(barrier 141 140 142)
(code_label 142 141 143 15 6 "" [2 uses])
(note 143 142 144 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 15 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1728 [0xfffffffffffff940])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:379 -1
     (nil))
(insn 145 144 146 15 (set (mem/c:SI (reg:DI 225) [0 MEM[(void *)&ghdr]+0 S4 A128])
        (const_int 1852796263 [0x6e6f6d67])) gmon.c:379 -1
     (nil))
(insn 146 145 147 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1724 [0xfffffffffffff944])) [7 ghdr.version+0 S4 A32])
        (const_int 1 [0x1])) gmon.c:380 -1
     (nil))
(insn 147 146 148 15 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1728 [0xfffffffffffff940])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:381 -1
     (nil))
(insn 148 147 149 15 (parallel [
            (set (reg:DI 227)
                (plus:DI (reg:DI 226)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:381 -1
     (nil))
(insn 149 148 150 15 (set (mem/c:DI (reg:DI 227) [0 MEM[(void *)&ghdr + 8B]+0 S8 A64])
        (const_int 0 [0])) gmon.c:381 -1
     (nil))
(insn 150 149 151 15 (set (mem/c:SI (plus:DI (reg:DI 227)
                (const_int 8 [0x8])) [0 MEM[(void *)&ghdr + 8B]+8 S4 A64])
        (const_int 0 [0])) gmon.c:381 -1
     (nil))
(insn 151 150 152 15 (set (reg/v:DI 133 [ __arg1 ])
        (sign_extend:DI (reg/v:SI 112 [ fd ]))) gmon.c:382 -1
     (nil))
(insn 152 151 153 15 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 20 [0x14])) gmon.c:382 -1
     (nil))
(insn 153 152 154 15 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1728 [0xfffffffffffff940])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:382 -1
     (nil))
(insn 154 153 155 15 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:382 -1
     (nil))
(insn 155 154 156 15 (set (reg:SI 229)
        (const_int 1 [0x1])) gmon.c:382 -1
     (nil))
(insn 156 155 157 15 (parallel [
            (set (reg:DI 228 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 229)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:382)
                        (asm_input:DI ("r") gmon.c:382)
                        (asm_input:DI ("r") gmon.c:382)
                        (asm_input:DI ("r") gmon.c:382)
                    ]
                     [] gmon.c:382))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:382 -1
     (nil))
(insn 157 156 158 15 (set (reg/v:DI 134 [ resultvar ])
        (reg:DI 228 [ resultvar ])) gmon.c:382 -1
     (nil))
(insn 158 157 159 15 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 134 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) gmon.c:382 -1
     (nil))
(jump_insn 159 158 160 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) gmon.c:382 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 164)
(note 160 159 161 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 16 (set (reg:DI 230)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b30ef128ab0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) gmon.c:382 -1
     (nil))
(insn 162 161 163 16 (parallel [
            (set (reg:SI 231)
                (neg:SI (subreg:SI (reg/v:DI 134 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:382 -1
     (nil))
(insn 163 162 164 16 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 230)) [7 __libc_errno+0 S4 A32])
        (reg:SI 231)) gmon.c:382 -1
     (nil))
(code_label 164 163 165 17 10 "" [1 uses])
(note 165 164 166 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 17 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1696 [0xfffffffffffff960])) [0 tag+0 S1 A128])
        (const_int 0 [0])) gmon.c:177 -1
     (nil))
(insn 167 166 168 17 (set (reg/f:DI 232)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:179 -1
     (nil))
(insn 168 167 169 17 (set (reg:DI 139 [ D.10270 ])
        (mem/c:DI (plus:DI (reg/f:DI 232)
                (const_int 16 [0x10])) [3 _gmonparam.kcountsize+0 S8 A128])) gmon.c:179 -1
     (nil))
(insn 169 168 170 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 139 [ D.10270 ])
            (const_int 0 [0]))) gmon.c:179 -1
     (nil))
(jump_insn 170 169 171 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 207)
            (pc))) gmon.c:179 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 207)
(note 171 170 172 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 18 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1696 [0xfffffffffffff960])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:190 -1
     (nil))
(insn 173 172 174 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1024 [0xfffffffffffffc00])) [2 iov[0].iov_base+0 S8 A128])
        (reg:DI 233)) gmon.c:190 -1
     (nil))
(insn 174 173 175 18 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1016 [0xfffffffffffffc08])) [3 iov[0].iov_len+0 S8 A64])
        (const_int 1 [0x1])) gmon.c:190 -1
     (nil))
(insn 175 174 176 18 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1664 [0xfffffffffffff980])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:190 -1
     (nil))
(insn 176 175 177 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1008 [0xfffffffffffffc10])) [2 iov[1].iov_base+0 S8 A128])
        (reg:DI 234)) gmon.c:190 -1
     (nil))
(insn 177 176 178 18 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1000 [0xfffffffffffffc18])) [3 iov[1].iov_len+0 S8 A64])
        (const_int 40 [0x28])) gmon.c:190 -1
     (nil))
(insn 178 177 179 18 (set (reg/f:DI 235)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:194 -1
     (nil))
(insn 179 178 180 18 (set (reg/f:DI 236)
        (mem/f/c:DI (plus:DI (reg/f:DI 235)
                (const_int 8 [0x8])) [2 _gmonparam.kcount+0 S8 A64])) gmon.c:190 -1
     (nil))
(insn 180 179 181 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [2 iov[2].iov_base+0 S8 A128])
        (reg/f:DI 236)) gmon.c:190 -1
     (nil))
(insn 181 180 182 18 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -984 [0xfffffffffffffc28])) [3 iov[2].iov_len+0 S8 A64])
        (reg:DI 139 [ D.10270 ])) gmon.c:190 -1
     (nil))
(insn 182 181 183 18 (set (reg/f:DI 237)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:212 -1
     (nil))
(insn 183 182 184 18 (set (reg:DI 238)
        (mem/c:DI (plus:DI (reg/f:DI 237)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])) gmon.c:212 -1
     (nil))
(insn 184 183 185 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1664 [0xfffffffffffff980])) [2 thdr.low_pc+0 S8 A128])
        (reg:DI 238)) gmon.c:212 -1
     (nil))
(insn 185 184 186 18 (set (reg/f:DI 239)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:213 -1
     (nil))
(insn 186 185 187 18 (set (reg:DI 240)
        (mem/c:DI (plus:DI (reg/f:DI 239)
                (const_int 72 [0x48])) [3 _gmonparam.highpc+0 S8 A64])) gmon.c:213 -1
     (nil))
(insn 187 186 188 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1656 [0xfffffffffffff988])) [2 thdr.high_pc+0 S8 A64])
        (reg:DI 240)) gmon.c:213 -1
     (nil))
(insn 188 187 189 18 (parallel [
            (set (reg:DI 241 [ D.10270 ])
                (lshiftrt:DI (reg:DI 139 [ D.10270 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:214 -1
     (nil))
(insn 189 188 190 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1648 [0xfffffffffffff990])) [7 thdr.hist_size+0 S4 A128])
        (subreg:SI (reg:DI 241 [ D.10270 ]) 0)) gmon.c:214 -1
     (nil))
(call_insn 190 189 191 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___profile_frequency") [flags 0x43]  <function_decl 0x2b30ef031360 __profile_frequency>) [0 __profile_frequency S1 A8])
            (const_int 0 [0]))) gmon.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___profile_frequency") [flags 0x43]  <function_decl 0x2b30ef031360 __profile_frequency>)
        (nil))
    (nil))
(insn 191 190 192 18 (set (reg:SI 189 [ D.10268 ])
        (reg:SI 0 ax)) gmon.c:215 -1
     (nil))
(insn 192 191 193 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1644 [0xfffffffffffff994])) [7 thdr.prof_rate+0 S4 A32])
        (reg:SI 189 [ D.10268 ])) gmon.c:215 -1
     (nil))
(insn 193 192 194 18 (parallel [
            (set (reg:DI 242)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1664 [0xfffffffffffff980])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:216 -1
     (nil))
(insn 194 193 195 18 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg:DI 242)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:216 -1
     (nil))
(insn 195 194 196 18 (set (reg:DI 244)
        (const_int 32480047799690611 [0x73646e6f636573])) gmon.c:216 -1
     (nil))
(insn 196 195 197 18 (set (mem/c:DI (reg:DI 243) [0 MEM[(void *)&thdr + 24B]+0 S8 A64])
        (reg:DI 244)) gmon.c:216 -1
     (nil))
(insn 197 196 198 18 (set (mem/c:SI (plus:DI (reg:DI 243)
                (const_int 8 [0x8])) [0 MEM[(void *)&thdr + 24B]+8 S4 A64])
        (const_int 0 [0])) gmon.c:216 -1
     (nil))
(insn 198 197 199 18 (set (mem/c:HI (plus:DI (reg:DI 243)
                (const_int 12 [0xc])) [0 MEM[(void *)&thdr + 24B]+12 S2 A32])
        (const_int 0 [0])) gmon.c:216 -1
     (nil))
(insn 199 198 200 18 (set (mem/c:QI (plus:DI (reg:DI 243)
                (const_int 14 [0xe])) [0 MEM[(void *)&thdr + 24B]+14 S1 A16])
        (const_int 0 [0])) gmon.c:216 -1
     (nil))
(insn 200 199 201 18 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1625 [0xfffffffffffff9a7])) [0 thdr.dimen_abbrev+0 S1 A8])
        (const_int 115 [0x73])) gmon.c:217 -1
     (nil))
(insn 201 200 202 18 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 3 [0x3])) gmon.c:219 -1
     (nil))
(insn 202 201 203 18 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:219 -1
     (nil))
(insn 203 202 204 18 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:219 -1
     (nil))
(insn 204 203 205 18 (set (reg:SI 246)
        (const_int 20 [0x14])) gmon.c:219 -1
     (nil))
(insn 205 204 206 18 (parallel [
            (set (reg:DI 245 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 246)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:219)
                        (asm_input:DI ("r") gmon.c:219)
                        (asm_input:DI ("r") gmon.c:219)
                        (asm_input:DI ("r") gmon.c:219)
                    ]
                     [] gmon.c:219))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:219 -1
     (nil))
(insn 206 205 207 18 (set (reg/v:DI 191 [ resultvar ])
        (reg:DI 245 [ resultvar ])) gmon.c:219 -1
     (nil))
(code_label 207 206 208 19 11 "" [1 uses])
(note 208 207 209 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 19 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1729 [0xfffffffffffff93f])) [0 tag+0 S1 A8])
        (const_int 1 [0x1])) gmon.c:229 -1
     (nil))
(insn 210 209 211 19 (parallel [
            (set (reg:DI 194 [ ivtmp.40 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 211 210 212 19 (parallel [
            (set (reg:DI 192 [ ivtmp.43 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1664 [0xfffffffffffff980])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 212 211 213 19 (parallel [
            (set (reg:DI 247)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 213 212 223 19 (parallel [
            (set (reg:DI 163 [ D.10276 ])
                (plus:DI (reg:DI 247)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 223 213 214 20 12 "" [1 uses])
(note 214 223 215 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 20 (set (reg/f:DI 176 [ D.10269 ])
        (reg:DI 194 [ ivtmp.40 ])) -1
     (nil))
(insn 216 215 217 20 (parallel [
            (set (reg:DI 248)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1729 [0xfffffffffffff93f])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:240 -1
     (nil))
(insn 217 216 218 20 (set (mem/f:DI (reg/f:DI 176 [ D.10269 ]) [2 MEM[base: _145, offset: 0B]+0 S8 A64])
        (reg:DI 248)) gmon.c:240 -1
     (nil))
(insn 218 217 219 20 (set (mem:DI (plus:DI (reg/f:DI 176 [ D.10269 ])
                (const_int 8 [0x8])) [3 MEM[base: _145, offset: 8B]+0 S8 A64])
        (const_int 1 [0x1])) gmon.c:241 -1
     (nil))
(insn 219 218 220 20 (set (mem/f:DI (plus:DI (reg/f:DI 176 [ D.10269 ])
                (const_int 16 [0x10])) [2 MEM[base: _145, offset: 16B]+0 S8 A64])
        (reg:DI 192 [ ivtmp.43 ])) gmon.c:243 -1
     (nil))
(insn 220 219 221 20 (set (mem:DI (plus:DI (reg/f:DI 176 [ D.10269 ])
                (const_int 24 [0x18])) [3 MEM[base: _145, offset: 24B]+0 S8 A64])
        (const_int 20 [0x14])) gmon.c:244 -1
     (nil))
(insn 221 220 222 20 (parallel [
            (set (reg:DI 194 [ ivtmp.40 ])
                (plus:DI (reg:DI 194 [ ivtmp.40 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 222 221 224 20 (parallel [
            (set (reg:DI 192 [ ivtmp.43 ])
                (plus:DI (reg:DI 192 [ ivtmp.43 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 224 222 225 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 163 [ D.10276 ])
            (reg:DI 194 [ ivtmp.40 ]))) gmon.c:238 -1
     (nil))
(jump_insn 225 224 226 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) gmon.c:238 -1
     (int_list:REG_BR_PROB 9688 (nil))
 -> 223)
(note 226 225 227 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 21 (set (reg/f:DI 249)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:248 -1
     (nil))
(insn 228 227 229 21 (set (reg:DI 250)
        (mem/c:DI (plus:DI (reg/f:DI 249)
                (const_int 32 [0x20])) [3 _gmonparam.fromssize+0 S8 A256])) gmon.c:248 -1
     (nil))
(insn 229 228 230 21 (parallel [
            (set (reg/v:DI 158 [ from_len ])
                (lshiftrt:DI (reg:DI 250)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:248 -1
     (expr_list:REG_EQUAL (lshiftrt:DI (mem/c:DI (plus:DI (reg/f:DI 249)
                    (const_int 32 [0x20])) [3 _gmonparam.fromssize+0 S8 A256])
            (const_int 3 [0x3]))
        (nil)))
(insn 230 229 231 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 158 [ from_len ])
            (const_int 0 [0]))) gmon.c:249 -1
     (nil))
(jump_insn 231 230 232 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) gmon.c:249 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 235)
(note 232 231 233 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 233 232 234 22 (set (pc)
        (label_ref 318)) gmon.c:249 -1
     (nil)
 -> 318)
(barrier 234 233 235)
(code_label 235 234 236 23 13 "" [1 uses])
(note 236 235 27 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 27 236 28 23 (set (reg/v:SI 143 [ nfilled ])
        (const_int 0 [0])) gmon.c:249 -1
     (nil))
(insn 28 27 303 23 (set (reg/v:DI 122 [ from_index ])
        (const_int 0 [0])) gmon.c:249 -1
     (nil))
(code_label 303 28 237 24 18 "" [1 uses])
(note 237 303 238 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 24 (set (reg/f:DI 251)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:251 -1
     (nil))
(insn 239 238 240 24 (set (reg/f:DI 252)
        (mem/f/c:DI (plus:DI (reg/f:DI 251)
                (const_int 24 [0x18])) [2 _gmonparam.froms+0 S8 A64])) gmon.c:251 -1
     (nil))
(insn 240 239 241 24 (set (reg/v:DI 135 [ to_index ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 122 [ from_index ])
                    (const_int 8 [0x8]))
                (reg/f:DI 252)) [3 *_121+0 S8 A64])) gmon.c:251 -1
     (nil))
(insn 241 240 242 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 135 [ to_index ])
            (const_int 0 [0]))) gmon.c:251 -1
     (nil))
(jump_insn 242 241 243 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 300)
            (pc))) gmon.c:251 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 300)
(note 243 242 244 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 25 (set (reg/f:DI 253)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:254 -1
     (nil))
(insn 245 244 246 25 (set (reg/v:DI 161 [ frompc ])
        (mem/c:DI (plus:DI (reg/f:DI 253)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])) gmon.c:254 -1
     (nil))
(insn 246 245 247 25 (set (reg/f:DI 254)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:255 -1
     (nil))
(insn 247 246 248 25 (set (reg:DI 256)
        (mem/c:DI (plus:DI (reg/f:DI 254)
                (const_int 88 [0x58])) [3 _gmonparam.hashfraction+0 S8 A64])) -1
     (nil))
(insn 248 247 249 25 (parallel [
            (set (reg:DI 255 [ D.10270 ])
                (ashift:DI (reg:DI 256)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (plus:DI (reg/f:DI 254)
                    (const_int 88 [0x58])) [3 _gmonparam.hashfraction+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 249 248 250 25 (parallel [
            (set (reg:DI 257 [ D.10270 ])
                (mult:DI (reg:DI 255 [ D.10270 ])
                    (reg/v:DI 122 [ from_index ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 250 249 251 25 (parallel [
            (set (reg/f:DI 201 [ D.10272 ])
                (plus:DI (reg:DI 257 [ D.10270 ])
                    (reg/v:DI 161 [ frompc ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 251 250 252 25 (set (reg/f:DI 258)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) -1
     (nil))
(insn 252 251 297 25 (set (reg/f:DI 202 [ D.10277 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 258)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])) -1
     (nil))
(code_label 297 252 253 26 17 "" [1 uses])
(note 253 297 254 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1696 [0xfffffffffffff960])) [2 arc.frompc+0 S8 A128])
        (reg/f:DI 201 [ D.10272 ])) gmon.c:269 -1
     (nil))
(insn 255 254 256 26 (set (reg:DI 259)
        (reg/v:DI 135 [ to_index ])) gmon.c:270 -1
     (nil))
(insn 256 255 257 26 (parallel [
            (set (reg:DI 260)
                (ashift:DI (reg:DI 259)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:270 -1
     (nil))
(insn 257 256 258 26 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg:DI 260)
                    (reg/v:DI 135 [ to_index ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:270 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 135 [ to_index ])
            (const_int 3 [0x3]))
        (nil)))
(insn 258 257 259 26 (parallel [
            (set (reg:DI 262)
                (ashift:DI (reg:DI 261)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:270 -1
     (nil))
(insn 259 258 260 26 (set (reg:DI 261)
        (reg:DI 262)) gmon.c:270 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 135 [ to_index ])
            (const_int 24 [0x18]))
        (nil)))
(insn 260 259 261 26 (set (reg:DI 166 [ D.10270 ])
        (reg:DI 261)) gmon.c:270 -1
     (nil))
(insn 261 260 262 26 (parallel [
            (set (reg/f:DI 167 [ D.10277 ])
                (plus:DI (reg/f:DI 202 [ D.10277 ])
                    (reg:DI 166 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:270 -1
     (nil))
(insn 262 261 263 26 (set (reg:DI 263)
        (mem:DI (reg/f:DI 167 [ D.10277 ]) [3 _132->selfpc+0 S8 A64])) gmon.c:270 -1
     (nil))
(insn 263 262 264 26 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1688 [0xfffffffffffff968])) [2 arc.selfpc+0 S8 A64])
        (reg:DI 263)) gmon.c:270 -1
     (nil))
(insn 264 263 265 26 (set (reg:DI 264)
        (mem:DI (plus:DI (reg/f:DI 167 [ D.10277 ])
                (const_int 8 [0x8])) [3 _132->count+0 S8 A64])) gmon.c:271 -1
     (nil))
(insn 265 264 266 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1680 [0xfffffffffffff970])) [7 arc.count+0 S4 A128])
        (subreg:SI (reg:DI 264) 0)) gmon.c:271 -1
     (nil))
(insn 266 265 267 26 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1664 [0xfffffffffffff980])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (nil))
(insn 267 266 268 26 (set (reg:DI 266 [ D.10270 ])
        (sign_extend:DI (reg/v:SI 143 [ nfilled ]))) gmon.c:272 -1
     (nil))
(insn 268 267 269 26 (set (reg:DI 267)
        (reg:DI 266 [ D.10270 ])) gmon.c:272 -1
     (nil))
(insn 269 268 270 26 (parallel [
            (set (reg:DI 268)
                (ashift:DI (reg:DI 267)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (nil))
(insn 270 269 271 26 (parallel [
            (set (reg:DI 269 [ D.10270 ])
                (plus:DI (reg:DI 268)
                    (reg:DI 266 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 266 [ D.10270 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 271 270 272 26 (parallel [
            (set (reg:DI 270)
                (ashift:DI (reg:DI 269 [ D.10270 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (nil))
(insn 272 271 273 26 (set (reg:DI 269 [ D.10270 ])
        (reg:DI 270)) gmon.c:272 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 266 [ D.10270 ])
            (const_int 20 [0x14]))
        (nil)))
(insn 273 272 274 26 (parallel [
            (set (reg:DI 271 [ D.10274 ])
                (plus:DI (reg:DI 265)
                    (reg:DI 269 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (nil))
(insn 274 273 275 26 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1696 [0xfffffffffffff960])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:272 -1
     (nil))
(insn 275 274 276 26 (set (reg:DI 273)
        (mem/c:DI (reg:DI 272) [0 MEM[(void *)&arc]+0 S8 A128])) gmon.c:272 -1
     (nil))
(insn 276 275 277 26 (set (mem:DI (reg:DI 271 [ D.10274 ]) [0 MEM[(void *)_140]+0 S8 A32])
        (reg:DI 273)) gmon.c:272 -1
     (nil))
(insn 277 276 278 26 (set (reg:DI 274)
        (mem/c:DI (plus:DI (reg:DI 272)
                (const_int 8 [0x8])) [0 MEM[(void *)&arc]+8 S8 A64])) gmon.c:272 -1
     (nil))
(insn 278 277 279 26 (set (mem:DI (plus:DI (reg:DI 271 [ D.10274 ])
                (const_int 8 [0x8])) [0 MEM[(void *)_140]+8 S8 A32])
        (reg:DI 274)) gmon.c:272 -1
     (nil))
(insn 279 278 280 26 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg:DI 272)
                (const_int 16 [0x10])) [0 MEM[(void *)&arc]+16 S4 A128])) gmon.c:272 -1
     (nil))
(insn 280 279 281 26 (set (mem:SI (plus:DI (reg:DI 271 [ D.10274 ])
                (const_int 16 [0x10])) [0 MEM[(void *)_140]+16 S4 A32])
        (reg:SI 275)) gmon.c:272 -1
     (nil))
(insn 281 280 282 26 (parallel [
            (set (reg/v:SI 143 [ nfilled ])
                (plus:SI (reg/v:SI 143 [ nfilled ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:274 -1
     (nil))
(insn 282 281 283 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 143 [ nfilled ])
            (const_int 32 [0x20]))) gmon.c:274 -1
     (nil))
(jump_insn 283 282 284 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) gmon.c:274 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 294)
(note 284 283 285 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 27 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 64 [0x40])) gmon.c:276 -1
     (nil))
(insn 286 285 287 27 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:276 -1
     (nil))
(insn 287 286 288 27 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:276 -1
     (nil))
(insn 288 287 289 27 (set (reg:SI 277)
        (const_int 20 [0x14])) gmon.c:276 -1
     (nil))
(insn 289 288 290 27 (parallel [
            (set (reg:DI 276 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 277)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:276)
                        (asm_input:DI ("r") gmon.c:276)
                        (asm_input:DI ("r") gmon.c:276)
                        (asm_input:DI ("r") gmon.c:276)
                    ]
                     [] gmon.c:276))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:276 -1
     (nil))
(insn 290 289 291 27 (set (reg/v:DI 177 [ resultvar ])
        (reg:DI 276 [ resultvar ])) gmon.c:276 -1
     (nil))
(insn 291 290 292 27 (set (reg/f:DI 278)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) -1
     (nil))
(insn 292 291 293 27 (set (reg/f:DI 202 [ D.10277 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 278)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])) -1
     (nil))
(insn 293 292 29 27 (parallel [
            (set (reg/f:DI 167 [ D.10277 ])
                (plus:DI (reg/f:DI 202 [ D.10277 ])
                    (reg:DI 166 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 29 293 294 27 (set (reg/v:SI 143 [ nfilled ])
        (const_int 0 [0])) gmon.c:277 -1
     (nil))
(code_label 294 29 295 28 16 "" [1 uses])
(note 295 294 296 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 298 28 (set (reg/v:DI 135 [ to_index ])
        (mem:DI (plus:DI (reg/f:DI 167 [ D.10277 ])
                (const_int 16 [0x10])) [3 _295->link+0 S8 A64])) gmon.c:259 -1
     (nil))
(insn 298 296 299 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 135 [ to_index ])
            (const_int 0 [0]))) gmon.c:257 -1
     (nil))
(jump_insn 299 298 300 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) gmon.c:257 -1
     (int_list:REG_BR_PROB 9011 (nil))
 -> 297)
(code_label 300 299 301 29 15 "" [1 uses])
(note 301 300 302 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 304 29 (parallel [
            (set (reg/v:DI 122 [ from_index ])
                (plus:DI (reg/v:DI 122 [ from_index ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:249 -1
     (nil))
(insn 304 302 305 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 158 [ from_len ])
            (reg/v:DI 122 [ from_index ]))) gmon.c:249 -1
     (nil))
(jump_insn 305 304 306 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) gmon.c:249 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 303)
(note 306 305 308 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 308 306 309 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 143 [ nfilled ])
            (const_int 0 [0]))) gmon.c:281 -1
     (nil))
(jump_insn 309 308 310 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 318)
            (pc))) gmon.c:281 612 {*jcc_1}
     (int_list:REG_BR_PROB 1112 (nil))
 -> 318)
(note 310 309 311 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 31 (parallel [
            (set (reg:SI 279 [ D.10268 ])
                (ashift:SI (reg/v:SI 143 [ nfilled ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:282 -1
     (nil))
(insn 312 311 313 31 (set (reg/v:DI 1 dx [ _a3 ])
        (sign_extend:DI (reg:SI 279 [ D.10268 ]))) gmon.c:282 -1
     (nil))
(insn 313 312 314 31 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:282 -1
     (nil))
(insn 314 313 315 31 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:282 -1
     (nil))
(insn 315 314 316 31 (set (reg:SI 281)
        (const_int 20 [0x14])) gmon.c:282 -1
     (nil))
(insn 316 315 317 31 (parallel [
            (set (reg:DI 280 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 281)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:282)
                        (asm_input:DI ("r") gmon.c:282)
                        (asm_input:DI ("r") gmon.c:282)
                        (asm_input:DI ("r") gmon.c:282)
                    ]
                     [] gmon.c:282))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:282 -1
     (nil))
(insn 317 316 318 31 (set (reg/v:DI 181 [ resultvar ])
        (reg:DI 280 [ resultvar ])) gmon.c:282 -1
     (nil))
(code_label 318 317 319 32 14 "" [2 uses])
(note 319 318 320 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 32 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1729 [0xfffffffffffff93f])) [0 tag+0 S1 A8])
        (const_int 2 [0x2])) gmon.c:291 -1
     (nil))
(insn 321 320 322 32 (parallel [
            (set (reg:DI 282)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1729 [0xfffffffffffff93f])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:295 -1
     (nil))
(insn 322 321 323 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1664 [0xfffffffffffff980])) [2 bbhead[0].iov_base+0 S8 A128])
        (reg:DI 282)) gmon.c:295 -1
     (nil))
(insn 323 322 324 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1656 [0xfffffffffffff988])) [3 bbhead[0].iov_len+0 S8 A64])
        (const_int 1 [0x1])) gmon.c:295 -1
     (nil))
(insn 324 323 325 32 (parallel [
            (set (reg:DI 283)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1696 [0xfffffffffffff960])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:295 -1
     (nil))
(insn 325 324 326 32 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1648 [0xfffffffffffff990])) [2 bbhead[1].iov_base+0 S8 A128])
        (reg:DI 283)) gmon.c:295 -1
     (nil))
(insn 326 325 327 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1640 [0xfffffffffffff998])) [3 bbhead[1].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:295 -1
     (nil))
(insn 327 326 328 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1016 [0xfffffffffffffc08])) [3 bbbody[0].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:305 -1
     (nil))
(insn 328 327 329 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1000 [0xfffffffffffffc18])) [3 bbbody[1].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:306 -1
     (nil))
(insn 329 328 330 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -984 [0xfffffffffffffc28])) [3 bbbody[2].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:305 -1
     (nil))
(insn 330 329 331 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 bbbody[3].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:306 -1
     (nil))
(insn 331 330 332 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -952 [0xfffffffffffffc48])) [3 bbbody[4].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:305 -1
     (nil))
(insn 332 331 333 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -936 [0xfffffffffffffc58])) [3 bbbody[5].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:306 -1
     (nil))
(insn 333 332 334 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -920 [0xfffffffffffffc68])) [3 bbbody[6].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:305 -1
     (nil))
(insn 334 333 335 32 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -904 [0xfffffffffffffc78])) [3 bbbody[7].iov_len+0 S8 A64])
        (const_int 8 [0x8])) gmon.c:306 -1
     (nil))
(insn 335 334 336 32 (set (reg/v/f:DI 111 [ grp ])
        (mem/f/c:DI (symbol_ref:DI ("__bb_head") [flags 0x2]  <var_decl 0x2b30eee15e10 __bb_head>) [2 __bb_head+0 S8 A64])) gmon.c:312 -1
     (nil))
(insn 336 335 337 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 111 [ grp ])
            (const_int 0 [0]))) gmon.c:312 -1
     (nil))
(jump_insn 337 336 412 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) gmon.c:312 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 345)
(code_label 412 337 338 33 26 "" [1 uses])
(note 338 412 339 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 33 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:393 -1
     (nil))
(insn 340 339 341 33 (set (reg:SI 285)
        (const_int 3 [0x3])) gmon.c:393 -1
     (nil))
(insn 341 340 342 33 (parallel [
            (set (reg:DI 284 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 285)
                        (reg/v:DI 5 di [ _a1 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:393)
                        (asm_input:DI ("r") gmon.c:393)
                    ]
                     [] gmon.c:393))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:393 -1
     (nil))
(insn 342 341 343 33 (set (reg/v:DI 140 [ resultvar ])
        (reg:DI 284 [ resultvar ])) gmon.c:393 -1
     (nil))
(jump_insn 343 342 344 33 (set (pc)
        (label_ref:DI 418)) 654 {jump}
     (nil)
 -> 418)
(barrier 344 343 345)
(code_label 345 344 346 34 20 "" [1 uses])
(note 346 345 347 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 409 34 (parallel [
            (set (reg:DI 196 [ D.10273 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1664 [0xfffffffffffff980])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 409 347 348 35 25 "" [1 uses])
(note 348 409 349 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 35 (set (reg:DI 286)
        (mem:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 24 [0x18])) [3 grp_1->ncounts+0 S8 A64])) gmon.c:314 -1
     (nil))
(insn 350 349 351 35 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1696 [0xfffffffffffff960])) [3 ncounts+0 S8 A128])
        (reg:DI 286)) gmon.c:314 -1
     (nil))
(insn 351 350 352 35 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 2 [0x2])) gmon.c:315 -1
     (nil))
(insn 352 351 353 35 (set (reg/v:DI 4 si [ _a2 ])
        (reg:DI 196 [ D.10273 ])) gmon.c:315 -1
     (nil))
(insn 353 352 354 35 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:315 -1
     (nil))
(insn 354 353 355 35 (set (reg:SI 288)
        (const_int 20 [0x14])) gmon.c:315 -1
     (nil))
(insn 355 354 356 35 (parallel [
            (set (reg:DI 287 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 288)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:315)
                        (asm_input:DI ("r") gmon.c:315)
                        (asm_input:DI ("r") gmon.c:315)
                        (asm_input:DI ("r") gmon.c:315)
                    ]
                     [] gmon.c:315))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:315 -1
     (nil))
(insn 356 355 357 35 (set (reg/v:DI 144 [ resultvar ])
        (reg:DI 287 [ resultvar ])) gmon.c:315 -1
     (nil))
(insn 357 356 358 35 (set (reg:DI 197 [ D.10270 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1696 [0xfffffffffffff960])) [3 ncounts+0 S8 A128])) gmon.c:316 -1
     (nil))
(insn 358 357 359 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 197 [ D.10270 ])
            (const_int 0 [0]))) gmon.c:316 -1
     (nil))
(jump_insn 359 358 360 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 406)
            (pc))) gmon.c:316 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 406)
(note 360 359 361 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 36 (set (reg/f:DI 198 [ D.10279 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 40 [0x28])) [2 grp_1->addresses+0 S8 A64])) -1
     (nil))
(insn 362 361 31 36 (set (reg/f:DI 200 [ D.10280 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 16 [0x10])) [2 grp_1->counts+0 S8 A64])) -1
     (nil))
(insn 31 362 32 36 (set (reg/v:DI 152 [ nfilled ])
        (const_int 0 [0])) gmon.c:316 -1
     (nil))
(insn 32 31 363 36 (set (reg/v:DI 148 [ nfilled ])
        (const_int 0 [0])) gmon.c:316 -1
     (nil))
(jump_insn 363 32 364 36 (set (pc)
        (label_ref 380)) -1
     (nil)
 -> 380)
(barrier 364 363 396)
(code_label 396 364 365 37 24 "" [1 uses])
(note 365 396 366 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 37 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 148 [ nfilled ])
            (const_int 6 [0x6]))) gmon.c:318 -1
     (nil))
(jump_insn 367 366 368 37 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) gmon.c:318 -1
     (int_list:REG_BR_PROB 4505 (nil))
 -> 378)
(note 368 367 369 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 38 (set (reg/v:DI 1 dx [ _a3 ])
        (reg/v:DI 148 [ nfilled ])) gmon.c:320 -1
     (nil))
(insn 370 369 371 38 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:320 -1
     (nil))
(insn 371 370 372 38 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:320 -1
     (nil))
(insn 372 371 373 38 (set (reg:SI 290)
        (const_int 20 [0x14])) gmon.c:320 -1
     (nil))
(insn 373 372 374 38 (parallel [
            (set (reg:DI 289 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 290)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:320)
                        (asm_input:DI ("r") gmon.c:320)
                        (asm_input:DI ("r") gmon.c:320)
                        (asm_input:DI ("r") gmon.c:320)
                    ]
                     [] gmon.c:320))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:320 -1
     (nil))
(insn 374 373 375 38 (set (reg/v:DI 147 [ resultvar ])
        (reg:DI 289 [ resultvar ])) gmon.c:320 -1
     (nil))
(insn 375 374 376 38 (set (reg/f:DI 198 [ D.10279 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 40 [0x28])) [2 grp_1->addresses+0 S8 A64])) -1
     (nil))
(insn 376 375 377 38 (set (reg/f:DI 200 [ D.10280 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 16 [0x10])) [2 grp_1->counts+0 S8 A64])) -1
     (nil))
(insn 377 376 30 38 (set (reg:DI 197 [ D.10270 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1696 [0xfffffffffffff960])) [3 ncounts+0 S8 A128])) -1
     (nil))
(insn 30 377 378 38 (set (reg/v:DI 148 [ nfilled ])
        (const_int 0 [0])) gmon.c:321 -1
     (nil))
(code_label 378 30 379 39 23 "" [1 uses])
(note 379 378 380 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(code_label 380 379 381 40 22 "" [1 uses])
(note 381 380 382 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 40 (parallel [
            (set (reg/v:DI 149 [ nfilled ])
                (plus:DI (reg/v:DI 148 [ nfilled ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:324 -1
     (nil))
(insn 383 382 384 40 (parallel [
            (set (reg:DI 199 [ D.10270 ])
                (ashift:DI (reg/v:DI 152 [ nfilled ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 384 383 385 40 (parallel [
            (set (reg:DI 291)
                (ashift:DI (reg/v:DI 148 [ nfilled ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:324 -1
     (nil))
(insn 385 384 386 40 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 291)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:324 -1
     (nil))
(insn 386 385 387 40 (parallel [
            (set (reg/f:DI 293)
                (plus:DI (reg:DI 292)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:324 -1
     (nil))
(insn 387 386 388 40 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 198 [ D.10279 ])
                    (reg:DI 199 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:324 -1
     (nil))
(insn 388 387 389 40 (set (mem/f:DI (reg/f:DI 293) [2 bbbody[nfilled_97].iov_base+0 S8 A128])
        (reg:DI 294)) gmon.c:324 -1
     (nil))
(insn 389 388 390 40 (parallel [
            (set (reg/v:DI 148 [ nfilled ])
                (plus:DI (reg/v:DI 148 [ nfilled ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:325 -1
     (nil))
(insn 390 389 391 40 (parallel [
            (set (reg:DI 295)
                (ashift:DI (reg/v:DI 149 [ nfilled ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:325 -1
     (nil))
(insn 391 390 392 40 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (reg:DI 295)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:325 -1
     (nil))
(insn 392 391 393 40 (parallel [
            (set (reg/f:DI 297)
                (plus:DI (reg:DI 296)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:325 -1
     (nil))
(insn 393 392 394 40 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg/f:DI 200 [ D.10280 ])
                    (reg:DI 199 [ D.10270 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:325 -1
     (nil))
(insn 394 393 395 40 (set (mem/f:DI (reg/f:DI 297) [2 bbbody[nfilled_98].iov_base+0 S8 A128])
        (reg:DI 298)) gmon.c:325 -1
     (nil))
(insn 395 394 397 40 (parallel [
            (set (reg/v:DI 152 [ nfilled ])
                (plus:DI (reg/v:DI 152 [ nfilled ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:316 -1
     (nil))
(insn 397 395 398 40 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 152 [ nfilled ])
            (reg:DI 197 [ D.10270 ]))) gmon.c:316 -1
     (nil))
(jump_insn 398 397 399 40 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 396)
            (pc))) gmon.c:316 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 396)
(note 399 398 400 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 41 (set (reg/v:DI 1 dx [ _a3 ])
        (reg/v:DI 148 [ nfilled ])) gmon.c:328 -1
     (nil))
(insn 401 400 402 41 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:328 -1
     (nil))
(insn 402 401 403 41 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v:DI 133 [ __arg1 ])) gmon.c:328 -1
     (nil))
(insn 403 402 404 41 (set (reg:SI 300)
        (const_int 20 [0x14])) gmon.c:328 -1
     (nil))
(insn 404 403 405 41 (parallel [
            (set (reg:DI 299 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 300)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:328)
                        (asm_input:DI ("r") gmon.c:328)
                        (asm_input:DI ("r") gmon.c:328)
                        (asm_input:DI ("r") gmon.c:328)
                    ]
                     [] gmon.c:328))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:328 -1
     (nil))
(insn 405 404 406 41 (set (reg/v:DI 155 [ resultvar ])
        (reg:DI 299 [ resultvar ])) gmon.c:328 -1
     (nil))
(code_label 406 405 407 42 21 "" [1 uses])
(note 407 406 408 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 410 42 (set (reg/v/f:DI 111 [ grp ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ grp ])
                (const_int 32 [0x20])) [2 grp_1->next+0 S8 A64])) gmon.c:312 -1
     (nil))
(insn 410 408 411 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 111 [ grp ])
            (const_int 0 [0]))) gmon.c:312 -1
     (nil))
(jump_insn 411 410 415 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) gmon.c:312 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 409)
(note 415 411 413 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn 413 415 414 43 (set (pc)
        (label_ref 412)) gmon.c:312 -1
     (nil)
 -> 412)
(barrier 414 413 418)
(code_label 418 414 419 45 1 "" [2 uses])
(note 419 418 0 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

;; Function __moncontrol (__moncontrol, funcdef_no=47, decl_uid=9770, cgraph_uid=47, symbol_order=55)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->7 redirected to 8
Redirecting jump 27 from 7 to 8.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 93 [ mode ])
        (reg:SI 5 di [ mode ])) gmon.c:76 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 94)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:80 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (reg/f:DI 94) [3 _gmonparam.state+0 S8 A256])
            (const_int 2 [0x2]))) gmon.c:80 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 40)
            (pc))) gmon.c:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 40)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ mode ])
            (const_int 0 [0]))) gmon.c:83 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) gmon.c:83 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 29)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:SI 95)
        (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b30ef2b22d0 s_scale>) [7 s_scale+0 S4 A32])) gmon.c:86 -1
     (nil))
(insn 14 13 15 5 (set (reg/f:DI 96)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 97)
        (mem/c:DI (plus:DI (reg/f:DI 96)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])) gmon.c:86 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:DI 98)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 99)
        (mem/c:DI (plus:DI (reg/f:DI 98)
                (const_int 16 [0x10])) [3 _gmonparam.kcountsize+0 S8 A128])) gmon.c:86 -1
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 100)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 100)
                (const_int 8 [0x8])) [2 _gmonparam.kcount+0 S8 A64])) gmon.c:86 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 2 cx)
        (reg:SI 95)) gmon.c:86 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 1 dx)
        (reg:DI 97)) gmon.c:86 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg:DI 99)) gmon.c:86 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg:DI 101)) gmon.c:86 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b30ef2ab000 __profil>) [0 __profil S1 A8])
            (const_int 0 [0]))) gmon.c:86 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b30ef2ab000 __profil>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 25 24 26 5 (set (reg/f:DI 102)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:87 -1
     (nil))
(insn 26 25 27 5 (set (mem/c:DI (reg/f:DI 102) [3 _gmonparam.state+0 S8 A256])
        (const_int 0 [0])) gmon.c:87 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref:DI 40)) gmon.c:87 654 {jump}
     (nil)
 -> 40)
(barrier 28 27 29)
(code_label 29 28 30 6 55 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 2 cx)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 4 si)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b30ef2ab000 __profil>) [0 __profil S1 A8])
            (const_int 0 [0]))) gmon.c:92 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b30ef2ab000 __profil>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 36 35 37 6 (set (reg/f:DI 103)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:93 -1
     (nil))
(insn 37 36 40 6 (set (mem/c:DI (reg/f:DI 103) [3 _gmonparam.state+0 S8 A256])
        (const_int 3 [0x3])) gmon.c:93 -1
     (nil))
(code_label 40 37 41 8 53 "" [2 uses])
(note 41 40 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

;; Function __moncontrol.part.0 (__moncontrol.part.0, funcdef_no=55, decl_uid=9861, cgraph_uid=0, symbol_order=81)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 92)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 93)
        (mem/c:DI (plus:DI (reg/f:DI 92)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])) gmon.c:86 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 94)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 95)
        (mem/c:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [3 _gmonparam.kcountsize+0 S8 A128])) gmon.c:86 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 96)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:86 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 96)
                (const_int 8 [0x8])) [2 _gmonparam.kcount+0 S8 A64])) gmon.c:86 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 cx)
        (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b254772c240 s_scale>) [7 s_scale+0 S4 A32])) gmon.c:86 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (reg:DI 93)) gmon.c:86 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg:DI 95)) gmon.c:86 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 97)) gmon.c:86 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b2547724948 __profil>) [0 __profil S1 A8])
            (const_int 0 [0]))) gmon.c:86 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b2547724948 __profil>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 16 15 17 2 (set (reg/f:DI 98)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:87 -1
     (nil))
(insn 17 16 0 2 (set (mem/c:DI (reg/f:DI 98) [3 _gmonparam.state+0 S8 A256])
        (const_int 0 [0])) gmon.c:87 -1
     (nil))

;; Function __moncontrol (__moncontrol, funcdef_no=47, decl_uid=9459, cgraph_uid=47, symbol_order=52)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->7 redirected to 8
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 88 [ mode ])
        (reg:SI 5 di [ mode ])) gmon.c:76 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 89)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:80 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (reg/f:DI 89) [3 _gmonparam.state
;; Function __monstartup (__monstartup, funcdef_no=48, decl_uid=2678, cgraph_uid=49, symbol_order=57)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Predictions for insn 118 bb 12
  DS theory heuristics: 21.0%
  first match heuristics (ignored): 21.0%
  combined heuristics: 21.0%
  opcode values positive heuristics: 21.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 99 from 19 to 20.
deleting block 19


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:DI 121 [ lowpc+0 S8 A256])
            (const_int 2 [0x2]))) gmon.c:80 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 26)
            (pc))) gmon.c:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 26)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ mode ])
        (reg:DI 5 di [ lowpc ])) gmon.c:101 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 122 [ highpc ])
        (reg:DI 4 si [ highpc ])
            (const_int 0 [0]))) gmon.c:83 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) gmon.c:83 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 15)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn/j 13 12 14 5 (call (mem:QI (symbol_ref:DI ("__moncontrol.part.0") [flags 0x3]  <function_decl 0x2b25477c91b0 __moncontrol.part.0>) [0 __moncontrol.part.0 ])) gmon.c:101 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (parallel [
            (set (reg:DI 123 [ D.10311 ])
                (lshiftrt:DI (reg/v:DI 121 [ lowpc ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:110 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 88 [ D.10311 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__moncontrol.part.0") [flags 0x3]  <function_decl 0x2b25477c91b0 __moncontrol.part.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(barrier 14 13 15)
(code_label 15 14 16 6 57 "" [1 uses])
(note 16 15 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 6 (set (reg:SI 2 cx)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 18 17 19 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 19 18 20 6 (set (reg:DI 4 si)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(insn 20 19 21 6 (set (reg:DI 5 di)
        (const_int 0 [0])) gmon.c:92 -1
     (nil))
(call_insn 21 20 22 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b2547724948 __profil>) [0 __profil ])
                (ashift:DI (reg:DI 123 [ D.10311 S1 A8])
            (const_int 0 [0]))) gmon.c:92 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__profil") [flags 0x41]  <function_decl 0x2b2547724948 __profil>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 22 21 23 6 (set (reg/f:DI 90)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:93 -1
     (nil))
(insn 23 22 26 6 (set (mem/c:DI (reg/f:DI 90) [3 _gmonparam.state ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:110 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 124)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:110 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 124)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])
        (reg:DI 88 [ D.10311+0 S8 A256])
        (const_int 3 [0x3])) gmon.c:93 -1
     (nil))
(code_label 26 23 27 8 55 "" [1 uses])
(note 27 26 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
 ])) gmon.c:110 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 125 [ D.10311 ])
                (plus:DI (reg/v:DI 122 [ highpc ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 126 [ D.10311 ])
                (lshiftrt:DI (reg:DI 125 [ D.10311 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 91 [ D.10311 ])
                (ashift:DI (reg:DI 126 [ D.10311 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 127)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:111 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 127)
                (const_int 72 [0x48])) [3 _gmonparam.highpc+0 S8 A64])
        (reg:DI 91 [ D.10311 ])) gmon.c:111 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 92 [ D.10311 ])
                (minus:DI (reg:DI 91 [ D.10311 ])
                    (reg:DI 88 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:112 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 128)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:112 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 128)
                (const_int 80 [0x50])) [3 _gmonparam.textsize+0 S8 A128])
        (reg:DI 92 [ D.10311 ])) gmon.c:112 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 93 [ D.10311 ])
                (lshiftrt:DI (reg:DI 92 [ D.10311 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 129 [ D.10311 ])
                (plus:DI (reg:DI 93 [ D.10311 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 130 [ D.10311 ])
                (lshiftrt:DI (reg:DI 129 [ D.10311 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 96 [ D.10311 ])
                (ashift:DI (reg:DI 130 [ D.10311 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 131)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:113 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:DI (plus:DI (reg/f:DI 131)
                (const_int 16 [0x10])) [3 _gmonparam.kcountsize+0 S8 A128])
        (reg:DI 96 [ D.10311 ])) gmon.c:113 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 132)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:114 -1
     (nil))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 132)
                (const_int 88 [0x58])) [3 _gmonparam.hashfraction+0 S8 A64])
        (const_int 2 [0x2])) gmon.c:114 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 133)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:121 -1
     (nil))
(insn 30 29 31 2 (set (mem/c:DI (plus:DI (reg/f:DI 133)
                (const_int 96 [0x60])) [3 _gmonparam.log_hashfraction+0 S8 A256])
        (const_int 4 [0x4])) gmon.c:121 -1
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 134)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:123 -1
     (nil))
(insn 32 31 33 2 (set (mem/c:DI (plus:DI (reg/f:DI 134)
                (const_int 32 [0x20])) [3 _gmonparam.fromssize+0 S8 A256])
        (reg:DI 93 [ D.10311 ])) gmon.c:123 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 135)
        (reg:DI 92 [ D.10311 ])) gmon.c:124 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 136)
                (ashift:DI (reg:DI 135)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 137 [ D.10311 ])
                (plus:DI (reg:DI 136)
                    (reg:DI 92 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 92 [ D.10311 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 138)
                (lshiftrt:DI (reg:DI 137 [ D.10311 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 140)
        (const_int 2951479051793528259 [0x28f5c28f5c28f5c3])) gmon.c:124 -1
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 139)
                (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 138))
                            (zero_extend:TI (reg:DI 140)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 98 [ D.10311 ])
                (lshiftrt:DI (reg:DI 139)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 137 [ D.10311 ])
            (const_int 100 [0x64]))
        (nil)))
(insn 40 39 41 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.10311 ])
            (const_int 49 [0x31]))) gmon.c:125 -1
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) gmon.c:125 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 47)
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg/f:DI 141)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:126 -1
     (nil))
(insn 44 43 5 4 (set (mem/c:DI (plus:DI (reg/f:DI 141)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (const_int 50 [0x32])) gmon.c:126 -1
     (nil))
(insn 5 44 45 4 (set (reg:DI 120 [ D.10311 ])
        (const_int 1200 [0x4b0])) -1
     (nil))
(jump_insn 45 5 46 4 (set (pc)
        (label_ref 67)) -1
     (nil)
 -> 67)
(barrier 46 45 47)
(code_label 47 46 48 5 61 "" [1 uses])
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg:DI 99 [ D.10312 ])
        (reg:DI 98 [ D.10311 ])) gmon.c:124 -1
     (nil))
(insn 50 49 51 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.10311 ])
            (const_int 1048576 [0x100000]))) gmon.c:127 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) gmon.c:127 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 63)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:DI 142)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:124 -1
     (nil))
(insn 54 53 55 6 (set (mem/c:DI (plus:DI (reg/f:DI 142)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (reg:DI 99 [ D.10312 ])) gmon.c:124 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 143)
        (reg:DI 98 [ D.10311 ])) -1
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 144)
                (ashift:DI (reg:DI 143)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 145)
                (plus:DI (reg:DI 144)
                    (reg:DI 98 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98 [ D.10311 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 146)
                (ashift:DI (reg:DI 145)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 145)
        (reg:DI 146)) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98 [ D.10311 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 60 59 61 6 (set (reg:DI 120 [ D.10311 ])
        (reg:DI 145)) -1
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (label_ref 67)) -1
     (nil)
 -> 67)
(barrier 62 61 63)
(code_label 63 62 64 7 63 "" [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg/f:DI 147)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:128 -1
     (nil))
(insn 66 65 6 7 (set (mem/c:DI (plus:DI (reg/f:DI 147)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (const_int 1048576 [0x100000])) gmon.c:128 -1
     (nil))
(insn 6 66 67 7 (set (reg:DI 120 [ D.10311 ])
        (const_int 25165824 [0x1800000])) gmon.c:128 -1
     (nil))
(code_label 67 6 68 8 62 "" [2 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg/f:DI 148)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:129 -1
     (nil))
(insn 70 69 71 8 (set (mem/c:DI (plus:DI (reg/f:DI 148)
                (const_int 48 [0x30])) [3 _gmonparam.tossize+0 S8 A128])
        (reg:DI 120 [ D.10311 ])) gmon.c:129 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 149 [ D.10311 ])
                (plus:DI (reg:DI 93 [ D.10311 ])
                    (reg:DI 96 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:131 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg:DI 150 [ D.10311 ])
                (plus:DI (reg:DI 149 [ D.10311 ])
                    (reg:DI 120 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:131 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 4 si)
        (const_int 1 [0x1])) gmon.c:131 -1
     (nil))
(insn 74 73 75 8 (set (reg:DI 5 di)
        (reg:DI 150 [ D.10311 ])) gmon.c:131 -1
     (nil))
(call_insn 75 74 76 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b30eed49000 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) gmon.c:131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b30eed49000 calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 76 75 77 8 (set (reg/f:DI 151)
        (reg:DI 0 ax)) gmon.c:131 -1
     (expr_list:REG_NOALIAS (reg/f:DI 151)
        (nil)))
(insn 77 76 78 8 (set (reg/v/f:DI 101 [ cp ])
        (reg/f:DI 151)) gmon.c:131 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 101 [ cp ])
            (const_int 0 [0]))) gmon.c:132 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) gmon.c:132 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 101)
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 26 [0x1a])) gmon.c:134 -1
     (nil))
(insn 82 81 83 9 (set (reg/v:DI 4 si [ _a2 ])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b30ef41a240 *.LC6>)) gmon.c:134 -1
     (nil))
(insn 83 82 84 9 (set (reg/v:DI 5 di [ _a1 ])
        (const_int 2 [0x2])) gmon.c:134 -1
     (nil))
(insn 84 83 85 9 (set (reg:SI 153)
        (const_int 1 [0x1])) gmon.c:134 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 152 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 153)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                    ]
                     [] gmon.c:134))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:134 -1
     (nil))
(insn 86 85 87 9 (set (reg/v:DI 103 [ resultvar ])
        (reg:DI 152 [ resultvar ])) gmon.c:134 -1
     (nil))
(insn 87 86 88 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 103 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) gmon.c:134 -1
     (nil))
(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) gmon.c:134 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 93)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg:DI 154)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b30ef128ab0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) gmon.c:134 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:SI 155)
                (neg:SI (subreg:SI (reg/v:DI 103 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:134 -1
     (nil))
(insn 92 91 93 10 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 154)) [7 __libc_errno+0 S4 A32])
        (reg:SI 155)) gmon.c:134 -1
     (nil))
(code_label 93 92 94 11 65 "" [1 uses])
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (set (reg/f:DI 156)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:135 -1
     (nil))
(insn 96 95 97 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 156)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])
        (const_int 0 [0])) gmon.c:135 -1
     (nil))
(insn 97 96 98 11 (set (reg/f:DI 157)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:136 -1
     (nil))
(insn 98 97 99 11 (set (mem/c:DI (reg/f:DI 157) [3 _gmonparam.state+0 S8 A256])
        (const_int 2 [0x2])) gmon.c:136 -1
     (nil))
(jump_insn 99 98 100 11 (set (pc)
        (label_ref:DI 147)) gmon.c:137 654 {jump}
     (nil)
 -> 147)
(barrier 100 99 101)
(code_label 101 100 102 12 64 "" [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:DI 158)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:139 -1
     (nil))
(insn 104 103 105 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])
        (reg/v/f:DI 101 [ cp ])) gmon.c:139 -1
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 101 [ cp ])
                    (reg:DI 120 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:140 -1
     (nil))
(insn 106 105 107 12 (set (reg/f:DI 159)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:141 -1
     (nil))
(insn 107 106 108 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 159)
                (const_int 8 [0x8])) [2 _gmonparam.kcount+0 S8 A64])
        (reg/v/f:DI 107 [ cp ])) gmon.c:141 -1
     (nil))
(insn 108 107 109 12 (set (reg/f:DI 160)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:143 -1
     (nil))
(insn 109 108 110 12 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/v/f:DI 107 [ cp ])
                    (reg:DI 96 [ D.10311 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:143 -1
     (nil))
(insn 110 109 111 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 160)
                (const_int 24 [0x18])) [2 _gmonparam.froms+0 S8 A64])
        (reg:DI 161)) gmon.c:143 -1
     (nil))
(insn 111 110 112 12 (set (mem:DI (plus:DI (reg/v/f:DI 101 [ cp ])
                (const_int 16 [0x10])) [3 MEM[(struct tostruct *)cp_39].link+0 S8 A64])
        (const_int 0 [0])) gmon.c:145 -1
     (nil))
(insn 112 111 113 12 (parallel [
            (set (reg/v:SI 112 [ o ])
                (minus:SI (subreg:SI (reg:DI 91 [ D.10311 ]) 0)
                    (subreg:SI (reg:DI 88 [ D.10311 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:147 -1
     (nil))
(insn 113 112 114 12 (set (reg:DI 162 [ D.10311 ])
        (sign_extend:DI (reg/v:SI 112 [ o ]))) gmon.c:148 -1
     (nil))
(insn 114 113 115 12 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 96 [ D.10311 ])
            (reg:DI 162 [ D.10311 ]))) gmon.c:148 -1
     (nil))
(jump_insn 115 114 116 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) gmon.c:148 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 137)
(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 96 [ D.10311 ])
            (const_int 0 [0]))) gmon.c:151 -1
     (nil))
(jump_insn 118 117 149 13 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) gmon.c:151 -1
     (int_list:REG_BR_PROB 2100 (nil))
 -> 122)
(note 149 118 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 149 120 14 (set (reg:SF 163 [ D.10315 ])
        (float:SF (reg:DI 96 [ D.10311 ]))) gmon.c:151 -1
     (nil))
(jump_insn 120 119 121 14 (set (pc)
        (label_ref 128)) gmon.c:151 -1
     (nil)
 -> 128)
(barrier 121 120 122)
(code_label 122 121 150 15 68 "" [1 uses])
(note 150 122 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 150 124 15 (parallel [
            (set (reg:DI 165)
                (lshiftrt:DI (reg:DI 96 [ D.10311 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 124 123 125 15 (parallel [
            (set (reg:DI 166)
                (and:DI (reg:DI 96 [ D.10311 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 125 124 126 15 (parallel [
            (set (reg:DI 165)
                (ior:DI (reg:DI 165)
                    (reg:DI 166)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 126 125 127 15 (set (reg:SF 164)
        (float:SF (reg:DI 165))) gmon.c:151 -1
     (nil))
(insn 127 126 128 15 (set (reg:SF 163 [ D.10315 ])
        (plus:SF (reg:SF 164)
            (reg:SF 164))) gmon.c:151 -1
     (nil))
(code_label 128 127 151 16 69 "" [1 uses])
(note 151 128 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 151 130 16 (set (reg:SF 167 [ D.10315 ])
        (float:SF (reg/v:SI 112 [ o ]))) gmon.c:151 -1
     (nil))
(insn 130 129 131 16 (set (reg:SF 168 [ D.10315 ])
        (div:SF (reg:SF 163 [ D.10315 ])
            (reg:SF 167 [ D.10315 ]))) gmon.c:151 -1
     (nil))
(insn 131 130 132 16 (set (reg:SF 170)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [14  S4 A32])) gmon.c:151 -1
     (expr_list:REG_EQUAL (const_double:SF 6.5536e+4 [0x0.8p+17])
        (nil)))
(insn 132 131 133 16 (set (reg:SF 169 [ D.10315 ])
        (mult:SF (reg:SF 168 [ D.10315 ])
            (reg:SF 170))) gmon.c:151 -1
     (nil))
(insn 133 132 134 16 (set (reg:SI 171)
        (fix:SI (reg:SF 169 [ D.10315 ]))) gmon.c:151 -1
     (nil))
(insn 134 133 135 16 (set (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b30ef2b22d0 s_scale>) [7 s_scale+0 S4 A32])
        (reg:SI 171)) gmon.c:151 -1
     (nil))
(jump_insn 135 134 136 16 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
(barrier 136 135 137)
(code_label 137 136 138 17 67 "" [1 uses])
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 17 (set (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b30ef2b22d0 s_scale>) [7 s_scale+0 S4 A32])
        (const_int 65536 [0x10000])) gmon.c:166 -1
     (nil))
(code_label 140 139 141 18 70 "" [1 uses])
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 18 (set (reg:SI 5 di)
        (const_int 1 [0x1])) gmon.c:168 -1
     (nil))
(call_insn/j 143 142 144 18 (call (mem:QI (symbol_ref:DI ("__moncontrol") [flags 0x1]  <function_decl 0x2b30ef2fda20 __moncontrol>) [0 __moncontrol S1 A8])
        (const_int 0 [0])) gmon.c:168 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__moncontrol") [flags 0x1]  <function_decl 0x2b30ef2fda20 __moncontrol>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 144 143 147)
(code_label 147 144 148 20 60 "" [1 uses])
(note 148 147 0 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

;; Function __monstartup (__monstartup, funcdef_no=48, decl_uid=2658, cgraph_uid=49, symbol_order=54)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Predictions for insn 118 bb 12
  DS theory heuristics: 21.0%
  first match heuristics (ignored): 21.0%
  combined heuristics: 21.0%
  opcode values positive heuristics: 21.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 99 from 20 to 21.
Edge 18->20 redirected to 21
deleting block 20


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:DI 122 [ lowpc ])
        (reg:DI 5 di [ lowpc ])) gmon.c:101 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 123 [ highpc ])
        (reg:DI 4 si [ highpc ])) gmon.c:101 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (parallel [
            (set (reg:DI 124 [ D.10001 ])
                (lshiftrt:DI (reg/v:DI 122 [ lowpc ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:110 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:DI 88 [ D.10001 ])
                (ashift:DI (reg:DI 124 [ D.10001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:110 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 125)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:110 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 125)
                (const_int 64 [0x40])) [3 _gmonparam.lowpc+0 S8 A256])
        (reg:DI 88 [ D.10001 ])) gmon.c:110 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 126 [ D.10001 ])
                (plus:DI (reg/v:DI 123 [ highpc ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 127 [ D.10001 ])
                (lshiftrt:DI (reg:DI 126 [ D.10001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 91 [ D.10001 ])
                (ashift:DI (reg:DI 127 [ D.10001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:111 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 128)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:111 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:DI (plus:DI (reg/f:DI 128)
                (const_int 72 [0x48])) [3 _gmonparam.highpc+0 S8 A64])
        (reg:DI 91 [ D.10001 ])) gmon.c:111 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 92 [ D.10001 ])
                (minus:DI (reg:DI 91 [ D.10001 ])
                    (reg:DI 88 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:112 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 129)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:112 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 129)
                (const_int 80 [0x50])) [3 _gmonparam.textsize+0 S8 A128])
        (reg:DI 92 [ D.10001 ])) gmon.c:112 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 93 [ D.10001 ])
                (lshiftrt:DI (reg:DI 92 [ D.10001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 130 [ D.10001 ])
                (plus:DI (reg:DI 93 [ D.10001 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:DI 131 [ D.10001 ])
                (lshiftrt:DI (reg:DI 130 [ D.10001 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 96 [ D.10001 ])
                (ashift:DI (reg:DI 131 [ D.10001 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:113 -1
     (nil))
(insn 25 24 26 2 (set (reg/f:DI 132)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:113 -1
     (nil))
(insn 26 25 27 2 (set (mem/c:DI (plus:DI (reg/f:DI 132)
                (const_int 16 [0x10])) [3 _gmonparam.kcountsize+0 S8 A128])
        (reg:DI 96 [ D.10001 ])) gmon.c:113 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 133)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:114 -1
     (nil))
(insn 28 27 29 2 (set (mem/c:DI (plus:DI (reg/f:DI 133)
                (const_int 88 [0x58])) [3 _gmonparam.hashfraction+0 S8 A64])
        (const_int 2 [0x2])) gmon.c:114 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 134)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:121 -1
     (nil))
(insn 30 29 31 2 (set (mem/c:DI (plus:DI (reg/f:DI 134)
                (const_int 96 [0x60])) [3 _gmonparam.log_hashfraction+0 S8 A256])
        (const_int 4 [0x4])) gmon.c:121 -1
     (nil))
(insn 31 30 32 2 (set (reg/f:DI 135)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:123 -1
     (nil))
(insn 32 31 33 2 (set (mem/c:DI (plus:DI (reg/f:DI 135)
                (const_int 32 [0x20])) [3 _gmonparam.fromssize+0 S8 A256])
        (reg:DI 93 [ D.10001 ])) gmon.c:123 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 136)
        (reg:DI 92 [ D.10001 ])) gmon.c:124 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 137)
                (ashift:DI (reg:DI 136)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 35 34 36 2 (parallel [
            (set (reg:DI 138 [ D.10001 ])
                (plus:DI (reg:DI 137)
                    (reg:DI 92 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 92 [ D.10001 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 36 35 37 2 (parallel [
            (set (reg:DI 139)
                (lshiftrt:DI (reg:DI 138 [ D.10001 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 141)
        (const_int 2951479051793528259 [0x28f5c28f5c28f5c3])) gmon.c:124 -1
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 140)
                (truncate:DI (lshiftrt:TI (mult:TI (zero_extend:TI (reg:DI 139))
                            (zero_extend:TI (reg:DI 141)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 98 [ D.10001 ])
                (lshiftrt:DI (reg:DI 140)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:124 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 138 [ D.10001 ])
            (const_int 100 [0x64]))
        (nil)))
(insn 40 39 41 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.10001 ])
            (const_int 49 [0x31]))) gmon.c:125 -1
     (nil))
(jump_insn 41 40 42 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) gmon.c:125 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 47)
(note 42 41 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 4 (set (reg/f:DI 142)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:126 -1
     (nil))
(insn 44 43 5 4 (set (mem/c:DI (plus:DI (reg/f:DI 142)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (const_int 50 [0x32])) gmon.c:126 -1
     (nil))
(insn 5 44 45 4 (set (reg:DI 121 [ D.10001 ])
        (const_int 1200 [0x4b0])) -1
     (nil))
(jump_insn 45 5 46 4 (set (pc)
        (label_ref 67)) -1
     (nil)
 -> 67)
(barrier 46 45 47)
(code_label 47 46 48 5 63 "" [1 uses])
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg:DI 99 [ D.10002 ])
        (reg:DI 98 [ D.10001 ])) gmon.c:124 -1
     (nil))
(insn 50 49 51 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.10001 ])
            (const_int 1048576 [0x100000]))) gmon.c:127 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) gmon.c:127 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 63)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg/f:DI 143)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:124 -1
     (nil))
(insn 54 53 55 6 (set (mem/c:DI (plus:DI (reg/f:DI 143)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (reg:DI 99 [ D.10002 ])) gmon.c:124 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 144)
        (reg:DI 98 [ D.10001 ])) -1
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 145)
                (ashift:DI (reg:DI 144)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 146)
                (plus:DI (reg:DI 145)
                    (reg:DI 98 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98 [ D.10001 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 147)
                (ashift:DI (reg:DI 146)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 146)
        (reg:DI 147)) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 98 [ D.10001 ])
            (const_int 24 [0x18]))
        (nil)))
(insn 60 59 61 6 (set (reg:DI 121 [ D.10001 ])
        (reg:DI 146)) -1
     (nil))
(jump_insn 61 60 62 6 (set (pc)
        (label_ref 67)) -1
     (nil)
 -> 67)
(barrier 62 61 63)
(code_label 63 62 64 7 65 "" [1 uses])
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg/f:DI 148)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:128 -1
     (nil))
(insn 66 65 6 7 (set (mem/c:DI (plus:DI (reg/f:DI 148)
                (const_int 56 [0x38])) [3 _gmonparam.tolimit+0 S8 A64])
        (const_int 1048576 [0x100000])) gmon.c:128 -1
     (nil))
(insn 6 66 67 7 (set (reg:DI 121 [ D.10001 ])
        (const_int 25165824 [0x1800000])) gmon.c:128 -1
     (nil))
(code_label 67 6 68 8 64 "" [2 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg/f:DI 149)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:129 -1
     (nil))
(insn 70 69 71 8 (set (mem/c:DI (plus:DI (reg/f:DI 149)
                (const_int 48 [0x30])) [3 _gmonparam.tossize+0 S8 A128])
        (reg:DI 121 [ D.10001 ])) gmon.c:129 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 150 [ D.10001 ])
                (plus:DI (reg:DI 93 [ D.10001 ])
                    (reg:DI 96 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:131 -1
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg:DI 151 [ D.10001 ])
                (plus:DI (reg:DI 150 [ D.10001 ])
                    (reg:DI 121 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:131 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 4 si)
        (const_int 1 [0x1])) gmon.c:131 -1
     (nil))
(insn 74 73 75 8 (set (reg:DI 5 di)
        (reg:DI 151 [ D.10001 ])) gmon.c:131 -1
     (nil))
(call_insn 75 74 76 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b2547284000 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) gmon.c:131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2b2547284000 calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 76 75 77 8 (set (reg/f:DI 152)
        (reg:DI 0 ax)) gmon.c:131 -1
     (expr_list:REG_NOALIAS (reg/f:DI 152)
        (nil)))
(insn 77 76 78 8 (set (reg/v/f:DI 101 [ cp ])
        (reg/f:DI 152)) gmon.c:131 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 101 [ cp ])
            (const_int 0 [0]))) gmon.c:132 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) gmon.c:132 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 101)
(note 80 79 81 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 9 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 26 [0x1a])) gmon.c:134 -1
     (nil))
(insn 82 81 83 9 (set (reg/v:DI 4 si [ _a2 ])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b254787f360 *.LC7>)) gmon.c:134 -1
     (nil))
(insn 83 82 84 9 (set (reg/v:DI 5 di [ _a1 ])
        (const_int 2 [0x2])) gmon.c:134 -1
     (nil))
(insn 84 83 85 9 (set (reg:SI 154)
        (const_int 1 [0x1])) gmon.c:134 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 153 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 154)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                        (asm_input:DI ("r") gmon.c:134)
                    ]
                     [] gmon.c:134))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) gmon.c:134 -1
     (nil))
(insn 86 85 87 9 (set (reg/v:DI 103 [ resultvar ])
        (reg:DI 153 [ resultvar ])) gmon.c:134 -1
     (nil))
(insn 87 86 88 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 103 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) gmon.c:134 -1
     (nil))
(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) gmon.c:134 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 93)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg:DI 155)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b25476197e0 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [12  S8 A8])) gmon.c:134 -1
     (nil))
(insn 91 90 92 10 (parallel [
            (set (reg:SI 156)
                (neg:SI (subreg:SI (reg/v:DI 103 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:134 -1
     (nil))
(insn 92 91 93 10 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 155)) [7 __libc_errno+0 S4 A32])
        (reg:SI 156)) gmon.c:134 -1
     (nil))
(code_label 93 92 94 11 67 "" [1 uses])
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (set (reg/f:DI 157)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:135 -1
     (nil))
(insn 96 95 97 11 (set (mem/f/c:DI (plus:DI (reg/f:DI 157)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])
        (const_int 0 [0])) gmon.c:135 -1
     (nil))
(insn 97 96 98 11 (set (reg/f:DI 158)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:136 -1
     (nil))
(insn 98 97 99 11 (set (mem/c:DI (reg/f:DI 158) [3 _gmonparam.state+0 S8 A256])
        (const_int 2 [0x2])) gmon.c:136 -1
     (nil))
(jump_insn 99 98 100 11 (set (pc)
        (label_ref:DI 150)) gmon.c:137 654 {jump}
     (nil)
 -> 150)
(barrier 100 99 101)
(code_label 101 100 102 12 66 "" [1 uses])
(note 102 101 103 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 12 (set (reg/f:DI 159)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:139 -1
     (nil))
(insn 104 103 105 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 159)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])
        (reg/v/f:DI 101 [ cp ])) gmon.c:139 -1
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg/v/f:DI 107 [ cp ])
                (plus:DI (reg/v/f:DI 101 [ cp ])
                    (reg:DI 121 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:140 -1
     (nil))
(insn 106 105 107 12 (set (reg/f:DI 160)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:141 -1
     (nil))
(insn 107 106 108 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 160)
                (const_int 8 [0x8])) [2 _gmonparam.kcount+0 S8 A64])
        (reg/v/f:DI 107 [ cp ])) gmon.c:141 -1
     (nil))
(insn 108 107 109 12 (set (reg/f:DI 161)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:143 -1
     (nil))
(insn 109 108 110 12 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/v/f:DI 107 [ cp ])
                    (reg:DI 96 [ D.10001 ])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:143 -1
     (nil))
(insn 110 109 111 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 161)
                (const_int 24 [0x18])) [2 _gmonparam.froms+0 S8 A64])
        (reg:DI 162)) gmon.c:143 -1
     (nil))
(insn 111 110 112 12 (set (mem:DI (plus:DI (reg/v/f:DI 101 [ cp ])
                (const_int 16 [0x10])) [3 MEM[(struct tostruct *)cp_39].link+0 S8 A64])
        (const_int 0 [0])) gmon.c:145 -1
     (nil))
(insn 112 111 113 12 (parallel [
            (set (reg/v:SI 112 [ o ])
                (minus:SI (subreg:SI (reg:DI 91 [ D.10001 ]) 0)
                    (subreg:SI (reg:DI 88 [ D.10001 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:147 -1
     (nil))
(insn 113 112 114 12 (set (reg:DI 163 [ D.10001 ])
        (sign_extend:DI (reg/v:SI 112 [ o ]))) gmon.c:148 -1
     (nil))
(insn 114 113 115 12 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 96 [ D.10001 ])
            (reg:DI 163 [ D.10001 ]))) gmon.c:148 -1
     (nil))
(jump_insn 115 114 116 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) gmon.c:148 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 137)
(note 116 115 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 13 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 96 [ D.10001 ])
            (const_int 0 [0]))) gmon.c:151 -1
     (nil))
(jump_insn 118 117 152 13 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 122)
            (pc))) gmon.c:151 -1
     (int_list:REG_BR_PROB 2100 (nil))
 -> 122)
(note 152 118 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 119 152 120 14 (set (reg:SF 164 [ D.10005 ])
        (float:SF (reg:DI 96 [ D.10001 ]))) gmon.c:151 -1
     (nil))
(jump_insn 120 119 121 14 (set (pc)
        (label_ref 128)) gmon.c:151 -1
     (nil)
 -> 128)
(barrier 121 120 122)
(code_label 122 121 153 15 70 "" [1 uses])
(note 153 122 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 153 124 15 (parallel [
            (set (reg:DI 166)
                (lshiftrt:DI (reg:DI 96 [ D.10001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 124 123 125 15 (parallel [
            (set (reg:DI 167)
                (and:DI (reg:DI 96 [ D.10001 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 125 124 126 15 (parallel [
            (set (reg:DI 166)
                (ior:DI (reg:DI 166)
                    (reg:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) gmon.c:151 -1
     (nil))
(insn 126 125 127 15 (set (reg:SF 165)
        (float:SF (reg:DI 166))) gmon.c:151 -1
     (nil))
(insn 127 126 128 15 (set (reg:SF 164 [ D.10005 ])
        (plus:SF (reg:SF 165)
            (reg:SF 165))) gmon.c:151 -1
     (nil))
(code_label 128 127 154 16 71 "" [1 uses])
(note 154 128 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 129 154 130 16 (set (reg:SF 168 [ D.10005 ])
        (float:SF (reg/v:SI 112 [ o ]))) gmon.c:151 -1
     (nil))
(insn 130 129 131 16 (set (reg:SF 169 [ D.10005 ])
        (div:SF (reg:SF 164 [ D.10005 ])
            (reg:SF 168 [ D.10005 ]))) gmon.c:151 -1
     (nil))
(insn 131 130 132 16 (set (reg:SF 171)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [13  S4 A32])) gmon.c:151 -1
     (expr_list:REG_EQUAL (const_double:SF 6.5536e+4 [0x0.8p+17])
        (nil)))
(insn 132 131 133 16 (set (reg:SF 170 [ D.10005 ])
        (mult:SF (reg:SF 169 [ D.10005 ])
            (reg:SF 171))) gmon.c:151 -1
     (nil))
(insn 133 132 134 16 (set (reg:SI 172)
        (fix:SI (reg:SF 170 [ D.10005 ]))) gmon.c:151 -1
     (nil))
(insn 134 133 135 16 (set (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b254772c240 s_scale>) [7 s_scale+0 S4 A32])
        (reg:SI 172)) gmon.c:151 -1
     (nil))
(jump_insn 135 134 136 16 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
(barrier 136 135 137)
(code_label 137 136 138 17 69 "" [1 uses])
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 17 (set (mem/c:SI (symbol_ref:DI ("s_scale") [flags 0x2]  <var_decl 0x2b254772c240 s_scale>) [7 s_scale+0 S4 A32])
        (const_int 65536 [0x10000])) gmon.c:166 -1
     (nil))
(code_label 140 139 141 18 72 "" [1 uses])
(note 141 140 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 18 (set (reg/f:DI 173)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:80 -1
     (nil))
(insn 143 142 144 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (reg/f:DI 173) [3 _gmonparam.state+0 S8 A256])
            (const_int 2 [0x2]))) gmon.c:80 -1
     (nil))
(jump_insn 144 143 145 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 150)
            (pc))) gmon.c:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 3784 (nil))
 -> 150)
(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(call_insn/j 146 145 147 19 (call (mem:QI (symbol_ref:DI ("__moncontrol.part.0") [flags 0x3]  <function_decl 0x2b25477c91b0 __moncontrol.part.0>) [0 __moncontrol.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__moncontrol.part.0") [flags 0x3]  <function_decl 0x2b25477c91b0 __moncontrol.part.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(barrier 147 146 150)
(code_label 150 147 151 21 62 "" [2 uses])
(note 151 150 0 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

;; Function __write_profiling (__write_profiling, funcdef_no=53, decl_uid=2685, cgraph_uid=55, symbol_order=63)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 90)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:400 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 91)
        (mem/c:DI (reg/f:DI 90) [3 _gmonparam.state+0 S8 A256])) gmon.c:400 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 88 [ save ])
        (subreg:SI (reg:DI 91) 0)) gmon.c:400 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:401 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (reg/f:DI 92) [3 _gmonparam.state+0 S8 A256])
        (const_int 3 [0x3])) gmon.c:401 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ save ])
            (const_int 0 [0]))) gmon.c:402 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) gmon.c:402 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 14)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 4 (call (mem:QI (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b30ef32c000 write_gmon>) [0 write_gmon S1 A8])
        (const_int 0 [0])) gmon.c:403 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b30ef32c000 write_gmon>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 14 13 15 5 77 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:DI 93)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:404 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 94)
        (sign_extend:DI (reg/v:SI 88 [ save ]))) gmon.c:404 -1
     (nil))
(insn 18 17 0 5 (set (mem/c:DI (reg/f:DI 93) [3 _gmonparam.state+0 S8 A256])
        (reg:DI 94)) gmon.c:404 -1
     (nil))

;; Function _mcleanup (_mcleanup, funcdef_no=54, decl_uid=2683, cgraph_uid=56, symbol_order=64)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
deleting block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 0 [0])) gmon.c:419 -1
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("__moncontrol") [flags 0x1]  <function_decl 0x2b30ef2fda20 __moncontrol>) [0 __moncontrol S1 A8])
        (const_int 0 [0])) gmon.c:419 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__moncontrol") [flags 0x1]  <function_decl 0x2b30ef2fda20 __moncontrol>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:421 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (reg/f:DI 89) [3 _gmonparam.state+0 S8 A256])
            (const_int 2 [0x2]))) gmon.c:421 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) gmon.c:421 -1
     (int_list:REG_BR_PROB 3784 (nil))
 -> 12)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 4 (call (mem:QI (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b30ef32c000 write_gmon>) [0 write_gmon S1 A8])
        (const_int 0 [0])) gmon.c:422 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b30ef32c000 write_gmon>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 12 11 13 5 80 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:DI 90)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b30eee15ea0 _gmonparam>)) gmon.c:425 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 90)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])) gmon.c:425 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 5 di)
        (reg:DI 91)) gmon.c:425 -1
     (nil))
(call_insn/j 17 16 18 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b30eed4ce58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) gmon.c:425 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b30eed4ce58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 18 17 0)

;; Function __write_profiling (__write_profiling, funcdef_no=53, decl_uid=2665, cgraph_uid=55, symbol_order=60)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 90)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:400 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 91)
        (mem/c:DI (reg/f:DI 90) [3 _gmonparam.state+0 S8 A256])) gmon.c:400 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 88 [ save ])
        (subreg:SI (reg:DI 91) 0)) gmon.c:400 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:401 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:DI (reg/f:DI 92) [3 _gmonparam.state+0 S8 A256])
        (const_int 3 [0x3])) gmon.c:401 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ save ])
            (const_int 0 [0]))) gmon.c:402 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) gmon.c:402 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 14)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 12 14 4 (call (mem:QI (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b2547781870 write_gmon>) [0 write_gmon S1 A8])
        (const_int 0 [0])) gmon.c:403 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b2547781870 write_gmon>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 14 13 15 5 79 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:DI 93)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:404 -1
     (nil))
(insn 17 16 18 5 (set (reg:DI 94)
        (sign_extend:DI (reg/v:SI 88 [ save ]))) gmon.c:404 -1
     (nil))
(insn 18 17 0 5 (set (mem/c:DI (reg/f:DI 93) [3 _gmonparam.state+0 S8 A256])
        (reg:DI 94)) gmon.c:404 -1
     (nil))

;; Function _mcleanup (_mcleanup, funcdef_no=54, decl_uid=2663, cgraph_uid=57, symbol_order=62)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
deleting block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 0 [0])) gmon.c:419 -1
     (nil))
(call_insn 6 5 7 2 (call (mem:QI (symbol_ref:DI ("__moncontrol") [flags 0x3]  <function_decl 0x2b25477680d8 __moncontrol>) [0 __moncontrol S1 A8])
        (const_int 0 [0])) gmon.c:419 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__moncontrol") [flags 0x3]  <function_decl 0x2b25477680d8 __moncontrol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:421 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (reg/f:DI 89) [3 _gmonparam.state+0 S8 A256])
            (const_int 2 [0x2]))) gmon.c:421 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) gmon.c:421 -1
     (int_list:REG_BR_PROB 3784 (nil))
 -> 12)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 11 10 12 4 (call (mem:QI (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b2547781870 write_gmon>) [0 write_gmon S1 A8])
        (const_int 0 [0])) gmon.c:422 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write_gmon") [flags 0x3]  <function_decl 0x2b2547781870 write_gmon>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 12 11 13 5 82 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:DI 90)
        (symbol_ref:DI ("_gmonparam") [flags 0x2]  <var_decl 0x2b2547359d80 _gmonparam>)) gmon.c:425 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 90)
                (const_int 40 [0x28])) [2 _gmonparam.tos+0 S8 A64])) gmon.c:425 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 5 di)
        (reg:DI 91)) gmon.c:425 -1
     (nil))
(call_insn/j 17 16 18 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b2547287e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) gmon.c:425 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b2547287e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 18 17 0)
