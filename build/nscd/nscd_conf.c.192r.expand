
;; Function find_db (find_db, funcdef_no=106, decl_uid=10517, cgraph_uid=106, symbol_order=108)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 3->7 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 71.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 27 0 34 NOTE_INSN_DELETED)
(note 34 27 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 28 34 29 2 (set (reg/v/f:DI 121 [ name ])
        (reg:DI 5 di [ name ])) nscd_conf.c:49 -1
     (nil))
(note 29 28 30 2 NOTE_INSN_FUNCTION_BEG)
(insn 30 29 31 2 (set (reg:DI 118 [ ivtmp.62 ])
        (const_int 0 [0])) nscd_conf.c:49 -1
     (nil))
(insn 31 30 52 2 (set (reg/f:DI 113 [ D.12340 ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b44361286c0 *.LC0>)) nscd_conf.c:49 -1
     (nil))
(code_label 52 31 36 4 4 "" [1 uses])
(note 36 52 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (set (reg/v:SI 117 [ cnt ])
        (subreg:SI (reg:DI 118 [ ivtmp.62 ]) 0)) -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 4 si)
        (reg/f:DI 113 [ D.12340 ])) nscd_conf.c:51 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg/v/f:DI 121 [ name ])) nscd_conf.c:51 -1
     (nil))
(call_insn/i 40 39 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b443595d000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nscd_conf.c:51 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2b443595d000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 4 (set (reg:SI 115 [ D.12341 ])
        (reg:SI 0 ax)) nscd_conf.c:51 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.12341 ])
            (const_int 0 [0]))) nscd_conf.c:51 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 80)
            (pc))) nscd_conf.c:51 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 80)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (parallel [
            (set (reg:DI 118 [ ivtmp.62 ])
                (plus:DI (reg:DI 118 [ ivtmp.62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 118 [ ivtmp.62 ])
            (const_int 5 [0x5]))) nscd_conf.c:50 -1
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) nscd_conf.c:50 -1
     (int_list:REG_BR_PROB 2095 (nil))
 -> 55)
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (parallel [
            (set (reg:DI 122 [ D.12343 ])
                (ashift:DI (reg:DI 118 [ ivtmp.62 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 123)
        (symbol_ref:DI ("dbnames") [flags 0x2]  <var_decl 0x2b4435f18090 dbnames>)) -1
     (nil))
(insn 51 50 53 6 (set (reg/f:DI 113 [ D.12340 ])
        (mem/u/f:DI (plus:DI (reg/f:DI 123)
                (reg:DI 122 [ D.12343 ])) [3 MEM[symbol: dbnames, index: _18, offset: 0B]+0 S8 A64])) -1
     (nil))
(jump_insn 53 51 54 6 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 54 53 55)
(code_label 55 54 56 7 3 "" [1 uses])
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 7 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd_conf.c:54 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b4436128750 *.LC1>)) nscd_conf.c:54 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2b4435a6b090 _libc_intl_domainname>)) nscd_conf.c:54 -1
     (nil))
(call_insn 60 59 61 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd_conf.c:54 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 61 60 62 7 (set (reg/f:DI 116 [ D.12342 ])
        (reg:DI 0 ax)) nscd_conf.c:54 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 2 cx)
        (reg/v/f:DI 121 [ name ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 1 dx)
        (reg/f:DI 116 [ D.12342 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 64 63 65 7 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 65 64 66 7 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 66 65 67 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 67 66 33 7 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 33 67 77 7 (set (reg:SI 114 [ D.12341 ])
        (const_int -1 [0xffffffffffffffff])) nscd_conf.c:55 -1
     (nil))
(jump_insn 77 33 78 7 (set (pc)
        (label_ref 68)) nscd_conf.c:55 -1
     (nil)
 -> 68)
(barrier 78 77 80)
(code_label 80 78 79 8 5 "" [1 uses])
(note 79 80 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 79 68 8 (set (reg:SI 114 [ D.12341 ])
        (reg/v:SI 117 [ cnt ])) -1
     (nil))
(code_label 68 32 69 9 2 "" [1 uses])
(note 69 68 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 74 9 (set (reg:SI 120 [ <retval> ])
        (reg:SI 114 [ D.12341 ])) -1
     (nil))
(insn 74 70 75 9 (set (reg/i:SI 0 ax)
        (reg:SI 120 [ <retval> ])) nscd_conf.c:56 -1
     (nil))
(insn 75 74 0 9 (use (reg/i:SI 0 ax)) nscd_conf.c:56 -1
     (nil))

;; Function nscd_parse_file (nscd_parse_file, funcdef_no=107, decl_uid=10342, cgraph_uid=107, symbol_order=109)

Partition 1: size 8 align 8
	len
Partition 0: size 8 align 8
	line

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151
Edge 2->151 redirected to 156
Edge 13->16 redirected to 158
Edge 21->24 redirected to 160
Edge 25->28 redirected to 162
Edge 28->31 redirected to 164
Edge 40->42 redirected to 165
Edge 67->69 redirected to 166
Edge 77->79 redirected to 167
Edge 81->83 redirected to 168
Purged non-fallthru edges from bb 170
Purged non-fallthru edges from bb 173
Purged non-fallthru edges from bb 176
Purged non-fallthru edges from bb 179
Purged non-fallthru edges from bb 181
Purged non-fallthru edges from bb 184
Predictions for insn 1191 bb 155
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 6->7 to 175 failed.
Redirecting jump 72 from 172 to 175.
Edge 10->12 redirected to 170
Edge 14->16 redirected to 17
Forwarding edge 15->16 to 17 failed.
Deleted label in block 16.
Edge 20->22 redirected to 25
Forwarding edge 21->22 to 25 failed.
Deleted label in block 22.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.
Forwarding edge 21->22 to 25 failed.
Forwarding edge 21->22 to 25 failed.
Edge 30->32 redirected to 33
Forwarding edge 31->32 to 33 failed.
Deleted label in block 32.
Edge 36->38 redirected to 41
Forwarding edge 37->38 to 41 failed.
Deleted label in block 38.
Merging block 39 into block 38...
Merged blocks 38 and 39.
Merged 38 and 39 without moving.
Forwarding edge 37->38 to 41 failed.
Forwarding edge 37->38 to 41 failed.
Edge 44->46 redirected to 49
Forwarding edge 45->46 to 49 failed.
Deleted label in block 46.
Merging block 47 into block 46...
Merged blocks 46 and 47.
Merged 46 and 47 without moving.
Forwarding edge 45->46 to 49 failed.
Forwarding edge 45->46 to 49 failed.
Edge 52->54 redirected to 57
Forwarding edge 53->54 to 57 failed.
Deleted label in block 54.
Merging block 55 into block 54...
Merged blocks 54 and 55.
Merged 54 and 55 without moving.
Forwarding edge 53->54 to 57 failed.
Forwarding edge 53->54 to 57 failed.
Edge 59->12 redirected to 170
Edge 62->12 redirected to 170
Edge 65->12 redirected to 170
Edge 71->12 redirected to 170
Edge 73->12 redirected to 170
Edge 74->12 redirected to 170
Edge 76->12 redirected to 170
Edge 77->12 redirected to 170
Edge 78->12 redirected to 170
Edge 79->12 redirected to 170
Edge 82->12 redirected to 170
Edge 84->12 redirected to 170
Edge 85->12 redirected to 170
Edge 87->12 redirected to 170
Edge 88->12 redirected to 170
Edge 89->12 redirected to 170
Edge 90->12 redirected to 170
Edge 93->12 redirected to 170
Edge 101->12 redirected to 170
Edge 104->12 redirected to 170
Edge 117->12 redirected to 170
Edge 120->12 redirected to 170
Edge 122->12 redirected to 170
Edge 123->12 redirected to 170
Edge 125->12 redirected to 170
Edge 126->12 redirected to 170
Edge 127->12 redirected to 170
Edge 128->12 redirected to 170
Edge 131->12 redirected to 170
Edge 133->12 redirected to 170
Edge 134->12 redirected to 170
Edge 136->12 redirected to 170
Edge 137->12 redirected to 170
Edge 138->12 redirected to 170
Edge 139->12 redirected to 170
Edge 148->12 redirected to 170
Edge 149->12 redirected to 170
Edge 151->12 redirected to 170
Edge 152->12 redirected to 170
Edge 153->12 redirected to 170
Edge 154->12 redirected to 170
Edge 159->12 redirected to 170
Edge 161->12 redirected to 170
Edge 162->12 redirected to 170
Edge 164->12 redirected to 170
Edge 165->12 redirected to 170
Edge 166->12 redirected to 170
Edge 167->12 redirected to 170
Forwarding edge 170->171 to 6 failed.
Edge 173->172 redirected to 175
Removing jump 1186.
Merging block 184 into block 183...
Merged blocks 183 and 184.
Merged 183 and 184 without moving.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 175 failed.
deleting block 12
Forwarding edge 15->16 to 17 failed.
Forwarding edge 21->22 to 25 failed.
Forwarding edge 31->32 to 33 failed.
Forwarding edge 37->38 to 41 failed.
Forwarding edge 45->46 to 49 failed.
Forwarding edge 53->54 to 57 failed.
Forwarding edge 170->171 to 6 failed.
deleting block 172


try_optimize_cfg iteration 3

Forwarding edge 6->7 to 175 failed.
Forwarding edge 15->16 to 17 failed.
Forwarding edge 21->22 to 25 failed.
Forwarding edge 31->32 to 33 failed.
Forwarding edge 37->38 to 41 failed.
Forwarding edge 45->46 to 49 failed.
Forwarding edge 53->54 to 57 failed.
Forwarding edge 170->171 to 6 failed.


;;
;; Full RTL generated for this function:
;;
(note 25 0 42 NOTE_INSN_DELETED)
(note 42 25 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 26 42 27 2 (set (reg/v/f:DI 381 [ fname ])
        (reg:DI 5 di [ fname ])) nscd_conf.c:60 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 382 [ dbs ])
        (reg:DI 4 si [ dbs ])) nscd_conf.c:60 -1
     (nil))
(note 28 27 29 2 NOTE_INSN_FUNCTION_BEG)
(insn 29 28 44 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.12413+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:60 -1
     (nil))
(insn 44 29 45 2 (set (reg/v:SI 122 [ initial_error_message_count ])
        (mem/c:SI (symbol_ref:DI ("error_message_count") [flags 0x40]  <var_decl 0x2b4435a13d80 error_message_count>) [2 error_message_count+0 S4 A32])) nscd_conf.c:65 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b4436181630 *.LC3>)) nscd_conf.c:68 -1
     (nil))
(insn 46 45 47 2 (set (reg:DI 5 di)
        (reg/v/f:DI 381 [ fname ])) nscd_conf.c:68 -1
     (nil))
(call_insn 47 46 48 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b4435a9ea20 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) nscd_conf.c:68 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b4435a9ea20 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 48 47 49 2 (set (reg/v/f:DI 123 [ fp ])
        (reg:DI 0 ax)) nscd_conf.c:68 -1
     (nil))
(insn 49 48 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 123 [ fp ])
            (const_int 0 [0]))) nscd_conf.c:69 -1
     (nil))
(jump_insn 50 49 51 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1200)
            (pc))) nscd_conf.c:69 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 1200)
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg:SI 384)
        (mem:SI (reg/v/f:DI 123 [ fp ]) [2 fp_42->_flags+0 S4 A64])) nscd_conf.c:73 -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:SI 383 [ D.12395 ])
                (and:SI (reg:SI 384)
                    (const_int -32769 [0xffffffffffff7fff])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:73 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 123 [ fp ]) [2 fp_42->_flags+0 S4 A64])
            (const_int -32769 [0xffffffffffff7fff]))
        (nil)))
(insn 54 53 55 4 (parallel [
            (set (reg:SI 385)
                (ior:SI (reg:SI 383 [ D.12395 ])
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:73 -1
     (nil))
(insn 55 54 56 4 (set (mem:SI (reg/v/f:DI 123 [ fp ]) [2 fp_42->_flags+0 S4 A64])
        (reg:SI 385)) nscd_conf.c:73 -1
     (nil))
(insn 56 55 57 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])
        (const_int 0 [0])) nscd_conf.c:75 -1
     (nil))
(insn 57 56 1081 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 len+0 S8 A64])
        (const_int 0 [0])) nscd_conf.c:76 -1
     (nil))
(code_label 1081 57 58 5 67 "" [1 uses])
(note 58 1081 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (parallel [
            (set (reg:DI 386)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 60 59 61 5 (parallel [
            (set (reg:DI 387)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 2 cx)
        (reg/v/f:DI 123 [ fp ])) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 62 61 63 5 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 63 62 64 5 (set (reg:DI 4 si)
        (reg:DI 386)) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 64 63 65 5 (set (reg:DI 5 di)
        (reg:DI 387)) ../libio/bits/stdio.h:117 -1
     (nil))
(call_insn 65 64 66 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__getdelim") [flags 0x41]  <function_decl 0x2b4435ab2288 __getdelim>) [0 __getdelim S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio.h:117 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__getdelim") [flags 0x41]  <function_decl 0x2b4435ab2288 __getdelim>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 66 65 67 5 (set (reg:DI 306 [ D.12404 ])
        (reg:DI 0 ax)) ../libio/bits/stdio.h:117 -1
     (nil))
(insn 67 66 68 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 306 [ D.12404 ])
            (const_int 0 [0]))) nscd_conf.c:81 -1
     (nil))
(jump_insn 68 67 1086 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 75)
            (pc))) nscd_conf.c:81 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 75)
(code_label 1086 68 69 6 68 "" [1 uses])
(note 69 1086 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("paranoia") [flags 0x40]  <var_decl 0x2b4435f18ab0 paranoia>) [2 paranoia+0 S4 A32])
            (const_int 0 [0]))) nscd_conf.c:273 -1
     (nil))
(jump_insn 71 70 74 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1094)
            (pc))) nscd_conf.c:273 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1094)
(note 74 71 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 72 74 73 7 (set (pc)
        (label_ref:DI 1128)) 654 {jump}
     (nil)
 -> 1128)
(barrier 73 72 75)
(code_label 75 73 76 8 11 "" [1 uses])
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg/f:DI 130 [ D.12400 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])) nscd_conf.c:83 -1
     (nil))
(insn 78 77 79 8 (parallel [
            (set (reg:DI 388 [ D.12401 ])
                (plus:DI (reg:DI 306 [ D.12404 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:83 -1
     (nil))
(insn 79 78 80 8 (parallel [
            (set (reg/f:DI 133 [ D.12400 ])
                (plus:DI (reg/f:DI 130 [ D.12400 ])
                    (reg:DI 388 [ D.12401 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:83 -1
     (nil))
(insn 80 79 81 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 133 [ D.12400 ]) [0 *_56+0 S1 A8])
            (const_int 10 [0xa]))) nscd_conf.c:83 -1
     (nil))
(jump_insn 81 80 82 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) nscd_conf.c:83 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 85)
(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 9 (set (mem:QI (reg/f:DI 133 [ D.12400 ]) [0 *_56+0 S1 A8])
        (const_int 0 [0])) nscd_conf.c:84 -1
     (nil))
(insn 84 83 85 9 (set (reg/f:DI 130 [ D.12400 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])) -1
     (nil))
(code_label 85 84 86 10 14 "" [1 uses])
(note 86 85 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 10 (set (reg:SI 4 si)
        (const_int 35 [0x23])) nscd_conf.c:89 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.12400 ])) nscd_conf.c:89 -1
     (nil))
(call_insn/i 89 88 90 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchrnul") [flags 0x41]  <function_decl 0x2b4435c5c510 strchrnul>) [0 strchrnul S1 A8])
            (const_int 0 [0]))) nscd_conf.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchrnul") [flags 0x41]  <function_decl 0x2b4435c5c510 strchrnul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 90 89 91 10 (set (reg/f:DI 138 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:89 -1
     (nil))
(insn 91 90 92 10 (set (mem:QI (reg/f:DI 138 [ D.12400 ]) [0 *_64+0 S1 A8])
        (const_int 0 [0])) nscd_conf.c:89 -1
     (nil))
(insn 92 91 93 10 (set (reg/v/f:DI 111 [ arg1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])) nscd_conf.c:92 -1
     (nil))
(insn 93 92 94 10 (set (reg:QI 379 [ D.12402 ])
        (mem:QI (reg/v/f:DI 111 [ arg1 ]) [0 *arg1_66+0 S1 A8])) nscd_conf.c:92 -1
     (nil))
(insn 94 93 95 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 379 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:92 -1
     (nil))
(jump_insn 95 94 96 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:92 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 97 96 98 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b4435a28e58 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b4435a28e58 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 98 97 99 11 (set (reg/f:DI 377 [ D.12412 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 99 98 100 11 (set (reg/f:DI 378 [ D.12403 ])
        (mem/f:DI (reg/f:DI 377 [ D.12412 ]) [3 *_580+0 S8 A64])) -1
     (nil))
(jump_insn 100 99 101 11 (set (pc)
        (label_ref 109)) -1
     (nil)
 -> 109)
(barrier 101 100 117)
(code_label 117 101 106 13 18 "" [1 uses])
(note 106 117 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (parallel [
            (set (reg/v/f:DI 111 [ arg1 ])
                (plus:DI (reg/v/f:DI 111 [ arg1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:97 -1
     (nil))
(insn 108 107 109 13 (set (reg:QI 379 [ D.12402 ])
        (mem:QI (reg/v/f:DI 111 [ arg1 ]) [0 MEM[base: arg1_77, offset: 0B]+0 S1 A8])) -1
     (nil))
(code_label 109 108 110 14 16 "" [1 uses])
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 14 (set (reg:DI 389 [ D.12399 ])
        (sign_extend:DI (reg:QI 379 [ D.12402 ]))) nscd_conf.c:96 -1
     (nil))
(insn 112 111 113 14 (set (reg:HI 390)
        (mem:HI (plus:DI (mult:DI (reg:DI 389 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 378 [ D.12403 ])) [5 *_74+0 S2 A16])) -1
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg:HI 115 [ D.12396 ])
                (and:HI (reg:HI 390)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 389 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 378 [ D.12403 ])) [5 *_74+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 114 113 115 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 379 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(insn 115 114 116 14 (set (reg:QI 391)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(insn 116 115 118 14 (set (reg:QI 121 [ D.12394 ])
        (reg:QI 391)) nscd_conf.c:96 -1
     (nil))
(insn 118 116 119 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 115 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(insn 119 118 120 14 (set (reg:QI 393 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(insn 120 119 121 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 393 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(jump_insn 121 120 1237 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1255)
            (pc))) nscd_conf.c:96 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 1255)
(note 1237 121 122 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 122 1237 123 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:96 -1
     (nil))
(jump_insn 123 122 1238 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) nscd_conf.c:96 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 117)
(note 1238 123 1255 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(code_label 1255 1238 125 17 83 "" [1 uses])
(note 125 1255 126 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 115 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(insn 127 126 128 17 (set (reg:QI 395 [ D.12394 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(insn 128 127 129 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 395 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(jump_insn 129 128 1239 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1205)
            (pc))) nscd_conf.c:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 1205)
(note 1239 129 130 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 130 1239 131 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(jump_insn 131 130 132 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1205)
            (pc))) nscd_conf.c:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 1205)
(note 132 131 30 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 30 132 136 19 (set (reg/v/f:DI 150 [ arg1 ])
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:99 -1
     (nil))
(code_label 136 30 133 20 21 "" [1 uses])
(note 133 136 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 20 (parallel [
            (set (reg/v/f:DI 150 [ arg1 ])
                (plus:DI (reg/v/f:DI 150 [ arg1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:100 -1
     (nil))
(insn 135 134 137 20 (set (reg:QI 144 [ D.12402 ])
        (mem:QI (reg/v/f:DI 150 [ arg1 ]) [0 MEM[base: arg1_84, offset: 0B]+0 S1 A8])) nscd_conf.c:99 -1
     (nil))
(insn 137 135 138 20 (set (reg:DI 396 [ D.12399 ])
        (sign_extend:DI (reg:QI 144 [ D.12402 ]))) nscd_conf.c:99 -1
     (nil))
(insn 138 137 139 20 (set (reg:HI 398)
        (mem:HI (plus:DI (mult:DI (reg:DI 396 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 378 [ D.12403 ])) [5 *_81+0 S2 A16])) nscd_conf.c:99 -1
     (nil))
(insn 139 138 140 20 (parallel [
            (set (reg:HI 397)
                (lshiftrt:HI (reg:HI 398)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:99 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 396 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 378 [ D.12403 ])) [5 *_81+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 140 139 141 20 (parallel [
            (set (reg:HI 399)
                (xor:HI (reg:HI 397)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:99 -1
     (nil))
(insn 141 140 142 20 (parallel [
            (set (reg:QI 400 [ D.12394 ])
                (and:QI (subreg:QI (reg:HI 399) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:99 -1
     (nil))
(insn 142 141 143 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 400 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(jump_insn 143 142 1240 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) nscd_conf.c:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 149)
(note 1240 143 144 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 144 1240 145 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 144 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(insn 145 144 146 21 (set (reg:QI 402 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(insn 146 145 147 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 402 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:99 -1
     (nil))
(jump_insn 147 146 1241 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nscd_conf.c:99 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 136)
(note 1241 147 1202 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1202 1241 1203 22 (set (pc)
        (label_ref 149)) -1
     (nil)
 -> 149)
(barrier 1203 1202 1205)
(code_label 1205 1203 1204 24 75 "" [2 uses])
(note 1204 1205 31 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 31 1204 149 24 (set (reg/v/f:DI 150 [ arg1 ])
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:99 -1
     (nil))
(code_label 149 31 150 25 20 "" [2 uses])
(note 150 149 151 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 25 (parallel [
            (set (reg/v/f:DI 161 [ arg2 ])
                (plus:DI (reg/v/f:DI 150 [ arg1 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:102 -1
     (nil))
(insn 152 151 153 25 (set (mem:QI (reg/v/f:DI 150 [ arg1 ]) [0 *arg1_509+0 S1 A8])
        (const_int 0 [0])) nscd_conf.c:103 -1
     (nil))
(insn 153 152 154 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 111 [ arg1 ]) [0 MEM[(const char *)arg1_4]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:104 -1
     (nil))
(jump_insn 154 153 155 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) nscd_conf.c:104 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 168)
(note 155 154 156 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 26 (set (reg/f:DI 152 [ D.12400 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])) nscd_conf.c:105 -1
     (nil))
(insn 157 156 158 26 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd_conf.c:105 -1
     (nil))
(insn 158 157 159 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b44361816c0 *.LC4>)) nscd_conf.c:105 -1
     (nil))
(insn 159 158 160 26 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2b4435a6b090 _libc_intl_domainname>)) nscd_conf.c:105 -1
     (nil))
(call_insn 160 159 161 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd_conf.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 161 160 162 26 (set (reg/f:DI 153 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:105 -1
     (nil))
(insn 162 161 163 26 (set (reg:DI 2 cx)
        (reg/f:DI 152 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 163 162 164 26 (set (reg:DI 1 dx)
        (reg/f:DI 153 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 164 163 165 26 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 165 164 166 26 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 166 165 167 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 167 166 168 26 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(code_label 168 167 169 27 23 "" [1 uses])
(note 169 168 170 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 27 (set (reg/f:DI 364 [ D.12403 ])
        (mem/f:DI (reg/f:DI 377 [ D.12412 ]) [3 *_580+0 S8 A64])) nscd_conf.c:106 -1
     (nil))
(insn 171 170 172 27 (set (reg:QI 374 [ D.12402 ])
        (mem:QI (plus:DI (reg/v/f:DI 150 [ arg1 ])
                (const_int 1 [0x1])) [0 MEM[(char *)arg1_509 + 1B]+0 S1 A8])) nscd_conf.c:106 -1
     (nil))
(insn 172 171 173 27 (set (reg:DI 403 [ D.12399 ])
        (sign_extend:DI (reg:QI 374 [ D.12402 ]))) nscd_conf.c:106 -1
     (nil))
(insn 173 172 174 27 (set (reg:HI 404)
        (mem:HI (plus:DI (mult:DI (reg:DI 403 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 364 [ D.12403 ])) [5 *_524+0 S2 A16])) -1
     (nil))
(insn 174 173 175 27 (parallel [
            (set (reg:HI 149 [ D.12396 ])
                (and:HI (reg:HI 404)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 403 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 364 [ D.12403 ])) [5 *_524+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 175 174 176 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 374 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 176 175 177 27 (set (reg:QI 405)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 177 176 178 27 (set (reg:QI 137 [ D.12394 ])
        (reg:QI 405)) nscd_conf.c:106 -1
     (nil))
(insn 178 177 179 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 149 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 179 178 180 27 (set (reg:QI 407 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 180 179 181 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 407 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(jump_insn 181 180 1242 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) nscd_conf.c:106 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 202)
(note 1242 181 182 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 182 1242 183 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(jump_insn 183 182 184 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) nscd_conf.c:106 -1
     (int_list:REG_BR_PROB 230 (nil))
 -> 202)
(note 184 183 194 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(code_label 194 184 185 30 25 "" [1 uses])
(note 185 194 186 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 30 (parallel [
            (set (reg/v/f:DI 161 [ arg2 ])
                (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:107 -1
     (nil))
(insn 187 186 188 30 (set (reg:QI 155 [ D.12402 ])
        (mem:QI (reg/v/f:DI 161 [ arg2 ]) [0 MEM[base: arg2_99, offset: 0B]+0 S1 A8])) nscd_conf.c:106 -1
     (nil))
(insn 188 187 189 30 (set (reg:DI 408 [ D.12399 ])
        (sign_extend:DI (reg:QI 155 [ D.12402 ]))) nscd_conf.c:106 -1
     (nil))
(insn 189 188 190 30 (set (reg:HI 409)
        (mem:HI (plus:DI (mult:DI (reg:DI 408 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 364 [ D.12403 ])) [5 *_96+0 S2 A16])) -1
     (nil))
(insn 190 189 191 30 (parallel [
            (set (reg:HI 149 [ D.12396 ])
                (and:HI (reg:HI 409)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 408 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 364 [ D.12403 ])) [5 *_96+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 191 190 192 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 155 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 192 191 193 30 (set (reg:QI 410)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 193 192 195 30 (set (reg:QI 137 [ D.12394 ])
        (reg:QI 410)) nscd_conf.c:106 -1
     (nil))
(insn 195 193 196 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 149 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 196 195 197 30 (set (reg:QI 412 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(insn 197 196 198 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 412 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(jump_insn 198 197 1243 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 202)
            (pc))) nscd_conf.c:106 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 202)
(note 1243 198 199 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 199 1243 200 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:106 -1
     (nil))
(jump_insn 200 199 1244 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) nscd_conf.c:106 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 194)
(note 1244 200 202 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(code_label 202 1244 203 33 24 "" [3 uses])
(note 203 202 204 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 149 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(insn 205 204 206 33 (set (reg:QI 414 [ D.12394 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(insn 206 205 207 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 414 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(jump_insn 207 206 1245 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1210)
            (pc))) nscd_conf.c:109 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 1210)
(note 1245 207 208 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 208 1245 209 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(jump_insn 209 208 210 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1210)
            (pc))) nscd_conf.c:109 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 1210)
(note 210 209 32 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 32 210 214 35 (set (reg/v/f:DI 168 [ arg2 ])
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:109 -1
     (nil))
(code_label 214 32 211 36 28 "" [1 uses])
(note 211 214 212 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 36 (parallel [
            (set (reg/v/f:DI 168 [ arg2 ])
                (plus:DI (reg/v/f:DI 168 [ arg2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:110 -1
     (nil))
(insn 213 212 215 36 (set (reg:QI 162 [ D.12402 ])
        (mem:QI (reg/v/f:DI 168 [ arg2 ]) [0 MEM[base: arg2_106, offset: 0B]+0 S1 A8])) nscd_conf.c:109 -1
     (nil))
(insn 215 213 216 36 (set (reg:DI 415 [ D.12399 ])
        (sign_extend:DI (reg:QI 162 [ D.12402 ]))) nscd_conf.c:109 -1
     (nil))
(insn 216 215 217 36 (set (reg:HI 417)
        (mem:HI (plus:DI (mult:DI (reg:DI 415 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 364 [ D.12403 ])) [5 *_103+0 S2 A16])) nscd_conf.c:109 -1
     (nil))
(insn 217 216 218 36 (parallel [
            (set (reg:HI 416)
                (lshiftrt:HI (reg:HI 417)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:109 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 415 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 364 [ D.12403 ])) [5 *_103+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 218 217 219 36 (parallel [
            (set (reg:HI 418)
                (xor:HI (reg:HI 416)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:109 -1
     (nil))
(insn 219 218 220 36 (parallel [
            (set (reg:QI 419 [ D.12394 ])
                (and:QI (subreg:QI (reg:HI 418) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:109 -1
     (nil))
(insn 220 219 221 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 419 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(jump_insn 221 220 1246 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 227)
            (pc))) nscd_conf.c:109 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 227)
(note 1246 221 222 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 222 1246 223 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(insn 223 222 224 37 (set (reg:QI 421 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(insn 224 223 225 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 421 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:109 -1
     (nil))
(jump_insn 225 224 1247 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) nscd_conf.c:109 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 214)
(note 1247 225 1207 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1207 1247 1208 38 (set (pc)
        (label_ref 227)) -1
     (nil)
 -> 227)
(barrier 1208 1207 1210)
(code_label 1210 1208 1209 40 76 "" [2 uses])
(note 1209 1210 33 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 33 1209 227 40 (set (reg/v/f:DI 168 [ arg2 ])
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:109 -1
     (nil))
(code_label 227 33 228 41 27 "" [2 uses])
(note 228 227 229 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 41 (parallel [
            (set (reg/v/f:DI 112 [ __s2 ])
                (plus:DI (reg/v/f:DI 168 [ arg2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:112 -1
     (nil))
(insn 230 229 231 41 (set (mem:QI (reg/v/f:DI 168 [ arg2 ]) [0 *arg2_469+0 S1 A8])
        (const_int 0 [0])) nscd_conf.c:113 -1
     (nil))
(insn 231 230 232 41 (set (reg:QI 169 [ D.12402 ])
        (mem:QI (plus:DI (reg/v/f:DI 168 [ arg2 ])
                (const_int 1 [0x1])) [0 MEM[(const char *)arg2_469 + 1B]+0 S1 A8])) nscd_conf.c:114 -1
     (nil))
(insn 232 231 233 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:114 -1
     (nil))
(jump_insn 233 232 234 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 287)
            (pc))) nscd_conf.c:114 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 287)
(note 234 233 235 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 42 (set (reg/f:DI 370 [ D.12403 ])
        (mem/f:DI (reg/f:DI 377 [ D.12412 ]) [3 *_580+0 S8 A64])) nscd_conf.c:116 -1
     (nil))
(insn 236 235 237 42 (set (reg:DI 422 [ D.12399 ])
        (sign_extend:DI (reg:QI 169 [ D.12402 ]))) nscd_conf.c:116 -1
     (nil))
(insn 237 236 238 42 (set (reg:HI 423)
        (mem:HI (plus:DI (mult:DI (reg:DI 422 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 370 [ D.12403 ])) [5 *_473+0 S2 A16])) -1
     (nil))
(insn 238 237 239 42 (parallel [
            (set (reg:HI 167 [ D.12396 ])
                (and:HI (reg:HI 423)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 422 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 370 [ D.12403 ])) [5 *_473+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 239 238 240 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 167 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(jump_insn 240 239 241 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1215)
            (pc))) nscd_conf.c:116 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 1215)
(note 241 240 251 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(code_label 251 241 242 44 32 "" [1 uses])
(note 242 251 243 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 44 (parallel [
            (set (reg/v/f:DI 112 [ __s2 ])
                (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:117 -1
     (nil))
(insn 244 243 245 44 (set (reg:QI 170 [ D.12402 ])
        (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 MEM[base: __s2_117, offset: 0B]+0 S1 A8])) nscd_conf.c:116 -1
     (nil))
(insn 245 244 246 44 (set (reg:DI 424 [ D.12399 ])
        (sign_extend:DI (reg:QI 170 [ D.12402 ]))) nscd_conf.c:116 -1
     (nil))
(insn 246 245 247 44 (set (reg:HI 425)
        (mem:HI (plus:DI (mult:DI (reg:DI 424 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 370 [ D.12403 ])) [5 *_114+0 S2 A16])) -1
     (nil))
(insn 247 246 248 44 (parallel [
            (set (reg:HI 167 [ D.12396 ])
                (and:HI (reg:HI 425)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 424 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 370 [ D.12403 ])) [5 *_114+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 248 247 249 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 170 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(insn 249 248 250 44 (set (reg:QI 426)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(insn 250 249 252 44 (set (reg:QI 129 [ D.12394 ])
        (reg:QI 426)) nscd_conf.c:116 -1
     (nil))
(insn 252 250 253 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 167 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(insn 253 252 254 44 (set (reg:QI 428 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(insn 254 253 255 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 428 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(jump_insn 255 254 1248 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 259)
            (pc))) nscd_conf.c:116 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 259)
(note 1248 255 256 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 256 1248 257 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:116 -1
     (nil))
(jump_insn 257 256 1249 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) nscd_conf.c:116 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 251)
(note 1249 257 1212 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1212 1249 1213 46 (set (pc)
        (label_ref 259)) -1
     (nil)
 -> 259)
(barrier 1213 1212 1215)
(code_label 1215 1213 1214 48 77 "" [1 uses])
(note 1214 1215 34 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 34 1214 259 48 (set (reg:QI 129 [ D.12394 ])
        (const_int 1 [0x1])) nscd_conf.c:116 -1
     (nil))
(code_label 259 34 260 49 31 "" [2 uses])
(note 260 259 261 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 167 [ D.12396 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(insn 262 261 263 49 (set (reg:QI 430 [ D.12394 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(insn 263 262 264 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 430 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(jump_insn 264 263 1250 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1220)
            (pc))) nscd_conf.c:119 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 1220)
(note 1250 264 265 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 265 1250 266 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(jump_insn 266 265 267 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1220)
            (pc))) nscd_conf.c:119 612 {*jcc_1}
     (int_list:REG_BR_PROB 230 (nil))
 -> 1220)
(note 267 266 35 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 35 267 271 51 (set (reg/v/f:DI 181 [ __s2 ])
        (reg/v/f:DI 112 [ __s2 ])) nscd_conf.c:119 -1
     (nil))
(code_label 271 35 268 52 35 "" [1 uses])
(note 268 271 269 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 52 (parallel [
            (set (reg/v/f:DI 181 [ __s2 ])
                (plus:DI (reg/v/f:DI 181 [ __s2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:120 -1
     (nil))
(insn 270 269 272 52 (set (reg:QI 176 [ D.12402 ])
        (mem:QI (reg/v/f:DI 181 [ __s2 ]) [0 MEM[base: __s2_123, offset: 0B]+0 S1 A8])) nscd_conf.c:119 -1
     (nil))
(insn 272 270 273 52 (set (reg:DI 431 [ D.12399 ])
        (sign_extend:DI (reg:QI 176 [ D.12402 ]))) nscd_conf.c:119 -1
     (nil))
(insn 273 272 274 52 (set (reg:HI 433)
        (mem:HI (plus:DI (mult:DI (reg:DI 431 [ D.12399 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 370 [ D.12403 ])) [5 *_121+0 S2 A16])) nscd_conf.c:119 -1
     (nil))
(insn 274 273 275 52 (parallel [
            (set (reg:HI 432)
                (lshiftrt:HI (reg:HI 433)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:119 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 431 [ D.12399 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 370 [ D.12403 ])) [5 *_121+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 275 274 276 52 (parallel [
            (set (reg:HI 434)
                (xor:HI (reg:HI 432)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:119 -1
     (nil))
(insn 276 275 277 52 (parallel [
            (set (reg:QI 435 [ D.12394 ])
                (and:QI (subreg:QI (reg:HI 434) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:119 -1
     (nil))
(insn 277 276 278 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 435 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(jump_insn 278 277 1251 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 284)
            (pc))) nscd_conf.c:119 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 284)
(note 1251 278 279 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 279 1251 280 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.12402 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(insn 280 279 281 53 (set (reg:QI 437 [ D.12394 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(insn 281 280 282 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 437 [ D.12394 ])
            (const_int 0 [0]))) nscd_conf.c:119 -1
     (nil))
(jump_insn 282 281 1252 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) nscd_conf.c:119 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 271)
(note 1252 282 1217 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1217 1252 1218 54 (set (pc)
        (label_ref 284)) -1
     (nil)
 -> 284)
(barrier 1218 1217 1220)
(code_label 1220 1218 1219 56 78 "" [2 uses])
(note 1219 1220 36 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 36 1219 284 56 (set (reg/v/f:DI 181 [ __s2 ])
        (reg/v/f:DI 112 [ __s2 ])) nscd_conf.c:119 -1
     (nil))
(code_label 284 36 285 57 34 "" [2 uses])
(note 285 284 286 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 57 (set (mem:QI (reg/v/f:DI 181 [ __s2 ]) [0 MEM[(char *)__s2_508]+0 S1 A8])
        (const_int 0 [0])) nscd_conf.c:121 -1
     (nil))
(code_label 287 286 288 58 30 "" [1 uses])
(note 288 287 289 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 58 (set (reg/f:DI 438)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b4436181750 *.LC5>)) nscd_conf.c:124 -1
     (nil))
(insn 290 289 291 58 (set (reg:DI 439)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:124 -1
     (nil))
(insn 291 290 292 58 (set (reg:DI 440)
        (reg/f:DI 438)) nscd_conf.c:124 -1
     (nil))
(insn 292 291 293 58 (set (reg:DI 441)
        (const_int 22 [0x16])) nscd_conf.c:124 -1
     (nil))
(insn 293 292 294 58 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 439) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 440) [0 MEM[(void *)"positive-time-to-live"]+0 A8])))
            (use (reg:DI 441))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 439))
            (clobber (reg:DI 440))
            (clobber (reg:DI 441))
        ]) nscd_conf.c:124 -1
     (nil))
(insn 294 293 295 58 (set (reg:QI 442)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:124 -1
     (nil))
(insn 295 294 296 58 (set (reg:QI 443)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:124 -1
     (nil))
(insn 296 295 297 58 (parallel [
            (set (subreg:QI (reg:SI 182 [ D.12395 ]) 0)
                (minus:QI (reg:QI 442)
                    (reg:QI 443)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:124 -1
     (nil))
(insn 297 296 298 58 (set (reg:SI 182 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 182 [ D.12395 ]) 0))) nscd_conf.c:124 -1
     (nil))
(insn 298 297 299 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 182 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:124 -1
     (nil))
(jump_insn 299 298 300 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) nscd_conf.c:124 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 324)
(note 300 299 301 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 59 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:126 -1
     (nil))
(call_insn 302 301 303 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:126 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 303 302 304 59 (set (reg/v:SI 183 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:126 -1
     (nil))
(insn 304 303 305 59 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 183 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:127 -1
     (nil))
(jump_insn 305 304 306 59 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:127 612 {*jcc_1}
     (int_list:REG_BR_PROB 4752 (nil))
 -> 1079)
(note 306 305 307 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 60 (set (reg:DI 444 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 183 [ idx ]))) nscd_conf.c:128 -1
     (nil))
(insn 308 307 309 60 (set (reg:DI 445)
        (reg:DI 444 [ D.12399 ])) nscd_conf.c:128 -1
     (nil))
(insn 309 308 310 60 (parallel [
            (set (reg:DI 446)
                (ashift:DI (reg:DI 445)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (nil))
(insn 310 309 311 60 (parallel [
            (set (reg:DI 447)
                (plus:DI (reg:DI 446)
                    (reg:DI 444 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 444 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 311 310 312 60 (parallel [
            (set (reg:DI 448)
                (ashift:DI (reg:DI 447)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (nil))
(insn 312 311 313 60 (parallel [
            (set (reg:DI 449 [ D.12399 ])
                (plus:DI (reg:DI 448)
                    (reg:DI 444 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 444 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 313 312 314 60 (parallel [
            (set (reg:DI 450)
                (ashift:DI (reg:DI 449 [ D.12399 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (nil))
(insn 314 313 315 60 (set (reg:DI 449 [ D.12399 ])
        (reg:DI 450)) nscd_conf.c:128 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 444 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 315 314 316 60 (parallel [
            (set (reg/f:DI 186 [ D.12405 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 449 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:128 -1
     (nil))
(insn 316 315 317 60 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 317 316 318 60 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 318 317 319 60 (set (reg:DI 5 di)
        (reg/v/f:DI 112 [ __s2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 319 318 320 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 320 319 321 60 (set (reg:DI 154 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 321 320 322 60 (set (mem:DI (plus:DI (reg/f:DI 186 [ D.12405 ])
                (const_int 248 [0xf8])) [4 _131->postimeout+0 S8 A64])
        (reg:DI 154 [ D.12404 ])) nscd_conf.c:128 -1
     (nil))
(jump_insn 322 321 323 60 (set (pc)
        (label_ref 1079)) nscd_conf.c:128 -1
     (nil)
 -> 1079)
(barrier 323 322 324)
(code_label 324 323 325 61 37 "" [1 uses])
(note 325 324 326 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 61 (set (reg/f:DI 451)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b44361817e0 *.LC6>)) nscd_conf.c:130 -1
     (nil))
(insn 327 326 328 61 (set (reg:DI 452)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:130 -1
     (nil))
(insn 328 327 329 61 (set (reg:DI 453)
        (reg/f:DI 451)) nscd_conf.c:130 -1
     (nil))
(insn 329 328 330 61 (set (reg:DI 454)
        (const_int 22 [0x16])) nscd_conf.c:130 -1
     (nil))
(insn 330 329 331 61 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 452) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 453) [0 MEM[(void *)"negative-time-to-live"]+0 A8])))
            (use (reg:DI 454))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 452))
            (clobber (reg:DI 453))
            (clobber (reg:DI 454))
        ]) nscd_conf.c:130 -1
     (nil))
(insn 331 330 332 61 (set (reg:QI 455)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:130 -1
     (nil))
(insn 332 331 333 61 (set (reg:QI 456)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:130 -1
     (nil))
(insn 333 332 334 61 (parallel [
            (set (subreg:QI (reg:SI 188 [ D.12395 ]) 0)
                (minus:QI (reg:QI 455)
                    (reg:QI 456)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:130 -1
     (nil))
(insn 334 333 335 61 (set (reg:SI 188 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 188 [ D.12395 ]) 0))) nscd_conf.c:130 -1
     (nil))
(insn 335 334 336 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 188 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:130 -1
     (nil))
(jump_insn 336 335 337 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) nscd_conf.c:130 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 361)
(note 337 336 338 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 62 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:132 -1
     (nil))
(call_insn 339 338 340 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 340 339 341 62 (set (reg/v:SI 189 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:132 -1
     (nil))
(insn 341 340 342 62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 189 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:133 -1
     (nil))
(jump_insn 342 341 343 62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:133 612 {*jcc_1}
     (int_list:REG_BR_PROB 4752 (nil))
 -> 1079)
(note 343 342 344 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 63 (set (reg:DI 457 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 189 [ idx ]))) nscd_conf.c:134 -1
     (nil))
(insn 345 344 346 63 (set (reg:DI 458)
        (reg:DI 457 [ D.12399 ])) nscd_conf.c:134 -1
     (nil))
(insn 346 345 347 63 (parallel [
            (set (reg:DI 459)
                (ashift:DI (reg:DI 458)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (nil))
(insn 347 346 348 63 (parallel [
            (set (reg:DI 460)
                (plus:DI (reg:DI 459)
                    (reg:DI 457 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 457 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 348 347 349 63 (parallel [
            (set (reg:DI 461)
                (ashift:DI (reg:DI 460)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (nil))
(insn 349 348 350 63 (parallel [
            (set (reg:DI 462 [ D.12399 ])
                (plus:DI (reg:DI 461)
                    (reg:DI 457 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 457 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 350 349 351 63 (parallel [
            (set (reg:DI 463)
                (ashift:DI (reg:DI 462 [ D.12399 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (nil))
(insn 351 350 352 63 (set (reg:DI 462 [ D.12399 ])
        (reg:DI 463)) nscd_conf.c:134 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 457 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 352 351 353 63 (parallel [
            (set (reg/f:DI 192 [ D.12405 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 462 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:134 -1
     (nil))
(insn 353 352 354 63 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 354 353 355 63 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 355 354 356 63 (set (reg:DI 5 di)
        (reg/v/f:DI 112 [ __s2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 356 355 357 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 357 356 358 63 (set (reg:DI 331 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 358 357 359 63 (set (mem:DI (plus:DI (reg/f:DI 192 [ D.12405 ])
                (const_int 256 [0x100])) [4 _139->negtimeout+0 S8 A64])
        (reg:DI 331 [ D.12404 ])) nscd_conf.c:134 -1
     (nil))
(jump_insn 359 358 360 63 (set (pc)
        (label_ref 1079)) nscd_conf.c:134 -1
     (nil)
 -> 1079)
(barrier 360 359 361)
(code_label 361 360 362 64 38 "" [1 uses])
(note 362 361 363 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 64 (set (reg/f:DI 464)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b4436181870 *.LC7>)) nscd_conf.c:136 -1
     (nil))
(insn 364 363 365 64 (set (reg:DI 465)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:136 -1
     (nil))
(insn 365 364 366 64 (set (reg:DI 466)
        (reg/f:DI 464)) nscd_conf.c:136 -1
     (nil))
(insn 366 365 367 64 (set (reg:DI 467)
        (const_int 15 [0xf])) nscd_conf.c:136 -1
     (nil))
(insn 367 366 368 64 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 465) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 466) [0 MEM[(void *)"suggested-size"]+0 A8])))
            (use (reg:DI 467))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 465))
            (clobber (reg:DI 466))
            (clobber (reg:DI 467))
        ]) nscd_conf.c:136 -1
     (nil))
(insn 368 367 369 64 (set (reg:QI 468)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:136 -1
     (nil))
(insn 369 368 370 64 (set (reg:QI 469)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:136 -1
     (nil))
(insn 370 369 371 64 (parallel [
            (set (subreg:QI (reg:SI 194 [ D.12395 ]) 0)
                (minus:QI (reg:QI 468)
                    (reg:QI 469)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:136 -1
     (nil))
(insn 371 370 372 64 (set (reg:SI 194 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 194 [ D.12395 ]) 0))) nscd_conf.c:136 -1
     (nil))
(insn 372 371 373 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:136 -1
     (nil))
(jump_insn 373 372 374 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) nscd_conf.c:136 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 404)
(note 374 373 375 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 65 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:138 -1
     (nil))
(call_insn 376 375 377 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:138 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 377 376 378 65 (set (reg/v:SI 195 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:138 -1
     (nil))
(insn 378 377 379 65 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 195 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:139 -1
     (nil))
(jump_insn 379 378 380 65 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:139 612 {*jcc_1}
     (int_list:REG_BR_PROB 4752 (nil))
 -> 1079)
(note 380 379 381 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 66 (set (reg:DI 470 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 195 [ idx ]))) nscd_conf.c:140 -1
     (nil))
(insn 382 381 383 66 (set (reg:DI 471)
        (reg:DI 470 [ D.12399 ])) nscd_conf.c:140 -1
     (nil))
(insn 383 382 384 66 (parallel [
            (set (reg:DI 472)
                (ashift:DI (reg:DI 471)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (nil))
(insn 384 383 385 66 (parallel [
            (set (reg:DI 473)
                (plus:DI (reg:DI 472)
                    (reg:DI 470 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 470 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 385 384 386 66 (parallel [
            (set (reg:DI 474)
                (ashift:DI (reg:DI 473)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (nil))
(insn 386 385 387 66 (parallel [
            (set (reg:DI 475 [ D.12399 ])
                (plus:DI (reg:DI 474)
                    (reg:DI 470 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 470 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 387 386 388 66 (parallel [
            (set (reg:DI 476)
                (ashift:DI (reg:DI 475 [ D.12399 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (nil))
(insn 388 387 389 66 (set (reg:DI 475 [ D.12399 ])
        (reg:DI 476)) nscd_conf.c:140 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 470 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 389 388 390 66 (parallel [
            (set (reg/f:DI 198 [ D.12405 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 475 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:140 -1
     (nil))
(insn 390 389 391 66 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 391 390 392 66 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 392 391 393 66 (set (reg:DI 5 di)
        (reg/v/f:DI 112 [ __s2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 393 392 394 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 394 393 395 66 (set (reg:DI 332 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 395 394 396 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 332 [ D.12404 ])
            (const_int 0 [0]))) nscd_conf.c:141 -1
     (nil))
(jump_insn 396 395 397 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1224)
            (pc))) nscd_conf.c:141 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1224)
(note 397 396 398 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 1221 67 (set (reg:DI 116 [ D.12397 ])
        (reg:DI 332 [ D.12404 ])) nscd_conf.c:141 -1
     (nil))
(jump_insn 1221 398 1222 67 (set (pc)
        (label_ref 399)) -1
     (nil)
 -> 399)
(barrier 1222 1221 1224)
(code_label 1224 1222 1223 68 79 "" [1 uses])
(note 1223 1224 37 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 37 1223 399 68 (set (reg:DI 116 [ D.12397 ])
        (const_int 211 [0xd3])) nscd_conf.c:141 -1
     (nil))
(code_label 399 37 400 69 40 "" [1 uses])
(note 400 399 401 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 69 (set (mem:DI (plus:DI (reg/f:DI 198 [ D.12405 ])
                (const_int 232 [0xe8])) [4 _147->suggested_module+0 S8 A64])
        (reg:DI 116 [ D.12397 ])) nscd_conf.c:141 -1
     (nil))
(jump_insn 402 401 403 69 (set (pc)
        (label_ref 1079)) nscd_conf.c:141 -1
     (nil)
 -> 1079)
(barrier 403 402 404)
(code_label 404 403 405 70 39 "" [1 uses])
(note 405 404 406 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 70 (set (reg/f:DI 477)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b4436181900 *.LC8>)) nscd_conf.c:143 -1
     (nil))
(insn 407 406 408 70 (set (reg:DI 478)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:143 -1
     (nil))
(insn 408 407 409 70 (set (reg:DI 479)
        (reg/f:DI 477)) nscd_conf.c:143 -1
     (nil))
(insn 409 408 410 70 (set (reg:DI 480)
        (const_int 13 [0xd])) nscd_conf.c:143 -1
     (nil))
(insn 410 409 411 70 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 478) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 479) [0 MEM[(void *)"enable-cache"]+0 A8])))
            (use (reg:DI 480))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 478))
            (clobber (reg:DI 479))
            (clobber (reg:DI 480))
        ]) nscd_conf.c:143 -1
     (nil))
(insn 411 410 412 70 (set (reg:QI 481)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:143 -1
     (nil))
(insn 412 411 413 70 (set (reg:QI 482)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:143 -1
     (nil))
(insn 413 412 414 70 (parallel [
            (set (subreg:QI (reg:SI 199 [ D.12395 ]) 0)
                (minus:QI (reg:QI 481)
                    (reg:QI 482)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:143 -1
     (nil))
(insn 414 413 415 70 (set (reg:SI 199 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 199 [ D.12395 ]) 0))) nscd_conf.c:143 -1
     (nil))
(insn 415 414 416 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:143 -1
     (nil))
(jump_insn 416 415 417 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 474)
            (pc))) nscd_conf.c:143 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 474)
(note 417 416 418 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 71 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:145 -1
     (nil))
(call_insn 419 418 420 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:145 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 420 419 421 71 (set (reg/v:SI 200 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:145 -1
     (nil))
(insn 421 420 422 71 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 200 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:146 -1
     (nil))
(jump_insn 422 421 423 71 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:146 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 423 422 424 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 72 (set (reg:SI 202 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 *__s2_7+0 S1 A8]))) nscd_conf.c:148 -1
     (nil))
(insn 425 424 426 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:148 -1
     (nil))
(jump_insn 426 425 427 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 447)
            (pc))) nscd_conf.c:148 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 447)
(note 427 426 428 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:148 -1
     (nil))
(jump_insn 429 428 430 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:148 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 430 429 431 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:148 -1
     (nil))
(jump_insn 432 431 433 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:148 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 433 432 434 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 434 433 435 75 (set (reg:DI 483 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 200 [ idx ]))) nscd_conf.c:149 -1
     (nil))
(insn 435 434 436 75 (set (reg:DI 485)
        (reg:DI 483 [ D.12399 ])) nscd_conf.c:149 -1
     (nil))
(insn 436 435 437 75 (parallel [
            (set (reg:DI 486)
                (ashift:DI (reg:DI 485)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (nil))
(insn 437 436 438 75 (parallel [
            (set (reg:DI 487)
                (plus:DI (reg:DI 486)
                    (reg:DI 483 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 483 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 438 437 439 75 (parallel [
            (set (reg:DI 488)
                (ashift:DI (reg:DI 487)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (nil))
(insn 439 438 440 75 (parallel [
            (set (reg:DI 489)
                (plus:DI (reg:DI 488)
                    (reg:DI 483 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 483 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 440 439 441 75 (parallel [
            (set (reg:DI 490)
                (ashift:DI (reg:DI 489)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (nil))
(insn 441 440 442 75 (set (reg:DI 489)
        (reg:DI 490)) nscd_conf.c:149 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 483 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 442 441 443 75 (set (reg:DI 484)
        (reg:DI 489)) nscd_conf.c:149 -1
     (nil))
(insn 443 442 444 75 (parallel [
            (set (reg/f:DI 491)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 484)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:149 -1
     (nil))
(insn 444 443 445 75 (set (mem:SI (plus:DI (reg/f:DI 491)
                (const_int 192 [0xc0])) [2 _164->enabled+0 S4 A64])
        (const_int 0 [0])) nscd_conf.c:149 -1
     (nil))
(jump_insn 445 444 446 75 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 446 445 447)
(code_label 447 446 448 76 42 "" [1 uses])
(note 448 447 449 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:150 -1
     (nil))
(jump_insn 450 449 451 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:150 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 451 450 452 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:150 -1
     (nil))
(jump_insn 453 452 454 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:150 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 454 453 455 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:150 -1
     (nil))
(jump_insn 456 455 457 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:150 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 457 456 458 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 458 457 459 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)__s2_7 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:150 -1
     (nil))
(jump_insn 459 458 460 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:150 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 460 459 461 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 80 (set (reg:DI 492 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 200 [ idx ]))) nscd_conf.c:151 -1
     (nil))
(insn 462 461 463 80 (set (reg:DI 494)
        (reg:DI 492 [ D.12399 ])) nscd_conf.c:151 -1
     (nil))
(insn 463 462 464 80 (parallel [
            (set (reg:DI 495)
                (ashift:DI (reg:DI 494)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (nil))
(insn 464 463 465 80 (parallel [
            (set (reg:DI 496)
                (plus:DI (reg:DI 495)
                    (reg:DI 492 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 492 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 465 464 466 80 (parallel [
            (set (reg:DI 497)
                (ashift:DI (reg:DI 496)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (nil))
(insn 466 465 467 80 (parallel [
            (set (reg:DI 498)
                (plus:DI (reg:DI 497)
                    (reg:DI 492 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 492 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 467 466 468 80 (parallel [
            (set (reg:DI 499)
                (ashift:DI (reg:DI 498)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (nil))
(insn 468 467 469 80 (set (reg:DI 498)
        (reg:DI 499)) nscd_conf.c:151 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 492 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 469 468 470 80 (set (reg:DI 493)
        (reg:DI 498)) nscd_conf.c:151 -1
     (nil))
(insn 470 469 471 80 (parallel [
            (set (reg/f:DI 500)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 493)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:151 -1
     (nil))
(insn 471 470 472 80 (set (mem:SI (plus:DI (reg/f:DI 500)
                (const_int 192 [0xc0])) [2 _178->enabled+0 S4 A64])
        (const_int 1 [0x1])) nscd_conf.c:151 -1
     (nil))
(jump_insn 472 471 473 80 (set (pc)
        (label_ref 1079)) nscd_conf.c:151 -1
     (nil)
 -> 1079)
(barrier 473 472 474)
(code_label 474 473 475 81 41 "" [1 uses])
(note 475 474 476 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 81 (set (reg/f:DI 501)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b4436181990 *.LC9>)) nscd_conf.c:154 -1
     (nil))
(insn 477 476 478 81 (set (reg:DI 502)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:154 -1
     (nil))
(insn 478 477 479 81 (set (reg:DI 503)
        (reg/f:DI 501)) nscd_conf.c:154 -1
     (nil))
(insn 479 478 480 81 (set (reg:DI 504)
        (const_int 12 [0xc])) nscd_conf.c:154 -1
     (nil))
(insn 480 479 481 81 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 502) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 503) [0 MEM[(void *)"check-files"]+0 A8])))
            (use (reg:DI 504))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 502))
            (clobber (reg:DI 503))
            (clobber (reg:DI 504))
        ]) nscd_conf.c:154 -1
     (nil))
(insn 481 480 482 81 (set (reg:QI 505)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:154 -1
     (nil))
(insn 482 481 483 81 (set (reg:QI 506)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:154 -1
     (nil))
(insn 483 482 484 81 (parallel [
            (set (subreg:QI (reg:SI 214 [ D.12395 ]) 0)
                (minus:QI (reg:QI 505)
                    (reg:QI 506)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:154 -1
     (nil))
(insn 484 483 485 81 (set (reg:SI 214 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 214 [ D.12395 ]) 0))) nscd_conf.c:154 -1
     (nil))
(insn 485 484 486 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 214 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:154 -1
     (nil))
(jump_insn 486 485 487 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 544)
            (pc))) nscd_conf.c:154 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 544)
(note 487 486 488 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 82 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:156 -1
     (nil))
(call_insn 489 488 490 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:156 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 490 489 491 82 (set (reg/v:SI 215 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:156 -1
     (nil))
(insn 491 490 492 82 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 215 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:157 -1
     (nil))
(jump_insn 492 491 493 82 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:157 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 493 492 494 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 83 (set (reg:SI 217 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 *__s2_7+0 S1 A8]))) nscd_conf.c:159 -1
     (nil))
(insn 495 494 496 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 217 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:159 -1
     (nil))
(jump_insn 496 495 497 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) nscd_conf.c:159 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 517)
(note 497 496 498 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:159 -1
     (nil))
(jump_insn 499 498 500 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:159 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 500 499 501 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:159 -1
     (nil))
(jump_insn 502 501 503 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:159 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 503 502 504 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 86 (set (reg:DI 507 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 215 [ idx ]))) nscd_conf.c:160 -1
     (nil))
(insn 505 504 506 86 (set (reg:DI 509)
        (reg:DI 507 [ D.12399 ])) nscd_conf.c:160 -1
     (nil))
(insn 506 505 507 86 (parallel [
            (set (reg:DI 510)
                (ashift:DI (reg:DI 509)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (nil))
(insn 507 506 508 86 (parallel [
            (set (reg:DI 511)
                (plus:DI (reg:DI 510)
                    (reg:DI 507 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 507 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 508 507 509 86 (parallel [
            (set (reg:DI 512)
                (ashift:DI (reg:DI 511)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (nil))
(insn 509 508 510 86 (parallel [
            (set (reg:DI 513)
                (plus:DI (reg:DI 512)
                    (reg:DI 507 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 507 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 510 509 511 86 (parallel [
            (set (reg:DI 514)
                (ashift:DI (reg:DI 513)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (nil))
(insn 511 510 512 86 (set (reg:DI 513)
        (reg:DI 514)) nscd_conf.c:160 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 507 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 512 511 513 86 (set (reg:DI 508)
        (reg:DI 513)) nscd_conf.c:160 -1
     (nil))
(insn 513 512 514 86 (parallel [
            (set (reg/f:DI 515)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 508)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:160 -1
     (nil))
(insn 514 513 515 86 (set (mem:SI (plus:DI (reg/f:DI 515)
                (const_int 196 [0xc4])) [2 _194->check_file+0 S4 A32])
        (const_int 0 [0])) nscd_conf.c:160 -1
     (nil))
(jump_insn 515 514 516 86 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 516 515 517)
(code_label 517 516 518 87 44 "" [1 uses])
(note 518 517 519 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 217 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:161 -1
     (nil))
(jump_insn 520 519 521 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 521 520 522 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:161 -1
     (nil))
(jump_insn 523 522 524 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 524 523 525 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:161 -1
     (nil))
(jump_insn 526 525 527 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 527 526 528 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 528 527 529 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)__s2_7 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:161 -1
     (nil))
(jump_insn 529 528 530 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 530 529 531 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 532 91 (set (reg:DI 516 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 215 [ idx ]))) nscd_conf.c:162 -1
     (nil))
(insn 532 531 533 91 (set (reg:DI 518)
        (reg:DI 516 [ D.12399 ])) nscd_conf.c:162 -1
     (nil))
(insn 533 532 534 91 (parallel [
            (set (reg:DI 519)
                (ashift:DI (reg:DI 518)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (nil))
(insn 534 533 535 91 (parallel [
            (set (reg:DI 520)
                (plus:DI (reg:DI 519)
                    (reg:DI 516 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 516 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 535 534 536 91 (parallel [
            (set (reg:DI 521)
                (ashift:DI (reg:DI 520)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (nil))
(insn 536 535 537 91 (parallel [
            (set (reg:DI 522)
                (plus:DI (reg:DI 521)
                    (reg:DI 516 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 516 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 537 536 538 91 (parallel [
            (set (reg:DI 523)
                (ashift:DI (reg:DI 522)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (nil))
(insn 538 537 539 91 (set (reg:DI 522)
        (reg:DI 523)) nscd_conf.c:162 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 516 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 539 538 540 91 (set (reg:DI 517)
        (reg:DI 522)) nscd_conf.c:162 -1
     (nil))
(insn 540 539 541 91 (parallel [
            (set (reg/f:DI 524)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 517)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:162 -1
     (nil))
(insn 541 540 542 91 (set (mem:SI (plus:DI (reg/f:DI 524)
                (const_int 196 [0xc4])) [2 _208->check_file+0 S4 A32])
        (const_int 1 [0x1])) nscd_conf.c:162 -1
     (nil))
(jump_insn 542 541 543 91 (set (pc)
        (label_ref 1079)) nscd_conf.c:162 -1
     (nil)
 -> 1079)
(barrier 543 542 544)
(code_label 544 543 545 92 43 "" [1 uses])
(note 545 544 546 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 92 (set (reg/f:DI 525)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b4436181a20 *.LC10>)) nscd_conf.c:165 -1
     (nil))
(insn 547 546 548 92 (set (reg:DI 526)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:165 -1
     (nil))
(insn 548 547 549 92 (set (reg:DI 527)
        (reg/f:DI 525)) nscd_conf.c:165 -1
     (nil))
(insn 549 548 550 92 (set (reg:DI 528)
        (const_int 12 [0xc])) nscd_conf.c:165 -1
     (nil))
(insn 550 549 551 92 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 526) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 527) [0 MEM[(void *)"max-db-size"]+0 A8])))
            (use (reg:DI 528))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 526))
            (clobber (reg:DI 527))
            (clobber (reg:DI 528))
        ]) nscd_conf.c:165 -1
     (nil))
(insn 551 550 552 92 (set (reg:QI 529)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:165 -1
     (nil))
(insn 552 551 553 92 (set (reg:QI 530)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:165 -1
     (nil))
(insn 553 552 554 92 (parallel [
            (set (subreg:QI (reg:SI 229 [ D.12395 ]) 0)
                (minus:QI (reg:QI 529)
                    (reg:QI 530)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:165 -1
     (nil))
(insn 554 553 555 92 (set (reg:SI 229 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 229 [ D.12395 ]) 0))) nscd_conf.c:165 -1
     (nil))
(insn 555 554 556 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 229 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:165 -1
     (nil))
(jump_insn 556 555 557 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) nscd_conf.c:165 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 587)
(note 557 556 558 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 93 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:167 -1
     (nil))
(call_insn 559 558 560 93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 560 559 561 93 (set (reg/v:SI 230 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:167 -1
     (nil))
(insn 561 560 562 93 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 230 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:168 -1
     (nil))
(jump_insn 562 561 563 93 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:168 612 {*jcc_1}
     (int_list:REG_BR_PROB 4752 (nil))
 -> 1079)
(note 563 562 564 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 94 (set (reg:DI 531 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 230 [ idx ]))) nscd_conf.c:169 -1
     (nil))
(insn 565 564 566 94 (set (reg:DI 532)
        (reg:DI 531 [ D.12399 ])) nscd_conf.c:169 -1
     (nil))
(insn 566 565 567 94 (parallel [
            (set (reg:DI 533)
                (ashift:DI (reg:DI 532)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (nil))
(insn 567 566 568 94 (parallel [
            (set (reg:DI 534)
                (plus:DI (reg:DI 533)
                    (reg:DI 531 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 531 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 568 567 569 94 (parallel [
            (set (reg:DI 535)
                (ashift:DI (reg:DI 534)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (nil))
(insn 569 568 570 94 (parallel [
            (set (reg:DI 536 [ D.12399 ])
                (plus:DI (reg:DI 535)
                    (reg:DI 531 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 531 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 570 569 571 94 (parallel [
            (set (reg:DI 537)
                (ashift:DI (reg:DI 536 [ D.12399 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (nil))
(insn 571 570 572 94 (set (reg:DI 536 [ D.12399 ])
        (reg:DI 537)) nscd_conf.c:169 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 531 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 572 571 573 94 (parallel [
            (set (reg/f:DI 233 [ D.12405 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 536 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:169 -1
     (nil))
(insn 573 572 574 94 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 574 573 575 94 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 575 574 576 94 (set (reg:DI 5 di)
        (reg/v/f:DI 112 [ __s2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 576 575 577 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 577 576 578 94 (set (reg:DI 333 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 578 577 579 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 333 [ D.12404 ])
            (const_int 0 [0]))) nscd_conf.c:169 -1
     (nil))
(jump_insn 579 578 580 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1228)
            (pc))) nscd_conf.c:169 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1228)
(note 580 579 581 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 1225 95 (set (reg:DI 117 [ D.12397 ])
        (reg:DI 333 [ D.12404 ])) nscd_conf.c:169 -1
     (nil))
(jump_insn 1225 581 1226 95 (set (pc)
        (label_ref 582)) -1
     (nil)
 -> 582)
(barrier 1226 1225 1228)
(code_label 1228 1226 1227 96 80 "" [1 uses])
(note 1227 1228 38 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 38 1227 582 96 (set (reg:DI 117 [ D.12397 ])
        (const_int 33554432 [0x2000000])) nscd_conf.c:169 -1
     (nil))
(code_label 582 38 583 97 46 "" [1 uses])
(note 583 582 584 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 97 (set (mem:DI (plus:DI (reg/f:DI 233 [ D.12405 ])
                (const_int 240 [0xf0])) [4 _215->max_db_size+0 S8 A64])
        (reg:DI 117 [ D.12397 ])) nscd_conf.c:169 -1
     (nil))
(jump_insn 585 584 586 97 (set (pc)
        (label_ref 1079)) nscd_conf.c:169 -1
     (nil)
 -> 1079)
(barrier 586 585 587)
(code_label 587 586 588 98 45 "" [1 uses])
(note 588 587 589 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 98 (set (reg/f:DI 538)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b4436181ab0 *.LC11>)) nscd_conf.c:171 -1
     (nil))
(insn 590 589 591 98 (set (reg:DI 539)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:171 -1
     (nil))
(insn 591 590 592 98 (set (reg:DI 540)
        (reg/f:DI 538)) nscd_conf.c:171 -1
     (nil))
(insn 592 591 593 98 (set (reg:DI 541)
        (const_int 8 [0x8])) nscd_conf.c:171 -1
     (nil))
(insn 593 592 594 98 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 539) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 540) [0 MEM[(void *)"logfile"]+0 A8])))
            (use (reg:DI 541))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 539))
            (clobber (reg:DI 540))
            (clobber (reg:DI 541))
        ]) nscd_conf.c:171 -1
     (nil))
(insn 594 593 595 98 (set (reg:QI 542)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:171 -1
     (nil))
(insn 595 594 596 98 (set (reg:QI 543)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:171 -1
     (nil))
(insn 596 595 597 98 (parallel [
            (set (subreg:QI (reg:SI 234 [ D.12395 ]) 0)
                (minus:QI (reg:QI 542)
                    (reg:QI 543)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:171 -1
     (nil))
(insn 597 596 598 98 (set (reg:SI 234 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 234 [ D.12395 ]) 0))) nscd_conf.c:171 -1
     (nil))
(insn 598 597 599 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 234 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:171 -1
     (nil))
(jump_insn 599 598 600 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 605)
            (pc))) nscd_conf.c:171 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 605)
(note 600 599 601 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 99 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:172 -1
     (nil))
(call_insn 602 601 603 99 (call (mem:QI (symbol_ref:DI ("set_logfile") [flags 0x41]  <function_decl 0x2b4435d5b870 set_logfile>) [0 set_logfile S1 A8])
        (const_int 0 [0])) nscd_conf.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("set_logfile") [flags 0x41]  <function_decl 0x2b4435d5b870 set_logfile>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 603 602 604 99 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 604 603 605)
(code_label 605 604 606 100 47 "" [1 uses])
(note 606 605 607 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 607 606 608 100 (set (reg/f:DI 544)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2b4436181b40 *.LC12>)) nscd_conf.c:173 -1
     (nil))
(insn 608 607 609 100 (set (reg:DI 545)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:173 -1
     (nil))
(insn 609 608 610 100 (set (reg:DI 546)
        (reg/f:DI 544)) nscd_conf.c:173 -1
     (nil))
(insn 610 609 611 100 (set (reg:DI 547)
        (const_int 12 [0xc])) nscd_conf.c:173 -1
     (nil))
(insn 611 610 612 100 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 545) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 546) [0 MEM[(void *)"debug-level"]+0 A8])))
            (use (reg:DI 547))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 545))
            (clobber (reg:DI 546))
            (clobber (reg:DI 547))
        ]) nscd_conf.c:173 -1
     (nil))
(insn 612 611 613 100 (set (reg:QI 548)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:173 -1
     (nil))
(insn 613 612 614 100 (set (reg:QI 549)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:173 -1
     (nil))
(insn 614 613 615 100 (parallel [
            (set (subreg:QI (reg:SI 235 [ D.12395 ]) 0)
                (minus:QI (reg:QI 548)
                    (reg:QI 549)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:173 -1
     (nil))
(insn 615 614 616 100 (set (reg:SI 235 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 235 [ D.12395 ]) 0))) nscd_conf.c:173 -1
     (nil))
(insn 616 615 617 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 235 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:173 -1
     (nil))
(jump_insn 617 616 618 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) nscd_conf.c:173 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 631)
(note 618 617 619 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 101 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 620 619 621 101 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 621 620 622 101 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:241 -1
     (nil))
(call_insn 622 621 623 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:241 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 623 622 624 101 (set (reg:DI 334 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 624 623 625 101 (set (reg:SI 335 [ D.12395 ])
        (subreg:SI (reg:DI 334 [ D.12404 ]) 0)) ../stdlib/stdlib.h:241 -1
     (nil))
(insn 625 624 626 101 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 335 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:176 -1
     (nil))
(jump_insn 626 625 627 101 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:176 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 627 626 628 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 102 (set (mem/c:SI (symbol_ref:DI ("debug_level") [flags 0x40]  <var_decl 0x2b4435d27630 debug_level>) [2 debug_level+0 S4 A32])
        (reg:SI 335 [ D.12395 ])) nscd_conf.c:177 -1
     (nil))
(jump_insn 629 628 630 102 (set (pc)
        (label_ref 1079)) nscd_conf.c:177 -1
     (nil)
 -> 1079)
(barrier 630 629 631)
(code_label 631 630 632 103 48 "" [1 uses])
(note 632 631 633 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 103 (set (reg/f:DI 550)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b4436181bd0 *.LC13>)) nscd_conf.c:179 -1
     (nil))
(insn 634 633 635 103 (set (reg:DI 551)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:179 -1
     (nil))
(insn 635 634 636 103 (set (reg:DI 552)
        (reg/f:DI 550)) nscd_conf.c:179 -1
     (nil))
(insn 636 635 637 103 (set (reg:DI 553)
        (const_int 8 [0x8])) nscd_conf.c:179 -1
     (nil))
(insn 637 636 638 103 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 551) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 552) [0 MEM[(void *)"threads"]+0 A8])))
            (use (reg:DI 553))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 551))
            (clobber (reg:DI 552))
            (clobber (reg:DI 553))
        ]) nscd_conf.c:179 -1
     (nil))
(insn 638 637 639 103 (set (reg:QI 554)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:179 -1
     (nil))
(insn 639 638 640 103 (set (reg:QI 555)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:179 -1
     (nil))
(insn 640 639 641 103 (parallel [
            (set (subreg:QI (reg:SI 236 [ D.12395 ]) 0)
                (minus:QI (reg:QI 554)
                    (reg:QI 555)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:179 -1
     (nil))
(insn 641 640 642 103 (set (reg:SI 236 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 236 [ D.12395 ]) 0))) nscd_conf.c:179 -1
     (nil))
(insn 642 641 643 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 236 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:179 -1
     (nil))
(jump_insn 643 642 644 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) nscd_conf.c:179 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 667)
(note 644 643 645 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("nthreads") [flags 0x40]  <var_decl 0x2b4435f18480 nthreads>) [2 nthreads+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) nscd_conf.c:181 -1
     (nil))
(jump_insn 646 645 647 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:181 612 {*jcc_1}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 1079)
(note 647 646 648 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 105 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 649 648 650 105 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 650 649 651 105 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 651 650 652 105 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 652 651 653 105 (set (reg:DI 336 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 653 652 654 105 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 336 [ D.12404 ])
            (const_int 5 [0x5]))) nscd_conf.c:182 -1
     (nil))
(jump_insn 654 653 655 105 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1232)
            (pc))) nscd_conf.c:182 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1232)
(note 655 654 656 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 106 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 657 656 658 106 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 658 657 659 106 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 659 658 660 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 660 659 661 106 (set (reg:DI 337 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 661 660 1229 106 (set (reg:SI 118 [ D.12395 ])
        (subreg:SI (reg:DI 337 [ D.12404 ]) 0)) nscd_conf.c:182 -1
     (nil))
(jump_insn 1229 661 1230 106 (set (pc)
        (label_ref 662)) -1
     (nil)
 -> 662)
(barrier 1230 1229 1232)
(code_label 1232 1230 1231 107 81 "" [1 uses])
(note 1231 1232 39 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 39 1231 662 107 (set (reg:SI 118 [ D.12395 ])
        (const_int 5 [0x5])) nscd_conf.c:182 -1
     (nil))
(code_label 662 39 663 108 50 "" [1 uses])
(note 663 662 664 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 108 (set (mem/c:SI (symbol_ref:DI ("nthreads") [flags 0x40]  <var_decl 0x2b4435f18480 nthreads>) [2 nthreads+0 S4 A32])
        (reg:SI 118 [ D.12395 ])) nscd_conf.c:182 -1
     (nil))
(jump_insn 665 664 666 108 (set (pc)
        (label_ref 1079)) nscd_conf.c:182 -1
     (nil)
 -> 1079)
(barrier 666 665 667)
(code_label 667 666 668 109 49 "" [1 uses])
(note 668 667 669 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 669 668 670 109 (set (reg/f:DI 556)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b4436181c60 *.LC14>)) nscd_conf.c:184 -1
     (nil))
(insn 670 669 671 109 (set (reg:DI 557)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:184 -1
     (nil))
(insn 671 670 672 109 (set (reg:DI 558)
        (reg/f:DI 556)) nscd_conf.c:184 -1
     (nil))
(insn 672 671 673 109 (set (reg:DI 559)
        (const_int 12 [0xc])) nscd_conf.c:184 -1
     (nil))
(insn 673 672 674 109 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 557) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 558) [0 MEM[(void *)"max-threads"]+0 A8])))
            (use (reg:DI 559))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 557))
            (clobber (reg:DI 558))
            (clobber (reg:DI 559))
        ]) nscd_conf.c:184 -1
     (nil))
(insn 674 673 675 109 (set (reg:QI 560)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:184 -1
     (nil))
(insn 675 674 676 109 (set (reg:QI 561)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:184 -1
     (nil))
(insn 676 675 677 109 (parallel [
            (set (subreg:QI (reg:SI 238 [ D.12395 ]) 0)
                (minus:QI (reg:QI 560)
                    (reg:QI 561)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:184 -1
     (nil))
(insn 677 676 678 109 (set (reg:SI 238 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 238 [ D.12395 ]) 0))) nscd_conf.c:184 -1
     (nil))
(insn 678 677 679 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 238 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:184 -1
     (nil))
(jump_insn 679 678 680 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 700)
            (pc))) nscd_conf.c:184 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 700)
(note 680 679 681 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 110 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 682 681 683 110 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 683 682 684 110 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 684 683 685 110 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 685 684 686 110 (set (reg:DI 338 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 686 685 687 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 338 [ D.12404 ])
            (const_int 5 [0x5]))) nscd_conf.c:186 -1
     (nil))
(jump_insn 687 686 688 110 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1236)
            (pc))) nscd_conf.c:186 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1236)
(note 688 687 689 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 111 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 690 689 691 111 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 691 690 692 111 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 692 691 693 111 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 693 692 694 111 (set (reg:DI 339 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 694 693 1233 111 (set (reg:SI 119 [ D.12395 ])
        (subreg:SI (reg:DI 339 [ D.12404 ]) 0)) nscd_conf.c:186 -1
     (nil))
(jump_insn 1233 694 1234 111 (set (pc)
        (label_ref 695)) -1
     (nil)
 -> 695)
(barrier 1234 1233 1236)
(code_label 1236 1234 1235 112 82 "" [1 uses])
(note 1235 1236 40 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 40 1235 695 112 (set (reg:SI 119 [ D.12395 ])
        (const_int 5 [0x5])) nscd_conf.c:186 -1
     (nil))
(code_label 695 40 696 113 52 "" [1 uses])
(note 696 695 697 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 697 696 698 113 (set (mem/c:SI (symbol_ref:DI ("max_nthreads") [flags 0x40]  <var_decl 0x2b4435f18510 max_nthreads>) [2 max_nthreads+0 S4 A32])
        (reg:SI 119 [ D.12395 ])) nscd_conf.c:186 -1
     (nil))
(jump_insn 698 697 699 113 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 699 698 700)
(code_label 700 699 701 114 51 "" [1 uses])
(note 701 700 702 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 114 (set (reg/f:DI 562)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b4436181cf0 *.LC15>)) nscd_conf.c:188 -1
     (nil))
(insn 703 702 704 114 (set (reg:DI 563)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:188 -1
     (nil))
(insn 704 703 705 114 (set (reg:DI 564)
        (reg/f:DI 562)) nscd_conf.c:188 -1
     (nil))
(insn 705 704 706 114 (set (reg:DI 565)
        (const_int 12 [0xc])) nscd_conf.c:188 -1
     (nil))
(insn 706 705 707 114 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 563) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 564) [0 MEM[(void *)"server-user"]+0 A8])))
            (use (reg:DI 565))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 563))
            (clobber (reg:DI 564))
            (clobber (reg:DI 565))
        ]) nscd_conf.c:188 -1
     (nil))
(insn 707 706 708 114 (set (reg:QI 566)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:188 -1
     (nil))
(insn 708 707 709 114 (set (reg:QI 567)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:188 -1
     (nil))
(insn 709 708 710 114 (parallel [
            (set (subreg:QI (reg:SI 239 [ D.12395 ]) 0)
                (minus:QI (reg:QI 566)
                    (reg:QI 567)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:188 -1
     (nil))
(insn 710 709 711 114 (set (reg:SI 239 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 239 [ D.12395 ]) 0))) nscd_conf.c:188 -1
     (nil))
(insn 711 710 712 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 239 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:188 -1
     (nil))
(jump_insn 712 711 713 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) nscd_conf.c:188 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 721)
(note 713 712 714 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 714 713 715 115 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:193 -1
     (nil))
(call_insn 715 714 716 115 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2b4435f0fa20 xstrdup>) [0 xstrdup S1 A8])
            (const_int 0 [0]))) nscd_conf.c:193 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2b4435f0fa20 xstrdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 716 715 717 115 (set (reg/f:DI 568)
        (reg:DI 0 ax)) nscd_conf.c:193 -1
     (expr_list:REG_NOALIAS (reg/f:DI 568)
        (nil)))
(insn 717 716 718 115 (set (reg/f:DI 240 [ D.12400 ])
        (reg/f:DI 568)) nscd_conf.c:193 -1
     (nil))
(insn 718 717 719 115 (set (mem/f/c:DI (symbol_ref:DI ("server_user") [flags 0x40]  <var_decl 0x2b4435f18630 server_user>) [3 server_user+0 S8 A64])
        (reg/f:DI 240 [ D.12400 ])) nscd_conf.c:193 -1
     (nil))
(jump_insn 719 718 720 115 (set (pc)
        (label_ref 1079)) nscd_conf.c:193 -1
     (nil)
 -> 1079)
(barrier 720 719 721)
(code_label 721 720 722 116 53 "" [1 uses])
(note 722 721 723 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 116 (set (reg/f:DI 569)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b4436181d80 *.LC16>)) nscd_conf.c:195 -1
     (nil))
(insn 724 723 725 116 (set (reg:DI 570)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:195 -1
     (nil))
(insn 725 724 726 116 (set (reg:DI 571)
        (reg/f:DI 569)) nscd_conf.c:195 -1
     (nil))
(insn 726 725 727 116 (set (reg:DI 572)
        (const_int 10 [0xa])) nscd_conf.c:195 -1
     (nil))
(insn 727 726 728 116 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 570) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 571) [0 MEM[(void *)"stat-user"]+0 A8])))
            (use (reg:DI 572))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 570))
            (clobber (reg:DI 571))
            (clobber (reg:DI 572))
        ]) nscd_conf.c:195 -1
     (nil))
(insn 728 727 729 116 (set (reg:QI 573)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:195 -1
     (nil))
(insn 729 728 730 116 (set (reg:QI 574)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:195 -1
     (nil))
(insn 730 729 731 116 (parallel [
            (set (subreg:QI (reg:SI 241 [ D.12395 ]) 0)
                (minus:QI (reg:QI 573)
                    (reg:QI 574)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:195 -1
     (nil))
(insn 731 730 732 116 (set (reg:SI 241 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 241 [ D.12395 ]) 0))) nscd_conf.c:195 -1
     (nil))
(insn 732 731 733 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 241 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:195 -1
     (nil))
(jump_insn 733 732 734 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 750)
            (pc))) nscd_conf.c:195 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 750)
(note 734 733 735 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 736 117 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:201 -1
     (nil))
(call_insn 736 735 737 117 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2b4435f0fa20 xstrdup>) [0 xstrdup S1 A8])
            (const_int 0 [0]))) nscd_conf.c:201 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2b4435f0fa20 xstrdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 737 736 738 117 (set (reg/f:DI 575)
        (reg:DI 0 ax)) nscd_conf.c:201 -1
     (expr_list:REG_NOALIAS (reg/f:DI 575)
        (nil)))
(insn 738 737 739 117 (set (reg/f:DI 242 [ D.12400 ])
        (reg/f:DI 575)) nscd_conf.c:201 -1
     (nil))
(insn 739 738 740 117 (set (mem/f/c:DI (symbol_ref:DI ("stat_user") [flags 0x40]  <var_decl 0x2b4435f186c0 stat_user>) [3 stat_user+0 S8 A64])
        (reg/f:DI 242 [ D.12400 ])) nscd_conf.c:201 -1
     (nil))
(insn 740 739 741 117 (set (reg:DI 5 di)
        (reg/f:DI 242 [ D.12400 ])) nscd_conf.c:203 -1
     (nil))
(call_insn 741 740 742 117 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwnam") [flags 0x41]  <function_decl 0x2b4435b11a20 getpwnam>) [0 getpwnam S1 A8])
            (const_int 0 [0]))) nscd_conf.c:203 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwnam") [flags 0x41]  <function_decl 0x2b4435b11a20 getpwnam>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 742 741 743 117 (set (reg/v/f:DI 243 [ pw ])
        (reg:DI 0 ax)) nscd_conf.c:203 -1
     (nil))
(insn 743 742 744 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 243 [ pw ])
            (const_int 0 [0]))) nscd_conf.c:204 -1
     (nil))
(jump_insn 744 743 745 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:204 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1079)
(note 745 744 746 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 118 (set (reg:SI 576)
        (mem:SI (plus:DI (reg/v/f:DI 243 [ pw ])
                (const_int 16 [0x10])) [2 pw_240->pw_uid+0 S4 A64])) nscd_conf.c:205 -1
     (nil))
(insn 747 746 748 118 (set (mem/c:SI (symbol_ref:DI ("stat_uid") [flags 0x40]  <var_decl 0x2b4435f18750 stat_uid>) [2 stat_uid+0 S4 A32])
        (reg:SI 576)) nscd_conf.c:205 -1
     (nil))
(jump_insn 748 747 749 118 (set (pc)
        (label_ref 1079)) nscd_conf.c:205 -1
     (nil)
 -> 1079)
(barrier 749 748 750)
(code_label 750 749 751 119 54 "" [1 uses])
(note 751 750 752 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 752 751 753 119 (set (reg/f:DI 577)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b4436181e10 *.LC17>)) nscd_conf.c:208 -1
     (nil))
(insn 753 752 754 119 (set (reg:DI 578)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:208 -1
     (nil))
(insn 754 753 755 119 (set (reg:DI 579)
        (reg/f:DI 577)) nscd_conf.c:208 -1
     (nil))
(insn 755 754 756 119 (set (reg:DI 580)
        (const_int 11 [0xb])) nscd_conf.c:208 -1
     (nil))
(insn 756 755 757 119 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 578) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 579) [0 MEM[(void *)"persistent"]+0 A8])))
            (use (reg:DI 580))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 578))
            (clobber (reg:DI 579))
            (clobber (reg:DI 580))
        ]) nscd_conf.c:208 -1
     (nil))
(insn 757 756 758 119 (set (reg:QI 581)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:208 -1
     (nil))
(insn 758 757 759 119 (set (reg:QI 582)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:208 -1
     (nil))
(insn 759 758 760 119 (parallel [
            (set (subreg:QI (reg:SI 246 [ D.12395 ]) 0)
                (minus:QI (reg:QI 581)
                    (reg:QI 582)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:208 -1
     (nil))
(insn 760 759 761 119 (set (reg:SI 246 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 246 [ D.12395 ]) 0))) nscd_conf.c:208 -1
     (nil))
(insn 761 760 762 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 246 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:208 -1
     (nil))
(jump_insn 762 761 763 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 820)
            (pc))) nscd_conf.c:208 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 820)
(note 763 762 764 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 765 120 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:210 -1
     (nil))
(call_insn 765 764 766 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:210 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 766 765 767 120 (set (reg/v:SI 247 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:210 -1
     (nil))
(insn 767 766 768 120 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 247 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:211 -1
     (nil))
(jump_insn 768 767 769 120 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:211 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 769 768 770 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 770 769 771 121 (set (reg:SI 249 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 *__s2_7+0 S1 A8]))) nscd_conf.c:213 -1
     (nil))
(insn 771 770 772 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 249 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:213 -1
     (nil))
(jump_insn 772 771 773 121 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 793)
            (pc))) nscd_conf.c:213 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 793)
(note 773 772 774 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 775 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:213 -1
     (nil))
(jump_insn 775 774 776 122 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:213 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 776 775 777 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:213 -1
     (nil))
(jump_insn 778 777 779 123 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:213 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 779 778 780 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 124 (set (reg:DI 583 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 247 [ idx ]))) nscd_conf.c:214 -1
     (nil))
(insn 781 780 782 124 (set (reg:DI 585)
        (reg:DI 583 [ D.12399 ])) nscd_conf.c:214 -1
     (nil))
(insn 782 781 783 124 (parallel [
            (set (reg:DI 586)
                (ashift:DI (reg:DI 585)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (nil))
(insn 783 782 784 124 (parallel [
            (set (reg:DI 587)
                (plus:DI (reg:DI 586)
                    (reg:DI 583 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 583 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 784 783 785 124 (parallel [
            (set (reg:DI 588)
                (ashift:DI (reg:DI 587)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (nil))
(insn 785 784 786 124 (parallel [
            (set (reg:DI 589)
                (plus:DI (reg:DI 588)
                    (reg:DI 583 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 583 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 786 785 787 124 (parallel [
            (set (reg:DI 590)
                (ashift:DI (reg:DI 589)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (nil))
(insn 787 786 788 124 (set (reg:DI 589)
        (reg:DI 590)) nscd_conf.c:214 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 583 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 788 787 789 124 (set (reg:DI 584)
        (reg:DI 589)) nscd_conf.c:214 -1
     (nil))
(insn 789 788 790 124 (parallel [
            (set (reg/f:DI 591)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 584)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:214 -1
     (nil))
(insn 790 789 791 124 (set (mem:SI (plus:DI (reg/f:DI 591)
                (const_int 204 [0xcc])) [2 _260->persistent+0 S4 A32])
        (const_int 0 [0])) nscd_conf.c:214 -1
     (nil))
(jump_insn 791 790 792 124 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 792 791 793)
(code_label 793 792 794 125 56 "" [1 uses])
(note 794 793 795 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 795 794 796 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 249 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:215 -1
     (nil))
(jump_insn 796 795 797 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:215 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 797 796 798 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:215 -1
     (nil))
(jump_insn 799 798 800 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:215 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 800 799 801 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 801 800 802 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:215 -1
     (nil))
(jump_insn 802 801 803 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:215 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 803 802 804 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 804 803 805 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)__s2_7 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:215 -1
     (nil))
(jump_insn 805 804 806 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:215 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 806 805 807 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 129 (set (reg:DI 592 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 247 [ idx ]))) nscd_conf.c:216 -1
     (nil))
(insn 808 807 809 129 (set (reg:DI 594)
        (reg:DI 592 [ D.12399 ])) nscd_conf.c:216 -1
     (nil))
(insn 809 808 810 129 (parallel [
            (set (reg:DI 595)
                (ashift:DI (reg:DI 594)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (nil))
(insn 810 809 811 129 (parallel [
            (set (reg:DI 596)
                (plus:DI (reg:DI 595)
                    (reg:DI 592 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 592 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 811 810 812 129 (parallel [
            (set (reg:DI 597)
                (ashift:DI (reg:DI 596)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (nil))
(insn 812 811 813 129 (parallel [
            (set (reg:DI 598)
                (plus:DI (reg:DI 597)
                    (reg:DI 592 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 592 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 813 812 814 129 (parallel [
            (set (reg:DI 599)
                (ashift:DI (reg:DI 598)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (nil))
(insn 814 813 815 129 (set (reg:DI 598)
        (reg:DI 599)) nscd_conf.c:216 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 592 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 815 814 816 129 (set (reg:DI 593)
        (reg:DI 598)) nscd_conf.c:216 -1
     (nil))
(insn 816 815 817 129 (parallel [
            (set (reg/f:DI 600)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 593)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:216 -1
     (nil))
(insn 817 816 818 129 (set (mem:SI (plus:DI (reg/f:DI 600)
                (const_int 204 [0xcc])) [2 _274->persistent+0 S4 A32])
        (const_int 1 [0x1])) nscd_conf.c:216 -1
     (nil))
(jump_insn 818 817 819 129 (set (pc)
        (label_ref 1079)) nscd_conf.c:216 -1
     (nil)
 -> 1079)
(barrier 819 818 820)
(code_label 820 819 821 130 55 "" [1 uses])
(note 821 820 822 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 822 821 823 130 (set (reg/f:DI 601)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b4436181ea0 *.LC18>)) nscd_conf.c:219 -1
     (nil))
(insn 823 822 824 130 (set (reg:DI 602)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:219 -1
     (nil))
(insn 824 823 825 130 (set (reg:DI 603)
        (reg/f:DI 601)) nscd_conf.c:219 -1
     (nil))
(insn 825 824 826 130 (set (reg:DI 604)
        (const_int 7 [0x7])) nscd_conf.c:219 -1
     (nil))
(insn 826 825 827 130 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 602) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 603) [0 MEM[(void *)"shared"]+0 A8])))
            (use (reg:DI 604))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 602))
            (clobber (reg:DI 603))
            (clobber (reg:DI 604))
        ]) nscd_conf.c:219 -1
     (nil))
(insn 827 826 828 130 (set (reg:QI 605)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:219 -1
     (nil))
(insn 828 827 829 130 (set (reg:QI 606)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:219 -1
     (nil))
(insn 829 828 830 130 (parallel [
            (set (subreg:QI (reg:SI 261 [ D.12395 ]) 0)
                (minus:QI (reg:QI 605)
                    (reg:QI 606)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:219 -1
     (nil))
(insn 830 829 831 130 (set (reg:SI 261 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 261 [ D.12395 ]) 0))) nscd_conf.c:219 -1
     (nil))
(insn 831 830 832 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 261 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:219 -1
     (nil))
(jump_insn 832 831 833 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 890)
            (pc))) nscd_conf.c:219 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 890)
(note 833 832 834 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 834 833 835 131 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:221 -1
     (nil))
(call_insn 835 834 836 131 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:221 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 836 835 837 131 (set (reg/v:SI 262 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:221 -1
     (nil))
(insn 837 836 838 131 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 262 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:222 -1
     (nil))
(jump_insn 838 837 839 131 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:222 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 839 838 840 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 132 (set (reg:SI 264 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 *__s2_7+0 S1 A8]))) nscd_conf.c:224 -1
     (nil))
(insn 841 840 842 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 264 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:224 -1
     (nil))
(jump_insn 842 841 843 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 863)
            (pc))) nscd_conf.c:224 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 863)
(note 843 842 844 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 844 843 845 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:224 -1
     (nil))
(jump_insn 845 844 846 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:224 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 846 845 847 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:224 -1
     (nil))
(jump_insn 848 847 849 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:224 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 849 848 850 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 850 849 851 135 (set (reg:DI 607 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 262 [ idx ]))) nscd_conf.c:225 -1
     (nil))
(insn 851 850 852 135 (set (reg:DI 609)
        (reg:DI 607 [ D.12399 ])) nscd_conf.c:225 -1
     (nil))
(insn 852 851 853 135 (parallel [
            (set (reg:DI 610)
                (ashift:DI (reg:DI 609)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (nil))
(insn 853 852 854 135 (parallel [
            (set (reg:DI 611)
                (plus:DI (reg:DI 610)
                    (reg:DI 607 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 607 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 854 853 855 135 (parallel [
            (set (reg:DI 612)
                (ashift:DI (reg:DI 611)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (nil))
(insn 855 854 856 135 (parallel [
            (set (reg:DI 613)
                (plus:DI (reg:DI 612)
                    (reg:DI 607 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 607 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 856 855 857 135 (parallel [
            (set (reg:DI 614)
                (ashift:DI (reg:DI 613)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (nil))
(insn 857 856 858 135 (set (reg:DI 613)
        (reg:DI 614)) nscd_conf.c:225 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 607 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 858 857 859 135 (set (reg:DI 608)
        (reg:DI 613)) nscd_conf.c:225 -1
     (nil))
(insn 859 858 860 135 (parallel [
            (set (reg/f:DI 615)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 608)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:225 -1
     (nil))
(insn 860 859 861 135 (set (mem:SI (plus:DI (reg/f:DI 615)
                (const_int 208 [0xd0])) [2 _290->shared+0 S4 A64])
        (const_int 0 [0])) nscd_conf.c:225 -1
     (nil))
(jump_insn 861 860 862 135 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 862 861 863)
(code_label 863 862 864 136 58 "" [1 uses])
(note 864 863 865 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 264 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:226 -1
     (nil))
(jump_insn 866 865 867 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:226 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 867 866 868 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 868 867 869 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:226 -1
     (nil))
(jump_insn 869 868 870 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:226 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 870 869 871 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 871 870 872 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:226 -1
     (nil))
(jump_insn 872 871 873 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:226 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 873 872 874 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 875 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)__s2_7 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:226 -1
     (nil))
(jump_insn 875 874 876 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:226 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 876 875 877 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 140 (set (reg:DI 616 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 262 [ idx ]))) nscd_conf.c:227 -1
     (nil))
(insn 878 877 879 140 (set (reg:DI 618)
        (reg:DI 616 [ D.12399 ])) nscd_conf.c:227 -1
     (nil))
(insn 879 878 880 140 (parallel [
            (set (reg:DI 619)
                (ashift:DI (reg:DI 618)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (nil))
(insn 880 879 881 140 (parallel [
            (set (reg:DI 620)
                (plus:DI (reg:DI 619)
                    (reg:DI 616 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 616 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 881 880 882 140 (parallel [
            (set (reg:DI 621)
                (ashift:DI (reg:DI 620)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (nil))
(insn 882 881 883 140 (parallel [
            (set (reg:DI 622)
                (plus:DI (reg:DI 621)
                    (reg:DI 616 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 616 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 883 882 884 140 (parallel [
            (set (reg:DI 623)
                (ashift:DI (reg:DI 622)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (nil))
(insn 884 883 885 140 (set (reg:DI 622)
        (reg:DI 623)) nscd_conf.c:227 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 616 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 885 884 886 140 (set (reg:DI 617)
        (reg:DI 622)) nscd_conf.c:227 -1
     (nil))
(insn 886 885 887 140 (parallel [
            (set (reg/f:DI 624)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 617)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:227 -1
     (nil))
(insn 887 886 888 140 (set (mem:SI (plus:DI (reg/f:DI 624)
                (const_int 208 [0xd0])) [2 _304->shared+0 S4 A64])
        (const_int 1 [0x1])) nscd_conf.c:227 -1
     (nil))
(jump_insn 888 887 889 140 (set (pc)
        (label_ref 1079)) nscd_conf.c:227 -1
     (nil)
 -> 1079)
(barrier 889 888 890)
(code_label 890 889 891 141 57 "" [1 uses])
(note 891 890 892 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 892 891 893 141 (set (reg/f:DI 625)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b4436181f30 *.LC19>)) nscd_conf.c:230 -1
     (nil))
(insn 893 892 894 141 (set (reg:DI 626)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:230 -1
     (nil))
(insn 894 893 895 141 (set (reg:DI 627)
        (reg/f:DI 625)) nscd_conf.c:230 -1
     (nil))
(insn 895 894 896 141 (set (reg:DI 628)
        (const_int 13 [0xd])) nscd_conf.c:230 -1
     (nil))
(insn 896 895 897 141 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 626) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 627) [0 MEM[(void *)"reload-count"]+0 A8])))
            (use (reg:DI 628))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 626))
            (clobber (reg:DI 627))
            (clobber (reg:DI 628))
        ]) nscd_conf.c:230 -1
     (nil))
(insn 897 896 898 141 (set (reg:QI 629)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:230 -1
     (nil))
(insn 898 897 899 141 (set (reg:QI 630)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:230 -1
     (nil))
(insn 899 898 900 141 (parallel [
            (set (subreg:QI (reg:SI 276 [ D.12395 ]) 0)
                (minus:QI (reg:QI 629)
                    (reg:QI 630)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:230 -1
     (nil))
(insn 900 899 901 141 (set (reg:SI 276 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 276 [ D.12395 ]) 0))) nscd_conf.c:230 -1
     (nil))
(insn 901 900 902 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 276 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:230 -1
     (nil))
(jump_insn 902 901 903 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 928)
            (pc))) nscd_conf.c:230 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 928)
(note 903 902 904 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 904 903 905 142 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b44361aa000 *.LC20>)) nscd_conf.c:232 -1
     (nil))
(insn 905 904 906 142 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:232 -1
     (nil))
(call_insn/i 906 905 907 142 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b443595aaf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) nscd_conf.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b443595aaf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 907 906 908 142 (set (reg:SI 277 [ D.12395 ])
        (reg:SI 0 ax)) nscd_conf.c:232 -1
     (nil))
(insn 908 907 909 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 277 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:232 -1
     (nil))
(jump_insn 909 908 921 142 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 914)
            (pc))) nscd_conf.c:232 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 914)
(code_label 921 909 910 143 61 "" [1 uses])
(note 910 921 911 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 143 (set (mem/c:SI (symbol_ref:DI ("reload_count") [flags 0x40]  <var_decl 0x2b4435f18990 reload_count>) [2 reload_count+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nscd_conf.c:233 -1
     (nil))
(jump_insn 912 911 913 143 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 913 912 914)
(code_label 914 913 915 144 60 "" [1 uses])
(note 915 914 916 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 916 915 917 144 (set (reg:SI 1 dx)
        (const_int 0 [0])) nscd_conf.c:236 -1
     (nil))
(insn 917 916 918 144 (set (reg:DI 4 si)
        (const_int 0 [0])) nscd_conf.c:236 -1
     (nil))
(insn 918 917 919 144 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:236 -1
     (nil))
(call_insn 919 918 920 144 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2b4435b3c6c0 strtoul>) [0 strtoul S1 A8])
            (const_int 0 [0]))) nscd_conf.c:236 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2b4435b3c6c0 strtoul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 920 919 922 144 (set (reg/v:DI 278 [ count ])
        (reg:DI 0 ax)) nscd_conf.c:236 -1
     (nil))
(insn 922 920 923 144 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 278 [ count ])
            (const_int 254 [0xfe]))) nscd_conf.c:237 -1
     (nil))
(jump_insn 923 922 924 144 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 921)
            (pc))) nscd_conf.c:237 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 921)
(note 924 923 925 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 925 924 926 145 (set (mem/c:SI (symbol_ref:DI ("reload_count") [flags 0x40]  <var_decl 0x2b4435f18990 reload_count>) [2 reload_count+0 S4 A32])
        (subreg:SI (reg/v:DI 278 [ count ]) 0)) nscd_conf.c:240 -1
     (nil))
(jump_insn 926 925 927 145 (set (pc)
        (label_ref 1079)) nscd_conf.c:240 -1
     (nil)
 -> 1079)
(barrier 927 926 928)
(code_label 928 927 929 146 59 "" [1 uses])
(note 929 928 930 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 931 146 (set (reg/f:DI 631)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b44361aa090 *.LC21>)) nscd_conf.c:243 -1
     (nil))
(insn 931 930 932 146 (set (reg:DI 632)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:243 -1
     (nil))
(insn 932 931 933 146 (set (reg:DI 633)
        (reg/f:DI 631)) nscd_conf.c:243 -1
     (nil))
(insn 933 932 934 146 (set (reg:DI 634)
        (const_int 9 [0x9])) nscd_conf.c:243 -1
     (nil))
(insn 934 933 935 146 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 632) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 633) [0 MEM[(void *)"paranoia"]+0 A8])))
            (use (reg:DI 634))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 632))
            (clobber (reg:DI 633))
            (clobber (reg:DI 634))
        ]) nscd_conf.c:243 -1
     (nil))
(insn 935 934 936 146 (set (reg:QI 635)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:243 -1
     (nil))
(insn 936 935 937 146 (set (reg:QI 636)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:243 -1
     (nil))
(insn 937 936 938 146 (parallel [
            (set (subreg:QI (reg:SI 280 [ D.12395 ]) 0)
                (minus:QI (reg:QI 635)
                    (reg:QI 636)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:243 -1
     (nil))
(insn 938 937 939 146 (set (reg:SI 280 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 280 [ D.12395 ]) 0))) nscd_conf.c:243 -1
     (nil))
(insn 939 938 940 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 280 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:243 -1
     (nil))
(jump_insn 940 939 941 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 972)
            (pc))) nscd_conf.c:243 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 972)
(note 941 940 942 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 942 941 943 147 (set (reg:SI 282 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 161 [ arg2 ]) [0 MEM[(const unsigned char *)arg2_60]+0 S1 A8]))) nscd_conf.c:245 -1
     (nil))
(insn 943 942 944 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 282 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:245 -1
     (nil))
(jump_insn 944 943 945 147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 955)
            (pc))) nscd_conf.c:245 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 955)
(note 945 944 946 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)arg2_60 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:245 -1
     (nil))
(jump_insn 947 946 948 148 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:245 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 948 947 949 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 949 948 950 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)arg2_60 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:245 -1
     (nil))
(jump_insn 950 949 951 149 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:245 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 1079)
(note 951 950 952 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 952 951 953 150 (set (mem/c:SI (symbol_ref:DI ("paranoia") [flags 0x40]  <var_decl 0x2b4435f18ab0 paranoia>) [2 paranoia+0 S4 A32])
        (const_int 0 [0])) nscd_conf.c:246 -1
     (nil))
(jump_insn 953 952 954 150 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 954 953 955)
(code_label 955 954 956 151 63 "" [1 uses])
(note 956 955 957 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 282 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:247 -1
     (nil))
(jump_insn 958 957 959 151 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:247 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 959 958 960 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 960 959 961 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)arg2_60 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:247 -1
     (nil))
(jump_insn 961 960 962 152 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:247 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 962 961 963 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 963 962 964 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)arg2_60 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:247 -1
     (nil))
(jump_insn 964 963 965 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:247 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 965 964 966 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 966 965 967 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 161 [ arg2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)arg2_60 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:247 -1
     (nil))
(jump_insn 967 966 968 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:247 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 968 967 969 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 970 155 (set (mem/c:SI (symbol_ref:DI ("paranoia") [flags 0x40]  <var_decl 0x2b4435f18ab0 paranoia>) [2 paranoia+0 S4 A32])
        (const_int 1 [0x1])) nscd_conf.c:248 -1
     (nil))
(jump_insn 970 969 971 155 (set (pc)
        (label_ref 1079)) nscd_conf.c:248 -1
     (nil)
 -> 1079)
(barrier 971 970 972)
(code_label 972 971 973 156 62 "" [1 uses])
(note 973 972 974 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 975 156 (set (reg/f:DI 637)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b44361aa120 *.LC22>)) nscd_conf.c:250 -1
     (nil))
(insn 975 974 976 156 (set (reg:DI 638)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:250 -1
     (nil))
(insn 976 975 977 156 (set (reg:DI 639)
        (reg/f:DI 637)) nscd_conf.c:250 -1
     (nil))
(insn 977 976 978 156 (set (reg:DI 640)
        (const_int 17 [0x11])) nscd_conf.c:250 -1
     (nil))
(insn 978 977 979 156 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 638) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 639) [0 MEM[(void *)"restart-interval"]+0 A8])))
            (use (reg:DI 640))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 638))
            (clobber (reg:DI 639))
            (clobber (reg:DI 640))
        ]) nscd_conf.c:250 -1
     (nil))
(insn 979 978 980 156 (set (reg:QI 641)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:250 -1
     (nil))
(insn 980 979 981 156 (set (reg:QI 642)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:250 -1
     (nil))
(insn 981 980 982 156 (parallel [
            (set (subreg:QI (reg:SI 288 [ D.12395 ]) 0)
                (minus:QI (reg:QI 641)
                    (reg:QI 642)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:250 -1
     (nil))
(insn 982 981 983 156 (set (reg:SI 288 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 288 [ D.12395 ]) 0))) nscd_conf.c:250 -1
     (nil))
(insn 983 982 984 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 288 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:250 -1
     (nil))
(jump_insn 984 983 985 156 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 994)
            (pc))) nscd_conf.c:250 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 994)
(note 985 984 986 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 157 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 987 986 988 157 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 988 987 989 157 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 989 988 990 157 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b4435b3c5e8 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 990 989 991 157 (set (reg:DI 245 [ D.12404 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 991 990 992 157 (set (mem/c:DI (symbol_ref:DI ("restart_interval") [flags 0x40]  <var_decl 0x2b4435f18bd0 restart_interval>) [4 restart_interval+0 S8 A64])
        (reg:DI 245 [ D.12404 ])) nscd_conf.c:253 -1
     (nil))
(jump_insn 992 991 993 157 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 993 992 994)
(code_label 994 993 995 158 64 "" [1 uses])
(note 995 994 996 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 158 (set (reg/f:DI 643)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b44361aa1b0 *.LC23>)) nscd_conf.c:257 -1
     (nil))
(insn 997 996 998 158 (set (reg:DI 644)
        (reg/v/f:DI 111 [ arg1 ])) nscd_conf.c:257 -1
     (nil))
(insn 998 997 999 158 (set (reg:DI 645)
        (reg/f:DI 643)) nscd_conf.c:257 -1
     (nil))
(insn 999 998 1000 158 (set (reg:DI 646)
        (const_int 15 [0xf])) nscd_conf.c:257 -1
     (nil))
(insn 1000 999 1001 158 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem:BLK (reg:DI 644) [0 MEM[(void *)arg1_4]+0 A8])
                    (mem/u/c:BLK (reg:DI 645) [0 MEM[(void *)"auto-propagate"]+0 A8])))
            (use (reg:DI 646))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 644))
            (clobber (reg:DI 645))
            (clobber (reg:DI 646))
        ]) nscd_conf.c:257 -1
     (nil))
(insn 1001 1000 1002 158 (set (reg:QI 647)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:257 -1
     (nil))
(insn 1002 1001 1003 158 (set (reg:QI 648)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nscd_conf.c:257 -1
     (nil))
(insn 1003 1002 1004 158 (parallel [
            (set (subreg:QI (reg:SI 289 [ D.12395 ]) 0)
                (minus:QI (reg:QI 647)
                    (reg:QI 648)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:257 -1
     (nil))
(insn 1004 1003 1005 158 (set (reg:SI 289 [ D.12395 ])
        (sign_extend:SI (subreg:QI (reg:SI 289 [ D.12395 ]) 0))) nscd_conf.c:257 -1
     (nil))
(insn 1005 1004 1006 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 289 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:257 -1
     (nil))
(jump_insn 1006 1005 1007 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1064)
            (pc))) nscd_conf.c:257 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1064)
(note 1007 1006 1008 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1008 1007 1009 159 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ arg2 ])) nscd_conf.c:259 -1
     (nil))
(call_insn 1009 1008 1010 159 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>) [0 find_db S1 A8])
            (const_int 0 [0]))) nscd_conf.c:259 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("find_db") [flags 0x3]  <function_decl 0x2b4435f29438 find_db>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1010 1009 1011 159 (set (reg/v:SI 290 [ idx ])
        (reg:SI 0 ax)) nscd_conf.c:259 -1
     (nil))
(insn 1011 1010 1012 159 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 290 [ idx ])
            (const_int 0 [0]))) nscd_conf.c:260 -1
     (nil))
(jump_insn 1012 1011 1013 159 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:260 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1079)
(note 1013 1012 1014 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 160 (set (reg:SI 292 [ D.12395 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 112 [ __s2 ]) [0 *__s2_7+0 S1 A8]))) nscd_conf.c:262 -1
     (nil))
(insn 1015 1014 1016 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 292 [ D.12395 ])
            (const_int 110 [0x6e]))) nscd_conf.c:262 -1
     (nil))
(jump_insn 1016 1015 1017 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1037)
            (pc))) nscd_conf.c:262 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1037)
(note 1017 1016 1018 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1018 1017 1019 161 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 111 [0x6f]))) nscd_conf.c:262 -1
     (nil))
(jump_insn 1019 1018 1020 161 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:262 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1020 1019 1021 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1021 1020 1022 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:262 -1
     (nil))
(jump_insn 1022 1021 1023 162 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:262 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1023 1022 1024 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1024 1023 1025 163 (set (reg:DI 649 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 290 [ idx ]))) nscd_conf.c:263 -1
     (nil))
(insn 1025 1024 1026 163 (set (reg:DI 651)
        (reg:DI 649 [ D.12399 ])) nscd_conf.c:263 -1
     (nil))
(insn 1026 1025 1027 163 (parallel [
            (set (reg:DI 652)
                (ashift:DI (reg:DI 651)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (nil))
(insn 1027 1026 1028 163 (parallel [
            (set (reg:DI 653)
                (plus:DI (reg:DI 652)
                    (reg:DI 649 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 649 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 1028 1027 1029 163 (parallel [
            (set (reg:DI 654)
                (ashift:DI (reg:DI 653)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (nil))
(insn 1029 1028 1030 163 (parallel [
            (set (reg:DI 655)
                (plus:DI (reg:DI 654)
                    (reg:DI 649 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 649 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 1030 1029 1031 163 (parallel [
            (set (reg:DI 656)
                (ashift:DI (reg:DI 655)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (nil))
(insn 1031 1030 1032 163 (set (reg:DI 655)
        (reg:DI 656)) nscd_conf.c:263 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 649 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 1032 1031 1033 163 (set (reg:DI 650)
        (reg:DI 655)) nscd_conf.c:263 -1
     (nil))
(insn 1033 1032 1034 163 (parallel [
            (set (reg/f:DI 657)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 650)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:263 -1
     (nil))
(insn 1034 1033 1035 163 (set (mem:SI (plus:DI (reg/f:DI 657)
                (const_int 212 [0xd4])) [2 _354->propagate+0 S4 A32])
        (const_int 0 [0])) nscd_conf.c:263 -1
     (nil))
(jump_insn 1035 1034 1036 163 (set (pc)
        (label_ref 1079)) -1
     (nil)
 -> 1079)
(barrier 1036 1035 1037)
(code_label 1037 1036 1038 164 66 "" [1 uses])
(note 1038 1037 1039 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1039 1038 1040 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 292 [ D.12395 ])
            (const_int 121 [0x79]))) nscd_conf.c:264 -1
     (nil))
(jump_insn 1040 1039 1041 164 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:264 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1041 1040 1042 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1042 1041 1043 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)__s2_7 + 1B]+0 S1 A8])
            (const_int 101 [0x65]))) nscd_conf.c:264 -1
     (nil))
(jump_insn 1043 1042 1044 165 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:264 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1044 1043 1045 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1045 1044 1046 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 2 [0x2])) [0 MEM[(const unsigned char *)__s2_7 + 2B]+0 S1 A8])
            (const_int 115 [0x73]))) nscd_conf.c:264 -1
     (nil))
(jump_insn 1046 1045 1047 166 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:264 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1047 1046 1048 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 112 [ __s2 ])
                    (const_int 3 [0x3])) [0 MEM[(const unsigned char *)__s2_7 + 3B]+0 S1 A8])
            (const_int 0 [0]))) nscd_conf.c:264 -1
     (nil))
(jump_insn 1049 1048 1050 167 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1079)
            (pc))) nscd_conf.c:264 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1079)
(note 1050 1049 1051 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1051 1050 1052 168 (set (reg:DI 658 [ D.12399 ])
        (sign_extend:DI (reg/v:SI 290 [ idx ]))) nscd_conf.c:265 -1
     (nil))
(insn 1052 1051 1053 168 (set (reg:DI 660)
        (reg:DI 658 [ D.12399 ])) nscd_conf.c:265 -1
     (nil))
(insn 1053 1052 1054 168 (parallel [
            (set (reg:DI 661)
                (ashift:DI (reg:DI 660)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (nil))
(insn 1054 1053 1055 168 (parallel [
            (set (reg:DI 662)
                (plus:DI (reg:DI 661)
                    (reg:DI 658 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 658 [ D.12399 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 1055 1054 1056 168 (parallel [
            (set (reg:DI 663)
                (ashift:DI (reg:DI 662)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (nil))
(insn 1056 1055 1057 168 (parallel [
            (set (reg:DI 664)
                (plus:DI (reg:DI 663)
                    (reg:DI 658 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 658 [ D.12399 ])
            (const_int 11 [0xb]))
        (nil)))
(insn 1057 1056 1058 168 (parallel [
            (set (reg:DI 665)
                (ashift:DI (reg:DI 664)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (nil))
(insn 1058 1057 1059 168 (set (reg:DI 664)
        (reg:DI 665)) nscd_conf.c:265 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 658 [ D.12399 ])
            (const_int 352 [0x160]))
        (nil)))
(insn 1059 1058 1060 168 (set (reg:DI 659)
        (reg:DI 664)) nscd_conf.c:265 -1
     (nil))
(insn 1060 1059 1061 168 (parallel [
            (set (reg/f:DI 666)
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (reg:DI 659)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:265 -1
     (nil))
(insn 1061 1060 1062 168 (set (mem:SI (plus:DI (reg/f:DI 666)
                (const_int 212 [0xd4])) [2 _368->propagate+0 S4 A32])
        (const_int 1 [0x1])) nscd_conf.c:265 -1
     (nil))
(jump_insn 1062 1061 1063 168 (set (pc)
        (label_ref 1079)) nscd_conf.c:265 -1
     (nil)
 -> 1079)
(barrier 1063 1062 1064)
(code_label 1064 1063 1065 169 65 "" [1 uses])
(note 1065 1064 1066 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1066 1065 1067 169 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd_conf.c:269 -1
     (nil))
(insn 1067 1066 1068 169 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b44361aa240 *.LC24>)) nscd_conf.c:269 -1
     (nil))
(insn 1068 1067 1069 169 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2b4435a6b090 _libc_intl_domainname>)) nscd_conf.c:269 -1
     (nil))
(call_insn 1069 1068 1070 169 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd_conf.c:269 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1070 1069 1071 169 (set (reg/f:DI 304 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:269 -1
     (nil))
(insn 1071 1070 1072 169 (set (reg:DI 38 r9)
        (reg/v/f:DI 112 [ __s2 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1072 1071 1073 169 (set (reg:DI 37 r8)
        (reg/v/f:DI 161 [ arg2 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1073 1072 1074 169 (set (reg:DI 2 cx)
        (reg/v/f:DI 111 [ arg1 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1074 1073 1075 169 (set (reg:DI 1 dx)
        (reg/f:DI 304 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1075 1074 1076 169 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1076 1075 1077 169 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1077 1076 1078 169 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 1078 1077 1079 169 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(code_label 1079 1078 1080 170 17 "" [74 uses])
(note 1080 1079 1082 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1082 1080 1083 170 (set (reg:SI 668)
        (mem:SI (reg/v/f:DI 123 [ fp ]) [2 fp_42->_flags+0 S4 A64])) nscd_conf.c:271 -1
     (nil))
(insn 1083 1082 1084 170 (parallel [
            (set (reg:SI 667 [ D.12395 ])
                (and:SI (reg:SI 668)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:271 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 123 [ fp ]) [2 fp_42->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 1084 1083 1085 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 667 [ D.12395 ])
            (const_int 0 [0]))) nscd_conf.c:271 -1
     (nil))
(jump_insn 1085 1084 1089 170 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1081)
            (pc))) nscd_conf.c:271 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1081)
(note 1089 1085 1087 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1087 1089 1088 171 (set (pc)
        (label_ref 1086)) -1
     (nil)
 -> 1086)
(barrier 1088 1087 1094)
(code_label 1094 1088 1095 173 12 "" [1 uses])
(note 1095 1094 1096 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 1096 1095 1097 173 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd_conf.c:275 -1
     (nil))
(call_insn 1097 1096 1098 173 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x2b4435d70bd0 time>) [0 time S1 A8])
            (const_int 0 [0]))) nscd_conf.c:275 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x2b4435d70bd0 time>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1098 1097 1102 173 (set (reg:DI 308 [ D.12404 ])
        (reg:DI 0 ax)) nscd_conf.c:275 -1
     (nil))
(insn 1102 1098 1103 173 (set (reg:DI 672)
        (mem/c:DI (symbol_ref:DI ("restart_interval") [flags 0x40]  <var_decl 0x2b4435f18bd0 restart_interval>) [4 restart_interval+0 S8 A64])) nscd_conf.c:275 -1
     (nil))
(insn 1103 1102 1104 173 (parallel [
            (set (reg:DI 671 [ D.12404 ])
                (plus:DI (reg:DI 308 [ D.12404 ])
                    (reg:DI 672)))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:275 -1
     (expr_list:REG_EQUAL (plus:DI (reg:DI 308 [ D.12404 ])
            (mem/c:DI (symbol_ref:DI ("restart_interval") [flags 0x40]  <var_decl 0x2b4435f18bd0 restart_interval>) [4 restart_interval+0 S8 A64]))
        (nil)))
(insn 1104 1103 1105 173 (set (mem/c:DI (symbol_ref:DI ("restart_time") [flags 0x40]  <var_decl 0x2b4435f18b40 restart_time>) [4 restart_time+0 S8 A64])
        (reg:DI 671 [ D.12404 ])) nscd_conf.c:275 -1
     (nil))
(call_insn 1105 1104 1106 173 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_current_dir_name") [flags 0x41]  <function_decl 0x2b4435c9f5e8 get_current_dir_name>) [0 get_current_dir_name S1 A8])
            (const_int 0 [0]))) nscd_conf.c:279 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_current_dir_name") [flags 0x41]  <function_decl 0x2b4435c9f5e8 get_current_dir_name>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1106 1105 1107 173 (set (reg/f:DI 311 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:279 -1
     (nil))
(insn 1107 1106 1108 173 (set (mem/f/c:DI (symbol_ref:DI ("oldcwd") [flags 0x40]  <var_decl 0x2b4435f18c60 oldcwd>) [3 oldcwd+0 S8 A64])
        (reg/f:DI 311 [ D.12400 ])) nscd_conf.c:279 -1
     (nil))
(insn 1108 1107 1109 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 311 [ D.12400 ])
            (const_int 0 [0]))) nscd_conf.c:280 -1
     (nil))
(jump_insn 1109 1108 1110 173 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1128)
            (pc))) nscd_conf.c:280 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 1128)
(note 1110 1109 1111 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1111 1110 1112 174 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2b4435a4e1b0 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd_conf.c:284 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2b4435a4e1b0 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1112 1111 1113 174 (set (reg/f:DI 312 [ D.12408 ])
        (reg:DI 0 ax)) nscd_conf.c:284 -1
     (nil))
(insn 1113 1112 1114 174 (set (reg:SI 5 di)
        (mem:SI (reg/f:DI 312 [ D.12408 ]) [2 *_383+0 S4 A32])) nscd_conf.c:282 -1
     (nil))
(call_insn 1114 1113 1115 174 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2b4435c5c360 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) nscd_conf.c:282 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2b4435c5c360 strerror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 1115 1114 1116 174 (set (reg/f:DI 314 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:282 -1
     (nil))
(insn 1116 1115 1117 174 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd_conf.c:282 -1
     (nil))
(insn 1117 1116 1118 174 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2b44361aa2d0 *.LC25>)) nscd_conf.c:282 -1
     (nil))
(insn 1118 1117 1119 174 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2b4435a6b090 _libc_intl_domainname>)) nscd_conf.c:282 -1
     (nil))
(call_insn 1119 1118 1120 174 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd_conf.c:282 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1120 1119 1121 174 (set (reg/f:DI 315 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:282 -1
     (nil))
(insn 1121 1120 1122 174 (set (reg:DI 2 cx)
        (reg/f:DI 314 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1122 1121 1123 174 (set (reg:DI 1 dx)
        (reg/f:DI 315 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1123 1122 1124 174 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1124 1123 1125 174 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1125 1124 1126 174 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 1126 1125 1127 174 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1127 1126 1128 174 (set (mem/c:SI (symbol_ref:DI ("paranoia") [flags 0x40]  <var_decl 0x2b4435f18ab0 paranoia>) [2 paranoia+0 S4 A32])
        (const_int 0 [0])) nscd_conf.c:285 -1
     (nil))
(code_label 1128 1127 1129 175 69 "" [2 uses])
(note 1129 1128 1130 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 1130 1129 1131 175 (set (reg:SI 317 [ D.12395 ])
        (mem/c:SI (symbol_ref:DI ("nthreads") [flags 0x40]  <var_decl 0x2b4435f18480 nthreads>) [2 nthreads+0 S4 A32])) nscd_conf.c:290 -1
     (nil))
(insn 1131 1130 1132 175 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (symbol_ref:DI ("max_nthreads") [flags 0x40]  <var_decl 0x2b4435f18510 max_nthreads>) [2 max_nthreads+0 S4 A32])
            (reg:SI 317 [ D.12395 ]))) nscd_conf.c:290 -1
     (nil))
(jump_insn 1132 1131 1133 175 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1135)
            (pc))) nscd_conf.c:290 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1135)
(note 1133 1132 1134 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 1134 1133 1135 176 (set (mem/c:SI (symbol_ref:DI ("max_nthreads") [flags 0x40]  <var_decl 0x2b4435f18510 max_nthreads>) [2 max_nthreads+0 S4 A32])
        (reg:SI 317 [ D.12395 ])) nscd_conf.c:291 -1
     (nil))
(code_label 1135 1134 1136 177 70 "" [1 uses])
(note 1136 1135 1137 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 1137 1136 1138 177 (parallel [
            (set (reg:DI 376 [ ivtmp.90 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (const_int 240 [0xf0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1138 1137 1139 177 (set (reg:DI 366 [ ivtmp.91 ])
        (symbol_ref:DI ("dbnames") [flags 0x2]  <var_decl 0x2b4435f18090 dbnames>)) -1
     (nil))
(insn 1139 1138 1170 177 (parallel [
            (set (reg:DI 355 [ D.12411 ])
                (plus:DI (reg/v/f:DI 382 [ dbs ])
                    (const_int 2000 [0x7d0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1170 1139 1140 178 72 "" [1 uses])
(note 1140 1170 1141 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 1141 1140 1142 178 (set (reg/f:DI 357 [ D.12410 ])
        (reg:DI 376 [ ivtmp.90 ])) -1
     (nil))
(insn 1142 1141 1143 178 (set (reg:DI 318 [ D.12399 ])
        (mem:DI (plus:DI (reg/f:DI 357 [ D.12410 ])
                (const_int -8 [0xfffffffffffffff8])) [4 MEM[base: _518, offset: -8B]+0 S8 A64])) nscd_conf.c:296 -1
     (nil))
(insn 1143 1142 1144 178 (parallel [
            (set (reg:DI 673 [ D.12399 ])
                (plus:DI (reg:DI 318 [ D.12399 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1144 1143 1145 178 (parallel [
            (set (reg:DI 674 [ D.12399 ])
                (ashift:DI (reg:DI 673 [ D.12399 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1145 1144 1146 178 (parallel [
            (set (reg:DI 675 [ D.12399 ])
                (plus:DI (reg:DI 674 [ D.12399 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1146 1145 1147 178 (parallel [
            (set (reg:DI 676 [ D.12399 ])
                (and:DI (reg:DI 675 [ D.12399 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1147 1146 1148 178 (parallel [
            (set (reg:DI 677 [ D.12399 ])
                (ashift:DI (reg:DI 318 [ D.12399 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1148 1147 1149 178 (parallel [
            (set (reg:DI 678 [ D.12399 ])
                (plus:DI (reg:DI 677 [ D.12399 ])
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1149 1148 1150 178 (parallel [
            (set (reg/v:DI 324 [ datasize ])
                (plus:DI (reg:DI 676 [ D.12399 ])
                    (reg:DI 678 [ D.12399 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_conf.c:295 -1
     (nil))
(insn 1150 1149 1151 178 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 324 [ datasize ])
            (mem:DI (reg/f:DI 357 [ D.12410 ]) [4 MEM[base: _518, offset: 0B]+0 S8 A64]))) nscd_conf.c:300 -1
     (nil))
(jump_insn 1151 1150 1152 178 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1166)
            (pc))) nscd_conf.c:300 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1166)
(note 1152 1151 1153 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 1153 1152 1154 179 (set (reg/f:DI 326 [ D.12409 ])
        (mem/f:DI (reg:DI 366 [ ivtmp.91 ]) [3 MEM[base: _513, offset: 0B]+0 S8 A64])) nscd_conf.c:302 -1
     (nil))
(insn 1154 1153 1155 179 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd_conf.c:302 -1
     (nil))
(insn 1155 1154 1156 179 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2b44361aa360 *.LC26>)) nscd_conf.c:302 -1
     (nil))
(insn 1156 1155 1157 179 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2b4435a6b090 _libc_intl_domainname>)) nscd_conf.c:302 -1
     (nil))
(call_insn 1157 1156 1158 179 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd_conf.c:302 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2b4435a4e288 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 1158 1157 1159 179 (set (reg/f:DI 327 [ D.12400 ])
        (reg:DI 0 ax)) nscd_conf.c:302 -1
     (nil))
(insn 1159 1158 1160 179 (set (reg:DI 2 cx)
        (reg/f:DI 326 [ D.12409 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1160 1159 1161 179 (set (reg:DI 1 dx)
        (reg/f:DI 327 [ D.12400 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1161 1160 1162 179 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1162 1161 1163 179 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 1163 1162 1164 179 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 1164 1163 1165 179 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2b4435a4e510 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1165 1164 1166 179 (set (mem:DI (reg/f:DI 357 [ D.12410 ]) [4 MEM[base: _518, offset: 0B]+0 S8 A64])
        (reg/v:DI 324 [ datasize ])) nscd_conf.c:304 -1
     (nil))
(code_label 1166 1165 1167 180 71 "" [1 uses])
(note 1167 1166 1168 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1168 1167 1169 180 (parallel [
            (set (reg:DI 376 [ ivtmp.90 ])
                (plus:DI (reg:DI 376 [ ivtmp.90 ])
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1169 1168 1171 180 (parallel [
            (set (reg:DI 366 [ ivtmp.91 ])
                (plus:DI (reg:DI 366 [ ivtmp.91 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1171 1169 1172 180 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 355 [ D.12411 ])
            (reg:DI 376 [ ivtmp.90 ]))) nscd_conf.c:293 -1
     (nil))
(jump_insn 1172 1171 1173 180 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1170)
            (pc))) nscd_conf.c:293 -1
     (int_list:REG_BR_PROB 8000 (nil))
 -> 1170)
(note 1173 1172 1174 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 1174 1173 1175 181 (set (reg:DI 679)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 line+0 S8 A64])) nscd_conf.c:310 -1
     (nil))
(insn 1175 1174 1176 181 (set (reg:DI 5 di)
        (reg:DI 679)) nscd_conf.c:310 -1
     (nil))
(call_insn 1176 1175 1177 181 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b4435979e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nscd_conf.c:310 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b4435979e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1177 1176 1178 181 (set (reg:DI 5 di)
        (reg/v/f:DI 123 [ fp ])) nscd_conf.c:312 -1
     (nil))
(call_insn 1178 1177 1179 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b4435a9e6c0 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nscd_conf.c:312 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b4435a9e6c0 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1179 1178 1180 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("error_message_count") [flags 0x40]  <var_decl 0x2b4435a13d80 error_message_count>) [2 error_message_count+0 S4 A32])
            (reg/v:SI 122 [ initial_error_message_count ]))) nscd_conf.c:314 -1
     (nil))
(insn 1180 1179 1181 181 (set (reg:QI 681)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nscd_conf.c:314 -1
     (nil))
(insn 1181 1180 1182 181 (set (reg:SI 680 [ D.12394 ])
        (zero_extend:SI (reg:QI 681))) nscd_conf.c:314 -1
     (nil))
(insn 1182 1181 1197 181 (set (reg:SI 114 [ D.12395 ])
        (reg:SI 680 [ D.12394 ])) nscd_conf.c:314 -1
     (nil))
(jump_insn 1197 1182 1198 181 (set (pc)
        (label_ref 1183)) nscd_conf.c:314 -1
     (nil)
 -> 1183)
(barrier 1198 1197 1200)
(code_label 1200 1198 1199 182 74 "" [1 uses])
(note 1199 1200 41 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 41 1199 1183 182 (set (reg:SI 114 [ D.12395 ])
        (const_int -1 [0xffffffffffffffff])) nscd_conf.c:70 -1
     (nil))
(code_label 1183 41 1184 183 10 "" [1 uses])
(note 1184 1183 1185 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 1185 1184 1189 183 (set (reg:SI 380 [ <retval> ])
        (reg:SI 114 [ D.12395 ])) -1
     (nil))
(insn 1189 1185 1190 183 (set (reg/i:SI 0 ax)
        (reg:SI 380 [ <retval> ])) nscd_conf.c:315 -1
     (nil))
(insn 1190 1189 1191 183 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.12413+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) nscd_conf.c:315 -1
     (nil))
(jump_insn 1191 1190 1253 183 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1194)
            (pc))) nscd_conf.c:315 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1194)
(note 1253 1191 1192 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(call_insn 1192 1253 1193 185 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b44361035e8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) nscd_conf.c:315 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b44361035e8 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 1193 1192 1194)
(code_label 1194 1193 1254 186 73 "" [1 uses])
(note 1254 1194 1195 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 1195 1254 0 186 (use (reg/i:SI 0 ax)) nscd_conf.c:315 -1
     (nil))
