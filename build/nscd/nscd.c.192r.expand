
;; Function print_version (print_version, funcdef_no=123, decl_uid=12730, cgraph_uid=123, symbol_order=144)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ stream ])
        (reg:DI 5 di [ stream ])) nscd.c:507 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ state ])
        (reg:DI 4 si [ state ])) nscd.c:507 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aae34b09f30 *.LC0>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2aae34b09510 *.LC1>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2aae34b1c000 *.LC2>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ stream ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 14 13 15 2 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:509 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2aae34b1c090 *.LC3>)) nscd.c:509 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd.c:509 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>) [0 __builtin_dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:509 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 87 [ D.13409 ])
        (reg:DI 0 ax)) nscd.c:509 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2aae34b1c120 *.LC4>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.13409 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ stream ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 25 24 26 2 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:514 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2aae34b1c1b0 *.LC5>)) nscd.c:514 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd.c:514 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>) [0 __builtin_dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:514 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 2 (set (reg/f:DI 88 [ D.13409 ])
        (reg:DI 0 ax)) nscd.c:514 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2aae34b1c240 *.LC6>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 1 dx)
        (reg/f:DI 88 [ D.13409 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ stream ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 34 33 35 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn/j 35 34 36 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(barrier 36 35 0)

;; Function termination_handler (termination_handler, funcdef_no=125, decl_uid=11070, cgraph_uid=125, symbol_order=146) (executed once)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
deleting block 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 9 failed.
Edge 6->5 redirected to 9
Edge 7->5 redirected to 9


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 9 failed.
Deleted label in block 5.


;;
;; Full RTL generated for this function:
;;
(note 47 0 50 NOTE_INSN_DELETED)
(note 50 47 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 48 50 49 2 (set (reg/v:SI 140 [ signum ])
        (reg:SI 5 di [ signum ])) nscd.c:546 -1
     (nil))
(note 49 48 52 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 52 49 53 2 (call (mem:QI (symbol_ref:DI ("close_sockets") [flags 0x41]  <function_decl 0x2aae3498d510 close_sockets>) [0 close_sockets S1 A8])
        (const_int 0 [0])) nscd.c:547 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close_sockets") [flags 0x41]  <function_decl 0x2aae3498d510 close_sockets>)
        (nil))
    (nil))
(insn 53 52 54 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2aae34b2d1b0 *.LC8>)) nscd.c:550 -1
     (nil))
(call_insn 54 53 55 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>) [0 unlink S1 A8])
            (const_int 0 [0]))) nscd.c:550 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2aae34b2d240 *.LC9>)) nscd.c:553 -1
     (nil))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>) [0 unlink S1 A8])
            (const_int 0 [0]))) nscd.c:553 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 2 (set (reg:DI 133 [ ivtmp.70 ])
        (symbol_ref:DI ("dbs") [flags 0x40]  <var_decl 0x2aae349773f0 dbs>)) -1
     (nil))
(insn 58 57 85 2 (set (reg:DI 139 [ D.13436 ])
        (const:DI (plus:DI (symbol_ref:DI ("dbs") [flags 0x40]  <var_decl 0x2aae349773f0 dbs>)
                (const_int 1760 [0x6e0])))) -1
     (nil))
(code_label 85 58 59 4 7 "" [1 uses])
(note 59 85 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 4 (set (reg/f:DI 138 [ D.13435 ])
        (reg:DI 133 [ ivtmp.70 ])) -1
     (nil))
(insn 61 60 62 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 138 [ D.13435 ])
                    (const_int 192 [0xc0])) [2 MEM[base: _22, offset: 192B]+0 S4 A32])
            (const_int 0 [0]))) nscd.c:560 -1
     (nil))
(jump_insn 62 61 63 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) nscd.c:560 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 66)
(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 64 63 65 5 (set (pc)
        (label_ref 82)) -1
     (nil)
 -> 82)
(barrier 65 64 66)
(code_label 66 65 67 6 4 "" [1 uses])
(note 67 66 68 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 70 6 (set (reg/f:DI 135 [ D.13433 ])
        (mem/f:DI (plus:DI (reg/f:DI 138 [ D.13435 ])
                (const_int 280 [0x118])) [1 MEM[base: _22, offset: 280B]+0 S8 A64])) nscd.c:560 -1
     (nil))
(insn 70 68 71 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 135 [ D.13433 ])
            (const_int 0 [0]))) nscd.c:560 -1
     (nil))
(jump_insn 71 70 72 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 82)
            (pc))) nscd.c:560 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 82)
(note 72 71 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 7 (set (mem/v:DI (plus:DI (reg/f:DI 135 [ D.13433 ])
                (const_int 16 [0x10])) [6 _9->timestamp+0 S8 A64])
        (const_int 0 [0])) nscd.c:564 -1
     (nil))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 138 [ D.13435 ])
                    (const_int 204 [0xcc])) [2 MEM[base: _22, offset: 204B]+0 S4 A32])
            (const_int 0 [0]))) nscd.c:566 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 82)
            (pc))) nscd.c:566 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 82)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:DI 141)
        (mem:DI (plus:DI (reg/f:DI 138 [ D.13435 ])
                (const_int 296 [0x128])) [6 MEM[base: _22, offset: 296B]+0 S8 A64])) nscd.c:568 -1
     (nil))
(insn 78 77 79 8 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nscd.c:568 -1
     (nil))
(insn 79 78 80 8 (set (reg:DI 4 si)
        (reg:DI 141)) nscd.c:568 -1
     (nil))
(insn 80 79 81 8 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.13433 ])) nscd.c:568 -1
     (nil))
(call_insn 81 80 82 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("msync") [flags 0x41]  <function_decl 0x2aae34954870 msync>) [0 msync S1 A8])
            (const_int 0 [0]))) nscd.c:568 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("msync") [flags 0x41]  <function_decl 0x2aae34954870 msync>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(code_label 82 81 83 9 5 "" [3 uses])
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 86 9 (parallel [
            (set (reg:DI 133 [ ivtmp.70 ])
                (plus:DI (reg:DI 133 [ ivtmp.70 ])
                    (const_int 352 [0x160])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 86 84 87 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 133 [ ivtmp.70 ])
            (reg:DI 139 [ D.13436 ]))) nscd.c:558 -1
     (nil))
(jump_insn 87 86 88 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) nscd.c:558 -1
     (int_list:REG_BR_PROB 8000 (nil))
 -> 85)
(note 88 87 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 10 (set (reg:SI 5 di)
        (const_int 0 [0])) nscd.c:571 -1
     (nil))
(call_insn 90 89 91 10 (call (mem:QI (symbol_ref:DI ("_exit") [flags 0x41]  <function_decl 0x2aae343920d8 _exit>) [0 __builtin__exit S1 A8])
        (const_int 0 [0])) nscd.c:571 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_exit") [flags 0x41]  <function_decl 0x2aae343920d8 _exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 91 90 0)

;; Function more_help (more_help, funcdef_no=122, decl_uid=12737, cgraph_uid=122, symbol_order=143)

Partition 1: size 8 align 8
	more_tables	tp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13
Edge 2->13 redirected to 16
Purged edges from bb 17
Predictions for insn 91 bb 15
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 15 failed.
Forwarding edge 2->4 to 15 failed.
Redirecting jump 49 from 14 to 16.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 86.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 3 0 11 NOTE_INSN_DELETED)
(note 11 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 11 5 2 (set (reg/v:SI 100 [ key ])
        (reg:SI 5 di [ key ])) nscd.c:465 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 101 [ text ])
        (reg:DI 4 si [ text ])) nscd.c:465 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 102 [ input ])
        (reg:DI 1 dx [ input ])) nscd.c:465 -1
     (nil))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13474+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:465 -1
     (nil))
(insn 13 8 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ key ])
            (const_int 33554436 [0x2000004]))) nscd.c:466 -1
     (nil))
(jump_insn 14 13 101 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) nscd.c:466 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 17)
(note 101 14 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 101 16 4 (set (pc)
        (label_ref:DI 100)) nscd.c:466 654 {jump}
     (nil)
 -> 100)
(barrier 16 15 17)
(code_label 17 16 18 5 17 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:DI 103)
        (symbol_ref:DI ("dbnames") [flags 0x40]  <var_decl 0x2aae34977480 dbnames>)) nscd.c:472 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 5 di)
        (mem/u/f/c:DI (reg/f:DI 103) [1 dbnames+0 S8 A64])) nscd.c:472 -1
     (nil))
(call_insn 21 20 22 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2aae3497cd80 xstrdup>) [0 xstrdup S1 A8])
            (const_int 0 [0]))) nscd.c:472 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xstrdup") [flags 0x41]  <function_decl 0x2aae3497cd80 xstrdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 5 (set (reg/f:DI 104)
        (reg:DI 0 ax)) nscd.c:472 -1
     (expr_list:REG_NOALIAS (reg/f:DI 104)
        (nil)))
(insn 23 22 24 5 (set (reg/v/f:DI 95 [ tables ])
        (reg/f:DI 104)) nscd.c:472 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 91 [ ivtmp.86 ])
        (symbol_ref:DI ("dbnames") [flags 0x40]  <var_decl 0x2aae34977480 dbnames>)) -1
     (nil))
(insn 25 24 54 5 (set (reg:DI 98 [ D.13472 ])
        (const:DI (plus:DI (symbol_ref:DI ("dbnames") [flags 0x40]  <var_decl 0x2aae34977480 dbnames>)
                (const_int 32 [0x20])))) -1
     (nil))
(code_label 54 25 26 6 21 "" [1 uses])
(note 26 54 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 105)
        (mem/f:DI (plus:DI (reg:DI 91 [ ivtmp.86 ])
                (const_int 8 [0x8])) [1 MEM[base: _6, offset: 8B]+0 S8 A64])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 37 r8)
        (reg:DI 105)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 95 [ tables ])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2aae34b38ab0 *.LC11>)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 5 di)
        (reg:DI 106)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 34 33 35 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:178 -1
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__asprintf_chk") [flags 0x41]  <function_decl 0x2aae344aa438 __asprintf_chk>) [0 __asprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__asprintf_chk") [flags 0x41]  <function_decl 0x2aae344aa438 __asprintf_chk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 36 35 37 6 (set (reg:SI 94 [ D.13471 ])
        (reg:SI 0 ax)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 37 36 38 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 94 [ D.13471 ])
            (const_int 0 [0]))) nscd.c:476 -1
     (nil))
(jump_insn 38 37 39 6 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) nscd.c:476 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 41)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 more_tables+0 S8 A64])
        (const_int 0 [0])) nscd.c:477 -1
     (nil))
(code_label 41 40 42 8 18 "" [1 uses])
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ tables ])) nscd.c:478 -1
     (nil))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aae34382e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nscd.c:478 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aae34382e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 8 (set (reg/v/f:DI 95 [ tables ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 more_tables+0 S8 A64])) nscd.c:479 -1
     (nil))
(insn 46 45 47 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ tables ])
            (const_int 0 [0]))) nscd.c:479 -1
     (nil))
(jump_insn 47 46 48 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) nscd.c:479 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 51)
(note 48 47 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 48 49 9 (set (reg/f:DI 89 [ D.13468 ])
        (const_int 0 [0])) nscd.c:480 -1
     (nil))
(jump_insn 49 9 50 9 (set (pc)
        (label_ref:DI 83)) nscd.c:480 654 {jump}
     (nil)
 -> 83)
(barrier 50 49 51)
(code_label 51 50 52 10 19 "" [1 uses])
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 55 10 (parallel [
            (set (reg:DI 91 [ ivtmp.86 ])
                (plus:DI (reg:DI 91 [ ivtmp.86 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 55 53 56 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 91 [ ivtmp.86 ])
            (reg:DI 98 [ D.13472 ]))) nscd.c:473 -1
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) nscd.c:473 -1
     (int_list:REG_BR_PROB 7382 (nil))
 -> 54)
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 11 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:485 -1
     (nil))
(insn 59 58 60 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2aae34b38b40 *.LC12>)) nscd.c:485 -1
     (nil))
(insn 60 59 61 11 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd.c:485 -1
     (nil))
(call_insn 61 60 62 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>) [0 __builtin_dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:485 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 62 61 63 11 (set (reg/f:DI 96 [ D.13468 ])
        (reg:DI 0 ax)) nscd.c:485 -1
     (nil))
(insn 63 62 64 11 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 64 63 65 11 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2aae34b38bd0 *.LC13>)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 65 64 66 11 (set (reg:DI 2 cx)
        (reg/v/f:DI 95 [ tables ])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 66 65 67 11 (set (reg:DI 1 dx)
        (reg/f:DI 96 [ D.13468 ])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 67 66 68 11 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 68 67 69 11 (set (reg:DI 5 di)
        (reg:DI 107)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 69 68 70 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:178 -1
     (nil))
(call_insn 70 69 71 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__asprintf_chk") [flags 0x41]  <function_decl 0x2aae344aa438 __asprintf_chk>) [0 __asprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__asprintf_chk") [flags 0x41]  <function_decl 0x2aae344aa438 __asprintf_chk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 71 70 72 11 (set (reg:SI 97 [ D.13471 ])
        (reg:SI 0 ax)) ../libio/bits/stdio2.h:178 -1
     (nil))
(insn 72 71 73 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 97 [ D.13471 ])
            (const_int 0 [0]))) nscd.c:485 -1
     (nil))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) nscd.c:485 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 76)
(note 74 73 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 tp+0 S8 A64])
        (const_int 0 [0])) nscd.c:492 -1
     (nil))
(code_label 76 75 77 13 22 "" [1 uses])
(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 13 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ tables ])) nscd.c:493 -1
     (nil))
(call_insn 79 78 80 13 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aae34382e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nscd.c:493 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aae34382e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 97 13 (set (reg/f:DI 89 [ D.13468 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 tp+0 S8 A64])) nscd.c:494 -1
     (nil))
(jump_insn 97 80 98 13 (set (pc)
        (label_ref 83)) -1
     (nil)
 -> 83)
(barrier 98 97 100)
(code_label 100 98 99 15 24 "" [1 uses])
(note 99 100 10 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 10 99 83 15 (set (reg/f:DI 89 [ D.13468 ])
        (reg/v/f:DI 101 [ text ])) nscd.c:501 -1
     (nil))
(code_label 83 10 84 16 16 "" [2 uses])
(note 84 83 85 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 89 16 (set (reg:DI 99 [ <retval> ])
        (reg/f:DI 89 [ D.13468 ])) -1
     (nil))
(insn 89 85 90 16 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ <retval> ])) nscd.c:502 -1
     (nil))
(insn 90 89 91 16 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.13474+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) nscd.c:502 -1
     (nil))
(jump_insn 91 90 102 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) nscd.c:502 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 94)
(note 102 91 92 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(call_insn 92 102 93 18 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) nscd.c:502 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 93 92 94)
(code_label 94 93 103 19 23 "" [1 uses])
(note 103 94 95 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 95 103 0 19 (use (reg/i:DI 0 ax)) nscd.c:502 -1
     (nil))

;; Function nscd_open_socket (nscd_open_socket, funcdef_no=124, decl_uid=11072, cgraph_uid=124, symbol_order=145)

Partition 0: size 110 align 16
	addr

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Edge 2->5 redirected to 8
Edge 3->5 redirected to 9
Predictions for insn 46 bb 7
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 41.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 7 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13483+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:522 -1
     (nil))
(insn 9 3 10 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) nscd.c:526 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) nscd.c:526 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:526 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("socket") [flags 0x41]  <function_decl 0x2aae347ab6c0 socket>) [0 socket S1 A8])
            (const_int 0 [0]))) nscd.c:526 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("socket") [flags 0x41]  <function_decl 0x2aae347ab6c0 socket>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg/v:SI 88 [ sock ])
        (reg:SI 0 ax)) nscd.c:526 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 88 [ sock ])
            (const_int 0 [0]))) nscd.c:527 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) nscd.c:527 612 {*jcc_1}
     (int_list:REG_BR_PROB 364 (nil))
 -> 55)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [12 addr.sun_family+0 S2 A128])
        (const_int 1 [0x1])) nscd.c:530 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) ../string/bits/string3.h:110 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg:DI 92)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ../string/bits/string3.h:110 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 94)
        (const_int 7959393464555238959 [0x6e75722f7261762f])) ../string/bits/string3.h:110 -1
     (nil))
(insn 21 20 22 4 (set (mem/c:DI (reg:DI 93) [0 MEM[(void *)&addr + 2B]+0 S8 A16])
        (reg:DI 94)) ../string/bits/string3.h:110 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 95)
        (const_int 8030814668743470639 [0x6f732f6463736e2f])) ../string/bits/string3.h:110 -1
     (nil))
(insn 23 22 24 4 (set (mem/c:DI (plus:DI (reg:DI 93)
                (const_int 8 [0x8])) [0 MEM[(void *)&addr + 2B]+8 S8 A16])
        (reg:DI 95)) ../string/bits/string3.h:110 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg:DI 93)
                (const_int 16 [0x10])) [0 MEM[(void *)&addr + 2B]+16 S4 A16])
        (const_int 1952803683 [0x74656b63])) ../string/bits/string3.h:110 -1
     (nil))
(insn 25 24 26 4 (set (mem/c:QI (plus:DI (reg:DI 93)
                (const_int 20 [0x14])) [0 MEM[(void *)&addr + 2B]+20 S1 A16])
        (const_int 0 [0])) ../string/bits/string3.h:110 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:533 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 90 [ D.13183 ])
        (reg:DI 96)) nscd.c:533 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 1 dx)
        (const_int 110 [0x6e])) nscd.c:533 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (reg:DI 90 [ D.13183 ])) nscd.c:533 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sock ])) nscd.c:533 -1
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("connect") [flags 0x41]  <function_decl 0x2aae347aba20 connect>) [0 connect S1 A8])
            (const_int 0 [0]))) nscd.c:533 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("connect") [flags 0x41]  <function_decl 0x2aae347aba20 connect>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 32 31 33 4 (set (reg:SI 89 [ D.13482 ])
        (reg:SI 0 ax)) nscd.c:533 -1
     (nil))
(insn 33 32 34 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 89 [ D.13482 ])
            (const_int 0 [0]))) nscd.c:533 -1
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) nscd.c:533 612 {*jcc_1}
     (int_list:REG_BR_PROB 9937 (nil))
 -> 59)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (reg:SI 5 di)
        (reg/v:SI 88 [ sock ])) nscd.c:535 -1
     (nil))
(call_insn 37 36 5 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:535 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 5 37 52 5 (set (reg:SI 87 [ D.13482 ])
        (const_int -1 [0xffffffffffffffff])) nscd.c:536 -1
     (nil))
(jump_insn 52 5 53 5 (set (pc)
        (label_ref 38)) nscd.c:536 -1
     (nil)
 -> 38)
(barrier 53 52 55)
(code_label 55 53 54 6 36 "" [1 uses])
(note 54 55 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 54 56 6 (set (reg:SI 87 [ D.13482 ])
        (const_int -1 [0xffffffffffffffff])) nscd.c:528 -1
     (nil))
(jump_insn 56 4 57 6 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
(barrier 57 56 59)
(code_label 59 57 58 7 37 "" [1 uses])
(note 58 59 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 58 38 7 (set (reg:SI 87 [ D.13482 ])
        (reg/v:SI 88 [ sock ])) -1
     (nil))
(code_label 38 6 39 8 34 "" [2 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 44 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.13482 ])) -1
     (nil))
(insn 44 40 45 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) nscd.c:540 -1
     (nil))
(insn 45 44 46 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.13483+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) nscd.c:540 -1
     (nil))
(jump_insn 46 45 60 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nscd.c:540 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 49)
(note 60 46 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 47 60 48 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) nscd.c:540 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 48 47 49)
(code_label 49 48 61 11 35 "" [1 uses])
(note 61 49 50 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 50 61 0 11 (use (reg/i:SI 0 ax)) nscd.c:540 -1
     (nil))

;; Function invalidate_db (invalidate_db, funcdef_no=119, decl_uid=12770, cgraph_uid=119, symbol_order=140) (executed once)

Partition 0: size 4 align 4
	resp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Predictions for insn 154 bb 19
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%
deleting block 21
deleting block 20
deleting block 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 12->13 to 15 failed.


try_optimize_cfg iteration 2

Forwarding edge 12->13 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 111 [ dbname ])
        (reg:DI 5 di [ dbname ])) nscd.c:329 -1
     (nil))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 7 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13494+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:329 -1
     (nil))
(call_insn 7 4 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nscd_open_socket") [flags 0x3]  <function_decl 0x2aae3498d000 nscd_open_socket>) [0 nscd_open_socket S1 A8])
            (const_int 0 [0]))) nscd.c:330 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_open_socket") [flags 0x3]  <function_decl 0x2aae3498d000 nscd_open_socket>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 8 7 9 2 (set (reg/v:SI 87 [ sock ])
        (reg:SI 0 ax)) nscd.c:330 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ sock ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:332 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) nscd.c:332 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 15)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:333 -1
     (nil))
(call_insn 13 12 14 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:333 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 14 13 15)
(code_label 15 14 16 5 42 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:DI 5 di)
        (reg/v/f:DI 111 [ dbname ])) nscd.c:335 -1
     (nil))
(call_insn/i 18 17 19 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aae34366948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nscd.c:335 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aae34366948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 5 (set (reg:DI 113)
        (reg:DI 0 ax)) nscd.c:335 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 114)
        (reg:DI 113)) nscd.c:335 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 88 [ D.13488 ])
        (reg:DI 114)) nscd.c:335 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg/v:DI 89 [ dbname_len ])
                (plus:DI (reg:DI 88 [ D.13488 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:335 -1
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg/v:DI 90 [ reqlen ])
                (plus:DI (reg:DI 88 [ D.13488 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:336 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:DI 115)
                (plus:DI (reg/v:DI 90 [ reqlen ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg:DI 115)
                    (reg:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 119)
                (udiv:DI (reg:DI 117)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 120)
                (umod:DI (reg:DI 117)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:DI 121)
                (mult:DI (reg:DI 119)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 122)
        (reg/f:DI 83 virtual-stack-dynamic)) nscd.c:341 -1
     (nil))
(insn 31 30 32 5 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg:DI 122)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 124)
                (lshiftrt:DI (reg:DI 123)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 123)
            (const_int 16 [0x10]))
        (nil)))
(insn 33 32 34 5 (parallel [
            (set (reg/f:DI 125)
                (ashift:DI (reg:DI 124)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:341 -1
     (nil))
(insn 34 33 35 5 (set (reg/v/f:DI 91 [ reqdata ])
        (reg/f:DI 125)) nscd.c:341 -1
     (nil))
(insn 35 34 36 5 (set (mem:SI (plus:DI (reg/v/f:DI 91 [ reqdata ])
                (const_int 8 [0x8])) [2 reqdata_11->req.key_len+0 S4 A64])
        (subreg:SI (reg/v:DI 89 [ dbname_len ]) 0)) nscd.c:343 -1
     (nil))
(insn 36 35 37 5 (set (mem:SI (reg/v/f:DI 91 [ reqdata ]) [2 reqdata_11->req.version+0 S4 A128])
        (const_int 2 [0x2])) nscd.c:344 -1
     (nil))
(insn 37 36 38 5 (set (mem:SI (plus:DI (reg/v/f:DI 91 [ reqdata ])
                (const_int 4 [0x4])) [18 reqdata_11->req.type+0 S4 A32])
        (const_int 10 [0xa])) nscd.c:345 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/v/f:DI 91 [ reqdata ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) ../string/bits/string3.h:53 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 127)
        (reg:DI 126)) ../string/bits/string3.h:53 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 128)
        (reg/v/f:DI 111 [ dbname ])) ../string/bits/string3.h:53 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 129)
        (reg/v:DI 89 [ dbname_len ])) ../string/bits/string3.h:53 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 1 dx)
        (reg:DI 129)) ../string/bits/string3.h:53 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 4 si)
        (reg:DI 128)) ../string/bits/string3.h:53 -1
     (nil))
(insn 44 43 45 5 (set (reg:DI 5 di)
        (reg:DI 127)) ../string/bits/string3.h:53 -1
     (nil))
(call_insn 45 44 46 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aae34a65d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) ../string/bits/string3.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aae34a65d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 46 45 47 5 (set (reg:DI 130)
        (reg:DI 0 ax)) ../string/bits/string3.h:53 -1
     (nil))
(insn 47 46 60 5 (set (reg:DI 131)
        (reg:DI 130)) ../string/bits/string3.h:53 -1
     (nil))
(code_label 60 47 48 6 44 "" [1 uses])
(note 48 60 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:SI 2 cx)
        (const_int 16384 [0x4000])) nscd.c:348 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 1 dx)
        (reg/v:DI 90 [ reqlen ])) nscd.c:348 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ reqdata ])) nscd.c:348 -1
     (nil))
(insn 52 51 53 6 (set (reg:SI 5 di)
        (reg/v:SI 87 [ sock ])) nscd.c:348 -1
     (nil))
(call_insn 53 52 54 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("send") [flags 0x41]  <function_decl 0x2aae347abbd0 send>) [0 send S1 A8])
            (const_int 0 [0]))) nscd.c:348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("send") [flags 0x41]  <function_decl 0x2aae347abbd0 send>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 54 53 55 6 (set (reg/v:DI 94 [ nbytes ])
        (reg:DI 0 ax)) nscd.c:348 -1
     (nil))
(insn 55 54 56 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 94 [ nbytes ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:348 -1
     (nil))
(jump_insn 56 55 57 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) nscd.c:348 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 63)
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 58 57 59 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 59 58 61 7 (set (reg/f:DI 95 [ D.13491 ])
        (reg:DI 0 ax)) nscd.c:348 -1
     (nil))
(insn 61 59 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 95 [ D.13491 ]) [2 *_19+0 S4 A32])
            (const_int 4 [0x4]))) nscd.c:348 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) nscd.c:348 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 60)
(code_label 63 62 64 8 43 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 90 [ reqlen ])
            (reg/v:DI 94 [ nbytes ]))) nscd.c:351 -1
     (nil))
(jump_insn 66 65 67 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) nscd.c:351 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 84)
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 68 67 69 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:353 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 69 68 70 9 (set (reg/f:DI 98 [ D.13491 ])
        (reg:DI 0 ax)) nscd.c:353 -1
     (nil))
(insn 70 69 71 9 (set (reg/v:SI 99 [ err ])
        (mem:SI (reg/f:DI 98 [ D.13491 ]) [2 *_22+0 S4 A32])) nscd.c:353 -1
     (nil))
(insn 71 70 72 9 (set (reg:SI 5 di)
        (reg/v:SI 87 [ sock ])) nscd.c:354 -1
     (nil))
(call_insn 72 71 73 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:354 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 73 72 74 9 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:355 -1
     (nil))
(insn 74 73 75 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2aae34b4ea20 *.LC16>)) nscd.c:355 -1
     (nil))
(insn 75 74 76 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:355 -1
     (nil))
(call_insn 76 75 77 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:355 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 77 76 78 9 (set (reg/f:DI 100 [ D.13492 ])
        (reg:DI 0 ax)) nscd.c:355 -1
     (nil))
(insn 78 77 79 9 (set (reg:DI 1 dx)
        (reg/f:DI 100 [ D.13492 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 79 78 80 9 (set (reg:SI 4 si)
        (reg/v:SI 99 [ err ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 80 79 81 9 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 81 80 82 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 82 81 83 9 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 83 82 84)
(code_label 84 83 85 10 45 "" [1 uses])
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 99 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 resp+0 S4 A32])
        (const_int 0 [0])) nscd.c:360 -1
     (nil))
(code_label 99 86 87 11 47 "" [1 uses])
(note 87 99 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 4 si)
        (reg:DI 132)) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 91 90 92 11 (set (reg:SI 5 di)
        (reg/v:SI 87 [ sock ])) ../posix/bits/unistd.h:44 -1
     (nil))
(call_insn 92 91 93 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2aae34913510 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) ../posix/bits/unistd.h:44 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2aae34913510 __read_alias>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 93 92 94 11 (set (reg:DI 109 [ D.13493 ])
        (reg:DI 0 ax)) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 94 93 95 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 109 [ D.13493 ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:361 -1
     (nil))
(jump_insn 95 94 96 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) nscd.c:361 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 105)
(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 97 96 98 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:361 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 98 97 100 12 (set (reg/f:DI 101 [ D.13491 ])
        (reg:DI 0 ax)) nscd.c:361 -1
     (nil))
(insn 100 98 101 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 101 [ D.13491 ]) [2 *_28+0 S4 A32])
            (const_int 4 [0x4]))) nscd.c:361 -1
     (nil))
(jump_insn 101 100 104 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) nscd.c:361 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 99)
(note 104 101 102 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 104 103 13 (set (pc)
        (label_ref 110)) -1
     (nil)
 -> 110)
(barrier 103 102 105)
(code_label 105 103 106 14 46 "" [1 uses])
(note 106 105 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 14 (parallel [
            (set (reg:DI 133 [ D.13493 ])
                (and:DI (reg:DI 109 [ D.13493 ])
                    (const_int -5 [0xfffffffffffffffb])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:362 -1
     (nil))
(insn 108 107 109 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 133 [ D.13493 ])
            (const_int 0 [0]))) nscd.c:362 -1
     (nil))
(jump_insn 109 108 110 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) nscd.c:362 -1
     (int_list:REG_BR_PROB 9777 (nil))
 -> 128)
(code_label 110 109 111 15 48 "" [1 uses])
(note 111 110 112 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 112 111 113 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 113 112 114 15 (set (reg/f:DI 103 [ D.13491 ])
        (reg:DI 0 ax)) nscd.c:364 -1
     (nil))
(insn 114 113 115 15 (set (reg/v:SI 104 [ err ])
        (mem:SI (reg/f:DI 103 [ D.13491 ]) [2 *_33+0 S4 A32])) nscd.c:364 -1
     (nil))
(insn 115 114 116 15 (set (reg:SI 5 di)
        (reg/v:SI 87 [ sock ])) nscd.c:365 -1
     (nil))
(call_insn 116 115 117 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:365 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 117 116 118 15 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:366 -1
     (nil))
(insn 118 117 119 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2aae34b4eab0 *.LC17>)) nscd.c:366 -1
     (nil))
(insn 119 118 120 15 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:366 -1
     (nil))
(call_insn 120 119 121 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:366 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 121 120 122 15 (set (reg/f:DI 105 [ D.13492 ])
        (reg:DI 0 ax)) nscd.c:366 -1
     (nil))
(insn 122 121 123 15 (set (reg:DI 1 dx)
        (reg/f:DI 105 [ D.13492 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 123 122 124 15 (set (reg:SI 4 si)
        (reg/v:SI 104 [ err ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 124 123 125 15 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 125 124 126 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 126 125 127 15 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 127 126 128)
(code_label 128 127 129 16 49 "" [1 uses])
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 16 (set (reg:SI 5 di)
        (reg/v:SI 87 [ sock ])) nscd.c:369 -1
     (nil))
(call_insn 131 130 132 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:369 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 132 131 133 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 resp+0 S4 A32])
            (const_int 0 [0]))) nscd.c:371 -1
     (nil))
(jump_insn 133 132 134 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) nscd.c:371 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 147)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 17 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:372 -1
     (nil))
(insn 136 135 137 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2aae34b4eb40 *.LC18>)) nscd.c:372 -1
     (nil))
(insn 137 136 138 17 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:372 -1
     (nil))
(call_insn 138 137 139 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:372 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 139 138 140 17 (set (reg/f:DI 107 [ D.13492 ])
        (reg:DI 0 ax)) nscd.c:372 -1
     (nil))
(insn 140 139 141 17 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 resp+0 S4 A32])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 141 140 142 17 (set (reg:DI 1 dx)
        (reg/f:DI 107 [ D.13492 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 142 141 143 17 (set (reg:SI 4 si)
        (reg:SI 134)) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 143 142 144 17 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 144 143 145 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 145 144 146 17 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 146 145 147)
(code_label 147 146 148 18 50 "" [1 uses])
(note 148 147 149 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 18 (set (reg:SI 5 di)
        (const_int 0 [0])) nscd.c:374 -1
     (nil))
(call_insn 150 149 151 18 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:374 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 151 150 0)

;; Function parse_opt (parse_opt, funcdef_no=121, decl_uid=12743, cgraph_uid=121, symbol_order=142)

Partition 0: size 12 align 16
	req

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25
Edge 2->23 redirected to 30
Predictions for insn 209 bb 29
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 21->22 to 29 failed.
Forwarding edge 30->31 to 24 failed.


try_optimize_cfg iteration 2

Forwarding edge 21->22 to 29 failed.
Forwarding edge 30->31 to 24 failed.


;;
;; Full RTL generated for this function:
;;
(note 3 0 18 NOTE_INSN_DELETED)
(note 18 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 18 5 2 (set (reg/v:SI 112 [ key ])
        (reg:SI 5 di [ key ])) nscd.c:399 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 113 [ arg ])
        (reg:DI 4 si [ arg ])) nscd.c:399 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 114 [ state ])
        (reg:DI 1 dx [ state ])) nscd.c:399 -1
     (nil))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 20 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13536+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:399 -1
     (nil))
(insn 20 8 21 2 (parallel [
            (set (reg:SI 115)
                (plus:SI (reg/v:SI 112 [ key ])
                    (const_int -70 [0xffffffffffffffba])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:400 -1
     (nil))
(insn 21 20 22 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 115)
            (const_int 46 [0x2e]))) nscd.c:400 -1
     (nil))
(jump_insn 22 21 220 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 218)
            (pc))) nscd.c:400 612 {*jcc_1}
     (int_list:REG_BR_PROB 555 (nil))
 -> 218)
(note 220 22 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 220 24 4 (set (reg:DI 116)
        (zero_extend:DI (reg:SI 115))) nscd.c:400 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 117)
        (label_ref:DI 30)) nscd.c:400 -1
     (insn_list:REG_LABEL_OPERAND 30 (nil)))
(insn 25 24 26 4 (set (reg:SI 118)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 116)
                    (const_int 2 [0x2]))
                (reg/f:DI 117)) [0  S4 A8])) nscd.c:400 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 119)
        (sign_extend:DI (reg:SI 118))) nscd.c:400 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 121)
        (label_ref:DI 30)) nscd.c:400 -1
     (insn_list:REG_LABEL_OPERAND 30 (nil)))
(insn 28 27 29 4 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg:DI 119)
                    (reg:DI 121)))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:400 -1
     (nil))
(jump_insn 29 28 30 4 (parallel [
            (set (pc)
                (reg:DI 120))
            (use (label_ref 30))
        ]) nscd.c:400 -1
     (nil)
 -> 30)
(code_label 30 29 31 62 "" [3 uses])
(jump_table_data 31 30 32 (addr_diff_vec:SI (label_ref:DI 30)
         [
            (label_ref:DI 39)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 49)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 164)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 33)
            (label_ref:DI 218)
            (label_ref:DI 44)
            (label_ref:DI 113)
            (label_ref:DI 218)
            (label_ref:DI 118)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 218)
            (label_ref:DI 154)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 32 31 33)
(code_label 33 32 34 5 65 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("debug_level") [flags 0x40]  <var_decl 0x2aae34890e10 debug_level>) [2 debug_level+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("debug_level") [flags 0x40]  <var_decl 0x2aae34890e10 debug_level>) [2 debug_level+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:403 -1
     (nil))
(insn 36 35 13 5 (set (mem/c:SI (symbol_ref:DI ("run_mode") [flags 0x2]  <var_decl 0x2aae34987c60 run_mode>) [20 run_mode+0 S4 A32])
        (const_int 2 [0x2])) nscd.c:404 -1
     (nil))
(insn 13 36 37 5 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 37 13 38 5 (set (pc)
        (label_ref 176)) nscd.c:405 -1
     (nil)
 -> 176)
(barrier 38 37 39)
(code_label 39 38 40 6 61 "" [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 12 6 (set (mem/c:SI (symbol_ref:DI ("run_mode") [flags 0x2]  <var_decl 0x2aae34987c60 run_mode>) [20 run_mode+0 S4 A32])
        (const_int 1 [0x1])) nscd.c:408 -1
     (nil))
(insn 12 41 42 6 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 42 12 43 6 (set (pc)
        (label_ref 176)) nscd.c:409 -1
     (nil)
 -> 176)
(barrier 43 42 44)
(code_label 44 43 45 7 66 "" [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 17 7 (set (mem/f/c:DI (symbol_ref:DI ("conffile") [flags 0x2]  <var_decl 0x2aae34987cf0 conffile>) [1 conffile+0 S8 A64])
        (reg/v/f:DI 113 [ arg ])) nscd.c:412 -1
     (nil))
(insn 17 46 47 7 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 47 17 48 7 (set (pc)
        (label_ref 176)) nscd.c:413 -1
     (nil)
 -> 176)
(barrier 48 47 49)
(code_label 49 48 50 8 63 "" [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 51 50 52 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getuid") [flags 0x41]  <function_decl 0x2aae348fb798 getuid>) [0 getuid S1 A8])
            (const_int 0 [0]))) nscd.c:416 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getuid") [flags 0x41]  <function_decl 0x2aae348fb798 getuid>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 52 51 53 8 (set (reg:SI 99 [ D.13530 ])
        (reg:SI 0 ax)) nscd.c:416 -1
     (nil))
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13530 ])
            (const_int 0 [0]))) nscd.c:416 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nscd.c:416 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 67)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:417 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2aae34b71870 *.LC20>)) nscd.c:417 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:417 -1
     (nil))
(call_insn 59 58 60 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:417 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 60 59 61 9 (set (reg/f:DI 100 [ D.13529 ])
        (reg:DI 0 ax)) nscd.c:417 -1
     (nil))
(insn 61 60 62 9 (set (reg:DI 1 dx)
        (reg/f:DI 100 [ D.13529 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 62 61 63 9 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 63 62 64 9 (set (reg:SI 5 di)
        (const_int 4 [0x4])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 64 63 65 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 65 64 66 9 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 66 65 67)
(code_label 67 66 68 10 70 "" [1 uses])
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 69 68 70 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nscd_open_socket") [flags 0x3]  <function_decl 0x2aae3498d000 nscd_open_socket>) [0 nscd_open_socket S1 A8])
            (const_int 0 [0]))) nscd.c:380 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_open_socket") [flags 0x3]  <function_decl 0x2aae3498d000 nscd_open_socket>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 70 69 71 10 (set (reg/v:SI 103 [ sock ])
        (reg:SI 0 ax)) nscd.c:380 -1
     (nil))
(insn 71 70 72 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ sock ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:382 -1
     (nil))
(jump_insn 72 71 73 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) nscd.c:382 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 77)
(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:383 -1
     (nil))
(call_insn 75 74 76 11 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:383 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 76 75 77)
(code_label 77 76 78 12 71 "" [1 uses])
(note 78 77 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 req.version+0 S4 A128])
        (const_int 2 [0x2])) nscd.c:386 -1
     (nil))
(insn 80 79 81 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [18 req.type+0 S4 A32])
        (const_int 8 [0x8])) nscd.c:387 -1
     (nil))
(insn 81 80 103 12 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 req.key_len+0 S4 A64])
        (const_int 0 [0])) nscd.c:388 -1
     (nil))
(code_label 103 81 82 13 74 "" [1 uses])
(note 82 103 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 13 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:390 -1
     (nil))
(insn 84 83 85 13 (set (reg:SI 2 cx)
        (const_int 16384 [0x4000])) nscd.c:390 -1
     (nil))
(insn 85 84 86 13 (set (reg:DI 1 dx)
        (const_int 12 [0xc])) nscd.c:390 -1
     (nil))
(insn 86 85 87 13 (set (reg:DI 4 si)
        (reg:DI 122)) nscd.c:390 -1
     (nil))
(insn 87 86 88 13 (set (reg:SI 5 di)
        (reg/v:SI 103 [ sock ])) nscd.c:390 -1
     (nil))
(call_insn 88 87 89 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("send") [flags 0x41]  <function_decl 0x2aae347abbd0 send>) [0 send S1 A8])
            (const_int 0 [0]))) nscd.c:390 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("send") [flags 0x41]  <function_decl 0x2aae347abbd0 send>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 89 88 90 13 (set (reg/v:DI 104 [ nbytes ])
        (reg:DI 0 ax)) nscd.c:390 -1
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 104 [ nbytes ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:390 -1
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) nscd.c:390 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 99)
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 104 [ nbytes ])
            (const_int 12 [0xc]))) -1
     (nil))
(insn 94 93 95 14 (set (reg:QI 124)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 95 94 96 14 (set (reg:SI 123 [ D.13534 ])
        (zero_extend:SI (reg:QI 124))) -1
     (nil))
(insn 96 95 97 14 (set (reg:SI 108 [ D.13528 ])
        (reg:SI 123 [ D.13534 ])) -1
     (nil))
(jump_insn 97 96 98 14 (set (pc)
        (label_ref 106)) -1
     (nil)
 -> 106)
(barrier 98 97 99)
(code_label 99 98 100 15 72 "" [1 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 101 100 102 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:390 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 102 101 104 15 (set (reg/f:DI 105 [ D.13532 ])
        (reg:DI 0 ax)) nscd.c:390 -1
     (nil))
(insn 104 102 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 105 [ D.13532 ]) [2 *_41+0 S4 A32])
            (const_int 4 [0x4]))) nscd.c:390 -1
     (nil))
(jump_insn 105 104 219 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) nscd.c:390 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 103)
(note 219 105 9 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 9 219 106 16 (set (reg:SI 108 [ D.13528 ])
        (const_int 1 [0x1])) nscd.c:390 -1
     (nil))
(code_label 106 9 107 17 73 "" [1 uses])
(note 107 106 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 17 (set (reg:SI 5 di)
        (reg/v:SI 103 [ sock ])) nscd.c:392 -1
     (nil))
(call_insn 109 108 110 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:392 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 110 109 111 17 (set (reg:SI 5 di)
        (reg:SI 108 [ D.13528 ])) nscd.c:393 -1
     (nil))
(call_insn 111 110 112 17 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:393 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 112 111 113)
(code_label 113 112 114 18 67 "" [1 uses])
(note 114 113 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 15 18 (set (mem/c:QI (symbol_ref:DI ("get_stats") [flags 0x2]  <var_decl 0x2aae34a37510 get_stats>) [14 get_stats+0 S1 A8])
        (const_int 1 [0x1])) nscd.c:423 -1
     (nil))
(insn 15 115 116 18 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 116 15 117 18 (set (pc)
        (label_ref 176)) nscd.c:424 -1
     (nil)
 -> 176)
(barrier 117 116 118)
(code_label 118 117 119 19 68 "" [1 uses])
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg:DI 89 [ ivtmp.99 ])
        (symbol_ref:DI ("dbnames") [flags 0x40]  <var_decl 0x2aae34977480 dbnames>)) -1
     (nil))
(insn 121 120 132 19 (set (reg:DI 110 [ D.13535 ])
        (const:DI (plus:DI (symbol_ref:DI ("dbnames") [flags 0x40]  <var_decl 0x2aae34977480 dbnames>)
                (const_int 40 [0x28])))) -1
     (nil))
(code_label 132 121 122 20 76 "" [1 uses])
(note 122 132 123 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 20 (set (reg/f:DI 125)
        (mem/f:DI (reg:DI 89 [ ivtmp.99 ]) [1 MEM[base: _44, offset: 0B]+0 S8 A64])) nscd.c:432 -1
     (nil))
(insn 124 123 125 20 (set (reg:DI 4 si)
        (mem/f:DI (reg:DI 89 [ ivtmp.99 ]) [1 MEM[base: _44, offset: 0B]+0 S8 A64])) nscd.c:432 -1
     (nil))
(insn 125 124 126 20 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ arg ])) nscd.c:432 -1
     (nil))
(call_insn/i 126 125 127 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aae34366000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nscd.c:432 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aae34366000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 127 126 128 20 (set (reg:SI 92 [ D.13528 ])
        (reg:SI 0 ax)) nscd.c:432 -1
     (nil))
(insn 128 127 129 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.13528 ])
            (const_int 0 [0]))) nscd.c:432 -1
     (nil))
(jump_insn 129 128 130 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) nscd.c:432 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 195)
(note 130 129 131 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 133 21 (parallel [
            (set (reg:DI 89 [ ivtmp.99 ])
                (plus:DI (reg:DI 89 [ ivtmp.99 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 133 131 134 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ ivtmp.99 ])
            (reg:DI 110 [ D.13535 ]))) nscd.c:431 -1
     (nil))
(jump_insn 134 133 137 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) nscd.c:431 -1
     (int_list:REG_BR_PROB 9507 (nil))
 -> 132)
(note 137 134 135 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 135 137 136 22 (set (pc)
        (label_ref 181)) -1
     (nil)
 -> 181)
(barrier 136 135 199)
(code_label 199 136 138 23 78 "" [1 uses])
(note 138 199 139 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 23 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:442 -1
     (nil))
(insn 140 139 141 23 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2aae34b71870 *.LC20>)) nscd.c:442 -1
     (nil))
(insn 141 140 142 23 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:442 -1
     (nil))
(call_insn 142 141 143 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:442 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 143 142 144 23 (set (reg/f:DI 95 [ D.13529 ])
        (reg:DI 0 ax)) nscd.c:442 -1
     (nil))
(insn 144 143 145 23 (set (reg:DI 1 dx)
        (reg/f:DI 95 [ D.13529 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 145 144 146 23 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 146 145 147 23 (set (reg:SI 5 di)
        (const_int 4 [0x4])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 147 146 148 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 148 147 149 23 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 149 148 202)
(code_label 202 149 150 24 79 "" [1 uses])
(note 150 202 151 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 24 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ arg ])) nscd.c:444 -1
     (nil))
(call_insn/c/i 152 151 153 24 (call (mem:QI (symbol_ref:DI ("invalidate_db") [flags 0x3]  <function_decl 0x2aae34a34510 invalidate_db>) [0 invalidate_db S1 A8])
        (const_int 0 [0])) nscd.c:444 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("invalidate_db") [flags 0x3]  <function_decl 0x2aae34a34510 invalidate_db>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 153 152 154)
(code_label 154 153 155 25 69 "" [1 uses])
(note 155 154 156 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 25 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 157 156 158 25 (set (reg:DI 4 si)
        (const_int 0 [0])) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 158 157 159 25 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ arg ])) ../stdlib/stdlib.h:246 -1
     (nil))
(call_insn 159 158 160 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2aae34617a20 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ../stdlib/stdlib.h:246 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2aae34617a20 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 160 159 161 25 (set (reg:DI 96 [ D.13531 ])
        (reg:DI 0 ax)) ../stdlib/stdlib.h:246 -1
     (nil))
(insn 161 160 14 25 (set (mem/c:SI (symbol_ref:DI ("nthreads") [flags 0x40]  <var_decl 0x2aae34977870 nthreads>) [2 nthreads+0 S4 A32])
        (subreg:SI (reg:DI 96 [ D.13531 ]) 0)) nscd.c:448 -1
     (nil))
(insn 14 161 162 25 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 162 14 163 25 (set (pc)
        (label_ref 176)) nscd.c:449 -1
     (nil)
 -> 176)
(barrier 163 162 164)
(code_label 164 163 165 26 64 "" [1 uses])
(note 165 164 166 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 26 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:452 -1
     (nil))
(insn 167 166 168 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2aae34b71900 *.LC21>)) nscd.c:452 -1
     (nil))
(insn 168 167 169 26 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:452 -1
     (nil))
(call_insn 169 168 170 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:452 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 170 169 171 26 (set (reg/f:DI 102 [ D.13529 ])
        (reg:DI 0 ax)) nscd.c:452 -1
     (nil))
(insn 171 170 172 26 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ D.13529 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 172 171 173 26 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 173 172 174 26 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 174 173 175 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 175 174 16 26 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d360 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d360 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 16 175 215 26 (set (reg:SI 90 [ D.13526 ])
        (const_int 0 [0])) nscd.c:459 -1
     (nil))
(jump_insn 215 16 216 26 (set (pc)
        (label_ref 176)) -1
     (nil)
 -> 176)
(barrier 216 215 218)
(code_label 218 216 217 27 81 "" [40 uses])
(note 217 218 11 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 11 217 176 27 (set (reg:SI 90 [ D.13526 ])
        (const_int 7 [0x7])) nscd.c:456 -1
     (nil))
(code_label 176 11 177 28 60 "" [7 uses])
(note 177 176 178 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 28 (set (reg:SI 111 [ <retval> ])
        (reg:SI 90 [ D.13526 ])) -1
     (nil))
(jump_insn 179 178 180 28 (set (pc)
        (label_ref 206)) -1
     (nil)
 -> 206)
(barrier 180 179 181)
(code_label 181 180 182 29 77 "" [1 uses])
(note 182 181 183 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 29 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:437 -1
     (nil))
(insn 184 183 185 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2aae34b71990 *.LC22>)) nscd.c:437 -1
     (nil))
(insn 185 184 186 29 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:437 -1
     (nil))
(call_insn 186 185 187 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:437 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 187 186 188 29 (set (reg/f:DI 93 [ D.13529 ])
        (reg:DI 0 ax)) nscd.c:437 -1
     (nil))
(insn 188 187 189 29 (set (reg:DI 1 dx)
        (reg/v/f:DI 113 [ arg ])) nscd.c:437 -1
     (nil))
(insn 189 188 190 29 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.13529 ])) nscd.c:437 -1
     (nil))
(insn 190 189 191 29 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ state ])) nscd.c:437 -1
     (nil))
(insn 191 190 192 29 (set (reg:QI 0 ax)
        (const_int 0 [0])) nscd.c:437 -1
     (nil))
(call_insn 192 191 10 29 (call (mem:QI (symbol_ref:DI ("argp_error") [flags 0x41]  <function_decl 0x2aae3450d360 argp_error>) [0 argp_error S1 A8])
        (const_int 0 [0])) nscd.c:437 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("argp_error") [flags 0x41]  <function_decl 0x2aae3450d360 argp_error>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 10 192 193 29 (set (reg:SI 90 [ D.13526 ])
        (const_int 22 [0x16])) nscd.c:438 -1
     (nil))
(jump_insn 193 10 194 29 (set (pc)
        (label_ref 176)) nscd.c:438 -1
     (nil)
 -> 176)
(barrier 194 193 195)
(code_label 195 194 196 30 75 "" [1 uses])
(note 196 195 197 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(call_insn 197 196 198 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getuid") [flags 0x41]  <function_decl 0x2aae348fb798 getuid>) [0 getuid S1 A8])
            (const_int 0 [0]))) nscd.c:441 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getuid") [flags 0x41]  <function_decl 0x2aae348fb798 getuid>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 198 197 200 30 (set (reg:SI 94 [ D.13530 ])
        (reg:SI 0 ax)) nscd.c:441 -1
     (nil))
(insn 200 198 201 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.13530 ])
            (const_int 0 [0]))) nscd.c:441 -1
     (nil))
(jump_insn 201 200 205 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) nscd.c:441 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 199)
(note 205 201 203 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(jump_insn 203 205 204 31 (set (pc)
        (label_ref 202)) -1
     (nil)
 -> 202)
(barrier 204 203 206)
(code_label 206 204 214 32 59 "" [1 uses])
(note 214 206 207 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 207 214 208 32 (set (reg/i:SI 0 ax)
        (reg:SI 111 [ <retval> ])) nscd.c:460 -1
     (nil))
(insn 208 207 209 32 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.13536+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) nscd.c:460 -1
     (nil))
(jump_insn 209 208 221 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) nscd.c:460 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 212)
(note 221 209 210 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn 210 221 211 33 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) nscd.c:460 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2aae34af1000 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 211 210 212)
(code_label 212 211 222 34 80 "" [1 uses])
(note 222 212 213 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 213 222 0 34 (use (reg/i:SI 0 ax)) nscd.c:460 -1
     (nil))

;; Function do_exit (do_exit, funcdef_no=129, decl_uid=11078, cgraph_uid=129, symbol_order=150) (executed once)

Partition 0: size 24 align 8
	argp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Predictions for insn 9 bb 9
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 96 bb 10
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%
deleting block 14
deleting block 13
deleting block 10


try_optimize_cfg iteration 1

Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 21 NOTE_INSN_DELETED)
(note 21 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 21 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 child_ret+0 S4 A32])
        (reg:SI 5 di [ child_ret ])) nscd.c:659 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 99 [ errnum ])
        (reg:SI 4 si [ errnum ])) nscd.c:659 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 100 [ format ])
        (reg:DI 1 dx [ format ])) nscd.c:659 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 24 [0x18])) [0  S8 A8])
        (reg:DI 2 cx)) nscd.c:659 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 32 [0x20])) [0  S8 A8])
        (reg:DI 37 r8)) nscd.c:659 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 40 [0x28])) [0  S8 A8])
        (reg:DI 38 r9)) nscd.c:659 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax)
            (const_int 0 [0]))) nscd.c:659 -1
     (nil))
(jump_insn 9 8 101 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) nscd.c:659 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 18)
(note 101 9 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 101 11 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:V4SF 21 xmm0)) nscd.c:659 -1
     (nil))
(insn 11 10 12 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:V4SF 22 xmm1)) nscd.c:659 -1
     (nil))
(insn 12 11 13 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:V4SF 23 xmm2)) nscd.c:659 -1
     (nil))
(insn 13 12 14 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 96 [0x60])) [0  S16 A128])
        (reg:V4SF 24 xmm3)) nscd.c:659 -1
     (nil))
(insn 14 13 15 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 112 [0x70])) [0  S16 A128])
        (reg:V4SF 25 xmm4)) nscd.c:659 -1
     (nil))
(insn 15 14 16 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 128 [0x80])) [0  S16 A128])
        (reg:V4SF 26 xmm5)) nscd.c:659 -1
     (nil))
(insn 16 15 17 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 144 [0x90])) [0  S16 A128])
        (reg:V4SF 27 xmm6)) nscd.c:659 -1
     (nil))
(insn 17 16 18 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 160 [0xa0])) [0  S16 A128])
        (reg:V4SF 28 xmm7)) nscd.c:659 -1
     (nil))
(code_label 18 17 102 4 96 "" [1 uses])
(note 102 18 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 19 102 20 4 NOTE_INSN_FUNCTION_BEG)
(insn 20 19 23 4 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13546+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:659 -1
     (nil))
(insn 23 20 24 4 (set (reg:SI 87 [ D.13542 ])
        (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])) nscd.c:660 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.13542 ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:660 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) nscd.c:660 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 47)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:663 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) nscd.c:663 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 4 si)
        (reg:DI 101)) nscd.c:663 -1
     (nil))
(insn 30 29 31 6 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13542 ])) nscd.c:663 -1
     (nil))
(call_insn 31 30 32 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2aae348d1438 write>) [0 write S1 A8])
            (const_int 0 [0]))) nscd.c:663 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2aae348d1438 write>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 32 31 33 6 (set (reg:DI 88 [ D.13543 ])
        (reg:DI 0 ax)) nscd.c:663 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 88 [ D.13543 ]) 0)
            (const_int 4 [0x4]))) nscd.c:664 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) nscd.c:664 -1
     (int_list:REG_BR_PROB 2801 (nil))
 -> 42)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.12886") [flags 0x2]  <var_decl 0x2aae34a5e630 __PRETTY_FUNCTION__>)) nscd.c:664 -1
     (nil))
(insn 37 36 38 7 (set (reg:SI 1 dx)
        (const_int 664 [0x298])) nscd.c:664 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2aae34b88750 *.LC24>)) nscd.c:664 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2aae34b887e0 *.LC25>)) nscd.c:664 -1
     (nil))
(call_insn 40 39 41 7 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2aae34515000 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) nscd.c:664 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2aae34515000 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 41 40 42)
(code_label 42 41 43 8 98 "" [1 uses])
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:SI 102)
        (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])) nscd.c:665 -1
     (nil))
(insn 45 44 46 8 (set (reg:SI 5 di)
        (reg:SI 102)) nscd.c:665 -1
     (nil))
(call_insn 46 45 47 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:665 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 47 46 48 9 97 "" [1 uses])
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ format ])
            (const_int 0 [0]))) nscd.c:668 -1
     (nil))
(jump_insn 50 49 51 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) nscd.c:668 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 88)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (set (reg:DI 103)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2aae3446c090 stdout>) [1 stdout+0 S8 A64])) nscd.c:673 -1
     (nil))
(insn 53 52 54 10 (set (reg:DI 5 di)
        (reg:DI 103)) nscd.c:673 -1
     (nil))
(call_insn 54 53 55 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) nscd.c:673 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 56 10 (set (reg:DI 104)
        (mem/f/c:DI (symbol_ref:DI ("program_invocation_name") [flags 0x40]  <var_decl 0x2aae3446ce10 program_invocation_name>) [1 program_invocation_name+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 105)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 2 cx)
        (reg:DI 104)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2aae34b88870 *.LC26>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 59 58 60 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 5 di)
        (reg:DI 105)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 61 60 62 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 62 61 63 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 63 62 64 10 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:677 -1
     (nil))
(insn 64 63 65 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [24 MEM[(struct [1] *)&argp].gp_offset+0 S4 A64])
        (const_int 24 [0x18])) nscd.c:677 -1
     (nil))
(insn 65 64 66 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [24 MEM[(struct [1] *)&argp].fp_offset+0 S4 A32])
        (const_int 48 [0x30])) nscd.c:677 -1
     (nil))
(insn 66 65 67 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [24 MEM[(struct [1] *)&argp].overflow_arg_area+0 S8 A64])
        (reg/f:DI 81 virtual-incoming-args)) nscd.c:677 -1
     (nil))
(insn 67 66 68 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [24 MEM[(struct [1] *)&argp].reg_save_area+0 S8 A64])
        (reg/f:DI 20 frame)) nscd.c:677 -1
     (nil))
(insn 68 67 69 10 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) ../libio/bits/stdio2.h:127 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 108)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:127 -1
     (nil))
(insn 70 69 71 10 (set (reg:DI 2 cx)
        (reg:DI 107)) ../libio/bits/stdio2.h:127 -1
     (nil))
(insn 71 70 72 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 100 [ format ])) ../libio/bits/stdio2.h:127 -1
     (nil))
(insn 72 71 73 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:127 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 5 di)
        (reg:DI 108)) ../libio/bits/stdio2.h:127 -1
     (nil))
(call_insn 74 73 75 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__vfprintf_chk") [flags 0x41]  <function_decl 0x2aae343981b0 __vfprintf_chk>) [0 __builtin___vfprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:127 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__vfprintf_chk") [flags 0x41]  <function_decl 0x2aae343981b0 __vfprintf_chk>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 75 74 76 10 (set (reg:SI 5 di)
        (reg/v:SI 99 [ errnum ])) nscd.c:681 -1
     (nil))
(call_insn 76 75 77 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2aae347255e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) nscd.c:681 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2aae347255e8 strerror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 77 76 78 10 (set (reg/f:DI 95 [ D.13545 ])
        (reg:DI 0 ax)) nscd.c:681 -1
     (nil))
(insn 78 77 79 10 (set (reg:DI 109)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 2 cx)
        (reg/f:DI 95 [ D.13545 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 80 79 81 10 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2aae34b88a20 *.LC27>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 81 80 82 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 5 di)
        (reg:DI 109)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 83 82 84 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 84 83 85 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 85 84 86 10 (set (reg:DI 110)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) nscd.c:682 -1
     (nil))
(insn 86 85 87 10 (set (reg:DI 5 di)
        (reg:DI 110)) nscd.c:682 -1
     (nil))
(call_insn 87 86 88 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) nscd.c:682 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 88 87 89 11 99 "" [1 uses])
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [2 child_ret+0 S4 A32])) nscd.c:686 -1
     (nil))
(insn 91 90 92 11 (set (reg:SI 5 di)
        (reg:SI 111)) nscd.c:686 -1
     (nil))
(call_insn 92 91 93 11 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:686 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 93 92 0)

;; Function main (main, funcdef_no=118, decl_uid=12749, cgraph_uid=118, symbol_order=139) (executed once)

Partition 5: size 144 align 16
	st	fd
Partition 6: size 8 align 8
	endp	pid	status
Partition 3: size 4 align 4
	child_ret
Partition 0: size 4 align 4
	remaining

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68
Edge 32->39 redirected to 75
Predictions for insn 572 bb 74
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%
deleting block 77
deleting block 76
deleting block 74


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 11->12 to 71 failed.
Redirecting jump 102 from 16 to 71.
Forwarding edge 13->14 to 71 failed.
Redirecting jump 115 from 16 to 71.
deleting block 16
Edge 29->31 redirected to 32
Merging block 31 into block 30...
Merged blocks 30 and 31.
Merged 30 and 31 without moving.
Forwarding edge 60->61 to 65 failed.
Edge 63->61 redirected to 65
Forwarding edge 63->64 to 66 failed.
Forwarding edge 63->64 to 66 failed.
Forwarding edge 71->72 to 69 failed.


try_optimize_cfg iteration 2

Forwarding edge 11->12 to 71 failed.
Forwarding edge 13->14 to 71 failed.
Forwarding edge 60->61 to 65 failed.
Deleted label in block 61.
Forwarding edge 63->64 to 66 failed.
Forwarding edge 71->72 to 69 failed.


;;
;; Full RTL generated for this function:
;;
(note 2 0 11 NOTE_INSN_DELETED)
(note 11 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 11 4 2 (set (reg/v:SI 177 [ argc ])
        (reg:SI 5 di [ argc ])) nscd.c:139 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 178 [ argv ])
        (reg:DI 4 si [ argv ])) nscd.c:139 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 13 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.13589+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:139 -1
     (nil))
(insn 13 6 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2aae34ba9ab0 *.LC29>)) nscd.c:143 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 5 di)
        (const_int 6 [0x6])) nscd.c:143 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setlocale") [flags 0x41]  <function_decl 0x2aae348b7360 setlocale>) [0 setlocale S1 A8])
            (const_int 0 [0]))) nscd.c:143 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("setlocale") [flags 0x41]  <function_decl 0x2aae348b7360 setlocale>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:145 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("textdomain") [flags 0x41]  <function_decl 0x2aae348b7000 textdomain>) [0 textdomain S1 A8])
            (const_int 0 [0]))) nscd.c:145 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("textdomain") [flags 0x41]  <function_decl 0x2aae348b7000 textdomain>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:151 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (const_int 0 [0])) nscd.c:151 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 37 r8)
        (reg:DI 179)) nscd.c:151 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) nscd.c:151 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 178 [ argv ])) nscd.c:151 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 4 si)
        (reg/v:SI 177 [ argc ])) nscd.c:151 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("argp") [flags 0x2]  <var_decl 0x2aae34a373f0 argp>)) nscd.c:151 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("argp_parse") [flags 0x41]  <function_decl 0x2aae344f2ca8 argp_parse>) [0 argp_parse S1 A8])
            (const_int 0 [0]))) nscd.c:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("argp_parse") [flags 0x41]  <function_decl 0x2aae344f2ca8 argp_parse>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 26 25 27 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 177 [ argc ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])) [2 remaining+0 S4 A128]))) nscd.c:153 -1
     (nil))
(jump_insn 27 26 28 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nscd.c:153 -1
     (int_list:REG_BR_PROB 2801 (nil))
 -> 49)
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:155 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x2aae34ba9b40 *.LC30>)) nscd.c:155 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd.c:155 -1
     (nil))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>) [0 __builtin_dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:155 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dcgettext") [flags 0x41]  <function_decl 0x2aae3437fd80 dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 33 32 34 4 (set (reg/f:DI 142 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:155 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 1 dx)
        (reg/f:DI 142 [ D.13576 ])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 35 34 36 4 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 5 di)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(insn 37 36 38 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (nil))
(call_insn 38 37 39 4 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d360 __error_alias>) [0 __error_alias S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:42 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d360 __error_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 39 38 40 4 (set (reg:DI 180)
        (mem/f/c:DI (symbol_ref:DI ("program_invocation_short_name") [flags 0x40]  <var_decl 0x2aae3446cea0 program_invocation_short_name>) [1 program_invocation_short_name+0 S8 A64])) nscd.c:156 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 181)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x2aae3446c090 stdout>) [1 stdout+0 S8 A64])) nscd.c:156 -1
     (nil))
(insn 41 40 42 4 (set (reg:DI 2 cx)
        (reg:DI 180)) nscd.c:156 -1
     (nil))
(insn 42 41 43 4 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) nscd.c:156 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 4 si)
        (reg:DI 181)) nscd.c:156 -1
     (nil))
(insn 44 43 45 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("argp") [flags 0x2]  <var_decl 0x2aae34a373f0 argp>)) nscd.c:156 -1
     (nil))
(call_insn 45 44 46 4 (call (mem:QI (symbol_ref:DI ("argp_help") [flags 0x41]  <function_decl 0x2aae344f2e58 argp_help>) [0 argp_help S1 A8])
        (const_int 0 [0])) nscd.c:156 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("argp_help") [flags 0x41]  <function_decl 0x2aae344f2e58 argp_help>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 46 45 47 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:157 -1
     (nil))
(call_insn 47 46 48 4 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:157 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 48 47 49)
(code_label 49 48 50 5 109 "" [1 uses])
(note 50 49 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 5 (set (reg:DI 182)
        (mem/f/c:DI (symbol_ref:DI ("conffile") [flags 0x2]  <var_decl 0x2aae34987cf0 conffile>) [1 conffile+0 S8 A64])) nscd.c:161 -1
     (nil))
(insn 52 51 53 5 (set (reg:DI 4 si)
        (symbol_ref:DI ("dbs") [flags 0x40]  <var_decl 0x2aae349773f0 dbs>)) nscd.c:161 -1
     (nil))
(insn 53 52 54 5 (set (reg:DI 5 di)
        (reg:DI 182)) nscd.c:161 -1
     (nil))
(call_insn 54 53 55 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nscd_parse_file") [flags 0x41]  <function_decl 0x2aae3498d6c0 nscd_parse_file>) [0 nscd_parse_file S1 A8])
            (const_int 0 [0]))) nscd.c:161 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_parse_file") [flags 0x41]  <function_decl 0x2aae3498d6c0 nscd_parse_file>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 55 54 56 5 (set (reg:SI 91 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:161 -1
     (nil))
(insn 56 55 57 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:161 -1
     (nil))
(jump_insn 57 56 58 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nscd.c:161 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 70)
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 6 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:165 -1
     (nil))
(insn 60 59 61 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x2aae34ba9bd0 *.LC31>)) nscd.c:165 -1
     (nil))
(insn 61 60 62 6 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:165 -1
     (nil))
(call_insn 62 61 63 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:165 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 63 62 64 6 (set (reg/f:DI 92 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:165 -1
     (nil))
(insn 64 63 65 6 (set (reg:DI 1 dx)
        (reg/f:DI 92 [ D.13576 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 65 64 66 6 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 66 65 67 6 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 67 66 68 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 68 67 69 6 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 69 68 70)
(code_label 70 69 71 7 110 "" [1 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (symbol_ref:DI ("get_stats") [flags 0x2]  <var_decl 0x2aae34a37510 get_stats>) [14 get_stats+0 S1 A8])
            (const_int 0 [0]))) nscd.c:168 -1
     (nil))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) nscd.c:168 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 77)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 74 76 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("receive_print_stats") [flags 0x41]  <function_decl 0x2aae3498d870 receive_print_stats>) [0 receive_print_stats S1 A8])
            (const_int 0 [0]))) nscd.c:170 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("receive_print_stats") [flags 0x41]  <function_decl 0x2aae3498d870 receive_print_stats>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(barrier 76 75 77)
(code_label 77 76 78 9 111 "" [1 uses])
(note 78 77 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x2aae34ba9c60 *.LC32>)) nscd.c:580 -1
     (nil))
(insn 80 79 81 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2aae34b2d240 *.LC9>)) nscd.c:580 -1
     (nil))
(call_insn 81 80 82 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aae344700d8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) nscd.c:580 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aae344700d8 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 82 81 83 9 (set (reg/v/f:DI 146 [ fp ])
        (reg:DI 0 ax)) nscd.c:580 -1
     (nil))
(insn 83 82 84 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 146 [ fp ])
            (const_int 0 [0]))) nscd.c:581 -1
     (nil))
(jump_insn 84 83 85 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 540)
            (pc))) nscd.c:581 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 540)
(note 85 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 10 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:586 -1
     (nil))
(insn 87 86 88 10 (set (reg:DI 1 dx)
        (reg:DI 183)) nscd.c:586 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x2aae34ba9cf0 *.LC33>)) nscd.c:586 -1
     (nil))
(insn 89 88 90 10 (set (reg:DI 5 di)
        (reg/v/f:DI 146 [ fp ])) nscd.c:586 -1
     (nil))
(insn 90 89 91 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) nscd.c:586 -1
     (nil))
(call_insn 91 90 92 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fscanf") [flags 0x41]  <function_decl 0x2aae3436c798 fscanf>) [0 __builtin_fscanf S1 A8])
            (const_int 0 [0]))) nscd.c:586 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fscanf") [flags 0x41]  <function_decl 0x2aae3436c798 fscanf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 92 91 93 10 (set (reg/v:SI 147 [ n ])
        (reg:SI 0 ax)) nscd.c:586 -1
     (nil))
(insn 93 92 94 10 (set (reg:DI 5 di)
        (reg/v/f:DI 146 [ fp ])) nscd.c:587 -1
     (nil))
(call_insn 94 93 95 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nscd.c:587 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 96 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 147 [ n ])
            (const_int 1 [0x1]))) nscd.c:593 -1
     (nil))
(jump_insn 96 95 112 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) nscd.c:593 -1
     (int_list:REG_BR_PROB 2801 (nil))
 -> 105)
(code_label 112 96 97 11 116 "" [1 uses])
(note 97 112 98 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 98 97 99 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x2aae348fb000 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) nscd.c:593 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x2aae348fb000 getpid>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 99 98 100 11 (set (reg:SI 150 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:593 -1
     (nil))
(insn 100 99 101 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ D.13574 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])) [2 pid+0 S4 A64]))) nscd.c:593 -1
     (nil))
(jump_insn 101 100 104 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) nscd.c:593 -1
     (int_list:REG_BR_PROB 6218 (nil))
 -> 118)
(note 104 101 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 104 103 12 (set (pc)
        (label_ref:DI 540)) nscd.c:593 654 {jump}
     (nil)
 -> 540)
(barrier 103 102 105)
(code_label 105 103 106 13 113 "" [1 uses])
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [2 pid+0 S4 A64])) nscd.c:593 -1
     (nil))
(insn 108 107 109 13 (set (reg:SI 4 si)
        (const_int 0 [0])) nscd.c:593 -1
     (nil))
(insn 109 108 110 13 (set (reg:SI 5 di)
        (reg:SI 184)) nscd.c:593 -1
     (nil))
(call_insn 110 109 111 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x2aae345a3870 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) nscd.c:593 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x2aae345a3870 kill>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 111 110 113 13 (set (reg:SI 149 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:593 -1
     (nil))
(insn 113 111 114 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 149 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:593 -1
     (nil))
(jump_insn 114 113 117 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) nscd.c:593 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 112)
(note 117 114 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 115 117 116 14 (set (pc)
        (label_ref:DI 540)) nscd.c:593 654 {jump}
     (nil)
 -> 540)
(barrier 116 115 118)
(code_label 118 116 119 15 114 "" [1 uses])
(note 119 118 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 15 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:174 -1
     (nil))
(insn 121 120 122 15 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x2aae34ba9d80 *.LC34>)) nscd.c:174 -1
     (nil))
(insn 122 121 123 15 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:174 -1
     (nil))
(call_insn 123 122 124 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:174 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 124 123 125 15 (set (reg/f:DI 95 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:174 -1
     (nil))
(insn 125 124 126 15 (set (reg:DI 1 dx)
        (reg/f:DI 95 [ D.13576 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 126 125 127 15 (set (reg:SI 4 si)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 127 126 128 15 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 128 127 129 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 129 128 130 15 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 130 129 552)
(code_label 552 130 135 17 146 "" [1 uses])
(note 135 552 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.13580 ])
            (const_int 0 [0]))) nscd.c:188 -1
     (nil))
(jump_insn 137 136 138 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) nscd.c:188 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 288)
(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:192 -1
     (nil))
(insn 140 139 141 18 (set (reg:DI 5 di)
        (reg:DI 185)) nscd.c:192 -1
     (nil))
(call_insn 141 140 142 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pipe") [flags 0x41]  <function_decl 0x2aae348d1870 pipe>) [0 pipe S1 A8])
            (const_int 0 [0]))) nscd.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("pipe") [flags 0x41]  <function_decl 0x2aae348d1870 pipe>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 142 141 143 18 (set (reg:SI 101 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:192 -1
     (nil))
(insn 143 142 144 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:192 -1
     (nil))
(jump_insn 144 143 145 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) nscd.c:192 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 159)
(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 19 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:194 -1
     (nil))
(insn 147 146 148 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x2aae34ba9e10 *.LC35>)) nscd.c:194 -1
     (nil))
(insn 148 147 149 19 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:194 -1
     (nil))
(call_insn 149 148 150 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 150 149 151 19 (set (reg/f:DI 102 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:194 -1
     (nil))
(call_insn/u 151 150 152 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:193 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 152 151 153 19 (set (reg/f:DI 103 [ D.13581 ])
        (reg:DI 0 ax)) nscd.c:193 -1
     (nil))
(insn 153 152 154 19 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ D.13576 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 154 153 155 19 (set (reg:SI 4 si)
        (mem:SI (reg/f:DI 103 [ D.13581 ]) [2 *_46+0 S4 A32])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 155 154 156 19 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 156 155 157 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 157 156 158 19 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 158 157 159)
(code_label 159 158 160 20 118 "" [1 uses])
(note 160 159 161 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 161 160 162 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fork") [flags 0x41]  <function_decl 0x2aae34382bd0 fork>) [0 __builtin_fork S1 A8])
            (const_int 0 [0]))) nscd.c:196 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fork") [flags 0x41]  <function_decl 0x2aae34382bd0 fork>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 162 161 163 20 (set (reg:SI 186)
        (reg:SI 0 ax)) nscd.c:196 -1
     (nil))
(insn 163 162 164 20 (set (reg:SI 187)
        (reg:SI 186)) nscd.c:196 -1
     (nil))
(insn 164 163 165 20 (set (reg/v:SI 105 [ pid ])
        (reg:SI 187)) nscd.c:196 -1
     (nil))
(insn 165 164 166 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 105 [ pid ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:197 -1
     (nil))
(jump_insn 166 165 167 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) nscd.c:197 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 181)
(note 167 166 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 21 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:198 -1
     (nil))
(insn 169 168 170 21 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x2aae34ba9ea0 *.LC36>)) nscd.c:198 -1
     (nil))
(insn 170 169 171 21 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:198 -1
     (nil))
(call_insn 171 170 172 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:198 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 172 171 173 21 (set (reg/f:DI 106 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:198 -1
     (nil))
(call_insn/u 173 172 174 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:198 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 174 173 175 21 (set (reg/f:DI 107 [ D.13581 ])
        (reg:DI 0 ax)) nscd.c:198 -1
     (nil))
(insn 175 174 176 21 (set (reg:DI 1 dx)
        (reg/f:DI 106 [ D.13576 ])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 176 175 177 21 (set (reg:SI 4 si)
        (mem:SI (reg/f:DI 107 [ D.13581 ]) [2 *_52+0 S4 A32])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 177 176 178 21 (set (reg:SI 5 di)
        (const_int 1 [0x1])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(insn 178 177 179 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (nil))
(call_insn 179 178 180 21 (call (mem:QI (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>) [0 __error_noreturn S1 A8])
        (const_int 0 [0])) ../include/bits/../../misc/bits/error.h:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*error") [flags 0x41]  <function_decl 0x2aae3488d438 __error_noreturn>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 180 179 181)
(code_label 181 180 182 22 119 "" [1 uses])
(note 182 181 183 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 105 [ pid ])
            (const_int 0 [0]))) nscd.c:199 -1
     (nil))
(jump_insn 184 183 185 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) nscd.c:199 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 281)
(note 185 184 186 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 23 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -156 [0xffffffffffffff64])) [2 fd+4 S4 A32])) nscd.c:202 -1
     (nil))
(insn 187 186 188 23 (set (reg:SI 5 di)
        (reg:SI 188)) nscd.c:202 -1
     (nil))
(call_insn 188 187 189 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:202 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 189 188 190 23 (set (reg:SI 112 [ D.13574 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 fd+0 S4 A128])) nscd.c:203 -1
     (nil))
(insn 190 189 191 23 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [2 child_ret+0 S4 A32])
        (const_int 0 [0])) nscd.c:623 -1
     (nil))
(insn 191 190 192 23 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -172 [0xffffffffffffff54])))
            (clobber (reg:CC 17 flags))
        ]) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 192 191 193 23 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 193 192 194 23 (set (reg:DI 4 si)
        (reg:DI 189)) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 194 193 195 23 (set (reg:SI 5 di)
        (reg:SI 112 [ D.13574 ])) ../posix/bits/unistd.h:44 -1
     (nil))
(call_insn 195 194 196 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2aae34913510 __read_alias>) [0 __read_alias S1 A8])
            (const_int 0 [0]))) ../posix/bits/unistd.h:44 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*read") [flags 0x41]  <function_decl 0x2aae34913510 __read_alias>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 196 195 197 23 (set (reg:DI 94 [ D.13578 ])
        (reg:DI 0 ax)) ../posix/bits/unistd.h:44 -1
     (nil))
(insn 197 196 198 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg:DI 94 [ D.13578 ]) 0)
            (const_int 0 [0]))) nscd.c:628 -1
     (nil))
(jump_insn 198 197 199 23 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 202)
            (pc))) nscd.c:628 -1
     (int_list:REG_BR_PROB 1312 (nil))
 -> 202)
(note 199 198 200 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -172 [0xffffffffffffff54])) [2 child_ret+0 S4 A32])
            (const_int 0 [0]))) nscd.c:628 -1
     (nil))
(jump_insn 201 200 202 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) nscd.c:628 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 271)
(code_label 202 201 203 25 121 "" [1 uses])
(note 203 202 204 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 204 203 205 25 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:631 -1
     (nil))
(insn 205 204 206 25 (set (reg:DI 5 di)
        (reg:DI 190)) nscd.c:631 -1
     (nil))
(call_insn 206 205 207 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wait") [flags 0x41]  <function_decl 0x2aae3495b870 wait>) [0 wait S1 A8])
            (const_int 0 [0]))) nscd.c:631 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("wait") [flags 0x41]  <function_decl 0x2aae3495b870 wait>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 207 206 208 25 (set (reg/v:SI 154 [ err ])
        (reg:SI 0 ax)) nscd.c:631 -1
     (nil))
(insn 208 207 209 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 154 [ err ])
            (const_int 0 [0]))) nscd.c:633 -1
     (nil))
(jump_insn 209 208 210 25 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) nscd.c:633 -1
     (int_list:REG_BR_PROB 9119 (nil))
 -> 224)
(note 210 209 211 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 26 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:635 -1
     (nil))
(insn 212 211 213 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x2aae34ba9f30 *.LC37>)) nscd.c:635 -1
     (nil))
(insn 213 212 214 26 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:635 -1
     (nil))
(call_insn 214 213 215 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:635 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 215 214 216 26 (set (reg/f:DI 155 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:635 -1
     (nil))
(insn 216 215 217 26 (set (reg:DI 191)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 217 216 218 26 (set (reg:DI 1 dx)
        (reg/f:DI 155 [ D.13576 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 218 217 219 26 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 219 218 220 26 (set (reg:DI 5 di)
        (reg:DI 191)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 220 219 221 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 221 220 7 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 7 221 222 26 (set (reg:SI 172 [ D.13574 ])
        (const_int 1 [0x1])) nscd.c:636 -1
     (nil))
(jump_insn 222 7 223 26 (set (pc)
        (label_ref 276)) nscd.c:636 -1
     (nil)
 -> 276)
(barrier 223 222 224)
(code_label 224 223 225 27 123 "" [1 uses])
(note 225 224 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 27 (set (reg:SI 157 [ D.13574 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [2 status+0 S4 A64])) nscd.c:639 -1
     (nil))
(insn 227 226 228 27 (parallel [
            (set (reg:SI 192 [ D.13574 ])
                (and:SI (reg:SI 157 [ D.13574 ])
                    (const_int 127 [0x7f])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:639 -1
     (nil))
(insn 228 227 229 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 192 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:639 -1
     (nil))
(jump_insn 229 228 230 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) nscd.c:639 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 246)
(note 230 229 231 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 28 (parallel [
            (set (reg:SI 193 [ D.13574 ])
                (and:SI (reg:SI 157 [ D.13574 ])
                    (const_int 65280 [0xff00])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:641 -1
     (nil))
(insn 232 231 233 28 (parallel [
            (set (reg:SI 160 [ D.13574 ])
                (ashiftrt:SI (reg:SI 193 [ D.13574 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:641 -1
     (nil))
(insn 233 232 234 28 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [2 child_ret+0 S4 A32])
        (reg:SI 160 [ D.13574 ])) nscd.c:641 -1
     (nil))
(insn 234 233 235 28 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:642 -1
     (nil))
(insn 235 234 236 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x2aae34bb7000 *.LC38>)) nscd.c:642 -1
     (nil))
(insn 236 235 237 28 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:642 -1
     (nil))
(call_insn 237 236 238 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:642 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 238 237 239 28 (set (reg/f:DI 161 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:642 -1
     (nil))
(insn 239 238 240 28 (set (reg:DI 194)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 240 239 241 28 (set (reg:SI 2 cx)
        (reg:SI 160 [ D.13574 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 241 240 242 28 (set (reg:DI 1 dx)
        (reg/f:DI 161 [ D.13576 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 242 241 243 28 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 243 242 244 28 (set (reg:DI 5 di)
        (reg:DI 194)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 244 243 245 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 245 244 246 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(code_label 246 245 247 29 125 "" [1 uses])
(note 247 246 248 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 29 (set (reg:SI 163 [ D.13574 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [2 status+0 S4 A64])) nscd.c:644 -1
     (nil))
(insn 249 248 250 29 (parallel [
            (set (reg:QI 195 [ D.13586 ])
                (and:QI (subreg:QI (reg:SI 163 [ D.13574 ]) 0)
                    (const_int 127 [0x7f])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:644 -1
     (nil))
(insn 250 249 251 29 (parallel [
            (set (reg:QI 196 [ D.13586 ])
                (plus:QI (reg:QI 195 [ D.13586 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:644 -1
     (nil))
(insn 251 250 252 29 (parallel [
            (set (reg:QI 197 [ D.13587 ])
                (ashiftrt:QI (reg:QI 196 [ D.13586 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:644 -1
     (nil))
(insn 252 251 253 29 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:QI 197 [ D.13587 ])
            (const_int 0 [0]))) nscd.c:644 -1
     (nil))
(jump_insn 253 252 254 29 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 271)
            (pc))) nscd.c:644 612 {*jcc_1}
     (int_list:REG_BR_PROB 4752 (nil))
 -> 271)
(note 254 253 255 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 30 (parallel [
            (set (reg:SI 169 [ D.13574 ])
                (and:SI (reg:SI 163 [ D.13574 ])
                    (const_int 127 [0x7f])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:646 -1
     (nil))
(insn 256 255 257 30 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [2 child_ret+0 S4 A32])
        (reg:SI 169 [ D.13574 ])) nscd.c:646 -1
     (nil))
(insn 257 256 258 30 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:647 -1
     (nil))
(insn 258 257 259 30 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x2aae34bb7090 *.LC39>)) nscd.c:647 -1
     (nil))
(insn 259 258 260 30 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:647 -1
     (nil))
(call_insn 260 259 261 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:647 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 261 260 262 30 (set (reg/f:DI 170 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:647 -1
     (nil))
(insn 262 261 263 30 (set (reg:DI 198)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x2aae3446c120 stderr>) [1 stderr+0 S8 A64])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 263 262 264 30 (set (reg:SI 2 cx)
        (reg:SI 169 [ D.13574 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 264 263 265 30 (set (reg:DI 1 dx)
        (reg/f:DI 170 [ D.13576 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 265 264 266 30 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 266 265 267 30 (set (reg:DI 5 di)
        (reg:DI 198)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 267 266 268 30 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 268 267 271 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(code_label 271 268 272 32 122 "" [2 uses])
(note 272 271 273 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 32 (set (reg:SI 5 di)
        (reg:SI 112 [ D.13574 ])) nscd.c:652 -1
     (nil))
(call_insn 274 273 275 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:652 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 275 274 276 32 (set (reg:SI 172 [ D.13574 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [2 child_ret+0 S4 A32])) nscd.c:654 -1
     (nil))
(code_label 276 275 277 33 124 "" [1 uses])
(note 277 276 278 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 33 (set (reg:SI 5 di)
        (reg:SI 172 [ D.13574 ])) nscd.c:203 -1
     (nil))
(call_insn 279 278 280 33 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) nscd.c:203 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x2aae34382000 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 280 279 281)
(code_label 281 280 282 34 120 "" [1 uses])
(note 282 281 283 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 34 (set (reg:SI 199)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -160 [0xffffffffffffff60])) [2 fd+0 S4 A128])) nscd.c:208 -1
     (nil))
(insn 284 283 285 34 (set (reg:SI 5 di)
        (reg:SI 199)) nscd.c:208 -1
     (nil))
(call_insn 285 284 286 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:208 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 286 285 287 34 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -156 [0xffffffffffffff64])) [2 fd+4 S4 A32])) nscd.c:209 -1
     (nil))
(insn 287 286 288 34 (set (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])
        (reg:SI 200)) nscd.c:209 -1
     (nil))
(code_label 288 287 289 35 117 "" [1 uses])
(note 289 288 290 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 35 (set (reg:SI 4 si)
        (const_int 2 [0x2])) ../include/bits/../../io/bits/fcntl2.h:53 -1
     (nil))
(insn 291 290 292 35 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x2aae34bb7120 *.LC40>)) ../include/bits/../../io/bits/fcntl2.h:53 -1
     (nil))
(insn 292 291 293 35 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../include/bits/../../io/bits/fcntl2.h:53 -1
     (nil))
(call_insn 293 292 294 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*open") [flags 0x41]  <function_decl 0x2aae3489fd80 __open_alias>) [0 __open_alias S1 A8])
            (const_int 0 [0]))) ../include/bits/../../io/bits/fcntl2.h:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*open") [flags 0x41]  <function_decl 0x2aae3489fd80 __open_alias>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 294 293 295 35 (set (reg/v:SI 145 [ nullfd ])
        (reg:SI 0 ax)) ../include/bits/../../io/bits/fcntl2.h:53 -1
     (nil))
(insn 295 294 296 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ nullfd ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:214 -1
     (nil))
(jump_insn 296 295 297 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 581)
            (pc))) nscd.c:214 612 {*jcc_1}
     (int_list:REG_BR_PROB 4877 (nil))
 -> 581)
(note 297 296 298 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 36 (parallel [
            (set (reg:DI 201)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:218 -1
     (nil))
(insn 299 298 300 36 (set (reg:DI 1 dx)
        (reg:DI 201)) nscd.c:218 -1
     (nil))
(insn 300 299 301 36 (set (reg:SI 4 si)
        (reg/v:SI 145 [ nullfd ])) nscd.c:218 -1
     (nil))
(insn 301 300 302 36 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:218 -1
     (nil))
(call_insn 302 301 303 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fxstat64") [flags 0x41]  <function_decl 0x2aae346ea1b0 __fxstat64>) [0 __fxstat64 S1 A8])
            (const_int 0 [0]))) nscd.c:218 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fxstat64") [flags 0x41]  <function_decl 0x2aae346ea1b0 __fxstat64>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 303 302 304 36 (set (reg:SI 114 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:218 -1
     (nil))
(insn 304 303 305 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 114 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:218 -1
     (nil))
(jump_insn 305 304 306 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 331)
            (pc))) nscd.c:218 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 331)
(note 306 305 307 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 37 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -136 [0xffffffffffffff78])) [2 st.st_mode+0 S4 A64])) nscd.c:218 -1
     (nil))
(insn 308 307 309 37 (parallel [
            (set (reg:SI 202 [ D.13582 ])
                (and:SI (reg:SI 203)
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:218 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -136 [0xffffffffffffff78])) [2 st.st_mode+0 S4 A64])
            (const_int 61440 [0xf000]))
        (nil)))
(insn 309 308 310 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.13582 ])
            (const_int 8192 [0x2000]))) nscd.c:218 -1
     (nil))
(jump_insn 310 309 311 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 331)
            (pc))) nscd.c:218 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 331)
(note 311 310 312 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [6 st.st_rdev+0 S8 A64])
            (const_int 259 [0x103]))) nscd.c:220 -1
     (nil))
(jump_insn 313 312 314 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 331)
            (pc))) nscd.c:220 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 331)
(note 314 313 315 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 39 (set (reg:SI 4 si)
        (const_int 0 [0])) nscd.c:225 -1
     (nil))
(insn 316 315 317 39 (set (reg:SI 5 di)
        (reg/v:SI 145 [ nullfd ])) nscd.c:225 -1
     (nil))
(call_insn 317 316 318 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>) [0 dup2 S1 A8])
            (const_int 0 [0]))) nscd.c:225 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 318 317 319 39 (set (reg:SI 4 si)
        (const_int 1 [0x1])) nscd.c:226 -1
     (nil))
(insn 319 318 320 39 (set (reg:SI 5 di)
        (reg/v:SI 145 [ nullfd ])) nscd.c:226 -1
     (nil))
(call_insn 320 319 321 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>) [0 dup2 S1 A8])
            (const_int 0 [0]))) nscd.c:226 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 321 320 322 39 (set (reg:SI 4 si)
        (const_int 2 [0x2])) nscd.c:227 -1
     (nil))
(insn 322 321 323 39 (set (reg:SI 5 di)
        (reg/v:SI 145 [ nullfd ])) nscd.c:227 -1
     (nil))
(call_insn 323 322 324 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>) [0 dup2 S1 A8])
            (const_int 0 [0]))) nscd.c:227 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dup2") [flags 0x41]  <function_decl 0x2aae348d8798 dup2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 324 323 325 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 145 [ nullfd ])
            (const_int 2 [0x2]))) nscd.c:229 -1
     (nil))
(jump_insn 325 324 326 39 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 559)
            (pc))) nscd.c:229 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 559)
(note 326 325 327 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 40 (set (reg:SI 5 di)
        (reg/v:SI 145 [ nullfd ])) nscd.c:230 -1
     (nil))
(call_insn 328 327 329 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:230 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 329 328 330 40 (set (pc)
        (label_ref 559)) nscd.c:230 -1
     (nil)
 -> 559)
(barrier 330 329 331)
(code_label 331 330 332 41 128 "" [3 uses])
(note 332 331 333 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 41 (set (reg:SI 5 di)
        (reg/v:SI 145 [ nullfd ])) nscd.c:235 -1
     (nil))
(call_insn 334 333 9 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:235 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 9 334 578 41 (set (reg/v:SI 88 [ i ])
        (const_int 0 [0])) nscd.c:239 -1
     (nil))
(jump_insn 578 9 579 41 (set (pc)
        (label_ref 335)) -1
     (nil)
 -> 335)
(barrier 579 578 581)
(code_label 581 579 580 42 149 "" [1 uses])
(note 580 581 10 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 10 580 335 42 (set (reg/v:SI 88 [ i ])
        (const_int 0 [0])) nscd.c:239 -1
     (nil))
(code_label 335 10 336 43 127 "" [2 uses])
(note 336 335 337 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 43 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x2aae34bb71b0 *.LC41>)) nscd.c:241 -1
     (nil))
(call_insn 338 337 339 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("opendir") [flags 0x41]  <function_decl 0x2aae34876d80 opendir>) [0 opendir S1 A8])
            (const_int 0 [0]))) nscd.c:241 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("opendir") [flags 0x41]  <function_decl 0x2aae34876d80 opendir>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 339 338 340 43 (set (reg/v/f:DI 118 [ d ])
        (reg:DI 0 ax)) nscd.c:241 -1
     (nil))
(insn 340 339 341 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 118 [ d ])
            (const_int 0 [0]))) nscd.c:242 -1
     (nil))
(jump_insn 341 340 342 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) nscd.c:242 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 345)
(note 342 341 343 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 343 342 344 44 (set (pc)
        (label_ref 401)) -1
     (nil)
 -> 401)
(barrier 344 343 345)
(code_label 345 344 346 45 130 "" [1 uses])
(note 346 345 347 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 45 (set (reg/v:SI 119 [ dfdn ])
        (mem:SI (reg/v/f:DI 118 [ d ]) [2 d_77->fd+0 S4 A128])) nscd.c:245 -1
     (nil))
(jump_insn 348 347 349 45 (set (pc)
        (label_ref 379)) nscd.c:247 -1
     (nil)
 -> 379)
(barrier 349 348 384)
(code_label 384 349 350 46 134 "" [1 uses])
(note 350 384 351 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 46 (parallel [
            (set (reg:DI 204)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:250 -1
     (nil))
(insn 352 351 353 46 (parallel [
            (set (reg:DI 205 [ D.13583 ])
                (plus:DI (reg/v/f:DI 120 [ dirent ])
                    (const_int 19 [0x13])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:250 -1
     (nil))
(insn 353 352 354 46 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) nscd.c:250 -1
     (nil))
(insn 354 353 355 46 (set (reg:DI 4 si)
        (reg:DI 204)) nscd.c:250 -1
     (nil))
(insn 355 354 356 46 (set (reg:DI 5 di)
        (reg:DI 205 [ D.13583 ])) nscd.c:250 -1
     (nil))
(call_insn 356 355 357 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2aae34617a20 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) nscd.c:250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2aae34617a20 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 357 356 358 46 (set (reg/v:DI 122 [ fdn ])
        (reg:DI 0 ax)) nscd.c:250 -1
     (nil))
(insn 358 357 359 46 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [1 endp+0 S8 A64])) nscd.c:252 -1
     (nil))
(insn 359 358 360 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 206) [0 *_84+0 S1 A8])
            (const_int 0 [0]))) nscd.c:252 -1
     (nil))
(jump_insn 360 359 361 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) nscd.c:252 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 377)
(note 361 360 362 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 47 (set (reg:DI 207 [ D.13578 ])
        (sign_extend:DI (reg/v:SI 119 [ dfdn ]))) nscd.c:252 -1
     (nil))
(insn 363 362 364 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 122 [ fdn ])
            (reg:DI 207 [ D.13578 ]))) nscd.c:252 -1
     (nil))
(jump_insn 364 363 365 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) nscd.c:252 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 377)
(note 365 364 366 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 48 (set (reg:DI 208 [ D.13578 ])
        (sign_extend:DI (reg/v:SI 88 [ i ]))) nscd.c:252 -1
     (nil))
(insn 367 366 368 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 122 [ fdn ])
            (reg:DI 208 [ D.13578 ]))) nscd.c:252 -1
     (nil))
(jump_insn 368 367 369 48 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) nscd.c:252 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 377)
(note 369 368 370 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 49 (set (reg:SI 210)
        (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])) nscd.c:253 -1
     (nil))
(insn 371 370 372 49 (set (reg:DI 209 [ D.13578 ])
        (sign_extend:DI (reg:SI 210))) nscd.c:253 -1
     (nil))
(insn 372 371 373 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 122 [ fdn ])
            (reg:DI 209 [ D.13578 ]))) nscd.c:253 -1
     (nil))
(jump_insn 373 372 374 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) nscd.c:253 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 377)
(note 374 373 375 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 50 (set (reg:SI 5 di)
        (subreg:SI (reg/v:DI 122 [ fdn ]) 0)) nscd.c:254 -1
     (nil))
(call_insn 376 375 377 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 377 376 378 51 133 "" [4 uses])
(note 378 377 379 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(code_label 379 378 380 52 132 "" [1 uses])
(note 380 379 381 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 52 (set (reg:DI 5 di)
        (reg/v/f:DI 118 [ d ])) nscd.c:247 -1
     (nil))
(call_insn 382 381 383 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("readdir64") [flags 0x41]  <function_decl 0x2aae3487f1b0 readdir64>) [0 readdir64 S1 A8])
            (const_int 0 [0]))) nscd.c:247 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("readdir64") [flags 0x41]  <function_decl 0x2aae3487f1b0 readdir64>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 383 382 385 52 (set (reg/v/f:DI 120 [ dirent ])
        (reg:DI 0 ax)) nscd.c:247 -1
     (nil))
(insn 385 383 386 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 120 [ dirent ])
            (const_int 0 [0]))) nscd.c:247 -1
     (nil))
(jump_insn 386 385 387 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) nscd.c:247 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 384)
(note 387 386 388 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 53 (set (reg:DI 5 di)
        (reg/v/f:DI 118 [ d ])) nscd.c:257 -1
     (nil))
(call_insn 389 388 390 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("closedir") [flags 0x41]  <function_decl 0x2aae3487f000 closedir>) [0 closedir S1 A8])
            (const_int 0 [0]))) nscd.c:257 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("closedir") [flags 0x41]  <function_decl 0x2aae3487f000 closedir>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 390 389 391 53 (set (pc)
        (label_ref 408)) -1
     (nil)
 -> 408)
(barrier 391 390 405)
(code_label 405 391 392 54 137 "" [1 uses])
(note 392 405 393 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ i ])
            (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32]))) nscd.c:261 -1
     (nil))
(jump_insn 394 393 395 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 398)
            (pc))) nscd.c:261 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 398)
(note 395 394 396 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 55 (set (reg:SI 5 di)
        (reg/v:SI 88 [ i ])) nscd.c:262 -1
     (nil))
(call_insn 397 396 398 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:262 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(code_label 398 397 399 56 136 "" [1 uses])
(note 399 398 400 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 56 (parallel [
            (set (reg/v:SI 88 [ i ])
                (plus:SI (reg/v:SI 88 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:260 -1
     (nil))
(code_label 401 400 402 57 131 "" [1 uses])
(note 402 401 403 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(call_insn 403 402 404 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getdtablesize") [flags 0x41]  <function_decl 0x2aae3490d870 getdtablesize>) [0 getdtablesize S1 A8])
            (const_int 0 [0]))) nscd.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getdtablesize") [flags 0x41]  <function_decl 0x2aae3490d870 getdtablesize>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 404 403 406 57 (set (reg:SI 130 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:260 -1
     (nil))
(insn 406 404 407 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 88 [ i ])
            (reg:SI 130 [ D.13574 ]))) nscd.c:260 -1
     (nil))
(jump_insn 407 406 408 57 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) nscd.c:260 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 405)
(code_label 408 407 409 58 135 "" [1 uses])
(note 409 408 410 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(call_insn 410 409 411 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("setsid") [flags 0x41]  <function_decl 0x2aae348fb5e8 setsid>) [0 setsid S1 A8])
            (const_int 0 [0]))) nscd.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("setsid") [flags 0x41]  <function_decl 0x2aae348fb5e8 setsid>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 411 410 412 58 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x2aae34bb7240 *.LC42>)) nscd.c:266 -1
     (nil))
(call_insn 412 411 413 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("chdir") [flags 0x41]  <function_decl 0x2aae348d8288 chdir>) [0 chdir S1 A8])
            (const_int 0 [0]))) nscd.c:266 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("chdir") [flags 0x41]  <function_decl 0x2aae348d8288 chdir>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 413 412 414 58 (set (reg:SI 132 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:266 -1
     (nil))
(insn 414 413 415 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:266 -1
     (nil))
(jump_insn 415 414 416 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 430)
            (pc))) nscd.c:266 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 430)
(note 416 415 417 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 417 416 418 59 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:268 -1
     (nil))
(insn 418 417 419 59 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x2aae34bb72d0 *.LC43>)) nscd.c:268 -1
     (nil))
(insn 419 418 420 59 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:268 -1
     (nil))
(call_insn 420 419 421 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:268 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 421 420 422 59 (set (reg/f:DI 133 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:268 -1
     (nil))
(call_insn/u 422 421 423 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:267 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 423 422 424 59 (set (reg/f:DI 134 [ D.13581 ])
        (reg:DI 0 ax)) nscd.c:267 -1
     (nil))
(insn 424 423 425 59 (set (reg:DI 1 dx)
        (reg/f:DI 133 [ D.13576 ])) nscd.c:267 -1
     (nil))
(insn 425 424 426 59 (set (reg:SI 4 si)
        (mem:SI (reg/f:DI 134 [ D.13581 ]) [2 *_104+0 S4 A32])) nscd.c:267 -1
     (nil))
(insn 426 425 427 59 (set (reg:SI 5 di)
        (const_int 1 [0x1])) nscd.c:267 -1
     (nil))
(insn 427 426 428 59 (set (reg:QI 0 ax)
        (const_int 0 [0])) nscd.c:267 -1
     (nil))
(call_insn/c/i 428 427 429 59 (call (mem:QI (symbol_ref:DI ("do_exit") [flags 0x3]  <function_decl 0x2aae3498d1b0 do_exit>) [0 do_exit S1 A8])
        (const_int 0 [0])) nscd.c:267 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("do_exit") [flags 0x3]  <function_decl 0x2aae3498d1b0 do_exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(barrier 429 428 430)
(code_label 430 429 431 60 138 "" [1 uses])
(note 431 430 432 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 60 (set (reg:SI 1 dx)
        (const_int 24 [0x18])) nscd.c:270 -1
     (nil))
(insn 433 432 434 60 (set (reg:SI 4 si)
        (const_int 6 [0x6])) nscd.c:270 -1
     (nil))
(insn 434 433 435 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x2aae34bb7360 *.LC44>)) nscd.c:270 -1
     (nil))
(call_insn 435 434 436 60 (call (mem:QI (symbol_ref:DI ("openlog") [flags 0x41]  <function_decl 0x2aae348c3870 openlog>) [0 openlog S1 A8])
        (const_int 0 [0])) nscd.c:270 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("openlog") [flags 0x41]  <function_decl 0x2aae348c3870 openlog>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 436 435 437 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x2aae34bb73f0 *.LC45>)) nscd.c:607 -1
     (nil))
(insn 437 436 438 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2aae34b2d240 *.LC9>)) nscd.c:607 -1
     (nil))
(call_insn 438 437 439 60 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aae344700d8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) nscd.c:607 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aae344700d8 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 439 438 440 60 (set (reg/v/f:DI 113 [ fp ])
        (reg:DI 0 ax)) nscd.c:607 -1
     (nil))
(insn 440 439 441 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 113 [ fp ])
            (const_int 0 [0]))) nscd.c:608 -1
     (nil))
(jump_insn 441 440 442 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 445)
            (pc))) nscd.c:608 -1
     (int_list:REG_BR_PROB 9823 (nil))
 -> 445)
(note 442 441 443 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(jump_insn 443 442 444 61 (set (pc)
        (label_ref 472)) nscd.c:608 -1
     (nil)
 -> 472)
(barrier 444 443 445)
(code_label 445 444 446 62 139 "" [1 uses])
(note 446 445 447 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(call_insn 447 446 448 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x2aae348fb000 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) nscd.c:611 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x2aae348fb000 getpid>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 448 447 449 62 (set (reg:SI 173 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:611 -1
     (nil))
(insn 449 448 450 62 (set (reg:SI 2 cx)
        (reg:SI 173 [ D.13574 ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 450 449 451 62 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x2aae34bb7480 *.LC46>)) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 451 450 452 62 (set (reg:SI 4 si)
        (const_int 1 [0x1])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 452 451 453 62 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ fp ])) ../libio/bits/stdio2.h:97 -1
     (nil))
(insn 453 452 454 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) ../libio/bits/stdio2.h:97 -1
     (nil))
(call_insn 454 453 455 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) ../libio/bits/stdio2.h:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x2aae34395d80 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 455 454 456 62 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ fp ])) nscd.c:613 -1
     (nil))
(call_insn 456 455 457 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) nscd.c:613 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x2aae34467d80 fflush>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 457 456 458 62 (set (reg:SI 174 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:613 -1
     (nil))
(insn 458 457 459 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 174 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:613 -1
     (nil))
(jump_insn 459 458 460 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 563)
            (pc))) nscd.c:613 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 563)
(note 460 459 461 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 63 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ fp ])) nscd.c:613 -1
     (nil))
(call_insn 462 461 463 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2aae34489948 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) nscd.c:613 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x2aae34489948 ferror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 463 462 464 63 (set (reg:SI 175 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:613 -1
     (nil))
(insn 464 463 465 63 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ fp ])) nscd.c:615 -1
     (nil))
(call_insn 465 464 467 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nscd.c:615 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 467 465 468 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 175 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:272 -1
     (nil))
(jump_insn 468 467 471 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nscd.c:272 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 472)
(note 471 468 469 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 469 471 470 64 (set (pc)
        (label_ref 484)) -1
     (nil)
 -> 484)
(barrier 470 469 472)
(code_label 472 470 473 65 140 "" [3 uses])
(note 473 472 474 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 474 473 475 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) nscd.c:273 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2aae344f2af8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 475 474 476 65 (set (reg/f:DI 136 [ D.13581 ])
        (reg:DI 0 ax)) nscd.c:273 -1
     (nil))
(insn 476 475 477 65 (set (reg:SI 5 di)
        (mem:SI (reg/f:DI 136 [ D.13581 ]) [2 *_110+0 S4 A32])) nscd.c:273 -1
     (nil))
(call_insn 477 476 478 65 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2aae347255e8 strerror>) [0 strerror S1 A8])
            (const_int 0 [0]))) nscd.c:273 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strerror") [flags 0x41]  <function_decl 0x2aae347255e8 strerror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 478 477 479 65 (set (reg/f:DI 138 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:273 -1
     (nil))
(insn 479 478 480 65 (set (reg:DI 1 dx)
        (reg/f:DI 138 [ D.13576 ])) nscd.c:273 -1
     (nil))
(insn 480 479 481 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2aae34b2d240 *.LC9>)) nscd.c:273 -1
     (nil))
(insn 481 480 482 65 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x2aae34bb7510 *.LC47>)) nscd.c:273 -1
     (nil))
(insn 482 481 483 65 (set (reg:QI 0 ax)
        (const_int 0 [0])) nscd.c:273 -1
     (nil))
(call_insn 483 482 484 65 (call (mem:QI (symbol_ref:DI ("dbg_log") [flags 0x41]  <function_decl 0x2aae34964288 dbg_log>) [0 dbg_log S1 A8])
        (const_int 0 [0])) nscd.c:273 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dbg_log") [flags 0x41]  <function_decl 0x2aae34964288 dbg_log>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 484 483 485 66 143 "" [1 uses])
(note 485 484 486 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(call_insn 486 485 487 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_logfile") [flags 0x41]  <function_decl 0x2aae34964438 init_logfile>) [0 init_logfile S1 A8])
            (const_int 0 [0]))) nscd.c:275 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_logfile") [flags 0x41]  <function_decl 0x2aae34964438 init_logfile>)
        (nil))
    (nil))
(insn 487 486 488 66 (set (reg:SI 139 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:275 -1
     (nil))
(insn 488 487 489 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.13574 ])
            (const_int 0 [0]))) nscd.c:275 -1
     (nil))
(jump_insn 489 488 490 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 499)
            (pc))) nscd.c:275 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 499)
(note 490 489 491 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 491 490 492 67 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) nscd.c:276 -1
     (nil))
(insn 492 491 493 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x2aae34bb75a0 *.LC48>)) nscd.c:276 -1
     (nil))
(insn 493 492 494 67 (set (reg:DI 5 di)
        (symbol_ref:DI ("_libc_intl_domainname") [flags 0x40]  <var_decl 0x2aae34890480 _libc_intl_domainname>)) nscd.c:276 -1
     (nil))
(call_insn 494 493 495 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>) [0 __dcgettext S1 A8])
            (const_int 0 [0]))) nscd.c:276 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dcgettext") [flags 0x41]  <function_decl 0x2aae348afca8 __dcgettext>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 495 494 496 67 (set (reg/f:DI 140 [ D.13576 ])
        (reg:DI 0 ax)) nscd.c:276 -1
     (nil))
(insn 496 495 497 67 (set (reg:DI 5 di)
        (reg/f:DI 140 [ D.13576 ])) nscd.c:276 -1
     (nil))
(insn 497 496 498 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) nscd.c:276 -1
     (nil))
(call_insn 498 497 499 67 (call (mem:QI (symbol_ref:DI ("dbg_log") [flags 0x41]  <function_decl 0x2aae34964288 dbg_log>) [0 dbg_log S1 A8])
        (const_int 0 [0])) nscd.c:276 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("dbg_log") [flags 0x41]  <function_decl 0x2aae34964288 dbg_log>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(code_label 499 498 500 68 144 "" [1 uses])
(note 500 499 501 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 68 (set (reg:DI 4 si)
        (const_int 1 [0x1])) nscd.c:279 -1
     (nil))
(insn 502 501 503 68 (set (reg:SI 5 di)
        (const_int 22 [0x16])) nscd.c:279 -1
     (nil))
(call_insn 503 502 504 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:279 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 504 503 505 68 (set (reg:DI 4 si)
        (const_int 1 [0x1])) nscd.c:280 -1
     (nil))
(insn 505 504 506 68 (set (reg:SI 5 di)
        (const_int 21 [0x15])) nscd.c:280 -1
     (nil))
(call_insn 506 505 507 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:280 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 507 506 508 68 (set (reg:DI 4 si)
        (const_int 1 [0x1])) nscd.c:281 -1
     (nil))
(insn 508 507 509 68 (set (reg:SI 5 di)
        (const_int 20 [0x14])) nscd.c:281 -1
     (nil))
(call_insn 509 508 510 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:281 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 510 509 511 68 (set (pc)
        (label_ref 514)) -1
     (nil)
 -> 514)
(barrier 511 510 555)
(code_label 555 511 512 69 147 "" [1 uses])
(note 512 555 513 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 69 (set (mem/c:SI (symbol_ref:DI ("paranoia") [flags 0x2]  <var_decl 0x2aae34977ea0 paranoia>) [2 paranoia+0 S4 A32])
        (const_int 0 [0])) nscd.c:285 -1
     (nil))
(code_label 514 513 515 70 145 "" [1 uses])
(note 515 514 516 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 70 (set (reg:DI 4 si)
        (symbol_ref:DI ("termination_handler") [flags 0x3]  <function_decl 0x2aae3497ce58 termination_handler>)) nscd.c:287 -1
     (nil))
(insn 517 516 518 70 (set (reg:SI 5 di)
        (const_int 2 [0x2])) nscd.c:287 -1
     (nil))
(call_insn 518 517 519 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:287 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 519 518 520 70 (set (reg:DI 4 si)
        (symbol_ref:DI ("termination_handler") [flags 0x3]  <function_decl 0x2aae3497ce58 termination_handler>)) nscd.c:288 -1
     (nil))
(insn 520 519 521 70 (set (reg:SI 5 di)
        (const_int 3 [0x3])) nscd.c:288 -1
     (nil))
(call_insn 521 520 522 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:288 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 522 521 523 70 (set (reg:DI 4 si)
        (symbol_ref:DI ("termination_handler") [flags 0x3]  <function_decl 0x2aae3497ce58 termination_handler>)) nscd.c:289 -1
     (nil))
(insn 523 522 524 70 (set (reg:SI 5 di)
        (const_int 15 [0xf])) nscd.c:289 -1
     (nil))
(call_insn 524 523 525 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:289 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 525 524 526 70 (set (reg:DI 4 si)
        (const_int 1 [0x1])) nscd.c:290 -1
     (nil))
(insn 526 525 527 70 (set (reg:SI 5 di)
        (const_int 13 [0xd])) nscd.c:290 -1
     (nil))
(call_insn 527 526 528 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>) [0 signal S1 A8])
            (const_int 0 [0]))) nscd.c:290 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("signal") [flags 0x41]  <function_decl 0x2aae345a36c0 signal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 528 527 529 70 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2aae34b2d1b0 *.LC8>)) nscd.c:293 -1
     (nil))
(call_insn 529 528 530 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>) [0 unlink S1 A8])
            (const_int 0 [0]))) nscd.c:293 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("unlink") [flags 0x41]  <function_decl 0x2aae34908000 unlink>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 530 529 531 70 (set (reg:SI 5 di)
        (const_int 2048 [0x800])) nscd.c:297 -1
     (nil))
(call_insn 531 530 532 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inotify_init1") [flags 0x41]  <function_decl 0x2aae34a24a20 inotify_init1>) [0 inotify_init1 S1 A8])
            (const_int 0 [0]))) nscd.c:297 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inotify_init1") [flags 0x41]  <function_decl 0x2aae34a24a20 inotify_init1>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 532 531 533 70 (set (reg:SI 141 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:297 -1
     (nil))
(insn 533 532 534 70 (set (mem/c:SI (symbol_ref:DI ("inotify_fd") [flags 0x40]  <var_decl 0x2aae34977990 inotify_fd>) [2 inotify_fd+0 S4 A32])
        (reg:SI 141 [ D.13574 ])) nscd.c:297 -1
     (nil))
(insn 534 533 535 70 (set (reg:DI 211)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("register_traced_file") [flags 0x41]  <function_decl 0x2aae3498d360 register_traced_file>)
                    ] UNSPEC_GOTPCREL)) [26  S8 A8])) nscd.c:310 -1
     (nil))
(insn 535 534 536 70 (set (reg:DI 5 di)
        (reg:DI 211)) nscd.c:310 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("register_traced_file") [flags 0x41]  <function_decl 0x2aae3498d360 register_traced_file>)
        (nil)))
(call_insn 536 535 537 70 (call (mem:QI (symbol_ref:DI ("__nss_disable_nscd") [flags 0x41]  <function_decl 0x2aae34a24438 __nss_disable_nscd>) [0 __nss_disable_nscd S1 A8])
        (const_int 0 [0])) nscd.c:310 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_disable_nscd") [flags 0x41]  <function_decl 0x2aae34a24438 __nss_disable_nscd>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 537 536 538 70 (call (mem:QI (symbol_ref:DI ("nscd_init") [flags 0x41]  <function_decl 0x2aae3498d288 nscd_init>) [0 nscd_init S1 A8])
        (const_int 0 [0])) nscd.c:314 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_init") [flags 0x41]  <function_decl 0x2aae3498d288 nscd_init>)
        (nil))
    (nil))
(call_insn 538 537 539 70 (call (mem:QI (symbol_ref:DI ("start_threads") [flags 0x41]  <function_decl 0x2aae3498d5e8 start_threads>) [0 start_threads S1 A8])
        (const_int 0 [0])) nscd.c:321 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("start_threads") [flags 0x41]  <function_decl 0x2aae3498d5e8 start_threads>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
(barrier 539 538 540)
(code_label 540 539 541 71 112 "" [3 uses])
(note 541 540 542 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 71 (set (reg:DI 5 di)
        (const_int 0 [0])) nscd.c:177 -1
     (nil))
(call_insn 543 542 544 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x2aae34547288 time>) [0 time S1 A8])
            (const_int 0 [0]))) nscd.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x2aae34547288 time>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 544 543 545 71 (set (reg:DI 96 [ D.13578 ])
        (reg:DI 0 ax)) nscd.c:177 -1
     (nil))
(insn 545 544 546 71 (set (mem/c:DI (symbol_ref:DI ("start_time") [flags 0x2]  <var_decl 0x2aae34977bd0 start_time>) [6 start_time+0 S8 A64])
        (reg:DI 96 [ D.13578 ])) nscd.c:177 -1
     (nil))
(call_insn/u 546 545 547 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpagesize") [flags 0x41]  <function_decl 0x2aae3490d798 getpagesize>) [0 getpagesize S1 A8])
            (const_int 0 [0]))) nscd.c:180 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpagesize") [flags 0x41]  <function_decl 0x2aae3490d798 getpagesize>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 547 546 548 71 (set (reg:SI 97 [ D.13574 ])
        (reg:SI 0 ax)) nscd.c:180 -1
     (nil))
(insn 548 547 549 71 (parallel [
            (set (reg:SI 212 [ D.13574 ])
                (plus:SI (reg:SI 97 [ D.13574 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:180 -1
     (nil))
(insn 549 548 550 71 (set (reg:DI 213)
        (sign_extend:DI (reg:SI 212 [ D.13574 ]))) nscd.c:180 -1
     (nil))
(insn 550 549 551 71 (set (mem/c:DI (symbol_ref:DI ("pagesize_m1") [flags 0x2]  <var_decl 0x2aae34977e10 pagesize_m1>) [6 pagesize_m1+0 S8 A64])
        (reg:DI 213)) nscd.c:180 -1
     (nil))
(insn 551 550 553 71 (set (reg:SI 100 [ D.13580 ])
        (mem/c:SI (symbol_ref:DI ("run_mode") [flags 0x2]  <var_decl 0x2aae34987c60 run_mode>) [20 run_mode+0 S4 A32])) nscd.c:182 -1
     (nil))
(insn 553 551 554 71 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 100 [ D.13580 ])
            (const_int 1 [0x1]))) nscd.c:182 -1
     (nil))
(jump_insn 554 553 558 71 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) nscd.c:182 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 552)
(note 558 554 556 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(jump_insn 556 558 557 72 (set (pc)
        (label_ref 555)) -1
     (nil)
 -> 555)
(barrier 557 556 559)
(code_label 559 557 560 73 129 "" [2 uses])
(note 560 559 8 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 8 560 561 73 (set (reg/v:SI 88 [ i ])
        (const_int 3 [0x3])) nscd.c:239 -1
     (nil))
(jump_insn 561 8 562 73 (set (pc)
        (label_ref 335)) -1
     (nil)
 -> 335)
(barrier 562 561 563)
(code_label 563 562 564 74 141 "" [1 uses])
(note 564 563 565 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 74 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ fp ])) nscd.c:615 -1
     (nil))
(call_insn 566 565 567 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nscd.c:615 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aae34467ca8 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 567 566 568 74 (set (pc)
        (label_ref 472)) nscd.c:615 -1
     (nil)
 -> 472)
(barrier 568 567 0)

;; Function notify_parent (notify_parent, funcdef_no=130, decl_uid=11074, cgraph_uid=130, symbol_order=151)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->7 redirected to 8
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 child_ret+0 S4 A32])
        (reg:SI 5 di [ child_ret ])) nscd.c:691 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 87 [ D.13612 ])
        (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])) nscd.c:692 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.13612 ])
            (const_int -1 [0xffffffffffffffff]))) nscd.c:692 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) nscd.c:692 612 {*jcc_1}
     (int_list:REG_BR_PROB 3784 (nil))
 -> 33)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) nscd.c:696 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) nscd.c:696 -1
     (nil))
(insn 12 11 13 4 (set (reg:DI 4 si)
        (reg:DI 91)) nscd.c:696 -1
     (nil))
(insn 13 12 14 4 (set (reg:SI 5 di)
        (reg:SI 87 [ D.13612 ])) nscd.c:696 -1
     (nil))
(call_insn 14 13 15 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2aae348d1438 write>) [0 write S1 A8])
            (const_int 0 [0]))) nscd.c:696 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("write") [flags 0x41]  <function_decl 0x2aae348d1438 write>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 15 14 16 4 (set (reg:DI 88 [ D.13613 ])
        (reg:DI 0 ax)) nscd.c:696 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 88 [ D.13613 ]) 0)
            (const_int 4 [0x4]))) nscd.c:697 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) nscd.c:697 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 25)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.12892") [flags 0x2]  <var_decl 0x2aae34a5e7e0 __PRETTY_FUNCTION__>)) nscd.c:697 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 1 dx)
        (const_int 697 [0x2b9])) nscd.c:697 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2aae34b88750 *.LC24>)) nscd.c:697 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2aae34b887e0 *.LC25>)) nscd.c:697 -1
     (nil))
(call_insn 23 22 24 5 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2aae34515000 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) nscd.c:697 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2aae34515000 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 24 23 25)
(code_label 25 24 26 6 174 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 92)
        (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])) nscd.c:698 -1
     (nil))
(insn 28 27 29 6 (set (reg:SI 5 di)
        (reg:SI 92)) nscd.c:698 -1
     (nil))
(call_insn 29 28 30 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>) [0 close S1 A8])
            (const_int 0 [0]))) nscd.c:698 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("close") [flags 0x41]  <function_decl 0x2aae348d1288 close>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 30 29 33 6 (set (mem/c:SI (symbol_ref:DI ("parent_fd") [flags 0x2]  <var_decl 0x2aae34a375a0 parent_fd>) [2 parent_fd+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nscd.c:699 -1
     (nil))
(code_label 33 30 34 8 172 "" [1 uses])
(note 34 33 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
