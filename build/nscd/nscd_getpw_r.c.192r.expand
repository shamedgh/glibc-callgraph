
;; Function nscd_getpw_r (nscd_getpw_r, funcdef_no=56, decl_uid=12977, cgraph_uid=56, symbol_order=66)

Partition 1: size 36 align 16
	pw_resp
Partition 0: size 4 align 4
	gc_cycle

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42
Edge 6->30 redirected to 50
Edge 23->26 redirected to 51
Edge 38->3 redirected to 52


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 32->49 redirected to 46
Forwarding edge 36->37 to 40 failed.
Edge 38->49 redirected to 46
Redirecting jump 233 from 49 to 46.
Forwarding edge 41->42 to 5 failed.
deleting block 49
Forwarding edge 50->51 to 46 failed.


try_optimize_cfg iteration 2

Forwarding edge 36->37 to 40 failed.
Forwarding edge 41->42 to 5 failed.
Forwarding edge 50->51 to 46 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 24 NOTE_INSN_DELETED)
(note 24 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 24 3 2 (set (reg/v/f:DI 158 [ key ])
        (reg:DI 5 di [ key ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 159 [ keylen ])
        (reg:DI 4 si [ keylen ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 160 [ type ])
        (reg:SI 1 dx [ type ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 161 [ resultbuf ])
        (reg:DI 2 cx [ resultbuf ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 162 [ buffer ])
        (reg:DI 37 r8 [ buffer ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:DI 163 [ buflen ])
        (reg:DI 38 r9 [ buflen ])) nscd_getpw_r.c:88 -1
     (nil))
(insn 8 7 9 2 (set (reg/v/f:DI 164 [ result ])
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [2 result+0 S8 A64])) nscd_getpw_r.c:88 -1
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [2 result+0 S8 A64])
        (nil)))
(note 9 8 26 2 NOTE_INSN_FUNCTION_BEG)
(insn 26 9 27 2 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:95 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 2 cx)
        (reg:DI 165)) nscd_getpw_r.c:95 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("map_handle") [flags 0x2]  <var_decl 0x2b51159d0d80 map_handle>)) nscd_getpw_r.c:95 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b5115aa2d80 *.LC0>)) nscd_getpw_r.c:95 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 5 di)
        (const_int 11 [0xb])) nscd_getpw_r.c:95 -1
     (nil))
(call_insn 31 30 32 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nscd_get_map_ref") [flags 0x41]  <function_decl 0x2b51158ecaf8 __nscd_get_map_ref>) [0 __nscd_get_map_ref S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:95 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nscd_get_map_ref") [flags 0x41]  <function_decl 0x2b51158ecaf8 __nscd_get_map_ref>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 32 31 11 2 (set (reg/v/f:DI 88 [ mapped ])
        (reg:DI 0 ax)) nscd_getpw_r.c:95 -1
     (nil))
(insn 11 32 33 2 (set (reg/v:SI 91 [ nretries ])
        (const_int 0 [0])) nscd_getpw_r.c:95 -1
     (nil))
(jump_insn 33 11 34 2 (set (pc)
        (label_ref 36)) nscd_getpw_r.c:95 -1
     (nil)
 -> 36)
(barrier 34 33 306)
(code_label 306 34 305 4 27 "" [1 uses])
(note 305 306 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 305 243 4 (set (reg/v/f:DI 88 [ mapped ])
        (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(code_label 243 10 35 5 20 "" [1 uses])
(note 35 243 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 36 35 37 6 2 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ mapped ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:103 -1
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) nscd_getpw_r.c:103 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 263)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:DI 37 r8)
        (const_int 36 [0x24])) nscd_getpw_r.c:105 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 2 cx)
        (reg/v/f:DI 88 [ mapped ])) nscd_getpw_r.c:105 -1
     (nil))
(insn 43 42 44 7 (set (reg:DI 1 dx)
        (reg/v:DI 159 [ keylen ])) nscd_getpw_r.c:105 -1
     (nil))
(insn 44 43 45 7 (set (reg:DI 4 si)
        (reg/v/f:DI 158 [ key ])) nscd_getpw_r.c:105 -1
     (nil))
(insn 45 44 46 7 (set (reg:SI 5 di)
        (reg/v:SI 160 [ type ])) nscd_getpw_r.c:105 -1
     (nil))
(call_insn 46 45 47 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nscd_cache_search") [flags 0x41]  <function_decl 0x2b51158ece58 __nscd_cache_search>) [0 __nscd_cache_search S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nscd_cache_search") [flags 0x41]  <function_decl 0x2b51158ece58 __nscd_cache_search>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 47 46 48 7 (set (reg/v/f:DI 92 [ found ])
        (reg:DI 0 ax)) nscd_getpw_r.c:105 -1
     (nil))
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ found ])
            (const_int 0 [0]))) nscd_getpw_r.c:107 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) nscd_getpw_r.c:107 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 263)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (parallel [
            (set (reg/v/f:DI 93 [ pw_name ])
                (plus:DI (reg/v/f:DI 92 [ found ])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:109 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 166)
        (mem:DI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 24 [0x18])) [0 found_25->data[0].pwdata+0 S8 A64])) nscd_getpw_r.c:110 -1
     (nil))
(insn 53 52 54 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [6 pw_resp+0 S8 A128])
        (reg:DI 166)) nscd_getpw_r.c:110 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 167)
        (mem:DI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 32 [0x20])) [0 found_25->data[0].pwdata+8 S8 A64])) nscd_getpw_r.c:110 -1
     (nil))
(insn 55 54 56 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [6 pw_resp+8 S8 A64])
        (reg:DI 167)) nscd_getpw_r.c:110 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 168)
        (mem:DI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 40 [0x28])) [0 found_25->data[0].pwdata+16 S8 A64])) nscd_getpw_r.c:110 -1
     (nil))
(insn 57 56 58 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [6 pw_resp+16 S8 A128])
        (reg:DI 168)) nscd_getpw_r.c:110 -1
     (nil))
(insn 58 57 59 8 (set (reg:DI 169)
        (mem:DI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 48 [0x30])) [0 found_25->data[0].pwdata+24 S8 A64])) nscd_getpw_r.c:110 -1
     (nil))
(insn 59 58 60 8 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [6 pw_resp+24 S8 A64])
        (reg:DI 169)) nscd_getpw_r.c:110 -1
     (nil))
(insn 60 59 61 8 (set (reg:SI 170)
        (mem:SI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 56 [0x38])) [0 found_25->data[0].pwdata+32 S4 A64])) nscd_getpw_r.c:110 -1
     (nil))
(insn 61 60 62 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [6 pw_resp+32 S4 A128])
        (reg:SI 170)) nscd_getpw_r.c:110 -1
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:DI 171 [ D.13205 ])
                (plus:DI (reg/v/f:DI 92 [ found ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:111 -1
     (nil))
(insn 63 62 64 8 (set (reg:SI 173)
        (mem:SI (plus:DI (reg/v/f:DI 92 [ found ])
                (const_int 4 [0x4])) [4 found_25->recsize+0 S4 A32])) nscd_getpw_r.c:111 -1
     (nil))
(insn 64 63 65 8 (set (reg:DI 172 [ D.13206 ])
        (sign_extend:DI (reg:SI 173))) nscd_getpw_r.c:111 -1
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg/v/f:DI 97 [ recend ])
                (plus:DI (reg:DI 171 [ D.13205 ])
                    (reg:DI 172 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:111 -1
     (nil))
(insn 66 65 67 8 (set (reg/f:DI 89 [ D.13204 ])
        (mem/f:DI (reg/v/f:DI 88 [ mapped ]) [2 mapped_4->head+0 S8 A64])) nscd_getpw_r.c:114 -1
     (nil))
(insn 67 66 68 8 (set (reg:SI 98 [ D.13203 ])
        (mem/v:SI (plus:DI (reg/f:DI 89 [ D.13204 ])
                (const_int 8 [0x8])) [4 _32->gc_cycle+0 S4 A64])) nscd_getpw_r.c:114 -1
     (nil))
(insn 68 67 69 8 (set (reg:SI 87 [ D.13203 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [4 gc_cycle+0 S4 A32])) nscd_getpw_r.c:114 -1
     (nil))
(insn 69 68 70 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ D.13203 ])
            (reg:SI 87 [ D.13203 ]))) nscd_getpw_r.c:114 -1
     (nil))
(jump_insn 70 69 73 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 300)
            (pc))) nscd_getpw_r.c:114 612 {*jcc_1}
     (int_list:REG_BR_PROB 968 (nil))
 -> 300)
(note 73 70 12 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 12 73 71 9 (set (reg/v:SI 90 [ sock ])
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:122 -1
     (nil))
(jump_insn 71 12 72 9 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
(barrier 72 71 273)
(code_label 273 72 74 10 22 "" [1 uses])
(note 74 273 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 22 10 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_passwd") [flags 0x2]  <var_decl 0x2b51159d0900 __nss_not_use_nscd_passwd>) [4 __nss_not_use_nscd_passwd+0 S4 A32])
        (const_int 1 [0x1])) nscd_getpw_r.c:129 -1
     (nil))
(insn 22 75 76 10 (set (reg/v:SI 156 [ retval ])
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:99 -1
     (nil))
(jump_insn 76 22 77 10 (set (pc)
        (label_ref 205)) nscd_getpw_r.c:130 -1
     (nil)
 -> 205)
(barrier 77 76 78)
(code_label 78 77 79 11 5 "" [2 uses])
(note 79 78 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 11 (set (mem/f:DI (reg/v/f:DI 164 [ result ]) [2 *result_38(D)+0 S8 A64])
        (const_int 0 [0])) nscd_getpw_r.c:135 -1
     (nil))
(insn 81 80 82 11 (set (reg:SI 99 [ D.13203 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [4 pw_resp.found+0 S4 A32])) nscd_getpw_r.c:137 -1
     (nil))
(insn 82 81 83 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13203 ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:137 -1
     (nil))
(jump_insn 83 82 84 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) nscd_getpw_r.c:137 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 88)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 15 12 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_passwd") [flags 0x2]  <var_decl 0x2b51159d0900 __nss_not_use_nscd_passwd>) [4 __nss_not_use_nscd_passwd+0 S4 A32])
        (const_int 1 [0x1])) nscd_getpw_r.c:140 -1
     (nil))
(insn 15 85 86 12 (set (reg/v:SI 156 [ retval ])
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:99 -1
     (nil))
(jump_insn 86 15 87 12 (set (pc)
        (label_ref 196)) nscd_getpw_r.c:141 -1
     (nil)
 -> 196)
(barrier 87 86 88)
(code_label 88 87 89 13 7 "" [1 uses])
(note 89 88 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.13203 ])
            (const_int 1 [0x1]))) nscd_getpw_r.c:144 -1
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) nscd_getpw_r.c:144 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 192)
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 pw_resp.pw_uid+0 S4 A128])) nscd_getpw_r.c:147 -1
     (nil))
(insn 94 93 95 14 (set (mem:SI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 16 [0x10])) [4 resultbuf_46(D)->pw_uid+0 S4 A64])
        (reg:SI 174)) nscd_getpw_r.c:147 -1
     (nil))
(insn 95 94 96 14 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [4 pw_resp.pw_gid+0 S4 A32])) nscd_getpw_r.c:148 -1
     (nil))
(insn 96 95 97 14 (set (mem:SI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 20 [0x14])) [4 resultbuf_46(D)->pw_gid+0 S4 A32])
        (reg:SI 175)) nscd_getpw_r.c:148 -1
     (nil))
(insn 97 96 98 14 (set (mem/f:DI (reg/v/f:DI 161 [ resultbuf ]) [2 resultbuf_46(D)->pw_name+0 S8 A64])
        (reg/v/f:DI 162 [ buffer ])) nscd_getpw_r.c:152 -1
     (nil))
(insn 98 97 99 14 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 pw_resp.pw_name_len+0 S4 A64])) nscd_getpw_r.c:153 -1
     (nil))
(insn 99 98 100 14 (set (reg:DI 103 [ D.13206 ])
        (sign_extend:DI (reg:SI 176))) nscd_getpw_r.c:153 -1
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg/v/f:DI 104 [ p ])
                (plus:DI (reg/v/f:DI 162 [ buffer ])
                    (reg:DI 103 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:153 -1
     (nil))
(insn 101 100 102 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 8 [0x8])) [2 resultbuf_46(D)->pw_passwd+0 S8 A64])
        (reg/v/f:DI 104 [ p ])) nscd_getpw_r.c:155 -1
     (nil))
(insn 102 101 103 14 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [4 pw_resp.pw_passwd_len+0 S4 A32])) nscd_getpw_r.c:156 -1
     (nil))
(insn 103 102 104 14 (set (reg:DI 106 [ D.13206 ])
        (sign_extend:DI (reg:SI 177))) nscd_getpw_r.c:156 -1
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg/v/f:DI 107 [ p ])
                (plus:DI (reg/v/f:DI 104 [ p ])
                    (reg:DI 106 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:156 -1
     (nil))
(insn 105 104 106 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 24 [0x18])) [2 resultbuf_46(D)->pw_gecos+0 S8 A64])
        (reg/v/f:DI 107 [ p ])) nscd_getpw_r.c:158 -1
     (nil))
(insn 106 105 107 14 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 pw_resp.pw_gecos_len+0 S4 A64])) nscd_getpw_r.c:159 -1
     (nil))
(insn 107 106 108 14 (set (reg:DI 109 [ D.13206 ])
        (sign_extend:DI (reg:SI 178))) nscd_getpw_r.c:159 -1
     (nil))
(insn 108 107 109 14 (parallel [
            (set (reg/v/f:DI 110 [ p ])
                (plus:DI (reg/v/f:DI 107 [ p ])
                    (reg:DI 109 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:159 -1
     (nil))
(insn 109 108 110 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 32 [0x20])) [2 resultbuf_46(D)->pw_dir+0 S8 A64])
        (reg/v/f:DI 110 [ p ])) nscd_getpw_r.c:161 -1
     (nil))
(insn 110 109 111 14 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [4 pw_resp.pw_dir_len+0 S4 A32])) nscd_getpw_r.c:162 -1
     (nil))
(insn 111 110 112 14 (set (reg:DI 112 [ D.13206 ])
        (sign_extend:DI (reg:SI 179))) nscd_getpw_r.c:162 -1
     (nil))
(insn 112 111 113 14 (parallel [
            (set (reg/v/f:DI 113 [ p ])
                (plus:DI (reg/v/f:DI 110 [ p ])
                    (reg:DI 112 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:162 -1
     (nil))
(insn 113 112 114 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 40 [0x28])) [2 resultbuf_46(D)->pw_shell+0 S8 A64])
        (reg/v/f:DI 113 [ p ])) nscd_getpw_r.c:164 -1
     (nil))
(insn 114 113 115 14 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 pw_resp.pw_shell_len+0 S4 A128])) nscd_getpw_r.c:165 -1
     (nil))
(insn 115 114 116 14 (set (reg:DI 115 [ D.13206 ])
        (sign_extend:DI (reg:SI 180))) nscd_getpw_r.c:165 -1
     (nil))
(insn 116 115 117 14 (parallel [
            (set (reg:DI 181 [ p ])
                (plus:DI (reg/v/f:DI 113 [ p ])
                    (reg:DI 115 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:167 -1
     (nil))
(insn 117 116 118 14 (parallel [
            (set (reg/v:DI 119 [ total ])
                (minus:DI (reg:DI 181 [ p ])
                    (reg/v/f:DI 162 [ buffer ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:167 -1
     (nil))
(insn 118 117 119 14 (set (reg:DI 120 [ D.13206 ])
        (reg/v:DI 119 [ total ])) nscd_getpw_r.c:168 -1
     (nil))
(insn 119 118 120 14 (parallel [
            (set (reg:DI 182 [ D.13209 ])
                (plus:DI (reg/v/f:DI 93 [ pw_name ])
                    (reg:DI 120 [ D.13206 ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:168 -1
     (nil))
(insn 120 119 121 14 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 97 [ recend ])
            (reg:DI 182 [ D.13209 ]))) nscd_getpw_r.c:168 -1
     (nil))
(jump_insn 121 120 122 14 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) nscd_getpw_r.c:168 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 188)
(note 122 121 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 15 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 120 [ D.13206 ])
            (reg/v:DI 163 [ buflen ]))) nscd_getpw_r.c:170 -1
     (nil))
(jump_insn 124 123 125 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) nscd_getpw_r.c:170 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 130)
(note 125 124 126 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 16 (set (reg:DI 183)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b5115735900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [18  S8 A8])) nscd_getpw_r.c:172 -1
     (nil))
(insn 127 126 17 16 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 183)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) nscd_getpw_r.c:172 -1
     (nil))
(insn 17 127 128 16 (set (reg/v:SI 156 [ retval ])
        (const_int 34 [0x22])) nscd_getpw_r.c:173 -1
     (nil))
(jump_insn 128 17 129 16 (set (pc)
        (label_ref 196)) nscd_getpw_r.c:174 -1
     (nil)
 -> 196)
(barrier 129 128 130)
(code_label 130 129 131 17 11 "" [1 uses])
(note 131 130 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ pw_name ])
            (const_int 0 [0]))) nscd_getpw_r.c:178 -1
     (nil))
(jump_insn 133 132 134 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) nscd_getpw_r.c:178 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 152)
(note 134 133 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 18 (set (reg:DI 1 dx)
        (reg:DI 120 [ D.13206 ])) nscd_getpw_r.c:180 -1
     (nil))
(insn 136 135 137 18 (set (reg:DI 4 si)
        (reg/v/f:DI 162 [ buffer ])) nscd_getpw_r.c:180 -1
     (nil))
(insn 137 136 138 18 (set (reg:SI 5 di)
        (reg/v:SI 90 [ sock ])) nscd_getpw_r.c:180 -1
     (nil))
(call_insn 138 137 139 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__readall") [flags 0x43]  <function_decl 0x2b5115905000 __readall>) [0 __readall S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:180 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__readall") [flags 0x43]  <function_decl 0x2b5115905000 __readall>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 139 138 140 18 (set (reg/v:DI 145 [ nbytes ])
        (reg:DI 0 ax)) nscd_getpw_r.c:180 -1
     (nil))
(insn 140 139 141 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 119 [ total ])
            (reg/v:DI 145 [ nbytes ]))) nscd_getpw_r.c:182 -1
     (nil))
(jump_insn 141 140 142 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) nscd_getpw_r.c:182 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 147)
(note 142 141 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 19 (set (reg:DI 184)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b5115735900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [18  S8 A8])) nscd_getpw_r.c:185 -1
     (nil))
(insn 144 143 16 19 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 184)) [4 __libc_errno+0 S4 A32])
        (const_int 2 [0x2])) nscd_getpw_r.c:185 -1
     (nil))
(insn 16 144 145 19 (set (reg/v:SI 156 [ retval ])
        (const_int 2 [0x2])) nscd_getpw_r.c:186 -1
     (nil))
(jump_insn 145 16 146 19 (set (pc)
        (label_ref 196)) -1
     (nil)
 -> 196)
(barrier 146 145 147)
(code_label 147 146 148 20 13 "" [2 uses])
(note 148 147 149 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 21 20 (set (mem/f:DI (reg/v/f:DI 164 [ result ]) [2 *result_38(D)+0 S8 A64])
        (reg/v/f:DI 161 [ resultbuf ])) nscd_getpw_r.c:189 -1
     (nil))
(insn 21 149 150 20 (set (reg/v:SI 156 [ retval ])
        (const_int 0 [0])) nscd_getpw_r.c:177 -1
     (nil))
(jump_insn 150 21 151 20 (set (pc)
        (label_ref 196)) nscd_getpw_r.c:189 -1
     (nil)
 -> 196)
(barrier 151 150 152)
(code_label 152 151 153 21 12 "" [1 uses])
(note 153 152 154 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 21 (set (reg:DI 185)
        (reg/v/f:DI 162 [ buffer ])) nscd_getpw_r.c:194 -1
     (nil))
(insn 155 154 156 21 (set (reg:DI 186)
        (reg/v/f:DI 93 [ pw_name ])) nscd_getpw_r.c:194 -1
     (nil))
(insn 156 155 157 21 (set (reg:DI 187)
        (reg:DI 120 [ D.13206 ])) nscd_getpw_r.c:194 -1
     (nil))
(insn 157 156 158 21 (set (reg:DI 1 dx)
        (reg:DI 187)) nscd_getpw_r.c:194 -1
     (nil))
(insn 158 157 159 21 (set (reg:DI 4 si)
        (reg:DI 186)) nscd_getpw_r.c:194 -1
     (nil))
(insn 159 158 160 21 (set (reg:DI 5 di)
        (reg:DI 185)) nscd_getpw_r.c:194 -1
     (nil))
(call_insn 160 159 161 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b51155d7870 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b51155d7870 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 161 160 162 21 (set (reg:DI 188)
        (reg:DI 0 ax)) nscd_getpw_r.c:194 -1
     (nil))
(insn 162 161 163 21 (set (reg:DI 189)
        (reg:DI 188)) nscd_getpw_r.c:194 -1
     (nil))
(insn 163 162 164 21 (set (reg/f:DI 190)
        (mem/f:DI (reg/v/f:DI 161 [ resultbuf ]) [2 resultbuf_46(D)->pw_name+0 S8 A64])) nscd_getpw_r.c:197 -1
     (nil))
(insn 164 163 165 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 190)
                        (reg:DI 103 [ D.13206 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_87+0 S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:197 -1
     (nil))
(jump_insn 165 164 166 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) nscd_getpw_r.c:197 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 182)
(note 166 165 167 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 22 (set (reg/f:DI 191)
        (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 8 [0x8])) [2 resultbuf_46(D)->pw_passwd+0 S8 A64])) nscd_getpw_r.c:198 -1
     (nil))
(insn 168 167 169 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 191)
                        (reg:DI 106 [ D.13206 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_91+0 S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:198 -1
     (nil))
(jump_insn 169 168 170 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) nscd_getpw_r.c:198 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 182)
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 23 (set (reg/f:DI 192)
        (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 24 [0x18])) [2 resultbuf_46(D)->pw_gecos+0 S8 A64])) nscd_getpw_r.c:199 -1
     (nil))
(insn 172 171 173 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 192)
                        (reg:DI 109 [ D.13206 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_95+0 S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:199 -1
     (nil))
(jump_insn 173 172 174 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) nscd_getpw_r.c:199 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 182)
(note 174 173 175 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 24 (set (reg/f:DI 193)
        (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 32 [0x20])) [2 resultbuf_46(D)->pw_dir+0 S8 A64])) nscd_getpw_r.c:200 -1
     (nil))
(insn 176 175 177 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 193)
                        (reg:DI 112 [ D.13206 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_99+0 S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:200 -1
     (nil))
(jump_insn 177 176 178 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) nscd_getpw_r.c:200 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 182)
(note 178 177 179 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 25 (set (reg/f:DI 194)
        (mem/f:DI (plus:DI (reg/v/f:DI 161 [ resultbuf ])
                (const_int 40 [0x28])) [2 resultbuf_46(D)->pw_shell+0 S8 A64])) nscd_getpw_r.c:201 -1
     (nil))
(insn 180 179 181 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 194)
                        (reg:DI 115 [ D.13206 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_103+0 S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:201 -1
     (nil))
(jump_insn 181 180 182 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) nscd_getpw_r.c:201 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 147)
(code_label 182 181 183 26 14 "" [4 uses])
(note 183 182 184 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 26 (set (reg/f:DI 142 [ D.13204 ])
        (mem/f:DI (reg/v/f:DI 88 [ mapped ]) [2 mapped_4->head+0 S8 A64])) nscd_getpw_r.c:204 -1
     (nil))
(insn 185 184 186 26 (set (reg:SI 143 [ D.13203 ])
        (mem/v:SI (plus:DI (reg/f:DI 142 [ D.13204 ])
                (const_int 8 [0x8])) [4 _106->gc_cycle+0 S4 A64])) nscd_getpw_r.c:204 -1
     (nil))
(insn 186 185 187 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143 [ D.13203 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -52 [0xffffffffffffffcc])) [4 gc_cycle+0 S4 A32]))) nscd_getpw_r.c:204 -1
     (nil))
(jump_insn 187 186 188 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) nscd_getpw_r.c:204 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 304)
(code_label 188 187 189 27 10 "" [1 uses])
(note 189 188 18 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 18 189 190 27 (set (reg/v:SI 156 [ retval ])
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:204 -1
     (nil))
(jump_insn 190 18 191 27 (set (pc)
        (label_ref 196)) -1
     (nil)
 -> 196)
(barrier 191 190 192)
(code_label 192 191 193 28 9 "" [1 uses])
(note 193 192 194 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 28 (set (reg:DI 195)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b5115735900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [18  S8 A8])) nscd_getpw_r.c:214 -1
     (nil))
(insn 195 194 20 28 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 195)) [4 __libc_errno+0 S4 A32])
        (const_int 0 [0])) nscd_getpw_r.c:214 -1
     (nil))
(insn 20 195 301 28 (set (reg/v:SI 156 [ retval ])
        (const_int 0 [0])) nscd_getpw_r.c:216 -1
     (nil))
(jump_insn 301 20 302 28 (set (pc)
        (label_ref 196)) -1
     (nil)
 -> 196)
(barrier 302 301 304)
(code_label 304 302 303 29 26 "" [1 uses])
(note 303 304 19 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 19 303 196 29 (set (reg/v:SI 156 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) nscd_getpw_r.c:204 -1
     (nil))
(code_label 196 19 197 30 8 ("out_close") [6 uses])
(note 197 196 198 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ sock ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:220 -1
     (nil))
(jump_insn 199 198 200 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) nscd_getpw_r.c:220 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 205)
(note 200 199 201 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 31 (set (reg/v:DI 5 di [ _a1 ])
        (sign_extend:DI (reg/v:SI 90 [ sock ]))) nscd_getpw_r.c:221 -1
     (nil))
(insn 202 201 203 31 (set (reg:SI 197)
        (const_int 3 [0x3])) nscd_getpw_r.c:221 -1
     (nil))
(insn 203 202 204 31 (parallel [
            (set (reg:DI 196 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 197)
                        (reg/v:DI 5 di [ _a1 ])
                    ]
                     [
                        (asm_input:SI ("0") nscd_getpw_r.c:221)
                        (asm_input:DI ("r") nscd_getpw_r.c:221)
                    ]
                     [] nscd_getpw_r.c:221))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) nscd_getpw_r.c:221 -1
     (nil))
(insn 204 203 205 31 (set (reg/v:DI 148 [ resultvar ])
        (reg:DI 196 [ resultvar ])) nscd_getpw_r.c:221 -1
     (nil))
(code_label 205 204 206 32 6 ("out") [2 uses])
(note 206 205 207 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ mapped ])
            (const_int -1 [0xffffffffffffffff]))) nscd-client.h:413 -1
     (nil))
(jump_insn 208 207 209 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) nscd-client.h:413 612 {*jcc_1}
     (int_list:REG_BR_PROB 1076 (nil))
 -> 281)
(note 209 208 210 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 33 (set (reg/f:DI 89 [ D.13204 ])
        (mem/f:DI (reg/v/f:DI 88 [ mapped ]) [2 mapped_4->head+0 S8 A64])) -1
     (nil))
(insn 211 210 297 33 (set (reg:SI 87 [ D.13203 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [4 gc_cycle+0 S4 A32])) -1
     (nil))
(jump_insn 297 211 298 33 (set (pc)
        (label_ref 212)) -1
     (nil)
 -> 212)
(barrier 298 297 300)
(code_label 300 298 299 34 25 "" [1 uses])
(note 299 300 23 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 23 299 212 34 (set (reg/v:SI 156 [ retval ])
        (const_int -2 [0xfffffffffffffffe])) nscd_getpw_r.c:116 -1
     (nil))
(code_label 212 23 213 35 4 "" [1 uses])
(note 213 212 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 35 (set (reg/v:SI 152 [ now_cycle ])
        (mem/v:SI (plus:DI (reg/f:DI 89 [ D.13204 ])
                (const_int 8 [0x8])) [4 _5->gc_cycle+0 S4 A64])) nscd-client.h:415 -1
     (nil))
(insn 215 214 216 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.13203 ])
            (reg/v:SI 152 [ now_cycle ]))) nscd-client.h:416 -1
     (nil))
(jump_insn 216 215 217 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) nscd-client.h:416 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 225)
(note 217 216 218 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 36 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -52 [0xffffffffffffffcc])) [4 gc_cycle+0 S4 A32])
        (reg/v:SI 152 [ now_cycle ])) nscd-client.h:419 -1
     (nil))
(insn 219 218 220 36 (parallel [
            (set (reg:SI 198 [ D.13203 ])
                (and:SI (reg/v:SI 152 [ now_cycle ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:228 -1
     (nil))
(insn 220 219 221 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 198 [ D.13203 ])
            (const_int 0 [0]))) nscd_getpw_r.c:228 -1
     (nil))
(jump_insn 221 220 224 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) nscd_getpw_r.c:228 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 247)
(note 224 221 222 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(jump_insn 222 224 223 37 (set (pc)
        (label_ref 235)) -1
     (nil)
 -> 235)
(barrier 223 222 225)
(code_label 225 223 226 38 16 "" [1 uses])
(note 226 225 227 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 38 (parallel [
            (set (reg:SI 154 [ D.13207 ])
                (unspec_volatile:SI [
                        (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                                (const_int 24 [0x18])) [-1  S4 A32])
                        (const_int 32773 [0x8005])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                        (const_int 24 [0x18])) [-1  S4 A32])
                (plus:SI (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                            (const_int 24 [0x18])) [-1  S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd-client.h:423 -1
     (nil))
(insn 228 227 229 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154 [ D.13207 ])
            (const_int 1 [0x1]))) nscd-client.h:423 -1
     (nil))
(jump_insn 229 228 230 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) nscd-client.h:423 612 {*jcc_1}
     (int_list:REG_BR_PROB 8010 (nil))
 -> 281)
(note 230 229 231 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 39 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ mapped ])) nscd-client.h:424 -1
     (nil))
(call_insn 232 231 233 39 (call (mem:QI (symbol_ref:DI ("__nscd_unmap") [flags 0x41]  <function_decl 0x2b51158ecbd0 __nscd_unmap>) [0 __nscd_unmap S1 A8])
        (const_int 0 [0])) nscd-client.h:424 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nscd_unmap") [flags 0x41]  <function_decl 0x2b51158ecbd0 __nscd_unmap>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 233 232 234 39 (set (pc)
        (label_ref:DI 281)) nscd-client.h:424 654 {jump}
     (nil)
 -> 281)
(barrier 234 233 235)
(code_label 235 234 236 40 18 "" [1 uses])
(note 236 235 237 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 40 (parallel [
            (set (reg/v:SI 91 [ nretries ])
                (plus:SI (reg/v:SI 91 [ nretries ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:228 -1
     (nil))
(insn 238 237 239 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 91 [ nretries ])
            (const_int 5 [0x5]))) nscd_getpw_r.c:228 -1
     (nil))
(jump_insn 239 238 240 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) nscd_getpw_r.c:228 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 247)
(note 240 239 241 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ retval ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:228 -1
     (nil))
(jump_insn 242 241 246 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nscd_getpw_r.c:228 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 284)
(note 246 242 244 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 244 246 245 42 (set (pc)
        (label_ref 243)) -1
     (nil)
 -> 243)
(barrier 245 244 247)
(code_label 247 245 248 43 17 "" [2 uses])
(note 248 247 249 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 43 (parallel [
            (set (reg:SI 151 [ D.13207 ])
                (unspec_volatile:SI [
                        (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                                (const_int 24 [0x18])) [-1  S4 A32])
                        (const_int 32773 [0x8005])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                        (const_int 24 [0x18])) [-1  S4 A32])
                (plus:SI (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                            (const_int 24 [0x18])) [-1  S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:231 -1
     (nil))
(insn 250 249 251 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.13207 ])
            (const_int 1 [0x1]))) nscd_getpw_r.c:231 -1
     (nil))
(jump_insn 251 250 287 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 255)
            (pc))) nscd_getpw_r.c:231 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 255)
(code_label 287 251 252 44 24 "" [1 uses])
(note 252 287 253 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 44 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ mapped ])) nscd_getpw_r.c:232 -1
     (nil))
(call_insn 254 253 255 44 (call (mem:QI (symbol_ref:DI ("__nscd_unmap") [flags 0x41]  <function_decl 0x2b51158ecbd0 __nscd_unmap>) [0 __nscd_unmap S1 A8])
        (const_int 0 [0])) nscd_getpw_r.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nscd_unmap") [flags 0x41]  <function_decl 0x2b51158ecbd0 __nscd_unmap>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 255 254 256 45 21 "" [1 uses])
(note 256 255 257 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ retval ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:236 -1
     (nil))
(jump_insn 258 257 281 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 306)
            (pc))) nscd_getpw_r.c:236 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 306)
(code_label 281 258 259 46 23 "" [4 uses])
(note 259 281 260 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 46 (set (reg:SI 157 [ <retval> ])
        (reg/v:SI 156 [ retval ])) nscd_getpw_r.c:240 -1
     (nil))
(jump_insn 261 260 262 46 (set (pc)
        (label_ref 293)) nscd_getpw_r.c:240 -1
     (nil)
 -> 293)
(barrier 262 261 263)
(code_label 263 262 264 47 3 "" [2 uses])
(note 264 263 265 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 47 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:125 -1
     (nil))
(insn 266 265 267 47 (set (reg:DI 37 r8)
        (const_int 36 [0x24])) nscd_getpw_r.c:125 -1
     (nil))
(insn 267 266 268 47 (set (reg:DI 2 cx)
        (reg:DI 200)) nscd_getpw_r.c:125 -1
     (nil))
(insn 268 267 269 47 (set (reg:SI 1 dx)
        (reg/v:SI 160 [ type ])) nscd_getpw_r.c:125 -1
     (nil))
(insn 269 268 270 47 (set (reg:DI 4 si)
        (reg/v:DI 159 [ keylen ])) nscd_getpw_r.c:125 -1
     (nil))
(insn 270 269 271 47 (set (reg:DI 5 di)
        (reg/v/f:DI 158 [ key ])) nscd_getpw_r.c:125 -1
     (nil))
(call_insn 271 270 272 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nscd_open_socket") [flags 0x43]  <function_decl 0x2b51158ec948 __nscd_open_socket>) [0 __nscd_open_socket S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:125 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nscd_open_socket") [flags 0x43]  <function_decl 0x2b51158ec948 __nscd_open_socket>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 272 271 274 47 (set (reg/v:SI 90 [ sock ])
        (reg:SI 0 ax)) nscd_getpw_r.c:125 -1
     (nil))
(insn 274 272 275 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ sock ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:127 -1
     (nil))
(jump_insn 275 274 278 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) nscd_getpw_r.c:127 -1
     (int_list:REG_BR_PROB 159 (nil))
 -> 273)
(note 278 275 13 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 13 278 14 48 (set (reg/v/f:DI 97 [ recend ])
        (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(insn 14 13 276 48 (set (reg/v/f:DI 93 [ pw_name ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 276 14 277 48 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
(barrier 277 276 284)
(code_label 284 277 285 50 19 "" [1 uses])
(note 285 284 286 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 288 50 (parallel [
            (set (reg:SI 155 [ D.13207 ])
                (unspec_volatile:SI [
                        (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                                (const_int 24 [0x18])) [-1  S4 A32])
                        (const_int 32773 [0x8005])
                    ] UNSPECV_XCHG))
            (set (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                        (const_int 24 [0x18])) [-1  S4 A32])
                (plus:SI (mem/v:SI (plus:DI (reg/v/f:DI 88 [ mapped ])
                            (const_int 24 [0x18])) [-1  S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:231 -1
     (nil))
(insn 288 286 289 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 155 [ D.13207 ])
            (const_int 1 [0x1]))) nscd_getpw_r.c:231 -1
     (nil))
(jump_insn 289 288 292 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 287)
            (pc))) nscd_getpw_r.c:231 -1
     (int_list:REG_BR_PROB 6857 (nil))
 -> 287)
(note 292 289 290 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 290 292 291 51 (set (pc)
        (label_ref 281)) nscd_getpw_r.c:231 -1
     (nil)
 -> 281)
(barrier 291 290 293)
(code_label 293 291 296 52 1 "" [1 uses])
(note 296 293 294 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 294 296 295 52 (set (reg/i:SI 0 ax)
        (reg:SI 157 [ <retval> ])) nscd_getpw_r.c:241 -1
     (nil))
(insn 295 294 0 52 (use (reg/i:SI 0 ax)) nscd_getpw_r.c:241 -1
     (nil))

;; Function pw_map_free (pw_map_free, funcdef_no=55, decl_uid=12996, cgraph_uid=55, symbol_order=64)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
deleting block 5


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 88)
        (symbol_ref:DI ("map_handle") [flags 0x2]  <var_decl 0x2b51159d0d80 map_handle>)) nscd_getpw_r.c:74 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 87 [ D.13221 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 88)
                (const_int 8 [0x8])) [2 map_handle.mapped+0 S8 A64])) nscd_getpw_r.c:74 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.13221 ])
            (const_int -1 [0xffffffffffffffff]))) nscd_getpw_r.c:74 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 18)
            (pc))) nscd_getpw_r.c:74 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 18)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg/f:DI 89)
        (symbol_ref:DI ("map_handle") [flags 0x2]  <var_decl 0x2b51159d0d80 map_handle>)) nscd_getpw_r.c:77 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 90)
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:77 -1
     (nil))
(insn 12 11 13 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [2 map_handle.mapped+0 S8 A64])
        (reg:DI 90)) nscd_getpw_r.c:77 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.13221 ])) nscd_getpw_r.c:78 -1
     (nil))
(call_insn/j 14 13 15 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b511535ee58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nscd_getpw_r.c:78 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b511535ee58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 15 14 18)
(code_label 18 15 19 6 61 "" [1 uses])
(note 19 18 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function __nscd_getpwnam_r (__nscd_getpwnam_r, funcdef_no=53, decl_uid=12894, cgraph_uid=53, symbol_order=61)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 34.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 91 [ name ])
        (reg:DI 5 di [ name ])) nscd_getpw_r.c:47 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ resultbuf ])
        (reg:DI 4 si [ resultbuf ])) nscd_getpw_r.c:47 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 93 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nscd_getpw_r.c:47 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 94 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nscd_getpw_r.c:47 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 95 [ result ])
        (reg:DI 37 r8 [ result ])) nscd_getpw_r.c:47 -1
     (nil))
(note 7 6 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 7 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ name ])
            (const_int 0 [0]))) nscd_getpw_r.c:48 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) nscd_getpw_r.c:48 612 {*jcc_1}
     (int_list:REG_BR_PROB 177 (nil))
 -> 43)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ name ])) nscd_getpw_r.c:51 -1
     (nil))
(call_insn/i 15 14 16 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b5115342948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:51 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b5115342948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 16 15 17 4 (set (reg:DI 97)
        (reg:DI 0 ax)) nscd_getpw_r.c:51 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 98)
        (reg:DI 97)) nscd_getpw_r.c:51 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 88 [ D.13225 ])
        (reg:DI 98)) nscd_getpw_r.c:51 -1
     (nil))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 99 [ D.13225 ])
                (plus:DI (reg:DI 88 [ D.13225 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:51 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:51 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 21 20 22 4 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v/f:DI 95 [ result ])) nscd_getpw_r.c:51 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 22 21 23 4 (set (reg:DI 38 r9)
        (reg/v:DI 94 [ buflen ])) nscd_getpw_r.c:51 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 37 r8)
        (reg/v/f:DI 93 [ buffer ])) nscd_getpw_r.c:51 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 2 cx)
        (reg/v/f:DI 92 [ resultbuf ])) nscd_getpw_r.c:51 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) nscd_getpw_r.c:51 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg:DI 99 [ D.13225 ])) nscd_getpw_r.c:51 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ name ])) nscd_getpw_r.c:51 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nscd_getpw_r") [flags 0x3]  <function_decl 0x2b5115a60870 nscd_getpw_r>) [0 nscd_getpw_r S1 A8])
            (const_int 16 [0x10]))) nscd_getpw_r.c:51 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_getpw_r") [flags 0x3]  <function_decl 0x2b5115a60870 nscd_getpw_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 29 28 30 4 (set (reg:SI 87 [ D.13224 ])
        (reg:SI 0 ax)) nscd_getpw_r.c:51 -1
     (nil))
(insn 30 29 40 4 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:51 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 40 30 41 4 (set (pc)
        (label_ref 31)) nscd_getpw_r.c:51 -1
     (nil)
 -> 31)
(barrier 41 40 43)
(code_label 43 41 42 5 65 "" [1 uses])
(note 42 43 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 42 31 5 (set (reg:SI 87 [ D.13224 ])
        (const_int -1 [0xffffffffffffffff])) nscd_getpw_r.c:49 -1
     (nil))
(code_label 31 8 32 6 64 "" [1 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 6 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.13224 ])) -1
     (nil))
(insn 37 33 38 6 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) nscd_getpw_r.c:53 -1
     (nil))
(insn 38 37 0 6 (use (reg/i:SI 0 ax)) nscd_getpw_r.c:53 -1
     (nil))

;; Function __nscd_getpwuid_r (__nscd_getpwuid_r, funcdef_no=54, decl_uid=12900, cgraph_uid=54, symbol_order=62)

Partition 0: size 12 align 16
	buf

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 35.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 95 [ uid ])
        (reg:SI 5 di [ uid ])) nscd_getpw_r.c:58 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ resultbuf ])
        (reg:DI 4 si [ resultbuf ])) nscd_getpw_r.c:58 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nscd_getpw_r.c:58 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 98 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nscd_getpw_r.c:58 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 99 [ result ])
        (reg:DI 37 r8 [ result ])) nscd_getpw_r.c:58 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -5 [0xfffffffffffffffb])) [0 buf+11 S1 A8])
        (const_int 0 [0])) nscd_getpw_r.c:60 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:61 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg:DI 100)
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:61 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 102 [ D.13228 ])
        (zero_extend:DI (reg/v:SI 95 [ uid ]))) nscd_getpw_r.c:61 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) nscd_getpw_r.c:61 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) nscd_getpw_r.c:61 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg:DI 101)) nscd_getpw_r.c:61 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg:DI 102 [ D.13228 ])) nscd_getpw_r.c:61 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_itoa_word") [flags 0x43]  <function_decl 0x2b5115627798 _itoa_word>) [0 _itoa_word S1 A8])
            (const_int 0 [0]))) nscd_getpw_r.c:61 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_itoa_word") [flags 0x43]  <function_decl 0x2b5115627798 _itoa_word>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 19 18 20 2 (set (reg/v/f:DI 88 [ cp ])
        (reg:DI 0 ax)) nscd_getpw_r.c:61 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:63 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 104 [ D.13229 ])
                (plus:DI (reg:DI 103)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:63 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:DI 105 [ D.13229 ])
                (minus:DI (reg:DI 104 [ D.13229 ])
                    (reg/v/f:DI 88 [ cp ])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:63 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:63 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 24 23 25 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg/v/f:DI 99 [ result ])) nscd_getpw_r.c:63 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 25 24 26 2 (set (reg:DI 38 r9)
        (reg/v:DI 98 [ buflen ])) nscd_getpw_r.c:63 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 37 r8)
        (reg/v/f:DI 97 [ buffer ])) nscd_getpw_r.c:63 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 96 [ resultbuf ])) nscd_getpw_r.c:63 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nscd_getpw_r.c:63 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 4 si)
        (reg:DI 105 [ D.13229 ])) nscd_getpw_r.c:63 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ cp ])) nscd_getpw_r.c:63 -1
     (nil))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nscd_getpw_r") [flags 0x3]  <function_decl 0x2b5115a60870 nscd_getpw_r>) [0 nscd_getpw_r S1 A8])
            (const_int 16 [0x10]))) nscd_getpw_r.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nscd_getpw_r") [flags 0x3]  <function_decl 0x2b5115a60870 nscd_getpw_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 32 31 33 2 (set (reg:SI 93 [ D.13230 ])
        (reg:SI 0 ax)) nscd_getpw_r.c:63 -1
     (nil))
(insn 33 32 34 2 (set (reg:SI 94 [ <retval> ])
        (reg:SI 93 [ D.13230 ])) nscd_getpw_r.c:63 -1
     (nil))
(insn 34 33 38 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nscd_getpw_r.c:63 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 38 34 39 2 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) nscd_getpw_r.c:65 -1
     (nil))
(insn 39 38 0 2 (use (reg/i:SI 0 ax)) nscd_getpw_r.c:65 -1
     (nil))
