
;; Function vlimit (vlimit, funcdef_no=32, decl_uid=1842, cgraph_uid=32, symbol_order=33)

Partition 0: size 16 align 16
	lims

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 3->5 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 46 from 7 to 9.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Removing jump 40.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v:SI 95 [ resource ])
        (reg:SI 5 di [ resource ])) vlimit.c:30 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 96 [ value ])
        (reg:SI 4 si [ value ])) vlimit.c:30 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (parallel [
            (set (reg:SI 97 [ D.7089 ])
                (plus:SI (reg/v:SI 95 [ resource ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) vlimit.c:31 -1
     (nil))
(insn 10 9 11 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 97 [ D.7089 ])
            (const_int 5 [0x5]))) vlimit.c:31 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) vlimit.c:31 -1
     (int_list:REG_BR_PROB 926 (nil))
 -> 33)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (reg/v:SI 91 [ rlimit_res ])
                (plus:SI (reg/v:SI 95 [ resource ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) vlimit.c:35 -1
     (nil))
(insn 14 13 15 4 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) vlimit.c:39 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 98)) vlimit.c:39 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 5 di)
        (reg/v:SI 91 [ rlimit_res ])) vlimit.c:39 -1
     (nil))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__getrlimit") [flags 0x41]  <function_decl 0x2b074ae2e438 __getrlimit>) [0 __getrlimit S1 A8])
            (const_int 0 [0]))) vlimit.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__getrlimit") [flags 0x41]  <function_decl 0x2b074ae2e438 __getrlimit>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 4 (set (reg:SI 92 [ D.7088 ])
        (reg:SI 0 ax)) vlimit.c:39 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 92 [ D.7088 ])
            (const_int 0 [0]))) vlimit.c:39 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) vlimit.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 3666 (nil))
 -> 49)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 99)
        (sign_extend:DI (reg/v:SI 96 [ value ]))) vlimit.c:42 -1
     (nil))
(insn 23 22 24 5 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 lims.rlim_cur+0 S8 A128])
        (reg:DI 99)) vlimit.c:42 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) vlimit.c:43 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 4 si)
        (reg:DI 100)) vlimit.c:43 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 5 di)
        (reg/v:SI 91 [ rlimit_res ])) vlimit.c:43 -1
     (nil))
(call_insn 27 26 28 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__setrlimit") [flags 0x41]  <function_decl 0x2b074ae2e5e8 __setrlimit>) [0 __setrlimit S1 A8])
            (const_int 0 [0]))) vlimit.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__setrlimit") [flags 0x41]  <function_decl 0x2b074ae2e5e8 __setrlimit>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 28 27 46 5 (set (reg:SI 87 [ D.7088 ])
        (reg:SI 0 ax)) vlimit.c:43 -1
     (nil))
(jump_insn 46 28 47 5 (set (pc)
        (label_ref:DI 37)) vlimit.c:43 654 {jump}
     (nil)
 -> 37)
(barrier 47 46 49)
(code_label 49 47 48 6 5 "" [1 uses])
(note 48 49 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 48 31 6 (set (reg:SI 87 [ D.7088 ])
        (const_int -1 [0xffffffffffffffff])) vlimit.c:40 -1
     (nil))
(jump_insn 31 5 32 6 (set (pc)
        (label_ref 37)) -1
     (nil)
 -> 37)
(barrier 32 31 33)
(code_label 33 32 34 8 2 "" [1 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b074b0ff630 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) vlimit.c:46 -1
     (nil))
(insn 36 35 6 8 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 101)) [3 __libc_errno+0 S4 A32])
        (const_int 22 [0x16])) vlimit.c:46 -1
     (nil))
(insn 6 36 37 8 (set (reg:SI 87 [ D.7088 ])
        (const_int -1 [0xffffffffffffffff])) vlimit.c:47 -1
     (nil))
(code_label 37 6 38 9 4 "" [2 uses])
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 43 9 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.7088 ])) -1
     (nil))
(insn 43 39 44 9 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) vlimit.c:48 -1
     (nil))
(insn 44 43 0 9 (use (reg/i:SI 0 ax)) vlimit.c:48 -1
     (nil))
