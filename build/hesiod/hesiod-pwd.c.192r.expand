
;; Function lookup (lookup, funcdef_no=49, decl_uid=8133, cgraph_uid=49, symbol_order=50)

Partition 0: size 8 align 8
	context

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 2->10 redirected to 13
Edge 7->10 redirected to 14
Edge 8->10 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 108.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 111 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 112 [ type ])
        (reg:DI 4 si [ type ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 113 [ pwd ])
        (reg:DI 1 dx [ pwd ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 114 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 115 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 116 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_hesiod/hesiod-pwd.c:48 -1
     (nil))
(note 8 7 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 8 17 2 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b4263cb9480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) nss_hesiod/hesiod-pwd.c:55 -1
     (nil))
(insn 17 16 18 2 (set (reg/v:SI 88 [ olderr ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 117)) [2 errno+0 S4 A32])) nss_hesiod/hesiod-pwd.c:55 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:57 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 118)) nss_hesiod/hesiod-pwd.c:57 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2b4263cf00d8 hesiod_init>) [0 hesiod_init S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:57 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2b4263cf00d8 hesiod_init>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 2 (set (reg:SI 89 [ D.8209 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-pwd.c:57 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 89 [ D.8209 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:57 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) nss_hesiod/hesiod-pwd.c:57 612 {*jcc_1}
     (int_list:REG_BR_PROB 364 (nil))
 -> 117)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:60 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 1 dx)
        (reg/v/f:DI 112 [ type ])) nss_hesiod/hesiod-pwd.c:60 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (reg/v/f:DI 111 [ name ])) nss_hesiod/hesiod-pwd.c:60 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 119)) nss_hesiod/hesiod-pwd.c:60 -1
     (nil))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2b4263cf0360 hesiod_resolve>) [0 hesiod_resolve S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2b4263cf0360 hesiod_resolve>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 4 (set (reg/v/f:DI 91 [ list ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-pwd.c:60 -1
     (nil))
(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ list ])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:61 -1
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) nss_hesiod/hesiod-pwd.c:61 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 47)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg:DI 120)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b4263cb9480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) nss_hesiod/hesiod-pwd.c:63 -1
     (nil))
(insn 35 34 36 5 (set (reg/v:SI 92 [ err ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 120)) [2 errno+0 S4 A32])) nss_hesiod/hesiod-pwd.c:63 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:64 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 5 di)
        (reg:DI 121)) nss_hesiod/hesiod-pwd.c:64 -1
     (nil))
(call_insn 38 37 39 5 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:64 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 5 (set (reg:DI 122)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b4263cb9480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) nss_hesiod/hesiod-pwd.c:65 -1
     (nil))
(insn 40 39 41 5 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 122)) [2 errno+0 S4 A32])
        (reg/v:SI 88 [ olderr ])) nss_hesiod/hesiod-pwd.c:65 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 92 [ err ])
            (const_int 2 [0x2]))) nss_hesiod/hesiod-pwd.c:66 -1
     (nil))
(insn 42 41 43 5 (set (reg:QI 124)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:66 -1
     (nil))
(insn 43 42 44 5 (set (reg:SI 123 [ D.8215 ])
        (zero_extend:SI (reg:QI 124))) nss_hesiod/hesiod-pwd.c:66 -1
     (nil))
(insn 44 43 45 5 (parallel [
            (set (reg:SI 87 [ D.8208 ])
                (neg:SI (reg:SI 123 [ D.8215 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:66 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 46 45 47)
(code_label 47 46 48 6 3 "" [1 uses])
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:DI 96 [ D.8213 ])
        (reg/v/f:DI 114 [ buffer ])) nss_hesiod/hesiod-pwd.c:69 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 100 [ D.8211 ])
        (mem/f:DI (reg/v/f:DI 91 [ list ]) [1 *list_12+0 S8 A64])) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.8211 ])) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(call_insn/i 52 51 53 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b426390d948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:70 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b426390d948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 6 (set (reg:DI 126)
        (reg:DI 0 ax)) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 127)
        (reg:DI 126)) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(insn 55 54 56 6 (set (reg:DI 101 [ D.8214 ])
        (reg:DI 127)) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg/v:DI 102 [ len ])
                (plus:DI (reg:DI 101 [ D.8214 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:70 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:DI 128 [ D.8211 ])
                (plus:DI (reg/v/f:DI 114 [ buffer ])
                    (reg/v:DI 115 [ buflen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:71 -1
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 129 [ D.8212 ])
                (minus:DI (reg:DI 128 [ D.8211 ])
                    (reg/f:DI 96 [ D.8213 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:71 -1
     (nil))
(insn 59 58 60 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 129 [ D.8212 ])
            (reg/v:DI 102 [ len ]))) nss_hesiod/hesiod-pwd.c:71 -1
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) nss_hesiod/hesiod-pwd.c:71 -1
     (int_list:REG_BR_PROB 9600 (nil))
 -> 72)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:73 -1
     (nil))
(insn 63 62 64 7 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ list ])) nss_hesiod/hesiod-pwd.c:73 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 5 di)
        (reg:DI 130)) nss_hesiod/hesiod-pwd.c:73 -1
     (nil))
(call_insn 65 64 66 7 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b4263cf0438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:73 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b4263cf0438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 66 65 67 7 (set (reg:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:74 -1
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg:DI 131)) nss_hesiod/hesiod-pwd.c:74 -1
     (nil))
(call_insn 68 67 69 7 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 69 68 10 7 (set (mem:SI (reg/v/f:DI 116 [ errnop ]) [2 *errnop_31(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_hesiod/hesiod-pwd.c:75 -1
     (nil))
(insn 10 69 70 7 (set (reg:SI 87 [ D.8208 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-pwd.c:76 -1
     (nil))
(jump_insn 70 10 71 7 (set (pc)
        (label_ref 105)) nss_hesiod/hesiod-pwd.c:76 -1
     (nil)
 -> 105)
(barrier 71 70 72)
(code_label 72 71 73 8 4 "" [1 uses])
(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 8 (set (reg:DI 132)
        (reg/f:DI 96 [ D.8213 ])) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 75 74 76 8 (set (reg:DI 133)
        (reg/f:DI 100 [ D.8211 ])) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 76 75 77 8 (set (reg:DI 134)
        (reg/v:DI 102 [ len ])) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 77 76 78 8 (set (reg:DI 1 dx)
        (reg:DI 134)) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 78 77 79 8 (set (reg:DI 4 si)
        (reg:DI 133)) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 79 78 80 8 (set (reg:DI 5 di)
        (reg:DI 132)) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(call_insn 80 79 81 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b4263ddebd0 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:79 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b4263ddebd0 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 81 80 82 8 (set (reg:DI 135)
        (reg:DI 0 ax)) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 82 81 83 8 (set (reg:DI 136)
        (reg:DI 135)) nss_hesiod/hesiod-pwd.c:79 -1
     (nil))
(insn 83 82 84 8 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:80 -1
     (nil))
(insn 84 83 85 8 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ list ])) nss_hesiod/hesiod-pwd.c:80 -1
     (nil))
(insn 85 84 86 8 (set (reg:DI 5 di)
        (reg:DI 137)) nss_hesiod/hesiod-pwd.c:80 -1
     (nil))
(call_insn 86 85 87 8 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b4263cf0438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:80 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b4263cf0438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 87 86 88 8 (set (reg:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-pwd.c:81 -1
     (nil))
(insn 88 87 89 8 (set (reg:DI 5 di)
        (reg:DI 138)) nss_hesiod/hesiod-pwd.c:81 -1
     (nil))
(call_insn 89 88 90 8 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:81 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b4263cf01b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 90 89 91 8 (set (reg:DI 37 r8)
        (reg/v/f:DI 116 [ errnop ])) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(insn 91 90 92 8 (set (reg:DI 2 cx)
        (reg/v:DI 115 [ buflen ])) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(insn 92 91 93 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 114 [ buffer ])) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(insn 93 92 94 8 (set (reg:DI 4 si)
        (reg/v/f:DI 113 [ pwd ])) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(insn 94 93 95 8 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ buffer ])) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(call_insn 95 94 96 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2b4263cff870 _nss_files_parse_pwent>) [0 _nss_files_parse_pwent S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:83 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2b4263cff870 _nss_files_parse_pwent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 96 95 97 8 (set (reg/v:SI 107 [ parse_res ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-pwd.c:83 -1
     (nil))
(insn 97 96 98 8 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 107 [ parse_res ])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:84 -1
     (nil))
(jump_insn 98 97 99 8 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 121)
            (pc))) nss_hesiod/hesiod-pwd.c:84 612 {*jcc_1}
     (int_list:REG_BR_PROB 6335 (nil))
 -> 121)
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 9 (set (reg:DI 139)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b4263cb9480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) nss_hesiod/hesiod-pwd.c:86 -1
     (nil))
(insn 101 100 102 9 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 139)) [2 errno+0 S4 A32])
        (reg/v:SI 88 [ olderr ])) nss_hesiod/hesiod-pwd.c:86 -1
     (nil))
(insn 102 101 103 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 107 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_hesiod/hesiod-pwd.c:87 -1
     (nil))
(jump_insn 103 102 104 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 125)
            (pc))) nss_hesiod/hesiod-pwd.c:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 159 (nil))
 -> 125)
(note 104 103 11 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 11 104 114 10 (set (reg:SI 87 [ D.8208 ])
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:87 -1
     (nil))
(jump_insn 114 11 115 10 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 115 114 117)
(code_label 117 115 116 11 5 "" [1 uses])
(note 116 117 9 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 9 116 118 11 (set (reg:SI 87 [ D.8208 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-pwd.c:58 -1
     (nil))
(jump_insn 118 9 119 11 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 119 118 121)
(code_label 121 119 120 12 6 "" [1 uses])
(note 120 121 12 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 12 120 122 12 (set (reg:SI 87 [ D.8208 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-pwd.c:90 -1
     (nil))
(jump_insn 122 12 123 12 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 123 122 125)
(code_label 125 123 124 13 7 "" [1 uses])
(note 124 125 13 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 13 124 105 13 (set (reg:SI 87 [ D.8208 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-pwd.c:87 -1
     (nil))
(code_label 105 13 106 14 2 "" [5 uses])
(note 106 105 107 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 111 14 (set (reg:SI 110 [ <retval> ])
        (reg:SI 87 [ D.8208 ])) -1
     (nil))
(insn 111 107 112 14 (set (reg/i:SI 0 ax)
        (reg:SI 110 [ <retval> ])) nss_hesiod/hesiod-pwd.c:91 -1
     (nil))
(insn 112 111 0 14 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-pwd.c:91 -1
     (nil))

;; Function _nss_hesiod_setpwent (_nss_hesiod_setpwent, funcdef_no=47, decl_uid=7101, cgraph_uid=47, symbol_order=48)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 88 [ stayopen ])
        (reg:SI 5 di [ stayopen ])) nss_hesiod/hesiod-pwd.c:35 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-pwd.c:36 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-pwd.c:37 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-pwd.c:37 -1
     (nil))

;; Function _nss_hesiod_endpwent (_nss_hesiod_endpwent, funcdef_no=48, decl_uid=7103, cgraph_uid=48, symbol_order=49)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 6.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-pwd.c:42 -1
     (nil))
(insn 9 5 10 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-pwd.c:43 -1
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-pwd.c:43 -1
     (nil))

;; Function _nss_hesiod_getpwnam_r (_nss_hesiod_getpwnam_r, funcdef_no=50, decl_uid=7109, cgraph_uid=50, symbol_order=51)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 89 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-pwd.c:96 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ pwd ])
        (reg:DI 4 si [ pwd ])) nss_hesiod/hesiod-pwd.c:96 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_hesiod/hesiod-pwd.c:96 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 92 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_hesiod/hesiod-pwd.c:96 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-pwd.c:96 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 38 r9)
        (reg/v/f:DI 93 [ errnop ])) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 37 r8)
        (reg/v:DI 92 [ buflen ])) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ buffer ])) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 90 [ pwd ])) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b4263e0c480 *.LC3>)) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ name ])) nss_hesiod/hesiod-pwd.c:97 -1
     (nil))
(call_insn/j 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b4263dcbd80 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b4263dcbd80 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(barrier 17 16 0)

;; Function _nss_hesiod_getpwuid_r (_nss_hesiod_getpwuid_r, funcdef_no=51, decl_uid=7115, cgraph_uid=51, symbol_order=52)

Partition 0: size 21 align 16
	uidstr

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 27.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 89 [ uid ])
        (reg:SI 5 di [ uid ])) nss_hesiod/hesiod-pwd.c:103 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ pwd ])
        (reg:DI 4 si [ pwd ])) nss_hesiod/hesiod-pwd.c:103 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_hesiod/hesiod-pwd.c:103 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 92 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_hesiod/hesiod-pwd.c:103 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-pwd.c:103 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 cx)
        (reg/v:SI 89 [ uid ])) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b4263e0c870 *.LC5>)) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (const_int 21 [0x15])) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 94)) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) nss_hesiod/hesiod-pwd.c:107 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b4263916948 snprintf>) [0 __builtin_snprintf S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:107 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b4263916948 snprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg/v/f:DI 93 [ errnop ])) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 37 r8)
        (reg/v:DI 92 [ buflen ])) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ buffer ])) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 90 [ pwd ])) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b4263e0c900 *.LC6>)) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 95)) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b4263dcbd80 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-pwd.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b4263dcbd80 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 25 24 26 2 (set (reg:SI 87 [ D.8231 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 26 25 30 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.8231 ])) nss_hesiod/hesiod-pwd.c:109 -1
     (nil))
(insn 30 26 31 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) nss_hesiod/hesiod-pwd.c:110 -1
     (nil))
(insn 31 30 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-pwd.c:110 -1
     (nil))
