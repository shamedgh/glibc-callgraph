
;; Function _nss_files_parse_protoent (_nss_files_parse_protoent, funcdef_no=52, decl_uid=10176, cgraph_uid=52, symbol_order=55)

Partition 0: size 8 align 8
	endp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39
Edge 2->4 redirected to 50
Edge 18->20 redirected to 52
Edge 25->39 redirected to 53
Edge 28->21 redirected to 54
Edge 30->21 redirected to 55
Edge 33->35 redirected to 56


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 12->13 to 51 failed.
Forwarding edge 22->23 to 29 failed.
Forwarding edge 39->40 to 57 failed.
Forwarding edge 45->46 to 41 failed.
Forwarding edge 54->55 to 32 failed.


try_optimize_cfg iteration 2

Forwarding edge 12->13 to 51 failed.
Forwarding edge 22->23 to 29 failed.
Forwarding edge 39->40 to 57 failed.
Forwarding edge 45->46 to 41 failed.
Forwarding edge 54->55 to 32 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 48 NOTE_INSN_DELETED)
(note 48 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 48 25 2 (set (reg/v/f:DI 188 [ line ])
        (reg:DI 5 di [ line ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 189 [ result ])
        (reg:DI 4 si [ result ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 190 [ data ])
        (reg:DI 1 dx [ data ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:DI 191 [ datalen ])
        (reg:DI 2 cx [ datalen ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 28 27 29 2 (set (reg/v/f:DI 192 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(note 29 28 50 2 NOTE_INSN_FUNCTION_BEG)
(insn 50 29 51 2 (parallel [
            (set (reg/v/f:DI 112 [ buf_end ])
                (plus:DI (reg/v/f:DI 190 [ data ])
                    (reg/v:DI 191 [ datalen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 51 50 52 2 (set (reg/v/f:DI 113 [ buf_start ])
        (reg/v/f:DI 190 [ data ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 52 51 53 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 112 [ buf_end ])
            (reg/v/f:DI 188 [ line ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 53 52 54 2 (set (reg:QI 194 [ D.11259 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 54 53 55 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 194 [ D.11259 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 55 54 321 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) nss_hesiod/hesiod-proto.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 303)
(note 321 55 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 56 321 57 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 113 [ buf_start ])
            (reg/v/f:DI 188 [ line ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 57 56 58 4 (set (reg:QI 196 [ D.11259 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 58 57 59 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 196 [ D.11259 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 59 58 60 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 303)
            (pc))) nss_hesiod/hesiod-proto.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 303)
(note 60 59 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 5 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 62 61 63 5 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ line ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(call_insn/i 63 62 64 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2b9aab1bcbd0 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2b9aab1bcbd0 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 64 63 65 5 (set (reg/f:DI 115 [ D.11260 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 65 64 300 5 (parallel [
            (set (reg/v/f:DI 109 [ buf_start ])
                (plus:DI (reg/f:DI 115 [ D.11260 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 300 65 301 5 (set (pc)
        (label_ref 66)) nss_hesiod/hesiod-proto.c:39 -1
     (nil)
 -> 66)
(barrier 301 300 303)
(code_label 303 301 302 6 28 "" [2 uses])
(note 302 303 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 302 66 6 (set (reg/v/f:DI 109 [ buf_start ])
        (reg/v/f:DI 113 [ buf_start ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(code_label 66 30 67 7 2 "" [1 uses])
(note 67 66 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b9aab634d80 *.LC0>)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 69 68 70 7 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ line ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(call_insn/i 70 69 71 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strpbrk") [flags 0x41]  <function_decl 0x2b9aaafca1b0 __builtin_strpbrk>) [0 __builtin_strpbrk S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strpbrk") [flags 0x41]  <function_decl 0x2b9aaafca1b0 __builtin_strpbrk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 71 70 72 7 (set (reg/v/f:DI 117 [ p ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 72 71 73 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 117 [ p ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 73 72 74 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 76)
(note 74 73 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 8 (set (mem:QI (reg/v/f:DI 117 [ p ]) [0 *p_22+0 S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(code_label 76 75 77 9 3 "" [1 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (mem/f:DI (reg/v/f:DI 189 [ result ]) [1 result_24(D)->p_name+0 S8 A64])
        (reg/v/f:DI 188 [ line ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 79 78 80 9 (set (reg:QI 118 [ D.11261 ])
        (mem:QI (reg/v/f:DI 188 [ line ]) [0 *line_34(D)+0 S1 A8])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 80 79 81 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11261 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 81 80 82 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 112)
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 83 82 84 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b9aab5ae000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b9aab5ae000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 84 83 85 10 (set (reg/f:DI 184 [ D.11265 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 85 84 86 10 (set (reg/f:DI 185 [ D.11263 ])
        (mem/f:DI (reg/f:DI 184 [ D.11265 ]) [1 *_182+0 S8 A64])) -1
     (nil))
(jump_insn 86 85 87 10 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 87 86 95)
(code_label 95 87 88 11 6 "" [1 uses])
(note 88 95 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (parallel [
            (set (reg/v/f:DI 188 [ line ])
                (plus:DI (reg/v/f:DI 188 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 90 89 91 11 (set (reg:QI 118 [ D.11261 ])
        (mem:QI (reg/v/f:DI 188 [ line ]) [0 MEM[base: line_33, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 91 90 92 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11261 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 92 91 93 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 112)
(code_label 93 92 94 12 5 "" [1 uses])
(note 94 93 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 94 97 12 (set (reg:DI 197 [ D.11262 ])
        (sign_extend:DI (reg:QI 118 [ D.11261 ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 97 96 98 12 (set (reg:HI 199)
        (mem:HI (plus:DI (mult:DI (reg:DI 197 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 185 [ D.11263 ])) [2 *_31+0 S2 A16])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:HI 198 [ D.11258 ])
                (and:HI (reg:HI 199)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 197 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 185 [ D.11263 ])) [2 *_31+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 99 98 100 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 198 [ D.11258 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 100 99 103 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 95)
(note 103 100 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 101 103 102 13 (set (pc)
        (label_ref 270)) -1
     (nil)
 -> 270)
(barrier 102 101 106)
(code_label 106 102 104 14 8 "" [2 uses])
(note 104 106 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 107 14 (parallel [
            (set (reg/v/f:DI 188 [ line ])
                (plus:DI (reg/v/f:DI 188 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 107 105 108 14 (set (reg:DI 200 [ D.11262 ])
        (sign_extend:DI (mem:QI (reg/v/f:DI 188 [ line ]) [0 MEM[base: line_36, offset: 0B]+0 S1 A8]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 108 107 109 14 (set (reg:HI 202)
        (mem:HI (plus:DI (mult:DI (reg:DI 200 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 186 [ D.11263 ])) [2 *_44+0 S2 A16])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 109 108 110 14 (parallel [
            (set (reg:HI 201 [ D.11258 ])
                (and:HI (reg:HI 202)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 200 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 186 [ D.11263 ])) [2 *_44+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 110 109 111 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 201 [ D.11258 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 111 110 112 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 106)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 106)
(code_label 112 111 113 15 4 "" [2 uses])
(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 15 (parallel [
            (set (reg:DI 203)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 115 114 116 15 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 116 115 117 15 (set (reg:DI 4 si)
        (reg:DI 203)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 117 116 118 15 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ line ])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(call_insn 118 117 119 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2b9aab0a5948 strtoul>) [0 strtoul S1 A8])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2b9aab0a5948 strtoul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 119 118 120 15 (set (reg/v:DI 147 [ val ])
        (reg:DI 0 ax)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 120 119 121 15 (set (reg:DI 205)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 121 120 122 15 (set (reg:DI 206)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 122 121 123 15 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 147 [ val ])
            (reg:DI 205))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 123 122 124 15 (set (reg:DI 204 [ val ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 147 [ val ])
            (reg:DI 206))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 124 123 125 15 (set (mem:SI (plus:DI (reg/v/f:DI 189 [ result ])
                (const_int 16 [0x10])) [3 result_24(D)->p_proto+0 S4 A64])
        (subreg:SI (reg:DI 204 [ val ]) 0)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 125 124 126 15 (set (reg/f:DI 131 [ D.11264 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 endp+0 S8 A64])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 126 125 127 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 188 [ line ])
            (reg/f:DI 131 [ D.11264 ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 127 126 128 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 164)
(note 128 127 129 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 129 128 130 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b9aab5ae000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b9aab5ae000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 130 129 131 16 (set (reg/f:DI 132 [ D.11265 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 131 130 132 16 (set (reg/f:DI 133 [ D.11263 ])
        (mem/f:DI (reg/f:DI 132 [ D.11265 ]) [1 *_50+0 S8 A64])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 132 131 133 16 (set (reg:QI 134 [ D.11261 ])
        (mem:QI (reg/f:DI 131 [ D.11264 ]) [0 *_49+0 S1 A8])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 133 132 134 16 (set (reg:DI 207 [ D.11262 ])
        (sign_extend:DI (reg:QI 134 [ D.11261 ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 134 133 135 16 (set (reg:HI 209)
        (mem:HI (plus:DI (mult:DI (reg:DI 207 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 133 [ D.11263 ])) [2 *_55+0 S2 A16])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 135 134 136 16 (parallel [
            (set (reg:HI 208 [ D.11258 ])
                (and:HI (reg:HI 209)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 207 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 133 [ D.11263 ])) [2 *_55+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 136 135 137 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 208 [ D.11258 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 137 136 138 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 153)
(note 138 137 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 144 17 (parallel [
            (set (reg:DI 182 [ ivtmp.29 ])
                (plus:DI (reg/f:DI 131 [ D.11264 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 144 139 140 18 11 "" [1 uses])
(note 140 144 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 18 (set (reg/f:DI 140 [ D.11264 ])
        (reg:DI 182 [ ivtmp.29 ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 142 141 143 18 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 endp+0 S8 A64])
        (reg/f:DI 140 [ D.11264 ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 143 142 145 18 (parallel [
            (set (reg:DI 182 [ ivtmp.29 ])
                (plus:DI (reg:DI 182 [ ivtmp.29 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 145 143 146 18 (set (reg:DI 210 [ D.11262 ])
        (sign_extend:DI (mem:QI (reg/f:DI 140 [ D.11264 ]) [0 MEM[base: _59, offset: 0B]+0 S1 A8]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 146 145 147 18 (set (reg:HI 212)
        (mem:HI (plus:DI (mult:DI (reg:DI 210 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 133 [ D.11263 ])) [2 *_64+0 S2 A16])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 147 146 148 18 (parallel [
            (set (reg:HI 211 [ D.11258 ])
                (and:HI (reg:HI 212)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 210 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 133 [ D.11263 ])) [2 *_64+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 148 147 149 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 211 [ D.11258 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 149 148 152 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 144)
(note 152 149 31 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 31 152 150 19 (set (reg/v/f:DI 168 [ line ])
        (reg/f:DI 140 [ D.11264 ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 150 31 151 19 (set (pc)
        (label_ref 157)) -1
     (nil)
 -> 157)
(barrier 151 150 153)
(code_label 153 151 154 20 10 "" [1 uses])
(note 154 153 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.11261 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 156 155 304 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 164)
(note 304 156 32 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 32 304 157 21 (set (reg/v/f:DI 168 [ line ])
        (reg/f:DI 131 [ D.11264 ])) -1
     (nil))
(code_label 157 32 158 22 12 "" [1 uses])
(note 158 157 159 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ buf_start ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 160 159 163 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) nss_hesiod/hesiod-proto.c:39 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 168)
(note 163 160 161 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 161 163 162 23 (set (pc)
        (label_ref 184)) -1
     (nil)
 -> 184)
(barrier 162 161 164)
(code_label 164 162 165 24 9 "" [2 uses])
(note 165 164 43 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 43 165 166 24 (set (reg:SI 110 [ D.11257 ])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 166 43 167 24 (set (pc)
        (label_ref 265)) nss_hesiod/hesiod-proto.c:39 -1
     (nil)
 -> 265)
(barrier 167 166 168)
(code_label 168 167 169 25 13 "" [1 uses])
(note 169 168 170 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 112 [ buf_end ])
            (reg/v/f:DI 168 [ line ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 171 170 172 25 (set (reg:QI 214 [ D.11259 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 172 171 173 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 214 [ D.11259 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 173 172 322 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 308)
            (pc))) nss_hesiod/hesiod-proto.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 308)
(note 322 173 174 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 174 322 175 26 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 113 [ buf_start ])
            (reg/v/f:DI 168 [ line ]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 175 174 176 26 (set (reg:QI 216 [ D.11259 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 176 175 177 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 216 [ D.11259 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 177 176 178 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 308)
            (pc))) nss_hesiod/hesiod-proto.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 308)
(note 178 177 179 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 27 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 180 179 181 27 (set (reg:DI 5 di)
        (reg/v/f:DI 168 [ line ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(call_insn/i 181 180 182 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2b9aab1bcbd0 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2b9aab1bcbd0 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 182 181 183 27 (set (reg/f:DI 146 [ D.11260 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 183 182 305 27 (parallel [
            (set (reg/v/f:DI 109 [ buf_start ])
                (plus:DI (reg/f:DI 146 [ D.11260 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 305 183 306 27 (set (pc)
        (label_ref 184)) nss_hesiod/hesiod-proto.c:39 -1
     (nil)
 -> 184)
(barrier 306 305 308)
(code_label 308 306 307 28 29 "" [2 uses])
(note 307 308 33 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 33 307 184 28 (set (reg/v/f:DI 109 [ buf_start ])
        (reg/v/f:DI 113 [ buf_start ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(code_label 184 33 185 29 14 "" [2 uses])
(note 185 184 186 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 29 (parallel [
            (set (reg/v/f:DI 148 [ eol ])
                (plus:DI (reg/v/f:DI 109 [ buf_start ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:245 -1
     (nil))
(insn 187 186 38 29 (parallel [
            (set (reg/v/f:DI 149 [ eol ])
                (and:DI (reg/v/f:DI 148 [ eol ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:246 -1
     (nil))
(insn 38 187 188 29 (set (reg/v/f:DI 150 [ eol ])
        (reg/v/f:DI 149 [ eol ])) ../nss/nss_files/files-parse.c:246 -1
     (nil))
(jump_insn 188 38 189 29 (set (pc)
        (label_ref 191)) ../nss/nss_files/files-parse.c:246 -1
     (nil)
 -> 191)
(barrier 189 188 312)
(code_label 312 189 311 30 31 "" [1 uses])
(note 311 312 37 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 37 311 313 30 (set (reg/v/f:DI 168 [ line ])
        (reg/v/f:DI 153 [ line ])) ../nss/nss_files/files-parse.c:270 -1
     (nil))
(jump_insn 313 37 314 30 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
(barrier 314 313 316)
(code_label 316 314 315 31 32 "" [1 uses])
(note 315 316 36 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 36 315 223 31 (set (reg/v/f:DI 150 [ eol ])
        (reg/v/f:DI 166 [ eol ])) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(code_label 223 36 190 32 21 "" [3 uses])
(note 190 223 191 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(code_label 191 190 192 33 16 "" [1 uses])
(note 192 191 193 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 33 (parallel [
            (set (reg:DI 217 [ D.11264 ])
                (plus:DI (reg/v/f:DI 150 [ eol ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:253 -1
     (nil))
(insn 194 193 195 33 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 112 [ buf_end ])
            (reg:DI 217 [ D.11264 ]))) ../nss/nss_files/files-parse.c:253 -1
     (nil))
(jump_insn 195 194 196 33 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) ../nss/nss_files/files-parse.c:253 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 200)
(note 196 195 197 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 46 34 (set (mem:SI (reg/v/f:DI 192 [ errnop ]) [3 *errnop_71(D)+0 S4 A32])
        (const_int 34 [0x22])) ../nss/nss_files/files-parse.c:256 -1
     (nil))
(insn 46 197 198 34 (set (reg:SI 110 [ D.11257 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 198 46 199 34 (set (pc)
        (label_ref 265)) ../nss/nss_files/files-parse.c:256 -1
     (nil)
 -> 265)
(barrier 199 198 200)
(code_label 200 199 201 35 17 "" [1 uses])
(note 201 200 202 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 35 (set (reg:QI 152 [ D.11261 ])
        (mem:QI (reg/v/f:DI 168 [ line ]) [0 *line_81+0 S1 A8])) ../nss/nss_files/files-parse.c:260 -1
     (nil))
(insn 203 202 204 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 152 [ D.11261 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:260 -1
     (nil))
(jump_insn 204 203 205 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) ../nss/nss_files/files-parse.c:260 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 258)
(note 205 204 206 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 36 (set (reg/f:DI 172 [ D.11263 ])
        (mem/f:DI (reg/f:DI 132 [ D.11265 ]) [1 *_50+0 S8 A64])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 207 206 208 36 (set (reg:DI 218 [ D.11262 ])
        (sign_extend:DI (reg:QI 152 [ D.11261 ]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 208 207 209 36 (set (reg:HI 220)
        (mem:HI (plus:DI (mult:DI (reg:DI 218 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 172 [ D.11263 ])) [2 *_154+0 S2 A16])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 209 208 210 36 (parallel [
            (set (reg:HI 219 [ D.11258 ])
                (and:HI (reg:HI 220)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:269 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 218 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 172 [ D.11263 ])) [2 *_154+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 210 209 211 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 219 [ D.11258 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(jump_insn 211 210 212 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 310)
            (pc))) ../nss/nss_files/files-parse.c:269 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 310)
(note 212 211 39 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 39 212 216 37 (set (reg/v/f:DI 153 [ line ])
        (reg/v/f:DI 168 [ line ])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(code_label 216 39 213 38 20 "" [1 uses])
(note 213 216 214 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 38 (parallel [
            (set (reg/v/f:DI 153 [ line ])
                (plus:DI (reg/v/f:DI 153 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:270 -1
     (nil))
(insn 215 214 217 38 (set (reg:QI 154 [ D.11261 ])
        (mem:QI (reg/v/f:DI 153 [ line ]) [0 MEM[base: line_84, offset: 0B]+0 S1 A8])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 217 215 218 38 (set (reg:DI 221 [ D.11262 ])
        (sign_extend:DI (reg:QI 154 [ D.11261 ]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 218 217 219 38 (set (reg:HI 223)
        (mem:HI (plus:DI (mult:DI (reg:DI 221 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 172 [ D.11263 ])) [2 *_89+0 S2 A16])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 219 218 220 38 (parallel [
            (set (reg:HI 222 [ D.11258 ])
                (and:HI (reg:HI 223)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:269 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 221 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 172 [ D.11263 ])) [2 *_89+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 220 219 221 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 222 [ D.11258 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(jump_insn 221 220 222 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) ../nss/nss_files/files-parse.c:269 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 216)
(note 222 221 224 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 224 222 225 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.11261 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(jump_insn 225 224 228 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) ../nss/nss_files/files-parse.c:275 612 {*jcc_1}
     (int_list:REG_BR_PROB 330 (nil))
 -> 312)
(note 228 225 226 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 226 228 227 40 (set (pc)
        (label_ref 292)) ../nss/nss_files/files-parse.c:275 -1
     (nil)
 -> 292)
(barrier 227 226 254)
(code_label 254 227 229 41 25 "" [1 uses])
(note 229 254 230 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 41 (set (reg:DI 224 [ D.11262 ])
        (sign_extend:DI (reg:QI 160 [ D.11261 ]))) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(insn 231 230 232 41 (set (reg:HI 226)
        (mem:HI (plus:DI (mult:DI (reg:DI 224 [ D.11262 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 172 [ D.11263 ])) [2 *_96+0 S2 A16])) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(insn 232 231 233 41 (parallel [
            (set (reg:HI 225 [ D.11258 ])
                (and:HI (reg:HI 226)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:276 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 224 [ D.11262 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 172 [ D.11263 ])) [2 *_96+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 233 232 234 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 225 [ D.11258 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(jump_insn 234 233 237 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) ../nss/nss_files/files-parse.c:276 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 276)
(note 237 234 42 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 42 237 235 42 (set (reg/v/f:DI 173 [ line ])
        (reg/v/f:DI 168 [ line ])) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(jump_insn 235 42 236 42 (set (pc)
        (label_ref 248)) ../nss/nss_files/files-parse.c:276 -1
     (nil)
 -> 248)
(barrier 236 235 278)
(code_label 278 236 238 43 26 "" [2 uses])
(note 238 278 239 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 43 (parallel [
            (set (reg/v/f:DI 166 [ eol ])
                (plus:DI (reg/v/f:DI 150 [ eol ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(insn 240 239 241 43 (set (mem/f:DI (reg/v/f:DI 150 [ eol ]) [1 MEM[(char * *)eol_79]+0 S8 A64])
        (reg/v/f:DI 153 [ line ])) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(insn 241 240 242 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 173 [ line ])
                    (const_int 1 [0x1])) [0 MEM[(char *)line_123 + 1B]+0 S1 A8])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:284 -1
     (nil))
(jump_insn 242 241 281 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 316)
            (pc))) ../nss/nss_files/files-parse.c:284 612 {*jcc_1}
     (int_list:REG_BR_PROB 2958 (nil))
 -> 316)
(code_label 281 242 243 44 27 "" [1 uses])
(note 243 281 244 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 44 (parallel [
            (set (reg/v/f:DI 167 [ line ])
                (plus:DI (reg/v/f:DI 168 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(insn 245 244 34 44 (set (mem:QI (reg/v/f:DI 168 [ line ]) [0 *line_102+0 S1 A8])
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(insn 34 245 35 44 (set (reg/v/f:DI 150 [ eol ])
        (reg/v/f:DI 166 [ eol ])) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(insn 35 34 246 44 (set (reg/v/f:DI 168 [ line ])
        (reg/v/f:DI 167 [ line ])) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(jump_insn 246 35 247 44 (set (pc)
        (label_ref 223)) ../nss/nss_files/files-parse.c:287 -1
     (nil)
 -> 223)
(barrier 247 246 248)
(code_label 248 247 249 45 23 "" [2 uses])
(note 249 248 250 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 45 (parallel [
            (set (reg/v/f:DI 168 [ line ])
                (plus:DI (reg/v/f:DI 173 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:293 -1
     (nil))
(insn 251 250 252 45 (set (reg:QI 160 [ D.11261 ])
        (mem:QI (reg/v/f:DI 168 [ line ]) [0 MEM[base: line_102, offset: 0B]+0 S1 A8])) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(insn 252 251 253 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 160 [ D.11261 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(jump_insn 253 252 257 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 285)
            (pc))) ../nss/nss_files/files-parse.c:275 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 285)
(note 257 253 255 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 255 257 256 46 (set (pc)
        (label_ref 254)) ../nss/nss_files/files-parse.c:275 -1
     (nil)
 -> 254)
(barrier 256 255 258)
(code_label 258 256 259 47 18 ("out") [1 uses])
(note 259 258 260 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 47 (set (mem/f:DI (reg/v/f:DI 150 [ eol ]) [1 MEM[(char * *)eol_79]+0 S8 A64])
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:297 -1
     (nil))
(insn 261 260 262 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 149 [ eol ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 262 261 263 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 320)
            (pc))) nss_hesiod/hesiod-proto.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 320)
(note 263 262 264 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 45 48 (set (mem/f:DI (plus:DI (reg/v/f:DI 189 [ result ])
                (const_int 8 [0x8])) [1 result_24(D)->p_aliases+0 S8 A64])
        (reg/v/f:DI 149 [ eol ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 45 264 317 48 (set (reg:SI 110 [ D.11257 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(jump_insn 317 45 318 48 (set (pc)
        (label_ref 265)) nss_hesiod/hesiod-proto.c:39 -1
     (nil)
 -> 265)
(barrier 318 317 320)
(code_label 320 318 319 49 33 "" [1 uses])
(note 319 320 44 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 44 319 265 49 (set (reg:SI 110 [ D.11257 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(code_label 265 44 266 50 15 "" [3 uses])
(note 266 265 267 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 50 (set (reg:SI 187 [ <retval> ])
        (reg:SI 110 [ D.11257 ])) -1
     (nil))
(jump_insn 268 267 269 50 (set (pc)
        (label_ref 296)) -1
     (nil)
 -> 296)
(barrier 269 268 270)
(code_label 270 269 271 51 7 "" [1 uses])
(note 271 270 272 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 51 (set (mem:QI (reg/v/f:DI 188 [ line ]) [0 *line_124+0 S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 273 272 274 51 (set (reg/f:DI 186 [ D.11263 ])
        (mem/f:DI (reg/f:DI 184 [ D.11265 ]) [1 *_182+0 S8 A64])) -1
     (nil))
(jump_insn 274 273 275 51 (set (pc)
        (label_ref 106)) -1
     (nil)
 -> 106)
(barrier 275 274 276)
(code_label 276 275 277 52 22 "" [1 uses])
(note 277 276 279 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 279 277 280 52 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 168 [ line ])
            (reg/v/f:DI 153 [ line ]))) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 280 279 284 52 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 278)
            (pc))) ../nss/nss_files/files-parse.c:279 -1
     (int_list:REG_BR_PROB 5666 (nil))
 -> 278)
(note 284 280 40 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 40 284 282 53 (set (reg/v/f:DI 166 [ eol ])
        (reg/v/f:DI 150 [ eol ])) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 282 40 283 53 (set (pc)
        (label_ref 281)) ../nss/nss_files/files-parse.c:279 -1
     (nil)
 -> 281)
(barrier 283 282 285)
(code_label 285 283 286 54 24 "" [1 uses])
(note 286 285 287 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 54 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 168 [ line ])
            (reg/v/f:DI 153 [ line ]))) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 288 287 291 54 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 278)
            (pc))) ../nss/nss_files/files-parse.c:279 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 278)
(note 291 288 289 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 289 291 290 55 (set (pc)
        (label_ref 223)) ../nss/nss_files/files-parse.c:279 -1
     (nil)
 -> 223)
(barrier 290 289 310)
(code_label 310 290 309 56 30 "" [1 uses])
(note 309 310 47 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 47 309 292 56 (set (reg/v/f:DI 153 [ line ])
        (reg/v/f:DI 168 [ line ])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(code_label 292 47 293 57 19 "" [1 uses])
(note 293 292 41 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 41 293 294 57 (set (reg/v/f:DI 173 [ line ])
        (reg/v/f:DI 153 [ line ])) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 294 41 295 57 (set (pc)
        (label_ref 248)) ../nss/nss_files/files-parse.c:279 -1
     (nil)
 -> 248)
(barrier 295 294 296)
(code_label 296 295 299 58 1 "" [1 uses])
(note 299 296 297 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 297 299 298 58 (set (reg/i:SI 0 ax)
        (reg:SI 187 [ <retval> ])) nss_hesiod/hesiod-proto.c:39 -1
     (nil))
(insn 298 297 0 58 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-proto.c:39 -1
     (nil))

;; Function lookup (lookup, funcdef_no=55, decl_uid=11049, cgraph_uid=55, symbol_order=58)

Partition 0: size 8 align 8
	context

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Edge 2->11 redirected to 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 11->12 to 15 failed.
Forwarding edge 15->16 to 19 failed.


try_optimize_cfg iteration 2

Forwarding edge 11->12 to 15 failed.
Forwarding edge 15->16 to 19 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 38 NOTE_INSN_DELETED)
(note 38 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 38 25 2 (set (reg/v/f:DI 141 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 142 [ type ])
        (reg:DI 4 si [ type ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 143 [ proto ])
        (reg:DI 1 dx [ proto ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 144 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(insn 28 27 29 2 (set (reg/v:DI 145 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(insn 29 28 30 2 (set (reg/v/f:DI 146 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_hesiod/hesiod-proto.c:60 -1
     (nil))
(note 30 29 40 2 NOTE_INSN_FUNCTION_BEG)
(insn 40 30 41 2 (set (reg:DI 147)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b9aab372480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-proto.c:67 -1
     (nil))
(insn 41 40 42 2 (set (reg/v:SI 112 [ olderr ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 147)) [3 errno+0 S4 A32])) nss_hesiod/hesiod-proto.c:67 -1
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:69 -1
     (nil))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (reg:DI 148)) nss_hesiod/hesiod-proto.c:69 -1
     (nil))
(call_insn 44 43 45 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2b9aab3a90d8 hesiod_init>) [0 hesiod_init S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:69 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2b9aab3a90d8 hesiod_init>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 2 (set (reg:SI 113 [ D.11278 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-proto.c:69 -1
     (nil))
(insn 46 45 47 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ D.11278 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:69 -1
     (nil))
(jump_insn 47 46 48 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) nss_hesiod/hesiod-proto.c:69 612 {*jcc_1}
     (int_list:REG_BR_PROB 364 (nil))
 -> 192)
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 4 (set (reg:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:72 -1
     (nil))
(insn 50 49 51 4 (set (reg:DI 1 dx)
        (reg/v/f:DI 142 [ type ])) nss_hesiod/hesiod-proto.c:72 -1
     (nil))
(insn 51 50 52 4 (set (reg:DI 4 si)
        (reg/v/f:DI 141 [ name ])) nss_hesiod/hesiod-proto.c:72 -1
     (nil))
(insn 52 51 53 4 (set (reg:DI 5 di)
        (reg:DI 149)) nss_hesiod/hesiod-proto.c:72 -1
     (nil))
(call_insn 53 52 54 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2b9aab3a9360 hesiod_resolve>) [0 hesiod_resolve S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:72 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2b9aab3a9360 hesiod_resolve>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 4 (set (reg/v/f:DI 115 [ item ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:72 -1
     (nil))
(insn 55 54 56 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 115 [ item ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:73 -1
     (nil))
(jump_insn 56 55 57 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) nss_hesiod/hesiod-proto.c:73 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 71)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 5 (set (reg:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b9aab372480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-proto.c:75 -1
     (nil))
(insn 59 58 60 5 (set (reg/v:SI 116 [ err ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 150)) [3 errno+0 S4 A32])) nss_hesiod/hesiod-proto.c:75 -1
     (nil))
(insn 60 59 61 5 (set (reg:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:76 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 5 di)
        (reg:DI 151)) nss_hesiod/hesiod-proto.c:76 -1
     (nil))
(call_insn 62 61 63 5 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:76 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 5 (set (reg:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b9aab372480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-proto.c:77 -1
     (nil))
(insn 64 63 65 5 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 152)) [3 errno+0 S4 A32])
        (reg/v:SI 112 [ olderr ])) nss_hesiod/hesiod-proto.c:77 -1
     (nil))
(insn 65 64 66 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ err ])
            (const_int 2 [0x2]))) nss_hesiod/hesiod-proto.c:78 -1
     (nil))
(insn 66 65 67 5 (set (reg:QI 154)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:78 -1
     (nil))
(insn 67 66 68 5 (set (reg:SI 153 [ D.11283 ])
        (zero_extend:SI (reg:QI 154))) nss_hesiod/hesiod-proto.c:78 -1
     (nil))
(insn 68 67 69 5 (parallel [
            (set (reg:SI 111 [ D.11277 ])
                (neg:SI (reg:SI 153 [ D.11283 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:78 -1
     (nil))
(jump_insn 69 68 70 5 (set (pc)
        (label_ref 134)) -1
     (nil)
 -> 134)
(barrier 70 69 71)
(code_label 71 70 72 6 73 "" [1 uses])
(note 72 71 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 6 (set (reg/f:DI 120 [ D.11281 ])
        (reg/v/f:DI 144 [ buffer ])) nss_hesiod/hesiod-proto.c:81 -1
     (nil))
(insn 74 73 75 6 (parallel [
            (set (reg:DI 155 [ D.11279 ])
                (plus:DI (reg/v/f:DI 144 [ buffer ])
                    (reg/v:DI 145 [ buflen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:81 -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg/v:DI 123 [ linebuflen ])
                (minus:DI (reg:DI 155 [ D.11279 ])
                    (reg/f:DI 120 [ D.11281 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:81 -1
     (nil))
(insn 76 75 31 6 (set (reg/f:DI 128 [ D.11279 ])
        (mem/f:DI (reg/v/f:DI 115 [ item ]) [1 *item_16+0 S8 A64])) -1
     (nil))
(insn 31 76 143 6 (set (reg/v/f:DI 109 [ item ])
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:81 -1
     (nil))
(code_label 143 31 77 7 78 "" [1 uses])
(note 77 143 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 7 (set (reg:DI 5 di)
        (reg/f:DI 128 [ D.11279 ])) nss_hesiod/hesiod-proto.c:87 -1
     (nil))
(call_insn/i 79 78 80 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b9aaafc6948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b9aaafc6948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 7 (set (reg:DI 157)
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:87 -1
     (nil))
(insn 81 80 82 7 (set (reg:DI 158)
        (reg:DI 157)) nss_hesiod/hesiod-proto.c:87 -1
     (nil))
(insn 82 81 83 7 (set (reg:DI 124 [ D.11282 ])
        (reg:DI 158)) nss_hesiod/hesiod-proto.c:87 -1
     (nil))
(insn 83 82 84 7 (parallel [
            (set (reg/v:DI 125 [ len ])
                (plus:DI (reg:DI 124 [ D.11282 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:87 -1
     (nil))
(insn 84 83 85 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 123 [ linebuflen ])
            (reg/v:DI 125 [ len ]))) nss_hesiod/hesiod-proto.c:89 -1
     (nil))
(jump_insn 85 84 86 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) nss_hesiod/hesiod-proto.c:89 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 97)
(note 86 85 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 8 (set (reg:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:91 -1
     (nil))
(insn 88 87 89 8 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:91 -1
     (nil))
(insn 89 88 90 8 (set (reg:DI 5 di)
        (reg:DI 159)) nss_hesiod/hesiod-proto.c:91 -1
     (nil))
(call_insn 90 89 91 8 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:91 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 91 90 92 8 (set (reg:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:92 -1
     (nil))
(insn 92 91 93 8 (set (reg:DI 5 di)
        (reg:DI 160)) nss_hesiod/hesiod-proto.c:92 -1
     (nil))
(call_insn 93 92 94 8 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:92 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 94 93 34 8 (set (mem:SI (reg/v/f:DI 146 [ errnop ]) [3 *errnop_33(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_hesiod/hesiod-proto.c:93 -1
     (nil))
(insn 34 94 95 8 (set (reg:SI 111 [ D.11277 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-proto.c:94 -1
     (nil))
(jump_insn 95 34 96 8 (set (pc)
        (label_ref 134)) nss_hesiod/hesiod-proto.c:94 -1
     (nil)
 -> 134)
(barrier 96 95 97)
(code_label 97 96 98 9 74 "" [1 uses])
(note 98 97 99 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 9 (set (reg:DI 161)
        (reg/f:DI 120 [ D.11281 ])) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 100 99 101 9 (set (reg:DI 162)
        (reg/f:DI 128 [ D.11279 ])) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 163)
        (reg/v:DI 125 [ len ])) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 102 101 103 9 (set (reg:DI 1 dx)
        (reg:DI 163)) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 103 102 104 9 (set (reg:DI 4 si)
        (reg:DI 162)) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 104 103 105 9 (set (reg:DI 5 di)
        (reg:DI 161)) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(call_insn 105 104 106 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b9aab605510 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:97 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b9aab605510 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 106 105 107 9 (set (reg:DI 164)
        (reg:DI 0 ax)) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 107 106 108 9 (set (reg:DI 165)
        (reg:DI 164)) nss_hesiod/hesiod-proto.c:97 -1
     (nil))
(insn 108 107 109 9 (set (reg:DI 37 r8)
        (reg/v/f:DI 146 [ errnop ])) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(insn 109 108 110 9 (set (reg:DI 2 cx)
        (reg/v:DI 145 [ buflen ])) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(insn 110 109 111 9 (set (reg:DI 1 dx)
        (reg/v/f:DI 144 [ buffer ])) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(insn 111 110 112 9 (set (reg:DI 4 si)
        (reg/v/f:DI 143 [ proto ])) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(insn 112 111 113 9 (set (reg:DI 5 di)
        (reg/v/f:DI 144 [ buffer ])) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(call_insn 113 112 114 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_protoent") [flags 0x1]  <function_decl 0x2b9aab56bbd0 _nss_files_parse_protoent>) [0 _nss_files_parse_protoent S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:99 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_protoent") [flags 0x1]  <function_decl 0x2b9aab56bbd0 _nss_files_parse_protoent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 114 113 115 9 (set (reg/v:SI 126 [ parse_res ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-proto.c:99 -1
     (nil))
(insn 115 114 116 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 126 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_hesiod/hesiod-proto.c:100 -1
     (nil))
(jump_insn 116 115 117 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) nss_hesiod/hesiod-proto.c:100 -1
     (int_list:REG_BR_PROB 9985 (nil))
 -> 127)
(note 117 116 118 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 10 (set (reg:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:102 -1
     (nil))
(insn 119 118 120 10 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:102 -1
     (nil))
(insn 120 119 121 10 (set (reg:DI 5 di)
        (reg:DI 166)) nss_hesiod/hesiod-proto.c:102 -1
     (nil))
(call_insn 121 120 122 10 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:102 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 122 121 123 10 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:103 -1
     (nil))
(insn 123 122 124 10 (set (reg:DI 5 di)
        (reg:DI 167)) nss_hesiod/hesiod-proto.c:103 -1
     (nil))
(call_insn 124 123 35 10 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 124 125 10 (set (reg:SI 111 [ D.11277 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-proto.c:104 -1
     (nil))
(jump_insn 125 35 126 10 (set (pc)
        (label_ref 134)) nss_hesiod/hesiod-proto.c:104 -1
     (nil)
 -> 134)
(barrier 126 125 127)
(code_label 127 126 128 11 75 "" [1 uses])
(note 128 127 129 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 126 [ parse_res ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:107 -1
     (nil))
(jump_insn 130 129 133 11 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 149)
            (pc))) nss_hesiod/hesiod-proto.c:107 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 149)
(note 133 130 131 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 131 133 132 12 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 132 131 192)
(code_label 192 132 191 13 81 "" [1 uses])
(note 191 192 32 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 32 191 134 13 (set (reg:SI 111 [ D.11277 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-proto.c:70 -1
     (nil))
(code_label 134 32 135 14 72 "" [6 uses])
(note 135 134 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 14 (set (reg:SI 140 [ <retval> ])
        (reg:SI 111 [ D.11277 ])) -1
     (nil))
(jump_insn 137 136 138 14 (set (pc)
        (label_ref 187)) -1
     (nil)
 -> 187)
(barrier 138 137 139)
(code_label 139 138 140 15 77 "" [1 uses])
(note 140 139 141 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 15 (parallel [
            (set (reg/v/f:DI 109 [ item ])
                (plus:DI (reg/v/f:DI 109 [ item ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:110 -1
     (nil))
(insn 142 141 144 15 (set (reg/f:DI 128 [ D.11279 ])
        (mem/f:DI (reg/v/f:DI 109 [ item ]) [1 MEM[base: item_55, offset: 0B]+0 S8 A64])) nss_hesiod/hesiod-proto.c:112 -1
     (nil))
(insn 144 142 145 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 128 [ D.11279 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:112 -1
     (nil))
(jump_insn 145 144 148 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) nss_hesiod/hesiod-proto.c:112 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 143)
(note 148 145 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 146 148 147 16 (set (pc)
        (label_ref 163)) nss_hesiod/hesiod-proto.c:112 -1
     (nil)
 -> 163)
(barrier 147 146 149)
(code_label 149 147 150 17 76 "" [1 uses])
(note 150 149 151 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 109 [ item ])
                    (const_int 8 [0x8])) [1 MEM[(char * *)item_1 + 8B]+0 S8 A64])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:112 -1
     (nil))
(jump_insn 152 151 153 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) nss_hesiod/hesiod-proto.c:112 -1
     (int_list:REG_BR_PROB 9699 (nil))
 -> 176)
(note 153 152 154 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 18 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 155 154 156 18 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 156 155 157 18 (set (reg:DI 5 di)
        (reg:DI 169)) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(call_insn 157 156 158 18 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 158 157 159 18 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(insn 159 158 160 18 (set (reg:DI 5 di)
        (reg:DI 170)) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(call_insn 160 159 33 18 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 160 161 18 (set (reg:SI 111 [ D.11277 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-proto.c:123 -1
     (nil))
(jump_insn 161 33 162 18 (set (pc)
        (label_ref 134)) nss_hesiod/hesiod-proto.c:115 -1
     (nil)
 -> 134)
(barrier 162 161 163)
(code_label 163 162 164 19 79 "" [1 uses])
(note 164 163 165 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 19 (set (reg:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 166 165 167 19 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 167 166 168 19 (set (reg:DI 5 di)
        (reg:DI 171)) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(call_insn 168 167 169 19 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 169 168 170 19 (set (reg:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(insn 170 169 171 19 (set (reg:DI 5 di)
        (reg:DI 172)) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(call_insn 171 170 172 19 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 172 171 173 19 (set (reg:DI 173)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b9aab372480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-proto.c:119 -1
     (nil))
(insn 173 172 36 19 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 173)) [3 errno+0 S4 A32])
        (reg/v:SI 112 [ olderr ])) nss_hesiod/hesiod-proto.c:119 -1
     (nil))
(insn 36 173 174 19 (set (reg:SI 111 [ D.11277 ])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:120 -1
     (nil))
(jump_insn 174 36 175 19 (set (pc)
        (label_ref 134)) nss_hesiod/hesiod-proto.c:120 -1
     (nil)
 -> 134)
(barrier 175 174 176)
(code_label 176 175 177 20 80 "" [1 uses])
(note 177 176 178 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 20 (set (reg:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 179 178 180 20 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(insn 180 179 181 20 (set (reg:DI 5 di)
        (reg:DI 174)) nss_hesiod/hesiod-proto.c:114 -1
     (nil))
(call_insn 181 180 182 20 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:114 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2b9aab3a9438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 182 181 183 20 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(insn 183 182 184 20 (set (reg:DI 5 di)
        (reg:DI 175)) nss_hesiod/hesiod-proto.c:115 -1
     (nil))
(call_insn 184 183 37 20 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2b9aab3a91b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 184 185 20 (set (reg:SI 111 [ D.11277 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-proto.c:123 -1
     (nil))
(jump_insn 185 37 186 20 (set (pc)
        (label_ref 134)) nss_hesiod/hesiod-proto.c:115 -1
     (nil)
 -> 134)
(barrier 186 185 187)
(code_label 187 186 190 21 71 "" [1 uses])
(note 190 187 188 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 188 190 189 21 (set (reg/i:SI 0 ax)
        (reg:SI 140 [ <retval> ])) nss_hesiod/hesiod-proto.c:124 -1
     (nil))
(insn 189 188 0 21 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-proto.c:124 -1
     (nil))

;; Function _nss_hesiod_setprotoent (_nss_hesiod_setprotoent, funcdef_no=53, decl_uid=10535, cgraph_uid=53, symbol_order=56)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 88 [ stayopen ])
        (reg:SI 5 di [ stayopen ])) nss_hesiod/hesiod-proto.c:47 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-proto.c:48 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-proto.c:49 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-proto.c:49 -1
     (nil))

;; Function _nss_hesiod_endprotoent (_nss_hesiod_endprotoent, funcdef_no=54, decl_uid=10537, cgraph_uid=54, symbol_order=57)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 6.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-proto.c:54 -1
     (nil))
(insn 9 5 10 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-proto.c:55 -1
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-proto.c:55 -1
     (nil))

;; Function _nss_hesiod_getprotobyname_r (_nss_hesiod_getprotobyname_r, funcdef_no=56, decl_uid=10548, cgraph_uid=56, symbol_order=59)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 89 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-proto.c:129 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ proto ])
        (reg:DI 4 si [ proto ])) nss_hesiod/hesiod-proto.c:129 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_hesiod/hesiod-proto.c:129 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 92 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_hesiod/hesiod-proto.c:129 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-proto.c:129 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 38 r9)
        (reg/v/f:DI 93 [ errnop ])) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 37 r8)
        (reg/v:DI 92 [ buflen ])) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ buffer ])) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 90 [ proto ])) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b9aab6925a0 *.LC5>)) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ name ])) nss_hesiod/hesiod-proto.c:130 -1
     (nil))
(call_insn/j 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b9aab5bcaf8 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:130 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b9aab5bcaf8 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(barrier 17 16 0)

;; Function _nss_hesiod_getprotobynumber_r (_nss_hesiod_getprotobynumber_r, funcdef_no=57, decl_uid=10554, cgraph_uid=57, symbol_order=60)

Partition 0: size 21 align 16
	protostr

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 27.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v:SI 89 [ protocol ])
        (reg:SI 5 di [ protocol ])) nss_hesiod/hesiod-proto.c:136 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ proto ])
        (reg:DI 4 si [ proto ])) nss_hesiod/hesiod-proto.c:136 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_hesiod/hesiod-proto.c:136 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 92 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_hesiod/hesiod-proto.c:136 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-proto.c:136 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 cx)
        (reg/v:SI 89 [ protocol ])) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b9aab692990 *.LC7>)) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (const_int 21 [0x15])) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 94)) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(insn 15 14 16 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) nss_hesiod/hesiod-proto.c:139 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b9aaafcf948 snprintf>) [0 __builtin_snprintf S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:139 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b9aaafcf948 snprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 38 r9)
        (reg/v/f:DI 93 [ errnop ])) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 37 r8)
        (reg/v:DI 92 [ buflen ])) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ buffer ])) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 90 [ proto ])) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2b9aab692a20 *.LC8>)) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (reg:DI 95)) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(call_insn 24 23 25 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b9aab5bcaf8 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-proto.c:141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2b9aab5bcaf8 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 25 24 26 2 (set (reg:SI 87 [ D.11298 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 26 25 30 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.11298 ])) nss_hesiod/hesiod-proto.c:141 -1
     (nil))
(insn 30 26 31 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) nss_hesiod/hesiod-proto.c:142 -1
     (nil))
(insn 31 30 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-proto.c:142 -1
     (nil))
