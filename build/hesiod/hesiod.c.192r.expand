
;; Function parse_config_file (parse_config_file, funcdef_no=53, decl_uid=10879, cgraph_uid=53, symbol_order=56)

Partition 0: size 1032 align 16
	buf

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53
Edge 2->49 redirected to 59
Edge 6->10 redirected to 60
Edge 10->12 redirected to 62
Edge 11->16 redirected to 64
Edge 22->27 redirected to 66
Purged non-fallthru edges from bb 68


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 6->7 to 58 failed.
Edge 8->10 redirected to 11
Forwarding edge 9->10 to 11 failed.
Deleted label in block 10.
Forwarding edge 23->24 to 26 failed.
Edge 26->68 redirected to 33
Edge 29->68 redirected to 33
Edge 31->68 redirected to 33
Forwarding edge 36->37 to 39 failed.
Forwarding edge 51->52 to 56 failed.
Edge 56->7 redirected to 58
Forwarding edge 64->65 to 58 failed.
Redirecting jump 344 from 7 to 58.
Edge 66->7 redirected to 58
deleting block 68


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 58 failed.
Deleted label in block 7.
Forwarding edge 9->10 to 11 failed.
Forwarding edge 23->24 to 26 failed.
Forwarding edge 36->37 to 39 failed.
Forwarding edge 51->52 to 56 failed.
Forwarding edge 64->65 to 58 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 42 NOTE_INSN_DELETED)
(note 42 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 42 25 2 (set (reg/v/f:DI 188 [ ctx ])
        (reg:DI 5 di [ ctx ])) hesiod.c:240 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 189 [ filename ])
        (reg:DI 4 si [ filename ])) hesiod.c:240 -1
     (nil))
(note 26 25 44 2 NOTE_INSN_FUNCTION_BEG)
(insn 44 26 45 2 (set (reg:DI 190)
        (mem/f:DI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_17(D)->RHS+0 S8 A64])) hesiod.c:248 -1
     (nil))
(insn 45 44 46 2 (set (reg:DI 5 di)
        (reg:DI 190)) hesiod.c:248 -1
     (nil))
(call_insn 46 45 47 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:248 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 188 [ ctx ]) [2 ctx_17(D)->LHS+0 S8 A64])) hesiod.c:249 -1
     (nil))
(call_insn 48 47 49 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:249 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 2 (set (mem/f:DI (reg/v/f:DI 188 [ ctx ]) [2 ctx_17(D)->LHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:250 -1
     (nil))
(insn 50 49 51 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_17(D)->RHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:250 -1
     (nil))
(insn 51 50 52 2 (set (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 16 [0x10])) [3 ctx_17(D)->classes+0 S4 A64])
        (const_int 1 [0x1])) hesiod.c:252 -1
     (nil))
(insn 52 51 53 2 (set (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 20 [0x14])) [3 ctx_17(D)->classes+4 S4 A32])
        (const_int 4 [0x4])) hesiod.c:253 -1
     (nil))
(insn 53 52 54 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b75d7495d80 *.LC0>)) hesiod.c:258 -1
     (nil))
(insn 54 53 55 2 (set (reg:DI 5 di)
        (reg/v/f:DI 189 [ filename ])) hesiod.c:258 -1
     (nil))
(call_insn 55 54 56 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b75d72d20d8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) hesiod.c:258 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2b75d72d20d8 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 56 55 57 2 (set (reg/v/f:DI 116 [ fp ])
        (reg:DI 0 ax)) hesiod.c:258 -1
     (nil))
(insn 57 56 58 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 116 [ fp ])
            (const_int 0 [0]))) hesiod.c:258 -1
     (nil))
(jump_insn 58 57 61 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 371)
            (pc))) hesiod.c:258 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 371)
(note 61 58 59 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 61 60 4 (set (pc)
        (label_ref 303)) -1
     (nil)
 -> 303)
(barrier 60 59 311)
(code_label 311 60 62 5 31 "" [1 uses])
(note 62 311 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 5 (set (reg:QI 118 [ D.11339 ])
        (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1040 [0xfffffffffffffbf0])) [0 MEM[(char *)&buf]+0 S1 A128])) hesiod.c:265 -1
     (nil))
(insn 64 63 65 5 (set (reg:QI 119 [ D.11340 ])
        (reg:QI 118 [ D.11339 ])) hesiod.c:265 -1
     (nil))
(insn 65 64 66 5 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 119 [ D.11340 ])
            (const_int 35 [0x23]))) hesiod.c:265 -1
     (nil))
(jump_insn 66 65 67 5 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) hesiod.c:265 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 79)
(note 67 66 68 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 6 (set (reg:SI 191 [ D.11337 ])
        (zero_extend:SI (reg:QI 119 [ D.11340 ]))) hesiod.c:265 -1
     (nil))
(insn 69 68 70 6 (set (reg:DI 193)
        (const_int 34359747584 [0x800002400])) hesiod.c:265 -1
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg:DI 192 [ D.11336 ])
                (lshiftrt:DI (reg:DI 193)
                    (subreg:QI (reg:SI 191 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:265 -1
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg:DI 194 [ D.11336 ])
                (and:DI (reg:DI 192 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:265 -1
     (nil))
(insn 72 71 73 6 (parallel [
            (set (reg:DI 195 [ D.11336 ])
                (xor:DI (reg:DI 194 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:265 -1
     (nil))
(insn 73 72 74 6 (parallel [
            (set (reg:QI 196 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 195 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:265 -1
     (nil))
(insn 74 73 75 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 196 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:265 -1
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) hesiod.c:265 -1
     (int_list:REG_BR_PROB 4400 (nil))
 -> 79)
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 77 76 78 7 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 78 77 79)
(code_label 79 78 80 8 4 "" [2 uses])
(note 80 79 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11339 ])
            (const_int 32 [0x20]))) hesiod.c:267 -1
     (nil))
(insn 82 81 83 8 (set (reg:QI 198 [ D.11341 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(insn 83 82 84 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 198 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(jump_insn 84 83 391 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 394)
            (pc))) hesiod.c:267 612 {*jcc_1}
     (int_list:REG_BR_PROB 4550 (nil))
 -> 394)
(note 391 84 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 85 391 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11339 ])
            (const_int 9 [0x9]))) hesiod.c:267 -1
     (nil))
(insn 86 85 87 9 (set (reg:QI 200 [ D.11341 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(jump_insn 88 87 392 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 375)
            (pc))) hesiod.c:267 612 {*jcc_1}
     (int_list:REG_BR_PROB 1651 (nil))
 -> 375)
(note 392 88 394 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(code_label 394 392 90 11 40 "" [1 uses])
(note 90 394 27 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 27 90 94 11 (parallel [
            (set (reg/v/f:DI 124 [ cp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:267 -1
     (nil))
(code_label 94 27 91 12 8 "" [2 uses])
(note 91 94 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 12 (parallel [
            (set (reg/v/f:DI 124 [ cp ])
                (plus:DI (reg/v/f:DI 124 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:268 -1
     (nil))
(insn 93 92 95 12 (set (reg:QI 120 [ D.11339 ])
        (mem:QI (reg/v/f:DI 124 [ cp ]) [0 MEM[base: cp_41, offset: 0B]+0 S1 A8])) hesiod.c:267 -1
     (nil))
(insn 95 93 96 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ D.11339 ])
            (const_int 32 [0x20]))) hesiod.c:267 -1
     (nil))
(insn 96 95 97 12 (set (reg:QI 202 [ D.11341 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(insn 97 96 98 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 202 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(jump_insn 98 97 393 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) hesiod.c:267 -1
     (int_list:REG_BR_PROB 4550 (nil))
 -> 94)
(note 393 98 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 99 393 100 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ D.11339 ])
            (const_int 9 [0x9]))) hesiod.c:267 -1
     (nil))
(insn 100 99 101 13 (set (reg:QI 204 [ D.11341 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(insn 101 100 102 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 204 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:267 -1
     (nil))
(jump_insn 102 101 103 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) hesiod.c:267 -1
     (int_list:REG_BR_PROB 8349 (nil))
 -> 94)
(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 372 14 (set (reg:QI 119 [ D.11340 ])
        (reg:QI 120 [ D.11339 ])) -1
     (nil))
(jump_insn 372 104 373 14 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 373 372 375)
(code_label 375 373 374 15 36 "" [1 uses])
(note 374 375 28 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 28 374 105 15 (parallel [
            (set (reg/v/f:DI 124 [ cp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:267 -1
     (nil))
(code_label 105 28 106 16 6 "" [1 uses])
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 119 [ D.11340 ])
            (const_int 61 [0x3d]))) hesiod.c:270 -1
     (nil))
(jump_insn 108 107 109 16 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 380)
            (pc))) hesiod.c:270 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 380)
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 17 (set (reg:SI 205 [ D.11337 ])
        (zero_extend:SI (reg:QI 119 [ D.11340 ]))) hesiod.c:270 -1
     (nil))
(insn 111 110 112 17 (set (reg:DI 207)
        (const_int 2305843013508661760 [0x2000000100000200])) hesiod.c:270 -1
     (nil))
(insn 112 111 113 17 (parallel [
            (set (reg:DI 206 [ D.11336 ])
                (lshiftrt:DI (reg:DI 207)
                    (subreg:QI (reg:SI 205 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 113 112 114 17 (parallel [
            (set (reg:DI 208 [ D.11336 ])
                (and:DI (reg:DI 206 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 114 113 115 17 (parallel [
            (set (reg:DI 209 [ D.11336 ])
                (xor:DI (reg:DI 208 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 115 114 116 17 (parallel [
            (set (reg:QI 210 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 209 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 116 115 117 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 210 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:270 -1
     (nil))
(jump_insn 117 116 376 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 385)
            (pc))) hesiod.c:270 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 385)
(note 376 117 29 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 29 376 377 18 (set (reg/v/f:DI 127 [ cp ])
        (reg/v/f:DI 124 [ cp ])) hesiod.c:270 -1
     (nil))
(jump_insn 377 29 378 18 (set (pc)
        (label_ref 118)) -1
     (nil)
 -> 118)
(barrier 378 377 380)
(code_label 380 378 379 19 37 "" [1 uses])
(note 379 380 30 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 30 379 118 19 (set (reg/v/f:DI 127 [ cp ])
        (reg/v/f:DI 124 [ cp ])) hesiod.c:270 -1
     (nil))
(code_label 118 30 119 20 9 "" [1 uses])
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 120 119 121 20 (set (pc)
        (label_ref 123)) hesiod.c:270 -1
     (nil)
 -> 123)
(barrier 121 120 127)
(code_label 127 121 122 21 12 "" [2 uses])
(note 122 127 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(code_label 123 122 124 22 11 "" [1 uses])
(note 124 123 125 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 22 (parallel [
            (set (reg/v/f:DI 127 [ cp ])
                (plus:DI (reg/v/f:DI 127 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:271 -1
     (nil))
(insn 126 125 128 22 (set (reg:QI 152 [ D.11340 ])
        (mem:QI (reg/v/f:DI 127 [ cp ]) [0 MEM[base: cp_47, offset: 0B]+0 S1 A8])) hesiod.c:270 -1
     (nil))
(insn 128 126 129 22 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 152 [ D.11340 ])
            (const_int 61 [0x3d]))) hesiod.c:270 -1
     (nil))
(jump_insn 129 128 130 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) hesiod.c:270 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 127)
(note 130 129 131 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 23 (set (reg:SI 211 [ D.11337 ])
        (zero_extend:SI (reg:QI 152 [ D.11340 ]))) hesiod.c:270 -1
     (nil))
(insn 132 131 133 23 (set (reg:DI 213)
        (const_int 2305843013508661760 [0x2000000100000200])) hesiod.c:270 -1
     (nil))
(insn 133 132 134 23 (parallel [
            (set (reg:DI 212 [ D.11336 ])
                (lshiftrt:DI (reg:DI 213)
                    (subreg:QI (reg:SI 211 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 134 133 135 23 (parallel [
            (set (reg:DI 214 [ D.11336 ])
                (and:DI (reg:DI 212 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 135 134 136 23 (parallel [
            (set (reg:DI 215 [ D.11336 ])
                (xor:DI (reg:DI 214 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 136 135 137 23 (parallel [
            (set (reg:QI 216 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 215 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:270 -1
     (nil))
(insn 137 136 138 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 216 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:270 -1
     (nil))
(jump_insn 138 137 381 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) hesiod.c:270 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 127)
(note 381 138 382 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 382 381 383 24 (set (pc)
        (label_ref 139)) -1
     (nil)
 -> 139)
(barrier 383 382 385)
(code_label 385 383 384 25 38 "" [1 uses])
(note 384 385 31 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 31 384 139 25 (set (reg/v/f:DI 127 [ cp ])
        (reg/v/f:DI 124 [ cp ])) hesiod.c:270 -1
     (nil))
(code_label 139 31 140 26 10 "" [1 uses])
(note 140 139 141 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 26 (parallel [
            (set (reg/v/f:DI 130 [ data ])
                (plus:DI (reg/v/f:DI 127 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:272 -1
     (nil))
(insn 142 141 143 26 (set (mem:QI (reg/v/f:DI 127 [ cp ]) [0 *cp_136+0 S1 A8])
        (const_int 0 [0])) hesiod.c:272 -1
     (nil))
(insn 143 142 144 26 (set (reg:QI 129 [ D.11340 ])
        (mem:QI (plus:DI (reg/v/f:DI 127 [ cp ])
                (const_int 1 [0x1])) [0 MEM[(char *)cp_136 + 1B]+0 S1 A8])) hesiod.c:274 -1
     (nil))
(insn 144 143 145 26 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 129 [ D.11340 ])
            (const_int 61 [0x3d]))) hesiod.c:274 -1
     (nil))
(jump_insn 145 144 146 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) hesiod.c:274 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 361)
(note 146 145 147 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 27 (set (reg:SI 217 [ D.11337 ])
        (zero_extend:SI (reg:QI 129 [ D.11340 ]))) hesiod.c:274 -1
     (nil))
(insn 148 147 149 27 (set (reg:DI 219)
        (const_int 2305843013508661760 [0x2000000100000200])) hesiod.c:274 -1
     (nil))
(insn 149 148 150 27 (parallel [
            (set (reg:DI 218 [ D.11336 ])
                (lshiftrt:DI (reg:DI 219)
                    (subreg:QI (reg:SI 217 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 150 149 151 27 (parallel [
            (set (reg:DI 220 [ D.11336 ])
                (and:DI (reg:DI 218 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 151 150 152 27 (parallel [
            (set (reg:DI 221 [ D.11336 ])
                (xor:DI (reg:DI 220 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 152 151 153 27 (parallel [
            (set (reg:QI 222 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 221 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 153 152 154 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:274 -1
     (nil))
(jump_insn 154 153 155 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) hesiod.c:274 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 171)
(note 155 154 162 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(code_label 162 155 156 29 15 "" [1 uses])
(note 156 162 157 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 29 (parallel [
            (set (reg/v/f:DI 130 [ data ])
                (plus:DI (reg/v/f:DI 130 [ data ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:275 -1
     (nil))
(insn 158 157 159 29 (set (reg:QI 129 [ D.11340 ])
        (mem:QI (reg/v/f:DI 130 [ data ]) [0 MEM[base: data_55, offset: 0B]+0 S1 A8])) hesiod.c:274 -1
     (nil))
(insn 159 158 160 29 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 129 [ D.11340 ])
            (const_int 61 [0x3d]))) hesiod.c:274 -1
     (nil))
(jump_insn 160 159 161 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) hesiod.c:274 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 361)
(note 161 160 163 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 163 161 164 30 (set (reg:SI 223 [ D.11337 ])
        (zero_extend:SI (reg:QI 129 [ D.11340 ]))) hesiod.c:274 -1
     (nil))
(insn 164 163 165 30 (set (reg:DI 225)
        (const_int 2305843013508661760 [0x2000000100000200])) hesiod.c:274 -1
     (nil))
(insn 165 164 166 30 (parallel [
            (set (reg:DI 224 [ D.11336 ])
                (lshiftrt:DI (reg:DI 225)
                    (subreg:QI (reg:SI 223 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 166 165 167 30 (parallel [
            (set (reg:DI 226 [ D.11336 ])
                (and:DI (reg:DI 224 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 167 166 168 30 (parallel [
            (set (reg:DI 227 [ D.11336 ])
                (xor:DI (reg:DI 226 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 168 167 169 30 (parallel [
            (set (reg:QI 228 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 227 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:274 -1
     (nil))
(insn 169 168 170 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 228 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:274 -1
     (nil))
(jump_insn 170 169 171 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) hesiod.c:274 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 162)
(code_label 171 170 172 31 14 "" [1 uses])
(note 172 171 173 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 31 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 129 [ D.11340 ])
            (const_int 32 [0x20]))) hesiod.c:277 -1
     (nil))
(jump_insn 174 173 175 31 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 361)
            (pc))) hesiod.c:277 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 361)
(note 175 174 176 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 32 (set (reg:SI 229 [ D.11337 ])
        (zero_extend:SI (reg:QI 129 [ D.11340 ]))) hesiod.c:277 -1
     (nil))
(insn 177 176 178 32 (set (reg:DI 231)
        (const_int 4294976512 [0x100002400])) hesiod.c:277 -1
     (nil))
(insn 178 177 179 32 (parallel [
            (set (reg:DI 230 [ D.11336 ])
                (lshiftrt:DI (reg:DI 231)
                    (subreg:QI (reg:SI 229 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 179 178 180 32 (parallel [
            (set (reg:DI 232 [ D.11336 ])
                (and:DI (reg:DI 230 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 180 179 181 32 (parallel [
            (set (reg:DI 233 [ D.11336 ])
                (xor:DI (reg:DI 232 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 181 180 182 32 (parallel [
            (set (reg:QI 234 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 233 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 182 181 183 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 234 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:277 -1
     (nil))
(jump_insn 183 182 361 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 390)
            (pc))) hesiod.c:277 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 390)
(code_label 361 183 184 33 34 "" [3 uses])
(note 184 361 32 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 32 184 185 33 (set (reg/v/f:DI 132 [ data ])
        (reg/v/f:DI 130 [ data ])) hesiod.c:270 -1
     (nil))
(jump_insn 185 32 186 33 (set (pc)
        (label_ref 188)) hesiod.c:277 -1
     (nil)
 -> 188)
(barrier 186 185 192)
(code_label 192 186 187 34 18 "" [2 uses])
(note 187 192 188 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(code_label 188 187 189 35 17 "" [1 uses])
(note 189 188 190 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 35 (parallel [
            (set (reg/v/f:DI 132 [ data ])
                (plus:DI (reg/v/f:DI 132 [ data ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:278 -1
     (nil))
(insn 191 190 193 35 (set (reg:QI 154 [ D.11340 ])
        (mem:QI (reg/v/f:DI 132 [ data ]) [0 MEM[base: data_63, offset: 0B]+0 S1 A8])) hesiod.c:277 -1
     (nil))
(insn 193 191 194 35 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 154 [ D.11340 ])
            (const_int 32 [0x20]))) hesiod.c:277 -1
     (nil))
(jump_insn 194 193 195 35 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) hesiod.c:277 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 192)
(note 195 194 196 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 36 (set (reg:SI 235 [ D.11337 ])
        (zero_extend:SI (reg:QI 154 [ D.11340 ]))) hesiod.c:277 -1
     (nil))
(insn 197 196 198 36 (set (reg:DI 237)
        (const_int 4294976512 [0x100002400])) hesiod.c:277 -1
     (nil))
(insn 198 197 199 36 (parallel [
            (set (reg:DI 236 [ D.11336 ])
                (lshiftrt:DI (reg:DI 237)
                    (subreg:QI (reg:SI 235 [ D.11337 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 199 198 200 36 (parallel [
            (set (reg:DI 238 [ D.11336 ])
                (and:DI (reg:DI 236 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 200 199 201 36 (parallel [
            (set (reg:DI 239 [ D.11336 ])
                (xor:DI (reg:DI 238 [ D.11336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 201 200 202 36 (parallel [
            (set (reg:QI 240 [ D.11341 ])
                (and:QI (subreg:QI (reg:DI 239 [ D.11336 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:277 -1
     (nil))
(insn 202 201 203 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 240 [ D.11341 ])
            (const_int 0 [0]))) hesiod.c:277 -1
     (nil))
(jump_insn 203 202 386 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) hesiod.c:277 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 192)
(note 386 203 387 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(jump_insn 387 386 388 37 (set (pc)
        (label_ref 204)) -1
     (nil)
 -> 204)
(barrier 388 387 390)
(code_label 390 388 389 38 39 "" [1 uses])
(note 389 390 33 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 33 389 204 38 (set (reg/v/f:DI 132 [ data ])
        (reg/v/f:DI 130 [ data ])) hesiod.c:277 -1
     (nil))
(code_label 204 33 205 39 16 "" [1 uses])
(note 205 204 206 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 39 (set (mem:QI (reg/v/f:DI 132 [ data ]) [0 *data_140+0 S1 A8])
        (const_int 0 [0])) hesiod.c:279 -1
     (nil))
(insn 207 206 208 39 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b75d7495e10 *.LC1>)) hesiod.c:282 -1
     (nil))
(insn 208 207 209 39 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ cp ])) hesiod.c:282 -1
     (nil))
(call_insn/i 209 208 210 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) hesiod.c:282 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 210 209 211 39 (set (reg:SI 133 [ D.11337 ])
        (reg:SI 0 ax)) hesiod.c:282 -1
     (nil))
(insn 211 210 212 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.11337 ])
            (const_int 0 [0]))) hesiod.c:282 -1
     (nil))
(jump_insn 212 211 213 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) hesiod.c:282 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 217)
(note 213 212 214 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 40 (set (reg/v/f:DI 134 [ cpp ])
        (reg/v/f:DI 188 [ ctx ])) hesiod.c:283 -1
     (nil))
(jump_insn 215 214 216 40 (set (pc)
        (label_ref 335)) -1
     (nil)
 -> 335)
(barrier 216 215 217)
(code_label 217 216 218 41 19 "" [1 uses])
(note 218 217 219 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 41 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b75d7495ea0 *.LC2>)) hesiod.c:284 -1
     (nil))
(insn 220 219 221 41 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ cp ])) hesiod.c:284 -1
     (nil))
(call_insn/i 221 220 222 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) hesiod.c:284 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 222 221 223 41 (set (reg:SI 135 [ D.11337 ])
        (reg:SI 0 ax)) hesiod.c:284 -1
     (nil))
(insn 223 222 224 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.11337 ])
            (const_int 0 [0]))) hesiod.c:284 -1
     (nil))
(jump_insn 224 223 225 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 347)
            (pc))) hesiod.c:284 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 347)
(note 225 224 226 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 42 (parallel [
            (set (reg/v/f:DI 134 [ cpp ])
                (plus:DI (reg/v/f:DI 188 [ ctx ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:285 -1
     (nil))
(jump_insn 227 226 228 42 (set (pc)
        (label_ref 335)) hesiod.c:285 -1
     (nil)
 -> 335)
(barrier 228 227 273)
(code_label 273 228 229 43 26 "" [1 uses])
(note 229 273 230 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 43 (set (reg:SI 4 si)
        (const_int 44 [0x2c])) hesiod.c:293 -1
     (nil))
(insn 231 230 232 43 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ data ])) hesiod.c:293 -1
     (nil))
(call_insn/i 232 231 233 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchrnul") [flags 0x41]  <function_decl 0x2b75d6fdfca8 strchrnul>) [0 strchrnul S1 A8])
            (const_int 0 [0]))) hesiod.c:293 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchrnul") [flags 0x41]  <function_decl 0x2b75d6fdfca8 strchrnul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 233 232 234 43 (set (reg/v/f:DI 110 [ data ])
        (reg:DI 0 ax)) hesiod.c:293 -1
     (nil))
(insn 234 233 235 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 110 [ data ]) [0 *data_82+0 S1 A8])
            (const_int 0 [0]))) hesiod.c:294 -1
     (nil))
(jump_insn 235 234 236 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) hesiod.c:294 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 239)
(note 236 235 237 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 44 (parallel [
            (set (reg/v/f:DI 142 [ data ])
                (plus:DI (reg/v/f:DI 110 [ data ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:295 -1
     (nil))
(insn 238 237 34 44 (set (mem:QI (reg/v/f:DI 110 [ data ]) [0 *data_82+0 S1 A8])
        (const_int 0 [0])) hesiod.c:295 -1
     (nil))
(insn 34 238 239 44 (set (reg/v/f:DI 110 [ data ])
        (reg/v/f:DI 142 [ data ])) hesiod.c:295 -1
     (nil))
(code_label 239 34 240 45 22 "" [1 uses])
(note 240 239 241 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 45 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b75d7495f30 *.LC3>)) hesiod.c:296 -1
     (nil))
(insn 242 241 243 45 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ data ])) hesiod.c:296 -1
     (nil))
(call_insn/i 243 242 244 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) hesiod.c:296 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 244 243 245 45 (set (reg:SI 143 [ D.11337 ])
        (reg:SI 0 ax)) hesiod.c:296 -1
     (nil))
(insn 245 244 246 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 143 [ D.11337 ])
            (const_int 0 [0]))) hesiod.c:296 -1
     (nil))
(jump_insn 246 245 247 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) hesiod.c:296 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 254)
(note 247 246 248 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 46 (parallel [
            (set (reg/v:SI 144 [ n ])
                (plus:SI (reg/v:SI 111 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:297 -1
     (nil))
(insn 249 248 250 46 (set (reg:DI 241)
        (sign_extend:DI (reg/v:SI 111 [ n ]))) hesiod.c:297 -1
     (nil))
(insn 250 249 251 46 (parallel [
            (set (reg:DI 242)
                (plus:DI (reg:DI 241)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:297 -1
     (nil))
(insn 251 250 35 46 (set (mem:SI (plus:DI (mult:DI (reg:DI 242)
                    (const_int 4 [0x4]))
                (reg/v/f:DI 188 [ ctx ])) [3 ctx_17(D)->classes S4 A32])
        (const_int 1 [0x1])) hesiod.c:297 -1
     (nil))
(insn 35 251 252 46 (set (reg/v:SI 111 [ n ])
        (reg/v:SI 144 [ n ])) hesiod.c:297 -1
     (nil))
(jump_insn 252 35 253 46 (set (pc)
        (label_ref 267)) -1
     (nil)
 -> 267)
(barrier 253 252 254)
(code_label 254 253 255 47 23 "" [1 uses])
(note 255 254 256 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 47 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2b75d7495990 *.LC4>)) hesiod.c:298 -1
     (nil))
(insn 257 256 258 47 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ data ])) hesiod.c:298 -1
     (nil))
(call_insn/i 258 257 259 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) hesiod.c:298 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 259 258 260 47 (set (reg:SI 145 [ D.11337 ])
        (reg:SI 0 ax)) hesiod.c:298 -1
     (nil))
(insn 260 259 261 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 145 [ D.11337 ])
            (const_int 0 [0]))) hesiod.c:298 -1
     (nil))
(jump_insn 261 260 262 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) hesiod.c:298 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 267)
(note 262 261 263 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 48 (parallel [
            (set (reg/v:SI 146 [ n ])
                (plus:SI (reg/v:SI 111 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:299 -1
     (nil))
(insn 264 263 265 48 (set (reg:DI 243)
        (sign_extend:DI (reg/v:SI 111 [ n ]))) hesiod.c:299 -1
     (nil))
(insn 265 264 266 48 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 243)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:299 -1
     (nil))
(insn 266 265 36 48 (set (mem:SI (plus:DI (mult:DI (reg:DI 244)
                    (const_int 4 [0x4]))
                (reg/v/f:DI 188 [ ctx ])) [3 ctx_17(D)->classes S4 A32])
        (const_int 4 [0x4])) hesiod.c:299 -1
     (nil))
(insn 36 266 267 48 (set (reg/v:SI 111 [ n ])
        (reg/v:SI 146 [ n ])) hesiod.c:299 -1
     (nil))
(code_label 267 36 268 49 24 "" [2 uses])
(note 268 267 37 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 37 268 356 49 (set (reg/v/f:DI 130 [ data ])
        (reg/v/f:DI 110 [ data ])) hesiod.c:299 -1
     (nil))
(code_label 356 37 269 50 33 "" [1 uses])
(note 269 356 270 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 130 [ data ]) [0 *data_1+0 S1 A8])
            (const_int 0 [0]))) hesiod.c:292 -1
     (nil))
(jump_insn 271 270 272 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) hesiod.c:292 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 279)
(note 272 271 274 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 274 272 275 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 111 [ n ])
            (const_int 1 [0x1]))) hesiod.c:292 -1
     (nil))
(jump_insn 275 274 278 51 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) hesiod.c:292 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 273)
(note 278 275 276 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 276 278 277 52 (set (pc)
        (label_ref 292)) -1
     (nil)
 -> 292)
(barrier 277 276 279)
(code_label 279 277 280 53 25 "" [1 uses])
(note 280 279 281 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ n ])
            (const_int 0 [0]))) hesiod.c:302 -1
     (nil))
(jump_insn 282 281 283 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) hesiod.c:302 -1
     (int_list:REG_BR_PROB 286 (nil))
 -> 288)
(note 283 282 284 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 54 (set (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 16 [0x10])) [3 ctx_17(D)->classes+0 S4 A64])
        (const_int 1 [0x1])) hesiod.c:305 -1
     (nil))
(insn 285 284 286 54 (set (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 20 [0x14])) [3 ctx_17(D)->classes+4 S4 A32])
        (const_int 4 [0x4])) hesiod.c:306 -1
     (nil))
(jump_insn 286 285 287 54 (set (pc)
        (label_ref 301)) -1
     (nil)
 -> 301)
(barrier 287 286 288)
(code_label 288 287 289 55 28 "" [1 uses])
(note 289 288 290 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 111 [ n ])
            (const_int 1 [0x1]))) hesiod.c:307 -1
     (nil))
(jump_insn 291 290 292 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 298)
            (pc))) hesiod.c:307 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 298)
(code_label 292 291 293 56 27 "" [1 uses])
(note 293 292 295 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 295 293 296 56 (set (reg:SI 245)
        (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 16 [0x10])) [3 ctx_17(D)->classes+0 S4 A64])) hesiod.c:308 -1
     (nil))
(insn 296 295 297 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 245)
            (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                    (const_int 20 [0x14])) [3 ctx_17(D)->classes+4 S4 A32]))) hesiod.c:308 -1
     (nil))
(jump_insn 297 296 298 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 301)
            (pc))) hesiod.c:308 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 301)
(code_label 298 297 299 57 29 "" [1 uses])
(note 299 298 300 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 57 (set (mem:SI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 20 [0x14])) [3 ctx_17(D)->classes+4 S4 A32])
        (const_int 0 [0])) hesiod.c:309 -1
     (nil))
(code_label 301 300 302 58 5 "" [5 uses])
(note 302 301 303 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(code_label 303 302 304 59 3 "" [1 uses])
(note 304 303 305 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 59 (parallel [
            (set (reg:DI 246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1040 [0xfffffffffffffbf0])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:261 -1
     (nil))
(insn 306 305 307 59 (set (reg:DI 1 dx)
        (reg/v/f:DI 116 [ fp ])) hesiod.c:261 -1
     (nil))
(insn 307 306 308 59 (set (reg:SI 4 si)
        (const_int 1032 [0x408])) hesiod.c:261 -1
     (nil))
(insn 308 307 309 59 (set (reg:DI 5 di)
        (reg:DI 246)) hesiod.c:261 -1
     (nil))
(call_insn 309 308 310 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b75d72dc1b0 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) hesiod.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x2b75d72dc1b0 fgets>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 310 309 312 59 (set (reg/f:DI 117 [ D.11338 ])
        (reg:DI 0 ax)) hesiod.c:261 -1
     (nil))
(insn 312 310 313 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.11338 ])
            (const_int 0 [0]))) hesiod.c:261 -1
     (nil))
(jump_insn 313 312 314 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) hesiod.c:261 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 311)
(note 314 313 315 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 60 (set (reg:DI 5 di)
        (reg/v/f:DI 116 [ fp ])) hesiod.c:312 -1
     (nil))
(call_insn 316 315 39 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b75d72c9ca8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) hesiod.c:312 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b75d72c9ca8 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 316 317 60 (set (reg:SI 112 [ D.11337 ])
        (const_int 0 [0])) hesiod.c:313 -1
     (nil))
(jump_insn 317 39 318 60 (set (pc)
        (label_ref 330)) hesiod.c:313 -1
     (nil)
 -> 330)
(barrier 318 317 319)
(code_label 319 318 320 61 32 ("cleanup") [1 uses])
(note 320 319 321 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 61 (set (reg:DI 5 di)
        (reg/v/f:DI 116 [ fp ])) hesiod.c:316 -1
     (nil))
(call_insn 322 321 323 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b75d72c9ca8 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) hesiod.c:316 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2b75d72c9ca8 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 323 322 324 61 (set (reg:DI 247)
        (mem/f:DI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_17(D)->RHS+0 S8 A64])) hesiod.c:317 -1
     (nil))
(insn 324 323 325 61 (set (reg:DI 5 di)
        (reg:DI 247)) hesiod.c:317 -1
     (nil))
(call_insn 325 324 326 61 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:317 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 326 325 327 61 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 188 [ ctx ]) [2 ctx_17(D)->LHS+0 S8 A64])) hesiod.c:318 -1
     (nil))
(call_insn 327 326 328 61 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:318 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 328 327 329 61 (set (mem/f:DI (reg/v/f:DI 188 [ ctx ]) [2 ctx_17(D)->LHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:319 -1
     (nil))
(insn 329 328 40 61 (set (mem/f:DI (plus:DI (reg/v/f:DI 188 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_17(D)->RHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:319 -1
     (nil))
(insn 40 329 368 61 (set (reg:SI 112 [ D.11337 ])
        (const_int -1 [0xffffffffffffffff])) hesiod.c:320 -1
     (nil))
(jump_insn 368 40 369 61 (set (pc)
        (label_ref 330)) hesiod.c:320 -1
     (nil)
 -> 330)
(barrier 369 368 371)
(code_label 371 369 370 62 35 "" [1 uses])
(note 370 371 38 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 38 370 330 62 (set (reg:SI 112 [ D.11337 ])
        (const_int -1 [0xffffffffffffffff])) hesiod.c:259 -1
     (nil))
(code_label 330 38 331 63 2 "" [2 uses])
(note 331 330 332 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 63 (set (reg:SI 187 [ <retval> ])
        (reg:SI 112 [ D.11337 ])) -1
     (nil))
(jump_insn 333 332 334 63 (set (pc)
        (label_ref 364)) -1
     (nil)
 -> 364)
(barrier 334 333 335)
(code_label 335 334 336 64 20 "" [2 uses])
(note 336 335 337 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 64 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ data ])) hesiod.c:287 -1
     (nil))
(call_insn 338 337 339 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2b75d6fdf0d8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) hesiod.c:287 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2b75d6fdf0d8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 339 338 340 64 (set (reg/f:DI 249)
        (reg:DI 0 ax)) hesiod.c:287 -1
     (expr_list:REG_NOALIAS (reg/f:DI 249)
        (nil)))
(insn 340 339 341 64 (set (reg/f:DI 136 [ D.11338 ])
        (reg/f:DI 249)) hesiod.c:287 -1
     (nil))
(insn 341 340 342 64 (set (mem/f:DI (reg/v/f:DI 134 [ cpp ]) [2 *cpp_115+0 S8 A64])
        (reg/f:DI 136 [ D.11338 ])) hesiod.c:287 -1
     (nil))
(insn 342 341 343 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 136 [ D.11338 ])
            (const_int 0 [0]))) hesiod.c:288 -1
     (nil))
(jump_insn 343 342 346 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) hesiod.c:288 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 319)
(note 346 343 344 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 344 346 345 65 (set (pc)
        (label_ref:DI 301)) 654 {jump}
     (nil)
 -> 301)
(barrier 345 344 347)
(code_label 347 345 348 66 21 "" [1 uses])
(note 348 347 349 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b75d74b3000 *.LC5>)) hesiod.c:290 -1
     (nil))
(insn 350 349 351 66 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ cp ])) hesiod.c:290 -1
     (nil))
(call_insn/i 351 350 352 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) hesiod.c:290 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2b75d6e0caf8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 352 351 353 66 (set (reg:SI 139 [ D.11337 ])
        (reg:SI 0 ax)) hesiod.c:290 -1
     (nil))
(insn 353 352 354 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.11337 ])
            (const_int 0 [0]))) hesiod.c:290 -1
     (nil))
(jump_insn 354 353 355 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 301)
            (pc))) hesiod.c:290 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 301)
(note 355 354 41 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 41 355 357 67 (set (reg/v:SI 111 [ n ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 357 41 358 67 (set (pc)
        (label_ref 356)) -1
     (nil)
 -> 356)
(barrier 358 357 364)
(code_label 364 358 367 69 1 "" [1 uses])
(note 367 364 365 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 365 367 366 69 (set (reg/i:SI 0 ax)
        (reg:SI 187 [ <retval> ])) hesiod.c:321 -1
     (nil))
(insn 366 365 0 69 (use (reg/i:SI 0 ax)) hesiod.c:321 -1
     (nil))

;; Function get_txt_records.isra.0 (get_txt_records.isra.0, funcdef_no=55, decl_uid=11273, cgraph_uid=0, symbol_order=78)

Partition 1: size 1024 align 16
	abuf
Partition 0: size 1024 align 16
	qbuf

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42
Edge 7->11 redirected to 51
Edge 11->41 redirected to 52
Edge 12->14 redirected to 53
Edge 23->31 redirected to 55
Predictions for insn 256 bb 30
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 274 bb 59
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 12->13 to 15 failed.
Redirecting jump 223 from 63 to 57.
Forwarding edge 32->33 to 37 failed.
Edge 42->44 redirected to 46
Merging block 44 into block 43...
Merged blocks 43 and 44.
Merged 43 and 44 without moving.
Forwarding edge 46->47 to 49 failed.
Redirecting jump 322 from 63 to 57.
Forwarding edge 55->56 to 60 failed.
Forwarding edge 58->59 to 60 failed.
Removing jump 364.
deleting block 63
Removing jump 374.
Merging block 64 into block 62...
Merged blocks 62 and 64.
Merged 62 and 64 without moving.


try_optimize_cfg iteration 2

Forwarding edge 12->13 to 15 failed.
Forwarding edge 32->33 to 37 failed.
Forwarding edge 46->47 to 49 failed.
Forwarding edge 55->56 to 60 failed.
Deleted label in block 56.
Forwarding edge 58->59 to 60 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 41 NOTE_INSN_DELETED)
(note 41 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 41 25 2 (set (reg/v:SI 172 [ class ])
        (reg:SI 5 di [ class ])) hesiod.c:328 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 173 [ name ])
        (reg:DI 4 si [ name ])) hesiod.c:328 -1
     (nil))
(note 26 25 43 2 NOTE_INSN_FUNCTION_BEG)
(insn 43 26 44 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:345 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 44 43 45 2 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [3  S4 A32])
        (const_int 1024 [0x400])) hesiod.c:345 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 45 44 46 2 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2048 [0xfffffffffffff800])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:345 -1
     (nil))
(insn 46 45 47 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg:DI 176)) hesiod.c:345 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 47 46 48 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 0 [0])) hesiod.c:345 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 48 47 49 2 (set (reg:SI 38 r9)
        (const_int 0 [0])) hesiod.c:345 -1
     (nil))
(insn 49 48 50 2 (set (reg:DI 37 r8)
        (const_int 0 [0])) hesiod.c:345 -1
     (nil))
(insn 50 49 51 2 (set (reg:SI 2 cx)
        (const_int 16 [0x10])) hesiod.c:345 -1
     (nil))
(insn 51 50 52 2 (set (reg:SI 1 dx)
        (reg/v:SI 172 [ class ])) hesiod.c:345 -1
     (nil))
(insn 52 51 53 2 (set (reg:DI 4 si)
        (reg/v/f:DI 173 [ name ])) hesiod.c:345 -1
     (nil))
(insn 53 52 54 2 (set (reg:SI 5 di)
        (const_int 0 [0])) hesiod.c:345 -1
     (nil))
(call_insn 54 53 55 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__res_mkquery") [flags 0x41]  <function_decl 0x2b75d7311510 __res_mkquery>) [0 __res_mkquery S1 A8])
            (const_int 32 [0x20]))) hesiod.c:345 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__res_mkquery") [flags 0x41]  <function_decl 0x2b75d7311510 __res_mkquery>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 55 54 56 2 (set (reg/v:SI 109 [ n ])
        (reg:SI 0 ax)) hesiod.c:345 -1
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:347 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 57 56 58 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 109 [ n ])
            (const_int 0 [0]))) hesiod.c:347 -1
     (nil))
(jump_insn 58 57 83 2 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) hesiod.c:347 -1
     (int_list:REG_BR_PROB 9086 (nil))
 -> 64)
(code_label 83 58 59 4 60 "" [3 uses])
(note 59 83 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 4 (set (reg:DI 177)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:348 -1
     (nil))
(insn 61 60 36 4 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 177)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:348 -1
     (nil))
(insn 36 61 62 4 (set (reg/f:DI 157 [ D.11372 ])
        (const_int 0 [0])) hesiod.c:349 -1
     (nil))
(jump_insn 62 36 63 4 (set (pc)
        (label_ref 371)) hesiod.c:348 -1
     (nil)
 -> 371)
(barrier 63 62 64)
(code_label 64 63 65 5 57 "" [1 uses])
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:351 -1
     (nil))
(insn 67 66 68 5 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2048 [0xfffffffffffff800])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:351 -1
     (nil))
(insn 68 67 69 5 (set (reg:SI 2 cx)
        (const_int 1024 [0x400])) hesiod.c:351 -1
     (nil))
(insn 69 68 70 5 (set (reg:DI 1 dx)
        (reg:DI 178)) hesiod.c:351 -1
     (nil))
(insn 70 69 71 5 (set (reg:SI 4 si)
        (reg/v:SI 109 [ n ])) hesiod.c:351 -1
     (nil))
(insn 71 70 72 5 (set (reg:DI 5 di)
        (reg:DI 179)) hesiod.c:351 -1
     (nil))
(call_insn 72 71 73 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__res_send") [flags 0x41]  <function_decl 0x2b75d7311870 __res_send>) [0 __res_send S1 A8])
            (const_int 0 [0]))) hesiod.c:351 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__res_send") [flags 0x41]  <function_decl 0x2b75d7311870 __res_send>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 73 72 74 5 (set (reg/v:SI 110 [ n ])
        (reg:SI 0 ax)) hesiod.c:351 -1
     (nil))
(insn 74 73 75 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 110 [ n ])
            (const_int 0 [0]))) hesiod.c:352 -1
     (nil))
(jump_insn 75 74 76 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) hesiod.c:352 -1
     (int_list:REG_BR_PROB 9605 (nil))
 -> 81)
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 6 (set (reg:DI 180)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:353 -1
     (nil))
(insn 78 77 37 6 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 180)) [3 errno+0 S4 A32])
        (const_int 111 [0x6f])) hesiod.c:353 -1
     (nil))
(insn 37 78 79 6 (set (reg/f:DI 157 [ D.11372 ])
        (const_int 0 [0])) hesiod.c:354 -1
     (nil))
(jump_insn 79 37 80 6 (set (pc)
        (label_ref 371)) hesiod.c:353 -1
     (nil)
 -> 371)
(barrier 80 79 81)
(code_label 81 80 82 7 59 "" [1 uses])
(note 82 81 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 110 [ n ])
            (const_int 11 [0xb]))) hesiod.c:356 -1
     (nil))
(jump_insn 85 84 86 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) hesiod.c:356 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 83)
(note 86 85 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 8 (set (reg:HI 182)
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1018 [0xfffffffffffffc06])) [4 MEM[(struct HEADER *)&abuf].ancount+0 S2 A16])) hesiod.c:365 -1
     (nil))
(insn 88 87 89 8 (parallel [
            (set (reg:HI 181 [ __v ])
                (asm_operands:HI ("rorw $8, %w0") ("=r") 0 [
                        (reg:HI 182)
                    ]
                     [
                        (asm_input:HI ("0") hesiod.c:365)
                    ]
                     [] hesiod.c:365))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) hesiod.c:365 -1
     (nil))
(insn 89 88 90 8 (set (reg/v:HI 113 [ __v ])
        (reg:HI 181 [ __v ])) hesiod.c:365 -1
     (nil))
(insn 90 89 91 8 (set (reg:HI 184)
        (mem/j/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1020 [0xfffffffffffffc04])) [4 MEM[(struct HEADER *)&abuf].qdcount+0 S2 A32])) hesiod.c:366 -1
     (nil))
(insn 91 90 92 8 (parallel [
            (set (reg:HI 183 [ __v ])
                (asm_operands:HI ("rorw $8, %w0") ("=r") 0 [
                        (reg:HI 184)
                    ]
                     [
                        (asm_input:HI ("0") hesiod.c:366)
                    ]
                     [] hesiod.c:366))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) hesiod.c:366 -1
     (nil))
(insn 92 91 93 8 (set (reg/v:HI 116 [ __v ])
        (reg:HI 183 [ __v ])) hesiod.c:366 -1
     (nil))
(insn 93 92 94 8 (set (reg/v:SI 117 [ qdcount ])
        (zero_extend:SI (reg/v:HI 116 [ __v ]))) hesiod.c:366 -1
     (nil))
(insn 94 93 95 8 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:368 -1
     (nil))
(insn 95 94 96 8 (set (reg:DI 186 [ D.11366 ])
        (sign_extend:DI (reg/v:SI 110 [ n ]))) hesiod.c:368 -1
     (nil))
(insn 96 95 97 8 (parallel [
            (set (reg/v/f:DI 119 [ eom ])
                (plus:DI (reg:DI 185)
                    (reg:DI 186 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:368 -1
     (nil))
(insn 97 96 98 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 117 [ qdcount ])
            (const_int 0 [0]))) hesiod.c:371 -1
     (nil))
(jump_insn 98 97 384 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 389)
            (pc))) hesiod.c:371 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 389)
(note 384 98 27 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 27 384 28 9 (set (reg/v:SI 123 [ i ])
        (const_int 0 [0])) hesiod.c:371 -1
     (nil))
(insn 28 27 29 9 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:371 -1
     (nil))
(insn 29 28 114 9 (parallel [
            (set (reg/v/f:DI 141 [ cp ])
                (plus:DI (reg:DI 174)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:371 -1
     (nil))
(code_label 114 29 99 10 62 "" [1 uses])
(note 99 114 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 10 (set (reg:DI 4 si)
        (reg/v/f:DI 119 [ eom ])) hesiod.c:372 -1
     (nil))
(insn 101 100 102 10 (set (reg:DI 5 di)
        (reg/v/f:DI 141 [ cp ])) hesiod.c:372 -1
     (nil))
(call_insn 102 101 103 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dn_skipname") [flags 0x41]  <function_decl 0x2b75d7315360 __dn_skipname>) [0 __dn_skipname S1 A8])
            (const_int 0 [0]))) hesiod.c:372 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dn_skipname") [flags 0x41]  <function_decl 0x2b75d7315360 __dn_skipname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 103 102 104 10 (set (reg/v:SI 120 [ skip ])
        (reg:SI 0 ax)) hesiod.c:372 -1
     (nil))
(insn 104 103 105 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 120 [ skip ])
            (const_int 0 [0]))) hesiod.c:373 -1
     (nil))
(jump_insn 105 104 106 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) hesiod.c:373 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 83)
(note 106 105 107 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 11 (set (reg:DI 187 [ D.11366 ])
        (sign_extend:DI (reg/v:SI 120 [ skip ]))) hesiod.c:373 -1
     (nil))
(insn 108 107 109 11 (parallel [
            (set (reg:DI 188 [ D.11366 ])
                (plus:DI (reg:DI 187 [ D.11366 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:373 -1
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg/v/f:DI 141 [ cp ])
                (plus:DI (reg/v/f:DI 141 [ cp ])
                    (reg:DI 188 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:373 -1
     (nil))
(insn 110 109 111 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 119 [ eom ])
            (reg/v/f:DI 141 [ cp ]))) hesiod.c:373 -1
     (nil))
(jump_insn 111 110 112 11 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) hesiod.c:373 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 83)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 115 12 (parallel [
            (set (reg/v:SI 123 [ i ])
                (plus:SI (reg/v:SI 123 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:371 -1
     (nil))
(insn 115 113 116 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 117 [ qdcount ])
            (reg/v:SI 123 [ i ]))) hesiod.c:371 -1
     (nil))
(jump_insn 116 115 385 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) hesiod.c:371 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 114)
(note 385 116 386 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 386 385 387 13 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 387 386 389)
(code_label 389 387 388 14 87 "" [1 uses])
(note 388 389 30 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 30 388 31 14 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:367 -1
     (nil))
(insn 31 30 117 14 (parallel [
            (set (reg/v/f:DI 141 [ cp ])
                (plus:DI (reg:DI 175)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:367 -1
     (nil))
(code_label 117 31 118 15 61 "" [1 uses])
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 15 (set (reg/v:SI 114 [ ancount ])
        (zero_extend:SI (reg/v:HI 113 [ __v ]))) hesiod.c:365 -1
     (nil))
(insn 120 119 121 15 (parallel [
            (set (reg:SI 189 [ D.11367 ])
                (plus:SI (reg/v:SI 114 [ ancount ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:380 -1
     (nil))
(insn 121 120 122 15 (set (reg:DI 190 [ D.11368 ])
        (sign_extend:DI (reg:SI 189 [ D.11367 ]))) hesiod.c:380 -1
     (nil))
(insn 122 121 123 15 (parallel [
            (set (reg:DI 191 [ D.11368 ])
                (ashift:DI (reg:DI 190 [ D.11368 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:380 -1
     (nil))
(insn 123 122 124 15 (set (reg:DI 5 di)
        (reg:DI 191 [ D.11368 ])) hesiod.c:380 -1
     (nil))
(call_insn 124 123 125 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) hesiod.c:380 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 125 124 126 15 (set (reg/f:DI 192)
        (reg:DI 0 ax)) hesiod.c:380 -1
     (expr_list:REG_NOALIAS (reg/f:DI 192)
        (nil)))
(insn 126 125 127 15 (set (reg/v/f:DI 127 [ list ])
        (reg/f:DI 192)) hesiod.c:380 -1
     (nil))
(insn 127 126 128 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 127 [ list ])
            (const_int 0 [0]))) hesiod.c:381 -1
     (nil))
(jump_insn 128 127 129 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 393)
            (pc))) hesiod.c:381 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 393)
(note 129 128 130 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ ancount ])
            (const_int 0 [0]))) hesiod.c:384 -1
     (nil))
(jump_insn 131 130 335 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 395)
            (pc))) hesiod.c:384 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 395)
(code_label 335 131 132 17 83 "" [1 uses])
(note 132 335 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 17 (set (reg:DI 193)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:433 -1
     (nil))
(insn 134 133 135 17 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 193)) [3 errno+0 S4 A32])
        (const_int 2 [0x2])) hesiod.c:433 -1
     (nil))
(jump_insn 135 134 136 17 (set (pc)
        (label_ref 367)) hesiod.c:433 -1
     (nil)
 -> 367)
(barrier 136 135 395)
(code_label 395 136 394 18 89 "" [1 uses])
(note 394 395 32 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 32 394 33 18 (set (reg/v:SI 152 [ i ])
        (const_int 0 [0])) hesiod.c:384 -1
     (nil))
(insn 33 32 137 18 (set (reg/v:SI 159 [ j ])
        (const_int 0 [0])) hesiod.c:384 -1
     (nil))
(code_label 137 33 138 19 63 "" [1 uses])
(note 138 137 139 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 19 (set (reg:DI 4 si)
        (reg/v/f:DI 119 [ eom ])) hesiod.c:385 -1
     (nil))
(insn 140 139 141 19 (set (reg:DI 5 di)
        (reg/v/f:DI 141 [ cp ])) hesiod.c:385 -1
     (nil))
(call_insn 141 140 142 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__dn_skipname") [flags 0x41]  <function_decl 0x2b75d7315360 __dn_skipname>) [0 __dn_skipname S1 A8])
            (const_int 0 [0]))) hesiod.c:385 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__dn_skipname") [flags 0x41]  <function_decl 0x2b75d7315360 __dn_skipname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 142 141 143 19 (set (reg/v:SI 128 [ skip ])
        (reg:SI 0 ax)) hesiod.c:385 -1
     (nil))
(insn 143 142 144 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 128 [ skip ])
            (const_int 0 [0]))) hesiod.c:386 -1
     (nil))
(jump_insn 144 143 145 19 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) hesiod.c:386 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 150)
(note 145 144 146 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 20 (set (reg:DI 194)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:387 -1
     (nil))
(insn 147 146 148 20 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 194)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:387 -1
     (nil))
(jump_insn 148 147 149 20 (set (pc)
        (label_ref 341)) hesiod.c:387 -1
     (nil)
 -> 341)
(barrier 149 148 150)
(code_label 150 149 151 21 65 "" [1 uses])
(note 151 150 152 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 21 (set (reg:DI 195 [ D.11366 ])
        (sign_extend:DI (reg/v:SI 128 [ skip ]))) hesiod.c:390 -1
     (nil))
(insn 153 152 154 21 (parallel [
            (set (reg/v/f:DI 130 [ cp ])
                (plus:DI (reg/v/f:DI 141 [ cp ])
                    (reg:DI 195 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:390 -1
     (nil))
(insn 154 153 155 21 (parallel [
            (set (reg:DI 196 [ D.11369 ])
                (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:391 -1
     (nil))
(insn 155 154 156 21 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 119 [ eom ])
            (reg:DI 196 [ D.11369 ]))) hesiod.c:391 -1
     (nil))
(jump_insn 156 155 157 21 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) hesiod.c:391 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 162)
(note 157 156 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 22 (set (reg:DI 197)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:392 -1
     (nil))
(insn 159 158 160 22 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 197)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:392 -1
     (nil))
(jump_insn 160 159 161 22 (set (pc)
        (label_ref 341)) hesiod.c:392 -1
     (nil)
 -> 341)
(barrier 161 160 162)
(code_label 162 161 163 23 67 "" [1 uses])
(note 163 162 164 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 23 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ cp ])) hesiod.c:395 -1
     (nil))
(call_insn 165 164 166 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) hesiod.c:395 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 166 165 167 23 (set (reg:SI 132 [ D.11370 ])
        (reg:SI 0 ax)) hesiod.c:395 -1
     (nil))
(insn 167 166 168 23 (parallel [
            (set (reg:DI 198 [ cp ])
                (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:397 -1
     (nil))
(insn 168 167 169 23 (set (reg:DI 5 di)
        (reg:DI 198 [ cp ])) hesiod.c:397 -1
     (nil))
(call_insn 169 168 170 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) hesiod.c:397 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 170 169 171 23 (set (reg:SI 135 [ D.11370 ])
        (reg:SI 0 ax)) hesiod.c:397 -1
     (nil))
(insn 171 170 172 23 (parallel [
            (set (reg:DI 199 [ cp ])
                (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:398 -1
     (nil))
(insn 172 171 173 23 (set (reg:DI 5 di)
        (reg:DI 199 [ cp ])) hesiod.c:399 -1
     (nil))
(call_insn 173 172 174 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) hesiod.c:399 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ns_get16") [flags 0x41]  <function_decl 0x2b75d6faebd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 174 173 175 23 (set (reg:SI 138 [ D.11370 ])
        (reg:SI 0 ax)) hesiod.c:399 -1
     (nil))
(insn 175 174 176 23 (set (reg:SI 139 [ D.11367 ])
        (reg:SI 138 [ D.11370 ])) hesiod.c:399 -1
     (nil))
(insn 176 175 177 23 (parallel [
            (set (reg/v/f:DI 150 [ cp ])
                (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:400 -1
     (nil))
(insn 177 176 178 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 139 [ D.11367 ])
            (const_int 0 [0]))) hesiod.c:401 -1
     (nil))
(jump_insn 178 177 188 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) hesiod.c:401 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 184)
(code_label 188 178 179 24 69 "" [1 uses])
(note 179 188 180 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 24 (set (reg:DI 200)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:402 -1
     (nil))
(insn 181 180 182 24 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 200)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:402 -1
     (nil))
(jump_insn 182 181 183 24 (set (pc)
        (label_ref 341)) hesiod.c:402 -1
     (nil)
 -> 341)
(barrier 183 182 184)
(code_label 184 183 185 25 68 "" [1 uses])
(note 185 184 186 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 25 (set (reg:DI 140 [ D.11366 ])
        (sign_extend:DI (reg:SI 139 [ D.11367 ]))) hesiod.c:401 -1
     (nil))
(insn 187 186 189 25 (parallel [
            (set (reg/v/f:DI 141 [ cp ])
                (plus:DI (reg/v/f:DI 150 [ cp ])
                    (reg:DI 140 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:401 -1
     (nil))
(insn 189 187 190 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 119 [ eom ])
            (reg/v/f:DI 141 [ cp ]))) hesiod.c:401 -1
     (nil))
(jump_insn 190 189 191 25 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 188)
            (pc))) hesiod.c:401 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 188)
(note 191 190 192 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.11370 ])
            (const_int 16 [0x10]))) hesiod.c:407 -1
     (nil))
(insn 193 192 194 26 (set (reg:QI 202 [ D.11371 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:407 -1
     (nil))
(insn 194 193 195 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 202 [ D.11371 ])
            (const_int 0 [0]))) hesiod.c:407 -1
     (nil))
(jump_insn 195 194 401 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) hesiod.c:407 -1
     (int_list:REG_BR_PROB 4314 (nil))
 -> 327)
(note 401 195 196 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 196 401 197 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.11370 ])
            (reg/v:SI 172 [ class ]))) hesiod.c:407 -1
     (nil))
(insn 197 196 198 27 (set (reg:QI 204 [ D.11371 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:407 -1
     (nil))
(insn 198 197 199 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 204 [ D.11371 ])
            (const_int 0 [0]))) hesiod.c:407 -1
     (nil))
(jump_insn 199 198 200 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) hesiod.c:407 -1
     (int_list:REG_BR_PROB 7587 (nil))
 -> 327)
(note 200 199 201 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 28 (set (reg:DI 5 di)
        (reg:DI 140 [ D.11366 ])) hesiod.c:409 -1
     (nil))
(call_insn 202 201 203 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) hesiod.c:409 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 203 202 204 28 (set (reg/f:DI 205)
        (reg:DI 0 ax)) hesiod.c:409 -1
     (expr_list:REG_NOALIAS (reg/f:DI 205)
        (nil)))
(insn 204 203 205 28 (set (reg/v/f:DI 112 [ dst ])
        (reg/f:DI 205)) hesiod.c:409 -1
     (nil))
(insn 205 204 206 28 (set (reg:DI 206 [ D.11368 ])
        (sign_extend:DI (reg/v:SI 159 [ j ]))) hesiod.c:409 -1
     (nil))
(insn 206 205 207 28 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 206 [ D.11368 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 127 [ list ])) [2 *_61+0 S8 A64])
        (reg/v/f:DI 112 [ dst ])) hesiod.c:409 -1
     (nil))
(insn 207 206 208 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 112 [ dst ])
            (const_int 0 [0]))) hesiod.c:409 -1
     (nil))
(jump_insn 208 207 209 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 341)
            (pc))) hesiod.c:409 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 341)
(note 209 208 210 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 29 (parallel [
            (set (reg/v:SI 159 [ j ])
                (plus:SI (reg/v:SI 159 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:411 -1
     (nil))
(insn 211 210 212 29 (parallel [
            (set (reg/v/f:DI 145 [ edst ])
                (plus:DI (reg/v/f:DI 112 [ dst ])
                    (reg:DI 140 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:412 -1
     (nil))
(insn 212 211 213 29 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 150 [ cp ])
            (reg/v/f:DI 141 [ cp ]))) hesiod.c:415 -1
     (nil))
(jump_insn 213 212 214 29 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 400)
            (pc))) hesiod.c:415 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 400)
(note 214 213 215 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 30 (parallel [
            (set (reg/v/f:DI 147 [ cp ])
                (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:416 -1
     (nil))
(insn 216 215 217 30 (set (reg:DI 149 [ D.11366 ])
        (zero_extend:DI (mem:QI (plus:DI (reg/v/f:DI 130 [ cp ])
                    (const_int 10 [0xa])) [0 MEM[(u_char *)cp_45 + 10B]+0 S1 A8]))) hesiod.c:417 -1
     (nil))
(insn 217 216 218 30 (parallel [
            (set (reg/v/f:DI 150 [ cp ])
                (plus:DI (reg/v/f:DI 147 [ cp ])
                    (reg:DI 149 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:417 -1
     (nil))
(insn 218 217 219 30 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 119 [ eom ])
            (reg/v/f:DI 150 [ cp ]))) hesiod.c:417 -1
     (nil))
(jump_insn 219 218 228 30 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) hesiod.c:417 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 225)
(code_label 228 219 220 31 74 "" [3 uses])
(note 220 228 221 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 31 (set (reg:DI 207)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:418 -1
     (nil))
(insn 222 221 223 31 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 207)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:418 -1
     (nil))
(jump_insn 223 222 224 31 (set (pc)
        (label_ref:DI 348)) hesiod.c:418 654 {jump}
     (nil)
 -> 348)
(barrier 224 223 225)
(code_label 225 224 226 32 72 "" [1 uses])
(note 226 225 227 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 229 32 (parallel [
            (set (reg/v/f:DI 146 [ dst ])
                (plus:DI (reg/v/f:DI 112 [ dst ])
                    (reg:DI 149 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:417 -1
     (nil))
(insn 229 227 230 32 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 145 [ edst ])
            (reg/v/f:DI 146 [ dst ]))) hesiod.c:417 -1
     (nil))
(jump_insn 230 229 233 32 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) hesiod.c:417 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 228)
(note 233 230 231 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 231 233 232 33 (set (pc)
        (label_ref 248)) hesiod.c:417 -1
     (nil)
 -> 248)
(barrier 232 231 312)
(code_label 312 232 234 34 81 "" [1 uses])
(note 234 312 235 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 34 (parallel [
            (set (reg/v/f:DI 147 [ cp ])
                (plus:DI (reg/v/f:DI 150 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:416 -1
     (nil))
(insn 236 235 237 34 (set (reg:DI 149 [ D.11366 ])
        (zero_extend:DI (mem:QI (reg/v/f:DI 150 [ cp ]) [0 *cp_141+0 S1 A8]))) hesiod.c:417 -1
     (nil))
(insn 237 236 238 34 (parallel [
            (set (reg/v/f:DI 150 [ cp ])
                (plus:DI (reg/v/f:DI 147 [ cp ])
                    (reg:DI 149 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:417 -1
     (nil))
(insn 238 237 239 34 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 119 [ eom ])
            (reg/v/f:DI 150 [ cp ]))) hesiod.c:417 -1
     (nil))
(jump_insn 239 238 240 34 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) hesiod.c:417 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 228)
(note 240 239 241 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 35 (parallel [
            (set (reg/v/f:DI 151 [ dst ])
                (plus:DI (reg/v/f:DI 146 [ dst ])
                    (reg:DI 149 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:417 -1
     (nil))
(insn 242 241 243 35 (set (reg/v/f:DI 112 [ dst ])
        (reg/v/f:DI 146 [ dst ])) -1
     (nil))
(insn 243 242 244 35 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 145 [ edst ])
            (reg/v/f:DI 151 [ dst ]))) hesiod.c:417 -1
     (nil))
(jump_insn 244 243 247 35 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) hesiod.c:417 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 228)
(note 247 244 34 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 34 247 245 36 (set (reg/v/f:DI 146 [ dst ])
        (reg/v/f:DI 151 [ dst ])) hesiod.c:417 -1
     (nil))
(jump_insn 245 34 246 36 (set (pc)
        (label_ref 250)) hesiod.c:417 -1
     (nil)
 -> 250)
(barrier 246 245 248)
(code_label 248 246 249 37 75 "" [1 uses])
(note 249 248 250 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(code_label 250 249 251 38 76 "" [1 uses])
(note 251 250 252 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 38 (set (reg:SI 208)
        (subreg:SI (reg:DI 149 [ D.11366 ]) 0)) hesiod.c:421 -1
     (nil))
(insn 253 252 254 38 (set (reg/f:DI 209)
        (reg/v/f:DI 112 [ dst ])) hesiod.c:421 -1
     (nil))
(insn 254 253 255 38 (set (reg/f:DI 210)
        (reg/v/f:DI 147 [ cp ])) hesiod.c:421 -1
     (nil))
(insn 255 254 256 38 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 208)
            (const_int 8 [0x8]))) hesiod.c:421 -1
     (nil))
(jump_insn 256 255 402 38 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) hesiod.c:421 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 291)
(note 402 256 257 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 257 402 258 39 (parallel [
            (set (reg:SI 211)
                (and:SI (reg:SI 208)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 258 257 259 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 211)
            (const_int 0 [0]))) hesiod.c:421 -1
     (nil))
(jump_insn 259 258 403 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) hesiod.c:421 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 272)
(note 403 259 260 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 260 403 261 40 (set (reg:SI 212)
        (mem:SI (reg/f:DI 210) [0  S4 A8])) hesiod.c:421 -1
     (nil))
(insn 261 260 262 40 (set (mem:SI (reg/f:DI 209) [0  S4 A8])
        (reg:SI 212)) hesiod.c:421 -1
     (nil))
(insn 262 261 263 40 (set (reg:DI 213)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 263 262 264 40 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg/f:DI 209)
                    (reg:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 264 263 265 40 (parallel [
            (set (reg/f:DI 215)
                (plus:DI (reg:DI 214)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 265 264 266 40 (set (reg:DI 216)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 266 265 267 40 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg/f:DI 210)
                    (reg:DI 216)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 267 266 268 40 (parallel [
            (set (reg/f:DI 218)
                (plus:DI (reg:DI 217)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 268 267 269 40 (set (reg:SI 219)
        (mem:SI (plus:DI (reg/f:DI 218)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])) hesiod.c:421 -1
     (nil))
(insn 269 268 270 40 (set (mem:SI (plus:DI (reg/f:DI 215)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
        (reg:SI 219)) hesiod.c:421 -1
     (nil))
(jump_insn 270 269 271 40 (set (pc)
        (label_ref 311)) hesiod.c:421 -1
     (nil)
 -> 311)
(barrier 271 270 272)
(code_label 272 271 404 41 79 "" [1 uses])
(note 404 272 273 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 273 404 274 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 208)
            (const_int 0 [0]))) hesiod.c:421 -1
     (nil))
(jump_insn 274 273 405 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) hesiod.c:421 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 311)
(note 405 274 275 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 275 405 276 42 (set (reg:QI 220)
        (mem:QI (reg/f:DI 210) [0  S1 A8])) hesiod.c:421 -1
     (nil))
(insn 276 275 277 42 (set (mem:QI (reg/f:DI 209) [0  S1 A8])
        (reg:QI 220)) hesiod.c:421 -1
     (nil))
(insn 277 276 278 42 (parallel [
            (set (reg:SI 221)
                (and:SI (reg:SI 208)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 278 277 279 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 221)
            (const_int 0 [0]))) hesiod.c:421 -1
     (nil))
(jump_insn 279 278 406 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 311)
            (pc))) hesiod.c:421 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 311)
(note 406 279 280 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 280 406 281 43 (set (reg:DI 223)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 281 280 282 43 (set (reg:DI 222)
        (reg:DI 223)) hesiod.c:421 -1
     (nil))
(insn 282 281 283 43 (parallel [
            (set (reg/f:DI 224)
                (plus:DI (reg/f:DI 209)
                    (reg:DI 222)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 283 282 284 43 (set (reg:DI 226)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 284 283 285 43 (set (reg:DI 225)
        (reg:DI 226)) hesiod.c:421 -1
     (nil))
(insn 285 284 286 43 (parallel [
            (set (reg/f:DI 227)
                (plus:DI (reg/f:DI 210)
                    (reg:DI 225)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 286 285 287 43 (set (reg:HI 228)
        (mem:HI (plus:DI (reg/f:DI 227)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) hesiod.c:421 -1
     (nil))
(insn 287 286 289 43 (set (mem:HI (plus:DI (reg/f:DI 224)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 228)) hesiod.c:421 -1
     (nil))
(jump_insn 289 287 290 43 (set (pc)
        (label_ref 311)) hesiod.c:421 -1
     (nil)
 -> 311)
(barrier 290 289 291)
(code_label 291 290 408 45 77 "" [1 uses])
(note 408 291 292 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 292 408 293 45 (set (reg:DI 229)
        (mem:DI (reg/f:DI 210) [0  S8 A8])) hesiod.c:421 -1
     (nil))
(insn 293 292 294 45 (set (mem:DI (reg/f:DI 209) [0  S8 A8])
        (reg:DI 229)) hesiod.c:421 -1
     (nil))
(insn 294 293 295 45 (set (reg:DI 230)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 295 294 296 45 (parallel [
            (set (reg:DI 231)
                (plus:DI (reg/f:DI 209)
                    (reg:DI 230)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 296 295 297 45 (parallel [
            (set (reg/f:DI 232)
                (plus:DI (reg:DI 231)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 297 296 298 45 (set (reg:DI 233)
        (zero_extend:DI (reg:SI 208))) hesiod.c:421 -1
     (nil))
(insn 298 297 299 45 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 210)
                    (reg:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 299 298 300 45 (parallel [
            (set (reg/f:DI 235)
                (plus:DI (reg:DI 234)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 300 299 301 45 (set (reg:DI 236)
        (mem:DI (plus:DI (reg/f:DI 235)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) hesiod.c:421 -1
     (nil))
(insn 301 300 302 45 (set (mem:DI (plus:DI (reg/f:DI 232)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 236)) hesiod.c:421 -1
     (nil))
(insn 302 301 303 45 (parallel [
            (set (reg/f:DI 237)
                (plus:DI (reg/f:DI 209)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 303 302 304 45 (parallel [
            (set (reg/f:DI 237)
                (and:DI (reg/f:DI 237)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 304 303 305 45 (parallel [
            (set (reg/f:DI 209)
                (minus:DI (reg/f:DI 209)
                    (reg/f:DI 237)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 305 304 306 45 (parallel [
            (set (reg/f:DI 210)
                (minus:DI (reg/f:DI 210)
                    (reg/f:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 306 305 307 45 (parallel [
            (set (reg:SI 208)
                (plus:SI (reg:SI 208)
                    (subreg:SI (reg/f:DI 209) 0)))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 307 306 308 45 (parallel [
            (set (reg:SI 208)
                (and:SI (reg:SI 208)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 308 307 309 45 (parallel [
            (set (reg:SI 238)
                (lshiftrt:SI (reg:SI 208)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:421 -1
     (nil))
(insn 309 308 310 45 (set (reg:DI 239)
        (zero_extend:DI (reg:SI 238))) hesiod.c:421 -1
     (nil))
(insn 310 309 311 45 (parallel [
            (set (reg:DI 239)
                (const_int 0 [0]))
            (set (reg/f:DI 237)
                (plus:DI (ashift:DI (reg:DI 239)
                        (const_int 3 [0x3]))
                    (reg/f:DI 237)))
            (set (reg/f:DI 210)
                (plus:DI (ashift:DI (reg:DI 239)
                        (const_int 3 [0x3]))
                    (reg/f:DI 210)))
            (set (mem:BLK (reg/f:DI 237) [0  A64])
                (mem:BLK (reg/f:DI 210) [0  A8]))
            (use (reg:DI 239))
        ]) hesiod.c:421 -1
     (nil))
(code_label 311 310 409 46 78 "" [4 uses])
(note 409 311 313 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 313 409 314 46 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 141 [ cp ])
            (reg/v/f:DI 150 [ cp ]))) hesiod.c:415 -1
     (nil))
(jump_insn 314 313 396 46 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) hesiod.c:415 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 312)
(note 396 314 397 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 397 396 398 47 (set (pc)
        (label_ref 315)) -1
     (nil)
 -> 315)
(barrier 398 397 400)
(code_label 400 398 399 48 90 "" [1 uses])
(note 399 400 35 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 35 399 315 48 (set (reg/v/f:DI 146 [ dst ])
        (reg/v/f:DI 112 [ dst ])) hesiod.c:415 -1
     (nil))
(code_label 315 35 316 49 71 "" [1 uses])
(note 316 315 317 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 141 [ cp ])
            (reg/v/f:DI 150 [ cp ]))) hesiod.c:425 -1
     (nil))
(jump_insn 318 317 319 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) hesiod.c:425 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 324)
(note 319 318 320 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 50 (set (reg:DI 240)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:426 -1
     (nil))
(insn 321 320 322 50 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 240)) [3 errno+0 S4 A32])
        (const_int 90 [0x5a])) hesiod.c:426 -1
     (nil))
(jump_insn 322 321 323 50 (set (pc)
        (label_ref:DI 348)) hesiod.c:426 654 {jump}
     (nil)
 -> 348)
(barrier 323 322 324)
(code_label 324 323 325 51 82 "" [1 uses])
(note 325 324 326 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 51 (set (mem:QI (reg/v/f:DI 146 [ dst ]) [0 *dst_136+0 S1 A8])
        (const_int 0 [0])) hesiod.c:429 -1
     (nil))
(code_label 327 326 328 52 70 "" [2 uses])
(note 328 327 329 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 52 (parallel [
            (set (reg/v:SI 152 [ i ])
                (plus:SI (reg/v:SI 152 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:384 -1
     (nil))
(insn 330 329 331 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 114 [ ancount ])
            (reg/v:SI 152 [ i ]))) hesiod.c:384 -1
     (nil))
(jump_insn 331 330 332 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) hesiod.c:384 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 137)
(note 332 331 333 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 53 (set (reg:DI 241 [ D.11368 ])
        (sign_extend:DI (reg/v:SI 159 [ j ]))) hesiod.c:431 -1
     (nil))
(insn 334 333 336 53 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 241 [ D.11368 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 127 [ list ])) [2 *_76+0 S8 A64])
        (const_int 0 [0])) hesiod.c:431 -1
     (nil))
(insn 336 334 337 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 159 [ j ])
            (const_int 0 [0]))) hesiod.c:432 -1
     (nil))
(jump_insn 337 336 340 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) hesiod.c:432 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 335)
(note 340 337 39 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 39 340 338 54 (set (reg/f:DI 157 [ D.11372 ])
        (reg/v/f:DI 127 [ list ])) hesiod.c:432 -1
     (nil))
(jump_insn 338 39 339 54 (set (pc)
        (label_ref 371)) hesiod.c:432 -1
     (nil)
 -> 371)
(barrier 339 338 341)
(code_label 341 339 342 55 66 ("cleanup") [4 uses])
(note 342 341 343 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 159 [ j ])
            (const_int 0 [0]))) hesiod.c:439 -1
     (nil))
(jump_insn 344 343 345 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) hesiod.c:439 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 348)
(note 345 344 346 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(jump_insn 346 345 347 56 (set (pc)
        (label_ref 367)) hesiod.c:439 -1
     (nil)
 -> 367)
(barrier 347 346 348)
(code_label 348 347 349 57 84 "" [3 uses])
(note 349 348 350 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 57 (set (reg:DI 160 [ ivtmp.50 ])
        (reg/v/f:DI 127 [ list ])) -1
     (nil))
(insn 351 350 352 57 (parallel [
            (set (reg:SI 242 [ D.11376 ])
                (plus:SI (reg/v:SI 159 [ j ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 352 351 353 57 (set (reg:DI 243 [ D.11366 ])
        (zero_extend:DI (reg:SI 242 [ D.11376 ]))) -1
     (nil))
(insn 353 352 354 57 (parallel [
            (set (reg:DI 244 [ D.11366 ])
                (plus:DI (reg:DI 243 [ D.11366 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 354 353 355 57 (parallel [
            (set (reg:DI 245 [ D.11366 ])
                (ashift:DI (reg:DI 244 [ D.11366 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 355 354 360 57 (parallel [
            (set (reg:DI 164 [ D.11377 ])
                (plus:DI (reg/v/f:DI 127 [ list ])
                    (reg:DI 245 [ D.11366 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 360 355 356 58 85 "" [1 uses])
(note 356 360 357 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 58 (set (reg:DI 5 di)
        (mem/f:DI (reg:DI 160 [ ivtmp.50 ]) [2 MEM[base: _85, offset: 0B]+0 S8 A64])) hesiod.c:440 -1
     (nil))
(call_insn 358 357 359 58 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:440 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 359 358 361 58 (parallel [
            (set (reg:DI 160 [ ivtmp.50 ])
                (plus:DI (reg:DI 160 [ ivtmp.50 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 361 359 362 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 160 [ ivtmp.50 ])
            (reg:DI 164 [ D.11377 ]))) hesiod.c:439 -1
     (nil))
(jump_insn 362 361 366 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 360)
            (pc))) hesiod.c:439 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 360)
(note 366 362 367 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(code_label 367 366 368 60 64 "" [2 uses])
(note 368 367 369 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 60 (set (reg:DI 5 di)
        (reg/v/f:DI 127 [ list ])) hesiod.c:441 -1
     (nil))
(call_insn 370 369 38 60 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:441 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 370 390 60 (set (reg/f:DI 157 [ D.11372 ])
        (const_int 0 [0])) hesiod.c:442 -1
     (nil))
(jump_insn 390 38 391 60 (set (pc)
        (label_ref 371)) -1
     (nil)
 -> 371)
(barrier 391 390 393)
(code_label 393 391 392 61 88 "" [1 uses])
(note 392 393 40 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 40 392 371 61 (set (reg/f:DI 157 [ D.11372 ])
        (const_int 0 [0])) hesiod.c:382 -1
     (nil))
(code_label 371 40 372 62 58 "" [4 uses])
(note 372 371 373 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 381 62 (set (reg:DI 171 [ <retval> ])
        (reg/f:DI 157 [ D.11372 ])) -1
     (nil))
(insn 381 373 382 62 (set (reg/i:DI 0 ax)
        (reg:DI 171 [ <retval> ])) hesiod.c:443 -1
     (nil))
(insn 382 381 0 62 (use (reg/i:DI 0 ax)) hesiod.c:443 -1
     (nil))

;; Function hesiod_end (hesiod_end, funcdef_no=49, decl_uid=10861, cgraph_uid=49, symbol_order=52)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ context ])
        (reg:DI 5 di [ context ])) hesiod.c:136 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 91)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:138 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 87 [ save_errno ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 91)) [3 errno+0 S4 A32])) hesiod.c:138 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 92)
        (mem/f:DI (plus:DI (reg/v/f:DI 90 [ context ])
                (const_int 8 [0x8])) [2 MEM[(struct hesiod_p *)context_1(D)].RHS+0 S8 A64])) hesiod.c:140 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 92)) hesiod.c:140 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 90 [ context ]) [2 MEM[(struct hesiod_p *)context_1(D)].LHS+0 S8 A64])) hesiod.c:141 -1
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ context ])) hesiod.c:142 -1
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:142 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:143 -1
     (nil))
(insn 16 15 0 2 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 93)) [3 errno+0 S4 A32])
        (reg/v:SI 87 [ save_errno ])) hesiod.c:143 -1
     (nil))

;; Function hesiod_init (hesiod_init, funcdef_no=48, decl_uid=10859, cgraph_uid=48, symbol_order=51)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Edge 2->15 redirected to 19


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 6->14 redirected to 15
Edge 8->14 redirected to 15
deleting block 14
Removing jump 83.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 100 [ context ])
        (reg:DI 5 di [ context ])) hesiod.c:77 -1
     (nil))
(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 11 2 (set (reg:DI 5 di)
        (const_int 24 [0x18])) hesiod.c:82 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) hesiod.c:82 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 101)
        (reg:DI 0 ax)) hesiod.c:82 -1
     (expr_list:REG_NOALIAS (reg/f:DI 101)
        (nil)))
(insn 13 12 14 2 (set (reg/v/f:DI 89 [ ctx ])
        (reg/f:DI 101)) hesiod.c:82 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ ctx ])
            (const_int 0 [0]))) hesiod.c:83 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 108)
            (pc))) hesiod.c:83 612 {*jcc_1}
     (int_list:REG_BR_PROB 177 (nil))
 -> 108)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (mem/f:DI (reg/v/f:DI 89 [ ctx ]) [2 ctx_8->LHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:86 -1
     (nil))
(insn 18 17 19 4 (set (mem/f:DI (plus:DI (reg/v/f:DI 89 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_8->RHS+0 S8 A64])
        (const_int 0 [0])) hesiod.c:87 -1
     (nil))
(insn 19 18 20 4 (set (mem:SI (plus:DI (reg/v/f:DI 89 [ ctx ])
                (const_int 16 [0x10])) [3 ctx_8->classes+0 S4 A64])
        (const_int 1 [0x1])) hesiod.c:89 -1
     (nil))
(insn 20 19 21 4 (set (mem:SI (plus:DI (reg/v/f:DI 89 [ ctx ])
                (const_int 20 [0x14])) [3 ctx_8->classes+4 S4 A32])
        (const_int 4 [0x4])) hesiod.c:90 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b75d752dcf0 *.LC10>)) hesiod.c:92 -1
     (nil))
(call_insn 22 21 23 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__libc_secure_getenv") [flags 0x41]  <function_decl 0x2b75d70e8af8 __libc_secure_getenv>) [0 __libc_secure_getenv S1 A8])
            (const_int 0 [0]))) hesiod.c:92 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__libc_secure_getenv") [flags 0x41]  <function_decl 0x2b75d70e8af8 __libc_secure_getenv>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg/v/f:DI 87 [ configname ])
        (reg:DI 0 ax)) hesiod.c:92 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ configname ])
            (const_int 0 [0]))) hesiod.c:93 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) hesiod.c:93 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 27)
(note 26 25 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 26 27 5 (set (reg/v/f:DI 87 [ configname ])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2b75d752dc60 *.LC9>)) hesiod.c:94 -1
     (nil))
(code_label 27 4 28 6 119 "" [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:DI 4 si)
        (reg/v/f:DI 87 [ configname ])) hesiod.c:95 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ctx ])) hesiod.c:95 -1
     (nil))
(call_insn 31 30 32 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("parse_config_file") [flags 0x3]  <function_decl 0x2b75d73f5000 parse_config_file>) [0 parse_config_file S1 A8])
            (const_int 0 [0]))) hesiod.c:95 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("parse_config_file") [flags 0x3]  <function_decl 0x2b75d73f5000 parse_config_file>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 6 (set (reg:SI 90 [ D.11389 ])
        (reg:SI 0 ax)) hesiod.c:95 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 90 [ D.11389 ])
            (const_int 0 [0]))) hesiod.c:95 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 87)
            (pc))) hesiod.c:95 612 {*jcc_1}
     (int_list:REG_BR_PROB 152 (nil))
 -> 87)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b75d752dd80 *.LC11>)) hesiod.c:102 -1
     (nil))
(call_insn 37 36 38 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__libc_secure_getenv") [flags 0x41]  <function_decl 0x2b75d70e8af8 __libc_secure_getenv>) [0 __libc_secure_getenv S1 A8])
            (const_int 0 [0]))) hesiod.c:102 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__libc_secure_getenv") [flags 0x41]  <function_decl 0x2b75d70e8af8 __libc_secure_getenv>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 7 (set (reg/v/f:DI 91 [ cp ])
        (reg:DI 0 ax)) hesiod.c:102 -1
     (nil))
(insn 39 38 40 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ cp ])
            (const_int 0 [0]))) hesiod.c:102 -1
     (nil))
(jump_insn 40 39 41 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) hesiod.c:102 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 76)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:DI 102)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_8->RHS+0 S8 A64])) hesiod.c:103 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 5 di)
        (reg:DI 102)) hesiod.c:103 -1
     (nil))
(call_insn 44 43 45 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 8 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ cp ])) hesiod.c:104 -1
     (nil))
(call_insn/i 46 45 47 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) hesiod.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 8 (set (reg:DI 104)
        (reg:DI 0 ax)) hesiod.c:104 -1
     (nil))
(insn 48 47 49 8 (set (reg:DI 105)
        (reg:DI 104)) hesiod.c:104 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 93 [ D.11391 ])
        (reg:DI 105)) hesiod.c:104 -1
     (nil))
(insn 50 49 51 8 (parallel [
            (set (reg:DI 106 [ D.11391 ])
                (plus:DI (reg:DI 93 [ D.11391 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:104 -1
     (nil))
(insn 51 50 52 8 (set (reg:DI 5 di)
        (reg:DI 106 [ D.11391 ])) hesiod.c:104 -1
     (nil))
(call_insn 52 51 53 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) hesiod.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 54 8 (set (reg/f:DI 107)
        (reg:DI 0 ax)) hesiod.c:104 -1
     (expr_list:REG_NOALIAS (reg/f:DI 107)
        (nil)))
(insn 54 53 55 8 (set (reg/f:DI 95 [ D.11392 ])
        (reg/f:DI 107)) hesiod.c:104 -1
     (nil))
(insn 55 54 56 8 (set (mem/f:DI (plus:DI (reg/v/f:DI 89 [ ctx ])
                (const_int 8 [0x8])) [2 ctx_8->RHS+0 S8 A64])
        (reg/f:DI 95 [ D.11392 ])) hesiod.c:104 -1
     (nil))
(insn 56 55 57 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.11392 ])
            (const_int 0 [0]))) hesiod.c:105 -1
     (nil))
(jump_insn 57 56 58 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 87)
            (pc))) hesiod.c:105 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 87)
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 91 [ cp ]) [0 *cp_18+0 S1 A8])
            (const_int 46 [0x2e]))) hesiod.c:107 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) hesiod.c:107 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 67)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ cp ])) hesiod.c:108 -1
     (nil))
(insn 63 62 64 10 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.11392 ])) hesiod.c:108 -1
     (nil))
(call_insn 64 63 65 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 65 64 66 10 (set (pc)
        (label_ref 96)) -1
     (nil)
 -> 96)
(barrier 66 65 67)
(code_label 67 66 68 11 122 "" [1 uses])
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (set (mem:QI (reg/f:DI 95 [ D.11392 ]) [0 MEM[(char *)_24]+0 S1 A64])
        (const_int 46 [0x2e])) hesiod.c:110 -1
     (nil))
(insn 70 69 71 11 (parallel [
            (set (reg:DI 108 [ D.11390 ])
                (plus:DI (reg/f:DI 95 [ D.11392 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:111 -1
     (nil))
(insn 71 70 72 11 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ cp ])) hesiod.c:111 -1
     (nil))
(insn 72 71 73 11 (set (reg:DI 5 di)
        (reg:DI 108 [ D.11390 ])) hesiod.c:111 -1
     (nil))
(call_insn 73 72 74 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(jump_insn 74 73 75 11 (set (pc)
        (label_ref 96)) hesiod.c:111 -1
     (nil)
 -> 96)
(barrier 75 74 76)
(code_label 76 75 77 12 121 "" [1 uses])
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 89 [ ctx ])
                    (const_int 8 [0x8])) [2 ctx_8->RHS+0 S8 A64])
            (const_int 0 [0]))) hesiod.c:119 -1
     (nil))
(jump_insn 79 78 80 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) hesiod.c:119 -1
     (int_list:REG_BR_PROB 9759 (nil))
 -> 96)
(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 13 (set (reg:DI 109)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:120 -1
     (nil))
(insn 82 81 87 13 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 109)) [3 errno+0 S4 A32])
        (const_int 8 [0x8])) hesiod.c:120 -1
     (nil))
(code_label 87 82 88 15 124 ("cleanup") [2 uses])
(note 88 87 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 15 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ctx ])) hesiod.c:128 -1
     (nil))
(call_insn 90 89 7 15 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x3]  <function_decl 0x2b75d73efbd0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) hesiod.c:128 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x3]  <function_decl 0x2b75d73efbd0 hesiod_end>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 90 105 15 (set (reg:SI 88 [ D.11389 ])
        (const_int -1 [0xffffffffffffffff])) hesiod.c:129 -1
     (nil))
(jump_insn 105 7 106 15 (set (pc)
        (label_ref 91)) hesiod.c:129 -1
     (nil)
 -> 91)
(barrier 106 105 108)
(code_label 108 106 107 16 125 "" [1 uses])
(note 107 108 5 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 5 107 91 16 (set (reg:SI 88 [ D.11389 ])
        (const_int -1 [0xffffffffffffffff])) hesiod.c:84 -1
     (nil))
(code_label 91 5 92 17 118 "" [2 uses])
(note 92 91 93 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 17 (set (reg:SI 99 [ <retval> ])
        (reg:SI 88 [ D.11389 ])) -1
     (nil))
(jump_insn 94 93 95 17 (set (pc)
        (label_ref 101)) -1
     (nil)
 -> 101)
(barrier 95 94 96)
(code_label 96 95 97 18 123 "" [3 uses])
(note 97 96 98 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 6 18 (set (mem/f:DI (reg/v/f:DI 100 [ context ]) [2 *context_32(D)+0 S8 A64])
        (reg/v/f:DI 89 [ ctx ])) hesiod.c:124 -1
     (nil))
(insn 6 98 99 18 (set (reg:SI 88 [ D.11389 ])
        (const_int 0 [0])) hesiod.c:125 -1
     (nil))
(jump_insn 99 6 100 18 (set (pc)
        (label_ref 91)) hesiod.c:125 -1
     (nil)
 -> 91)
(barrier 100 99 101)
(code_label 101 100 104 19 117 "" [1 uses])
(note 104 101 102 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 102 104 103 19 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) hesiod.c:130 -1
     (nil))
(insn 103 102 0 19 (use (reg/i:SI 0 ax)) hesiod.c:130 -1
     (nil))

;; Function hesiod_free_list (hesiod_free_list, funcdef_no=52, decl_uid=10872, cgraph_uid=52, symbol_order=55)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 6->7 to 4 failed.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 4 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 89 [ context ])
        (reg:DI 5 di [ context ])) hesiod.c:228 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ list ])
        (reg:DI 4 si [ list ])) hesiod.c:228 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg/f:DI 88 [ D.11404 ])
        (mem/f:DI (reg/v/f:DI 90 [ list ]) [2 *list_3(D)+0 S8 A64])) hesiod.c:231 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.11404 ])
            (const_int 0 [0]))) hesiod.c:231 -1
     (nil))
(jump_insn 10 9 25 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) hesiod.c:231 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 15)
(code_label 25 10 11 4 135 "" [1 uses])
(note 11 25 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ list ])) hesiod.c:233 -1
     (nil))
(call_insn/j 13 12 14 4 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:233 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 14 13 15)
(code_label 15 14 16 5 133 "" [1 uses])
(note 16 15 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 16 22 5 (set (reg/v/f:DI 87 [ list ])
        (reg/v/f:DI 90 [ list ])) hesiod.c:231 -1
     (nil))
(code_label 22 5 17 6 134 "" [1 uses])
(note 17 22 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.11404 ])) hesiod.c:232 -1
     (nil))
(call_insn 19 18 20 6 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 6 (parallel [
            (set (reg/v/f:DI 87 [ list ])
                (plus:DI (reg/v/f:DI 87 [ list ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:231 -1
     (nil))
(insn 21 20 23 6 (set (reg/f:DI 88 [ D.11404 ])
        (mem/f:DI (reg/v/f:DI 87 [ list ]) [2 MEM[base: list_7, offset: 0B]+0 S8 A64])) hesiod.c:231 -1
     (nil))
(insn 23 21 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.11404 ])
            (const_int 0 [0]))) hesiod.c:231 -1
     (nil))
(jump_insn 24 23 28 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) hesiod.c:231 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 22)
(note 28 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 26 28 27 7 (set (pc)
        (label_ref 25)) -1
     (nil)
 -> 25)
(barrier 27 26 0)

;; Function hesiod_to_bind (hesiod_to_bind, funcdef_no=50, decl_uid=10865, cgraph_uid=50, symbol_order=53)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21
Edge 3->8 redirected to 24
Edge 8->10 redirected to 25
Edge 11->21 redirected to 26
Edge 14->16 redirected to 27
Edge 17->19 redirected to 28
Edge 19->21 redirected to 29


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 155.
Merging block 29 into block 28...
Merged blocks 28 and 29.
Merged 28 and 29 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 15 NOTE_INSN_DELETED)
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 15 3 2 (set (reg/v/f:DI 114 [ context ])
        (reg:DI 5 di [ context ])) hesiod.c:151 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 115 [ name ])
        (reg:DI 4 si [ name ])) hesiod.c:151 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 116 [ type ])
        (reg:DI 1 dx [ type ])) hesiod.c:151 -1
     (nil))
(note 5 4 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 5 18 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) hesiod.c:159 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 115 [ name ])) hesiod.c:159 -1
     (nil))
(call_insn/i 19 18 20 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b75d6e0cd80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) hesiod.c:159 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b75d6e0cd80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 20 19 21 2 (set (reg/v/f:DI 89 [ cp ])
        (reg:DI 0 ax)) hesiod.c:159 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ cp ])
            (const_int 0 [0]))) hesiod.c:159 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) hesiod.c:159 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 49)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg/v/f:DI 88 [ RHS ])
                (plus:DI (reg/v/f:DI 89 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:160 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 4 si)
        (const_int 46 [0x2e])) hesiod.c:160 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ RHS ])) hesiod.c:160 -1
     (nil))
(call_insn/i 27 26 28 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b75d6e0cd80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) hesiod.c:160 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b75d6e0cd80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 28 27 29 4 (set (reg/f:DI 93 [ D.11409 ])
        (reg:DI 0 ax)) hesiod.c:160 -1
     (nil))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.11409 ])
            (const_int 0 [0]))) hesiod.c:160 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) hesiod.c:160 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 164)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b75d754a480 *.LC14>)) hesiod.c:162 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ RHS ])) hesiod.c:162 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ context ])) hesiod.c:162 -1
     (nil))
(call_insn 35 34 36 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_resolve") [flags 0x3]  <function_decl 0x2b75d73efd80 hesiod_resolve>) [0 hesiod_resolve S1 A8])
            (const_int 0 [0]))) hesiod.c:162 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_resolve") [flags 0x3]  <function_decl 0x2b75d73efd80 hesiod_resolve>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 5 (set (reg/v/f:DI 87 [ rhs_list ])
        (reg:DI 0 ax)) hesiod.c:162 -1
     (nil))
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ rhs_list ])
            (const_int 0 [0]))) hesiod.c:162 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) hesiod.c:162 -1
     (int_list:REG_BR_PROB 192 (nil))
 -> 43)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/v/f:DI 88 [ RHS ])
        (mem/f:DI (reg/v/f:DI 87 [ rhs_list ]) [2 *rhs_list_21+0 S8 A64])) hesiod.c:164 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
(barrier 42 41 43)
(code_label 43 42 44 7 143 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:DI 117)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:166 -1
     (nil))
(insn 46 45 47 7 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 117)) [3 errno+0 S4 A32])
        (const_int 2 [0x2])) hesiod.c:166 -1
     (nil))
(jump_insn 47 46 48 7 (set (pc)
        (label_ref 152)) hesiod.c:167 -1
     (nil)
 -> 152)
(barrier 48 47 49)
(code_label 49 48 50 8 141 "" [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/v/f:DI 88 [ RHS ])
        (mem/f:DI (plus:DI (reg/v/f:DI 114 [ context ])
                (const_int 8 [0x8])) [2 MEM[(struct hesiod_p *)context_14(D)].RHS+0 S8 A64])) hesiod.c:170 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (reg/v/f:DI 115 [ name ])) hesiod.c:171 -1
     (nil))
(call_insn/i 53 52 54 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) hesiod.c:171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 8 (set (reg:DI 119)
        (reg:DI 0 ax)) hesiod.c:171 -1
     (nil))
(insn 55 54 56 8 (set (reg:DI 120)
        (reg:DI 119)) hesiod.c:171 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 95 [ D.11410 ])
        (reg:DI 120)) hesiod.c:171 -1
     (nil))
(insn 57 56 6 8 (parallel [
            (set (reg/v/f:DI 89 [ cp ])
                (plus:DI (reg/v/f:DI 115 [ name ])
                    (reg:DI 95 [ D.11410 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:171 -1
     (nil))
(insn 6 57 161 8 (set (reg/v/f:DI 87 [ rhs_list ])
        (const_int 0 [0])) hesiod.c:154 -1
     (nil))
(jump_insn 161 6 162 8 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
(barrier 162 161 164)
(code_label 164 162 163 9 150 "" [1 uses])
(note 163 164 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 163 58 9 (set (reg/v/f:DI 87 [ rhs_list ])
        (const_int 0 [0])) hesiod.c:154 -1
     (nil))
(code_label 58 7 59 10 142 "" [2 uses])
(note 59 58 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 10 (parallel [
            (set (reg:DI 99 [ D.11410 ])
                (minus:DI (reg/v/f:DI 89 [ cp ])
                    (reg/v/f:DI 115 [ name ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:178 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 5 di)
        (reg/v/f:DI 116 [ type ])) hesiod.c:178 -1
     (nil))
(call_insn/i 62 61 63 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) hesiod.c:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 10 (set (reg:DI 122)
        (reg:DI 0 ax)) hesiod.c:178 -1
     (nil))
(insn 64 63 65 10 (set (reg:DI 123)
        (reg:DI 122)) hesiod.c:178 -1
     (nil))
(insn 65 64 66 10 (set (reg:DI 100 [ D.11410 ])
        (reg:DI 123)) hesiod.c:178 -1
     (nil))
(insn 66 65 67 10 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ RHS ])) hesiod.c:178 -1
     (nil))
(call_insn/i 67 66 68 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) hesiod.c:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 68 67 69 10 (set (reg:DI 125)
        (reg:DI 0 ax)) hesiod.c:178 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 126)
        (reg:DI 125)) hesiod.c:178 -1
     (nil))
(insn 70 69 71 10 (set (reg:DI 101 [ D.11410 ])
        (reg:DI 126)) hesiod.c:178 -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 127 [ D.11410 ])
                (plus:DI (reg:DI 100 [ D.11410 ])
                    (reg:DI 101 [ D.11410 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg:DI 110 [ D.11410 ])
                (plus:DI (reg:DI 127 [ D.11410 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 73 72 74 10 (set (reg/f:DI 102 [ D.11409 ])
        (mem/f:DI (reg/v/f:DI 114 [ context ]) [2 MEM[(struct hesiod_p *)context_14(D)].LHS+0 S8 A64])) hesiod.c:179 -1
     (nil))
(insn 74 73 75 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102 [ D.11409 ])
            (const_int 0 [0]))) hesiod.c:179 -1
     (nil))
(jump_insn 75 74 76 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 168)
            (pc))) hesiod.c:179 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 168)
(note 76 75 77 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 11 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.11409 ])) hesiod.c:179 -1
     (nil))
(call_insn/i 78 77 79 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) hesiod.c:179 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b75d6e0f948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 11 (set (reg:DI 129)
        (reg:DI 0 ax)) hesiod.c:179 -1
     (nil))
(insn 80 79 81 11 (set (reg:DI 130)
        (reg:DI 129)) hesiod.c:179 -1
     (nil))
(insn 81 80 165 11 (set (reg:DI 94 [ D.11410 ])
        (reg:DI 130)) hesiod.c:179 -1
     (nil))
(jump_insn 165 81 166 11 (set (pc)
        (label_ref 82)) -1
     (nil)
 -> 82)
(barrier 166 165 168)
(code_label 168 166 167 12 151 "" [1 uses])
(note 167 168 8 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 8 167 82 12 (set (reg:DI 94 [ D.11410 ])
        (const_int 0 [0])) hesiod.c:179 -1
     (nil))
(code_label 82 8 83 13 145 "" [1 uses])
(note 83 82 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 13 (parallel [
            (set (reg:DI 131 [ D.11410 ])
                (plus:DI (reg:DI 99 [ D.11410 ])
                    (reg:DI 110 [ D.11410 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:178 -1
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:DI 132 [ D.11410 ])
                (plus:DI (reg:DI 131 [ D.11410 ])
                    (reg:DI 94 [ D.11410 ])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:178 -1
     (nil))
(insn 86 85 87 13 (set (reg:DI 5 di)
        (reg:DI 132 [ D.11410 ])) hesiod.c:178 -1
     (nil))
(call_insn 87 86 88 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) hesiod.c:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b75d6e35360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 88 87 89 13 (set (reg/f:DI 133)
        (reg:DI 0 ax)) hesiod.c:178 -1
     (expr_list:REG_NOALIAS (reg/f:DI 133)
        (nil)))
(insn 89 88 90 13 (set (reg/v/f:DI 104 [ bindname ])
        (reg/f:DI 133)) hesiod.c:178 -1
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ bindname ])
            (const_int 0 [0]))) hesiod.c:178 -1
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) hesiod.c:178 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 101)
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ rhs_list ])
            (const_int 0 [0]))) hesiod.c:180 -1
     (nil))
(jump_insn 94 93 95 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 172)
            (pc))) hesiod.c:180 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 172)
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 15 (set (reg:DI 4 si)
        (reg/v/f:DI 87 [ rhs_list ])) hesiod.c:181 -1
     (nil))
(insn 97 96 98 15 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ context ])) hesiod.c:181 -1
     (nil))
(call_insn 98 97 11 15 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x3]  <function_decl 0x2b75d73efe58 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) hesiod.c:181 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x3]  <function_decl 0x2b75d73efe58 hesiod_free_list>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 98 99 15 (set (reg/f:DI 93 [ D.11409 ])
        (const_int 0 [0])) hesiod.c:182 -1
     (nil))
(jump_insn 99 11 100 15 (set (pc)
        (label_ref 152)) hesiod.c:181 -1
     (nil)
 -> 152)
(barrier 100 99 101)
(code_label 101 100 102 16 146 "" [1 uses])
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:DI 1 dx)
        (reg:DI 99 [ D.11410 ])) hesiod.c:186 -1
     (nil))
(insn 104 103 105 16 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ name ])) hesiod.c:186 -1
     (nil))
(insn 105 104 106 16 (set (reg:DI 5 di)
        (reg/v/f:DI 104 [ bindname ])) hesiod.c:186 -1
     (nil))
(call_insn 106 105 107 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mempcpy") [flags 0x41]  <function_decl 0x2b75d6fef798 __mempcpy>) [0 __mempcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:186 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mempcpy") [flags 0x41]  <function_decl 0x2b75d6fef798 __mempcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 107 106 108 16 (set (reg/v/f:DI 105 [ endp ])
        (reg:DI 0 ax)) hesiod.c:186 -1
     (nil))
(insn 108 107 109 16 (parallel [
            (set (reg/v/f:DI 106 [ endp ])
                (plus:DI (reg/v/f:DI 105 [ endp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:187 -1
     (nil))
(insn 109 108 110 16 (set (mem:QI (reg/v/f:DI 105 [ endp ]) [0 *endp_44+0 S1 A8])
        (const_int 46 [0x2e])) hesiod.c:187 -1
     (nil))
(insn 110 109 111 16 (set (reg:DI 4 si)
        (reg/v/f:DI 116 [ type ])) hesiod.c:188 -1
     (nil))
(insn 111 110 112 16 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ endp ])) hesiod.c:188 -1
     (nil))
(call_insn 112 111 113 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2b75d6e0c6c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:188 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2b75d6e0c6c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 113 112 114 16 (set (reg:DI 134)
        (reg:DI 0 ax)) hesiod.c:188 -1
     (nil))
(insn 114 113 115 16 (set (reg:DI 135)
        (reg:DI 134)) hesiod.c:188 -1
     (nil))
(insn 115 114 116 16 (set (reg/v/f:DI 91 [ endp ])
        (reg:DI 135)) hesiod.c:188 -1
     (nil))
(insn 116 115 117 16 (set (reg/f:DI 112 [ D.11409 ])
        (mem/f:DI (reg/v/f:DI 114 [ context ]) [2 MEM[(struct hesiod_p *)context_14(D)].LHS+0 S8 A64])) hesiod.c:189 -1
     (nil))
(insn 117 116 118 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 112 [ D.11409 ])
            (const_int 0 [0]))) hesiod.c:189 -1
     (nil))
(jump_insn 118 117 119 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) hesiod.c:189 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 134)
(note 119 118 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 112 [ D.11409 ]) [0 *_49+0 S1 A8])
            (const_int 46 [0x2e]))) hesiod.c:190 -1
     (nil))
(jump_insn 121 120 122 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 176)
            (pc))) hesiod.c:190 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 176)
(note 122 121 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (parallel [
            (set (reg/v/f:DI 90 [ endp ])
                (plus:DI (reg/v/f:DI 91 [ endp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:191 -1
     (nil))
(insn 124 123 125 18 (set (mem:QI (reg/v/f:DI 91 [ endp ]) [0 *endp_48+0 S1 A8])
        (const_int 46 [0x2e])) hesiod.c:191 -1
     (nil))
(insn 125 124 173 18 (set (reg/f:DI 112 [ D.11409 ])
        (mem/f:DI (reg/v/f:DI 114 [ context ]) [2 MEM[(struct hesiod_p *)context_14(D)].LHS+0 S8 A64])) -1
     (nil))
(jump_insn 173 125 174 18 (set (pc)
        (label_ref 126)) -1
     (nil)
 -> 126)
(barrier 174 173 176)
(code_label 176 174 175 19 153 "" [1 uses])
(note 175 176 9 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 9 175 126 19 (set (reg/v/f:DI 90 [ endp ])
        (reg/v/f:DI 91 [ endp ])) hesiod.c:188 -1
     (nil))
(code_label 126 9 127 20 148 "" [1 uses])
(note 127 126 128 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 20 (set (reg:DI 4 si)
        (reg/f:DI 112 [ D.11409 ])) hesiod.c:192 -1
     (nil))
(insn 129 128 130 20 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ endp ])) hesiod.c:192 -1
     (nil))
(call_insn 130 129 131 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2b75d6e0c6c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2b75d6e0c6c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 131 130 132 20 (set (reg:DI 136)
        (reg:DI 0 ax)) hesiod.c:192 -1
     (nil))
(insn 132 131 133 20 (set (reg:DI 137)
        (reg:DI 136)) hesiod.c:192 -1
     (nil))
(insn 133 132 134 20 (set (reg/v/f:DI 91 [ endp ])
        (reg:DI 137)) hesiod.c:192 -1
     (nil))
(code_label 134 133 135 21 147 "" [1 uses])
(note 135 134 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 88 [ RHS ]) [0 *RHS_2+0 S1 A8])
            (const_int 46 [0x2e]))) hesiod.c:194 -1
     (nil))
(jump_insn 137 136 138 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 180)
            (pc))) hesiod.c:194 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 180)
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (parallel [
            (set (reg/v/f:DI 92 [ endp ])
                (plus:DI (reg/v/f:DI 91 [ endp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) hesiod.c:195 -1
     (nil))
(insn 140 139 177 22 (set (mem:QI (reg/v/f:DI 91 [ endp ]) [0 *endp_5+0 S1 A8])
        (const_int 46 [0x2e])) hesiod.c:195 -1
     (nil))
(jump_insn 177 140 178 22 (set (pc)
        (label_ref 141)) -1
     (nil)
 -> 141)
(barrier 178 177 180)
(code_label 180 178 179 23 154 "" [1 uses])
(note 179 180 10 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 10 179 141 23 (set (reg/v/f:DI 92 [ endp ])
        (reg/v/f:DI 91 [ endp ])) -1
     (nil))
(code_label 141 10 142 24 149 "" [1 uses])
(note 142 141 143 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 24 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ RHS ])) hesiod.c:196 -1
     (nil))
(insn 144 143 145 24 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ endp ])) hesiod.c:196 -1
     (nil))
(call_insn 145 144 146 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) hesiod.c:196 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2b75d6e0f288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 146 145 147 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ rhs_list ])
            (const_int 0 [0]))) hesiod.c:198 -1
     (nil))
(jump_insn 147 146 148 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 184)
            (pc))) hesiod.c:198 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 184)
(note 148 147 149 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 25 (set (reg:DI 4 si)
        (reg/v/f:DI 87 [ rhs_list ])) hesiod.c:199 -1
     (nil))
(insn 150 149 151 25 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ context ])) hesiod.c:199 -1
     (nil))
(call_insn 151 150 12 25 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x3]  <function_decl 0x2b75d73efe58 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) hesiod.c:199 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x3]  <function_decl 0x2b75d73efe58 hesiod_free_list>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 151 169 25 (set (reg/f:DI 93 [ D.11409 ])
        (reg/v/f:DI 104 [ bindname ])) hesiod.c:199 -1
     (nil))
(jump_insn 169 12 170 25 (set (pc)
        (label_ref 152)) -1
     (nil)
 -> 152)
(barrier 170 169 172)
(code_label 172 170 171 26 152 "" [1 uses])
(note 171 172 14 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 14 171 181 26 (set (reg/f:DI 93 [ D.11409 ])
        (const_int 0 [0])) hesiod.c:182 -1
     (nil))
(jump_insn 181 14 182 26 (set (pc)
        (label_ref 152)) -1
     (nil)
 -> 152)
(barrier 182 181 184)
(code_label 184 182 183 27 155 "" [1 uses])
(note 183 184 13 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 13 183 152 27 (set (reg/f:DI 93 [ D.11409 ])
        (reg/v/f:DI 104 [ bindname ])) -1
     (nil))
(code_label 152 13 153 28 144 "" [4 uses])
(note 153 152 154 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 158 28 (set (reg:DI 113 [ <retval> ])
        (reg/f:DI 93 [ D.11409 ])) -1
     (nil))
(insn 158 154 159 28 (set (reg/i:DI 0 ax)
        (reg:DI 113 [ <retval> ])) hesiod.c:202 -1
     (nil))
(insn 159 158 0 28 (use (reg/i:DI 0 ax)) hesiod.c:202 -1
     (nil))

;; Function hesiod_resolve (hesiod_resolve, funcdef_no=51, decl_uid=10869, cgraph_uid=51, symbol_order=54)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Purged non-fallthru edges from bb 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 5->7 redirected to 8
Forwarding edge 6->7 to 8 failed.
Deleted label in block 7.
Removing jump 53.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 97 [ context ])
        (reg:DI 5 di [ context ])) hesiod.c:209 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 98 [ name ])
        (reg:DI 4 si [ name ])) hesiod.c:209 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 99 [ type ])
        (reg:DI 1 dx [ type ])) hesiod.c:209 -1
     (nil))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 99 [ type ])) hesiod.c:211 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ name ])) hesiod.c:211 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 97 [ context ])) hesiod.c:211 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_to_bind") [flags 0x3]  <function_decl 0x2b75d73efca8 hesiod_to_bind>) [0 hesiod_to_bind S1 A8])
            (const_int 0 [0]))) hesiod.c:211 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_to_bind") [flags 0x3]  <function_decl 0x2b75d73efca8 hesiod_to_bind>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (reg/v/f:DI 89 [ bindname ])
        (reg:DI 0 ax)) hesiod.c:211 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ bindname ])
            (const_int 0 [0]))) hesiod.c:214 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) hesiod.c:214 612 {*jcc_1}
     (int_list:REG_BR_PROB 458 (nil))
 -> 62)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:SI 100)
        (mem:SI (plus:DI (reg/v/f:DI 97 [ context ])
                (const_int 16 [0x10])) [3 MEM[(struct hesiod_p *)context_5(D)].classes+0 S4 A64])) hesiod.c:217 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg/v/f:DI 89 [ bindname ])) hesiod.c:217 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 5 di)
        (reg:SI 100)) hesiod.c:217 -1
     (nil))
(call_insn 21 20 22 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_txt_records.isra.0") [flags 0x3]  <function_decl 0x2b75d742e438 get_txt_records.isra.0>) [0 get_txt_records.isra.0 S1 A8])
            (const_int 0 [0]))) hesiod.c:217 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_txt_records.isra.0") [flags 0x3]  <function_decl 0x2b75d742e438 get_txt_records.isra.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 22 21 23 4 (set (reg/v/f:DI 87 [ retvec ])
        (reg:DI 0 ax)) hesiod.c:217 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ retvec ])
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) hesiod.c:219 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 46)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b75d717b480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [6  S8 A8])) hesiod.c:219 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 91 [ D.11417 ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 101)) [3 errno+0 S4 A32])) hesiod.c:219 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.11417 ])
            (const_int 2 [0x2]))) hesiod.c:219 -1
     (nil))
(insn 29 28 30 5 (set (reg:QI 103 [ D.11418 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ D.11418 ])
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(jump_insn 31 30 63 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 65)
            (pc))) hesiod.c:219 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 65)
(note 63 31 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 63 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.11417 ])
            (const_int 111 [0x6f]))) hesiod.c:219 -1
     (nil))
(insn 33 32 34 6 (set (reg:QI 105 [ D.11418 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ D.11418 ])
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(jump_insn 35 34 64 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) hesiod.c:219 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 46)
(note 64 35 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(code_label 65 64 37 8 171 "" [1 uses])
(note 37 65 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 8 (set (reg:SI 95 [ D.11417 ])
        (mem:SI (plus:DI (reg/v/f:DI 97 [ context ])
                (const_int 20 [0x14])) [3 MEM[(struct hesiod_p *)context_5(D)].classes+4 S4 A32])) hesiod.c:219 -1
     (nil))
(insn 39 38 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.11417 ])
            (const_int 0 [0]))) hesiod.c:219 -1
     (nil))
(jump_insn 40 39 41 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) hesiod.c:219 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 46)
(note 41 40 42 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 9 (set (reg:DI 4 si)
        (reg/v/f:DI 89 [ bindname ])) hesiod.c:220 -1
     (nil))
(insn 43 42 44 9 (set (reg:SI 5 di)
        (reg:SI 95 [ D.11417 ])) hesiod.c:220 -1
     (nil))
(call_insn 44 43 45 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_txt_records.isra.0") [flags 0x3]  <function_decl 0x2b75d742e438 get_txt_records.isra.0>) [0 get_txt_records.isra.0 S1 A8])
            (const_int 0 [0]))) hesiod.c:220 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("get_txt_records.isra.0") [flags 0x3]  <function_decl 0x2b75d742e438 get_txt_records.isra.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 45 44 46 9 (set (reg/v/f:DI 87 [ retvec ])
        (reg:DI 0 ax)) hesiod.c:220 -1
     (nil))
(code_label 46 45 47 10 168 "" [3 uses])
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ bindname ])) hesiod.c:223 -1
     (nil))
(call_insn 49 48 7 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) hesiod.c:223 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b75d6e2be58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 49 59 10 (set (reg/f:DI 88 [ D.11416 ])
        (reg/v/f:DI 87 [ retvec ])) hesiod.c:224 -1
     (nil))
(jump_insn 59 7 60 10 (set (pc)
        (label_ref 50)) hesiod.c:224 -1
     (nil)
 -> 50)
(barrier 60 59 62)
(code_label 62 60 61 11 170 "" [1 uses])
(note 61 62 6 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 6 61 50 11 (set (reg/f:DI 88 [ D.11416 ])
        (const_int 0 [0])) hesiod.c:215 -1
     (nil))
(code_label 50 6 51 12 167 "" [1 uses])
(note 51 50 52 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 12 (set (reg:DI 96 [ <retval> ])
        (reg/f:DI 88 [ D.11416 ])) -1
     (nil))
(insn 56 52 57 12 (set (reg/i:DI 0 ax)
        (reg:DI 96 [ <retval> ])) hesiod.c:225 -1
     (nil))
(insn 57 56 0 12 (use (reg/i:DI 0 ax)) hesiod.c:225 -1
     (nil))
