
;; Function _nss_files_parse_servent (_nss_files_parse_servent, funcdef_no=52, decl_uid=10182, cgraph_uid=52, symbol_order=55)

Partition 0: size 8 align 8
	endp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61
Edge 2->4 redirected to 73
Edge 36->38 redirected to 75
Edge 48->39 redirected to 76
Edge 52->54 redirected to 77


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 14->15 to 71 failed.
Forwarding edge 24->25 to 73 failed.
Forwarding edge 41->42 to 48 failed.
Forwarding edge 64->65 to 59 failed.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 71 failed.
Forwarding edge 24->25 to 73 failed.
Forwarding edge 41->42 to 48 failed.
Forwarding edge 64->65 to 59 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 46 NOTE_INSN_DELETED)
(note 46 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 46 25 2 (set (reg/v/f:DI 199 [ line ])
        (reg:DI 5 di [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 200 [ result ])
        (reg:DI 4 si [ result ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 201 [ data ])
        (reg:DI 1 dx [ data ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:DI 202 [ datalen ])
        (reg:DI 2 cx [ datalen ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 28 27 29 2 (set (reg/v/f:DI 203 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(note 29 28 48 2 NOTE_INSN_FUNCTION_BEG)
(insn 48 29 49 2 (parallel [
            (set (reg/v/f:DI 113 [ buf_end ])
                (plus:DI (reg/v/f:DI 201 [ data ])
                    (reg/v:DI 202 [ datalen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 49 48 50 2 (set (reg/v/f:DI 114 [ buf_start ])
        (reg/v/f:DI 201 [ data ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 50 49 51 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 114 [ buf_start ])
            (reg/v/f:DI 199 [ line ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 51 50 52 2 (set (reg:QI 205 [ D.11323 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 52 51 53 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 205 [ D.11323 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 53 52 423 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 411)
            (pc))) nss_hesiod/hesiod-service.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 411)
(note 423 53 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 54 423 55 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 113 [ buf_end ])
            (reg/v/f:DI 199 [ line ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 55 54 56 4 (set (reg:QI 207 [ D.11323 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 56 55 57 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 207 [ D.11323 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 57 56 58 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 411)
            (pc))) nss_hesiod/hesiod-service.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 411)
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 60 59 61 5 (set (reg:DI 5 di)
        (reg/v/f:DI 199 [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(call_insn/i 61 60 62 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2aafc011bbd0 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2aafc011bbd0 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 62 61 63 5 (set (reg/f:DI 115 [ D.11322 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 63 62 408 5 (parallel [
            (set (reg/v/f:DI 109 [ buf_start ])
                (plus:DI (reg/f:DI 115 [ D.11322 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 408 63 409 5 (set (pc)
        (label_ref 64)) nss_hesiod/hesiod-service.c:39 -1
     (nil)
 -> 64)
(barrier 409 408 411)
(code_label 411 409 410 6 43 "" [2 uses])
(note 410 411 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 410 64 6 (set (reg/v/f:DI 109 [ buf_start ])
        (reg/v/f:DI 114 [ buf_start ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(code_label 64 30 65 7 2 "" [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2aafc05aa870 *.LC0>)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 67 66 68 7 (set (reg:DI 5 di)
        (reg/v/f:DI 199 [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(call_insn/i 68 67 69 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strpbrk") [flags 0x41]  <function_decl 0x2aafbff291b0 __builtin_strpbrk>) [0 __builtin_strpbrk S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strpbrk") [flags 0x41]  <function_decl 0x2aafbff291b0 __builtin_strpbrk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 69 68 70 7 (set (reg/v/f:DI 117 [ p ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 117 [ p ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 74)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 8 (set (mem:QI (reg/v/f:DI 117 [ p ]) [0 *p_26+0 S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(code_label 74 73 75 9 3 "" [1 uses])
(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 9 (set (mem/f:DI (reg/v/f:DI 200 [ result ]) [1 result_28(D)->s_name+0 S8 A64])
        (reg/v/f:DI 199 [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 77 76 78 9 (set (reg:QI 118 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 *line_160(D)+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 78 77 79 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11324 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 121)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 82 81 83 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 350)
(note 83 82 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 84 83 85 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 85 84 86 11 (set (reg/f:DI 194 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 86 85 87 11 (set (reg/f:DI 195 [ D.11326 ])
        (mem/f:DI (reg/f:DI 194 [ D.11327 ]) [1 *_252+0 S8 A64])) -1
     (nil))
(jump_insn 87 86 88 11 (set (pc)
        (label_ref 97)) -1
     (nil)
 -> 97)
(barrier 88 87 99)
(code_label 99 88 89 12 8 "" [1 uses])
(note 89 99 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 12 (parallel [
            (set (reg/v/f:DI 199 [ line ])
                (plus:DI (reg/v/f:DI 199 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 91 90 92 12 (set (reg:QI 118 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 MEM[base: line_40, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 92 91 93 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11324 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 121)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 354)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 354)
(code_label 97 96 98 14 6 "" [1 uses])
(note 98 97 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 101 14 (set (reg:DI 208 [ D.11325 ])
        (sign_extend:DI (reg:QI 118 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 101 100 102 14 (set (reg:HI 210)
        (mem:HI (plus:DI (mult:DI (reg:DI 208 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 195 [ D.11326 ])) [2 *_38+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 102 101 103 14 (parallel [
            (set (reg:HI 209 [ D.11321 ])
                (and:HI (reg:HI 210)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 208 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 195 [ D.11326 ])) [2 *_38+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 103 102 104 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 209 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 104 103 107 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 99)
(note 107 104 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 105 107 106 15 (set (pc)
        (label_ref 354)) -1
     (nil)
 -> 354)
(barrier 106 105 112)
(code_label 112 106 108 16 9 "" [2 uses])
(note 108 112 358 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(code_label 358 108 109 17 38 "" [1 uses])
(note 109 358 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 17 (parallel [
            (set (reg/v/f:DI 199 [ line ])
                (plus:DI (reg/v/f:DI 199 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 111 110 113 17 (set (reg:QI 124 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 MEM[base: line_43, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 113 111 114 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 114 113 115 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 112)
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (set (reg:DI 211 [ D.11325 ])
        (sign_extend:DI (reg:QI 124 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 117 116 118 18 (set (reg:HI 213)
        (mem:HI (plus:DI (mult:DI (reg:DI 211 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 197 [ D.11326 ])) [2 *_51+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 118 117 119 18 (parallel [
            (set (reg:HI 212 [ D.11321 ])
                (and:HI (reg:HI 213)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 211 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 197 [ D.11326 ])) [2 *_51+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 119 118 120 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 212 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 120 119 121 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 112)
(code_label 121 120 122 19 4 "" [2 uses])
(note 122 121 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 19 (set (mem/f:DI (plus:DI (reg/v/f:DI 200 [ result ])
                (const_int 24 [0x18])) [1 result_28(D)->s_proto+0 S8 A64])
        (reg/v/f:DI 199 [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 124 123 125 19 (set (reg:QI 130 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 *line_66+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 125 124 126 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.11324 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 126 125 127 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 372)
(note 127 126 128 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 129 128 130 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 361)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 361)
(note 130 129 131 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 131 130 132 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 132 131 133 21 (set (reg/f:DI 192 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 133 132 134 21 (set (reg/f:DI 193 [ D.11326 ])
        (mem/f:DI (reg/f:DI 192 [ D.11327 ]) [1 *_244+0 S8 A64])) -1
     (nil))
(jump_insn 134 133 135 21 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
(barrier 135 134 146)
(code_label 146 135 136 22 15 "" [1 uses])
(note 136 146 137 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 22 (parallel [
            (set (reg/v/f:DI 199 [ line ])
                (plus:DI (reg/v/f:DI 199 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 138 137 139 22 (set (reg:QI 130 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 MEM[base: line_62, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 139 138 140 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.11324 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 140 139 141 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 168)
(note 141 140 142 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 130 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 143 142 144 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 365)
(code_label 144 143 145 24 12 "" [1 uses])
(note 145 144 147 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 147 145 148 24 (set (reg:DI 214 [ D.11325 ])
        (sign_extend:DI (reg:QI 130 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 148 147 149 24 (set (reg:HI 216)
        (mem:HI (plus:DI (mult:DI (reg:DI 214 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 193 [ D.11326 ])) [2 *_60+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 149 148 150 24 (parallel [
            (set (reg:HI 215 [ D.11321 ])
                (and:HI (reg:HI 216)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 214 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 193 [ D.11326 ])) [2 *_60+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 150 149 151 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 215 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 151 150 154 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 146)
(note 154 151 152 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 152 154 153 25 (set (pc)
        (label_ref 365)) -1
     (nil)
 -> 365)
(barrier 153 152 159)
(code_label 159 153 155 26 16 "" [2 uses])
(note 155 159 369 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(code_label 369 155 156 27 39 "" [1 uses])
(note 156 369 157 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 27 (parallel [
            (set (reg/v/f:DI 199 [ line ])
                (plus:DI (reg/v/f:DI 199 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 158 157 160 27 (set (reg:QI 136 [ D.11324 ])
        (mem:QI (reg/v/f:DI 199 [ line ]) [0 MEM[base: line_65, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 160 158 161 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 161 160 162 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 159)
(note 162 161 163 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 28 (set (reg:DI 217 [ D.11325 ])
        (sign_extend:DI (reg:QI 136 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 164 163 165 28 (set (reg:HI 219)
        (mem:HI (plus:DI (mult:DI (reg:DI 217 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 196 [ D.11326 ])) [2 *_73+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 165 164 166 28 (parallel [
            (set (reg:HI 218 [ D.11321 ])
                (and:HI (reg:HI 219)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 217 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 196 [ D.11326 ])) [2 *_73+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 166 165 167 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 218 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 167 166 168 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 159)
(code_label 168 167 169 29 13 "" [1 uses])
(note 169 168 170 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 29 (parallel [
            (set (reg:DI 220)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 171 170 172 29 (set (reg:SI 1 dx)
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 172 171 173 29 (set (reg:DI 4 si)
        (reg:DI 220)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 173 172 174 29 (set (reg:DI 5 di)
        (reg/v/f:DI 199 [ line ])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(call_insn 174 173 175 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2aafc0004948 strtoul>) [0 strtoul S1 A8])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2aafc0004948 strtoul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 175 174 176 29 (set (reg/v:DI 162 [ val ])
        (reg:DI 0 ax)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 176 175 177 29 (set (reg:DI 222)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 177 176 178 29 (set (reg:DI 223)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 178 177 179 29 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 162 [ val ])
            (reg:DI 222))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 179 178 180 29 (set (reg:DI 221 [ val ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 162 [ val ])
            (reg:DI 223))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 180 179 385 29 (set (reg/v:HI 110 [ __x ])
        (subreg:HI (reg:DI 221 [ val ]) 0)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(code_label 385 180 181 30 40 "" [1 uses])
(note 181 385 182 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 30 (parallel [
            (set (reg:HI 224 [ __v ])
                (asm_operands:HI ("rorw $8, %w0") ("=r") 0 [
                        (reg/v:HI 110 [ __x ])
                    ]
                     [
                        (asm_input:HI ("0") nss_hesiod/hesiod-service.c:39)
                    ]
                     [] nss_hesiod/hesiod-service.c:39))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 183 182 184 30 (set (reg/v:HI 144 [ __v ])
        (reg:HI 224 [ __v ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 184 183 185 30 (set (reg:SI 225)
        (zero_extend:SI (reg/v:HI 144 [ __v ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 185 184 186 30 (set (mem:SI (plus:DI (reg/v/f:DI 200 [ result ])
                (const_int 16 [0x10])) [3 result_28(D)->s_port+0 S4 A64])
        (reg:SI 225)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 186 185 187 30 (set (reg/f:DI 154 [ D.11328 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 endp+0 S8 A64])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 187 186 188 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 154 [ D.11328 ])
            (reg/v/f:DI 199 [ line ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 188 187 189 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 242)
(note 189 188 190 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 31 (set (reg:QI 146 [ D.11324 ])
        (mem:QI (reg/f:DI 154 [ D.11328 ]) [0 *_88+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 191 190 192 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 192 191 193 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 199)
(note 193 192 194 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 194 193 195 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 195 194 196 32 (set (reg/f:DI 186 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 196 195 197 32 (set (reg/f:DI 148 [ D.11326 ])
        (mem/f:DI (reg/f:DI 186 [ D.11327 ]) [1 *_215+0 S8 A64])) -1
     (nil))
(jump_insn 197 196 198 32 (set (pc)
        (label_ref 209)) -1
     (nil)
 -> 209)
(barrier 198 197 199)
(code_label 199 198 200 33 18 "" [1 uses])
(note 200 199 201 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 201 200 202 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 202 201 203 33 (set (reg/f:DI 147 [ D.11327 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 203 202 204 33 (set (reg/f:DI 148 [ D.11326 ])
        (mem/f:DI (reg/f:DI 147 [ D.11327 ]) [1 *_90+0 S8 A64])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 204 203 205 33 (set (reg:DI 226 [ D.11325 ])
        (sign_extend:DI (reg:QI 146 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 205 204 206 33 (set (reg:HI 228)
        (mem:HI (plus:DI (mult:DI (reg:DI 226 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 148 [ D.11326 ])) [2 *_94+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 206 205 207 33 (parallel [
            (set (reg:HI 227 [ D.11321 ])
                (and:HI (reg:HI 228)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 226 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 148 [ D.11326 ])) [2 *_94+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 207 206 208 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 227 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 208 207 209 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 231)
(code_label 209 208 210 34 19 "" [1 uses])
(note 210 209 211 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 211 210 212 34 (set (pc)
        (label_ref 214)) -1
     (nil)
 -> 214)
(barrier 212 211 219)
(code_label 219 212 213 35 22 "" [2 uses])
(note 213 219 214 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(code_label 214 213 215 36 21 "" [1 uses])
(note 215 214 216 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 36 (parallel [
            (set (reg/f:DI 154 [ D.11328 ])
                (plus:DI (reg/f:DI 154 [ D.11328 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 217 216 218 36 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 endp+0 S8 A64])
        (reg/f:DI 154 [ D.11328 ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 218 217 220 36 (set (reg:QI 155 [ D.11324 ])
        (mem:QI (reg/f:DI 154 [ D.11328 ]) [0 MEM[base: _98, offset: 0B]+0 S1 A8])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 220 218 221 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 155 [ D.11324 ])
            (const_int 59 [0x3b]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 221 220 222 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 219)
(note 222 221 223 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 37 (set (reg:DI 229 [ D.11325 ])
        (sign_extend:DI (reg:QI 155 [ D.11324 ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 224 223 225 37 (set (reg:HI 231)
        (mem:HI (plus:DI (mult:DI (reg:DI 229 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 148 [ D.11326 ])) [2 *_105+0 S2 A16])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 225 224 226 37 (parallel [
            (set (reg:HI 230 [ D.11321 ])
                (and:HI (reg:HI 231)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 229 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 148 [ D.11326 ])) [2 *_105+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 226 225 227 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 230 [ D.11321 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 227 226 230 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 219)
(note 230 227 31 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 31 230 228 38 (set (reg/v/f:DI 166 [ line ])
        (reg/f:DI 154 [ D.11328 ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 228 31 229 38 (set (pc)
        (label_ref 235)) -1
     (nil)
 -> 235)
(barrier 229 228 231)
(code_label 231 229 232 39 20 "" [1 uses])
(note 232 231 233 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 146 [ D.11324 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 234 233 412 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 242)
(note 412 234 32 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 32 412 235 40 (set (reg/v/f:DI 166 [ line ])
        (reg/f:DI 154 [ D.11328 ])) -1
     (nil))
(code_label 235 32 236 41 23 "" [1 uses])
(note 236 235 237 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 237 236 238 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ buf_start ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 238 237 241 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) nss_hesiod/hesiod-service.c:39 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 246)
(note 241 238 239 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 239 241 240 42 (set (pc)
        (label_ref 262)) -1
     (nil)
 -> 262)
(barrier 240 239 242)
(code_label 242 240 243 43 17 "" [2 uses])
(note 243 242 42 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 42 243 244 43 (set (reg:SI 111 [ D.11320 ])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 244 42 245 43 (set (pc)
        (label_ref 345)) nss_hesiod/hesiod-service.c:39 -1
     (nil)
 -> 345)
(barrier 245 244 246)
(code_label 246 245 247 44 24 "" [1 uses])
(note 247 246 248 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 44 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 114 [ buf_start ])
            (reg/v/f:DI 166 [ line ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 249 248 250 44 (set (reg:QI 233 [ D.11323 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 250 249 251 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 233 [ D.11323 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 251 250 424 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 416)
            (pc))) nss_hesiod/hesiod-service.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 416)
(note 424 251 252 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 252 424 253 45 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 113 [ buf_end ])
            (reg/v/f:DI 166 [ line ]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 253 252 254 45 (set (reg:QI 235 [ D.11323 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 254 253 255 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 235 [ D.11323 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 255 254 256 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 416)
            (pc))) nss_hesiod/hesiod-service.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 416)
(note 256 255 257 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 46 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 258 257 259 46 (set (reg:DI 5 di)
        (reg/v/f:DI 166 [ line ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(call_insn/i 259 258 260 46 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2aafc011bbd0 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__rawmemchr") [flags 0x41]  <function_decl 0x2aafc011bbd0 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 260 259 261 46 (set (reg/f:DI 160 [ D.11322 ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 261 260 413 46 (parallel [
            (set (reg/v/f:DI 109 [ buf_start ])
                (plus:DI (reg/f:DI 160 [ D.11322 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 413 261 414 46 (set (pc)
        (label_ref 262)) nss_hesiod/hesiod-service.c:39 -1
     (nil)
 -> 262)
(barrier 414 413 416)
(code_label 416 414 415 47 44 "" [2 uses])
(note 415 416 33 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 33 415 262 47 (set (reg/v/f:DI 109 [ buf_start ])
        (reg/v/f:DI 114 [ buf_start ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(code_label 262 33 263 48 25 "" [2 uses])
(note 263 262 264 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 48 (parallel [
            (set (reg/v/f:DI 163 [ eol ])
                (plus:DI (reg/v/f:DI 109 [ buf_start ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:245 -1
     (nil))
(insn 265 264 38 48 (parallel [
            (set (reg/v/f:DI 164 [ eol ])
                (and:DI (reg/v/f:DI 163 [ eol ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:246 -1
     (nil))
(insn 38 265 266 48 (set (reg/v/f:DI 142 [ eol ])
        (reg/v/f:DI 164 [ eol ])) ../nss/nss_files/files-parse.c:246 -1
     (nil))
(jump_insn 266 38 267 48 (set (pc)
        (label_ref 269)) ../nss/nss_files/files-parse.c:246 -1
     (nil)
 -> 269)
(barrier 267 266 418)
(code_label 418 267 417 49 45 "" [1 uses])
(note 417 418 35 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 35 417 36 49 (set (reg/v/f:DI 142 [ eol ])
        (reg/v/f:DI 143 [ eol ])) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(insn 36 35 301 49 (set (reg/v/f:DI 166 [ line ])
        (reg/v/f:DI 178 [ line ])) ../nss/nss_files/files-parse.c:284 -1
     (nil))
(code_label 301 36 268 50 32 "" [3 uses])
(note 268 301 269 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(code_label 269 268 270 51 27 "" [1 uses])
(note 270 269 271 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 51 (parallel [
            (set (reg:DI 236 [ D.11328 ])
                (plus:DI (reg/v/f:DI 142 [ eol ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:253 -1
     (nil))
(insn 272 271 273 51 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 113 [ buf_end ])
            (reg:DI 236 [ D.11328 ]))) ../nss/nss_files/files-parse.c:253 -1
     (nil))
(jump_insn 273 272 274 51 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 278)
            (pc))) ../nss/nss_files/files-parse.c:253 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 278)
(note 274 273 275 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 275 274 45 52 (set (mem:SI (reg/v/f:DI 203 [ errnop ]) [3 *errnop_112(D)+0 S4 A32])
        (const_int 34 [0x22])) ../nss/nss_files/files-parse.c:256 -1
     (nil))
(insn 45 275 276 52 (set (reg:SI 111 [ D.11320 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 276 45 277 52 (set (pc)
        (label_ref 345)) ../nss/nss_files/files-parse.c:256 -1
     (nil)
 -> 345)
(barrier 277 276 278)
(code_label 278 277 279 53 28 "" [1 uses])
(note 279 278 280 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 53 (set (reg:QI 190 [ D.11324 ])
        (mem:QI (reg/v/f:DI 166 [ line ]) [0 *line_122+0 S1 A8])) ../nss/nss_files/files-parse.c:260 -1
     (nil))
(insn 281 280 282 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 190 [ D.11324 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:260 -1
     (nil))
(jump_insn 282 281 283 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 338)
            (pc))) ../nss/nss_files/files-parse.c:260 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 338)
(note 283 282 284 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 284 283 285 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 285 284 286 54 (set (reg/f:DI 188 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 286 285 287 54 (set (reg/f:DI 189 [ D.11326 ])
        (mem/f:DI (reg/f:DI 188 [ D.11327 ]) [1 *_227+0 S8 A64])) -1
     (nil))
(jump_insn 287 286 288 54 (set (pc)
        (label_ref 292)) -1
     (nil)
 -> 292)
(barrier 288 287 294)
(code_label 294 288 289 55 31 "" [1 uses])
(note 289 294 290 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 55 (parallel [
            (set (reg/v/f:DI 166 [ line ])
                (plus:DI (reg/v/f:DI 166 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:270 -1
     (nil))
(insn 291 290 292 55 (set (reg:QI 190 [ D.11324 ])
        (mem:QI (reg/v/f:DI 166 [ line ]) [0 MEM[base: line_125, offset: 0B]+0 S1 A8])) -1
     (nil))
(code_label 292 291 293 56 30 "" [1 uses])
(note 293 292 295 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 295 293 296 56 (set (reg:DI 237 [ D.11325 ])
        (sign_extend:DI (reg:QI 190 [ D.11324 ]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 296 295 297 56 (set (reg:HI 239)
        (mem:HI (plus:DI (mult:DI (reg:DI 237 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 189 [ D.11326 ])) [2 *_131+0 S2 A16])) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(insn 297 296 298 56 (parallel [
            (set (reg:HI 238 [ D.11321 ])
                (and:HI (reg:HI 239)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:269 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 237 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 189 [ D.11326 ])) [2 *_131+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 298 297 299 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 238 [ D.11321 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:269 -1
     (nil))
(jump_insn 299 298 300 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 294)
            (pc))) ../nss/nss_files/files-parse.c:269 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 294)
(note 300 299 302 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 302 300 303 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 190 [ D.11324 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(jump_insn 303 302 306 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 301)
            (pc))) ../nss/nss_files/files-parse.c:275 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 301)
(note 306 303 40 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 40 306 304 58 (set (reg/v/f:DI 182 [ line ])
        (reg/v/f:DI 166 [ line ])) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(jump_insn 304 40 305 58 (set (pc)
        (label_ref 326)) ../nss/nss_files/files-parse.c:275 -1
     (nil)
 -> 326)
(barrier 305 304 334)
(code_label 334 305 307 59 37 "" [1 uses])
(note 307 334 308 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 59 (set (reg:DI 240 [ D.11325 ])
        (sign_extend:DI (reg:QI 172 [ D.11324 ]))) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(insn 309 308 310 59 (set (reg:HI 242)
        (mem:HI (plus:DI (mult:DI (reg:DI 240 [ D.11325 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 189 [ D.11326 ])) [2 *_138+0 S2 A16])) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(insn 310 309 311 59 (parallel [
            (set (reg:HI 241 [ D.11321 ])
                (and:HI (reg:HI 242)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:276 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 240 [ D.11325 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 189 [ D.11326 ])) [2 *_138+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 311 310 312 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 241 [ D.11321 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(jump_insn 312 311 315 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) ../nss/nss_files/files-parse.c:276 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 388)
(note 315 312 41 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 41 315 313 60 (set (reg/v/f:DI 182 [ line ])
        (reg/v/f:DI 178 [ line ])) ../nss/nss_files/files-parse.c:276 -1
     (nil))
(jump_insn 313 41 314 60 (set (pc)
        (label_ref 328)) ../nss/nss_files/files-parse.c:276 -1
     (nil)
 -> 328)
(barrier 314 313 390)
(code_label 390 314 316 61 41 "" [2 uses])
(note 316 390 317 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 61 (parallel [
            (set (reg/v/f:DI 143 [ eol ])
                (plus:DI (reg/v/f:DI 142 [ eol ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(insn 318 317 319 61 (set (mem/f:DI (reg/v/f:DI 142 [ eol ]) [1 MEM[(char * *)eol_120]+0 S8 A64])
        (reg/v/f:DI 166 [ line ])) ../nss/nss_files/files-parse.c:281 -1
     (nil))
(insn 319 318 320 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 182 [ line ])
                    (const_int 1 [0x1])) [0 MEM[(char *)line_198 + 1B]+0 S1 A8])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:284 -1
     (nil))
(jump_insn 320 319 393 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 418)
            (pc))) ../nss/nss_files/files-parse.c:284 612 {*jcc_1}
     (int_list:REG_BR_PROB 2957 (nil))
 -> 418)
(code_label 393 320 321 62 42 "" [1 uses])
(note 321 393 322 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 322 321 323 62 (parallel [
            (set (reg/v/f:DI 166 [ line ])
                (plus:DI (reg/v/f:DI 178 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(insn 323 322 34 62 (set (mem:QI (reg/v/f:DI 178 [ line ]) [0 *line_144+0 S1 A8])
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(insn 34 323 324 62 (set (reg/v/f:DI 142 [ eol ])
        (reg/v/f:DI 143 [ eol ])) ../nss/nss_files/files-parse.c:287 -1
     (nil))
(jump_insn 324 34 325 62 (set (pc)
        (label_ref 301)) ../nss/nss_files/files-parse.c:287 -1
     (nil)
 -> 301)
(barrier 325 324 326)
(code_label 326 325 327 63 33 "" [1 uses])
(note 327 326 328 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(code_label 328 327 329 64 35 "" [1 uses])
(note 329 328 330 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 64 (parallel [
            (set (reg/v/f:DI 178 [ line ])
                (plus:DI (reg/v/f:DI 182 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:293 -1
     (nil))
(insn 331 330 332 64 (set (reg:QI 172 [ D.11324 ])
        (mem:QI (reg/v/f:DI 178 [ line ]) [0 MEM[base: line_144, offset: 0B]+0 S1 A8])) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(insn 332 331 333 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 172 [ D.11324 ])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:275 -1
     (nil))
(jump_insn 333 332 337 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) ../nss/nss_files/files-parse.c:275 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 397)
(note 337 333 335 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 335 337 336 65 (set (pc)
        (label_ref 334)) ../nss/nss_files/files-parse.c:275 -1
     (nil)
 -> 334)
(barrier 336 335 338)
(code_label 338 336 339 66 29 ("out") [1 uses])
(note 339 338 340 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 66 (set (mem/f:DI (reg/v/f:DI 142 [ eol ]) [1 MEM[(char * *)eol_120]+0 S8 A64])
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:297 -1
     (nil))
(insn 341 340 342 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 164 [ eol ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 342 341 343 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 422)
            (pc))) nss_hesiod/hesiod-service.c:39 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 422)
(note 343 342 344 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 44 67 (set (mem/f:DI (plus:DI (reg/v/f:DI 200 [ result ])
                (const_int 8 [0x8])) [1 result_28(D)->s_aliases+0 S8 A64])
        (reg/v/f:DI 164 [ eol ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 44 344 419 67 (set (reg:SI 111 [ D.11320 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 419 44 420 67 (set (pc)
        (label_ref 345)) nss_hesiod/hesiod-service.c:39 -1
     (nil)
 -> 345)
(barrier 420 419 422)
(code_label 422 420 421 68 46 "" [1 uses])
(note 421 422 43 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 43 421 345 68 (set (reg:SI 111 [ D.11320 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(code_label 345 43 346 69 26 "" [3 uses])
(note 346 345 347 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 69 (set (reg:SI 198 [ <retval> ])
        (reg:SI 111 [ D.11320 ])) -1
     (nil))
(jump_insn 348 347 349 69 (set (pc)
        (label_ref 404)) -1
     (nil)
 -> 404)
(barrier 349 348 350)
(code_label 350 349 351 70 5 "" [1 uses])
(note 351 350 352 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 352 351 353 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 353 352 354 70 (set (reg/f:DI 194 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(code_label 354 353 355 71 7 "" [2 uses])
(note 355 354 356 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 71 (set (mem:QI (reg/v/f:DI 199 [ line ]) [0 *line_199+0 S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 357 356 359 71 (set (reg/f:DI 197 [ D.11326 ])
        (mem/f:DI (reg/f:DI 194 [ D.11327 ]) [1 *_251+0 S8 A64])) -1
     (nil))
(jump_insn 359 357 360 71 (set (pc)
        (label_ref 358)) -1
     (nil)
 -> 358)
(barrier 360 359 361)
(code_label 361 360 362 72 11 "" [1 uses])
(note 362 361 363 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 363 362 364 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aafc050d000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 364 363 365 72 (set (reg/f:DI 192 [ D.11327 ])
        (reg:DI 0 ax)) -1
     (nil))
(code_label 365 364 366 73 14 "" [2 uses])
(note 366 365 367 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 73 (set (mem:QI (reg/v/f:DI 199 [ line ]) [0 *line_197+0 S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 368 367 370 73 (set (reg/f:DI 196 [ D.11326 ])
        (mem/f:DI (reg/f:DI 192 [ D.11327 ]) [1 *_243+0 S8 A64])) -1
     (nil))
(jump_insn 370 368 371 73 (set (pc)
        (label_ref 369)) -1
     (nil)
 -> 369)
(barrier 371 370 372)
(code_label 372 371 373 74 10 "" [1 uses])
(note 373 372 374 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 74 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 375 374 376 74 (set (reg:SI 1 dx)
        (const_int 0 [0])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 376 375 377 74 (set (reg:DI 4 si)
        (reg:DI 244)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 377 376 378 74 (set (reg:DI 5 di)
        (reg/v/f:DI 199 [ line ])) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(call_insn 378 377 379 74 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2aafc0004948 strtoul>) [0 strtoul S1 A8])
            (const_int 0 [0]))) ../nss/nss_files/files-parse.c:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtoul") [flags 0x41]  <function_decl 0x2aafc0004948 strtoul>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 379 378 380 74 (set (reg/v:DI 181 [ val ])
        (reg:DI 0 ax)) ../nss/nss_files/files-parse.c:151 -1
     (nil))
(insn 380 379 381 74 (set (reg:DI 246)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 381 380 382 74 (set (reg:DI 247)
        (const_int 4294967295 [0xffffffff])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 382 381 383 74 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 181 [ val ])
            (reg:DI 246))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 383 382 384 74 (set (reg:DI 245 [ val ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 181 [ val ])
            (reg:DI 247))) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 384 383 386 74 (set (reg/v:HI 110 [ __x ])
        (subreg:HI (reg:DI 245 [ val ]) 0)) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(jump_insn 386 384 387 74 (set (pc)
        (label_ref 385)) nss_hesiod/hesiod-service.c:39 -1
     (nil)
 -> 385)
(barrier 387 386 388)
(code_label 388 387 389 75 34 "" [1 uses])
(note 389 388 391 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 391 389 392 75 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 166 [ line ])
            (reg/v/f:DI 178 [ line ]))) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 392 391 396 75 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) ../nss/nss_files/files-parse.c:279 -1
     (int_list:REG_BR_PROB 5666 (nil))
 -> 390)
(note 396 392 39 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 39 396 394 76 (set (reg/v/f:DI 143 [ eol ])
        (reg/v/f:DI 142 [ eol ])) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 394 39 395 76 (set (pc)
        (label_ref 393)) ../nss/nss_files/files-parse.c:279 -1
     (nil)
 -> 393)
(barrier 395 394 397)
(code_label 397 395 398 77 36 "" [1 uses])
(note 398 397 399 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 77 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 166 [ line ])
            (reg/v/f:DI 178 [ line ]))) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 400 399 403 77 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) ../nss/nss_files/files-parse.c:279 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 390)
(note 403 400 37 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 37 403 401 78 (set (reg/v/f:DI 166 [ line ])
        (reg/v/f:DI 178 [ line ])) ../nss/nss_files/files-parse.c:279 -1
     (nil))
(jump_insn 401 37 402 78 (set (pc)
        (label_ref 301)) ../nss/nss_files/files-parse.c:279 -1
     (nil)
 -> 301)
(barrier 402 401 404)
(code_label 404 402 407 79 1 "" [1 uses])
(note 407 404 405 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 405 407 406 79 (set (reg/i:SI 0 ax)
        (reg:SI 198 [ <retval> ])) nss_hesiod/hesiod-service.c:39 -1
     (nil))
(insn 406 405 0 79 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:39 -1
     (nil))

;; Function lookup (lookup, funcdef_no=55, decl_uid=11058, cgraph_uid=55, symbol_order=58)

Partition 0: size 8 align 8
	context

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 2->13 redirected to 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 13->14 to 19 failed.
Forwarding edge 17->18 to 23 failed.
Forwarding edge 19->20 to 22 failed.


try_optimize_cfg iteration 2

Forwarding edge 13->14 to 19 failed.
Forwarding edge 17->18 to 23 failed.
Forwarding edge 19->20 to 22 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 39 NOTE_INSN_DELETED)
(note 39 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 39 25 2 (set (reg/v/f:DI 143 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 144 [ type ])
        (reg:DI 4 si [ type ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 145 [ protocol ])
        (reg:DI 1 dx [ protocol ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 146 [ serv ])
        (reg:DI 2 cx [ serv ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 28 27 29 2 (set (reg/v/f:DI 147 [ buffer ])
        (reg:DI 37 r8 [ buffer ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 29 28 30 2 (set (reg/v:DI 148 [ buflen ])
        (reg:DI 38 r9 [ buflen ])) nss_hesiod/hesiod-service.c:61 -1
     (nil))
(insn 30 29 31 2 (set (reg/v/f:DI 149 [ errnop ])
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [1 errnop+0 S8 A64])) nss_hesiod/hesiod-service.c:61 -1
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [1 errnop+0 S8 A64])
        (nil)))
(note 31 30 41 2 NOTE_INSN_FUNCTION_BEG)
(insn 41 31 42 2 (set (reg:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aafc02d1480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-service.c:68 -1
     (nil))
(insn 42 41 43 2 (set (reg/v:SI 112 [ olderr ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 150)) [3 errno+0 S4 A32])) nss_hesiod/hesiod-service.c:68 -1
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg:DI 151)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:70 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 5 di)
        (reg:DI 151)) nss_hesiod/hesiod-service.c:70 -1
     (nil))
(call_insn 45 44 46 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2aafc03080d8 hesiod_init>) [0 hesiod_init S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:70 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_init") [flags 0x43]  <function_decl 0x2aafc03080d8 hesiod_init>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 2 (set (reg:SI 113 [ D.11342 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-service.c:70 -1
     (nil))
(insn 47 46 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 113 [ D.11342 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:70 -1
     (nil))
(jump_insn 48 47 49 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 208)
            (pc))) nss_hesiod/hesiod-service.c:70 612 {*jcc_1}
     (int_list:REG_BR_PROB 364 (nil))
 -> 208)
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:73 -1
     (nil))
(insn 51 50 52 4 (set (reg:DI 1 dx)
        (reg/v/f:DI 144 [ type ])) nss_hesiod/hesiod-service.c:73 -1
     (nil))
(insn 52 51 53 4 (set (reg:DI 4 si)
        (reg/v/f:DI 143 [ name ])) nss_hesiod/hesiod-service.c:73 -1
     (nil))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (reg:DI 152)) nss_hesiod/hesiod-service.c:73 -1
     (nil))
(call_insn 54 53 55 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2aafc0308360 hesiod_resolve>) [0 hesiod_resolve S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:73 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_resolve") [flags 0x43]  <function_decl 0x2aafc0308360 hesiod_resolve>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 55 54 56 4 (set (reg/v/f:DI 115 [ item ])
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:73 -1
     (nil))
(insn 56 55 57 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 115 [ item ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:74 -1
     (nil))
(jump_insn 57 56 58 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) nss_hesiod/hesiod-service.c:74 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 72)
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (reg:DI 153)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aafc02d1480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-service.c:76 -1
     (nil))
(insn 60 59 61 5 (set (reg/v:SI 116 [ err ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 153)) [3 errno+0 S4 A32])) nss_hesiod/hesiod-service.c:76 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:77 -1
     (nil))
(insn 62 61 63 5 (set (reg:DI 5 di)
        (reg:DI 154)) nss_hesiod/hesiod-service.c:77 -1
     (nil))
(call_insn 63 62 64 5 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:77 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 64 63 65 5 (set (reg:DI 155)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aafc02d1480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-service.c:78 -1
     (nil))
(insn 65 64 66 5 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 155)) [3 errno+0 S4 A32])
        (reg/v:SI 112 [ olderr ])) nss_hesiod/hesiod-service.c:78 -1
     (nil))
(insn 66 65 67 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ err ])
            (const_int 2 [0x2]))) nss_hesiod/hesiod-service.c:79 -1
     (nil))
(insn 67 66 68 5 (set (reg:QI 157)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:79 -1
     (nil))
(insn 68 67 69 5 (set (reg:SI 156 [ D.11347 ])
        (zero_extend:SI (reg:QI 157))) nss_hesiod/hesiod-service.c:79 -1
     (nil))
(insn 69 68 70 5 (parallel [
            (set (reg:SI 111 [ D.11341 ])
                (neg:SI (reg:SI 156 [ D.11347 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:79 -1
     (nil))
(jump_insn 70 69 71 5 (set (pc)
        (label_ref 146)) -1
     (nil)
 -> 146)
(barrier 71 70 72)
(code_label 72 71 73 6 101 "" [1 uses])
(note 73 72 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 6 (set (reg/f:DI 120 [ D.11345 ])
        (reg/v/f:DI 147 [ buffer ])) nss_hesiod/hesiod-service.c:82 -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 158 [ D.11343 ])
                (plus:DI (reg/v/f:DI 147 [ buffer ])
                    (reg/v:DI 148 [ buflen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:82 -1
     (nil))
(insn 76 75 77 6 (parallel [
            (set (reg/v:DI 123 [ linebuflen ])
                (minus:DI (reg:DI 158 [ D.11343 ])
                    (reg/f:DI 120 [ D.11345 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:82 -1
     (nil))
(insn 77 76 32 6 (set (reg/f:DI 130 [ D.11343 ])
        (mem/f:DI (reg/v/f:DI 115 [ item ]) [1 *item_16+0 S8 A64])) -1
     (nil))
(insn 32 77 162 6 (set (reg/v/f:DI 109 [ item ])
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:82 -1
     (nil))
(code_label 162 32 78 7 108 "" [1 uses])
(note 78 162 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 7 (set (reg:DI 5 di)
        (reg/f:DI 130 [ D.11343 ])) nss_hesiod/hesiod-service.c:88 -1
     (nil))
(call_insn/i 80 79 81 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aafbff25948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:88 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aafbff25948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 7 (set (reg:DI 160)
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:88 -1
     (nil))
(insn 82 81 83 7 (set (reg:DI 161)
        (reg:DI 160)) nss_hesiod/hesiod-service.c:88 -1
     (nil))
(insn 83 82 84 7 (set (reg:DI 124 [ D.11346 ])
        (reg:DI 161)) nss_hesiod/hesiod-service.c:88 -1
     (nil))
(insn 84 83 85 7 (parallel [
            (set (reg/v:DI 125 [ len ])
                (plus:DI (reg:DI 124 [ D.11346 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:88 -1
     (nil))
(insn 85 84 86 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 123 [ linebuflen ])
            (reg/v:DI 125 [ len ]))) nss_hesiod/hesiod-service.c:90 -1
     (nil))
(jump_insn 86 85 87 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) nss_hesiod/hesiod-service.c:90 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 98)
(note 87 86 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 8 (set (reg:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:92 -1
     (nil))
(insn 89 88 90 8 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:92 -1
     (nil))
(insn 90 89 91 8 (set (reg:DI 5 di)
        (reg:DI 162)) nss_hesiod/hesiod-service.c:92 -1
     (nil))
(call_insn 91 90 92 8 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:92 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 92 91 93 8 (set (reg:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:93 -1
     (nil))
(insn 93 92 94 8 (set (reg:DI 5 di)
        (reg:DI 163)) nss_hesiod/hesiod-service.c:93 -1
     (nil))
(call_insn 94 93 95 8 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:93 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 35 8 (set (mem:SI (reg/v/f:DI 149 [ errnop ]) [3 *errnop_33(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_hesiod/hesiod-service.c:94 -1
     (nil))
(insn 35 95 96 8 (set (reg:SI 111 [ D.11341 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-service.c:95 -1
     (nil))
(jump_insn 96 35 97 8 (set (pc)
        (label_ref 146)) nss_hesiod/hesiod-service.c:95 -1
     (nil)
 -> 146)
(barrier 97 96 98)
(code_label 98 97 99 9 102 "" [1 uses])
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 9 (set (reg:DI 164)
        (reg/f:DI 120 [ D.11345 ])) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 165)
        (reg/f:DI 130 [ D.11343 ])) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 102 101 103 9 (set (reg:DI 166)
        (reg/v:DI 125 [ len ])) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 103 102 104 9 (set (reg:DI 1 dx)
        (reg:DI 166)) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 104 103 105 9 (set (reg:DI 4 si)
        (reg:DI 165)) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 105 104 106 9 (set (reg:DI 5 di)
        (reg:DI 164)) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(call_insn 106 105 107 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aafc0573bd0 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aafc0573bd0 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 107 106 108 9 (set (reg:DI 167)
        (reg:DI 0 ax)) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 108 107 109 9 (set (reg:DI 168)
        (reg:DI 167)) nss_hesiod/hesiod-service.c:98 -1
     (nil))
(insn 109 108 110 9 (set (reg:DI 37 r8)
        (reg/v/f:DI 149 [ errnop ])) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(insn 110 109 111 9 (set (reg:DI 2 cx)
        (reg/v:DI 148 [ buflen ])) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(insn 111 110 112 9 (set (reg:DI 1 dx)
        (reg/v/f:DI 147 [ buffer ])) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(insn 112 111 113 9 (set (reg:DI 4 si)
        (reg/v/f:DI 146 [ serv ])) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(insn 113 112 114 9 (set (reg:DI 5 di)
        (reg/v/f:DI 147 [ buffer ])) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(call_insn 114 113 115 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_servent") [flags 0x1]  <function_decl 0x2aafc04caca8 _nss_files_parse_servent>) [0 _nss_files_parse_servent S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:100 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_servent") [flags 0x1]  <function_decl 0x2aafc04caca8 _nss_files_parse_servent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 115 114 116 9 (set (reg/v:SI 126 [ parse_res ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-service.c:100 -1
     (nil))
(insn 116 115 117 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 126 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_hesiod/hesiod-service.c:101 -1
     (nil))
(jump_insn 117 116 118 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) nss_hesiod/hesiod-service.c:101 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 128)
(note 118 117 119 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 10 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:103 -1
     (nil))
(insn 120 119 121 10 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:103 -1
     (nil))
(insn 121 120 122 10 (set (reg:DI 5 di)
        (reg:DI 169)) nss_hesiod/hesiod-service.c:103 -1
     (nil))
(call_insn 122 121 123 10 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 123 122 124 10 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:104 -1
     (nil))
(insn 124 123 125 10 (set (reg:DI 5 di)
        (reg:DI 170)) nss_hesiod/hesiod-service.c:104 -1
     (nil))
(call_insn 125 124 36 10 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 36 125 126 10 (set (reg:SI 111 [ D.11341 ])
        (const_int -2 [0xfffffffffffffffe])) nss_hesiod/hesiod-service.c:105 -1
     (nil))
(jump_insn 126 36 127 10 (set (pc)
        (label_ref 146)) nss_hesiod/hesiod-service.c:105 -1
     (nil)
 -> 146)
(barrier 127 126 128)
(code_label 128 127 129 11 103 "" [1 uses])
(note 129 128 130 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 11 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 126 [ parse_res ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:108 -1
     (nil))
(jump_insn 131 130 132 11 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) nss_hesiod/hesiod-service.c:108 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 158)
(note 132 131 133 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 145 [ protocol ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(jump_insn 134 133 135 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) nss_hesiod/hesiod-service.c:109 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 151)
(note 135 134 136 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 13 (set (reg:DI 171)
        (mem/f:DI (plus:DI (reg/v/f:DI 146 [ serv ])
                (const_int 24 [0x18])) [1 serv_32(D)->s_proto+0 S8 A64])) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(insn 137 136 138 13 (set (reg:DI 4 si)
        (reg/v/f:DI 145 [ protocol ])) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(insn 138 137 139 13 (set (reg:DI 5 di)
        (reg:DI 171)) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(call_insn/i 139 138 140 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2aafbff22af8 strcasecmp>) [0 __builtin_strcasecmp S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcasecmp") [flags 0x41]  <function_decl 0x2aafbff22af8 strcasecmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 140 139 141 13 (set (reg:SI 128 [ D.11342 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(insn 141 140 142 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.11342 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:109 -1
     (nil))
(jump_insn 142 141 145 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) nss_hesiod/hesiod-service.c:109 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 151)
(note 145 142 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 143 145 144 14 (set (pc)
        (label_ref 158)) -1
     (nil)
 -> 158)
(barrier 144 143 208)
(code_label 208 144 207 15 110 "" [1 uses])
(note 207 208 33 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 33 207 146 15 (set (reg:SI 111 [ D.11341 ])
        (const_int -1 [0xffffffffffffffff])) nss_hesiod/hesiod-service.c:71 -1
     (nil))
(code_label 146 33 147 16 100 "" [6 uses])
(note 147 146 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 16 (set (reg:SI 142 [ <retval> ])
        (reg:SI 111 [ D.11341 ])) -1
     (nil))
(jump_insn 149 148 150 16 (set (pc)
        (label_ref 203)) -1
     (nil)
 -> 203)
(barrier 150 149 151)
(code_label 151 150 152 17 105 "" [2 uses])
(note 152 151 153 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 109 [ item ])
                    (const_int 8 [0x8])) [1 MEM[(char * *)item_1 + 8B]+0 S8 A64])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:113 -1
     (nil))
(jump_insn 154 153 157 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) nss_hesiod/hesiod-service.c:113 -1
     (int_list:REG_BR_PROB 1752 (nil))
 -> 168)
(note 157 154 155 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 155 157 156 18 (set (pc)
        (label_ref 192)) nss_hesiod/hesiod-service.c:113 -1
     (nil)
 -> 192)
(barrier 156 155 158)
(code_label 158 156 159 19 104 "" [2 uses])
(note 159 158 160 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 19 (parallel [
            (set (reg/v/f:DI 109 [ item ])
                (plus:DI (reg/v/f:DI 109 [ item ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:111 -1
     (nil))
(insn 161 160 163 19 (set (reg/f:DI 130 [ D.11343 ])
        (mem/f:DI (reg/v/f:DI 109 [ item ]) [1 MEM[base: item_63, offset: 0B]+0 S8 A64])) nss_hesiod/hesiod-service.c:113 -1
     (nil))
(insn 163 161 164 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 130 [ D.11343 ])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:113 -1
     (nil))
(jump_insn 164 163 167 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 162)
            (pc))) nss_hesiod/hesiod-service.c:113 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 162)
(note 167 164 165 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 165 167 166 20 (set (pc)
        (label_ref 179)) nss_hesiod/hesiod-service.c:113 -1
     (nil)
 -> 179)
(barrier 166 165 168)
(code_label 168 166 169 21 106 "" [1 uses])
(note 169 168 170 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 21 (set (reg:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 171 170 172 21 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 172 171 173 21 (set (reg:DI 5 di)
        (reg:DI 173)) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(call_insn 173 172 174 21 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 174 173 175 21 (set (reg:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(insn 175 174 176 21 (set (reg:DI 5 di)
        (reg:DI 174)) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(call_insn 176 175 34 21 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 176 177 21 (set (reg:SI 111 [ D.11341 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-service.c:124 -1
     (nil))
(jump_insn 177 34 178 21 (set (pc)
        (label_ref 146)) nss_hesiod/hesiod-service.c:116 -1
     (nil)
 -> 146)
(barrier 178 177 179)
(code_label 179 178 180 22 109 "" [1 uses])
(note 180 179 181 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 22 (set (reg:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 182 181 183 22 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 183 182 184 22 (set (reg:DI 5 di)
        (reg:DI 175)) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(call_insn 184 183 185 22 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 185 184 186 22 (set (reg:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(insn 186 185 187 22 (set (reg:DI 5 di)
        (reg:DI 176)) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(call_insn 187 186 188 22 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 188 187 189 22 (set (reg:DI 177)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aafc02d1480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) nss_hesiod/hesiod-service.c:120 -1
     (nil))
(insn 189 188 37 22 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 177)) [3 errno+0 S4 A32])
        (reg/v:SI 112 [ olderr ])) nss_hesiod/hesiod-service.c:120 -1
     (nil))
(insn 37 189 190 22 (set (reg:SI 111 [ D.11341 ])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:121 -1
     (nil))
(jump_insn 190 37 191 22 (set (pc)
        (label_ref 146)) nss_hesiod/hesiod-service.c:121 -1
     (nil)
 -> 146)
(barrier 191 190 192)
(code_label 192 191 193 23 107 "" [1 uses])
(note 193 192 194 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 23 (set (reg:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 195 194 196 23 (set (reg:DI 4 si)
        (reg/v/f:DI 115 [ item ])) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(insn 196 195 197 23 (set (reg:DI 5 di)
        (reg:DI 178)) nss_hesiod/hesiod-service.c:115 -1
     (nil))
(call_insn 197 196 198 23 (call (mem:QI (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>) [0 hesiod_free_list S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_free_list") [flags 0x43]  <function_decl 0x2aafc0308438 hesiod_free_list>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 198 197 199 23 (set (reg:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 context+0 S8 A64])) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(insn 199 198 200 23 (set (reg:DI 5 di)
        (reg:DI 179)) nss_hesiod/hesiod-service.c:116 -1
     (nil))
(call_insn 200 199 38 23 (call (mem:QI (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>) [0 hesiod_end S1 A8])
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("hesiod_end") [flags 0x43]  <function_decl 0x2aafc03081b0 hesiod_end>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 200 201 23 (set (reg:SI 111 [ D.11341 ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-service.c:124 -1
     (nil))
(jump_insn 201 38 202 23 (set (pc)
        (label_ref 146)) nss_hesiod/hesiod-service.c:116 -1
     (nil)
 -> 146)
(barrier 202 201 203)
(code_label 203 202 206 24 99 "" [1 uses])
(note 206 203 204 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 204 206 205 24 (set (reg/i:SI 0 ax)
        (reg:SI 142 [ <retval> ])) nss_hesiod/hesiod-service.c:125 -1
     (nil))
(insn 205 204 0 24 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:125 -1
     (nil))

;; Function _nss_hesiod_setservent (_nss_hesiod_setservent, funcdef_no=53, decl_uid=10590, cgraph_uid=53, symbol_order=56)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 88 [ stayopen ])
        (reg:SI 5 di [ stayopen ])) nss_hesiod/hesiod-service.c:48 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-service.c:49 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-service.c:50 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:50 -1
     (nil))

;; Function _nss_hesiod_endservent (_nss_hesiod_endservent, funcdef_no=54, decl_uid=10592, cgraph_uid=54, symbol_order=57)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 6.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 9 2 (set (reg:SI 87 [ <retval> ])
        (const_int 1 [0x1])) nss_hesiod/hesiod-service.c:55 -1
     (nil))
(insn 9 5 10 2 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ <retval> ])) nss_hesiod/hesiod-service.c:56 -1
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:56 -1
     (nil))

;; Function _nss_hesiod_getservbyname_r (_nss_hesiod_getservbyname_r, funcdef_no=56, decl_uid=10604, cgraph_uid=56, symbol_order=59)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 89 [ name ])
        (reg:DI 5 di [ name ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ protocol ])
        (reg:DI 4 si [ protocol ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ serv ])
        (reg:DI 1 dx [ serv ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 93 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 94 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_hesiod/hesiod-service.c:131 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:132 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 12 11 13 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v/f:DI 94 [ errnop ])) nss_hesiod/hesiod-service.c:132 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 38 r9)
        (reg/v:DI 93 [ buflen ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 37 r8)
        (reg/v/f:DI 92 [ buffer ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ serv ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 90 [ protocol ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2aafc061c090 *.LC5>)) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ name ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2aafc051baf8 lookup>) [0 lookup S1 A8])
            (const_int 16 [0x10]))) nss_hesiod/hesiod-service.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2aafc051baf8 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 20 19 21 2 (set (reg:SI 87 [ D.11358 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.11358 ])) nss_hesiod/hesiod-service.c:132 -1
     (nil))
(insn 22 21 26 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:132 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 26 22 27 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) nss_hesiod/hesiod-service.c:133 -1
     (nil))
(insn 27 26 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:133 -1
     (nil))

;; Function _nss_hesiod_getservbyport_r (_nss_hesiod_getservbyport_r, funcdef_no=57, decl_uid=10611, cgraph_uid=57, symbol_order=60)

Partition 0: size 6 align 16
	portstr

;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 34.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v:SI 92 [ port ])
        (reg:SI 5 di [ port ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ protocol ])
        (reg:DI 4 si [ protocol ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 94 [ serv ])
        (reg:DI 1 dx [ serv ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 95 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 96 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 97 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_hesiod/hesiod-service.c:139 -1
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (parallel [
            (set (reg:HI 98 [ __v ])
                (asm_operands:HI ("rorw $8, %w0") ("=r") 0 [
                        (subreg:HI (reg/v:SI 92 [ port ]) 0)
                    ]
                     [
                        (asm_input:HI ("0") nss_hesiod/hesiod-service.c:142)
                    ]
                     [] nss_hesiod/hesiod-service.c:142))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 12 11 13 2 (set (reg/v:HI 88 [ __v ])
        (reg:HI 98 [ __v ])) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 99 [ D.11362 ])
        (zero_extend:SI (reg/v:HI 88 [ __v ]))) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 2 cx)
        (reg:SI 99 [ D.11362 ])) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2aafc061c750 *.LC7>)) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (const_int 6 [0x6])) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 100)) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) nss_hesiod/hesiod-service.c:142 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2aafbff2e948 snprintf>) [0 __builtin_snprintf S1 A8])
            (const_int 0 [0]))) nss_hesiod/hesiod-service.c:142 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2aafbff2e948 snprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 21 20 22 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:144 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 23 22 24 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [1  S8 A64])
        (reg/v/f:DI 97 [ errnop ])) nss_hesiod/hesiod-service.c:144 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 24 23 25 2 (set (reg:DI 38 r9)
        (reg/v:DI 96 [ buflen ])) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 37 r8)
        (reg/v/f:DI 95 [ buffer ])) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 94 [ serv ])) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 93 [ protocol ])) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2aafc061c7e0 *.LC8>)) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg:DI 101)) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(call_insn 30 29 31 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2aafc051baf8 lookup>) [0 lookup S1 A8])
            (const_int 16 [0x10]))) nss_hesiod/hesiod-service.c:144 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("lookup") [flags 0x3]  <function_decl 0x2aafc051baf8 lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 31 30 32 2 (set (reg:SI 90 [ D.11363 ])
        (reg:SI 0 ax)) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.11363 ])) nss_hesiod/hesiod-service.c:144 -1
     (nil))
(insn 33 32 37 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_hesiod/hesiod-service.c:144 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 33 38 2 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) nss_hesiod/hesiod-service.c:145 -1
     (nil))
(insn 38 37 0 2 (use (reg/i:SI 0 ax)) nss_hesiod/hesiod-service.c:145 -1
     (nil))
