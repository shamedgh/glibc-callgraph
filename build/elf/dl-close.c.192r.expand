
;; Function remove_slotinfo (remove_slotinfo, funcdef_no=58, decl_uid=10646, cgraph_uid=58, symbol_order=67)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 4->9 redirected to 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 16->17 to 11 failed.
Removing jump 143.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 16->17 to 11 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 34 NOTE_INSN_DELETED)
(note 34 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 34 25 2 (set (reg/v:DI 135 [ idx ])
        (reg:DI 5 di [ idx ])) dl-close.c:51 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 136 [ listp ])
        (reg:DI 4 si [ listp ])) dl-close.c:51 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:DI 137 [ disp ])
        (reg:DI 1 dx [ disp ])) dl-close.c:51 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 139)
        (reg:SI 2 cx [ should_be_there ])) dl-close.c:51 -1
     (nil))
(insn 28 27 29 2 (set (reg/v:QI 138 [ should_be_there ])
        (subreg:QI (reg:SI 139) 0)) dl-close.c:51 -1
     (nil))
(note 29 28 36 2 NOTE_INSN_FUNCTION_BEG)
(insn 36 29 37 2 (parallel [
            (set (reg:DI 113 [ D.11398 ])
                (minus:DI (reg/v:DI 135 [ idx ])
                    (reg/v:DI 137 [ disp ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:52 -1
     (nil))
(insn 37 36 38 2 (set (reg:DI 114 [ D.11398 ])
        (mem:DI (reg/v/f:DI 136 [ listp ]) [2 listp_11(D)->len+0 S8 A64])) dl-close.c:52 -1
     (nil))
(insn 38 37 39 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 113 [ D.11398 ])
            (reg:DI 114 [ D.11398 ]))) dl-close.c:52 -1
     (nil))
(jump_insn 39 38 40 2 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) dl-close.c:52 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 87)
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (set (reg/f:DI 115 [ D.11399 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 136 [ listp ])
                (const_int 8 [0x8])) [3 listp_11(D)->next+0 S8 A64])) dl-close.c:54 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 115 [ D.11399 ])
            (const_int 0 [0]))) dl-close.c:54 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) dl-close.c:54 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 54)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 138 [ should_be_there ])
            (const_int 0 [0]))) dl-close.c:59 -1
     (nil))
(jump_insn 46 45 47 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 152)
            (pc))) dl-close.c:59 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 152)
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10648") [flags 0x2]  <var_decl 0x2ae45782d360 __PRETTY_FUNCTION__>)) dl-close.c:59 -1
     (nil))
(insn 49 48 50 6 (set (reg:SI 1 dx)
        (const_int 59 [0x3b])) dl-close.c:59 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:59 -1
     (nil))
(insn 51 50 52 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ae45796a6c0 *.LC1>)) dl-close.c:59 -1
     (nil))
(call_insn 52 51 53 6 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 53 52 54)
(code_label 54 53 55 7 3 "" [1 uses])
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg:SI 140 [ D.11400 ])
        (zero_extend:SI (reg/v:QI 138 [ should_be_there ]))) dl-close.c:63 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 141 [ D.11398 ])
                (plus:DI (reg/v:DI 137 [ disp ])
                    (reg:DI 114 [ D.11398 ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:63 -1
     (nil))
(insn 58 57 59 7 (set (reg:SI 2 cx)
        (reg:SI 140 [ D.11400 ])) dl-close.c:63 -1
     (nil))
(insn 59 58 60 7 (set (reg:DI 1 dx)
        (reg:DI 141 [ D.11398 ])) dl-close.c:63 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 4 si)
        (reg/f:DI 115 [ D.11399 ])) dl-close.c:63 -1
     (nil))
(insn 61 60 62 7 (set (reg:DI 5 di)
        (reg/v:DI 135 [ idx ])) dl-close.c:63 -1
     (nil))
(call_insn 62 61 63 7 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_slotinfo") [flags 0x3]  <function_decl 0x2ae4578470d8 remove_slotinfo>) [0 remove_slotinfo S1 A8])
            (const_int 0 [0]))) dl-close.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("remove_slotinfo") [flags 0x3]  <function_decl 0x2ae4578470d8 remove_slotinfo>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 63 62 64 7 (set (reg:QI 118 [ D.11396 ])
        (reg:QI 0 ax)) dl-close.c:63 -1
     (nil))
(insn 64 63 65 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 118 [ D.11396 ])
            (const_int 0 [0]))) dl-close.c:63 -1
     (nil))
(jump_insn 65 64 118 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) dl-close.c:63 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 69)
(code_label 118 65 66 8 10 "" [1 uses])
(note 66 118 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 66 67 8 (set (reg:QI 110 [ D.11396 ])
        (const_int 1 [0x1])) dl-close.c:65 -1
     (nil))
(jump_insn 67 31 68 8 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
(barrier 68 67 69)
(code_label 69 68 70 9 5 "" [1 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 9 (set (reg:DI 142)
        (mem:DI (reg/v/f:DI 136 [ listp ]) [2 listp_11(D)->len+0 S8 A64])) dl-close.c:69 -1
     (nil))
(insn 72 71 149 9 (parallel [
            (set (reg/v:DI 109 [ idx ])
                (plus:DI (reg/v:DI 137 [ disp ])
                    (reg:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:69 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v:DI 137 [ disp ])
            (mem:DI (reg/v/f:DI 136 [ listp ]) [2 listp_11(D)->len+0 S8 A64]))
        (nil)))
(jump_insn 149 72 150 9 (set (pc)
        (label_ref 73)) -1
     (nil)
 -> 73)
(barrier 150 149 152)
(code_label 152 150 151 10 12 "" [1 uses])
(note 151 152 30 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 30 151 73 10 (set (reg/v:DI 109 [ idx ])
        (reg/v:DI 135 [ idx ])) -1
     (nil))
(code_label 73 30 74 11 4 "" [2 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg/f:DI 144)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:93 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 145)
        (mem/c:DI (plus:DI (reg/f:DI 144)
                (const_int 3896 [0xf38])) [2 _rtld_local._dl_tls_static_nelem+0 S8 A64])) -1
     (nil))
(insn 77 76 79 11 (parallel [
            (set (reg:DI 143 [ D.11397 ])
                (plus:DI (reg:DI 145)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 144)
                    (const_int 3896 [0xf38])) [2 _rtld_local._dl_tls_static_nelem+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 79 77 78 11 (set (reg:DI 146)
        (const_int 0 [0])) -1
     (nil))
(insn 78 79 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 137 [ disp ])
            (const_int 0 [0]))) -1
     (nil))
(insn 80 78 81 11 (set (reg:DI 143 [ D.11397 ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 143 [ D.11397 ])
            (reg:DI 146))) -1
     (nil))
(insn 81 80 82 11 (set (reg:DI 111 [ D.11397 ])
        (reg:DI 143 [ D.11397 ])) -1
     (nil))
(insn 82 81 83 11 (parallel [
            (set (reg:DI 147 [ D.11401 ])
                (minus:DI (reg/v:DI 109 [ idx ])
                    (reg/v:DI 137 [ disp ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 83 82 84 11 (parallel [
            (set (reg:DI 148 [ D.11401 ])
                (ashift:DI (reg:DI 147 [ D.11401 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 84 83 85 11 (parallel [
            (set (reg:DI 112 [ ivtmp.27 ])
                (plus:DI (reg/v/f:DI 136 [ listp ])
                    (reg:DI 148 [ D.11401 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 85 84 86 11 (set (pc)
        (label_ref 134)) -1
     (nil)
 -> 134)
(barrier 86 85 87)
(code_label 87 86 88 12 2 "" [1 uses])
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (parallel [
            (set (reg:DI 149 [ D.11401 ])
                (ashift:DI (reg:DI 113 [ D.11398 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg/f:DI 131 [ D.11399 ])
                (plus:DI (reg/v/f:DI 136 [ listp ])
                    (reg:DI 149 [ D.11401 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 91 90 92 12 (set (reg/v/f:DI 120 [ old_map ])
        (mem/f:DI (plus:DI (reg/f:DI 131 [ D.11399 ])
                (const_int 24 [0x18])) [1 MEM[(struct dtv_slotinfo_list *)_47 + 24B]+0 S8 A64])) dl-close.c:74 -1
     (nil))
(insn 92 91 93 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 120 [ old_map ])
            (const_int 0 [0]))) dl-close.c:78 -1
     (nil))
(jump_insn 93 92 94 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) dl-close.c:78 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 114)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 135 [ idx ])
            (mem:DI (plus:DI (reg/v/f:DI 120 [ old_map ])
                    (const_int 1096 [0x448])) [2 old_map_24->l_tls_modid+0 S8 A64]))) dl-close.c:80 -1
     (nil))
(jump_insn 96 95 97 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) dl-close.c:80 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 104)
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10648") [flags 0x2]  <var_decl 0x2ae45782d360 __PRETTY_FUNCTION__>)) dl-close.c:80 -1
     (nil))
(insn 99 98 100 14 (set (reg:SI 1 dx)
        (const_int 80 [0x50])) dl-close.c:80 -1
     (nil))
(insn 100 99 101 14 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:80 -1
     (nil))
(insn 101 100 102 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ae45796a750 *.LC2>)) dl-close.c:80 -1
     (nil))
(call_insn 102 101 103 14 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:80 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 103 102 104)
(code_label 104 103 105 15 9 "" [1 uses])
(note 105 104 106 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 110 15 (set (reg/f:DI 150)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:83 -1
     (nil))
(insn 110 106 111 15 (set (reg:DI 154)
        (mem/c:DI (plus:DI (reg/f:DI 150)
                (const_int 3936 [0xf60])) [2 _rtld_local._dl_tls_generation+0 S8 A64])) dl-close.c:83 -1
     (nil))
(insn 111 110 112 15 (parallel [
            (set (reg:DI 153 [ D.11398 ])
                (plus:DI (reg:DI 154)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:83 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 150)
                    (const_int 3936 [0xf60])) [2 _rtld_local._dl_tls_generation+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 112 111 113 15 (set (mem:DI (plus:DI (reg/f:DI 131 [ D.11399 ])
                (const_int 16 [0x10])) [1 MEM[(struct dtv_slotinfo_list *)_47 + 16B]+0 S8 A64])
        (reg:DI 153 [ D.11398 ])) dl-close.c:83 -1
     (nil))
(insn 113 112 114 15 (set (mem/f:DI (plus:DI (reg/f:DI 131 [ D.11399 ])
                (const_int 24 [0x18])) [1 MEM[(struct dtv_slotinfo_list *)_47 + 24B]+0 S8 A64])
        (const_int 0 [0])) dl-close.c:84 -1
     (nil))
(code_label 114 113 115 16 8 "" [1 uses])
(note 115 114 116 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 16 (set (reg/f:DI 155)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:89 -1
     (nil))
(insn 117 116 119 16 (set (reg/v:DI 109 [ idx ])
        (mem/c:DI (plus:DI (reg/f:DI 155)
                (const_int 3880 [0xf28])) [2 _rtld_local._dl_tls_max_dtv_idx+0 S8 A64])) dl-close.c:89 -1
     (nil))
(insn 119 117 120 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 135 [ idx ])
            (reg/v:DI 109 [ idx ]))) dl-close.c:89 -1
     (nil))
(jump_insn 120 119 123 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) dl-close.c:89 -1
     (int_list:REG_BR_PROB 6218 (nil))
 -> 118)
(note 123 120 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 121 123 122 17 (set (pc)
        (label_ref 73)) -1
     (nil)
 -> 73)
(barrier 122 121 136)
(code_label 136 122 124 18 11 "" [1 uses])
(note 124 136 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 18 (parallel [
            (set (reg/v:DI 109 [ idx ])
                (plus:DI (reg/v:DI 109 [ idx ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:95 -1
     (nil))
(insn 126 125 127 18 (parallel [
            (set (reg:DI 112 [ ivtmp.27 ])
                (plus:DI (reg:DI 112 [ ivtmp.27 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 127 126 128 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg:DI 112 [ ivtmp.27 ])
                    (const_int 24 [0x18])) [3 MEM[base: _48, offset: 24B]+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:97 -1
     (nil))
(jump_insn 128 127 129 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) dl-close.c:97 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 134)
(note 129 128 130 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 19 (set (reg/f:DI 156)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:100 -1
     (nil))
(insn 131 130 33 19 (set (mem/c:DI (plus:DI (reg/f:DI 156)
                (const_int 3880 [0xf28])) [2 _rtld_local._dl_tls_max_dtv_idx+0 S8 A64])
        (reg/v:DI 109 [ idx ])) dl-close.c:100 -1
     (nil))
(insn 33 131 132 19 (set (reg:QI 110 [ D.11396 ])
        (const_int 1 [0x1])) dl-close.c:101 -1
     (nil))
(jump_insn 132 33 133 19 (set (pc)
        (label_ref 140)) dl-close.c:101 -1
     (nil)
 -> 140)
(barrier 133 132 134)
(code_label 134 133 135 20 7 "" [2 uses])
(note 135 134 137 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 137 135 138 20 (parallel [
            (set (reg:DI 157 [ D.11398 ])
                (minus:DI (reg/v:DI 109 [ idx ])
                    (reg/v:DI 137 [ disp ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:93 -1
     (nil))
(insn 138 137 139 20 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 111 [ D.11397 ])
            (reg:DI 157 [ D.11398 ]))) dl-close.c:93 -1
     (nil))
(jump_insn 139 138 153 20 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) dl-close.c:93 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 136)
(note 153 139 32 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 32 153 140 21 (set (reg:QI 110 [ D.11396 ])
        (const_int 0 [0])) dl-close.c:106 -1
     (nil))
(code_label 140 32 141 22 6 "" [2 uses])
(note 141 140 142 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 146 22 (set (reg:QI 134 [ <retval> ])
        (reg:QI 110 [ D.11396 ])) -1
     (nil))
(insn 146 142 147 22 (set (reg/i:QI 0 ax)
        (reg:QI 134 [ <retval> ])) dl-close.c:107 -1
     (nil))
(insn 147 146 0 22 (use (reg/i:QI 0 ax)) dl-close.c:107 -1
     (nil))

;; Function _dl_close_worker (_dl_close_worker, funcdef_no=59, decl_uid=7623, cgraph_uid=59, symbol_order=68)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227
Edge 10->14 redirected to 246
Edge 46->48 redirected to 247
Edge 80->84 redirected to 248
Edge 82->82 redirected to 249
Edge 89->92 redirected to 251
Edge 94->227 redirected to 252
Edge 103->106 redirected to 253
Edge 104->106 redirected to 254
Edge 123->134 redirected to 256
Edge 125->127 redirected to 257
Edge 153->164 redirected to 258
Edge 155->164 redirected to 259
Edge 157->164 redirected to 260
Edge 162->164 redirected to 261
Edge 223->134 redirected to 262
Edge 226->85 redirected to 263
Purged non-fallthru edges from bb 265
Purged non-fallthru edges from bb 268


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 6->260 redirected to 268
Redirecting jump 158 from 260 to 268.
Forwarding edge 21->22 to 37 failed.
Forwarding edge 25->26 to 21 failed.
Forwarding edge 53->54 to 257 failed.
Forwarding edge 64->65 to 76 failed.
Forwarding edge 69->70 to 76 failed.
Redirecting jump 524 from 65 to 76.
Forwarding edge 73->74 to 69 failed.
Forwarding edge 77->78 to 86 failed.
Forwarding edge 83->84 to 77 failed.
Edge 109->111 redirected to 112
Forwarding edge 110->111 to 112 failed.
Deleted label in block 111.
Forwarding edge 121->122 to 125 failed.
Edge 133->54 redirected to 257
Forwarding edge 135->136 to 163 failed.
Forwarding edge 142->143 to 135 failed.
Forwarding edge 151->152 to 162 failed.
Forwarding edge 158->159 to 162 failed.
Forwarding edge 164->165 to 263 failed.
Forwarding edge 173->174 to 164 failed.
Forwarding edge 180->181 to 184 failed.
Edge 182->181 redirected to 184
Edge 185->187 redirected to 188
Forwarding edge 186->187 to 188 failed.
Deleted label in block 187.
Forwarding edge 209->210 to 203 failed.
Forwarding edge 236->237 to 242 failed.
Edge 240->237 redirected to 242
Redirecting jump 1498 from 260 to 268.
deleting block 260
Forwarding edge 264->265 to 128 failed.


try_optimize_cfg iteration 2

Forwarding edge 21->22 to 37 failed.
Forwarding edge 25->26 to 21 failed.
Forwarding edge 53->54 to 257 failed.
Deleted label in block 54.
Forwarding edge 64->65 to 76 failed.
Deleted label in block 65.
Forwarding edge 69->70 to 76 failed.
Forwarding edge 73->74 to 69 failed.
Forwarding edge 77->78 to 86 failed.
Forwarding edge 83->84 to 77 failed.
Forwarding edge 110->111 to 112 failed.
Forwarding edge 121->122 to 125 failed.
Forwarding edge 135->136 to 163 failed.
Forwarding edge 142->143 to 135 failed.
Forwarding edge 151->152 to 162 failed.
Forwarding edge 158->159 to 162 failed.
Forwarding edge 164->165 to 263 failed.
Forwarding edge 173->174 to 164 failed.
Forwarding edge 180->181 to 184 failed.
Deleted label in block 181.
Forwarding edge 186->187 to 188 failed.
Forwarding edge 209->210 to 203 failed.
Forwarding edge 236->237 to 242 failed.
Deleted label in block 237.
Forwarding edge 264->265 to 128 failed.


;;
;; Full RTL generated for this function:
;;
(note 67 0 129 NOTE_INSN_DELETED)
(note 129 67 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 68 129 69 2 (set (reg/v/f:DI 452 [ map ])
        (reg:DI 5 di [ map ])) dl-close.c:112 -1
     (nil))
(insn 69 68 70 2 (set (reg:SI 454)
        (reg:SI 4 si [ force ])) dl-close.c:112 -1
     (nil))
(insn 70 69 71 2 (set (reg/v:QI 453 [ force ])
        (subreg:QI (reg:SI 454) 0)) dl-close.c:112 -1
     (nil))
(note 71 70 131 2 NOTE_INSN_FUNCTION_BEG)
(insn 131 71 132 2 (set (reg:SI 455)
        (mem:SI (plus:DI (reg/v/f:DI 452 [ map ])
                (const_int 784 [0x310])) [8 map_5(D)->l_direct_opencount+0 S4 A64])) dl-close.c:114 -1
     (nil))
(insn 132 131 133 2 (parallel [
            (set (reg:SI 154 [ D.11576 ])
                (plus:SI (reg:SI 455)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:114 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 452 [ map ])
                    (const_int 784 [0x310])) [8 map_5(D)->l_direct_opencount+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 133 132 134 2 (set (mem:SI (plus:DI (reg/v/f:DI 452 [ map ])
                (const_int 784 [0x310])) [8 map_5(D)->l_direct_opencount+0 S4 A64])
        (reg:SI 154 [ D.11576 ])) dl-close.c:114 -1
     (nil))
(insn 134 133 135 2 (set (reg:DI 457)
        (const_int 17179869183 [0x3ffffffff])) dl-close.c:121 -1
     (nil))
(insn 135 134 136 2 (parallel [
            (set (reg:DI 456 [ D.11577 ])
                (and:DI (reg:DI 457)
                    (mem:DI (plus:DI (reg/v/f:DI 452 [ map ])
                            (const_int 784 [0x310])) [5 *map_5(D)+784 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:121 -1
     (nil))
(insn 136 135 137 2 (set (reg:DI 458)
        (const_int 8589934592 [0x200000000])) dl-close.c:121 -1
     (nil))
(insn 137 136 138 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 456 [ D.11577 ])
            (reg:DI 458))) dl-close.c:121 -1
     (nil))
(jump_insn 138 137 139 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) dl-close.c:121 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 144)
(note 139 138 140 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("dl_close_state.10661") [flags 0x2]  <var_decl 0x2ae45782d480 dl_close_state>) [27 dl_close_state+0 S4 A32])
            (const_int 0 [0]))) dl-close.c:122 -1
     (nil))
(jump_insn 141 140 142 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) dl-close.c:122 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 160)
(note 142 141 143 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 5 (set (mem/c:SI (symbol_ref:DI ("dl_close_state.10661") [flags 0x2]  <var_decl 0x2ae45782d480 dl_close_state>) [27 dl_close_state+0 S4 A32])
        (const_int 2 [0x2])) dl-close.c:125 -1
     (nil))
(code_label 144 143 145 6 25 "" [1 uses])
(note 145 144 146 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 6 (set (reg/f:DI 459)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:128 -1
     (nil))
(insn 147 146 148 6 (set (reg:SI 461)
        (mem/c:SI (reg/f:DI 459) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])) dl-close.c:128 -1
     (nil))
(insn 148 147 149 6 (parallel [
            (set (reg:SI 460 [ D.11579 ])
                (and:SI (reg:SI 461)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:128 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (reg/f:DI 459) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 149 148 150 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 460 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:128 -1
     (nil))
(jump_insn 150 149 151 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1542)
            (pc))) dl-close.c:128 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1542)
(note 151 150 152 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 7 (set (reg:DI 462)
        (mem/f:DI (plus:DI (reg/v/f:DI 452 [ map ])
                (const_int 8 [0x8])) [3 map_5(D)->l_name+0 S8 A64])) dl-close.c:129 -1
     (nil))
(insn 153 152 154 7 (set (reg:SI 1 dx)
        (reg:SI 154 [ D.11576 ])) dl-close.c:129 -1
     (nil))
(insn 154 153 155 7 (set (reg:DI 4 si)
        (reg:DI 462)) dl-close.c:129 -1
     (nil))
(insn 155 154 156 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ae457a60e10 *.LC4>)) dl-close.c:129 -1
     (nil))
(insn 156 155 157 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) dl-close.c:129 -1
     (nil))
(call_insn 157 156 158 7 (call (mem:QI (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>) [0 _dl_debug_printf S1 A8])
        (const_int 0 [0])) dl-close.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(jump_insn 158 157 159 7 (set (pc)
        (label_ref:DI 1542)) dl-close.c:129 654 {jump}
     (nil)
 -> 1542)
(barrier 159 158 160)
(code_label 160 159 161 8 26 "" [1 uses])
(note 161 160 162 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 8 (set (reg/v:DI 163 [ nsid ])
        (mem:DI (plus:DI (reg/v/f:DI 452 [ map ])
                (const_int 48 [0x30])) [2 map_5(D)->l_ns+0 S8 A64])) dl-close.c:135 -1
     (nil))
(code_label 163 162 164 9 28 ("retry") [1 uses])
(note 164 163 165 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 9 (set (mem/c:SI (symbol_ref:DI ("dl_close_state.10661") [flags 0x2]  <var_decl 0x2ae45782d480 dl_close_state>) [27 dl_close_state+0 S4 A32])
        (const_int 1 [0x1])) dl-close.c:139 -1
     (nil))
(insn 166 165 167 9 (set (reg/f:DI 463)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:142 -1
     (nil))
(insn 167 166 168 9 (set (reg:DI 464)
        (reg/v:DI 163 [ nsid ])) dl-close.c:142 -1
     (nil))
(insn 168 167 169 9 (parallel [
            (set (reg:DI 465)
                (ashift:DI (reg:DI 464)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:142 -1
     (nil))
(insn 169 168 170 9 (parallel [
            (set (reg:DI 466)
                (plus:DI (reg:DI 465)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:142 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 170 169 171 9 (parallel [
            (set (reg:DI 467)
                (ashift:DI (reg:DI 466)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:142 -1
     (nil))
(insn 171 170 172 9 (set (reg:DI 466)
        (reg:DI 467)) dl-close.c:142 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 172 171 173 9 (parallel [
            (set (reg:DI 468)
                (plus:DI (reg/f:DI 463)
                    (reg:DI 466)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:142 -1
     (nil))
(insn 173 172 174 9 (parallel [
            (set (reg/f:DI 469)
                (plus:DI (reg:DI 468)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:142 -1
     (nil))
(insn 174 173 175 9 (set (reg/v:SI 164 [ nloaded ])
        (mem:SI (reg/f:DI 469) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_nloaded+0 S4 A64])) dl-close.c:142 -1
     (nil))
(insn 175 174 176 9 (set (reg:DI 470)
        (reg/f:DI 7 sp)) dl-close.c:143 -1
     (nil))
(insn 176 175 177 9 (set (reg/f:DI 165 [ D.11581 ])
        (reg:DI 470)) dl-close.c:143 -1
     (nil))
(insn 177 176 178 9 (set (reg:DI 166 [ D.11582 ])
        (zero_extend:DI (reg/v:SI 164 [ nloaded ]))) dl-close.c:143 -1
     (nil))
(insn 178 177 179 9 (parallel [
            (set (reg:DI 471)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 179 178 180 9 (parallel [
            (set (reg:DI 472)
                (plus:DI (reg:DI 166 [ D.11582 ])
                    (reg:DI 471)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 180 179 181 9 (parallel [
            (set (reg:DI 474)
                (udiv:DI (reg:DI 472)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 475)
                (umod:DI (reg:DI 472)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 181 180 182 9 (parallel [
            (set (reg:DI 476)
                (mult:DI (reg:DI 474)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 182 181 183 9 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 476)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 183 182 184 9 (set (reg:DI 477)
        (reg/f:DI 83 virtual-stack-dynamic)) dl-close.c:143 -1
     (nil))
(insn 184 183 185 9 (parallel [
            (set (reg/f:DI 478)
                (plus:DI (reg:DI 477)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:143 -1
     (nil))
(insn 185 184 186 9 (set (reg/f:DI 167 [ used.1 ])
        (reg/f:DI 478)) dl-close.c:143 -1
     (nil))
(insn 186 185 187 9 (parallel [
            (set (reg:DI 479)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 187 186 188 9 (parallel [
            (set (reg:DI 480)
                (plus:DI (reg:DI 166 [ D.11582 ])
                    (reg:DI 479)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 188 187 189 9 (parallel [
            (set (reg:DI 482)
                (udiv:DI (reg:DI 480)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 483)
                (umod:DI (reg:DI 480)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 189 188 190 9 (parallel [
            (set (reg:DI 484)
                (mult:DI (reg:DI 482)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 190 189 191 9 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 484)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 191 190 192 9 (set (reg:DI 485)
        (reg/f:DI 83 virtual-stack-dynamic)) dl-close.c:144 -1
     (nil))
(insn 192 191 193 9 (parallel [
            (set (reg/f:DI 486)
                (plus:DI (reg:DI 485)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:144 -1
     (nil))
(insn 193 192 194 9 (set (reg/f:DI 168 [ done.2 ])
        (reg/f:DI 486)) dl-close.c:144 -1
     (nil))
(insn 194 193 195 9 (parallel [
            (set (reg:DI 487 [ D.11582 ])
                (ashift:DI (reg:DI 166 [ D.11582 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 195 194 196 9 (parallel [
            (set (reg:DI 488)
                (plus:DI (reg:DI 487 [ D.11582 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 196 195 197 9 (parallel [
            (set (reg:DI 489)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 197 196 198 9 (parallel [
            (set (reg:DI 490)
                (plus:DI (reg:DI 488)
                    (reg:DI 489)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 198 197 199 9 (parallel [
            (set (reg:DI 492)
                (udiv:DI (reg:DI 490)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 493)
                (umod:DI (reg:DI 490)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 199 198 200 9 (parallel [
            (set (reg:DI 494)
                (mult:DI (reg:DI 492)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 200 199 201 9 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 494)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 201 200 202 9 (set (reg:DI 495)
        (reg/f:DI 83 virtual-stack-dynamic)) dl-close.c:145 -1
     (nil))
(insn 202 201 203 9 (parallel [
            (set (reg:DI 496)
                (plus:DI (reg:DI 495)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 203 202 204 9 (parallel [
            (set (reg:DI 497)
                (lshiftrt:DI (reg:DI 496)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (expr_list:REG_EQUAL (udiv:DI (reg:DI 496)
            (const_int 8 [0x8]))
        (nil)))
(insn 204 203 205 9 (parallel [
            (set (reg/f:DI 498)
                (ashift:DI (reg:DI 497)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:145 -1
     (nil))
(insn 205 204 206 9 (set (reg/f:DI 170 [ maps.3 ])
        (reg/f:DI 498)) dl-close.c:145 -1
     (nil))
(insn 206 205 207 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 453 [ force ])
            (const_int 0 [0]))) dl-close.c:152 -1
     (nil))
(jump_insn 207 206 208 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) dl-close.c:152 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 210)
(note 208 207 209 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 10 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 452 [ map ])
                        (const_int 980 [0x3d4])) [8 map_5(D)->l_flags_1+0 S4 A32])
                (and:SI (mem:SI (plus:DI (reg/v/f:DI 452 [ map ])
                            (const_int 980 [0x3d4])) [8 map_5(D)->l_flags_1+0 S4 A32])
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:153 -1
     (nil))
(code_label 210 209 211 11 29 "" [1 uses])
(note 211 210 212 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 11 (set (reg/f:DI 499)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:158 -1
     (nil))
(insn 213 212 214 11 (set (reg:DI 501)
        (reg/v:DI 163 [ nsid ])) dl-close.c:158 -1
     (nil))
(insn 214 213 215 11 (parallel [
            (set (reg:DI 502)
                (ashift:DI (reg:DI 501)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:158 -1
     (nil))
(insn 215 214 216 11 (parallel [
            (set (reg:DI 503)
                (plus:DI (reg:DI 502)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:158 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 216 215 217 11 (parallel [
            (set (reg:DI 504)
                (ashift:DI (reg:DI 503)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:158 -1
     (nil))
(insn 217 216 218 11 (set (reg:DI 503)
        (reg:DI 504)) dl-close.c:158 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 218 217 219 11 (set (reg:DI 500)
        (reg:DI 503)) dl-close.c:158 -1
     (nil))
(insn 219 218 220 11 (parallel [
            (set (reg/f:DI 505)
                (plus:DI (reg/f:DI 499)
                    (reg:DI 500)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:158 -1
     (nil))
(insn 220 219 221 11 (set (reg/v/f:DI 174 [ l ])
        (mem/f:DI (reg/f:DI 505) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) dl-close.c:158 -1
     (nil))
(insn 221 220 222 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 174 [ l ])
            (const_int 0 [0]))) dl-close.c:158 -1
     (nil))
(jump_insn 222 221 223 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1547)
            (pc))) dl-close.c:158 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 1547)
(note 223 222 224 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 72 12 (set (reg:DI 282 [ ivtmp.115 ])
        (reg/f:DI 170 [ maps.3 ])) -1
     (nil))
(insn 72 224 231 12 (set (reg/v:SI 173 [ idx ])
        (const_int 0 [0])) dl-close.c:158 -1
     (nil))
(code_label 231 72 225 13 31 "" [1 uses])
(note 225 231 226 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 13 (set (mem:SI (plus:DI (reg/v/f:DI 174 [ l ])
                (const_int 988 [0x3dc])) [8 l_607->l_idx+0 S4 A32])
        (reg/v:SI 173 [ idx ])) dl-close.c:160 -1
     (nil))
(insn 227 226 228 13 (set (mem/f:DI (reg:DI 282 [ ivtmp.115 ]) [3 MEM[base: _252, offset: 0B]+0 S8 A64])
        (reg/v/f:DI 174 [ l ])) dl-close.c:161 -1
     (nil))
(insn 228 227 229 13 (parallel [
            (set (reg/v:SI 173 [ idx ])
                (plus:SI (reg/v:SI 173 [ idx ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:162 -1
     (nil))
(insn 229 228 230 13 (set (reg/v/f:DI 174 [ l ])
        (mem/f:DI (plus:DI (reg/v/f:DI 174 [ l ])
                (const_int 24 [0x18])) [3 l_607->l_next+0 S8 A64])) dl-close.c:158 -1
     (nil))
(insn 230 229 232 13 (parallel [
            (set (reg:DI 282 [ ivtmp.115 ])
                (plus:DI (reg:DI 282 [ ivtmp.115 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 232 230 233 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 174 [ l ])
            (const_int 0 [0]))) dl-close.c:158 -1
     (nil))
(jump_insn 233 232 234 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-close.c:158 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 231)
(note 234 233 235 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 1544 14 (set (reg:SI 428 [ D.11576 ])
        (reg/v:SI 173 [ idx ])) -1
     (nil))
(jump_insn 1544 235 1545 14 (set (pc)
        (label_ref 236)) -1
     (nil)
 -> 236)
(barrier 1545 1544 1547)
(code_label 1547 1545 1546 15 153 "" [1 uses])
(note 1546 1547 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 1546 236 15 (set (reg:SI 428 [ D.11576 ])
        (const_int 0 [0])) dl-close.c:158 -1
     (nil))
(code_label 236 73 237 16 30 "" [1 uses])
(note 237 236 238 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 164 [ nloaded ])
            (reg:SI 428 [ D.11576 ]))) dl-close.c:165 -1
     (nil))
(jump_insn 239 238 240 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) dl-close.c:165 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 247)
(note 240 239 241 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 17 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:165 -1
     (nil))
(insn 242 241 243 17 (set (reg:SI 1 dx)
        (const_int 165 [0xa5])) dl-close.c:165 -1
     (nil))
(insn 243 242 244 17 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:165 -1
     (nil))
(insn 244 243 245 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2ae457a60ea0 *.LC5>)) dl-close.c:165 -1
     (nil))
(call_insn 245 244 246 17 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:165 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 246 245 247)
(code_label 247 246 248 18 32 "" [1 uses])
(note 248 247 249 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 18 (set (reg:DI 506)
        (reg/f:DI 167 [ used.1 ])) dl-close.c:168 -1
     (nil))
(insn 250 249 251 18 (set (reg:DI 507)
        (reg:DI 166 [ D.11582 ])) dl-close.c:168 -1
     (nil))
(insn 251 250 252 18 (set (reg:DI 1 dx)
        (reg:DI 507)) dl-close.c:168 -1
     (nil))
(insn 252 251 253 18 (set (reg:SI 4 si)
        (const_int 0 [0])) dl-close.c:168 -1
     (nil))
(insn 253 252 254 18 (set (reg:DI 5 di)
        (reg:DI 506)) dl-close.c:168 -1
     (nil))
(call_insn 254 253 255 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2ae457855798 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) dl-close.c:168 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2ae457855798 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 255 254 256 18 (set (reg:DI 508)
        (reg:DI 0 ax)) dl-close.c:168 -1
     (nil))
(insn 256 255 257 18 (set (reg:DI 509)
        (reg:DI 508)) dl-close.c:168 -1
     (nil))
(insn 257 256 258 18 (set (reg:DI 510)
        (reg/f:DI 168 [ done.2 ])) dl-close.c:169 -1
     (nil))
(insn 258 257 259 18 (set (reg:DI 511)
        (reg:DI 166 [ D.11582 ])) dl-close.c:169 -1
     (nil))
(insn 259 258 260 18 (set (reg:DI 1 dx)
        (reg:DI 511)) dl-close.c:169 -1
     (nil))
(insn 260 259 261 18 (set (reg:SI 4 si)
        (const_int 0 [0])) dl-close.c:169 -1
     (nil))
(insn 261 260 262 18 (set (reg:DI 5 di)
        (reg:DI 510)) dl-close.c:169 -1
     (nil))
(call_insn 262 261 263 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2ae457855798 memset>) [0 memset S1 A8])
            (const_int 0 [0]))) dl-close.c:169 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x2ae457855798 memset>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 263 262 264 18 (set (reg:DI 512)
        (reg:DI 0 ax)) dl-close.c:169 -1
     (nil))
(insn 264 263 75 18 (set (reg:DI 513)
        (reg:DI 512)) dl-close.c:169 -1
     (nil))
(insn 75 264 265 18 (set (reg/v:SI 175 [ done_index ])
        (const_int -1 [0xffffffffffffffff])) dl-close.c:172 -1
     (nil))
(jump_insn 265 75 266 18 (set (pc)
        (label_ref 406)) dl-close.c:169 -1
     (nil)
 -> 406)
(barrier 266 265 409)
(code_label 409 266 267 19 47 "" [1 uses])
(note 267 409 268 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 19 (set (reg:DI 514)
        (sign_extend:DI (reg/v:SI 175 [ done_index ]))) dl-close.c:177 -1
     (nil))
(insn 269 268 270 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 168 [ done.2 ])
                    (reg:DI 514)) [0 MEM[(char[0:D.10810] *)done.2_27] S1 A8])
            (const_int 0 [0]))) dl-close.c:177 -1
     (nil))
(jump_insn 270 269 271 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) dl-close.c:177 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 404)
(note 271 270 272 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 20 (set (reg:DI 515)
        (sign_extend:DI (reg/v:SI 175 [ done_index ]))) dl-close.c:175 -1
     (nil))
(insn 273 272 274 20 (set (reg/v/f:DI 176 [ l ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 515)
                    (const_int 8 [0x8]))
                (reg/f:DI 170 [ maps.3 ])) [3 MEM[(struct link_map *[0:D.10810] *)maps.3_29] S8 A64])) dl-close.c:175 -1
     (nil))
(insn 274 273 275 20 (set (reg:DI 517)
        (const_int 17179869183 [0x3ffffffff])) dl-close.c:182 -1
     (nil))
(insn 275 274 276 20 (parallel [
            (set (reg:DI 516 [ D.11577 ])
                (and:DI (reg:DI 517)
                    (mem:DI (plus:DI (reg/v/f:DI 176 [ l ])
                            (const_int 784 [0x310])) [5 *l_39+784 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:182 -1
     (nil))
(insn 276 275 277 20 (set (reg:DI 518)
        (const_int 8589934592 [0x200000000])) dl-close.c:182 -1
     (nil))
(insn 277 276 278 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 516 [ D.11577 ])
            (reg:DI 518))) dl-close.c:182 -1
     (nil))
(jump_insn 278 277 293 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) dl-close.c:182 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 291)
(code_label 293 278 279 21 38 "" [3 uses])
(note 279 293 280 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 21 (set (reg:DI 519)
        (sign_extend:DI (reg/v:SI 175 [ done_index ]))) dl-close.c:192 -1
     (nil))
(insn 281 280 282 21 (set (mem/j:QI (plus:DI (reg/f:DI 168 [ done.2 ])
                (reg:DI 519)) [0 MEM[(char[0:D.10810] *)done.2_27] S1 A8])
        (const_int 1 [0x1])) dl-close.c:192 -1
     (nil))
(insn 282 281 283 21 (set (reg:DI 520)
        (sign_extend:DI (reg/v:SI 175 [ done_index ]))) dl-close.c:193 -1
     (nil))
(insn 283 282 284 21 (set (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                (reg:DI 520)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
        (const_int 1 [0x1])) dl-close.c:193 -1
     (nil))
(insn 284 283 285 21 (set (mem:SI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 988 [0x3dc])) [8 l_39->l_idx+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) dl-close.c:195 -1
     (nil))
(insn 285 284 286 21 (set (reg/f:DI 185 [ D.11585 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 952 [0x3b8])) [3 l_39->l_initfini+0 S8 A64])) dl-close.c:198 -1
     (nil))
(insn 286 285 287 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 185 [ D.11585 ])
            (const_int 0 [0]))) dl-close.c:198 -1
     (nil))
(jump_insn 287 286 290 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 309)
            (pc))) dl-close.c:198 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 309)
(note 290 287 288 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 288 290 289 22 (set (pc)
        (label_ref 355)) dl-close.c:198 -1
     (nil)
 -> 355)
(barrier 289 288 291)
(code_label 291 289 292 23 35 "" [1 uses])
(note 292 291 294 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 294 292 295 23 (set (reg:SI 522)
        (mem:SI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 980 [0x3d4])) [8 l_39->l_flags_1+0 S4 A32])) dl-close.c:184 -1
     (nil))
(insn 295 294 296 23 (parallel [
            (set (reg:SI 521 [ D.11576 ])
                (and:SI (reg:SI 522)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:184 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 176 [ l ])
                    (const_int 980 [0x3d4])) [8 l_39->l_flags_1+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 296 295 297 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 521 [ D.11576 ])
            (const_int 0 [0]))) dl-close.c:184 -1
     (nil))
(jump_insn 297 296 298 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) dl-close.c:184 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 293)
(note 298 297 299 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 24 (set (reg:DI 183 [ D.11577 ])
        (mem/v:DI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 1104 [0x450])) [-1  S8 A64])) dl-close.c:187 -1
     (nil))
(insn 300 299 301 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 183 [ D.11577 ])
            (const_int 0 [0]))) dl-close.c:187 -1
     (nil))
(jump_insn 301 300 302 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) dl-close.c:187 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 293)
(note 302 301 303 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 25 (set (reg:DI 523)
        (sign_extend:DI (reg/v:SI 175 [ done_index ]))) dl-close.c:188 -1
     (nil))
(insn 304 303 305 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                    (reg:DI 523)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
            (const_int 0 [0]))) dl-close.c:188 -1
     (nil))
(jump_insn 305 304 308 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) dl-close.c:188 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 404)
(note 308 305 306 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 306 308 307 26 (set (pc)
        (label_ref 293)) dl-close.c:188 -1
     (nil)
 -> 293)
(barrier 307 306 309)
(code_label 309 307 310 27 36 "" [1 uses])
(note 310 309 311 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 27 (parallel [
            (set (reg/v/f:DI 161 [ lp ])
                (plus:DI (reg/f:DI 185 [ D.11585 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:202 -1
     (nil))
(insn 312 311 313 27 (set (reg/f:DI 186 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/f:DI 185 [ D.11585 ])
                (const_int 8 [0x8])) [3 MEM[(struct link_map * *)_48 + 8B]+0 S8 A64])) dl-close.c:203 -1
     (nil))
(insn 313 312 314 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 186 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:203 -1
     (nil))
(jump_insn 314 313 315 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) dl-close.c:203 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 355)
(note 315 314 352 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(code_label 352 315 316 29 42 "" [1 uses])
(note 316 352 317 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 29 (set (reg:SI 187 [ D.11579 ])
        (mem:SI (plus:DI (reg/f:DI 186 [ D.11586 ])
                (const_int 988 [0x3dc])) [8 _605->l_idx+0 S4 A32])) dl-close.c:205 -1
     (nil))
(insn 318 317 319 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.11579 ])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:205 -1
     (nil))
(jump_insn 319 318 320 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) dl-close.c:205 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 348)
(note 320 319 321 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 30 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 187 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:207 -1
     (nil))
(jump_insn 322 321 323 30 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 326)
            (pc))) dl-close.c:207 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 326)
(note 323 322 324 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 31 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 164 [ nloaded ])
            (reg:SI 187 [ D.11579 ]))) dl-close.c:207 -1
     (nil))
(jump_insn 325 324 326 31 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) dl-close.c:207 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 334)
(code_label 326 325 327 32 40 "" [1 uses])
(note 327 326 328 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 32 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:207 -1
     (nil))
(insn 329 328 330 32 (set (reg:SI 1 dx)
        (const_int 207 [0xcf])) dl-close.c:207 -1
     (nil))
(insn 330 329 331 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:207 -1
     (nil))
(insn 331 330 332 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ae457a681b0 *.LC6>)) dl-close.c:207 -1
     (nil))
(call_insn 332 331 333 32 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:207 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 333 332 334)
(code_label 334 333 335 33 41 "" [1 uses])
(note 335 334 336 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 33 (set (reg:DI 524)
        (sign_extend:DI (reg:SI 187 [ D.11579 ]))) dl-close.c:209 -1
     (nil))
(insn 337 336 338 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                    (reg:DI 524)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
            (const_int 0 [0]))) dl-close.c:209 -1
     (nil))
(jump_insn 338 337 339 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) dl-close.c:209 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 348)
(note 339 338 340 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 340 339 341 34 (set (reg:DI 525)
        (sign_extend:DI (reg:SI 187 [ D.11579 ]))) dl-close.c:211 -1
     (nil))
(insn 341 340 342 34 (set (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                (reg:DI 525)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
        (const_int 1 [0x1])) dl-close.c:211 -1
     (nil))
(insn 342 341 343 34 (set (reg/f:DI 526)
        (mem/f:DI (reg/v/f:DI 161 [ lp ]) [3 MEM[base: lp_604, offset: 0B]+0 S8 A64])) dl-close.c:216 -1
     (nil))
(insn 343 342 344 34 (set (reg:SI 191 [ D.11579 ])
        (mem:SI (plus:DI (reg/f:DI 526)
                (const_int 988 [0x3dc])) [8 _55->l_idx+0 S4 A32])) dl-close.c:216 -1
     (nil))
(insn 344 343 345 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 191 [ D.11579 ])
            (reg/v:SI 175 [ done_index ]))) dl-close.c:216 -1
     (nil))
(jump_insn 345 344 346 34 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) dl-close.c:216 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 348)
(note 346 345 347 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 35 (parallel [
            (set (reg/v:SI 175 [ done_index ])
                (plus:SI (reg:SI 191 [ D.11579 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:217 -1
     (nil))
(code_label 348 347 349 36 39 "" [3 uses])
(note 349 348 350 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 36 (parallel [
            (set (reg/v/f:DI 161 [ lp ])
                (plus:DI (reg/v/f:DI 161 [ lp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:221 -1
     (nil))
(insn 351 350 353 36 (set (reg/f:DI 186 [ D.11586 ])
        (mem/f:DI (reg/v/f:DI 161 [ lp ]) [3 MEM[base: lp_59, offset: 0B]+0 S8 A64])) dl-close.c:203 -1
     (nil))
(insn 353 351 354 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 186 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:203 -1
     (nil))
(jump_insn 354 353 355 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 352)
            (pc))) dl-close.c:203 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 352)
(code_label 355 354 356 37 37 "" [2 uses])
(note 356 355 357 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 37 (set (reg/f:DI 192 [ D.11587 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 960 [0x3c0])) [3 l_39->l_reldeps+0 S8 A64])) dl-close.c:225 -1
     (nil))
(insn 358 357 359 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 192 [ D.11587 ])
            (const_int 0 [0]))) dl-close.c:225 -1
     (nil))
(jump_insn 359 358 360 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) dl-close.c:225 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 404)
(note 360 359 361 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 192 [ D.11587 ]) [8 _60->act+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:226 -1
     (nil))
(jump_insn 362 361 363 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) dl-close.c:226 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 404)
(note 363 362 74 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 74 363 401 39 (set (reg/v:SI 198 [ j ])
        (const_int 0 [0])) dl-close.c:226 -1
     (nil))
(code_label 401 74 364 40 46 "" [1 uses])
(note 364 401 365 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 40 (set (reg:DI 527)
        (zero_extend:DI (reg/v:SI 198 [ j ]))) dl-close.c:228 -1
     (nil))
(insn 366 365 367 40 (set (reg/v/f:DI 193 [ jmap ])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 527)
                        (const_int 8 [0x8]))
                    (reg/f:DI 192 [ D.11587 ]))
                (const_int 8 [0x8])) [3 _603->list S8 A64])) dl-close.c:228 -1
     (nil))
(insn 367 366 368 40 (set (reg:SI 194 [ D.11579 ])
        (mem:SI (plus:DI (reg/v/f:DI 193 [ jmap ])
                (const_int 988 [0x3dc])) [8 jmap_63->l_idx+0 S4 A32])) dl-close.c:230 -1
     (nil))
(insn 368 367 369 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 194 [ D.11579 ])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:230 -1
     (nil))
(jump_insn 369 368 370 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) dl-close.c:230 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 397)
(note 370 369 371 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 41 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 194 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:232 -1
     (nil))
(jump_insn 372 371 373 41 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) dl-close.c:232 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 376)
(note 373 372 374 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 42 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 164 [ nloaded ])
            (reg:SI 194 [ D.11579 ]))) dl-close.c:232 -1
     (nil))
(jump_insn 375 374 376 42 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) dl-close.c:232 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 384)
(code_label 376 375 377 43 44 "" [1 uses])
(note 377 376 378 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 43 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:232 -1
     (nil))
(insn 379 378 380 43 (set (reg:SI 1 dx)
        (const_int 232 [0xe8])) dl-close.c:232 -1
     (nil))
(insn 380 379 381 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:232 -1
     (nil))
(insn 381 380 382 43 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ae457a68240 *.LC7>)) dl-close.c:232 -1
     (nil))
(call_insn 382 381 383 43 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 383 382 384)
(code_label 384 383 385 44 45 "" [1 uses])
(note 385 384 386 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 44 (set (reg:DI 528)
        (sign_extend:DI (reg:SI 194 [ D.11579 ]))) dl-close.c:234 -1
     (nil))
(insn 387 386 388 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                    (reg:DI 528)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
            (const_int 0 [0]))) dl-close.c:234 -1
     (nil))
(jump_insn 388 387 389 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) dl-close.c:234 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 397)
(note 389 388 390 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 45 (set (reg:DI 529)
        (sign_extend:DI (reg:SI 194 [ D.11579 ]))) dl-close.c:236 -1
     (nil))
(insn 391 390 392 45 (set (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                (reg:DI 529)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
        (const_int 1 [0x1])) dl-close.c:236 -1
     (nil))
(insn 392 391 393 45 (set (reg:SI 197 [ D.11579 ])
        (mem:SI (plus:DI (reg/v/f:DI 193 [ jmap ])
                (const_int 988 [0x3dc])) [8 jmap_63->l_idx+0 S4 A32])) dl-close.c:237 -1
     (nil))
(insn 393 392 394 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 197 [ D.11579 ])
            (reg/v:SI 175 [ done_index ]))) dl-close.c:237 -1
     (nil))
(jump_insn 394 393 395 45 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) dl-close.c:237 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 397)
(note 395 394 396 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 46 (parallel [
            (set (reg/v:SI 175 [ done_index ])
                (plus:SI (reg:SI 197 [ D.11579 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:238 -1
     (nil))
(code_label 397 396 398 47 43 "" [3 uses])
(note 398 397 399 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 47 (parallel [
            (set (reg/v:SI 198 [ j ])
                (plus:SI (reg/v:SI 198 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:226 -1
     (nil))
(insn 400 399 402 47 (set (reg/f:DI 192 [ D.11587 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 176 [ l ])
                (const_int 960 [0x3c0])) [3 l_39->l_reldeps+0 S8 A64])) dl-close.c:226 -1
     (nil))
(insn 402 400 403 47 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 198 [ j ])
            (mem:SI (reg/f:DI 192 [ D.11587 ]) [8 _61->act+0 S4 A64]))) dl-close.c:226 -1
     (nil))
(jump_insn 403 402 404 47 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) dl-close.c:226 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 401)
(code_label 404 403 405 48 34 "" [4 uses])
(note 405 404 406 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(code_label 406 405 407 49 33 "" [1 uses])
(note 407 406 408 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 410 49 (parallel [
            (set (reg/v:SI 175 [ done_index ])
                (plus:SI (reg/v:SI 175 [ done_index ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:173 -1
     (nil))
(insn 410 408 411 49 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 164 [ nloaded ])
            (reg/v:SI 175 [ done_index ]))) dl-close.c:173 -1
     (nil))
(jump_insn 411 410 412 49 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) dl-close.c:173 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 409)
(note 412 411 413 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 50 (set (reg:DI 2 cx)
        (reg/v:DI 163 [ nsid ])) dl-close.c:245 -1
     (nil))
(insn 414 413 415 50 (set (reg:DI 1 dx)
        (reg/f:DI 167 [ used.1 ])) dl-close.c:245 -1
     (nil))
(insn 415 414 416 50 (set (reg:DI 4 si)
        (reg:DI 166 [ D.11582 ])) dl-close.c:245 -1
     (nil))
(insn 416 415 417 50 (set (reg:DI 5 di)
        (reg/f:DI 170 [ maps.3 ])) dl-close.c:245 -1
     (nil))
(call_insn 417 416 418 50 (call (mem:QI (symbol_ref:DI ("_dl_sort_fini") [flags 0x43]  <function_decl 0x2ae4577fc0d8 _dl_sort_fini>) [0 _dl_sort_fini S1 A8])
        (const_int 0 [0])) dl-close.c:245 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_sort_fini") [flags 0x43]  <function_decl 0x2ae4577fc0d8 _dl_sort_fini>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 418 417 419 50 (set (reg/f:DI 530)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:249 -1
     (nil))
(insn 419 418 420 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 530)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:249 -1
     (nil))
(jump_insn 420 419 421 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1551)
            (pc))) dl-close.c:249 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1551)
(note 421 420 422 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 51 (set (reg/f:DI 531)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:249 -1
     (nil))
(insn 423 422 424 51 (set (reg:DI 533)
        (reg/v:DI 163 [ nsid ])) dl-close.c:249 -1
     (nil))
(insn 424 423 425 51 (parallel [
            (set (reg:DI 534)
                (ashift:DI (reg:DI 533)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (nil))
(insn 425 424 426 51 (parallel [
            (set (reg:DI 535)
                (plus:DI (reg:DI 534)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 426 425 427 51 (parallel [
            (set (reg:DI 536)
                (ashift:DI (reg:DI 535)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (nil))
(insn 427 426 428 51 (set (reg:DI 535)
        (reg:DI 536)) dl-close.c:249 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 428 427 429 51 (set (reg:DI 532)
        (reg:DI 535)) dl-close.c:249 -1
     (nil))
(insn 429 428 430 51 (parallel [
            (set (reg/f:DI 537)
                (plus:DI (reg/f:DI 531)
                    (reg:DI 532)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (nil))
(insn 430 429 431 51 (set (reg/f:DI 538)
        (mem/f:DI (reg/f:DI 537) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) dl-close.c:249 -1
     (nil))
(insn 431 430 432 51 (set (reg:QI 540)
        (mem:QI (plus:DI (reg/f:DI 538)
                (const_int 789 [0x315])) [5 *_75+789 S1 A8])) dl-close.c:249 -1
     (nil))
(insn 432 431 433 51 (parallel [
            (set (reg:QI 539)
                (lshiftrt:QI (reg:QI 540)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem:QI (plus:DI (reg/f:DI 538)
                    (const_int 789 [0x315])) [5 *_75+789 S1 A8])
            (const_int 3 [0x3]))
        (nil)))
(insn 433 432 434 51 (parallel [
            (set (reg:QI 541)
                (xor:QI (reg:QI 539)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (nil))
(insn 434 433 435 51 (set (reg:SI 542)
        (zero_extend:SI (reg:QI 541))) dl-close.c:249 -1
     (nil))
(insn 435 434 436 51 (parallel [
            (set (reg:SI 543 [ D.11598 ])
                (and:SI (reg:SI 542)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:249 -1
     (nil))
(insn 436 435 1548 51 (set (reg:SI 205 [ D.11579 ])
        (reg:SI 543 [ D.11598 ])) dl-close.c:249 -1
     (nil))
(jump_insn 1548 436 1549 51 (set (pc)
        (label_ref 437)) -1
     (nil)
 -> 437)
(barrier 1549 1548 1551)
(code_label 1551 1549 1550 52 154 "" [1 uses])
(note 1550 1551 76 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 76 1550 437 52 (set (reg:SI 205 [ D.11579 ])
        (const_int 0 [0])) dl-close.c:249 -1
     (nil))
(code_label 437 76 438 53 48 "" [1 uses])
(note 438 437 439 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 164 [ nloaded ])
            (const_int 0 [0]))) dl-close.c:255 -1
     (nil))
(jump_insn 440 439 441 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) dl-close.c:255 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 444)
(note 441 440 442 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 442 441 443 54 (set (pc)
        (label_ref 1489)) dl-close.c:255 -1
     (nil)
 -> 1489)
(barrier 443 442 444)
(code_label 444 443 445 55 49 "" [1 uses])
(note 445 444 446 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 55 (set (reg/v/f:DI 206 [ imap ])
        (mem/f:DI (reg/f:DI 170 [ maps.3 ]) [3 MEM[(struct link_map *[0:D.10810] *)maps.3_29]+0 S8 A64])) dl-close.c:257 -1
     (nil))
(insn 447 446 448 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 163 [ nsid ])
            (mem:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 48 [0x30])) [2 imap_648->l_ns+0 S8 A64]))) dl-close.c:260 -1
     (nil))
(jump_insn 448 447 459 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 465)
            (pc))) dl-close.c:260 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 465)
(code_label 459 448 449 56 52 "" [1 uses])
(note 449 459 450 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 56 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:260 -1
     (nil))
(insn 451 450 452 56 (set (reg:SI 1 dx)
        (const_int 260 [0x104])) dl-close.c:260 -1
     (nil))
(insn 452 451 453 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:260 -1
     (nil))
(insn 453 452 454 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ae457a682d0 *.LC8>)) dl-close.c:260 -1
     (nil))
(call_insn 454 453 455 56 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 455 454 787)
(code_label 787 455 456 57 89 "" [1 uses])
(note 456 787 457 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 457 456 458 57 (set (reg/v/f:DI 206 [ imap ])
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 259 [ ivtmp.97 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 170 [ maps.3 ]))
                (const_int 8 [0x8])) [3 MEM[base: maps.3_29, index: ivtmp.97_595, step: 8, offset: 8B]+0 S8 A64])) dl-close.c:257 -1
     (nil))
(insn 458 457 460 57 (parallel [
            (set (reg:DI 259 [ ivtmp.97 ])
                (plus:DI (reg:DI 259 [ ivtmp.97 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 460 458 461 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 163 [ nsid ])
            (mem:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 48 [0x30])) [2 imap_81->l_ns+0 S8 A64]))) dl-close.c:260 -1
     (nil))
(jump_insn 461 460 464 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 459)
            (pc))) dl-close.c:260 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 459)
(note 464 461 462 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(jump_insn 462 464 463 58 (set (pc)
        (label_ref 469)) dl-close.c:260 -1
     (nil)
 -> 469)
(barrier 463 462 465)
(code_label 465 463 466 59 51 "" [1 uses])
(note 466 465 467 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 468 59 (parallel [
            (set (reg:SI 544 [ D.11576 ])
                (plus:SI (reg/v:SI 164 [ nloaded ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 468 467 77 59 (set (reg:DI 261 [ D.11596 ])
        (zero_extend:DI (reg:SI 544 [ D.11576 ]))) -1
     (nil))
(insn 77 468 78 59 (set (reg:DI 259 [ ivtmp.97 ])
        (const_int 0 [0])) dl-close.c:260 -1
     (nil))
(insn 78 77 79 59 (set (reg/v:QI 413 [ scope_mem_left ])
        (const_int 0 [0])) dl-close.c:260 -1
     (nil))
(insn 79 78 80 59 (set (reg/v:QI 412 [ unload_any ])
        (const_int 0 [0])) dl-close.c:260 -1
     (nil))
(insn 80 79 81 59 (set (reg/v:SI 415 [ i ])
        (const_int -1 [0xffffffffffffffff])) dl-close.c:260 -1
     (nil))
(insn 81 80 469 59 (set (reg/v:SI 414 [ unload_global ])
        (const_int 0 [0])) dl-close.c:260 -1
     (nil))
(code_label 469 81 470 60 53 "" [1 uses])
(note 470 469 471 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 60 (set (reg/v:SI 425 [ i ])
        (subreg:SI (reg:DI 259 [ ivtmp.97 ]) 0)) -1
     (nil))
(insn 472 471 473 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                    (reg:DI 259 [ ivtmp.97 ])) [0 MEM[base: used.1_26, index: ivtmp.97_595, offset: 0B]+0 S1 A8])
            (const_int 0 [0]))) dl-close.c:262 -1
     (nil))
(jump_insn 473 472 474 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) dl-close.c:262 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 617)
(note 474 473 475 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 61 (set (reg:QI 209 [ D.11588 ])
        (mem:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 788 [0x314])) [5 *imap_586+788 S1 A32])) dl-close.c:264 -1
     (nil))
(insn 476 475 477 61 (parallel [
            (set (reg:QI 545 [ D.11588 ])
                (and:QI (reg:QI 209 [ D.11588 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:264 -1
     (nil))
(insn 477 476 478 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 545 [ D.11588 ])
            (const_int 2 [0x2]))) dl-close.c:264 -1
     (nil))
(jump_insn 478 477 479 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 484)
            (pc))) dl-close.c:264 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 484)
(note 479 478 480 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 62 (set (reg:SI 547)
        (mem:SI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 980 [0x3d4])) [8 imap_586->l_flags_1+0 S4 A32])) dl-close.c:264 -1
     (nil))
(insn 481 480 482 62 (parallel [
            (set (reg:SI 546 [ D.11576 ])
                (and:SI (reg:SI 547)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:264 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 980 [0x3d4])) [8 imap_586->l_flags_1+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 482 481 483 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 546 [ D.11576 ])
            (const_int 0 [0]))) dl-close.c:264 -1
     (nil))
(jump_insn 483 482 484 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 492)
            (pc))) dl-close.c:264 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 492)
(code_label 484 483 485 63 55 "" [1 uses])
(note 485 484 486 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 63 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:264 -1
     (nil))
(insn 487 486 488 63 (set (reg:SI 1 dx)
        (const_int 265 [0x109])) dl-close.c:264 -1
     (nil))
(insn 488 487 489 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:264 -1
     (nil))
(insn 489 488 490 63 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2ae457a68360 *.LC9>)) dl-close.c:264 -1
     (nil))
(call_insn 490 489 491 63 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 491 490 492)
(code_label 492 491 493 64 56 "" [1 uses])
(note 493 492 494 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 494 493 495 64 (parallel [
            (set (reg:QI 548 [ D.11588 ])
                (and:QI (reg:QI 209 [ D.11588 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:269 -1
     (nil))
(insn 495 494 496 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 548 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:269 -1
     (nil))
(jump_insn 496 495 497 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) dl-close.c:269 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 500)
(note 497 496 498 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 498 497 499 65 (set (pc)
        (label_ref 560)) dl-close.c:269 -1
     (nil)
 -> 560)
(barrier 499 498 500)
(code_label 500 499 501 66 57 "" [1 uses])
(note 501 500 502 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 66 (set (reg/f:DI 549)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:272 -1
     (nil))
(insn 503 502 504 66 (set (reg:SI 551)
        (mem/c:SI (reg/f:DI 549) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])) dl-close.c:272 -1
     (nil))
(insn 504 503 505 66 (parallel [
            (set (reg:SI 550 [ D.11579 ])
                (and:SI (reg:SI 551)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:272 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (reg/f:DI 549) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 505 504 506 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 550 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:272 -1
     (nil))
(jump_insn 506 505 507 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) dl-close.c:272 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 514)
(note 507 506 508 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 67 (set (reg:DI 552)
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 8 [0x8])) [3 imap_586->l_name+0 S8 A64])) dl-close.c:274 -1
     (nil))
(insn 509 508 510 67 (set (reg:DI 1 dx)
        (reg/v:DI 163 [ nsid ])) dl-close.c:274 -1
     (nil))
(insn 510 509 511 67 (set (reg:DI 4 si)
        (reg:DI 552)) dl-close.c:274 -1
     (nil))
(insn 511 510 512 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2ae457a683f0 *.LC10>)) dl-close.c:274 -1
     (nil))
(insn 512 511 513 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) dl-close.c:274 -1
     (nil))
(call_insn 513 512 514 67 (call (mem:QI (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>) [0 _dl_debug_printf S1 A8])
        (const_int 0 [0])) dl-close.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 514 513 515 68 59 "" [1 uses])
(note 515 514 516 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 68 (set (reg/f:DI 218 [ D.11590 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 272 [0x110])) [3 imap_586->l_info+208 S8 A64])) dl-close.c:277 -1
     (nil))
(insn 517 516 518 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 218 [ D.11590 ])
            (const_int 0 [0]))) dl-close.c:277 -1
     (nil))
(jump_insn 518 517 537 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 527)
            (pc))) dl-close.c:277 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 527)
(code_label 537 518 519 69 63 "" [2 uses])
(note 519 537 520 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 69 (set (reg/f:DI 233 [ D.11590 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 168 [0xa8])) [3 imap_586->l_info+104 S8 A64])) dl-close.c:290 -1
     (nil))
(insn 521 520 522 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 233 [ D.11590 ])
            (const_int 0 [0]))) dl-close.c:290 -1
     (nil))
(jump_insn 522 521 526 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 554)
            (pc))) dl-close.c:290 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 554)
(note 526 522 524 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(jump_insn 524 526 525 70 (set (pc)
        (label_ref:DI 560)) dl-close.c:290 654 {jump}
     (nil)
 -> 560)
(barrier 525 524 527)
(code_label 527 525 528 71 60 "" [1 uses])
(note 528 527 529 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 71 (set (reg:DI 553)
        (mem:DI (reg/v/f:DI 206 [ imap ]) [2 imap_586->l_addr+0 S8 A64])) dl-close.c:279 -1
     (nil))
(insn 530 529 531 71 (set (reg:DI 554)
        (mem:DI (plus:DI (reg/f:DI 218 [ D.11590 ])
                (const_int 8 [0x8])) [0 _94->d_un.d_ptr+0 S8 A64])) dl-close.c:279 -1
     (nil))
(insn 531 530 532 71 (parallel [
            (set (reg/v/f:DI 222 [ array ])
                (plus:DI (reg:DI 553)
                    (reg:DI 554)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:279 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/v/f:DI 206 [ imap ]) [2 imap_586->l_addr+0 S8 A64])
            (mem:DI (plus:DI (reg/f:DI 218 [ D.11590 ])
                    (const_int 8 [0x8])) [0 _94->d_un.d_ptr+0 S8 A64]))
        (nil)))
(insn 532 531 533 71 (set (reg/f:DI 555)
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 288 [0x120])) [3 imap_586->l_info+224 S8 A64])) dl-close.c:282 -1
     (nil))
(insn 533 532 534 71 (set (reg:DI 557)
        (mem:DI (plus:DI (reg/f:DI 555)
                (const_int 8 [0x8])) [0 _99->d_un.d_val+0 S8 A64])) dl-close.c:282 -1
     (nil))
(insn 534 533 535 71 (parallel [
            (set (reg:DI 556 [ D.11577 ])
                (lshiftrt:DI (reg:DI 557)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:282 -1
     (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/f:DI 555)
                    (const_int 8 [0x8])) [0 _99->d_un.d_val+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 535 534 536 71 (set (reg/v:SI 226 [ sz ])
        (subreg:SI (reg:DI 556 [ D.11577 ]) 0)) dl-close.c:282 -1
     (nil))
(insn 536 535 538 71 (parallel [
            (set (reg/v:SI 427 [ sz ])
                (plus:SI (reg/v:SI 226 [ sz ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:285 -1
     (nil))
(insn 538 536 539 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 226 [ sz ])
            (const_int 0 [0]))) dl-close.c:285 -1
     (nil))
(jump_insn 539 538 540 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 537)
            (pc))) dl-close.c:285 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 537)
(note 540 539 548 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(code_label 548 540 541 73 64 "" [1 uses])
(note 541 548 542 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 73 (set (reg:DI 558 [ D.11577 ])
        (zero_extend:DI (reg/v:SI 427 [ sz ]))) dl-close.c:286 -1
     (nil))
(insn 543 542 544 73 (set (reg/f:DI 559)
        (mem:DI (plus:DI (mult:DI (reg:DI 558 [ D.11577 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 222 [ array ])) [2 *_106+0 S8 A64])) dl-close.c:286 -1
     (nil))
(call_insn 544 543 545 73 (call (mem:QI (reg/f:DI 559) [0 *_108 S1 A8])
        (const_int 0 [0])) dl-close.c:286 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (nil))
(insn 545 544 546 73 (parallel [
            (set (reg/v:SI 227 [ sz ])
                (plus:SI (reg/v:SI 427 [ sz ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:285 -1
     (nil))
(insn 546 545 547 73 (set (reg/v:SI 311 [ sz ])
        (reg/v:SI 427 [ sz ])) -1
     (nil))
(insn 547 546 549 73 (set (reg/v:SI 427 [ sz ])
        (reg/v:SI 227 [ sz ])) dl-close.c:285 -1
     (nil))
(insn 549 547 550 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 311 [ sz ])
            (const_int 0 [0]))) dl-close.c:285 -1
     (nil))
(jump_insn 550 549 553 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 548)
            (pc))) dl-close.c:285 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 548)
(note 553 550 551 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(jump_insn 551 553 552 74 (set (pc)
        (label_ref 537)) dl-close.c:285 -1
     (nil)
 -> 537)
(barrier 552 551 554)
(code_label 554 552 555 75 61 "" [1 uses])
(note 555 554 556 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 556 555 557 75 (set (reg:DI 561)
        (mem:DI (plus:DI (reg/f:DI 233 [ D.11590 ])
                (const_int 8 [0x8])) [0 _110->d_un.d_ptr+0 S8 A64])) dl-close.c:291 -1
     (nil))
(insn 557 556 558 75 (set (reg:DI 562)
        (mem:DI (reg/v/f:DI 206 [ imap ]) [2 imap_586->l_addr+0 S8 A64])) dl-close.c:291 -1
     (nil))
(insn 558 557 559 75 (parallel [
            (set (reg:DI 560 [ D.11582 ])
                (plus:DI (reg:DI 561)
                    (reg:DI 562)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:291 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/f:DI 233 [ D.11590 ])
                    (const_int 8 [0x8])) [0 _110->d_un.d_ptr+0 S8 A64])
            (mem:DI (reg/v/f:DI 206 [ imap ]) [2 imap_586->l_addr+0 S8 A64]))
        (nil)))
(call_insn 559 558 560 75 (call (mem:QI (reg:DI 560 [ D.11582 ]) [0 *_114 S1 A8])
        (const_int 0 [0])) dl-close.c:291 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (nil))
(code_label 560 559 561 76 58 "" [2 uses])
(note 561 560 562 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:297 -1
     (nil))
(jump_insn 563 562 581 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 577)
            (pc))) dl-close.c:297 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 577)
(code_label 581 563 564 77 68 "" [2 uses])
(note 564 581 567 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 567 564 568 77 (set (reg:QI 565)
        (mem/j:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 789 [0x315])) [0 +0 S1 A8])) dl-close.c:312 -1
     (nil))
(insn 568 567 569 77 (parallel [
            (set (reg:QI 566)
                (ior:QI (reg:QI 565)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:312 -1
     (nil))
(insn 569 568 570 77 (set (mem/j:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 789 [0x315])) [0 +0 S1 A8])
        (reg:QI 566)) dl-close.c:312 -1
     (nil))
(insn 570 569 571 77 (set (reg:QI 568)
        (mem:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 788 [0x314])) [5 *imap_586+788 S1 A32])) dl-close.c:317 -1
     (nil))
(insn 571 570 572 77 (parallel [
            (set (reg:QI 567 [ D.11588 ])
                (and:QI (reg:QI 568)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:317 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 788 [0x314])) [5 *imap_586+788 S1 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 572 571 573 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 567 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:317 -1
     (nil))
(jump_insn 573 572 576 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 608)
            (pc))) dl-close.c:317 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 608)
(note 576 573 574 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(jump_insn 574 576 575 78 (set (pc)
        (label_ref 611)) dl-close.c:317 -1
     (nil)
 -> 611)
(barrier 575 574 577)
(code_label 577 575 578 79 65 "" [1 uses])
(note 578 577 579 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 579 578 580 79 (set (reg/f:DI 569)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:299 -1
     (nil))
(insn 580 579 582 79 (set (reg/v/f:DI 240 [ afct ])
        (mem/f/c:DI (plus:DI (reg/f:DI 569)
                (const_int 352 [0x160])) [3 _rtld_local_ro._dl_audit+0 S8 A64])) dl-close.c:299 -1
     (nil))
(insn 582 580 583 79 (set (reg/f:DI 570)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:300 -1
     (nil))
(insn 583 582 584 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 570)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:300 -1
     (nil))
(jump_insn 584 583 585 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) dl-close.c:300 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 581)
(note 585 584 82 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 82 585 601 80 (set (reg/v:SI 241 [ cnt ])
        (const_int 0 [0])) dl-close.c:300 -1
     (nil))
(code_label 601 82 586 81 70 "" [1 uses])
(note 586 601 587 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 81 (set (reg/f:DI 238 [ D.11593 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 240 [ afct ])
                (const_int 56 [0x38])) [3 afct_587->objclose+0 S8 A64])) dl-close.c:302 -1
     (nil))
(insn 588 587 589 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 238 [ D.11593 ])
            (const_int 0 [0]))) dl-close.c:302 -1
     (nil))
(jump_insn 589 588 590 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 597)
            (pc))) dl-close.c:302 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 597)
(note 590 589 591 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 591 590 592 82 (set (reg:DI 571)
        (zero_extend:DI (reg/v:SI 241 [ cnt ]))) dl-close.c:304 -1
     (nil))
(insn 592 591 593 82 (parallel [
            (set (reg:DI 572)
                (plus:DI (reg:DI 571)
                    (const_int 71 [0x47])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:304 -1
     (nil))
(insn 593 592 594 82 (parallel [
            (set (reg:DI 573)
                (ashift:DI (reg:DI 572)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:304 -1
     (nil))
(insn 594 593 595 82 (parallel [
            (set (reg:DI 574 [ D.11594 ])
                (plus:DI (reg/v/f:DI 206 [ imap ])
                    (reg:DI 573)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:304 -1
     (nil))
(insn 595 594 596 82 (set (reg:DI 5 di)
        (reg:DI 574 [ D.11594 ])) dl-close.c:304 -1
     (nil))
(call_insn 596 595 597 82 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 238 [ D.11593 ]) [0 *_119 S1 A8])
            (const_int 0 [0]))) dl-close.c:304 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 597 596 598 83 69 "" [1 uses])
(note 598 597 599 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 599 598 600 83 (set (reg/v/f:DI 240 [ afct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 240 [ afct ])
                (const_int 64 [0x40])) [3 afct_587->next+0 S8 A64])) dl-close.c:306 -1
     (nil))
(insn 600 599 602 83 (parallel [
            (set (reg/v:SI 241 [ cnt ])
                (plus:SI (reg/v:SI 241 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:300 -1
     (nil))
(insn 602 600 603 83 (set (reg/f:DI 575)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:300 -1
     (nil))
(insn 603 602 604 83 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 241 [ cnt ])
            (mem/c:SI (plus:DI (reg/f:DI 575)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64]))) dl-close.c:300 -1
     (nil))
(jump_insn 604 603 607 83 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 601)
            (pc))) dl-close.c:300 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 601)
(note 607 604 605 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(jump_insn 605 607 606 84 (set (pc)
        (label_ref 581)) dl-close.c:300 -1
     (nil)
 -> 581)
(barrier 606 605 608)
(code_label 608 606 609 85 66 "" [1 uses])
(note 609 608 610 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 85 (parallel [
            (set (reg/v:SI 414 [ unload_global ])
                (plus:SI (reg/v:SI 414 [ unload_global ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:318 -1
     (nil))
(code_label 611 610 612 86 67 "" [1 uses])
(note 612 611 613 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 86 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 415 [ i ])
            (reg/v:SI 425 [ i ]))) -1
     (nil))
(insn 614 613 100 86 (set (reg/v:SI 415 [ i ])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 415 [ i ])
            (reg/v:SI 425 [ i ]))) -1
     (nil))
(insn 100 614 615 86 (set (reg/v:QI 412 [ unload_any ])
        (const_int 1 [0x1])) dl-close.c:315 -1
     (nil))
(jump_insn 615 100 616 86 (set (pc)
        (label_ref 785)) -1
     (nil)
 -> 785)
(barrier 616 615 617)
(code_label 617 616 618 87 54 "" [1 uses])
(note 618 617 619 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 87 (set (reg:QI 577)
        (mem:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 788 [0x314])) [5 *imap_586+788 S1 A32])) dl-close.c:325 -1
     (nil))
(insn 620 619 621 87 (parallel [
            (set (reg:QI 576 [ D.11588 ])
                (and:QI (reg:QI 577)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:325 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 788 [0x314])) [5 *imap_586+788 S1 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 621 620 622 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 576 [ D.11588 ])
            (const_int 2 [0x2]))) dl-close.c:325 -1
     (nil))
(jump_insn 622 621 623 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) dl-close.c:325 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 785)
(note 623 622 624 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 696 [0x2b8])) [3 imap_586->l_searchlist.r_list+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:329 -1
     (nil))
(jump_insn 625 624 626 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1528)
            (pc))) dl-close.c:329 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1528)
(note 626 625 627 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 89 (set (reg/f:DI 248 [ D.11585 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 952 [0x3b8])) [3 imap_586->l_initfini+0 S8 A64])) dl-close.c:329 -1
     (nil))
(insn 628 627 629 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 248 [ D.11585 ])
            (const_int 0 [0]))) dl-close.c:329 -1
     (nil))
(jump_insn 629 628 630 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1528)
            (pc))) dl-close.c:329 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1528)
(note 630 629 631 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/f:DI 248 [ D.11585 ])
                    (const_int 8 [0x8])) [3 MEM[(struct link_map * *)_133 + 8B]+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:339 -1
     (nil))
(jump_insn 632 631 633 90 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1555)
            (pc))) dl-close.c:339 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 1555)
(note 633 632 83 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 83 633 1556 91 (set (reg/v:SI 433 [ cnt ])
        (const_int 1 [0x1])) dl-close.c:339 -1
     (nil))
(jump_insn 1556 83 1557 91 (set (pc)
        (label_ref 638)) -1
     (nil)
 -> 638)
(barrier 1557 1556 1559)
(code_label 1559 1557 1558 92 156 "" [1 uses])
(note 1558 1559 84 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 84 1558 638 92 (set (reg/v:SI 433 [ cnt ])
        (reg/v:SI 250 [ cnt ])) dl-close.c:339 -1
     (nil))
(code_label 638 84 634 93 74 "" [1 uses])
(note 634 638 635 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 93 (parallel [
            (set (reg/v:SI 250 [ cnt ])
                (plus:SI (reg/v:SI 433 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:339 -1
     (nil))
(insn 636 635 637 93 (set (reg:DI 578 [ D.11577 ])
        (zero_extend:DI (reg/v:SI 250 [ cnt ]))) dl-close.c:339 -1
     (nil))
(insn 637 636 639 93 (set (reg/f:DI 254 [ D.11586 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 578 [ D.11577 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 248 [ D.11585 ])) [3 *_138+0 S8 A64])) dl-close.c:339 -1
     (nil))
(insn 639 637 640 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 254 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:339 -1
     (nil))
(jump_insn 640 639 641 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1559)
            (pc))) dl-close.c:339 612 {*jcc_1}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1559)
(note 641 640 642 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 94 (parallel [
            (set (reg:SI 579 [ D.11576 ])
                (plus:SI (reg/v:SI 433 [ cnt ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 643 642 644 94 (set (reg:DI 580 [ D.11577 ])
        (zero_extend:DI (reg:SI 579 [ D.11576 ]))) -1
     (nil))
(insn 644 643 1552 94 (parallel [
            (set (reg:DI 249 [ D.11577 ])
                (ashift:DI (reg:DI 580 [ D.11577 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 1552 644 1553 94 (set (pc)
        (label_ref 645)) -1
     (nil)
 -> 645)
(barrier 1553 1552 1555)
(code_label 1555 1553 1554 95 155 "" [1 uses])
(note 1554 1555 85 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 85 1554 86 95 (set (reg:DI 249 [ D.11577 ])
        (const_int 16 [0x10])) dl-close.c:339 -1
     (nil))
(insn 86 85 645 95 (set (reg/v:SI 250 [ cnt ])
        (const_int 1 [0x1])) dl-close.c:339 -1
     (nil))
(code_label 645 86 646 96 73 "" [1 uses])
(note 646 645 647 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 648 96 (parallel [
            (set (reg:DI 581)
                (plus:DI (reg/f:DI 248 [ D.11585 ])
                    (reg:DI 249 [ D.11577 ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:343 -1
     (nil))
(insn 648 647 649 96 (set (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 696 [0x2b8])) [3 imap_586->l_searchlist.r_list+0 S8 A64])
        (reg:DI 581)) dl-close.c:343 -1
     (nil))
(insn 649 648 650 96 (set (mem:SI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 704 [0x2c0])) [8 imap_586->l_searchlist.r_nlist+0 S4 A64])
        (reg/v:SI 250 [ cnt ])) dl-close.c:344 -1
     (nil))
(insn 650 649 651 96 (parallel [
            (set (reg/v/f:DI 410 [ new_list ])
                (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 696 [0x2b8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:346 -1
     (nil))
(insn 651 650 652 96 (set (reg/f:DI 423 [ D.11597 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 896 [0x380])) [3 imap_586->l_scope+0 S8 A64])) dl-close.c:354 -1
     (nil))
(insn 652 651 653 96 (set (reg/f:DI 266 [ D.11595 ])
        (mem/f:DI (reg/f:DI 423 [ D.11597 ]) [3 *_639+0 S8 A64])) dl-close.c:354 -1
     (nil))
(insn 653 652 654 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 266 [ D.11595 ])
            (const_int 0 [0]))) dl-close.c:354 -1
     (nil))
(jump_insn 654 653 1560 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 767)
            (pc))) dl-close.c:354 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 767)
(note 1560 654 87 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 87 1560 1604 97 (set (reg/v:DI 406 [ remain ])
        (const_int 2 [0x2])) dl-close.c:352 -1
     (nil))
(jump_insn 1604 87 1605 97 (set (pc)
        (label_ref 1532)) -1
     (nil)
 -> 1532)
(barrier 1605 1604 1607)
(code_label 1607 1605 1606 98 168 "" [1 uses])
(note 1606 1607 88 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 88 1606 89 98 (set (reg/v/f:DI 410 [ new_list ])
        (const_int 0 [0])) dl-close.c:354 -1
     (nil))
(insn 89 88 1532 98 (set (reg/v:DI 406 [ remain ])
        (const_int 1 [0x1])) dl-close.c:354 -1
     (nil))
(code_label 1532 89 655 99 152 "" [1 uses])
(note 655 1532 656 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 99 (parallel [
            (set (reg/f:DI 429 [ D.11595 ])
                (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 712 [0x2c8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 657 656 90 99 (parallel [
            (set (reg:DI 274 [ ivtmp.89 ])
                (plus:DI (reg/f:DI 423 [ D.11597 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 90 657 91 99 (set (reg/f:DI 256 [ D.11595 ])
        (reg/f:DI 266 [ D.11595 ])) dl-close.c:354 -1
     (nil))
(insn 91 90 686 99 (set (reg/v:QI 407 [ removed_any ])
        (const_int 0 [0])) dl-close.c:354 -1
     (nil))
(code_label 686 91 658 100 79 "" [1 uses])
(note 658 686 659 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 659 658 660 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 429 [ D.11595 ])
            (reg/f:DI 256 [ D.11595 ]))) dl-close.c:358 -1
     (nil))
(jump_insn 660 659 661 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 679)
            (pc))) dl-close.c:358 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 679)
(note 661 660 662 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 163 [ nsid ])
            (mem:DI (plus:DI (reg/f:DI 256 [ D.11595 ])
                    (const_int -648 [0xfffffffffffffd78])) [2 MEM[(struct link_map *)_600 + -696B].l_ns+0 S8 A64]))) dl-close.c:363 -1
     (nil))
(jump_insn 663 662 664 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 671)
            (pc))) dl-close.c:363 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 671)
(note 664 663 665 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 102 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:363 -1
     (nil))
(insn 666 665 667 102 (set (reg:SI 1 dx)
        (const_int 363 [0x16b])) dl-close.c:363 -1
     (nil))
(insn 667 666 668 102 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:363 -1
     (nil))
(insn 668 667 669 102 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2ae457a68480 *.LC11>)) dl-close.c:363 -1
     (nil))
(call_insn 669 668 670 102 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:363 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 670 669 671)
(code_label 671 670 672 103 77 "" [1 uses])
(note 672 671 673 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 256 [ D.11595 ])
                    (const_int 292 [0x124])) [8 MEM[(struct link_map *)_600 + -696B].l_idx+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:364 -1
     (nil))
(jump_insn 674 673 675 103 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1564)
            (pc))) dl-close.c:364 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1564)
(note 675 674 676 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 676 675 677 104 (parallel [
            (set (reg/v:DI 406 [ remain ])
                (plus:DI (reg/v:DI 406 [ remain ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:365 -1
     (nil))
(jump_insn 677 676 678 104 (set (pc)
        (label_ref 682)) dl-close.c:365 -1
     (nil)
 -> 682)
(barrier 678 677 679)
(code_label 679 678 680 105 76 "" [1 uses])
(note 680 679 681 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 1561 105 (parallel [
            (set (reg/v:DI 406 [ remain ])
                (plus:DI (reg/v:DI 406 [ remain ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:370 -1
     (nil))
(jump_insn 1561 681 1562 105 (set (pc)
        (label_ref 682)) -1
     (nil)
 -> 682)
(barrier 1562 1561 1564)
(code_label 1564 1562 1563 106 157 "" [1 uses])
(note 1563 1564 92 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 92 1563 682 106 (set (reg/v:QI 407 [ removed_any ])
        (const_int 1 [0x1])) dl-close.c:367 -1
     (nil))
(code_label 682 92 683 107 78 "" [2 uses])
(note 683 682 684 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 684 683 685 107 (parallel [
            (set (reg:DI 274 [ ivtmp.89 ])
                (plus:DI (reg:DI 274 [ ivtmp.89 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 685 684 687 107 (set (reg/f:DI 256 [ D.11595 ])
        (mem/f:DI (plus:DI (reg:DI 274 [ ivtmp.89 ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: _233, offset: -8B]+0 S8 A64])) dl-close.c:354 -1
     (nil))
(insn 687 685 688 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 256 [ D.11595 ])
            (const_int 0 [0]))) dl-close.c:354 -1
     (nil))
(jump_insn 688 687 689 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 686)
            (pc))) dl-close.c:354 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 686)
(note 689 688 690 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 690 689 691 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 407 [ removed_any ])
            (const_int 0 [0]))) dl-close.c:372 -1
     (nil))
(jump_insn 691 690 692 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 763)
            (pc))) dl-close.c:372 -1
     (int_list:REG_BR_PROB 4764 (nil))
 -> 763)
(note 692 691 693 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 109 (parallel [
            (set (reg/v/f:DI 262 [ newp ])
                (plus:DI (reg/v/f:DI 206 [ imap ])
                    (const_int 856 [0x358])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:384 -1
     (nil))
(insn 694 693 695 109 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 406 [ remain ])
            (const_int 3 [0x3]))) dl-close.c:385 -1
     (nil))
(insn 695 694 696 109 (set (reg:QI 583 [ D.11598 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-close.c:385 -1
     (nil))
(insn 696 695 697 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 583 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:385 -1
     (nil))
(jump_insn 697 696 1608 109 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1613)
            (pc))) dl-close.c:385 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1613)
(note 1608 697 698 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 698 1608 699 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 262 [ newp ])
            (reg/f:DI 423 [ D.11597 ]))) dl-close.c:385 -1
     (nil))
(insn 699 698 700 110 (set (reg:QI 585 [ D.11598 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dl-close.c:385 -1
     (nil))
(insn 700 699 701 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 585 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:385 -1
     (nil))
(jump_insn 701 700 1609 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1566)
            (pc))) dl-close.c:385 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 1566)
(note 1609 701 1613 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(code_label 1613 1609 703 112 169 "" [1 uses])
(note 703 1613 704 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 112 (set (reg/v:DI 263 [ new_size ])
        (mem:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 888 [0x378])) [2 imap_586->l_scope_max+0 S8 A64])) dl-close.c:392 -1
     (nil))
(insn 705 704 706 112 (parallel [
            (set (reg:DI 586 [ D.11577 ])
                (ashift:DI (reg/v:DI 263 [ new_size ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:393 -1
     (nil))
(insn 706 705 707 112 (set (reg:DI 5 di)
        (reg:DI 586 [ D.11577 ])) dl-close.c:393 -1
     (nil))
(call_insn 707 706 708 112 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ae457253360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) dl-close.c:393 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ae457253360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 708 707 709 112 (set (reg/f:DI 587)
        (reg:DI 0 ax)) dl-close.c:393 -1
     (expr_list:REG_NOALIAS (reg/f:DI 587)
        (nil)))
(insn 709 708 710 112 (set (reg/v/f:DI 265 [ newp ])
        (reg/f:DI 587)) dl-close.c:393 -1
     (nil))
(insn 710 709 711 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 265 [ newp ])
            (const_int 0 [0]))) dl-close.c:395 -1
     (nil))
(jump_insn 711 710 712 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1538)
            (pc))) dl-close.c:395 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1538)
(note 712 711 713 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 713 712 714 113 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2ae457a68510 *.LC12>)) dl-close.c:396 -1
     (nil))
(insn 714 713 715 113 (set (reg:DI 1 dx)
        (const_int 0 [0])) dl-close.c:396 -1
     (nil))
(insn 715 714 716 113 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2ae457a685a0 *.LC13>)) dl-close.c:396 -1
     (nil))
(insn 716 715 717 113 (set (reg:SI 5 di)
        (const_int 12 [0xc])) dl-close.c:396 -1
     (nil))
(call_insn 717 716 718 113 (call (mem:QI (symbol_ref:DI ("_dl_signal_error") [flags 0x43]  <function_decl 0x2ae4577cc6c0 _dl_signal_error>) [0 _dl_signal_error S1 A8])
        (const_int 0 [0])) dl-close.c:396 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_signal_error") [flags 0x43]  <function_decl 0x2ae4577cc6c0 _dl_signal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 718 717 742)
(code_label 742 718 719 114 85 "" [2 uses])
(note 719 742 720 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 720 719 721 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 429 [ D.11595 ])
            (reg/f:DI 266 [ D.11595 ]))) dl-close.c:404 -1
     (nil))
(jump_insn 721 720 722 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 733)
            (pc))) dl-close.c:404 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 733)
(note 722 721 723 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 266 [ D.11595 ])
                    (const_int 292 [0x124])) [8 MEM[(struct link_map *)_592 + -696B].l_idx+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:409 -1
     (nil))
(jump_insn 724 723 725 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 733)
            (pc))) dl-close.c:409 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 733)
(note 725 724 726 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 410 [ new_list ])
            (const_int 0 [0]))) dl-close.c:413 -1
     (nil))
(jump_insn 727 726 728 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 737)
            (pc))) dl-close.c:413 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 737)
(note 728 727 729 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 117 (parallel [
            (set (reg/v:DI 268 [ remain ])
                (plus:DI (reg/v:DI 411 [ remain ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:415 -1
     (nil))
(insn 730 729 95 117 (set (mem/f:DI (plus:DI (mult:DI (reg/v:DI 411 [ remain ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 265 [ newp ])) [3 *_171+0 S8 A64])
        (reg/v/f:DI 410 [ new_list ])) dl-close.c:415 -1
     (nil))
(insn 95 730 96 117 (set (reg/v:DI 411 [ remain ])
        (reg/v:DI 268 [ remain ])) dl-close.c:415 -1
     (nil))
(insn 96 95 731 117 (set (reg/v/f:DI 410 [ new_list ])
        (const_int 0 [0])) dl-close.c:416 -1
     (nil))
(jump_insn 731 96 732 117 (set (pc)
        (label_ref 737)) dl-close.c:415 -1
     (nil)
 -> 737)
(barrier 732 731 733)
(code_label 733 732 734 118 83 "" [2 uses])
(note 734 733 735 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 735 734 736 118 (parallel [
            (set (reg/v:DI 271 [ remain ])
                (plus:DI (reg/v:DI 411 [ remain ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:422 -1
     (nil))
(insn 736 735 97 118 (set (mem/f:DI (plus:DI (mult:DI (reg/v:DI 411 [ remain ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 265 [ newp ])) [3 *_174+0 S8 A64])
        (reg/f:DI 266 [ D.11595 ])) dl-close.c:422 -1
     (nil))
(insn 97 736 737 118 (set (reg/v:DI 411 [ remain ])
        (reg/v:DI 271 [ remain ])) dl-close.c:422 -1
     (nil))
(code_label 737 97 738 119 84 "" [2 uses])
(note 738 737 739 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 119 (set (reg/f:DI 588)
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 896 [0x380])) [3 imap_586->l_scope+0 S8 A64])) dl-close.c:402 -1
     (nil))
(insn 740 739 741 119 (set (reg/f:DI 266 [ D.11595 ])
        (mem/f:DI (plus:DI (reg/f:DI 588)
                (reg:DI 303 [ ivtmp.84 ])) [3 *_179+0 S8 A64])) dl-close.c:402 -1
     (nil))
(insn 741 740 743 119 (parallel [
            (set (reg:DI 303 [ ivtmp.84 ])
                (plus:DI (reg:DI 303 [ ivtmp.84 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 743 741 744 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 266 [ D.11595 ])
            (const_int 0 [0]))) dl-close.c:402 -1
     (nil))
(jump_insn 744 743 745 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 742)
            (pc))) dl-close.c:402 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 742)
(note 745 744 746 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 120 (set (mem/f:DI (plus:DI (mult:DI (reg/v:DI 411 [ remain ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 265 [ newp ])) [3 *_181+0 S8 A64])
        (const_int 0 [0])) dl-close.c:424 -1
     (nil))
(insn 747 746 748 120 (set (reg/v/f:DI 278 [ old ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 896 [0x380])) [3 imap_586->l_scope+0 S8 A64])) dl-close.c:426 -1
     (nil))
(insn 748 747 749 120 (set (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 896 [0x380])) [3 imap_586->l_scope+0 S8 A64])
        (reg/v/f:DI 265 [ newp ])) dl-close.c:428 -1
     (nil))
(insn 749 748 750 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 262 [ newp ])
            (reg/v/f:DI 278 [ old ]))) dl-close.c:431 -1
     (nil))
(jump_insn 750 749 751 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1570)
            (pc))) dl-close.c:431 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1570)
(note 751 750 752 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 752 751 753 121 (set (reg:DI 5 di)
        (reg/v/f:DI 278 [ old ])) dl-close.c:433 -1
     (nil))
(call_insn 753 752 754 121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_dl_scope_free") [flags 0x43]  <function_decl 0x2ae45780a1b0 _dl_scope_free>) [0 _dl_scope_free S1 A8])
            (const_int 0 [0]))) dl-close.c:433 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_scope_free") [flags 0x43]  <function_decl 0x2ae45780a1b0 _dl_scope_free>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 754 753 755 121 (set (reg:SI 279 [ D.11579 ])
        (reg:SI 0 ax)) dl-close.c:433 -1
     (nil))
(insn 755 754 756 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 279 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:433 -1
     (nil))
(jump_insn 756 755 757 121 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1574)
            (pc))) dl-close.c:433 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1574)
(note 757 756 1567 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1567 757 1568 122 (set (pc)
        (label_ref 758)) -1
     (nil)
 -> 758)
(barrier 1568 1567 1570)
(code_label 1570 1568 1569 123 159 "" [1 uses])
(note 1569 1570 98 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 98 1569 1571 123 (set (reg/v:QI 413 [ scope_mem_left ])
        (const_int 1 [0x1])) dl-close.c:439 -1
     (nil))
(jump_insn 1571 98 1572 123 (set (pc)
        (label_ref 758)) -1
     (nil)
 -> 758)
(barrier 1572 1571 1574)
(code_label 1574 1572 1573 124 160 "" [1 uses])
(note 1573 1574 99 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 99 1573 758 124 (set (reg/v:QI 413 [ scope_mem_left ])
        (const_int 0 [0])) dl-close.c:436 -1
     (nil))
(code_label 758 99 759 125 86 "" [2 uses])
(note 759 758 760 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 760 759 761 125 (set (mem:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 888 [0x378])) [2 imap_586->l_scope_max+0 S8 A64])
        (reg/v:DI 263 [ new_size ])) dl-close.c:441 -1
     (nil))
(jump_insn 761 760 762 125 (set (pc)
        (label_ref 771)) dl-close.c:441 -1
     (nil)
 -> 771)
(barrier 762 761 763)
(code_label 763 762 764 126 80 "" [1 uses])
(note 764 763 765 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 765 764 766 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 410 [ new_list ])
            (const_int 0 [0]))) dl-close.c:443 -1
     (nil))
(jump_insn 766 765 767 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 771)
            (pc))) dl-close.c:443 -1
     (int_list:REG_BR_PROB 786 (nil))
 -> 771)
(code_label 767 766 768 127 75 "" [1 uses])
(note 768 767 769 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 769 768 770 127 (set (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 696 [0x2b8])) [3 imap_586->l_searchlist.r_list+0 S8 A64])
        (const_int 0 [0])) dl-close.c:447 -1
     (nil))
(insn 770 769 771 127 (set (mem:SI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 704 [0x2c0])) [8 imap_586->l_searchlist.r_nlist+0 S4 A64])
        (const_int 0 [0])) dl-close.c:448 -1
     (nil))
(code_label 771 770 772 128 87 "" [3 uses])
(note 772 771 773 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 774 128 (set (reg/f:DI 280 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 728 [0x2d8])) [3 imap_586->l_loader+0 S8 A64])) dl-close.c:453 -1
     (nil))
(insn 774 773 775 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 280 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:453 -1
     (nil))
(jump_insn 775 774 776 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 781)
            (pc))) dl-close.c:453 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 781)
(note 776 775 777 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 280 [ D.11586 ])
                    (const_int 988 [0x3dc])) [8 _185->l_idx+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:454 -1
     (nil))
(jump_insn 778 777 779 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 781)
            (pc))) dl-close.c:454 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 781)
(note 779 778 780 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 130 (set (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 728 [0x2d8])) [3 imap_586->l_loader+0 S8 A64])
        (const_int 0 [0])) dl-close.c:455 -1
     (nil))
(code_label 781 780 782 131 88 "" [2 uses])
(note 782 781 783 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 783 782 784 131 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 415 [ i ])
            (reg/v:SI 425 [ i ]))) -1
     (nil))
(insn 784 783 785 131 (set (reg/v:SI 415 [ i ])
        (if_then_else:SI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 415 [ i ])
            (reg/v:SI 425 [ i ]))) -1
     (nil))
(code_label 785 784 786 132 71 "" [2 uses])
(note 786 785 788 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 788 786 789 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 261 [ D.11596 ])
            (reg:DI 259 [ ivtmp.97 ]))) dl-close.c:255 -1
     (nil))
(jump_insn 789 788 790 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 787)
            (pc))) dl-close.c:255 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 787)
(note 790 789 792 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 792 790 793 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 412 [ unload_any ])
            (const_int 0 [0]))) dl-close.c:464 -1
     (nil))
(jump_insn 793 792 794 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1489)
            (pc))) dl-close.c:464 612 {*jcc_1}
     (int_list:REG_BR_PROB 4891 (nil))
 -> 1489)
(note 794 793 795 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 795 794 796 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:469 -1
     (nil))
(jump_insn 796 795 822 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 809)
            (pc))) dl-close.c:469 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 809)
(code_label 822 796 797 135 94 "" [3 uses])
(note 797 822 798 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 135 (set (reg:DI 4 si)
        (reg/v:DI 163 [ nsid ])) dl-close.c:488 -1
     (nil))
(insn 799 798 800 135 (set (reg:DI 5 di)
        (const_int 0 [0])) dl-close.c:488 -1
     (nil))
(call_insn 800 799 801 135 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_dl_debug_initialize") [flags 0x43]  <function_decl 0x2ae4577fc438 _dl_debug_initialize>) [0 _dl_debug_initialize S1 A8])
            (const_int 0 [0]))) dl-close.c:488 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_debug_initialize") [flags 0x43]  <function_decl 0x2ae4577fc438 _dl_debug_initialize>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 801 800 802 135 (set (reg/v/f:DI 293 [ r ])
        (reg:DI 0 ax)) dl-close.c:488 -1
     (nil))
(insn 802 801 803 135 (set (mem:SI (plus:DI (reg/v/f:DI 293 [ r ])
                (const_int 24 [0x18])) [25 r_202->r_state+0 S4 A64])
        (const_int 2 [0x2])) dl-close.c:489 -1
     (nil))
(call_insn 803 802 804 135 (call (mem:QI (symbol_ref:DI ("*__GI__dl_debug_state") [flags 0x43]  <function_decl 0x2ae4577fc1b0 _dl_debug_state>) [0 _dl_debug_state S1 A8])
        (const_int 0 [0])) dl-close.c:490 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI__dl_debug_state") [flags 0x43]  <function_decl 0x2ae4577fc1b0 _dl_debug_state>)
        (nil))
    (nil))
(insn 804 803 805 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 414 [ unload_global ])
            (const_int 0 [0]))) dl-close.c:493 -1
     (nil))
(jump_insn 805 804 808 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 855)
            (pc))) dl-close.c:493 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 855)
(note 808 805 806 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(jump_insn 806 808 807 136 (set (pc)
        (label_ref 929)) dl-close.c:493 -1
     (nil)
 -> 929)
(barrier 807 806 809)
(code_label 809 807 810 137 91 "" [1 uses])
(note 810 809 811 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 811 810 812 137 (set (reg/f:DI 589)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:471 -1
     (nil))
(insn 812 811 813 137 (set (reg:DI 591)
        (reg/v:DI 163 [ nsid ])) dl-close.c:471 -1
     (nil))
(insn 813 812 814 137 (parallel [
            (set (reg:DI 592)
                (ashift:DI (reg:DI 591)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:471 -1
     (nil))
(insn 814 813 815 137 (parallel [
            (set (reg:DI 593)
                (plus:DI (reg:DI 592)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:471 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 815 814 816 137 (parallel [
            (set (reg:DI 594)
                (ashift:DI (reg:DI 593)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:471 -1
     (nil))
(insn 816 815 817 137 (set (reg:DI 593)
        (reg:DI 594)) dl-close.c:471 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 817 816 818 137 (set (reg:DI 590)
        (reg:DI 593)) dl-close.c:471 -1
     (nil))
(insn 818 817 819 137 (parallel [
            (set (reg/f:DI 595)
                (plus:DI (reg/f:DI 589)
                    (reg:DI 590)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:471 -1
     (nil))
(insn 819 818 820 137 (set (reg/v/f:DI 285 [ head ])
        (mem/f:DI (reg/f:DI 595) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) dl-close.c:471 -1
     (nil))
(insn 820 819 821 137 (set (reg/f:DI 596)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:472 -1
     (nil))
(insn 821 820 823 137 (set (reg/v/f:DI 290 [ afct ])
        (mem/f/c:DI (plus:DI (reg/f:DI 596)
                (const_int 352 [0x160])) [3 _rtld_local_ro._dl_audit+0 S8 A64])) dl-close.c:472 -1
     (nil))
(insn 823 821 824 137 (set (reg:QI 598)
        (mem:QI (plus:DI (reg/v/f:DI 285 [ head ])
                (const_int 789 [0x315])) [5 *head_191+789 S1 A8])) dl-close.c:474 -1
     (nil))
(insn 824 823 825 137 (parallel [
            (set (reg:QI 597 [ D.11588 ])
                (and:QI (reg:QI 598)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:474 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 285 [ head ])
                    (const_int 789 [0x315])) [5 *head_191+789 S1 A8])
            (const_int 8 [0x8]))
        (nil)))
(insn 825 824 826 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 597 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:474 -1
     (nil))
(jump_insn 826 825 827 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 822)
            (pc))) dl-close.c:474 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 822)
(note 827 826 828 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 138 (set (reg/f:DI 599)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:476 -1
     (nil))
(insn 829 828 830 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 599)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:476 -1
     (nil))
(jump_insn 830 829 831 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 822)
            (pc))) dl-close.c:476 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 822)
(note 831 830 101 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 101 831 848 139 (set (reg/v:SI 291 [ cnt ])
        (const_int 0 [0])) dl-close.c:476 -1
     (nil))
(code_label 848 101 832 140 96 "" [1 uses])
(note 832 848 833 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 140 (set (reg/f:DI 288 [ D.11599 ])
        (mem/f:DI (reg/v/f:DI 290 [ afct ]) [3 afct_584->activity+0 S8 A64])) dl-close.c:478 -1
     (nil))
(insn 834 833 835 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 288 [ D.11599 ])
            (const_int 0 [0]))) dl-close.c:478 -1
     (nil))
(jump_insn 835 834 836 140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 844)
            (pc))) dl-close.c:478 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 844)
(note 836 835 837 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 141 (set (reg:DI 600)
        (zero_extend:DI (reg/v:SI 291 [ cnt ]))) dl-close.c:479 -1
     (nil))
(insn 838 837 839 141 (parallel [
            (set (reg:DI 601)
                (plus:DI (reg:DI 600)
                    (const_int 71 [0x47])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:479 -1
     (nil))
(insn 839 838 840 141 (parallel [
            (set (reg:DI 602)
                (ashift:DI (reg:DI 601)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:479 -1
     (nil))
(insn 840 839 841 141 (parallel [
            (set (reg:DI 603 [ D.11594 ])
                (plus:DI (reg/v/f:DI 285 [ head ])
                    (reg:DI 602)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:479 -1
     (nil))
(insn 841 840 842 141 (set (reg:SI 4 si)
        (const_int 2 [0x2])) dl-close.c:479 -1
     (nil))
(insn 842 841 843 141 (set (reg:DI 5 di)
        (reg:DI 603 [ D.11594 ])) dl-close.c:479 -1
     (nil))
(call_insn 843 842 844 141 (call (mem:QI (reg/f:DI 288 [ D.11599 ]) [0 *_196 S1 A8])
        (const_int 0 [0])) dl-close.c:479 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 844 843 845 142 95 "" [1 uses])
(note 845 844 846 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 846 845 847 142 (set (reg/v/f:DI 290 [ afct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 290 [ afct ])
                (const_int 64 [0x40])) [3 afct_584->next+0 S8 A64])) dl-close.c:481 -1
     (nil))
(insn 847 846 849 142 (parallel [
            (set (reg/v:SI 291 [ cnt ])
                (plus:SI (reg/v:SI 291 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:476 -1
     (nil))
(insn 849 847 850 142 (set (reg/f:DI 604)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:476 -1
     (nil))
(insn 850 849 851 142 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 291 [ cnt ])
            (mem/c:SI (plus:DI (reg/f:DI 604)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64]))) dl-close.c:476 -1
     (nil))
(jump_insn 851 850 854 142 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 848)
            (pc))) dl-close.c:476 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 848)
(note 854 851 852 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(jump_insn 852 854 853 143 (set (pc)
        (label_ref 822)) dl-close.c:476 -1
     (nil)
 -> 822)
(barrier 853 852 855)
(code_label 855 853 856 144 92 "" [1 uses])
(note 856 855 857 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 857 856 858 144 (set (reg/f:DI 605)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:496 -1
     (nil))
(insn 858 857 859 144 (set (reg:DI 606)
        (reg/v:DI 163 [ nsid ])) dl-close.c:496 -1
     (nil))
(insn 859 858 860 144 (parallel [
            (set (reg:DI 607)
                (ashift:DI (reg:DI 606)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:496 -1
     (nil))
(insn 860 859 861 144 (parallel [
            (set (reg:DI 608)
                (plus:DI (reg:DI 607)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:496 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 861 860 862 144 (parallel [
            (set (reg:DI 609)
                (ashift:DI (reg:DI 608)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:496 -1
     (nil))
(insn 862 861 863 144 (set (reg:DI 608)
        (reg:DI 609)) dl-close.c:496 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 863 862 864 144 (parallel [
            (set (reg:DI 610)
                (plus:DI (reg/f:DI 605)
                    (reg:DI 608)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:496 -1
     (nil))
(insn 864 863 865 144 (parallel [
            (set (reg/f:DI 611)
                (plus:DI (reg:DI 610)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:496 -1
     (nil))
(insn 865 864 866 144 (set (reg/v/f:DI 294 [ ns_msl ])
        (mem/f:DI (reg/f:DI 611) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_main_searchlist+0 S8 A64])) dl-close.c:496 -1
     (nil))
(insn 866 865 867 144 (set (reg/v:SI 295 [ j ])
        (mem:SI (plus:DI (reg/v/f:DI 294 [ ns_msl ])
                (const_int 8 [0x8])) [8 ns_msl_203->r_nlist+0 S4 A64])) dl-close.c:499 -1
     (nil))
(insn 867 866 868 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 295 [ j ])
            (const_int 0 [0]))) dl-close.c:501 -1
     (nil))
(jump_insn 868 867 869 144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1579)
            (pc))) dl-close.c:501 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 1579)
(note 869 868 870 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 870 869 871 145 (set (reg/f:DI 439 [ D.11585 ])
        (mem/f:DI (reg/v/f:DI 294 [ ns_msl ]) [3 ns_msl_203->r_list+0 S8 A64])) dl-close.c:501 -1
     (nil))
(insn 871 870 872 145 (parallel [
            (set (reg/v:SI 417 [ j ])
                (plus:SI (reg/v:SI 295 [ j ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:501 -1
     (nil))
(insn 872 871 873 145 (set (reg:DI 612 [ D.11577 ])
        (zero_extend:DI (reg/v:SI 417 [ j ]))) dl-close.c:501 -1
     (nil))
(insn 873 872 874 145 (set (reg/f:DI 613)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 612 [ D.11577 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 439 [ D.11585 ])) [3 *_662+0 S8 A64])) dl-close.c:501 -1
     (nil))
(insn 874 873 875 145 (set (reg:QI 615)
        (mem:QI (plus:DI (reg/f:DI 613)
                (const_int 789 [0x315])) [5 *_624+789 S1 A8])) dl-close.c:501 -1
     (nil))
(insn 875 874 876 145 (parallel [
            (set (reg:QI 614 [ D.11588 ])
                (and:QI (reg:QI 615)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:501 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/f:DI 613)
                    (const_int 789 [0x315])) [5 *_624+789 S1 A8])
            (const_int 32 [0x20]))
        (nil)))
(insn 876 875 877 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 614 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:501 -1
     (nil))
(jump_insn 877 876 880 145 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 892)
            (pc))) dl-close.c:501 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 892)
(note 880 877 123 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 123 880 878 146 (set (reg/v:SI 442 [ j ])
        (reg/v:SI 295 [ j ])) dl-close.c:501 -1
     (nil))
(jump_insn 878 123 879 146 (set (pc)
        (label_ref 1511)) dl-close.c:501 -1
     (nil)
 -> 1511)
(barrier 879 878 896)
(code_label 896 879 881 147 101 "" [1 uses])
(note 881 896 882 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 147 (parallel [
            (set (reg/v:SI 296 [ j ])
                (plus:SI (reg/v:SI 417 [ j ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:501 -1
     (nil))
(insn 883 882 884 147 (set (reg:DI 616 [ D.11577 ])
        (zero_extend:DI (reg/v:SI 296 [ j ]))) dl-close.c:501 -1
     (nil))
(insn 884 883 885 147 (set (reg/f:DI 617)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 616 [ D.11577 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 439 [ D.11585 ])) [3 *_210+0 S8 A64])) dl-close.c:501 -1
     (nil))
(insn 885 884 886 147 (set (reg:QI 619)
        (mem:QI (plus:DI (reg/f:DI 617)
                (const_int 789 [0x315])) [5 *_211+789 S1 A8])) dl-close.c:501 -1
     (nil))
(insn 886 885 887 147 (parallel [
            (set (reg:QI 618 [ D.11588 ])
                (and:QI (reg:QI 619)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:501 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/f:DI 617)
                    (const_int 789 [0x315])) [5 *_211+789 S1 A8])
            (const_int 32 [0x20]))
        (nil)))
(insn 887 886 888 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 618 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:501 -1
     (nil))
(jump_insn 888 887 891 147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1583)
            (pc))) dl-close.c:501 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1583)
(note 891 888 124 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 124 891 889 148 (set (reg/v:SI 442 [ j ])
        (reg/v:SI 417 [ j ])) dl-close.c:501 -1
     (nil))
(jump_insn 889 124 890 148 (set (pc)
        (label_ref 1511)) dl-close.c:501 -1
     (nil)
 -> 1511)
(barrier 890 889 892)
(code_label 892 890 893 149 98 "" [1 uses])
(note 893 892 1580 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1580 893 1581 149 (set (pc)
        (label_ref 894)) -1
     (nil)
 -> 894)
(barrier 1581 1580 1583)
(code_label 1583 1581 1582 150 162 "" [1 uses])
(note 1582 1583 102 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 102 1582 894 150 (set (reg/v:SI 417 [ j ])
        (reg/v:SI 296 [ j ])) dl-close.c:501 -1
     (nil))
(code_label 894 102 895 151 100 "" [1 uses])
(note 895 894 897 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 897 895 898 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 417 [ j ])
            (const_int 0 [0]))) dl-close.c:501 -1
     (nil))
(jump_insn 898 897 901 151 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 896)
            (pc))) dl-close.c:501 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 896)
(note 901 898 899 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(jump_insn 899 901 900 152 (set (pc)
        (label_ref 926)) dl-close.c:501 -1
     (nil)
 -> 926)
(barrier 900 899 923)
(code_label 923 900 902 153 104 "" [1 uses])
(note 902 923 903 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 903 902 1517 153 (set (reg/f:DI 439 [ D.11585 ])
        (mem/f:DI (reg/v/f:DI 294 [ ns_msl ]) [3 ns_msl_203->r_list+0 S8 A64])) -1
     (nil))
(code_label 1517 903 904 154 151 "" [1 uses])
(note 904 1517 905 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 154 (set (reg/v:SI 426 [ i ])
        (subreg:SI (reg:DI 352 [ ivtmp.57 ]) 0)) -1
     (nil))
(insn 906 905 907 154 (set (reg/f:DI 305 [ D.11586 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 352 [ ivtmp.57 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 439 [ D.11585 ])) [3 *_219+0 S8 A64])) dl-close.c:509 -1
     (nil))
(insn 907 906 908 154 (set (reg:QI 621)
        (mem:QI (plus:DI (reg/f:DI 305 [ D.11586 ])
                (const_int 789 [0x315])) [5 *_220+789 S1 A8])) dl-close.c:509 -1
     (nil))
(insn 908 907 909 154 (parallel [
            (set (reg:QI 620 [ D.11588 ])
                (and:QI (reg:QI 621)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:509 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/f:DI 305 [ D.11586 ])
                    (const_int 789 [0x315])) [5 *_220+789 S1 A8])
            (const_int 32 [0x20]))
        (nil)))
(insn 909 908 910 154 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 620 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:509 -1
     (nil))
(jump_insn 910 909 911 154 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 920)
            (pc))) dl-close.c:509 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 920)
(note 911 910 912 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 912 911 913 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 426 [ i ])
            (reg/v:SI 417 [ j ]))) dl-close.c:511 -1
     (nil))
(jump_insn 913 912 914 155 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 917)
            (pc))) dl-close.c:511 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 917)
(note 914 913 915 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 156 (set (reg:DI 622 [ D.11577 ])
        (zero_extend:DI (reg/v:SI 417 [ j ]))) dl-close.c:512 -1
     (nil))
(insn 916 915 917 156 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 622 [ D.11577 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 439 [ D.11585 ])) [3 *_226+0 S8 A64])
        (reg/f:DI 305 [ D.11586 ])) dl-close.c:512 -1
     (nil))
(code_label 917 916 918 157 103 "" [1 uses])
(note 918 917 919 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 919 918 920 157 (parallel [
            (set (reg/v:SI 417 [ j ])
                (plus:SI (reg/v:SI 417 [ j ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:513 -1
     (nil))
(code_label 920 919 921 158 102 "" [1 uses])
(note 921 920 922 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 922 921 924 158 (parallel [
            (set (reg:DI 352 [ ivtmp.57 ])
                (plus:DI (reg:DI 352 [ ivtmp.57 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 924 922 925 158 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 442 [ j ])
            (subreg:SI (reg:DI 352 [ ivtmp.57 ]) 0))) dl-close.c:508 -1
     (nil))
(jump_insn 925 924 1575 158 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 923)
            (pc))) dl-close.c:508 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 923)
(note 1575 925 1576 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1576 1575 1577 159 (set (pc)
        (label_ref 926)) -1
     (nil)
 -> 926)
(barrier 1577 1576 1579)
(code_label 1579 1577 1578 160 161 "" [1 uses])
(note 1578 1579 104 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 104 1578 1600 160 (set (reg/v:SI 417 [ j ])
        (reg/v:SI 295 [ j ])) dl-close.c:501 -1
     (nil))
(jump_insn 1600 104 1601 160 (set (pc)
        (label_ref 926)) -1
     (nil)
 -> 926)
(barrier 1601 1600 1603)
(code_label 1603 1601 1602 161 167 "" [1 uses])
(note 1602 1603 103 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 103 1602 926 161 (set (reg/v:SI 417 [ j ])
        (reg/v:SI 442 [ j ])) dl-close.c:504 -1
     (nil))
(code_label 926 103 927 162 97 "" [3 uses])
(note 927 926 928 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 928 927 929 162 (set (mem:SI (plus:DI (reg/v/f:DI 294 [ ns_msl ])
                (const_int 8 [0x8])) [8 ns_msl_203->r_nlist+0 S4 A64])
        (reg/v:SI 417 [ j ])) dl-close.c:515 -1
     (nil))
(code_label 929 928 930 163 93 "" [1 uses])
(note 930 929 931 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 931 930 932 163 (parallel [
            (set (reg:SI 623 [ __value ])
                (asm_operands/v:SI ("movl %%fs:%P1,%0") ("=r") 0 [
                        (const_int 24 [0x18])
                    ]
                     [
                        (asm_input:DI ("i") dl-close.c:518)
                    ]
                     [] dl-close.c:518))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) dl-close.c:518 -1
     (nil))
(insn 932 931 933 163 (set (reg/v:SI 312 [ __value ])
        (reg:SI 623 [ __value ])) dl-close.c:518 -1
     (nil))
(insn 933 932 934 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 312 [ __value ])
            (const_int 0 [0]))) dl-close.c:518 -1
     (nil))
(jump_insn 934 933 956 163 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 945)
            (pc))) dl-close.c:518 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 945)
(code_label 956 934 935 164 109 "" [5 uses])
(note 935 956 936 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 164 (set (reg/f:DI 624)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:538 -1
     (nil))
(insn 937 936 938 164 (set (reg/f:DI 625)
        (mem/f/c:DI (plus:DI (reg/f:DI 624)
                (const_int 3848 [0xf08])) [3 _rtld_local._dl_rtld_lock_recursive+0 S8 A64])) dl-close.c:538 -1
     (nil))
(insn 938 937 939 164 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)
                (const_int 2352 [0x930])))) dl-close.c:538 -1
     (nil))
(call_insn 939 938 940 164 (call (mem:QI (reg/f:DI 625) [0 *_244 S1 A8])
        (const_int 0 [0])) dl-close.c:538 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 940 939 941 164 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 164 [ nloaded ])
            (reg/v:SI 415 [ i ]))) dl-close.c:542 -1
     (nil))
(jump_insn 941 940 944 164 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 989)
            (pc))) dl-close.c:542 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 989)
(note 944 941 942 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(jump_insn 942 944 943 165 (set (pc)
        (label_ref 1520)) dl-close.c:542 -1
     (nil)
 -> 1520)
(barrier 943 942 945)
(code_label 945 943 946 166 105 "" [1 uses])
(note 946 945 947 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 414 [ unload_global ])
            (const_int 0 [0]))) dl-close.c:519 -1
     (nil))
(insn 948 947 949 166 (set (reg:QI 627 [ D.11598 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dl-close.c:519 -1
     (nil))
(insn 949 948 950 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 627 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:519 -1
     (nil))
(jump_insn 950 949 1610 166 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) dl-close.c:519 -1
     (int_list:REG_BR_PROB 1450 (nil))
 -> 962)
(note 1610 950 951 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 951 1610 952 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 413 [ scope_mem_left ])
            (const_int 0 [0]))) dl-close.c:519 -1
     (nil))
(jump_insn 952 951 953 167 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) dl-close.c:519 -1
     (int_list:REG_BR_PROB 1696 (nil))
 -> 962)
(note 953 952 954 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 954 953 955 168 (set (reg/f:DI 628)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:521 -1
     (nil))
(insn 955 954 957 168 (set (reg/f:DI 318 [ D.11601 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 628)
                (const_int 3960 [0xf78])) [3 _rtld_local._dl_scope_free_list+0 S8 A64])) dl-close.c:521 -1
     (nil))
(insn 957 955 958 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 318 [ D.11601 ])
            (const_int 0 [0]))) dl-close.c:521 -1
     (nil))
(jump_insn 958 957 959 168 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) dl-close.c:521 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 956)
(note 959 958 960 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 960 959 961 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg/f:DI 318 [ D.11601 ]) [2 _237->count+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:522 -1
     (nil))
(jump_insn 961 960 962 169 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) dl-close.c:522 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 956)
(code_label 962 961 963 170 108 "" [2 uses])
(note 963 962 964 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 170 (set (reg/f:DI 629)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:524 -1
     (nil))
(insn 965 964 966 170 (set (reg/f:DI 630)
        (mem/f/c:DI (plus:DI (reg/f:DI 629)
                (const_int 3952 [0xf70])) [3 _rtld_local._dl_wait_lookup_done+0 S8 A64])) dl-close.c:524 -1
     (nil))
(call_insn 966 965 967 170 (call (mem:QI (reg/f:DI 630) [0 *_239 S1 A8])
        (const_int 0 [0])) dl-close.c:524 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (nil))
(insn 967 966 968 170 (set (reg/f:DI 631)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:527 -1
     (nil))
(insn 968 967 969 170 (set (reg/v/f:DI 321 [ fsl ])
        (mem/f/c:DI (plus:DI (reg/f:DI 631)
                (const_int 3960 [0xf78])) [3 _rtld_local._dl_scope_free_list+0 S8 A64])) dl-close.c:527 -1
     (nil))
(insn 969 968 970 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 321 [ fsl ])
            (const_int 0 [0]))) dl-close.c:528 -1
     (nil))
(jump_insn 970 969 971 170 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) dl-close.c:528 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 956)
(note 971 970 972 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 171 (set (reg:DI 322 [ D.11577 ])
        (mem:DI (reg/v/f:DI 321 [ fsl ]) [2 fsl_240->count+0 S8 A64])) dl-close.c:529 -1
     (nil))
(insn 973 972 974 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 322 [ D.11577 ])
            (const_int 0 [0]))) dl-close.c:529 -1
     (nil))
(jump_insn 974 973 975 171 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 956)
            (pc))) dl-close.c:529 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 956)
(note 975 974 983 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(code_label 983 975 976 173 110 "" [1 uses])
(note 976 983 977 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 977 976 978 173 (parallel [
            (set (reg:DI 323 [ D.11577 ])
                (plus:DI (reg:DI 322 [ D.11577 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:530 -1
     (nil))
(insn 978 977 979 173 (set (mem:DI (reg/v/f:DI 321 [ fsl ]) [2 fsl_240->count+0 S8 A64])
        (reg:DI 323 [ D.11577 ])) dl-close.c:530 -1
     (nil))
(insn 979 978 980 173 (set (reg:DI 632)
        (mem/f:DI (plus:DI (plus:DI (mult:DI (reg:DI 323 [ D.11577 ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 321 [ fsl ]))
                (const_int 8 [0x8])) [3 fsl_240->list S8 A64])) dl-close.c:530 -1
     (nil))
(insn 980 979 981 173 (set (reg:DI 5 di)
        (reg:DI 632)) dl-close.c:530 -1
     (nil))
(call_insn 981 980 982 173 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:530 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 982 981 984 173 (set (reg:DI 322 [ D.11577 ])
        (mem:DI (reg/v/f:DI 321 [ fsl ]) [2 fsl_240->count+0 S8 A64])) dl-close.c:529 -1
     (nil))
(insn 984 982 985 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 322 [ D.11577 ])
            (const_int 0 [0]))) dl-close.c:529 -1
     (nil))
(jump_insn 985 984 988 173 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 983)
            (pc))) dl-close.c:529 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 983)
(note 988 985 986 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(jump_insn 986 988 987 174 (set (pc)
        (label_ref 956)) dl-close.c:529 -1
     (nil)
 -> 956)
(barrier 987 986 989)
(code_label 989 987 990 175 106 "" [1 uses])
(note 990 989 105 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 105 990 106 175 (set (reg/v:QI 416 [ any_tls ])
        (const_int 0 [0])) dl-close.c:542 -1
     (nil))
(insn 106 105 107 175 (set (reg/v:DI 419 [ tls_free_end ])
        (const_int 0 [0])) dl-close.c:542 -1
     (nil))
(insn 107 106 1345 175 (set (reg/v:DI 418 [ tls_free_end ])
        (const_int 0 [0])) dl-close.c:542 -1
     (nil))
(code_label 1345 107 991 176 138 "" [1 uses])
(note 991 1345 992 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 176 (set (reg:DI 633)
        (zero_extend:DI (reg/v:SI 415 [ i ]))) dl-close.c:545 -1
     (nil))
(insn 993 992 994 176 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 167 [ used.1 ])
                    (reg:DI 633)) [0 MEM[(char[0:D.10810] *)used.1_26] S1 A8])
            (const_int 0 [0]))) dl-close.c:545 -1
     (nil))
(jump_insn 994 993 995 176 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1342)
            (pc))) dl-close.c:545 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1342)
(note 995 994 996 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 177 (set (reg:DI 634)
        (zero_extend:DI (reg/v:SI 415 [ i ]))) dl-close.c:544 -1
     (nil))
(insn 997 996 998 177 (set (reg/v/f:DI 327 [ imap ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 634)
                    (const_int 8 [0x8]))
                (reg/f:DI 170 [ maps.3 ])) [3 MEM[(struct link_map *[0:D.10810] *)maps.3_29] S8 A64])) dl-close.c:544 -1
     (nil))
(insn 998 997 999 177 (set (reg:QI 329 [ D.11588 ])
        (mem:QI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 788 [0x314])) [5 *imap_246+788 S1 A32])) dl-close.c:547 -1
     (nil))
(insn 999 998 1000 177 (parallel [
            (set (reg:QI 635 [ D.11588 ])
                (and:QI (reg:QI 329 [ D.11588 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:547 -1
     (nil))
(insn 1000 999 1001 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 635 [ D.11588 ])
            (const_int 2 [0x2]))) dl-close.c:547 -1
     (nil))
(jump_insn 1001 1000 1002 177 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1009)
            (pc))) dl-close.c:547 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1009)
(note 1002 1001 1003 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1004 178 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:547 -1
     (nil))
(insn 1004 1003 1005 178 (set (reg:SI 1 dx)
        (const_int 547 [0x223])) dl-close.c:547 -1
     (nil))
(insn 1005 1004 1006 178 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:547 -1
     (nil))
(insn 1006 1005 1007 178 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2ae457a686c0 *.LC14>)) dl-close.c:547 -1
     (nil))
(call_insn 1007 1006 1008 178 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:547 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1008 1007 1009)
(code_label 1009 1008 1010 179 112 "" [1 uses])
(note 1010 1009 1011 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 1011 1010 1012 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                    (const_int 1064 [0x428])) [2 imap_246->l_tls_blocksize+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:553 -1
     (nil))
(jump_insn 1012 1011 1013 179 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1093)
            (pc))) dl-close.c:553 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1093)
(note 1013 1012 1014 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 180 (set (reg/f:DI 636)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:557 -1
     (nil))
(insn 1015 1014 1016 180 (set (reg/f:DI 333 [ D.11603 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 636)
                (const_int 3888 [0xf30])) [3 _rtld_local._dl_tls_dtv_slotinfo_list+0 S8 A64])) dl-close.c:557 -1
     (nil))
(insn 1016 1015 1017 180 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 333 [ D.11603 ])
            (const_int 0 [0]))) dl-close.c:557 -1
     (nil))
(jump_insn 1017 1016 1018 180 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1021)
            (pc))) dl-close.c:557 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 1021)
(note 1018 1017 1019 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1019 1018 1020 181 (set (pc)
        (label_ref 1041)) dl-close.c:557 -1
     (nil)
 -> 1041)
(barrier 1020 1019 1021)
(code_label 1021 1020 1022 182 114 "" [1 uses])
(note 1022 1021 1023 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 1023 1022 1024 182 (parallel [
            (set (reg:QI 637)
                (lshiftrt:QI (reg:QI 329 [ D.11588 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:558 -1
     (nil))
(insn 1024 1023 1025 182 (set (reg:SI 638)
        (zero_extend:SI (reg:QI 637))) dl-close.c:558 -1
     (nil))
(insn 1025 1024 1026 182 (parallel [
            (set (reg:SI 639 [ D.11598 ])
                (and:SI (reg:SI 638)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:558 -1
     (nil))
(insn 1026 1025 1027 182 (set (reg:DI 640)
        (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 1096 [0x448])) [2 imap_246->l_tls_modid+0 S8 A64])) dl-close.c:558 -1
     (nil))
(insn 1027 1026 1028 182 (set (reg:SI 2 cx)
        (reg:SI 639 [ D.11598 ])) dl-close.c:558 -1
     (nil))
(insn 1028 1027 1029 182 (set (reg:DI 1 dx)
        (const_int 0 [0])) dl-close.c:558 -1
     (nil))
(insn 1029 1028 1030 182 (set (reg:DI 4 si)
        (reg/f:DI 333 [ D.11603 ])) dl-close.c:558 -1
     (nil))
(insn 1030 1029 1031 182 (set (reg:DI 5 di)
        (reg:DI 640)) dl-close.c:558 -1
     (nil))
(call_insn 1031 1030 1032 182 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("remove_slotinfo") [flags 0x3]  <function_decl 0x2ae4578470d8 remove_slotinfo>) [0 remove_slotinfo S1 A8])
            (const_int 0 [0]))) dl-close.c:558 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("remove_slotinfo") [flags 0x3]  <function_decl 0x2ae4578470d8 remove_slotinfo>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1032 1031 1034 182 (set (reg:QI 338 [ D.11598 ])
        (reg:QI 0 ax)) dl-close.c:558 -1
     (nil))
(insn 1034 1032 1035 182 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 338 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:558 -1
     (nil))
(jump_insn 1035 1034 1036 182 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1041)
            (pc))) dl-close.c:558 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1041)
(note 1036 1035 1037 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 1037 1036 1038 183 (set (reg/f:DI 641)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:562 -1
     (nil))
(insn 1038 1037 1039 183 (set (reg/f:DI 642)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:562 -1
     (nil))
(insn 1039 1038 1040 183 (set (reg:DI 643)
        (mem/c:DI (plus:DI (reg/f:DI 642)
                (const_int 3896 [0xf38])) [2 _rtld_local._dl_tls_static_nelem+0 S8 A64])) dl-close.c:562 -1
     (nil))
(insn 1040 1039 1041 183 (set (mem/c:DI (plus:DI (reg/f:DI 641)
                (const_int 3880 [0xf28])) [2 _rtld_local._dl_tls_max_dtv_idx+0 S8 A64])
        (reg:DI 643)) dl-close.c:562 -1
     (nil))
(code_label 1041 1040 1042 184 115 "" [2 uses])
(note 1042 1041 1043 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 1043 1042 1044 184 (set (reg/v:DI 341 [ tls_free_end ])
        (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 1088 [0x440])) [2 imap_246->l_tls_offset+0 S8 A64])) dl-close.c:565 -1
     (nil))
(insn 1044 1043 1045 184 (parallel [
            (set (reg:DI 644 [ D.11596 ])
                (plus:DI (reg/v:DI 341 [ tls_free_end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:564 -1
     (nil))
(insn 1045 1044 1046 184 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 644 [ D.11596 ])
            (const_int 1 [0x1]))) dl-close.c:564 -1
     (nil))
(jump_insn 1046 1045 1047 184 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1587)
            (pc))) dl-close.c:564 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1587)
(note 1047 1046 1048 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 341 [ tls_free_end ])
            (reg/v:DI 418 [ tls_free_end ]))) dl-close.c:573 -1
     (nil))
(insn 1049 1048 1050 185 (set (reg:QI 646 [ D.11598 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dl-close.c:573 -1
     (nil))
(insn 1050 1049 1051 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 646 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:573 -1
     (nil))
(jump_insn 1051 1050 1611 185 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1614)
            (pc))) dl-close.c:573 612 {*jcc_1}
     (int_list:REG_BR_PROB 1400 (nil))
 -> 1614)
(note 1611 1051 1052 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 1052 1611 1053 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 418 [ tls_free_end ])
            (const_int 0 [0]))) dl-close.c:573 -1
     (nil))
(insn 1053 1052 1054 186 (set (reg:QI 648 [ D.11598 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dl-close.c:573 -1
     (nil))
(insn 1054 1053 1055 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 648 [ D.11598 ])
            (const_int 0 [0]))) dl-close.c:573 -1
     (nil))
(jump_insn 1055 1054 1612 186 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1064)
            (pc))) dl-close.c:573 -1
     (int_list:REG_BR_PROB 8372 (nil))
 -> 1064)
(note 1612 1055 1614 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(code_label 1614 1612 1057 188 170 "" [1 uses])
(note 1057 1614 1058 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 188 (parallel [
            (set (reg/v:DI 418 [ tls_free_end ])
                (minus:DI (reg/v:DI 341 [ tls_free_end ])
                    (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                            (const_int 1064 [0x428])) [2 imap_246->l_tls_blocksize+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:577 -1
     (nil))
(insn 1059 1058 1060 188 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 419 [ tls_free_end ])
            (const_int 0 [0]))) dl-close.c:579 -1
     (nil))
(jump_insn 1060 1059 1061 188 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1591)
            (pc))) dl-close.c:579 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1591)
(note 1061 1060 109 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 109 1061 1062 189 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1062 109 1063 189 (set (pc)
        (label_ref 1093)) dl-close.c:579 -1
     (nil)
 -> 1093)
(barrier 1063 1062 1064)
(code_label 1064 1063 1065 190 117 "" [1 uses])
(note 1065 1064 1066 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 1066 1065 1067 190 (parallel [
            (set (reg/v:DI 345 [ tls_free_end ])
                (minus:DI (reg/v:DI 341 [ tls_free_end ])
                    (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                            (const_int 1064 [0x428])) [2 imap_246->l_tls_blocksize+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:582 -1
     (nil))
(insn 1067 1066 1068 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 345 [ tls_free_end ])
            (reg/v:DI 419 [ tls_free_end ]))) dl-close.c:582 -1
     (nil))
(jump_insn 1068 1067 1069 190 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1595)
            (pc))) dl-close.c:582 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1595)
(note 1069 1068 1070 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 1070 1069 1071 191 (set (reg/f:DI 649)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:591 -1
     (nil))
(insn 1071 1070 1072 191 (set (reg:DI 346 [ D.11577 ])
        (mem/c:DI (plus:DI (reg/f:DI 649)
                (const_int 3912 [0xf48])) [2 _rtld_local._dl_tls_static_used+0 S8 A64])) dl-close.c:591 -1
     (nil))
(insn 1072 1071 1073 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 346 [ D.11577 ])
            (reg/v:DI 419 [ tls_free_end ]))) dl-close.c:591 -1
     (nil))
(jump_insn 1073 1072 1074 191 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1079)
            (pc))) dl-close.c:591 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1079)
(note 1074 1073 1075 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1075 1074 1076 192 (set (reg/f:DI 650)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:593 -1
     (nil))
(insn 1076 1075 114 192 (set (mem/c:DI (plus:DI (reg/f:DI 650)
                (const_int 3912 [0xf48])) [2 _rtld_local._dl_tls_static_used+0 S8 A64])
        (reg/v:DI 418 [ tls_free_end ])) dl-close.c:593 -1
     (nil))
(insn 114 1076 115 192 (set (reg/v:DI 419 [ tls_free_end ])
        (reg/v:DI 341 [ tls_free_end ])) dl-close.c:593 -1
     (nil))
(insn 115 114 116 192 (set (reg/v:DI 418 [ tls_free_end ])
        (reg/v:DI 345 [ tls_free_end ])) dl-close.c:593 -1
     (nil))
(insn 116 115 1077 192 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1077 116 1078 192 (set (pc)
        (label_ref 1093)) dl-close.c:593 -1
     (nil)
 -> 1093)
(barrier 1078 1077 1079)
(code_label 1079 1078 1080 193 119 "" [1 uses])
(note 1080 1079 1081 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 341 [ tls_free_end ])
            (reg:DI 346 [ D.11577 ]))) dl-close.c:598 -1
     (nil))
(jump_insn 1082 1081 1083 193 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1088)
            (pc))) dl-close.c:598 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1088)
(note 1083 1082 1084 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1083 1085 194 (set (reg/f:DI 651)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:601 -1
     (nil))
(insn 1085 1084 117 194 (set (mem/c:DI (plus:DI (reg/f:DI 651)
                (const_int 3912 [0xf48])) [2 _rtld_local._dl_tls_static_used+0 S8 A64])
        (reg/v:DI 345 [ tls_free_end ])) dl-close.c:601 -1
     (nil))
(insn 117 1085 1086 194 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1086 117 1087 194 (set (pc)
        (label_ref 1093)) dl-close.c:601 -1
     (nil)
 -> 1093)
(barrier 1087 1086 1088)
(code_label 1088 1087 1089 195 120 "" [1 uses])
(note 1089 1088 1090 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 1090 1089 1091 195 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 341 [ tls_free_end ])
            (reg/v:DI 419 [ tls_free_end ]))) dl-close.c:602 -1
     (nil))
(jump_insn 1091 1090 1092 195 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1599)
            (pc))) dl-close.c:602 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1599)
(note 1092 1091 118 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 118 1092 1584 196 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1584 118 1585 196 (set (pc)
        (label_ref 1093)) -1
     (nil)
 -> 1093)
(barrier 1585 1584 1587)
(code_label 1587 1585 1586 197 163 "" [1 uses])
(note 1586 1587 108 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 108 1586 1588 197 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1588 108 1589 197 (set (pc)
        (label_ref 1093)) -1
     (nil)
 -> 1093)
(barrier 1589 1588 1591)
(code_label 1591 1589 1590 198 164 "" [1 uses])
(note 1590 1591 110 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 110 1590 111 198 (set (reg/v:DI 419 [ tls_free_end ])
        (reg/v:DI 341 [ tls_free_end ])) dl-close.c:579 -1
     (nil))
(insn 111 110 1592 198 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1592 111 1593 198 (set (pc)
        (label_ref 1093)) -1
     (nil)
 -> 1093)
(barrier 1593 1592 1595)
(code_label 1595 1593 1594 199 165 "" [1 uses])
(note 1594 1595 112 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 112 1594 113 199 (set (reg/v:DI 419 [ tls_free_end ])
        (reg/v:DI 341 [ tls_free_end ])) dl-close.c:582 -1
     (nil))
(insn 113 112 1596 199 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(jump_insn 1596 113 1597 199 (set (pc)
        (label_ref 1093)) -1
     (nil)
 -> 1093)
(barrier 1597 1596 1599)
(code_label 1599 1597 1598 200 166 "" [1 uses])
(note 1598 1599 119 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 119 1598 120 200 (set (reg/v:DI 419 [ tls_free_end ])
        (reg/v:DI 341 [ tls_free_end ])) dl-close.c:602 -1
     (nil))
(insn 120 119 121 200 (set (reg/v:DI 418 [ tls_free_end ])
        (reg/v:DI 345 [ tls_free_end ])) dl-close.c:602 -1
     (nil))
(insn 121 120 1093 200 (set (reg/v:QI 416 [ any_tls ])
        (const_int 1 [0x1])) dl-close.c:555 -1
     (nil))
(code_label 1093 121 1094 201 113 "" [8 uses])
(note 1094 1093 1095 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 1095 1094 1096 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 453 [ force ])
            (const_int 0 [0]))) dl-close.c:651 -1
     (nil))
(jump_insn 1096 1095 1097 201 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1187)
            (pc))) dl-close.c:651 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1187)
(note 1097 1096 1098 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 1098 1097 1099 202 (set (reg:DI 652)
        (reg/v:DI 163 [ nsid ])) dl-close.c:654 -1
     (nil))
(insn 1099 1098 1100 202 (parallel [
            (set (reg:DI 653)
                (ashift:DI (reg:DI 652)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:654 -1
     (nil))
(insn 1100 1099 1101 202 (parallel [
            (set (reg:DI 654)
                (plus:DI (reg:DI 653)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:654 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1101 1100 1102 202 (parallel [
            (set (reg:DI 655)
                (ashift:DI (reg:DI 654)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:654 -1
     (nil))
(insn 1102 1101 1103 202 (set (reg:DI 654)
        (reg:DI 655)) dl-close.c:654 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1103 1102 1104 202 (parallel [
            (set (reg:DI 656)
                (plus:DI (reg:DI 654)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:654 -1
     (nil))
(insn 1104 1103 1105 202 (set (reg:DI 657)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:654 -1
     (nil))
(insn 1105 1104 1106 202 (parallel [
            (set (reg/f:DI 348 [ D.11604 ])
                (plus:DI (reg:DI 656)
                    (reg:DI 657)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:654 -1
     (nil))
(insn 1106 1105 1107 202 (set (reg/f:DI 658)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:654 -1
     (nil))
(insn 1107 1106 1108 202 (set (reg/f:DI 659)
        (mem/f/c:DI (plus:DI (reg/f:DI 658)
                (const_int 3848 [0xf08])) [3 _rtld_local._dl_rtld_lock_recursive+0 S8 A64])) dl-close.c:654 -1
     (nil))
(insn 1108 1107 1109 202 (set (reg:DI 5 di)
        (reg/f:DI 348 [ D.11604 ])) dl-close.c:654 -1
     (nil))
(call_insn 1109 1108 1110 202 (call (mem:QI (reg/f:DI 659) [0 *_271 S1 A8])
        (const_int 0 [0])) dl-close.c:654 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1110 1109 1111 202 (set (reg/f:DI 660)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:655 -1
     (nil))
(insn 1111 1110 1112 202 (set (reg:DI 661)
        (reg/v:DI 163 [ nsid ])) dl-close.c:655 -1
     (nil))
(insn 1112 1111 1113 202 (parallel [
            (set (reg:DI 662)
                (ashift:DI (reg:DI 661)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:655 -1
     (nil))
(insn 1113 1112 1114 202 (parallel [
            (set (reg:DI 663)
                (plus:DI (reg:DI 662)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:655 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1114 1113 1115 202 (parallel [
            (set (reg:DI 664)
                (ashift:DI (reg:DI 663)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:655 -1
     (nil))
(insn 1115 1114 1116 202 (set (reg:DI 663)
        (reg:DI 664)) dl-close.c:655 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1116 1115 1117 202 (parallel [
            (set (reg:DI 665)
                (plus:DI (reg/f:DI 660)
                    (reg:DI 663)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:655 -1
     (nil))
(insn 1117 1116 1118 202 (parallel [
            (set (reg/f:DI 666)
                (plus:DI (reg:DI 665)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:655 -1
     (nil))
(insn 1118 1117 1119 202 (set (reg/v/f:DI 349 [ entries ])
        (mem/f:DI (reg/f:DI 666) [19 MEM[(struct unique_sym_table *)&_rtld_local]._dl_ns[nsid_22]._ns_unique_sym_table.entries+0 S8 A64])) dl-close.c:655 -1
     (nil))
(insn 1119 1118 1120 202 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 349 [ entries ])
            (const_int 0 [0]))) dl-close.c:656 -1
     (nil))
(jump_insn 1120 1119 1139 202 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1128)
            (pc))) dl-close.c:656 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1128)
(code_label 1139 1120 1121 203 123 "" [2 uses])
(note 1121 1139 1122 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 1122 1121 1123 203 (set (reg/f:DI 667)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:672 -1
     (nil))
(insn 1123 1122 1124 203 (set (reg/f:DI 668)
        (mem/f/c:DI (plus:DI (reg/f:DI 667)
                (const_int 3856 [0xf10])) [3 _rtld_local._dl_rtld_unlock_recursive+0 S8 A64])) dl-close.c:672 -1
     (nil))
(insn 1124 1123 1125 203 (set (reg:DI 5 di)
        (reg/f:DI 348 [ D.11604 ])) dl-close.c:672 -1
     (nil))
(call_insn 1125 1124 1126 203 (call (mem:QI (reg/f:DI 668) [0 *_283 S1 A8])
        (const_int 0 [0])) dl-close.c:672 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1126 1125 1127 203 (set (pc)
        (label_ref 1187)) dl-close.c:672 -1
     (nil)
 -> 1187)
(barrier 1127 1126 1128)
(code_label 1128 1127 1129 204 122 "" [1 uses])
(note 1129 1128 1130 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1130 1129 1131 204 (set (reg/f:DI 669)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:658 -1
     (nil))
(insn 1131 1130 1132 204 (set (reg:DI 670)
        (reg/v:DI 163 [ nsid ])) dl-close.c:658 -1
     (nil))
(insn 1132 1131 1133 204 (parallel [
            (set (reg:DI 671)
                (ashift:DI (reg:DI 670)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:658 -1
     (nil))
(insn 1133 1132 1134 204 (parallel [
            (set (reg:DI 672)
                (plus:DI (reg:DI 671)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:658 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1134 1133 1135 204 (parallel [
            (set (reg:DI 673)
                (ashift:DI (reg:DI 672)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:658 -1
     (nil))
(insn 1135 1134 1136 204 (set (reg:DI 672)
        (reg:DI 673)) dl-close.c:658 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1136 1135 1137 204 (parallel [
            (set (reg:DI 674)
                (plus:DI (reg/f:DI 669)
                    (reg:DI 672)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:658 -1
     (nil))
(insn 1137 1136 1138 204 (parallel [
            (set (reg/f:DI 675)
                (plus:DI (reg:DI 674)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:658 -1
     (nil))
(insn 1138 1137 1140 204 (set (reg/v:DI 350 [ size ])
        (mem:DI (reg/f:DI 675) [19 MEM[(struct unique_sym_table *)&_rtld_local]._dl_ns[nsid_22]._ns_unique_sym_table.size+0 S8 A64])) dl-close.c:658 -1
     (nil))
(insn 1140 1138 1141 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 350 [ size ])
            (const_int 0 [0]))) dl-close.c:659 -1
     (nil))
(jump_insn 1141 1140 1142 204 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1139)
            (pc))) dl-close.c:659 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1139)
(note 1142 1141 1143 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 1143 1142 1144 205 (set (reg:DI 403 [ ivtmp.49 ])
        (reg/v/f:DI 349 [ entries ])) -1
     (nil))
(insn 1144 1143 1145 205 (parallel [
            (set (reg:DI 676 [ D.11596 ])
                (ashift:DI (reg/v:DI 350 [ size ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1145 1144 1181 205 (parallel [
            (set (reg:DI 451 [ D.11596 ])
                (plus:DI (reg/v/f:DI 349 [ entries ])
                    (reg:DI 676 [ D.11596 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1181 1145 1146 206 125 "" [1 uses])
(note 1146 1181 1147 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 1147 1146 1148 206 (set (reg/f:DI 422 [ D.11581 ])
        (reg:DI 403 [ ivtmp.49 ])) -1
     (nil))
(insn 1148 1147 1149 206 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/f:DI 422 [ D.11581 ])
                    (const_int 8 [0x8])) [3 MEM[base: _400, offset: 8B]+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:663 -1
     (nil))
(jump_insn 1149 1148 1150 206 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1178)
            (pc))) dl-close.c:663 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1178)
(note 1150 1149 1151 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 1151 1150 1152 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 327 [ imap ])
            (mem/f:DI (plus:DI (reg/f:DI 422 [ D.11581 ])
                    (const_int 24 [0x18])) [3 MEM[base: _400, offset: 24B]+0 S8 A64]))) dl-close.c:664 -1
     (nil))
(jump_insn 1152 1151 1153 207 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1178)
            (pc))) dl-close.c:664 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1178)
(note 1153 1152 1154 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 1154 1153 1155 208 (set (mem/f:DI (plus:DI (reg/f:DI 422 [ D.11581 ])
                (const_int 8 [0x8])) [3 MEM[base: _400, offset: 8B]+0 S8 A64])
        (const_int 0 [0])) dl-close.c:666 -1
     (nil))
(insn 1155 1154 1156 208 (set (mem:SI (reg/f:DI 422 [ D.11581 ]) [8 MEM[base: _400, offset: 0B]+0 S4 A32])
        (const_int 0 [0])) dl-close.c:667 -1
     (nil))
(insn 1156 1155 1157 208 (set (reg/f:DI 677)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:668 -1
     (nil))
(insn 1157 1156 1158 208 (set (reg:DI 678)
        (reg/v:DI 163 [ nsid ])) dl-close.c:668 -1
     (nil))
(insn 1158 1157 1159 208 (parallel [
            (set (reg:DI 679)
                (ashift:DI (reg:DI 678)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1159 1158 1160 208 (parallel [
            (set (reg:DI 680)
                (plus:DI (reg:DI 679)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1160 1159 1161 208 (parallel [
            (set (reg:DI 681)
                (ashift:DI (reg:DI 680)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1161 1160 1162 208 (set (reg:DI 680)
        (reg:DI 681)) dl-close.c:668 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1162 1161 1163 208 (parallel [
            (set (reg:DI 682)
                (plus:DI (reg/f:DI 677)
                    (reg:DI 680)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1163 1162 1164 208 (parallel [
            (set (reg/f:DI 683)
                (plus:DI (reg:DI 682)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1164 1163 1165 208 (set (reg/f:DI 684)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:668 -1
     (nil))
(insn 1165 1164 1166 208 (set (reg:DI 685)
        (reg/v:DI 163 [ nsid ])) dl-close.c:668 -1
     (nil))
(insn 1166 1165 1167 208 (parallel [
            (set (reg:DI 686)
                (ashift:DI (reg:DI 685)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1167 1166 1168 208 (parallel [
            (set (reg:DI 687)
                (plus:DI (reg:DI 686)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1168 1167 1169 208 (parallel [
            (set (reg:DI 688)
                (ashift:DI (reg:DI 687)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1169 1168 1170 208 (set (reg:DI 687)
        (reg:DI 688)) dl-close.c:668 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1170 1169 1171 208 (parallel [
            (set (reg:DI 689)
                (plus:DI (reg/f:DI 684)
                    (reg:DI 687)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1171 1170 1175 208 (parallel [
            (set (reg/f:DI 690)
                (plus:DI (reg:DI 689)
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (nil))
(insn 1175 1171 1176 208 (set (reg:DI 694)
        (mem:DI (reg/f:DI 690) [19 MEM[(struct unique_sym_table *)&_rtld_local]._dl_ns[nsid_22]._ns_unique_sym_table.n_elements+0 S8 A64])) dl-close.c:668 -1
     (nil))
(insn 1176 1175 1177 208 (parallel [
            (set (reg:DI 693 [ D.11577 ])
                (plus:DI (reg:DI 694)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:668 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/f:DI 690) [19 MEM[(struct unique_sym_table *)&_rtld_local]._dl_ns[nsid_22]._ns_unique_sym_table.n_elements+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1177 1176 1178 208 (set (mem:DI (reg/f:DI 683) [19 MEM[(struct unique_sym_table *)&_rtld_local]._dl_ns[nsid_22]._ns_unique_sym_table.n_elements+0 S8 A64])
        (reg:DI 693 [ D.11577 ])) dl-close.c:668 -1
     (nil))
(code_label 1178 1177 1179 209 124 "" [2 uses])
(note 1179 1178 1180 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 1180 1179 1182 209 (parallel [
            (set (reg:DI 403 [ ivtmp.49 ])
                (plus:DI (reg:DI 403 [ ivtmp.49 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1182 1180 1183 209 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 403 [ ivtmp.49 ])
            (reg:DI 451 [ D.11596 ]))) dl-close.c:659 -1
     (nil))
(jump_insn 1183 1182 1186 209 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1181)
            (pc))) dl-close.c:659 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1181)
(note 1186 1183 1184 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1184 1186 1185 210 (set (pc)
        (label_ref 1139)) dl-close.c:659 -1
     (nil)
 -> 1139)
(barrier 1185 1184 1187)
(code_label 1187 1185 1188 211 121 "" [2 uses])
(note 1188 1187 1189 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 1189 1188 1190 211 (set (reg:DI 5 di)
        (reg/v/f:DI 327 [ imap ])) dl-close.c:678 -1
     (nil))
(call_insn 1190 1189 1191 211 (call (mem:QI (symbol_ref:DI ("_dl_unmap") [flags 0x43]  <function_decl 0x2ae4573e1d80 _dl_unmap>) [0 _dl_unmap S1 A8])
        (const_int 0 [0])) dl-close.c:678 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_unmap") [flags 0x43]  <function_decl 0x2ae4573e1d80 _dl_unmap>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1191 1190 1192 211 (set (reg/f:DI 360 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 32 [0x20])) [3 imap_246->l_prev+0 S8 A64])) dl-close.c:690 -1
     (nil))
(insn 1192 1191 1193 211 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 360 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:690 -1
     (nil))
(jump_insn 1193 1192 1194 211 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1219)
            (pc))) dl-close.c:690 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 1219)
(note 1194 1193 1195 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 1195 1194 1196 212 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 163 [ nsid ])
            (const_int 0 [0]))) dl-close.c:692 -1
     (nil))
(jump_insn 1196 1195 1197 212 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1204)
            (pc))) dl-close.c:692 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1204)
(note 1197 1196 1198 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 1198 1197 1199 213 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10675") [flags 0x2]  <var_decl 0x2ae45782da20 __PRETTY_FUNCTION__>)) dl-close.c:692 -1
     (nil))
(insn 1199 1198 1200 213 (set (reg:SI 1 dx)
        (const_int 692 [0x2b4])) dl-close.c:692 -1
     (nil))
(insn 1200 1199 1201 213 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:692 -1
     (nil))
(insn 1201 1200 1202 213 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2ae457a68750 *.LC15>)) dl-close.c:692 -1
     (nil))
(call_insn 1202 1201 1203 213 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:692 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1203 1202 1204)
(code_label 1204 1203 1205 214 127 "" [1 uses])
(note 1205 1204 1206 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 1206 1205 1207 214 (set (reg/f:DI 361 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 24 [0x18])) [3 imap_246->l_next+0 S8 A64])) dl-close.c:693 -1
     (nil))
(insn 1207 1206 1208 214 (set (reg/f:DI 695)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:693 -1
     (nil))
(insn 1208 1207 1209 214 (set (reg:DI 697)
        (reg/v:DI 163 [ nsid ])) dl-close.c:693 -1
     (nil))
(insn 1209 1208 1210 214 (parallel [
            (set (reg:DI 698)
                (ashift:DI (reg:DI 697)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:693 -1
     (nil))
(insn 1210 1209 1211 214 (parallel [
            (set (reg:DI 699)
                (plus:DI (reg:DI 698)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:693 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1211 1210 1212 214 (parallel [
            (set (reg:DI 700)
                (ashift:DI (reg:DI 699)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:693 -1
     (nil))
(insn 1212 1211 1213 214 (set (reg:DI 699)
        (reg:DI 700)) dl-close.c:693 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1213 1212 1214 214 (set (reg:DI 696)
        (reg:DI 699)) dl-close.c:693 -1
     (nil))
(insn 1214 1213 1215 214 (parallel [
            (set (reg/f:DI 701)
                (plus:DI (reg/f:DI 695)
                    (reg:DI 696)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:693 -1
     (nil))
(insn 1215 1214 1216 214 (set (mem/f:DI (reg/f:DI 701) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])
        (reg/f:DI 361 [ D.11586 ])) dl-close.c:693 -1
     (nil))
(insn 1216 1215 1217 214 (set (mem/f:DI (plus:DI (reg/v/f:DI 293 [ r ])
                (const_int 8 [0x8])) [3 r_202->r_map+0 S8 A64])
        (reg/f:DI 361 [ D.11586 ])) dl-close.c:697 -1
     (nil))
(jump_insn 1217 1216 1218 214 (set (pc)
        (label_ref 1223)) dl-close.c:697 -1
     (nil)
 -> 1223)
(barrier 1218 1217 1219)
(code_label 1219 1218 1220 215 126 "" [1 uses])
(note 1220 1219 1221 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 1221 1220 1222 215 (set (reg/f:DI 362 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 24 [0x18])) [3 imap_246->l_next+0 S8 A64])) dl-close.c:701 -1
     (nil))
(insn 1222 1221 1223 215 (set (mem/f:DI (plus:DI (reg/f:DI 360 [ D.11586 ])
                (const_int 24 [0x18])) [3 _284->l_next+0 S8 A64])
        (reg/f:DI 362 [ D.11586 ])) dl-close.c:701 -1
     (nil))
(code_label 1223 1222 1224 216 128 "" [1 uses])
(note 1224 1223 1225 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 1225 1224 1226 216 (set (reg/f:DI 702)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:703 -1
     (nil))
(insn 1226 1225 1227 216 (set (reg:DI 703)
        (reg/v:DI 163 [ nsid ])) dl-close.c:703 -1
     (nil))
(insn 1227 1226 1228 216 (parallel [
            (set (reg:DI 704)
                (ashift:DI (reg:DI 703)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1228 1227 1229 216 (parallel [
            (set (reg:DI 705)
                (plus:DI (reg:DI 704)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1229 1228 1230 216 (parallel [
            (set (reg:DI 706)
                (ashift:DI (reg:DI 705)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1230 1229 1231 216 (set (reg:DI 705)
        (reg:DI 706)) dl-close.c:703 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1231 1230 1232 216 (parallel [
            (set (reg:DI 707)
                (plus:DI (reg/f:DI 702)
                    (reg:DI 705)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1232 1231 1233 216 (parallel [
            (set (reg/f:DI 708)
                (plus:DI (reg:DI 707)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1233 1232 1234 216 (set (reg/f:DI 709)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:703 -1
     (nil))
(insn 1234 1233 1235 216 (set (reg:DI 710)
        (reg/v:DI 163 [ nsid ])) dl-close.c:703 -1
     (nil))
(insn 1235 1234 1236 216 (parallel [
            (set (reg:DI 711)
                (ashift:DI (reg:DI 710)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1236 1235 1237 216 (parallel [
            (set (reg:DI 712)
                (plus:DI (reg:DI 711)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1237 1236 1238 216 (parallel [
            (set (reg:DI 713)
                (ashift:DI (reg:DI 712)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1238 1237 1239 216 (set (reg:DI 712)
        (reg:DI 713)) dl-close.c:703 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1239 1238 1240 216 (parallel [
            (set (reg:DI 714)
                (plus:DI (reg/f:DI 709)
                    (reg:DI 712)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1240 1239 1244 216 (parallel [
            (set (reg/f:DI 715)
                (plus:DI (reg:DI 714)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (nil))
(insn 1244 1240 1245 216 (set (reg:SI 719)
        (mem:SI (reg/f:DI 715) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_nloaded+0 S4 A64])) dl-close.c:703 -1
     (nil))
(insn 1245 1244 1246 216 (parallel [
            (set (reg:SI 718 [ D.11576 ])
                (plus:SI (reg:SI 719)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:703 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (reg/f:DI 715) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_nloaded+0 S4 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1246 1245 1247 216 (set (mem:SI (reg/f:DI 708) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_nloaded+0 S4 A64])
        (reg:SI 718 [ D.11576 ])) dl-close.c:703 -1
     (nil))
(insn 1247 1246 1248 216 (set (reg/f:DI 365 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 24 [0x18])) [3 imap_246->l_next+0 S8 A64])) dl-close.c:704 -1
     (nil))
(insn 1248 1247 1249 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 365 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:704 -1
     (nil))
(jump_insn 1249 1248 1250 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1253)
            (pc))) dl-close.c:704 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1253)
(note 1250 1249 1251 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 217 (set (reg/f:DI 366 [ D.11586 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 32 [0x20])) [3 imap_246->l_prev+0 S8 A64])) dl-close.c:705 -1
     (nil))
(insn 1252 1251 1253 217 (set (mem/f:DI (plus:DI (reg/f:DI 365 [ D.11586 ])
                (const_int 32 [0x20])) [3 _289->l_prev+0 S8 A64])
        (reg/f:DI 366 [ D.11586 ])) dl-close.c:705 -1
     (nil))
(code_label 1253 1252 1254 218 129 "" [1 uses])
(note 1254 1253 1255 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1255 1254 1256 218 (set (reg:DI 720)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 736 [0x2e0])) [3 imap_246->l_versions+0 S8 A64])) dl-close.c:707 -1
     (nil))
(insn 1256 1255 1257 218 (set (reg:DI 5 di)
        (reg:DI 720)) dl-close.c:707 -1
     (nil))
(call_insn 1257 1256 1258 218 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:707 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1258 1257 1259 218 (set (reg/f:DI 368 [ D.11605 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 824 [0x338])) [3 imap_246->l_origin+0 S8 A64])) dl-close.c:708 -1
     (nil))
(insn 1259 1258 1260 218 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 368 [ D.11605 ])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:708 -1
     (nil))
(jump_insn 1260 1259 1261 218 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1264)
            (pc))) dl-close.c:708 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1264)
(note 1261 1260 1262 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 1262 1261 1263 219 (set (reg:DI 5 di)
        (reg/f:DI 368 [ D.11605 ])) dl-close.c:709 -1
     (nil))
(call_insn 1263 1262 1264 219 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:709 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1264 1263 1265 220 130 "" [1 uses])
(note 1265 1264 1266 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 1266 1265 1267 220 (set (reg:DI 721)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 960 [0x3c0])) [3 imap_246->l_reldeps+0 S8 A64])) dl-close.c:711 -1
     (nil))
(insn 1267 1266 1268 220 (set (reg:DI 5 di)
        (reg:DI 721)) dl-close.c:711 -1
     (nil))
(call_insn 1268 1267 1269 220 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:711 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1269 1268 1270 220 (set (reg/f:DI 722)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:714 -1
     (nil))
(insn 1270 1269 1271 220 (set (reg:SI 724)
        (mem/c:SI (reg/f:DI 722) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])) dl-close.c:714 -1
     (nil))
(insn 1271 1270 1272 220 (parallel [
            (set (reg:SI 723 [ D.11579 ])
                (and:SI (reg:SI 724)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:714 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (reg/f:DI 722) [8 _rtld_local_ro._dl_debug_mask+0 S4 A64])
            (const_int 64 [0x40]))
        (nil)))
(insn 1272 1271 1273 220 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 723 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:714 -1
     (nil))
(jump_insn 1273 1272 1274 220 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1282)
            (pc))) dl-close.c:714 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1282)
(note 1274 1273 1275 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 1275 1274 1276 221 (set (reg:DI 725)
        (mem:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 48 [0x30])) [2 imap_246->l_ns+0 S8 A64])) dl-close.c:715 -1
     (nil))
(insn 1276 1275 1277 221 (set (reg:DI 726)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 8 [0x8])) [3 imap_246->l_name+0 S8 A64])) dl-close.c:715 -1
     (nil))
(insn 1277 1276 1278 221 (set (reg:DI 1 dx)
        (reg:DI 725)) dl-close.c:715 -1
     (nil))
(insn 1278 1277 1279 221 (set (reg:DI 4 si)
        (reg:DI 726)) dl-close.c:715 -1
     (nil))
(insn 1279 1278 1280 221 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2ae457a687e0 *.LC16>)) dl-close.c:715 -1
     (nil))
(insn 1280 1279 1281 221 (set (reg:QI 0 ax)
        (const_int 0 [0])) dl-close.c:715 -1
     (nil))
(call_insn 1281 1280 1282 221 (call (mem:QI (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>) [0 _dl_debug_printf S1 A8])
        (const_int 0 [0])) dl-close.c:715 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_debug_printf") [flags 0x43]  <function_decl 0x2ae4577ccaf8 _dl_debug_printf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(code_label 1282 1281 1283 222 131 "" [1 uses])
(note 1283 1282 1284 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 1284 1283 1285 222 (set (reg:DI 727)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 8 [0x8])) [3 imap_246->l_name+0 S8 A64])) dl-close.c:719 -1
     (nil))
(insn 1285 1284 1286 222 (set (reg:DI 5 di)
        (reg:DI 727)) dl-close.c:719 -1
     (nil))
(call_insn 1286 1285 1287 222 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:719 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1287 1286 1298 222 (set (reg/v/f:DI 375 [ this ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 56 [0x38])) [3 imap_246->l_libname+0 S8 A64])) dl-close.c:722 -1
     (nil))
(code_label 1298 1287 1288 223 133 "" [1 uses])
(note 1288 1298 1289 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1289 1288 1290 223 (set (reg/v/f:DI 376 [ this ])
        (mem/f:DI (plus:DI (reg/v/f:DI 375 [ this ])
                (const_int 8 [0x8])) [3 this_302->next+0 S8 A64])) dl-close.c:726 -1
     (nil))
(insn 1290 1289 1291 223 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 375 [ this ])
                    (const_int 16 [0x10])) [8 this_302->dont_free+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:727 -1
     (nil))
(jump_insn 1291 1290 1292 223 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1295)
            (pc))) dl-close.c:727 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1295)
(note 1292 1291 1293 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 1293 1292 1294 224 (set (reg:DI 5 di)
        (reg/v/f:DI 375 [ this ])) dl-close.c:728 -1
     (nil))
(call_insn 1294 1293 1295 224 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:728 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1295 1294 1296 225 132 "" [1 uses])
(note 1296 1295 1297 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 1297 1296 1299 225 (set (reg/v/f:DI 375 [ this ])
        (reg/v/f:DI 376 [ this ])) -1
     (nil))
(insn 1299 1297 1300 225 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 376 [ this ])
            (const_int 0 [0]))) dl-close.c:730 -1
     (nil))
(jump_insn 1300 1299 1301 225 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1298)
            (pc))) dl-close.c:730 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1298)
(note 1301 1300 1302 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 1302 1301 1303 226 (set (reg:DI 728)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 952 [0x3b8])) [3 imap_246->l_initfini+0 S8 A64])) dl-close.c:733 -1
     (nil))
(insn 1303 1302 1304 226 (set (reg:DI 5 di)
        (reg:DI 728)) dl-close.c:733 -1
     (nil))
(call_insn 1304 1303 1305 226 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:733 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1305 1304 1306 226 (set (reg/f:DI 379 [ D.11597 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 896 [0x380])) [3 imap_246->l_scope+0 S8 A64])) dl-close.c:736 -1
     (nil))
(insn 1306 1305 1307 226 (parallel [
            (set (reg:DI 729 [ D.11608 ])
                (plus:DI (reg/v/f:DI 327 [ imap ])
                    (const_int 856 [0x358])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:736 -1
     (nil))
(insn 1307 1306 1308 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 379 [ D.11597 ])
            (reg:DI 729 [ D.11608 ]))) dl-close.c:736 -1
     (nil))
(jump_insn 1308 1307 1309 226 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1312)
            (pc))) dl-close.c:736 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1312)
(note 1309 1308 1310 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 1310 1309 1311 227 (set (reg:DI 5 di)
        (reg/f:DI 379 [ D.11597 ])) dl-close.c:737 -1
     (nil))
(call_insn 1311 1310 1312 227 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:737 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1312 1311 1313 228 134 "" [1 uses])
(note 1313 1312 1314 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1314 1313 1315 228 (set (reg:QI 731)
        (mem:QI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 788 [0x314])) [5 *imap_246+788 S1 A32])) dl-close.c:739 -1
     (nil))
(insn 1315 1314 1316 228 (parallel [
            (set (reg:QI 730 [ D.11588 ])
                (and:QI (reg:QI 731)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:739 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 327 [ imap ])
                    (const_int 788 [0x314])) [5 *imap_246+788 S1 A32])
            (const_int -128 [0xffffffffffffff80]))
        (nil)))
(insn 1316 1315 1317 228 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 730 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:739 -1
     (nil))
(jump_insn 1317 1316 1318 228 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1322)
            (pc))) dl-close.c:739 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1322)
(note 1318 1317 1319 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1318 1320 229 (set (reg:DI 732)
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 672 [0x2a0])) [3 imap_246->l_phdr+0 S8 A64])) dl-close.c:740 -1
     (nil))
(insn 1320 1319 1321 229 (set (reg:DI 5 di)
        (reg:DI 732)) dl-close.c:740 -1
     (nil))
(call_insn 1321 1320 1322 229 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:740 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1322 1321 1323 230 135 "" [1 uses])
(note 1323 1322 1324 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 1324 1323 1325 230 (set (reg/f:DI 384 [ D.11610 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 792 [0x318])) [3 imap_246->l_rpath_dirs.dirs+0 S8 A64])) dl-close.c:742 -1
     (nil))
(insn 1325 1324 1326 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 384 [ D.11610 ])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:742 -1
     (nil))
(jump_insn 1326 1325 1327 230 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1330)
            (pc))) dl-close.c:742 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1330)
(note 1327 1326 1328 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1328 1327 1329 231 (set (reg:DI 5 di)
        (reg/f:DI 384 [ D.11610 ])) dl-close.c:743 -1
     (nil))
(call_insn 1329 1328 1330 231 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:743 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1330 1329 1331 232 136 "" [1 uses])
(note 1331 1330 1332 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 1332 1331 1333 232 (set (reg/f:DI 385 [ D.11610 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 327 [ imap ])
                (const_int 936 [0x3a8])) [3 imap_246->l_runpath_dirs.dirs+0 S8 A64])) dl-close.c:744 -1
     (nil))
(insn 1333 1332 1334 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 385 [ D.11610 ])
            (const_int -1 [0xffffffffffffffff]))) dl-close.c:744 -1
     (nil))
(jump_insn 1334 1333 1335 232 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1338)
            (pc))) dl-close.c:744 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1338)
(note 1335 1334 1336 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1336 1335 1337 233 (set (reg:DI 5 di)
        (reg/f:DI 385 [ D.11610 ])) dl-close.c:745 -1
     (nil))
(call_insn 1337 1336 1338 233 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:745 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1338 1337 1339 234 137 "" [1 uses])
(note 1339 1338 1340 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 1340 1339 1341 234 (set (reg:DI 5 di)
        (reg/v/f:DI 327 [ imap ])) dl-close.c:747 -1
     (nil))
(call_insn 1341 1340 1342 234 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) dl-close.c:747 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ae457249e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 1342 1341 1343 235 111 "" [1 uses])
(note 1343 1342 1344 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1344 1343 1346 235 (parallel [
            (set (reg/v:SI 415 [ i ])
                (plus:SI (reg/v:SI 415 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:542 -1
     (nil))
(insn 1346 1344 1347 235 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 164 [ nloaded ])
            (reg/v:SI 415 [ i ]))) dl-close.c:542 -1
     (nil))
(jump_insn 1347 1346 1348 235 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1345)
            (pc))) dl-close.c:542 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1345)
(note 1348 1347 1349 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 1349 1348 1350 236 (set (reg/f:DI 733)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:751 -1
     (nil))
(insn 1350 1349 1351 236 (set (reg/f:DI 734)
        (mem/f/c:DI (plus:DI (reg/f:DI 733)
                (const_int 3856 [0xf10])) [3 _rtld_local._dl_rtld_unlock_recursive+0 S8 A64])) dl-close.c:751 -1
     (nil))
(insn 1351 1350 1352 236 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)
                (const_int 2352 [0x930])))) dl-close.c:751 -1
     (nil))
(call_insn 1352 1351 1353 236 (call (mem:QI (reg/f:DI 734) [0 *_314 S1 A8])
        (const_int 0 [0])) dl-close.c:751 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1353 1352 1354 236 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 416 [ any_tls ])
            (const_int 0 [0]))) dl-close.c:754 -1
     (nil))
(jump_insn 1354 1353 1355 236 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1358)
            (pc))) dl-close.c:754 -1
     (int_list:REG_BR_PROB 5155 (nil))
 -> 1358)
(note 1355 1354 1356 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1356 1355 1357 237 (set (pc)
        (label_ref 1384)) dl-close.c:754 -1
     (nil)
 -> 1384)
(barrier 1357 1356 1358)
(code_label 1358 1357 1359 238 139 "" [1 uses])
(note 1359 1358 1360 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 1360 1359 1361 238 (set (reg/f:DI 735)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:756 -1
     (nil))
(insn 1361 1360 1362 238 (set (reg:DI 736)
        (mem/c:DI (plus:DI (reg/f:DI 735)
                (const_int 3936 [0xf60])) [2 _rtld_local._dl_tls_generation+0 S8 A64])) dl-close.c:756 -1
     (nil))
(insn 1362 1361 1363 238 (parallel [
            (set (reg:DI 388 [ D.11577 ])
                (plus:DI (reg:DI 736)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:756 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (plus:DI (reg/f:DI 735)
                    (const_int 3936 [0xf60])) [2 _rtld_local._dl_tls_generation+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 1363 1362 1364 238 (set (reg/f:DI 737)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:756 -1
     (nil))
(insn 1364 1363 1365 238 (set (mem/c:DI (plus:DI (reg/f:DI 737)
                (const_int 3936 [0xf60])) [2 _rtld_local._dl_tls_generation+0 S8 A64])
        (reg:DI 388 [ D.11577 ])) dl-close.c:756 -1
     (nil))
(insn 1365 1364 1366 238 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 388 [ D.11577 ])
            (const_int 0 [0]))) dl-close.c:756 -1
     (nil))
(jump_insn 1366 1365 1367 238 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1375)
            (pc))) dl-close.c:756 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1375)
(note 1367 1366 1368 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 1368 1367 1369 239 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2ae457a68870 *.LC17>)) dl-close.c:757 -1
     (nil))
(insn 1369 1368 1370 239 (set (reg:SI 5 di)
        (const_int 2 [0x2])) dl-close.c:757 -1
     (nil))
(insn 1370 1369 1371 239 (set (reg:QI 0 ax)
        (const_int 0 [0])) dl-close.c:757 -1
     (nil))
(call_insn 1371 1370 1372 239 (call (mem:QI (symbol_ref:DI ("_dl_dprintf") [flags 0x43]  <function_decl 0x2ae4577ccca8 _dl_dprintf>) [0 _dl_dprintf S1 A8])
        (const_int 0 [0])) dl-close.c:757 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_dprintf") [flags 0x43]  <function_decl 0x2ae4577ccca8 _dl_dprintf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 1372 1371 1373 239 (set (reg:SI 5 di)
        (const_int 127 [0x7f])) dl-close.c:757 -1
     (nil))
(call_insn 1373 1372 1374 239 (call (mem:QI (symbol_ref:DI ("*__GI__exit") [flags 0x43]  <function_decl 0x2ae4572590d8 _exit>) [0 __builtin__exit S1 A8])
        (const_int 0 [0])) dl-close.c:757 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI__exit") [flags 0x43]  <function_decl 0x2ae4572590d8 _exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(barrier 1374 1373 1375)
(code_label 1375 1374 1376 240 141 "" [1 uses])
(note 1376 1375 1378 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 1378 1376 1379 240 (set (reg/f:DI 738)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:759 -1
     (nil))
(insn 1379 1378 1380 240 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 738)
                    (const_int 3912 [0xf48])) [2 _rtld_local._dl_tls_static_used+0 S8 A64])
            (reg/v:DI 419 [ tls_free_end ]))) dl-close.c:759 -1
     (nil))
(jump_insn 1380 1379 1381 240 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1384)
            (pc))) dl-close.c:759 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1384)
(note 1381 1380 1382 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 1382 1381 1383 241 (set (reg/f:DI 739)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:760 -1
     (nil))
(insn 1383 1382 1384 241 (set (mem/c:DI (plus:DI (reg/f:DI 739)
                (const_int 3912 [0xf48])) [2 _rtld_local._dl_tls_static_used+0 S8 A64])
        (reg/v:DI 418 [ tls_free_end ])) dl-close.c:760 -1
     (nil))
(code_label 1384 1383 1385 242 140 "" [3 uses])
(note 1385 1384 1386 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 1386 1385 1387 242 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 205 [ D.11579 ])
            (const_int 0 [0]))) dl-close.c:765 -1
     (nil))
(jump_insn 1387 1386 1388 242 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1400)
            (pc))) dl-close.c:765 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 1400)
(note 1388 1387 1389 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 1389 1388 1390 243 (set (reg/f:DI 740)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) -1
     (nil))
(insn 1390 1389 1391 243 (set (reg:DI 742)
        (reg/v:DI 163 [ nsid ])) -1
     (nil))
(insn 1391 1390 1392 243 (parallel [
            (set (reg:DI 743)
                (ashift:DI (reg:DI 742)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1392 1391 1393 243 (parallel [
            (set (reg:DI 744)
                (plus:DI (reg:DI 743)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1393 1392 1394 243 (parallel [
            (set (reg:DI 745)
                (ashift:DI (reg:DI 744)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1394 1393 1395 243 (set (reg:DI 744)
        (reg:DI 745)) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1395 1394 1396 243 (set (reg:DI 741)
        (reg:DI 744)) -1
     (nil))
(insn 1396 1395 1397 243 (parallel [
            (set (reg/f:DI 746)
                (plus:DI (reg/f:DI 740)
                    (reg:DI 741)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1397 1396 1398 243 (set (reg/f:DI 216 [ D.11586 ])
        (mem/f:DI (reg/f:DI 746) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) -1
     (nil))
(jump_insn 1398 1397 1399 243 (set (pc)
        (label_ref 1452)) -1
     (nil)
 -> 1452)
(barrier 1399 1398 1400)
(code_label 1400 1399 1401 244 143 "" [1 uses])
(note 1401 1400 1402 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 1402 1401 1403 244 (set (reg/f:DI 747)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:767 -1
     (nil))
(insn 1403 1402 1404 244 (set (reg:DI 749)
        (reg/v:DI 163 [ nsid ])) dl-close.c:767 -1
     (nil))
(insn 1404 1403 1405 244 (parallel [
            (set (reg:DI 750)
                (ashift:DI (reg:DI 749)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:767 -1
     (nil))
(insn 1405 1404 1406 244 (parallel [
            (set (reg:DI 751)
                (plus:DI (reg:DI 750)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:767 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1406 1405 1407 244 (parallel [
            (set (reg:DI 752)
                (ashift:DI (reg:DI 751)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:767 -1
     (nil))
(insn 1407 1406 1408 244 (set (reg:DI 751)
        (reg:DI 752)) dl-close.c:767 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1408 1407 1409 244 (set (reg:DI 748)
        (reg:DI 751)) dl-close.c:767 -1
     (nil))
(insn 1409 1408 1410 244 (parallel [
            (set (reg/f:DI 753)
                (plus:DI (reg/f:DI 747)
                    (reg:DI 748)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:767 -1
     (nil))
(insn 1410 1409 1411 244 (set (reg/v/f:DI 392 [ head ])
        (mem/f:DI (reg/f:DI 753) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) dl-close.c:767 -1
     (nil))
(insn 1411 1410 1412 244 (set (reg:QI 755)
        (mem:QI (plus:DI (reg/v/f:DI 392 [ head ])
                (const_int 789 [0x315])) [5 *head_322+789 S1 A8])) dl-close.c:769 -1
     (nil))
(insn 1412 1411 1413 244 (parallel [
            (set (reg:QI 754 [ D.11588 ])
                (and:QI (reg:QI 755)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:769 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 392 [ head ])
                    (const_int 789 [0x315])) [5 *head_322+789 S1 A8])
            (const_int 8 [0x8]))
        (nil)))
(insn 1413 1412 1414 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 754 [ D.11588 ])
            (const_int 0 [0]))) dl-close.c:769 -1
     (nil))
(jump_insn 1414 1413 1415 244 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1456)
            (pc))) dl-close.c:769 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1456)
(note 1415 1414 1416 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 1416 1415 1417 245 (set (reg/f:DI 756)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:771 -1
     (nil))
(insn 1417 1416 1418 245 (set (reg/v/f:DI 398 [ afct ])
        (mem/f/c:DI (plus:DI (reg/f:DI 756)
                (const_int 352 [0x160])) [3 _rtld_local_ro._dl_audit+0 S8 A64])) dl-close.c:771 -1
     (nil))
(insn 1418 1417 1419 245 (set (reg/f:DI 757)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:772 -1
     (nil))
(insn 1419 1418 1420 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 757)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:772 -1
     (nil))
(jump_insn 1420 1419 1421 245 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1456)
            (pc))) dl-close.c:772 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1456)
(note 1421 1420 122 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 122 1421 1438 246 (set (reg/v:SI 399 [ cnt ])
        (const_int 0 [0])) dl-close.c:772 -1
     (nil))
(code_label 1438 122 1422 247 147 "" [1 uses])
(note 1422 1438 1423 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 1423 1422 1424 247 (set (reg/f:DI 396 [ D.11599 ])
        (mem/f:DI (reg/v/f:DI 398 [ afct ]) [3 afct_567->activity+0 S8 A64])) dl-close.c:774 -1
     (nil))
(insn 1424 1423 1425 247 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 396 [ D.11599 ])
            (const_int 0 [0]))) dl-close.c:774 -1
     (nil))
(jump_insn 1425 1424 1426 247 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1434)
            (pc))) dl-close.c:774 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1434)
(note 1426 1425 1427 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 1427 1426 1428 248 (set (reg:DI 758)
        (zero_extend:DI (reg/v:SI 399 [ cnt ]))) dl-close.c:775 -1
     (nil))
(insn 1428 1427 1429 248 (parallel [
            (set (reg:DI 759)
                (plus:DI (reg:DI 758)
                    (const_int 71 [0x47])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:775 -1
     (nil))
(insn 1429 1428 1430 248 (parallel [
            (set (reg:DI 760)
                (ashift:DI (reg:DI 759)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:775 -1
     (nil))
(insn 1430 1429 1431 248 (parallel [
            (set (reg:DI 761 [ D.11594 ])
                (plus:DI (reg/v/f:DI 392 [ head ])
                    (reg:DI 760)))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:775 -1
     (nil))
(insn 1431 1430 1432 248 (set (reg:SI 4 si)
        (const_int 0 [0])) dl-close.c:775 -1
     (nil))
(insn 1432 1431 1433 248 (set (reg:DI 5 di)
        (reg:DI 761 [ D.11594 ])) dl-close.c:775 -1
     (nil))
(call_insn 1433 1432 1434 248 (call (mem:QI (reg/f:DI 396 [ D.11599 ]) [0 *_327 S1 A8])
        (const_int 0 [0])) dl-close.c:775 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(code_label 1434 1433 1435 249 146 "" [1 uses])
(note 1435 1434 1436 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 1436 1435 1437 249 (set (reg/v/f:DI 398 [ afct ])
        (mem/f:DI (plus:DI (reg/v/f:DI 398 [ afct ])
                (const_int 64 [0x40])) [3 afct_567->next+0 S8 A64])) dl-close.c:777 -1
     (nil))
(insn 1437 1436 1439 249 (parallel [
            (set (reg/v:SI 399 [ cnt ])
                (plus:SI (reg/v:SI 399 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:772 -1
     (nil))
(insn 1439 1437 1440 249 (set (reg/f:DI 762)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:772 -1
     (nil))
(insn 1440 1439 1441 249 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 399 [ cnt ])
            (mem/c:SI (plus:DI (reg/f:DI 762)
                    (const_int 360 [0x168])) [8 _rtld_local_ro._dl_naudit+0 S4 A64]))) dl-close.c:772 -1
     (nil))
(jump_insn 1441 1440 1442 249 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) dl-close.c:772 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1438)
(note 1442 1441 1443 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 1443 1442 1444 250 (set (reg/f:DI 763)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) -1
     (nil))
(insn 1444 1443 1445 250 (set (reg:DI 765)
        (reg/v:DI 163 [ nsid ])) -1
     (nil))
(insn 1445 1444 1446 250 (parallel [
            (set (reg:DI 766)
                (ashift:DI (reg:DI 765)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1446 1445 1447 250 (parallel [
            (set (reg:DI 767)
                (plus:DI (reg:DI 766)
                    (reg/v:DI 163 [ nsid ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1447 1446 1448 250 (parallel [
            (set (reg:DI 768)
                (ashift:DI (reg:DI 767)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1448 1447 1449 250 (set (reg:DI 767)
        (reg:DI 768)) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 163 [ nsid ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1449 1448 1450 250 (set (reg:DI 764)
        (reg:DI 767)) -1
     (nil))
(insn 1450 1449 1451 250 (parallel [
            (set (reg/f:DI 769)
                (plus:DI (reg/f:DI 763)
                    (reg:DI 764)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1451 1450 1452 250 (set (reg/f:DI 216 [ D.11586 ])
        (mem/f:DI (reg/f:DI 769) [18 MEM[(struct link_namespaces *)&_rtld_local]._dl_ns[nsid_22]._ns_loaded+0 S8 A64])) -1
     (nil))
(code_label 1452 1451 1453 251 144 "" [1 uses])
(note 1453 1452 1454 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1453 1455 251 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 216 [ D.11586 ])
            (const_int 0 [0]))) dl-close.c:783 -1
     (nil))
(jump_insn 1455 1454 1456 251 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1462)
            (pc))) dl-close.c:783 -1
     (int_list:REG_BR_PROB 1091 (nil))
 -> 1462)
(code_label 1456 1455 1457 252 145 "" [4 uses])
(note 1457 1456 1458 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 1458 1457 1459 252 (set (mem:SI (plus:DI (reg/v/f:DI 293 [ r ])
                (const_int 24 [0x18])) [25 r_202->r_state+0 S4 A64])
        (const_int 0 [0])) dl-close.c:790 -1
     (nil))
(call_insn 1459 1458 1460 252 (call (mem:QI (symbol_ref:DI ("*__GI__dl_debug_state") [flags 0x43]  <function_decl 0x2ae4577fc1b0 _dl_debug_state>) [0 _dl_debug_state S1 A8])
        (const_int 0 [0])) dl-close.c:791 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI__dl_debug_state") [flags 0x43]  <function_decl 0x2ae4577fc1b0 _dl_debug_state>)
        (nil))
    (nil))
(jump_insn 1460 1459 1461 252 (set (pc)
        (label_ref 1489)) dl-close.c:791 -1
     (nil)
 -> 1489)
(barrier 1461 1460 1462)
(code_label 1462 1461 1463 253 148 "" [1 uses])
(note 1463 1462 1464 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1464 1463 1465 253 (set (reg/f:DI 770)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:784 -1
     (nil))
(insn 1465 1464 1466 253 (set (reg:DI 395 [ D.11577 ])
        (mem/c:DI (plus:DI (reg/f:DI 770)
                (const_int 2304 [0x900])) [2 _rtld_local._dl_nns+0 S8 A64])) dl-close.c:784 -1
     (nil))
(insn 1466 1465 1467 253 (parallel [
            (set (reg:DI 771 [ D.11577 ])
                (plus:DI (reg:DI 395 [ D.11577 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:784 -1
     (nil))
(insn 1467 1466 1468 253 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 771 [ D.11577 ])
            (reg/v:DI 163 [ nsid ]))) dl-close.c:784 -1
     (nil))
(jump_insn 1468 1467 1469 253 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1456)
            (pc))) dl-close.c:784 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1456)
(note 1469 1468 1470 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 1470 1469 1471 254 (set (reg:DI 772)
        (reg:DI 395 [ D.11577 ])) -1
     (nil))
(insn 1471 1470 1472 254 (parallel [
            (set (reg:DI 773)
                (ashift:DI (reg:DI 772)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1472 1471 1473 254 (parallel [
            (set (reg:DI 774 [ D.11582 ])
                (plus:DI (reg:DI 773)
                    (reg:DI 395 [ D.11577 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 395 [ D.11577 ])
            (const_int 9 [0x9]))
        (nil)))
(insn 1473 1472 1474 254 (parallel [
            (set (reg:DI 775)
                (ashift:DI (reg:DI 774 [ D.11582 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1474 1473 1475 254 (set (reg:DI 774 [ D.11582 ])
        (reg:DI 775)) -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 395 [ D.11577 ])
            (const_int 144 [0x90]))
        (nil)))
(insn 1475 1474 1476 254 (parallel [
            (set (reg:DI 776 [ D.11582 ])
                (plus:DI (reg:DI 774 [ D.11582 ])
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1476 1475 1477 254 (set (reg:DI 777)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) -1
     (nil))
(insn 1477 1476 1481 254 (parallel [
            (set (reg:DI 421 [ ivtmp.38 ])
                (plus:DI (reg:DI 776 [ D.11582 ])
                    (reg:DI 777)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1481 1477 1478 255 149 "" [1 uses])
(note 1478 1481 1479 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 1479 1478 1480 255 (parallel [
            (set (reg:DI 395 [ D.11577 ])
                (plus:DI (reg:DI 395 [ D.11577 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:786 -1
     (nil))
(insn 1480 1479 1482 255 (parallel [
            (set (reg:DI 421 [ ivtmp.38 ])
                (plus:DI (reg:DI 421 [ ivtmp.38 ])
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1482 1480 1483 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg:DI 421 [ ivtmp.38 ])
                    (const_int 144 [0x90])) [3 MEM[base: _275, offset: 144B]+0 S8 A64])
            (const_int 0 [0]))) dl-close.c:787 -1
     (nil))
(jump_insn 1483 1482 1484 255 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1481)
            (pc))) dl-close.c:787 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1481)
(note 1484 1483 1485 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 1485 1484 1486 256 (set (reg/f:DI 778)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) -1
     (nil))
(insn 1486 1485 1487 256 (set (mem/c:DI (plus:DI (reg/f:DI 778)
                (const_int 2304 [0x900])) [2 _rtld_local._dl_nns+0 S8 A64])
        (reg:DI 395 [ D.11577 ])) -1
     (nil))
(jump_insn 1487 1486 1488 256 (set (pc)
        (label_ref 1456)) -1
     (nil)
 -> 1456)
(barrier 1488 1487 1489)
(code_label 1489 1488 1490 257 50 ("out") [3 uses])
(note 1490 1489 1491 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1491 1490 1492 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("dl_close_state.10661") [flags 0x2]  <var_decl 0x2ae45782d480 dl_close_state>) [27 dl_close_state+0 S4 A32])
            (const_int 2 [0x2]))) dl-close.c:796 -1
     (nil))
(jump_insn 1492 1491 1493 257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1500)
            (pc))) dl-close.c:796 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1500)
(note 1493 1492 1494 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1494 1493 1495 258 (set (mem/c:SI (symbol_ref:DI ("dl_close_state.10661") [flags 0x2]  <var_decl 0x2ae45782d480 dl_close_state>) [27 dl_close_state+0 S4 A32])
        (const_int 0 [0])) dl-close.c:799 -1
     (nil))
(insn 1495 1494 1496 258 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 1496 1495 1497 258 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 1497 1496 1498 258 (set (reg/f:DI 7 sp)
        (reg/f:DI 165 [ D.11581 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 1498 1497 1499 258 (set (pc)
        (label_ref:DI 1542)) 654 {jump}
     (nil)
 -> 1542)
(barrier 1499 1498 1500)
(code_label 1500 1499 1501 259 150 "" [1 uses])
(note 1501 1500 1502 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 1502 1501 1503 259 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 1503 1502 1504 259 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 1504 1503 1505 259 (set (reg/f:DI 7 sp)
        (reg/f:DI 165 [ D.11581 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 1505 1504 1506 259 (set (pc)
        (label_ref 163)) -1
     (nil)
 -> 163)
(barrier 1506 1505 1511)
(code_label 1511 1506 1512 261 99 "" [2 uses])
(note 1512 1511 1513 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 1513 1512 1514 261 (parallel [
            (set (reg:SI 779 [ D.11576 ])
                (plus:SI (reg/v:SI 414 [ unload_global ])
                    (reg/v:SI 442 [ j ])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:504 -1
     (nil))
(insn 1514 1513 1515 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 295 [ j ])
            (reg:SI 779 [ D.11576 ]))) dl-close.c:504 -1
     (nil))
(jump_insn 1515 1514 1516 261 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1603)
            (pc))) dl-close.c:504 612 {*jcc_1}
     (int_list:REG_BR_PROB 2932 (nil))
 -> 1603)
(note 1516 1515 125 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 125 1516 126 262 (set (reg:DI 352 [ ivtmp.57 ])
        (const_int 0 [0])) dl-close.c:504 -1
     (nil))
(insn 126 125 1518 262 (set (reg/v:SI 417 [ j ])
        (const_int 0 [0])) dl-close.c:504 -1
     (nil))
(jump_insn 1518 126 1519 262 (set (pc)
        (label_ref 1517)) dl-close.c:504 -1
     (nil)
 -> 1517)
(barrier 1519 1518 1520)
(code_label 1520 1519 1521 263 107 "" [1 uses])
(note 1521 1520 1522 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 1522 1521 1523 263 (set (reg/f:DI 780)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:751 -1
     (nil))
(insn 1523 1522 1524 263 (set (reg/f:DI 781)
        (mem/f/c:DI (plus:DI (reg/f:DI 780)
                (const_int 3856 [0xf10])) [3 _rtld_local._dl_rtld_unlock_recursive+0 S8 A64])) dl-close.c:751 -1
     (nil))
(insn 1524 1523 1525 263 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)
                (const_int 2352 [0x930])))) dl-close.c:751 -1
     (nil))
(call_insn 1525 1524 1526 263 (call (mem:QI (reg/f:DI 781) [0 *_647 S1 A8])
        (const_int 0 [0])) dl-close.c:751 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1526 1525 1527 263 (set (pc)
        (label_ref 1384)) dl-close.c:751 -1
     (nil)
 -> 1384)
(barrier 1527 1526 1528)
(code_label 1528 1527 1529 264 72 "" [2 uses])
(note 1529 1528 1530 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 1530 1529 1531 264 (set (reg/f:DI 423 [ D.11597 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 206 [ imap ])
                (const_int 896 [0x380])) [3 imap_586->l_scope+0 S8 A64])) dl-close.c:354 -1
     (nil))
(insn 1531 1530 1533 264 (set (reg/f:DI 266 [ D.11595 ])
        (mem/f:DI (reg/f:DI 423 [ D.11597 ]) [3 *_411+0 S8 A64])) dl-close.c:354 -1
     (nil))
(insn 1533 1531 1534 264 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 266 [ D.11595 ])
            (const_int 0 [0]))) dl-close.c:354 -1
     (nil))
(jump_insn 1534 1533 1537 264 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1607)
            (pc))) dl-close.c:354 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1607)
(note 1537 1534 1535 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1535 1537 1536 265 (set (pc)
        (label_ref 771)) dl-close.c:354 -1
     (nil)
 -> 771)
(barrier 1536 1535 1566)
(code_label 1566 1536 1565 266 158 "" [1 uses])
(note 1565 1566 127 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 127 1565 128 266 (set (reg/v/f:DI 265 [ newp ])
        (reg/v/f:DI 262 [ newp ])) dl-close.c:385 -1
     (nil))
(insn 128 127 1538 266 (set (reg/v:DI 263 [ new_size ])
        (const_int 4 [0x4])) dl-close.c:387 -1
     (nil))
(code_label 1538 128 1539 267 81 "" [1 uses])
(note 1539 1538 93 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 93 1539 94 267 (set (reg:DI 303 [ ivtmp.84 ])
        (const_int 8 [0x8])) dl-close.c:367 -1
     (nil))
(insn 94 93 1540 267 (set (reg/v:DI 411 [ remain ])
        (const_int 0 [0])) dl-close.c:367 -1
     (nil))
(jump_insn 1540 94 1541 267 (set (pc)
        (label_ref 742)) dl-close.c:354 -1
     (nil)
 -> 742)
(barrier 1541 1540 1542)
(code_label 1542 1541 1543 268 24 "" [3 uses])
(note 1543 1542 0 268 [bb 268] NOTE_INSN_BASIC_BLOCK)

;; Function _dl_close (_dl_close, funcdef_no=60, decl_uid=7620, cgraph_uid=60, symbol_order=69)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->9 redirected to 10
deleting block 9


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 96 [ _map ])
        (reg:DI 5 di [ _map ])) dl-close.c:805 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 98)
        (mem:SI (plus:DI (reg/v/f:DI 96 [ _map ])
                (const_int 980 [0x3d4])) [8 MEM[(struct link_map *)_map_3(D)].l_flags_1+0 S4 A32])) dl-close.c:809 -1
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 97 [ D.11637 ])
                (and:SI (reg:SI 98)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:809 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (plus:DI (reg/v/f:DI 96 [ _map ])
                    (const_int 980 [0x3d4])) [8 MEM[(struct link_map *)_map_3(D)].l_flags_1+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.11637 ])
            (const_int 0 [0]))) dl-close.c:809 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) dl-close.c:809 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 22)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:QI 100)
        (mem:QI (plus:DI (reg/v/f:DI 96 [ _map ])
                (const_int 788 [0x314])) [5 MEM[(struct link_map *)_map_3(D)]+788 S1 A32])) dl-close.c:811 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (reg:QI 99 [ D.11638 ])
                (and:QI (reg:QI 100)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-close.c:811 -1
     (expr_list:REG_EQUAL (and:QI (mem:QI (plus:DI (reg/v/f:DI 96 [ _map ])
                    (const_int 788 [0x314])) [5 MEM[(struct link_map *)_map_3(D)]+788 S1 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.11638 ])
            (const_int 0 [0]))) dl-close.c:811 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) dl-close.c:811 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 51)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.10789") [flags 0x2]  <var_decl 0x2ae457871ab0 __PRETTY_FUNCTION__>)) dl-close.c:811 -1
     (nil))
(insn 17 16 18 5 (set (reg:SI 1 dx)
        (const_int 811 [0x32b])) dl-close.c:811 -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2ae45796a630 *.LC0>)) dl-close.c:811 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2ae457b41480 *.LC19>)) dl-close.c:811 -1
     (nil))
(call_insn 20 19 21 5 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) dl-close.c:811 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ae4572f0af8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 21 20 22)
(code_label 22 21 23 6 313 "" [1 uses])
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 96 [ _map ])
                    (const_int 784 [0x310])) [8 MEM[(struct link_map *)_map_3(D)].l_direct_opencount+0 S4 A64])
            (const_int 0 [0]))) dl-close.c:816 -1
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) dl-close.c:816 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 35)
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:DI 101)
        (mem/f:DI (plus:DI (reg/v/f:DI 96 [ _map ])
                (const_int 8 [0x8])) [3 MEM[(struct link_map *)_map_3(D)].l_name+0 S8 A64])) dl-close.c:817 -1
     (nil))
(insn 28 27 29 7 (set (reg/f:DI 102)
        (symbol_ref:DI ("_rtld_local_ro") [flags 0x42]  <var_decl 0x2ae457731e10 _rtld_local_ro>)) dl-close.c:817 -1
     (nil))
(insn 29 28 30 7 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 102)
                (const_int 288 [0x120])) [3 _rtld_local_ro._dl_signal_error+0 S8 A64])) dl-close.c:817 -1
     (nil))
(insn 30 29 31 7 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2ae457b41510 *.LC20>)) dl-close.c:817 -1
     (nil))
(insn 31 30 32 7 (set (reg:DI 1 dx)
        (const_int 0 [0])) dl-close.c:817 -1
     (nil))
(insn 32 31 33 7 (set (reg:DI 4 si)
        (reg:DI 101)) dl-close.c:817 -1
     (nil))
(insn 33 32 34 7 (set (reg:SI 5 di)
        (const_int 0 [0])) dl-close.c:817 -1
     (nil))
(call_insn 34 33 35 7 (call (mem:QI (reg/f:DI 103) [0 *_14 S1 A8])
        (const_int 0 [0])) dl-close.c:817 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(code_label 35 34 36 8 315 "" [1 uses])
(note 36 35 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 8 (set (reg/f:DI 104)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:820 -1
     (nil))
(insn 38 37 39 8 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 104)
                (const_int 3848 [0xf08])) [3 _rtld_local._dl_rtld_lock_recursive+0 S8 A64])) dl-close.c:820 -1
     (nil))
(insn 39 38 40 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)
                (const_int 2312 [0x908])))) dl-close.c:820 -1
     (nil))
(call_insn 40 39 41 8 (call (mem:QI (reg/f:DI 105) [0 *_17 S1 A8])
        (const_int 0 [0])) dl-close.c:820 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 8 (set (reg:SI 4 si)
        (const_int 0 [0])) dl-close.c:822 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ _map ])) dl-close.c:822 -1
     (nil))
(call_insn 43 42 44 8 (call (mem:QI (symbol_ref:DI ("_dl_close_worker") [flags 0x3]  <function_decl 0x2ae45767e5e8 _dl_close_worker>) [0 _dl_close_worker S1 A8])
        (const_int 0 [0])) dl-close.c:822 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_dl_close_worker") [flags 0x3]  <function_decl 0x2ae45767e5e8 _dl_close_worker>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 44 43 45 8 (set (reg/f:DI 106)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)) dl-close.c:824 -1
     (nil))
(insn 45 44 46 8 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 106)
                (const_int 3856 [0xf10])) [3 _rtld_local._dl_rtld_unlock_recursive+0 S8 A64])) dl-close.c:824 -1
     (nil))
(insn 46 45 47 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2ae457731cf0 _rtld_local>)
                (const_int 2312 [0x908])))) dl-close.c:824 -1
     (nil))
(call_insn/j 47 46 48 8 (call (mem:QI (reg/f:DI 107) [0 *_20 S1 A8])
        (const_int 0 [0])) dl-close.c:824 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 48 47 51)
(code_label 51 48 52 10 312 "" [1 uses])
(note 52 51 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
