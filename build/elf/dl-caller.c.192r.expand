
;; Function _dl_check_caller (_dl_check_caller, funcdef_no=36, decl_uid=8304, cgraph_uid=36, symbol_order=44)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32
Edge 29->32 redirected to 36
Edge 30->32 redirected to 37


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 27->28 to 30 failed.
Removing jump 234.
Merging block 37 into block 36...
Merged blocks 36 and 37.
Merged 36 and 37 without moving.


try_optimize_cfg iteration 2

Forwarding edge 27->28 to 30 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 30 NOTE_INSN_DELETED)
(note 30 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 30 25 2 (set (reg/v/f:DI 140 [ caller ])
        (reg:DI 5 di [ caller ])) dl-caller.c:29 -1
     (nil))
(insn 25 24 26 2 (set (reg/v:SI 141 [ mask ])
        (reg:SI 4 si [ mask ])) dl-caller.c:29 -1
     (nil))
(note 26 25 32 2 NOTE_INSN_FUNCTION_BEG)
(insn 32 26 33 2 (set (reg/f:DI 142)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2aceeea3a360 _rtld_local>)) dl-caller.c:37 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 134 [ D.8498 ])
        (mem/c:DI (plus:DI (reg/f:DI 142)
                (const_int 2304 [0x900])) [5 _rtld_local._dl_nns+0 S8 A64])) dl-caller.c:37 -1
     (nil))
(insn 34 33 35 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 134 [ D.8498 ])
            (const_int 0 [0]))) dl-caller.c:37 -1
     (nil))
(jump_insn 35 34 36 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) dl-caller.c:37 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 216)
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (set (reg:DI 137 [ ivtmp.7 ])
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2aceeea3a360 _rtld_local>)) -1
     (nil))
(insn 38 37 27 4 (set (reg:DI 135 [ D.8503 ])
        (reg:DI 134 [ D.8498 ])) -1
     (nil))
(insn 27 38 213 4 (set (reg/v:DI 112 [ ns ])
        (const_int 0 [0])) dl-caller.c:37 -1
     (nil))
(code_label 213 27 39 5 16 "" [1 uses])
(note 39 213 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 5 (set (reg/v/f:DI 111 [ l ])
        (mem/f:DI (reg:DI 137 [ ivtmp.7 ]) [3 MEM[base: _53, offset: 0B]+0 S8 A64])) dl-caller.c:38 -1
     (nil))
(insn 41 40 42 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 111 [ l ])
            (const_int 0 [0]))) dl-caller.c:38 -1
     (nil))
(jump_insn 42 41 43 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) dl-caller.c:38 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 209)
(note 43 42 206 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(code_label 206 43 44 7 15 "" [1 uses])
(note 44 206 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ caller ])
            (mem:DI (plus:DI (reg/v/f:DI 111 [ l ])
                    (const_int 832 [0x340])) [5 l_69->l_map_start+0 S8 A64]))) dl-caller.c:40 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) dl-caller.c:40 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 203)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ caller ])
            (mem:DI (plus:DI (reg/v/f:DI 111 [ l ])
                    (const_int 848 [0x350])) [5 l_69->l_text_end+0 S8 A64]))) dl-caller.c:41 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) dl-caller.c:41 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 203)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (parallel [
            (set (reg:SI 117 [ D.8500 ])
                (and:SI (reg/v:SI 141 [ mask ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:45 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:45 -1
     (nil))
(jump_insn 53 52 54 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) dl-caller.c:45 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 67)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 10 (set (reg/f:DI 143)
        (symbol_ref:DI ("expected1.8338") [flags 0x2]  <var_decl 0x2aceeea3ab40 expected1>)) dl-caller.c:45 -1
     (nil))
(insn 56 55 57 10 (set (reg/f:DI 144)
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 8 [0x8])) [3 l_69->l_name+0 S8 A64])) dl-caller.c:45 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 145)
        (reg/f:DI 143)) dl-caller.c:45 -1
     (nil))
(insn 58 57 59 10 (set (reg:DI 146)
        (reg/f:DI 144)) dl-caller.c:45 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 147)
        (const_int 10 [0xa])) dl-caller.c:45 -1
     (nil))
(insn 60 59 61 10 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 145) [0 MEM[(void *)&expected1]+0 A64])
                    (mem:BLK (reg:DI 146) [0 MEM[(void *)_37]+0 A8])))
            (use (reg:DI 147))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 145))
            (clobber (reg:DI 146))
            (clobber (reg:DI 147))
        ]) dl-caller.c:45 -1
     (nil))
(insn 61 60 62 10 (set (reg:QI 148)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:45 -1
     (nil))
(insn 62 61 63 10 (set (reg:QI 149)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:45 -1
     (nil))
(insn 63 62 64 10 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 148)
                    (reg:QI 149)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:45 -1
     (nil))
(insn 64 63 65 10 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:45 -1
     (nil))
(insn 65 64 66 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:45 -1
     (nil))
(jump_insn 66 65 67 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:45 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 67 66 68 11 5 "" [1 uses])
(note 68 67 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 11 (parallel [
            (set (reg:SI 118 [ D.8500 ])
                (and:SI (reg/v:SI 141 [ mask ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:47 -1
     (nil))
(insn 70 69 71 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:47 -1
     (nil))
(jump_insn 71 70 72 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) dl-caller.c:47 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 85)
(note 72 71 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (reg/f:DI 150)
        (symbol_ref:DI ("expected2.8339") [flags 0x2]  <var_decl 0x2aceeea3abd0 expected2>)) dl-caller.c:47 -1
     (nil))
(insn 74 73 75 12 (set (reg/f:DI 151)
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 8 [0x8])) [3 l_69->l_name+0 S8 A64])) dl-caller.c:47 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 152)
        (reg/f:DI 150)) dl-caller.c:47 -1
     (nil))
(insn 76 75 77 12 (set (reg:DI 153)
        (reg/f:DI 151)) dl-caller.c:47 -1
     (nil))
(insn 77 76 78 12 (set (reg:DI 154)
        (const_int 11 [0xb])) dl-caller.c:47 -1
     (nil))
(insn 78 77 79 12 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 152) [0 MEM[(void *)&expected2]+0 A64])
                    (mem:BLK (reg:DI 153) [0 MEM[(void *)_19]+0 A8])))
            (use (reg:DI 154))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 152))
            (clobber (reg:DI 153))
            (clobber (reg:DI 154))
        ]) dl-caller.c:47 -1
     (nil))
(insn 79 78 80 12 (set (reg:QI 155)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:47 -1
     (nil))
(insn 80 79 81 12 (set (reg:QI 156)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:47 -1
     (nil))
(insn 81 80 82 12 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 155)
                    (reg:QI 156)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:47 -1
     (nil))
(insn 82 81 83 12 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:47 -1
     (nil))
(insn 83 82 84 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:47 -1
     (nil))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:47 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 85 84 86 13 7 "" [1 uses])
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (parallel [
            (set (reg:SI 120 [ D.8500 ])
                (and:SI (reg/v:SI 141 [ mask ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:50 -1
     (nil))
(insn 88 87 89 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:50 -1
     (nil))
(jump_insn 89 88 90 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) dl-caller.c:50 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 103)
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (set (reg/f:DI 157)
        (symbol_ref:DI ("expected3.8340") [flags 0x2]  <var_decl 0x2aceeea3ac60 expected3>)) dl-caller.c:50 -1
     (nil))
(insn 92 91 93 14 (set (reg/f:DI 158)
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 8 [0x8])) [3 l_69->l_name+0 S8 A64])) dl-caller.c:50 -1
     (nil))
(insn 93 92 94 14 (set (reg:DI 159)
        (reg/f:DI 157)) dl-caller.c:50 -1
     (nil))
(insn 94 93 95 14 (set (reg:DI 160)
        (reg/f:DI 158)) dl-caller.c:50 -1
     (nil))
(insn 95 94 96 14 (set (reg:DI 161)
        (const_int 16 [0x10])) dl-caller.c:50 -1
     (nil))
(insn 96 95 97 14 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 159) [0 MEM[(void *)&expected3]+0 A128])
                    (mem:BLK (reg:DI 160) [0 MEM[(void *)_22]+0 A8])))
            (use (reg:DI 161))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 159))
            (clobber (reg:DI 160))
            (clobber (reg:DI 161))
        ]) dl-caller.c:50 -1
     (nil))
(insn 97 96 98 14 (set (reg:QI 162)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:50 -1
     (nil))
(insn 98 97 99 14 (set (reg:QI 163)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:50 -1
     (nil))
(insn 99 98 100 14 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 162)
                    (reg:QI 163)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:50 -1
     (nil))
(insn 100 99 101 14 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:50 -1
     (nil))
(insn 101 100 102 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:50 -1
     (nil))
(jump_insn 102 101 103 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:50 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 103 102 104 15 8 "" [1 uses])
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (parallel [
            (set (reg:SI 122 [ D.8500 ])
                (and:SI (reg/v:SI 141 [ mask ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:53 -1
     (nil))
(insn 106 105 107 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:53 -1
     (nil))
(jump_insn 107 106 108 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) dl-caller.c:53 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 121)
(note 108 107 109 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 16 (set (reg/f:DI 164)
        (symbol_ref:DI ("expected4.8341") [flags 0x2]  <var_decl 0x2aceeea3acf0 expected4>)) dl-caller.c:53 -1
     (nil))
(insn 110 109 111 16 (set (reg/f:DI 165)
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 8 [0x8])) [3 l_69->l_name+0 S8 A64])) dl-caller.c:53 -1
     (nil))
(insn 111 110 112 16 (set (reg:DI 166)
        (reg/f:DI 164)) dl-caller.c:53 -1
     (nil))
(insn 112 111 113 16 (set (reg:DI 167)
        (reg/f:DI 165)) dl-caller.c:53 -1
     (nil))
(insn 113 112 114 16 (set (reg:DI 168)
        (const_int 21 [0x15])) dl-caller.c:53 -1
     (nil))
(insn 114 113 115 16 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 166) [0 MEM[(void *)&expected4]+0 A128])
                    (mem:BLK (reg:DI 167) [0 MEM[(void *)_25]+0 A8])))
            (use (reg:DI 168))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 166))
            (clobber (reg:DI 167))
            (clobber (reg:DI 168))
        ]) dl-caller.c:53 -1
     (nil))
(insn 115 114 116 16 (set (reg:QI 169)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:53 -1
     (nil))
(insn 116 115 117 16 (set (reg:QI 170)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:53 -1
     (nil))
(insn 117 116 118 16 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 169)
                    (reg:QI 170)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:53 -1
     (nil))
(insn 118 117 119 16 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:53 -1
     (nil))
(insn 119 118 120 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:53 -1
     (nil))
(jump_insn 120 119 121 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:53 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 121 120 122 17 9 "" [1 uses])
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 17 (set (reg/v/f:DI 110 [ runp ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 56 [0x38])) [3 l_69->l_libname+0 S8 A64])) dl-caller.c:56 -1
     (nil))
(insn 124 123 125 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ runp ])
            (const_int 0 [0]))) dl-caller.c:58 -1
     (nil))
(jump_insn 125 124 126 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) dl-caller.c:58 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 209)
(note 126 125 197 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(code_label 197 126 127 19 14 "" [1 uses])
(note 127 197 128 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:60 -1
     (nil))
(jump_insn 129 128 130 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) dl-caller.c:60 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 143)
(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 20 (set (reg/f:DI 171)
        (symbol_ref:DI ("expected1.8338") [flags 0x2]  <var_decl 0x2aceeea3ab40 expected1>)) dl-caller.c:60 -1
     (nil))
(insn 132 131 133 20 (set (reg/f:DI 172)
        (mem/f:DI (reg/v/f:DI 110 [ runp ]) [3 runp_67->name+0 S8 A64])) dl-caller.c:60 -1
     (nil))
(insn 133 132 134 20 (set (reg:DI 173)
        (reg/f:DI 171)) dl-caller.c:60 -1
     (nil))
(insn 134 133 135 20 (set (reg:DI 174)
        (reg/f:DI 172)) dl-caller.c:60 -1
     (nil))
(insn 135 134 136 20 (set (reg:DI 175)
        (const_int 10 [0xa])) dl-caller.c:60 -1
     (nil))
(insn 136 135 137 20 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 173) [0 MEM[(void *)&expected1]+0 A64])
                    (mem:BLK (reg:DI 174) [0 MEM[(void *)_28]+0 A8])))
            (use (reg:DI 175))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 173))
            (clobber (reg:DI 174))
            (clobber (reg:DI 175))
        ]) dl-caller.c:60 -1
     (nil))
(insn 137 136 138 20 (set (reg:QI 176)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:60 -1
     (nil))
(insn 138 137 139 20 (set (reg:QI 177)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:60 -1
     (nil))
(insn 139 138 140 20 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 176)
                    (reg:QI 177)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:60 -1
     (nil))
(insn 140 139 141 20 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:60 -1
     (nil))
(insn 141 140 142 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:60 -1
     (nil))
(jump_insn 142 141 143 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:60 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 143 142 144 21 10 "" [1 uses])
(note 144 143 145 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:62 -1
     (nil))
(jump_insn 146 145 147 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 160)
            (pc))) dl-caller.c:62 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 160)
(note 147 146 148 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 22 (set (reg/f:DI 178)
        (symbol_ref:DI ("expected2.8339") [flags 0x2]  <var_decl 0x2aceeea3abd0 expected2>)) dl-caller.c:62 -1
     (nil))
(insn 149 148 150 22 (set (reg/f:DI 179)
        (mem/f:DI (reg/v/f:DI 110 [ runp ]) [3 runp_67->name+0 S8 A64])) dl-caller.c:62 -1
     (nil))
(insn 150 149 151 22 (set (reg:DI 180)
        (reg/f:DI 178)) dl-caller.c:62 -1
     (nil))
(insn 151 150 152 22 (set (reg:DI 181)
        (reg/f:DI 179)) dl-caller.c:62 -1
     (nil))
(insn 152 151 153 22 (set (reg:DI 182)
        (const_int 11 [0xb])) dl-caller.c:62 -1
     (nil))
(insn 153 152 154 22 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 180) [0 MEM[(void *)&expected2]+0 A64])
                    (mem:BLK (reg:DI 181) [0 MEM[(void *)_30]+0 A8])))
            (use (reg:DI 182))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 180))
            (clobber (reg:DI 181))
            (clobber (reg:DI 182))
        ]) dl-caller.c:62 -1
     (nil))
(insn 154 153 155 22 (set (reg:QI 183)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:62 -1
     (nil))
(insn 155 154 156 22 (set (reg:QI 184)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:62 -1
     (nil))
(insn 156 155 157 22 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 183)
                    (reg:QI 184)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:62 -1
     (nil))
(insn 157 156 158 22 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:62 -1
     (nil))
(insn 158 157 159 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:62 -1
     (nil))
(jump_insn 159 158 160 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:62 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 160 159 161 23 11 "" [1 uses])
(note 161 160 162 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:65 -1
     (nil))
(jump_insn 163 162 164 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) dl-caller.c:65 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 177)
(note 164 163 165 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 24 (set (reg/f:DI 185)
        (symbol_ref:DI ("expected3.8340") [flags 0x2]  <var_decl 0x2aceeea3ac60 expected3>)) dl-caller.c:66 -1
     (nil))
(insn 166 165 167 24 (set (reg/f:DI 186)
        (mem/f:DI (reg/v/f:DI 110 [ runp ]) [3 runp_67->name+0 S8 A64])) dl-caller.c:66 -1
     (nil))
(insn 167 166 168 24 (set (reg:DI 187)
        (reg/f:DI 185)) dl-caller.c:66 -1
     (nil))
(insn 168 167 169 24 (set (reg:DI 188)
        (reg/f:DI 186)) dl-caller.c:66 -1
     (nil))
(insn 169 168 170 24 (set (reg:DI 189)
        (const_int 16 [0x10])) dl-caller.c:66 -1
     (nil))
(insn 170 169 171 24 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 187) [0 MEM[(void *)&expected3]+0 A128])
                    (mem:BLK (reg:DI 188) [0 MEM[(void *)_32]+0 A8])))
            (use (reg:DI 189))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 187))
            (clobber (reg:DI 188))
            (clobber (reg:DI 189))
        ]) dl-caller.c:66 -1
     (nil))
(insn 171 170 172 24 (set (reg:QI 190)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:66 -1
     (nil))
(insn 172 171 173 24 (set (reg:QI 191)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:66 -1
     (nil))
(insn 173 172 174 24 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 190)
                    (reg:QI 191)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:66 -1
     (nil))
(insn 174 173 175 24 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:66 -1
     (nil))
(insn 175 174 176 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:66 -1
     (nil))
(jump_insn 176 175 177 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:66 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 177 176 178 25 12 "" [1 uses])
(note 178 177 179 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:69 -1
     (nil))
(jump_insn 180 179 181 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 194)
            (pc))) dl-caller.c:69 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 194)
(note 181 180 182 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 26 (set (reg/f:DI 192)
        (symbol_ref:DI ("expected4.8341") [flags 0x2]  <var_decl 0x2aceeea3acf0 expected4>)) dl-caller.c:69 -1
     (nil))
(insn 183 182 184 26 (set (reg/f:DI 193)
        (mem/f:DI (reg/v/f:DI 110 [ runp ]) [3 runp_67->name+0 S8 A64])) dl-caller.c:69 -1
     (nil))
(insn 184 183 185 26 (set (reg:DI 194)
        (reg/f:DI 192)) dl-caller.c:69 -1
     (nil))
(insn 185 184 186 26 (set (reg:DI 195)
        (reg/f:DI 193)) dl-caller.c:69 -1
     (nil))
(insn 186 185 187 26 (set (reg:DI 196)
        (const_int 21 [0x15])) dl-caller.c:69 -1
     (nil))
(insn 187 186 188 26 (parallel [
            (set (reg:CC 17 flags)
                (compare:CC (mem/u/c:BLK (reg:DI 194) [0 MEM[(void *)&expected4]+0 A128])
                    (mem:BLK (reg:DI 195) [0 MEM[(void *)_34]+0 A8])))
            (use (reg:DI 196))
            (use (const_int 1 [0x1]))
            (clobber (reg:DI 194))
            (clobber (reg:DI 195))
            (clobber (reg:DI 196))
        ]) dl-caller.c:69 -1
     (nil))
(insn 188 187 189 26 (set (reg:QI 197)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:69 -1
     (nil))
(insn 189 188 190 26 (set (reg:QI 198)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:69 -1
     (nil))
(insn 190 189 191 26 (parallel [
            (set (subreg:QI (reg:SI 109 [ D.8497 ]) 0)
                (minus:QI (reg:QI 197)
                    (reg:QI 198)))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:69 -1
     (nil))
(insn 191 190 192 26 (set (reg:SI 109 [ D.8497 ])
        (sign_extend:SI (subreg:QI (reg:SI 109 [ D.8497 ]) 0))) dl-caller.c:69 -1
     (nil))
(insn 192 191 193 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8497 ])
            (const_int 0 [0]))) dl-caller.c:69 -1
     (nil))
(jump_insn 193 192 194 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 231)
            (pc))) dl-caller.c:69 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 231)
(code_label 194 193 195 27 13 "" [1 uses])
(note 195 194 196 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 198 27 (set (reg/v/f:DI 110 [ runp ])
        (mem/f:DI (plus:DI (reg/v/f:DI 110 [ runp ])
                (const_int 8 [0x8])) [3 runp_67->next+0 S8 A64])) dl-caller.c:72 -1
     (nil))
(insn 198 196 199 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 110 [ runp ])
            (const_int 0 [0]))) dl-caller.c:58 -1
     (nil))
(jump_insn 199 198 202 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) dl-caller.c:58 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 197)
(note 202 199 200 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 200 202 201 28 (set (pc)
        (label_ref 209)) -1
     (nil)
 -> 209)
(barrier 201 200 203)
(code_label 203 201 204 29 4 "" [2 uses])
(note 204 203 205 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 207 29 (set (reg/v/f:DI 111 [ l ])
        (mem/f:DI (plus:DI (reg/v/f:DI 111 [ l ])
                (const_int 24 [0x18])) [3 l_69->l_next+0 S8 A64])) dl-caller.c:39 -1
     (nil))
(insn 207 205 208 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 111 [ l ])
            (const_int 0 [0]))) dl-caller.c:38 -1
     (nil))
(jump_insn 208 207 209 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) dl-caller.c:38 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 206)
(code_label 209 208 210 30 3 "" [3 uses])
(note 210 209 211 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 30 (parallel [
            (set (reg/v:DI 112 [ ns ])
                (plus:DI (reg/v:DI 112 [ ns ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:37 -1
     (nil))
(insn 212 211 214 30 (parallel [
            (set (reg:DI 137 [ ivtmp.7 ])
                (plus:DI (reg:DI 137 [ ivtmp.7 ])
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 214 212 215 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 112 [ ns ])
            (reg:DI 135 [ D.8503 ]))) dl-caller.c:37 -1
     (nil))
(jump_insn 215 214 216 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) dl-caller.c:37 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 213)
(code_label 216 215 217 31 2 "" [1 uses])
(note 217 216 218 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 31 (parallel [
            (set (reg:SI 199 [ D.8500 ])
                (and:SI (reg/v:SI 141 [ mask ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) dl-caller.c:79 -1
     (nil))
(insn 219 218 220 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 199 [ D.8500 ])
            (const_int 0 [0]))) dl-caller.c:79 -1
     (nil))
(jump_insn 220 219 221 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 243)
            (pc))) dl-caller.c:79 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 243)
(note 221 220 222 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 32 (set (reg/f:DI 200)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2aceeea3a360 _rtld_local>)) dl-caller.c:80 -1
     (nil))
(insn 223 222 224 32 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ caller ])
            (mem/c:DI (plus:DI (reg/f:DI 200)
                    (const_int 3288 [0xcd8])) [5 _rtld_local._dl_rtld_map.l_map_start+0 S8 A64]))) dl-caller.c:80 -1
     (nil))
(jump_insn 224 223 225 32 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 247)
            (pc))) dl-caller.c:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 247)
(note 225 224 226 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 33 (set (reg/f:DI 201)
        (symbol_ref:DI ("_rtld_local") [flags 0x42]  <var_decl 0x2aceeea3a360 _rtld_local>)) dl-caller.c:81 -1
     (nil))
(insn 227 226 228 33 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ caller ])
            (mem/c:DI (plus:DI (reg/f:DI 201)
                    (const_int 3304 [0xce8])) [5 _rtld_local._dl_rtld_map.l_text_end+0 S8 A64]))) dl-caller.c:46 -1
     (nil))
(insn 228 227 229 33 (set (reg:QI 203)
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) dl-caller.c:46 -1
     (nil))
(insn 229 228 230 33 (set (reg:SI 202 [ D.8505 ])
        (zero_extend:SI (reg:QI 203))) dl-caller.c:46 -1
     (nil))
(insn 230 229 240 33 (set (reg:SI 109 [ D.8497 ])
        (reg:SI 202 [ D.8505 ])) dl-caller.c:46 -1
     (nil))
(jump_insn 240 230 241 33 (set (pc)
        (label_ref 231)) -1
     (nil)
 -> 231)
(barrier 241 240 243)
(code_label 243 241 242 34 17 "" [1 uses])
(note 242 243 29 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 29 242 244 34 (set (reg:SI 109 [ D.8497 ])
        (const_int 1 [0x1])) dl-caller.c:85 -1
     (nil))
(jump_insn 244 29 245 34 (set (pc)
        (label_ref 231)) -1
     (nil)
 -> 231)
(barrier 245 244 247)
(code_label 247 245 246 35 18 "" [1 uses])
(note 246 247 28 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 28 246 231 35 (set (reg:SI 109 [ D.8497 ])
        (const_int 1 [0x1])) dl-caller.c:85 -1
     (nil))
(code_label 231 28 232 36 6 "" [10 uses])
(note 232 231 233 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 237 36 (set (reg:SI 139 [ <retval> ])
        (reg:SI 109 [ D.8497 ])) -1
     (nil))
(insn 237 233 238 36 (set (reg/i:SI 0 ax)
        (reg:SI 139 [ <retval> ])) dl-caller.c:86 -1
     (nil))
(insn 238 237 0 36 (use (reg/i:SI 0 ax)) dl-caller.c:86 -1
     (nil))
