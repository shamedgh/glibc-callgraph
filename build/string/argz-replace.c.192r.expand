
;; Function str_append (str_append, funcdef_no=34, decl_uid=7191, cgraph_uid=34, symbol_order=38)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 29 from 6 to 7.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 96 [ to ])
        (reg:DI 5 di [ to ])) argz-replace.c:29 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ to_len ])
        (reg:DI 4 si [ to_len ])) argz-replace.c:29 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 98 [ buf ])
        (reg:DI 1 dx [ buf ])) argz-replace.c:29 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 99 [ buf_len ])
        (reg:DI 2 cx [ buf_len ])) argz-replace.c:29 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 100)
        (mem:DI (reg/v/f:DI 97 [ to_len ]) [2 *to_len_2(D)+0 S8 A64])) argz-replace.c:30 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/v:DI 88 [ new_len ])
                (plus:DI (reg/v:DI 99 [ buf_len ])
                    (reg:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:30 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v:DI 99 [ buf_len ])
            (mem:DI (reg/v/f:DI 97 [ to_len ]) [2 *to_len_2(D)+0 S8 A64]))
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:DI 101 [ D.7370 ])
                (plus:DI (reg/v:DI 88 [ new_len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:31 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg:DI 101 [ D.7370 ])) argz-replace.c:31 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 96 [ to ]) [1 *to_7(D)+0 S8 A64])) argz-replace.c:31 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2aefeca50000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) argz-replace.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2aefeca50000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 15 14 16 2 (set (reg/v/f:DI 91 [ new_to ])
        (reg:DI 0 ax)) argz-replace.c:31 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ new_to ])
            (const_int 0 [0]))) argz-replace.c:33 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) argz-replace.c:33 -1
     (int_list:REG_BR_PROB 2163 (nil))
 -> 31)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 103)
        (mem:DI (reg/v/f:DI 97 [ to_len ]) [2 *to_len_2(D)+0 S8 A64])) argz-replace.c:35 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 102 [ D.7371 ])
                (plus:DI (reg/v/f:DI 91 [ new_to ])
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:35 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v/f:DI 91 [ new_to ])
            (mem:DI (reg/v/f:DI 97 [ to_len ]) [2 *to_len_2(D)+0 S8 A64]))
        (nil)))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (reg/v:DI 99 [ buf_len ])) argz-replace.c:35 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ buf ])) argz-replace.c:35 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg:DI 102 [ D.7371 ])) argz-replace.c:35 -1
     (nil))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aefecc441b0 __mempcpy>) [0 __mempcpy S1 A8])
            (const_int 0 [0]))) argz-replace.c:35 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2aefecc441b0 __mempcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 4 (set (reg/f:DI 94 [ D.7372 ])
        (reg:DI 0 ax)) argz-replace.c:35 -1
     (nil))
(insn 26 25 27 4 (set (mem:QI (reg/f:DI 94 [ D.7372 ]) [0 MEM[(char *)_15]+0 S1 A8])
        (const_int 0 [0])) argz-replace.c:35 -1
     (nil))
(insn 27 26 28 4 (set (mem/f:DI (reg/v/f:DI 96 [ to ]) [1 *to_7(D)+0 S8 A64])
        (reg/v/f:DI 91 [ new_to ])) argz-replace.c:36 -1
     (nil))
(insn 28 27 29 4 (set (mem:DI (reg/v/f:DI 97 [ to_len ]) [2 *to_len_2(D)+0 S8 A64])
        (reg/v:DI 88 [ new_len ])) argz-replace.c:37 -1
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (label_ref:DI 38)) 654 {jump}
     (nil)
 -> 38)
(barrier 30 29 31)
(code_label 31 30 32 5 2 "" [1 uses])
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 96 [ to ]) [1 *to_7(D)+0 S8 A64])) argz-replace.c:41 -1
     (nil))
(call_insn 34 33 35 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argz-replace.c:41 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 38 5 (set (mem/f:DI (reg/v/f:DI 96 [ to ]) [1 *to_7(D)+0 S8 A64])
        (const_int 0 [0])) argz-replace.c:42 -1
     (nil))
(code_label 38 35 39 7 1 "" [1 uses])
(note 39 38 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

;; Function __argz_replace (__argz_replace, funcdef_no=35, decl_uid=7159, cgraph_uid=35, symbol_order=39)

Partition 3: size 8 align 8
	to
Partition 2: size 8 align 8
	to_len
Partition 1: size 8 align 8
	dst_len
Partition 0: size 8 align 8
	dst

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36
Edge 2->36 redirected to 40
Edge 3->36 redirected to 41
Edge 7->19 redirected to 42
Edge 13->19 redirected to 43
Edge 31->35 redirected to 45
Purged non-fallthru edges from bb 47


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 13->15 redirected to 16
Forwarding edge 14->15 to 16 failed.
Deleted label in block 15.
Edge 25->27 redirected to 30
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.
Forwarding edge 34->35 to 39 failed.
Redirecting jump 228 from 44 to 47.
Edge 41->44 redirected to 47
Redirecting jump 266 from 44 to 47.
Merging block 44 into block 43...
Merged blocks 43 and 44.
Merged 43 and 44 without moving.
Removing jump 243.
Merging block 48 into block 47...
Merged blocks 47 and 48.
Merged 47 and 48 without moving.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 16 failed.
Forwarding edge 34->35 to 39 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 19 NOTE_INSN_DELETED)
(note 19 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 19 3 2 (set (reg/v/f:DI 128 [ argz ])
        (reg:DI 5 di [ argz ])) argz-replace.c:52 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 129 [ argz_len ])
        (reg:DI 4 si [ argz_len ])) argz-replace.c:52 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 130 [ str ])
        (reg:DI 1 dx [ str ])) argz-replace.c:52 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 131 [ with ])
        (reg:DI 2 cx [ with ])) argz-replace.c:52 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 132 [ replace_count ])
        (reg:DI 37 r8 [ replace_count ])) argz-replace.c:52 -1
     (nil))
(note 7 6 21 2 NOTE_INSN_FUNCTION_BEG)
(insn 21 7 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 130 [ str ])
            (const_int 0 [0]))) argz-replace.c:55 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 252)
            (pc))) argz-replace.c:55 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 252)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 130 [ str ]) [0 *str_3(D)+0 S1 A8])
            (const_int 0 [0]))) argz-replace.c:55 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 256)
            (pc))) argz-replace.c:55 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 256)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/v/f:DI 89 [ arg ])
        (mem/f:DI (reg/v/f:DI 128 [ argz ]) [1 *argz_6(D)+0 S8 A64])) argz-replace.c:58 -1
     (nil))
(insn 28 27 29 5 (set (reg/v:DI 90 [ src_len ])
        (mem:DI (reg/v/f:DI 129 [ argz_len ]) [2 *argz_len_8(D)+0 S8 A64])) argz-replace.c:59 -1
     (nil))
(insn 29 28 30 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 dst+0 S8 A64])
        (const_int 0 [0])) argz-replace.c:60 -1
     (nil))
(insn 30 29 31 5 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 dst_len+0 S8 A64])
        (const_int 0 [0])) argz-replace.c:61 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ str ])) argz-replace.c:63 -1
     (nil))
(call_insn/i 32 31 33 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-replace.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 5 (set (reg:DI 134)
        (reg:DI 0 ax)) argz-replace.c:63 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 135)
        (reg:DI 134)) argz-replace.c:63 -1
     (nil))
(insn 35 34 36 5 (set (reg/v:DI 91 [ str_len ])
        (reg:DI 135)) argz-replace.c:63 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 5 di)
        (reg/v/f:DI 131 [ with ])) argz-replace.c:63 -1
     (nil))
(call_insn/i 37 36 38 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-replace.c:63 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 5 (set (reg:DI 137)
        (reg:DI 0 ax)) argz-replace.c:63 -1
     (nil))
(insn 39 38 40 5 (set (reg:DI 138)
        (reg:DI 137)) argz-replace.c:63 -1
     (nil))
(insn 40 39 12 5 (set (reg/v:DI 92 [ with_len ])
        (reg:DI 138)) argz-replace.c:63 -1
     (nil))
(insn 12 40 13 5 (set (reg/v/f:DI 93 [ arg ])
        (const_int 0 [0])) argz-replace.c:57 -1
     (nil))
(insn 13 12 41 5 (set (reg/v:SI 124 [ delayed_copy ])
        (const_int 1 [0x1])) argz-replace.c:62 -1
     (nil))
(jump_insn 41 13 42 5 (set (pc)
        (label_ref 189)) argz-replace.c:63 -1
     (nil)
 -> 189)
(barrier 42 41 214)
(code_label 214 42 43 6 25 "" [1 uses])
(note 43 214 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:DI 4 si)
        (reg/v/f:DI 130 [ str ])) argz-replace.c:67 -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ arg ])) argz-replace.c:67 -1
     (nil))
(call_insn/i 46 45 47 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strstr") [flags 0x43]  <function_decl 0x2aefeca2a798 strstr>) [0 __builtin_strstr S1 A8])
            (const_int 0 [0]))) argz-replace.c:67 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strstr") [flags 0x43]  <function_decl 0x2aefeca2a798 strstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 47 46 48 6 (set (reg/v/f:DI 94 [ match ])
        (reg:DI 0 ax)) argz-replace.c:67 -1
     (nil))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ match ])
            (const_int 0 [0]))) argz-replace.c:68 -1
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 171)
            (pc))) argz-replace.c:68 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 171)
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (parallel [
            (set (reg/v/f:DI 95 [ from ])
                (plus:DI (reg/v/f:DI 94 [ match ])
                    (reg/v:DI 91 [ str_len ])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:70 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 97 [ D.7400 ])
        (reg/v/f:DI 93 [ arg ])) argz-replace.c:71 -1
     (nil))
(insn 53 52 54 7 (parallel [
            (set (reg:DI 99 [ D.7401 ])
                (minus:DI (reg/v/f:DI 94 [ match ])
                    (reg:DI 97 [ D.7400 ])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:71 -1
     (nil))
(insn 54 53 55 7 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 to_len+0 S8 A64])
        (reg:DI 99 [ D.7401 ])) argz-replace.c:71 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 4 si)
        (reg:DI 99 [ D.7401 ])) argz-replace.c:72 -1
     (nil))
(insn 56 55 57 7 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ arg ])) argz-replace.c:72 -1
     (nil))
(call_insn 57 56 58 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strndup") [flags 0x43]  <function_decl 0x2aefecc306c0 __strndup>) [0 __strndup S1 A8])
            (const_int 0 [0]))) argz-replace.c:72 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strndup") [flags 0x43]  <function_decl 0x2aefecc306c0 __strndup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 58 57 59 7 (set (reg/f:DI 139)
        (reg:DI 0 ax)) argz-replace.c:72 -1
     (expr_list:REG_NOALIAS (reg/f:DI 139)
        (nil)))
(insn 59 58 60 7 (set (reg/f:DI 100 [ D.7402 ])
        (reg/f:DI 139)) argz-replace.c:72 -1
     (nil))
(insn 60 59 61 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 to+0 S8 A64])
        (reg/f:DI 100 [ D.7402 ])) argz-replace.c:72 -1
     (nil))
(jump_insn 61 60 62 7 (set (pc)
        (label_ref 109)) argz-replace.c:72 -1
     (nil)
 -> 109)
(barrier 62 61 111)
(code_label 111 62 63 8 14 "" [1 uses])
(note 63 111 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (parallel [
            (set (reg:DI 140)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:76 -1
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg:DI 141)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:76 -1
     (nil))
(insn 66 65 67 8 (set (reg:DI 2 cx)
        (reg/v:DI 92 [ with_len ])) argz-replace.c:76 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 131 [ with ])) argz-replace.c:76 -1
     (nil))
(insn 68 67 69 8 (set (reg:DI 4 si)
        (reg:DI 140)) argz-replace.c:76 -1
     (nil))
(insn 69 68 70 8 (set (reg:DI 5 di)
        (reg:DI 141)) argz-replace.c:76 -1
     (nil))
(call_insn 70 69 71 8 (call (mem:QI (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>) [0 str_append S1 A8])
        (const_int 0 [0])) argz-replace.c:76 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 71 70 72 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 to+0 S8 A64])
            (const_int 0 [0]))) argz-replace.c:77 -1
     (nil))
(jump_insn 72 71 73 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 260)
            (pc))) argz-replace.c:77 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 260)
(note 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 9 (set (reg:DI 4 si)
        (reg/v/f:DI 130 [ str ])) argz-replace.c:79 -1
     (nil))
(insn 75 74 76 9 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ from ])) argz-replace.c:79 -1
     (nil))
(call_insn/i 76 75 77 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strstr") [flags 0x43]  <function_decl 0x2aefeca2a798 strstr>) [0 __builtin_strstr S1 A8])
            (const_int 0 [0]))) argz-replace.c:79 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strstr") [flags 0x43]  <function_decl 0x2aefeca2a798 strstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 77 76 78 9 (set (reg/v/f:DI 103 [ match ])
        (reg:DI 0 ax)) argz-replace.c:79 -1
     (nil))
(insn 78 77 79 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 103 [ match ])
            (const_int 0 [0]))) argz-replace.c:80 -1
     (nil))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) argz-replace.c:80 -1
     (int_list:REG_BR_PROB 1499 (nil))
 -> 92)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (parallel [
            (set (reg:DI 142 [ D.7400 ])
                (minus:DI (reg/v/f:DI 103 [ match ])
                    (reg/v/f:DI 95 [ from ])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:82 -1
     (nil))
(insn 82 81 83 10 (parallel [
            (set (reg:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:82 -1
     (nil))
(insn 83 82 84 10 (parallel [
            (set (reg:DI 144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:82 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 2 cx)
        (reg:DI 142 [ D.7400 ])) argz-replace.c:82 -1
     (nil))
(insn 85 84 86 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ from ])) argz-replace.c:82 -1
     (nil))
(insn 86 85 87 10 (set (reg:DI 4 si)
        (reg:DI 143)) argz-replace.c:82 -1
     (nil))
(insn 87 86 88 10 (set (reg:DI 5 di)
        (reg:DI 144)) argz-replace.c:82 -1
     (nil))
(call_insn 88 87 89 10 (call (mem:QI (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>) [0 str_append S1 A8])
        (const_int 0 [0])) argz-replace.c:82 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 89 88 90 10 (parallel [
            (set (reg/v/f:DI 95 [ from ])
                (plus:DI (reg/v/f:DI 103 [ match ])
                    (reg/v:DI 91 [ str_len ])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:83 -1
     (nil))
(jump_insn 90 89 91 10 (set (pc)
        (label_ref 106)) argz-replace.c:83 -1
     (nil)
 -> 106)
(barrier 91 90 92)
(code_label 92 91 93 11 12 "" [1 uses])
(note 93 92 94 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ from ])) argz-replace.c:87 -1
     (nil))
(call_insn/i 95 94 96 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-replace.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2aefeca26948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 96 95 97 11 (set (reg:DI 146)
        (reg:DI 0 ax)) argz-replace.c:87 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 147)
        (reg:DI 146)) argz-replace.c:87 -1
     (nil))
(insn 98 97 99 11 (set (reg:DI 108 [ D.7401 ])
        (reg:DI 147)) argz-replace.c:87 -1
     (nil))
(insn 99 98 100 11 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:87 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:87 -1
     (nil))
(insn 101 100 102 11 (set (reg:DI 2 cx)
        (reg:DI 108 [ D.7401 ])) argz-replace.c:87 -1
     (nil))
(insn 102 101 103 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ from ])) argz-replace.c:87 -1
     (nil))
(insn 103 102 104 11 (set (reg:DI 4 si)
        (reg:DI 148)) argz-replace.c:87 -1
     (nil))
(insn 104 103 105 11 (set (reg:DI 5 di)
        (reg:DI 149)) argz-replace.c:87 -1
     (nil))
(call_insn 105 104 8 11 (call (mem:QI (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>) [0 str_append S1 A8])
        (const_int 0 [0])) argz-replace.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("str_append") [flags 0x3]  <function_decl 0x2aefece58ca8 str_append>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 8 105 106 11 (set (reg/v/f:DI 95 [ from ])
        (const_int 0 [0])) argz-replace.c:88 -1
     (nil))
(code_label 106 8 107 12 13 "" [1 uses])
(note 107 106 108 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 109 12 (set (reg/f:DI 100 [ D.7402 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 to+0 S8 A64])) -1
     (nil))
(code_label 109 108 110 13 10 "" [1 uses])
(note 110 109 112 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 112 110 113 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.7402 ])
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(insn 113 112 114 13 (set (reg:QI 151 [ D.7398 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(insn 114 113 115 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 151 [ D.7398 ])
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(jump_insn 115 114 270 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 273)
            (pc))) argz-replace.c:74 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 273)
(note 270 115 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 270 117 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ from ])
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(insn 117 116 118 14 (set (reg:QI 153 [ D.7398 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(insn 118 117 119 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.7398 ])
            (const_int 0 [0]))) argz-replace.c:74 -1
     (nil))
(jump_insn 119 118 271 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) argz-replace.c:74 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 111)
(note 271 119 273 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(code_label 273 271 121 16 32 "" [1 uses])
(note 121 273 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.7402 ])
            (const_int 0 [0]))) argz-replace.c:93 -1
     (nil))
(jump_insn 123 122 124 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 264)
            (pc))) argz-replace.c:93 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 264)
(note 124 123 125 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 17 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ arg ])
            (reg/v/f:DI 93 [ arg ]))) argz-replace.c:100 -1
     (nil))
(insn 126 125 127 17 (set (reg:QI 155 [ D.7398 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) argz-replace.c:100 -1
     (nil))
(insn 127 126 128 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 155 [ D.7398 ])
            (const_int 0 [0]))) argz-replace.c:100 -1
     (nil))
(jump_insn 128 127 272 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) argz-replace.c:100 -1
     (int_list:REG_BR_PROB 3550 (nil))
 -> 147)
(note 272 128 129 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 129 272 130 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 124 [ delayed_copy ])
            (const_int 0 [0]))) argz-replace.c:100 -1
     (nil))
(insn 130 129 131 18 (set (reg:QI 157 [ D.7398 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) argz-replace.c:100 -1
     (nil))
(insn 131 130 132 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 157 [ D.7398 ])
            (const_int 0 [0]))) argz-replace.c:100 -1
     (nil))
(jump_insn 132 131 133 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) argz-replace.c:100 -1
     (int_list:REG_BR_PROB 5504 (nil))
 -> 147)
(note 133 132 134 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 19 (parallel [
            (set (reg:DI 158 [ D.7400 ])
                (minus:DI (reg:DI 97 [ D.7400 ])
                    (reg/v/f:DI 89 [ arg ])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:101 -1
     (nil))
(insn 135 134 136 19 (parallel [
            (set (reg:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:101 -1
     (nil))
(insn 136 135 137 19 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:101 -1
     (nil))
(insn 137 136 138 19 (set (reg:DI 2 cx)
        (reg:DI 158 [ D.7400 ])) argz-replace.c:101 -1
     (nil))
(insn 138 137 139 19 (set (reg:DI 1 dx)
        (reg/v/f:DI 89 [ arg ])) argz-replace.c:101 -1
     (nil))
(insn 139 138 140 19 (set (reg:DI 4 si)
        (reg:DI 159)) argz-replace.c:101 -1
     (nil))
(insn 140 139 141 19 (set (reg:DI 5 di)
        (reg:DI 160)) argz-replace.c:101 -1
     (nil))
(call_insn 141 140 142 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__argz_append") [flags 0x41]  <function_decl 0x2aefece505e8 __argz_append>) [0 __argz_append S1 A8])
            (const_int 0 [0]))) argz-replace.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argz_append") [flags 0x41]  <function_decl 0x2aefece505e8 __argz_append>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 142 141 143 19 (set (reg/v:SI 123 [ err ])
        (reg:SI 0 ax)) argz-replace.c:101 -1
     (nil))
(insn 143 142 144 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 123 [ err ])
            (const_int 0 [0]))) argz-replace.c:104 -1
     (nil))
(jump_insn 144 143 145 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) argz-replace.c:104 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 156)
(note 145 144 146 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 20 (set (reg/f:DI 100 [ D.7402 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 to+0 S8 A64])) -1
     (nil))
(code_label 147 146 148 21 16 "" [2 uses])
(note 148 147 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 21 (parallel [
            (set (reg:DI 161)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:105 -1
     (nil))
(insn 150 149 151 21 (parallel [
            (set (reg:DI 162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:105 -1
     (nil))
(insn 151 150 152 21 (set (reg:DI 1 dx)
        (reg/f:DI 100 [ D.7402 ])) argz-replace.c:105 -1
     (nil))
(insn 152 151 153 21 (set (reg:DI 4 si)
        (reg:DI 161)) argz-replace.c:105 -1
     (nil))
(insn 153 152 154 21 (set (reg:DI 5 di)
        (reg:DI 162)) argz-replace.c:105 -1
     (nil))
(call_insn 154 153 155 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__argz_add") [flags 0x41]  <function_decl 0x2aefece50798 __argz_add>) [0 __argz_add S1 A8])
            (const_int 0 [0]))) argz-replace.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argz_add") [flags 0x41]  <function_decl 0x2aefece50798 __argz_add>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 155 154 156 21 (set (reg/v:SI 123 [ err ])
        (reg:SI 0 ax)) argz-replace.c:105 -1
     (nil))
(code_label 156 155 157 22 17 "" [1 uses])
(note 157 156 158 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 22 (set (reg:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 to+0 S8 A64])) argz-replace.c:106 -1
     (nil))
(insn 159 158 160 22 (set (reg:DI 5 di)
        (reg:DI 163)) argz-replace.c:106 -1
     (nil))
(call_insn 160 159 10 22 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argz-replace.c:106 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 160 257 22 (set (reg/v:SI 124 [ delayed_copy ])
        (const_int 0 [0])) argz-replace.c:106 -1
     (nil))
(jump_insn 257 10 258 22 (set (pc)
        (label_ref 161)) -1
     (nil)
 -> 161)
(barrier 258 257 260)
(code_label 260 258 259 23 29 "" [1 uses])
(note 259 260 11 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 11 259 261 23 (set (reg/v:SI 123 [ err ])
        (const_int 12 [0xc])) argz-replace.c:109 -1
     (nil))
(jump_insn 261 11 262 23 (set (pc)
        (label_ref 161)) -1
     (nil)
 -> 161)
(barrier 262 261 264)
(code_label 264 262 263 24 30 "" [1 uses])
(note 263 264 9 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 9 263 161 24 (set (reg/v:SI 123 [ err ])
        (const_int 12 [0xc])) argz-replace.c:109 -1
     (nil))
(code_label 161 9 162 25 11 "" [2 uses])
(note 162 161 163 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ replace_count ])
            (const_int 0 [0]))) argz-replace.c:111 -1
     (nil))
(jump_insn 164 163 165 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 183)
            (pc))) argz-replace.c:111 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 183)
(note 165 164 166 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 169 26 (parallel [
            (set (mem:SI (reg/v/f:DI 132 [ replace_count ]) [3 *replace_count_11(D)+0 S4 A32])
                (plus:SI (mem:SI (reg/v/f:DI 132 [ replace_count ]) [3 *replace_count_11(D)+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:112 -1
     (nil))
(jump_insn 169 166 170 26 (set (pc)
        (label_ref 183)) -1
     (nil)
 -> 183)
(barrier 170 169 171)
(code_label 171 170 172 28 9 "" [1 uses])
(note 172 171 173 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 124 [ delayed_copy ])
            (const_int 0 [0]))) argz-replace.c:114 -1
     (nil))
(jump_insn 174 173 175 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) argz-replace.c:114 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 187)
(note 175 174 176 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 29 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:115 -1
     (nil))
(insn 177 176 178 29 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) argz-replace.c:115 -1
     (nil))
(insn 178 177 179 29 (set (reg:DI 1 dx)
        (reg/v/f:DI 93 [ arg ])) argz-replace.c:115 -1
     (nil))
(insn 179 178 180 29 (set (reg:DI 4 si)
        (reg:DI 164)) argz-replace.c:115 -1
     (nil))
(insn 180 179 181 29 (set (reg:DI 5 di)
        (reg:DI 165)) argz-replace.c:115 -1
     (nil))
(call_insn 181 180 182 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__argz_add") [flags 0x41]  <function_decl 0x2aefece50798 __argz_add>) [0 __argz_add S1 A8])
            (const_int 0 [0]))) argz-replace.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argz_add") [flags 0x41]  <function_decl 0x2aefece50798 __argz_add>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 182 181 183 29 (set (reg/v:SI 123 [ err ])
        (reg:SI 0 ax)) argz-replace.c:115 -1
     (nil))
(code_label 183 182 184 30 19 "" [2 uses])
(note 184 183 185 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 123 [ err ])
            (const_int 0 [0]))) argz-replace.c:65 -1
     (nil))
(jump_insn 186 185 187 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) argz-replace.c:65 -1
     (int_list:REG_BR_PROB 627 (nil))
 -> 230)
(code_label 187 186 188 31 20 "" [1 uses])
(note 188 187 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(code_label 189 188 190 32 8 "" [1 uses])
(note 190 189 191 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ arg ])
            (const_int 0 [0]))) ../string/argz.h:162 -1
     (nil))
(jump_insn 192 191 193 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 208)
            (pc))) ../string/argz.h:162 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 208)
(note 193 192 194 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 33 (parallel [
            (set (reg/f:DI 117 [ D.7404 ])
                (plus:DI (reg/v/f:DI 89 [ arg ])
                    (reg/v:DI 90 [ src_len ])))
            (clobber (reg:CC 17 flags))
        ]) ../string/argz.h:164 -1
     (nil))
(insn 195 194 196 33 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 117 [ D.7404 ])
            (reg/v/f:DI 93 [ arg ]))) ../string/argz.h:164 -1
     (nil))
(jump_insn 196 195 197 33 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) ../string/argz.h:164 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 217)
(note 197 196 198 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 34 (set (reg:SI 4 si)
        (const_int 0 [0])) ../string/argz.h:165 -1
     (nil))
(insn 199 198 200 34 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ arg ])) ../string/argz.h:165 -1
     (nil))
(call_insn/i 200 199 201 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___rawmemchr") [flags 0x43]  <function_decl 0x2aefecc35000 __rawmemchr>) [0 __rawmemchr S1 A8])
            (const_int 0 [0]))) ../string/argz.h:165 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___rawmemchr") [flags 0x43]  <function_decl 0x2aefecc35000 __rawmemchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 201 200 202 34 (set (reg/f:DI 118 [ D.7405 ])
        (reg:DI 0 ax)) ../string/argz.h:165 -1
     (nil))
(insn 202 201 203 34 (parallel [
            (set (reg/v/f:DI 93 [ arg ])
                (plus:DI (reg/f:DI 118 [ D.7405 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../string/argz.h:165 -1
     (nil))
(insn 203 202 204 34 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 117 [ D.7404 ])
            (reg/v/f:DI 93 [ arg ]))) ../string/argz.h:167 -1
     (nil))
(jump_insn 204 203 207 34 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) ../string/argz.h:167 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 212)
(note 207 204 205 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 205 207 206 35 (set (pc)
        (label_ref 217)) ../string/argz.h:167 -1
     (nil)
 -> 217)
(barrier 206 205 208)
(code_label 208 206 209 36 22 "" [1 uses])
(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 90 [ src_len ])
            (const_int 0 [0]))) ../string/argz.h:170 -1
     (nil))
(jump_insn 211 210 265 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 217)
            (pc))) ../string/argz.h:170 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 217)
(note 265 211 14 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 14 265 212 37 (set (reg/v/f:DI 93 [ arg ])
        (reg/v/f:DI 89 [ arg ])) argz-replace.c:58 -1
     (nil))
(code_label 212 14 213 38 24 "" [1 uses])
(note 213 212 215 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 215 213 216 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ arg ])
            (const_int 0 [0]))) argz-replace.c:65 -1
     (nil))
(jump_insn 216 215 217 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) argz-replace.c:65 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 214)
(code_label 217 216 218 39 23 "" [3 uses])
(note 218 217 219 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 124 [ delayed_copy ])
            (const_int 0 [0]))) argz-replace.c:120 -1
     (nil))
(jump_insn 220 219 221 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 269)
            (pc))) argz-replace.c:120 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 269)
(note 221 220 222 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 40 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ arg ])) argz-replace.c:123 -1
     (nil))
(call_insn 223 222 224 40 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argz-replace.c:123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 224 223 225 40 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 dst+0 S8 A64])) argz-replace.c:124 -1
     (nil))
(insn 225 224 226 40 (set (mem/f:DI (reg/v/f:DI 128 [ argz ]) [1 *argz_6(D)+0 S8 A64])
        (reg/f:DI 166)) argz-replace.c:124 -1
     (nil))
(insn 226 225 227 40 (set (reg:DI 167)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 dst_len+0 S8 A64])) argz-replace.c:125 -1
     (nil))
(insn 227 226 16 40 (set (mem:DI (reg/v/f:DI 129 [ argz_len ]) [2 *argz_len_8(D)+0 S8 A64])
        (reg:DI 167)) argz-replace.c:125 -1
     (nil))
(insn 16 227 228 40 (set (reg/v:SI 123 [ err ])
        (const_int 0 [0])) argz-replace.c:125 -1
     (nil))
(jump_insn 228 16 229 40 (set (pc)
        (label_ref:DI 240)) argz-replace.c:125 654 {jump}
     (nil)
 -> 240)
(barrier 229 228 230)
(code_label 230 229 231 41 21 "" [1 uses])
(note 231 230 232 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [2 dst_len+0 S8 A64])
            (const_int 0 [0]))) argz-replace.c:128 -1
     (nil))
(jump_insn 233 232 234 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 240)
            (pc))) argz-replace.c:128 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 240)
(note 234 233 235 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 42 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [1 dst+0 S8 A64])) argz-replace.c:129 -1
     (nil))
(insn 236 235 237 42 (set (reg:DI 5 di)
        (reg:DI 168)) argz-replace.c:129 -1
     (nil))
(call_insn 237 236 266 42 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argz-replace.c:129 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefeca42e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 266 237 267 42 (set (pc)
        (label_ref:DI 240)) 654 {jump}
     (nil)
 -> 240)
(barrier 267 266 269)
(code_label 269 267 268 43 31 "" [1 uses])
(note 268 269 15 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 15 268 249 43 (set (reg/v:SI 123 [ err ])
        (const_int 0 [0])) argz-replace.c:120 -1
     (nil))
(jump_insn 249 15 250 43 (set (pc)
        (label_ref 240)) -1
     (nil)
 -> 240)
(barrier 250 249 252)
(code_label 252 250 251 45 27 "" [1 uses])
(note 251 252 18 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 18 251 253 45 (set (reg/v:SI 123 [ err ])
        (const_int 0 [0])) argz-replace.c:53 -1
     (nil))
(jump_insn 253 18 254 45 (set (pc)
        (label_ref 240)) -1
     (nil)
 -> 240)
(barrier 254 253 256)
(code_label 256 254 255 46 28 "" [1 uses])
(note 255 256 17 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 17 255 240 46 (set (reg/v:SI 123 [ err ])
        (const_int 0 [0])) argz-replace.c:53 -1
     (nil))
(code_label 240 17 241 47 7 "" [5 uses])
(note 241 240 242 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 246 47 (set (reg:SI 127 [ <retval> ])
        (reg/v:SI 123 [ err ])) argz-replace.c:132 -1
     (nil))
(insn 246 242 247 47 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) argz-replace.c:133 -1
     (nil))
(insn 247 246 0 47 (use (reg/i:SI 0 ax)) argz-replace.c:133 -1
     (nil))
