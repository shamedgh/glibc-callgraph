
;; Function __strsep (__strsep, funcdef_no=9, decl_uid=2090, cgraph_uid=9, symbol_order=12)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12
Edge 2->12 redirected to 15
Edge 5->10 redirected to 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 10->11 to 13 failed.
Removing jump 60.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 13 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 97 [ stringp ])
        (reg:DI 5 di [ stringp ])) strsep.c:25 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 98 [ delim ])
        (reg:DI 4 si [ delim ])) strsep.c:25 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg/v/f:DI 89 [ end ])
        (mem/f:DI (reg/v/f:DI 97 [ stringp ]) [1 *stringp_5(D)+0 S8 A64])) strsep.c:28 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ end ])
            (const_int 0 [0]))) strsep.c:29 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) strsep.c:29 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 69)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:QI 90 [ D.2567 ])
        (mem:QI (reg/v/f:DI 98 [ delim ]) [0 *delim_7(D)+0 S1 A8])) strsep.c:35 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.2567 ])
            (const_int 0 [0]))) strsep.c:35 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) strsep.c:35 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 54)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 98 [ delim ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)delim_7(D) + 1B]+0 S1 A8])
            (const_int 0 [0]))) strsep.c:35 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) strsep.c:35 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 37)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (set (reg:QI 92 [ D.2567 ])
        (mem:QI (reg/v/f:DI 89 [ end ]) [0 *end_6+0 S1 A8])) strsep.c:43 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.2567 ])
            (reg:QI 92 [ D.2567 ]))) strsep.c:43 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) strsep.c:43 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 74)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.2567 ])
            (const_int 0 [0]))) strsep.c:45 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) strsep.c:45 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 54)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (parallel [
            (set (reg/f:DI 94 [ D.2569 ])
                (plus:DI (reg/v/f:DI 89 [ end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strsep.c:48 -1
     (nil))
(insn 30 29 31 8 (set (reg:SI 99 [ D.2568 ])
        (sign_extend:SI (reg:QI 90 [ D.2567 ]))) strsep.c:48 -1
     (nil))
(insn 31 30 32 8 (set (reg:SI 4 si)
        (reg:SI 99 [ D.2568 ])) strsep.c:48 -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.2569 ])) strsep.c:48 -1
     (nil))
(call_insn/i 33 32 34 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2b8b04036d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) strsep.c:48 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2b8b04036d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 34 33 35 8 (set (reg/v/f:DI 87 [ end ])
        (reg:DI 0 ax)) strsep.c:48 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (label_ref 43)) strsep.c:48 -1
     (nil)
 -> 43)
(barrier 36 35 37)
(code_label 37 36 38 9 4 "" [1 uses])
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ delim ])) strsep.c:53 -1
     (nil))
(insn 40 39 41 9 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ end ])) strsep.c:53 -1
     (nil))
(call_insn/i 41 40 42 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strpbrk") [flags 0x41]  <function_decl 0x2b8b0403d1b0 __builtin_strpbrk>) [0 __builtin_strpbrk S1 A8])
            (const_int 0 [0]))) strsep.c:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strpbrk") [flags 0x41]  <function_decl 0x2b8b0403d1b0 __builtin_strpbrk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 9 (set (reg/v/f:DI 87 [ end ])
        (reg:DI 0 ax)) strsep.c:53 -1
     (nil))
(code_label 43 42 44 10 6 "" [1 uses])
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ end ])
            (const_int 0 [0]))) strsep.c:55 -1
     (nil))
(jump_insn 46 45 70 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) strsep.c:55 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 54)
(note 70 46 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 71 70 72 11 (set (pc)
        (label_ref 47)) -1
     (nil)
 -> 47)
(barrier 72 71 74)
(code_label 74 72 73 12 8 "" [1 uses])
(note 73 74 5 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 5 73 47 12 (set (reg/v/f:DI 87 [ end ])
        (reg/v/f:DI 89 [ end ])) -1
     (nil))
(code_label 47 5 48 13 5 "" [1 uses])
(note 48 47 49 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 13 (set (mem:QI (reg/v/f:DI 87 [ end ]) [0 *end_14+0 S1 A8])
        (const_int 0 [0])) strsep.c:58 -1
     (nil))
(insn 50 49 51 13 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/v/f:DI 87 [ end ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strsep.c:59 -1
     (nil))
(insn 51 50 8 13 (set (mem/f:DI (reg/v/f:DI 97 [ stringp ]) [1 *stringp_5(D)+0 S8 A64])
        (reg:DI 100)) strsep.c:59 -1
     (nil))
(insn 8 51 52 13 (set (reg/f:DI 88 [ D.2566 ])
        (reg/v/f:DI 89 [ end ])) -1
     (nil))
(jump_insn 52 8 53 13 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 53 52 54)
(code_label 54 53 55 14 3 "" [3 uses])
(note 55 54 56 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 7 14 (set (mem/f:DI (reg/v/f:DI 97 [ stringp ]) [1 *stringp_5(D)+0 S8 A64])
        (const_int 0 [0])) strsep.c:63 -1
     (nil))
(insn 7 56 66 14 (set (reg/f:DI 88 [ D.2566 ])
        (reg/v/f:DI 89 [ end ])) strsep.c:63 -1
     (nil))
(jump_insn 66 7 67 14 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 67 66 69)
(code_label 69 67 68 15 7 "" [1 uses])
(note 68 69 6 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 6 68 57 15 (set (reg/f:DI 88 [ D.2566 ])
        (const_int 0 [0])) strsep.c:30 -1
     (nil))
(code_label 57 6 58 16 2 "" [2 uses])
(note 58 57 59 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 63 16 (set (reg:DI 96 [ <retval> ])
        (reg/f:DI 88 [ D.2566 ])) -1
     (nil))
(insn 63 59 64 16 (set (reg/i:DI 0 ax)
        (reg:DI 96 [ <retval> ])) strsep.c:66 -1
     (nil))
(insn 64 63 0 16 (use (reg/i:DI 0 ax)) strsep.c:66 -1
     (nil))
