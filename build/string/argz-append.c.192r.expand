
;; Function __argz_append (__argz_append, funcdef_no=34, decl_uid=7112, cgraph_uid=34, symbol_order=38)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 36.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 95 [ argz ])
        (reg:DI 5 di [ argz ])) argz-append.c:27 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ argz_len ])
        (reg:DI 4 si [ argz_len ])) argz-append.c:27 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ buf ])
        (reg:DI 1 dx [ buf ])) argz-append.c:27 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 98 [ buf_len ])
        (reg:DI 2 cx [ buf_len ])) argz-append.c:27 -1
     (nil))
(note 6 5 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 6 12 2 (set (reg:DI 99)
        (mem:DI (reg/v/f:DI 96 [ argz_len ]) [2 *argz_len_4(D)+0 S8 A64])) argz-append.c:28 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/v:DI 89 [ new_argz_len ])
                (plus:DI (reg/v:DI 98 [ buf_len ])
                    (reg:DI 99)))
            (clobber (reg:CC 17 flags))
        ]) argz-append.c:28 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v:DI 98 [ buf_len ])
            (mem:DI (reg/v/f:DI 96 [ argz_len ]) [2 *argz_len_4(D)+0 S8 A64]))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/v:DI 89 [ new_argz_len ])) argz-append.c:29 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 95 [ argz ]) [1 *argz_8(D)+0 S8 A64])) argz-append.c:29 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b47d0910000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) argz-append.c:29 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b47d0910000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg/v/f:DI 91 [ new_argz ])
        (reg:DI 0 ax)) argz-append.c:29 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ new_argz ])
            (const_int 0 [0]))) argz-append.c:30 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) argz-append.c:30 612 {*jcc_1}
     (int_list:REG_BR_PROB 4673 (nil))
 -> 45)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 101)
        (mem:DI (reg/v/f:DI 96 [ argz_len ]) [2 *argz_len_4(D)+0 S8 A64])) argz-append.c:32 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 100 [ D.7225 ])
                (plus:DI (reg/v/f:DI 91 [ new_argz ])
                    (reg:DI 101)))
            (clobber (reg:CC 17 flags))
        ]) argz-append.c:32 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v/f:DI 91 [ new_argz ])
            (mem:DI (reg/v/f:DI 96 [ argz_len ]) [2 *argz_len_4(D)+0 S8 A64]))
        (nil)))
(insn 22 21 23 4 (set (reg:DI 102)
        (reg:DI 100 [ D.7225 ])) argz-append.c:32 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 103)
        (reg/v/f:DI 97 [ buf ])) argz-append.c:32 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 104)
        (reg/v:DI 98 [ buf_len ])) argz-append.c:32 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 1 dx)
        (reg:DI 104)) argz-append.c:32 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg:DI 103)) argz-append.c:32 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 102)) argz-append.c:32 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b47d0b74798 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) argz-append.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b47d0b74798 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 29 28 30 4 (set (reg:DI 105)
        (reg:DI 0 ax)) argz-append.c:32 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 106)
        (reg:DI 105)) argz-append.c:32 -1
     (nil))
(insn 31 30 32 4 (set (mem/f:DI (reg/v/f:DI 95 [ argz ]) [1 *argz_8(D)+0 S8 A64])
        (reg/v/f:DI 91 [ new_argz ])) argz-append.c:33 -1
     (nil))
(insn 32 31 7 4 (set (mem:DI (reg/v/f:DI 96 [ argz_len ]) [2 *argz_len_4(D)+0 S8 A64])
        (reg/v:DI 89 [ new_argz_len ])) argz-append.c:34 -1
     (nil))
(insn 7 32 42 4 (set (reg:SI 87 [ D.7223 ])
        (const_int 0 [0])) argz-append.c:35 -1
     (nil))
(jump_insn 42 7 43 4 (set (pc)
        (label_ref 33)) argz-append.c:35 -1
     (nil)
 -> 33)
(barrier 43 42 45)
(code_label 45 43 44 5 3 "" [1 uses])
(note 44 45 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 44 33 5 (set (reg:SI 87 [ D.7223 ])
        (const_int 12 [0xc])) argz-append.c:38 -1
     (nil))
(code_label 33 8 34 6 2 "" [1 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 39 6 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.7223 ])) -1
     (nil))
(insn 39 35 40 6 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) argz-append.c:39 -1
     (nil))
(insn 40 39 0 6 (use (reg/i:SI 0 ax)) argz-append.c:39 -1
     (nil))

;; Function __argz_add (__argz_add, funcdef_no=35, decl_uid=7121, cgraph_uid=36, symbol_order=40)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 91 [ argz ])
        (reg:DI 5 di [ argz ])) argz-append.c:46 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ argz_len ])
        (reg:DI 4 si [ argz_len ])) argz-append.c:46 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 93 [ str ])
        (reg:DI 1 dx [ str ])) argz-append.c:46 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ str ])) argz-append.c:47 -1
     (nil))
(call_insn/i 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b47d08e6948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-append.c:47 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b47d08e6948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 95)
        (reg:DI 0 ax)) argz-append.c:47 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 96)
        (reg:DI 95)) argz-append.c:47 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 87 [ D.7231 ])
        (reg:DI 96)) argz-append.c:47 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 97 [ D.7231 ])
                (plus:DI (reg:DI 87 [ D.7231 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-append.c:47 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 2 cx)
        (reg:DI 97 [ D.7231 ])) argz-append.c:47 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 93 [ str ])) argz-append.c:47 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ argz_len ])) argz-append.c:47 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ argz ])) argz-append.c:47 -1
     (nil))
(call_insn/j 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__argz_append") [flags 0x1]  <function_decl 0x2b47d0d0f5e8 __argz_append>) [0 __argz_append S1 A8])
            (const_int 0 [0]))) argz-append.c:47 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__argz_append") [flags 0x1]  <function_decl 0x2b47d0d0f5e8 __argz_append>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 19 18 0)
