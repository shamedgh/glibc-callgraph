
;; Function __argz_count (*__GI___argz_count, funcdef_no=34, decl_uid=7088, cgraph_uid=34, symbol_order=38)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Edge 2->5 redirected to 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 8 failed.
Removing jump 29.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 92 [ argz ])
        (reg:DI 5 di [ argz ])) argz-count.c:26 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 93 [ len ])
        (reg:DI 4 si [ len ])) argz-count.c:26 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 93 [ len ])
            (const_int 0 [0]))) argz-count.c:28 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) argz-count.c:28 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 39)
(note 11 10 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 11 23 4 (set (reg/v:DI 90 [ count ])
        (const_int 0 [0])) argz-count.c:28 -1
     (nil))
(code_label 23 5 12 5 3 "" [1 uses])
(note 12 23 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ argz ])) argz-count.c:30 -1
     (nil))
(call_insn/i 14 13 15 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b1eeb52a948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-count.c:30 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b1eeb52a948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 5 (set (reg:DI 95)
        (reg:DI 0 ax)) argz-count.c:30 -1
     (nil))
(insn 16 15 17 5 (set (reg:DI 96)
        (reg:DI 95)) argz-count.c:30 -1
     (nil))
(insn 17 16 18 5 (set (reg/v:DI 87 [ part_len ])
        (reg:DI 96)) argz-count.c:30 -1
     (nil))
(insn 18 17 19 5 (parallel [
            (set (reg:DI 97 [ D.7212 ])
                (plus:DI (reg/v:DI 87 [ part_len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-count.c:31 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg/v/f:DI 92 [ argz ])
                (plus:DI (reg/v/f:DI 92 [ argz ])
                    (reg:DI 97 [ D.7212 ])))
            (clobber (reg:CC 17 flags))
        ]) argz-count.c:31 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 89 [ D.7213 ])
                (minus:DI (reg/v:DI 93 [ len ])
                    (reg/v:DI 87 [ part_len ])))
            (clobber (reg:CC 17 flags))
        ]) argz-count.c:32 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/v:DI 93 [ len ])
                (plus:DI (reg:DI 89 [ D.7213 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) argz-count.c:32 -1
     (nil))
(insn 22 21 24 5 (parallel [
            (set (reg/v:DI 90 [ count ])
                (plus:DI (reg/v:DI 90 [ count ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-count.c:33 -1
     (nil))
(insn 24 22 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 93 [ len ])
            (const_int 0 [0]))) argz-count.c:28 -1
     (nil))
(jump_insn 25 24 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) argz-count.c:28 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 23)
(note 35 25 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 35 37 6 (set (pc)
        (label_ref 26)) -1
     (nil)
 -> 26)
(barrier 37 36 39)
(code_label 39 37 38 7 4 "" [1 uses])
(note 38 39 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 38 26 7 (set (reg/v:DI 90 [ count ])
        (const_int 0 [0])) argz-count.c:27 -1
     (nil))
(code_label 26 6 27 8 2 "" [1 uses])
(note 27 26 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 32 8 (set (reg:DI 91 [ <retval> ])
        (reg/v:DI 90 [ count ])) argz-count.c:35 -1
     (nil))
(insn 32 28 33 8 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) argz-count.c:36 -1
     (nil))
(insn 33 32 0 8 (use (reg/i:DI 0 ax)) argz-count.c:36 -1
     (nil))
