
;; Function argz_delete (*__GI_argz_delete, funcdef_no=34, decl_uid=7143, cgraph_uid=34, symbol_order=38)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 8 failed.
Forwarding edge 2->4 to 8 failed.
Redirecting jump 11 from 7 to 8.
Edge 5->4 redirected to 8
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 8 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 100 [ argz ])
        (reg:DI 5 di [ argz ])) argz-delete.c:27 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 101 [ argz_len ])
        (reg:DI 4 si [ argz_len ])) argz-delete.c:27 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 102 [ entry ])
        (reg:DI 1 dx [ entry ])) argz-delete.c:27 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 102 [ entry ])
            (const_int 0 [0]))) argz-delete.c:28 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) argz-delete.c:28 -1
     (int_list:REG_BR_PROB 7835 (nil))
 -> 13)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 11 10 12 4 (set (pc)
        (label_ref:DI 40)) 654 {jump}
     (nil)
 -> 40)
(barrier 12 11 13)
(code_label 13 12 14 5 2 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:DI 5 di)
        (reg/v/f:DI 102 [ entry ])) argz-delete.c:31 -1
     (nil))
(call_insn/i 16 15 17 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b199b8c6948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) argz-delete.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b199b8c6948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 5 (set (reg:DI 104)
        (reg:DI 0 ax)) argz-delete.c:31 -1
     (nil))
(insn 18 17 19 5 (set (reg:DI 105)
        (reg:DI 104)) argz-delete.c:31 -1
     (nil))
(insn 19 18 20 5 (set (reg:DI 87 [ D.7225 ])
        (reg:DI 105)) argz-delete.c:31 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg/v:DI 88 [ entry_len ])
                (plus:DI (reg:DI 87 [ D.7225 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) argz-delete.c:31 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 106)
        (mem:DI (reg/v/f:DI 101 [ argz_len ]) [1 *argz_len_5(D)+0 S8 A64])) argz-delete.c:32 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:DI 90 [ D.7225 ])
                (minus:DI (reg:DI 106)
                    (reg/v:DI 88 [ entry_len ])))
            (clobber (reg:CC 17 flags))
        ]) argz-delete.c:32 -1
     (expr_list:REG_EQUAL (minus:DI (mem:DI (reg/v/f:DI 101 [ argz_len ]) [1 *argz_len_5(D)+0 S8 A64])
            (reg/v:DI 88 [ entry_len ]))
        (nil)))
(insn 23 22 24 5 (set (mem:DI (reg/v/f:DI 101 [ argz_len ]) [1 *argz_len_5(D)+0 S8 A64])
        (reg:DI 90 [ D.7225 ])) argz-delete.c:32 -1
     (nil))
(insn 24 23 25 5 (parallel [
            (set (reg:DI 107 [ D.7226 ])
                (minus:DI (reg/v/f:DI 102 [ entry ])
                    (mem/f:DI (reg/v/f:DI 100 [ argz ]) [2 *argz_10(D)+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) argz-delete.c:33 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 108 [ D.7225 ])
                (minus:DI (reg:DI 90 [ D.7225 ])
                    (reg:DI 107 [ D.7226 ])))
            (clobber (reg:CC 17 flags))
        ]) argz-delete.c:33 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 109 [ D.7228 ])
                (plus:DI (reg/v/f:DI 102 [ entry ])
                    (reg/v:DI 88 [ entry_len ])))
            (clobber (reg:CC 17 flags))
        ]) argz-delete.c:33 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 1 dx)
        (reg:DI 108 [ D.7225 ])) argz-delete.c:33 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 4 si)
        (reg:DI 109 [ D.7228 ])) argz-delete.c:33 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (reg/v/f:DI 102 [ entry ])) argz-delete.c:33 -1
     (nil))
(call_insn 30 29 32 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memmove") [flags 0x43]  <function_decl 0x2b199b8c30d8 memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) argz-delete.c:33 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memmove") [flags 0x43]  <function_decl 0x2b199b8c30d8 memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 32 30 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (reg/v/f:DI 101 [ argz_len ]) [1 *argz_len_5(D)+0 S8 A64])
            (const_int 0 [0]))) argz-delete.c:34 -1
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 40)
            (pc))) argz-delete.c:34 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 40)
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 100 [ argz ]) [2 *argz_10(D)+0 S8 A64])) argz-delete.c:36 -1
     (nil))
(call_insn 36 35 37 6 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b199b8e2e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) argz-delete.c:36 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b199b8e2e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 37 36 40 6 (set (mem/f:DI (reg/v/f:DI 100 [ argz ]) [2 *argz_10(D)+0 S8 A64])
        (const_int 0 [0])) argz-delete.c:37 -1
     (nil))
(code_label 40 37 41 8 1 "" [2 uses])
(note 41 40 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
