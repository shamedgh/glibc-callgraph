
;; Function __wcscasecmp_l (*__GI___wcscasecmp_l, funcdef_no=5, decl_uid=2464, cgraph_uid=5, symbol_order=8)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 2->7 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 59.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 29 NOTE_INSN_DELETED)
(note 29 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 29 25 2 (set (reg/v/f:DI 118 [ s1 ])
        (reg:DI 5 di [ s1 ])) ./wcscasecmp.c:48 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 119 [ s2 ])
        (reg:DI 4 si [ s2 ])) ./wcscasecmp.c:48 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 120 [ loc ])
        (reg:DI 1 dx [ loc ])) ./wcscasecmp.c:48 -1
     (nil))
(note 27 26 31 2 NOTE_INSN_FUNCTION_BEG)
(insn 31 27 32 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 118 [ s1 ])
            (reg/v/f:DI 119 [ s2 ]))) ./wcscasecmp.c:51 -1
     (nil))
(jump_insn 32 31 33 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) ./wcscasecmp.c:51 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 68)
(note 33 32 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 50 33 34 5 4 "" [1 uses])
(note 34 50 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (parallel [
            (set (reg/v/f:DI 118 [ s1 ])
                (plus:DI (reg/v/f:DI 118 [ s1 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ./wcscasecmp.c:56 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 121)
        (mem:SI (plus:DI (reg/v/f:DI 118 [ s1 ])
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[base: s1_10, offset: -4B]+0 S4 A32])) ./wcscasecmp.c:56 -1
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg/v/f:DI 120 [ loc ])) ./wcscasecmp.c:56 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 5 di)
        (reg:SI 121)) ./wcscasecmp.c:56 -1
     (nil))
(call_insn 39 38 40 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower_l") [flags 0x43]  <function_decl 0x2b08c42210d8 __towlower_l>) [0 __towlower_l S1 A8])
            (const_int 0 [0]))) ./wcscasecmp.c:56 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower_l") [flags 0x43]  <function_decl 0x2b08c42210d8 __towlower_l>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 40 39 41 5 (set (reg/v:SI 112 [ c1 ])
        (reg:SI 0 ax)) ./wcscasecmp.c:56 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/v/f:DI 119 [ s2 ])
                (plus:DI (reg/v/f:DI 119 [ s2 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ./wcscasecmp.c:57 -1
     (nil))
(insn 42 41 43 5 (set (reg:SI 122)
        (mem:SI (plus:DI (reg/v/f:DI 119 [ s2 ])
                (const_int -4 [0xfffffffffffffffc])) [1 MEM[base: s2_17, offset: -4B]+0 S4 A32])) ./wcscasecmp.c:57 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 4 si)
        (reg/v/f:DI 120 [ loc ])) ./wcscasecmp.c:57 -1
     (nil))
(insn 44 43 45 5 (set (reg:SI 5 di)
        (reg:SI 122)) ./wcscasecmp.c:57 -1
     (nil))
(call_insn 45 44 46 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___towlower_l") [flags 0x43]  <function_decl 0x2b08c42210d8 __towlower_l>) [0 __towlower_l S1 A8])
            (const_int 0 [0]))) ./wcscasecmp.c:57 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___towlower_l") [flags 0x43]  <function_decl 0x2b08c42210d8 __towlower_l>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 46 45 47 5 (set (reg/v:SI 115 [ c2 ])
        (reg:SI 0 ax)) ./wcscasecmp.c:57 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 112 [ c1 ])
            (const_int 0 [0]))) ./wcscasecmp.c:58 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) ./wcscasecmp.c:58 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 53)
(note 49 48 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 51 49 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 112 [ c1 ])
            (reg/v:SI 115 [ c2 ]))) ./wcscasecmp.c:61 -1
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ./wcscasecmp.c:61 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 50)
(code_label 53 52 54 7 3 "" [1 uses])
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 65 7 (parallel [
            (set (reg:SI 109 [ D.2748 ])
                (minus:SI (reg/v:SI 112 [ c1 ])
                    (reg/v:SI 115 [ c2 ])))
            (clobber (reg:CC 17 flags))
        ]) ./wcscasecmp.c:63 -1
     (nil))
(jump_insn 65 55 66 7 (set (pc)
        (label_ref 56)) ./wcscasecmp.c:63 -1
     (nil)
 -> 56)
(barrier 66 65 68)
(code_label 68 66 67 8 5 "" [1 uses])
(note 67 68 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 28 67 56 8 (set (reg:SI 109 [ D.2748 ])
        (const_int 0 [0])) ./wcscasecmp.c:52 -1
     (nil))
(code_label 56 28 57 9 2 "" [1 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 9 (set (reg:SI 117 [ <retval> ])
        (reg:SI 109 [ D.2748 ])) -1
     (nil))
(insn 62 58 63 9 (set (reg/i:SI 0 ax)
        (reg:SI 117 [ <retval> ])) ./wcscasecmp.c:64 -1
     (nil))
(insn 63 62 0 9 (use (reg/i:SI 0 ax)) ./wcscasecmp.c:64 -1
     (nil))
