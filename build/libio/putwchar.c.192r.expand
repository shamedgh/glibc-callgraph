
;; Function putwchar (putwchar, funcdef_no=41, decl_uid=10129, cgraph_uid=41, symbol_order=46)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 2->6 redirected to 22
Edge 3->5 redirected to 23
Purged edges from bb 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 14->15 to 17 failed.
Forwarding edge 23->24 to 17 failed.
Redirecting jump 108 from 15 to 17.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 17 failed.
Deleted label in block 15.
Forwarding edge 23->24 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v:SI 119 [ wc ])
        (reg:SI 5 di [ wc ])) putwchar.c:23 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
        (mem/f/c:DI (symbol_ref:DI ("_IO_stdout") [flags 0x42]  <var_decl 0x2ba40c1dea20 _IO_stdout>) [1 _IO_stdout+0 S8 A64])) putwchar.c:25 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 121)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) putwchar.c:25 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 120 [ D.10498 ])
                (and:SI (reg:SI 121)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) putwchar.c:25 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.10498 ])
            (const_int 0 [0]))) putwchar.c:25 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 118)
            (pc))) putwchar.c:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 118)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 122 [ __self ])
                (asm_operands:DI ("mov %%fs:%c1,%0") ("=r") 0 [
                        (const_int 16 [0x10])
                    ]
                     [
                        (asm_input:DI ("i") putwchar.c:25)
                    ]
                     [] putwchar.c:25))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) putwchar.c:25 -1
     (nil))
(insn 15 14 16 4 (set (reg/v/f:DI 90 [ __self ])
        (reg:DI 122 [ __self ])) putwchar.c:25 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 95 [ D.10500 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) putwchar.c:25 -1
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ __self ])
            (mem/f:DI (plus:DI (reg/f:DI 95 [ D.10500 ])
                    (const_int 8 [0x8])) [1 _10->owner+0 S8 A64]))) putwchar.c:25 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 122)
            (pc))) putwchar.c:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 122)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:SI 126)
        (const_int 1 [0x1])) putwchar.c:25 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 127)
        (const_int 0 [0])) putwchar.c:25 -1
     (nil))
(insn 22 21 23 5 (parallel [
            (set (reg:SI 123 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 126)
                        (mem:SI (reg/f:DI 95 [ D.10500 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 127)
                    ]
                     [
                        (asm_input:SI ("0") putwchar.c:25)
                        (asm_input:SI ("m") putwchar.c:25)
                        (asm_input:SI ("3") putwchar.c:25)
                    ]
                     [] putwchar.c:25))
            (set (reg:SI 124 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 126)
                        (mem:SI (reg/f:DI 95 [ D.10500 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 127)
                    ]
                     [
                        (asm_input:SI ("0") putwchar.c:25)
                        (asm_input:SI ("m") putwchar.c:25)
                        (asm_input:SI ("3") putwchar.c:25)
                    ]
                     [] putwchar.c:25))
            (set (mem:SI (reg/f:DI 95 [ D.10500 ]) [3 _10->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 126)
                        (mem:SI (reg/f:DI 95 [ D.10500 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 127)
                    ]
                     [
                        (asm_input:SI ("0") putwchar.c:25)
                        (asm_input:SI ("m") putwchar.c:25)
                        (asm_input:SI ("3") putwchar.c:25)
                    ]
                     [] putwchar.c:25))
            (set (reg:SI 125 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 126)
                        (mem:SI (reg/f:DI 95 [ D.10500 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 127)
                    ]
                     [
                        (asm_input:SI ("0") putwchar.c:25)
                        (asm_input:SI ("m") putwchar.c:25)
                        (asm_input:SI ("3") putwchar.c:25)
                    ]
                     [] putwchar.c:25))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) putwchar.c:25 -1
     (nil))
(insn 23 22 24 5 (set (reg/v:SI 92 [ ignore1 ])
        (reg:SI 123 [ ignore1 ])) putwchar.c:25 -1
     (nil))
(insn 24 23 25 5 (set (reg/v:SI 93 [ ignore2 ])
        (reg:SI 124 [ ignore2 ])) putwchar.c:25 -1
     (nil))
(insn 25 24 26 5 (set (reg/v:SI 94 [ ignore3 ])
        (reg:SI 125 [ ignore3 ])) putwchar.c:25 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 95 [ D.10500 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) putwchar.c:25 -1
     (nil))
(insn 27 26 28 5 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.10500 ])
                (const_int 8 [0x8])) [1 _16->owner+0 S8 A64])
        (reg/v/f:DI 90 [ __self ])) putwchar.c:25 -1
     (nil))
(insn 28 27 119 5 (set (reg/f:DI 99 [ D.10502 ])
        (mem/f/c:DI (symbol_ref:DI ("_IO_stdout") [flags 0x42]  <var_decl 0x2ba40c1dea20 _IO_stdout>) [1 _IO_stdout+0 S8 A64])) -1
     (nil))
(jump_insn 119 28 120 5 (set (pc)
        (label_ref 29)) -1
     (nil)
 -> 29)
(barrier 120 119 122)
(code_label 122 120 121 6 14 "" [1 uses])
(note 121 122 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 121 29 6 (set (reg/f:DI 99 [ D.10502 ])
        (reg/v/f:DI 87 [ _IO_acquire_lock_file ])) -1
     (nil))
(code_label 29 4 30 7 3 "" [1 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 115 7 (parallel [
            (set (mem:SI (plus:DI (reg/f:DI 95 [ D.10500 ])
                        (const_int 4 [0x4])) [3 _61->cnt+0 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/f:DI 95 [ D.10500 ])
                            (const_int 4 [0x4])) [3 _61->cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) putwchar.c:25 -1
     (nil))
(jump_insn 115 31 116 7 (set (pc)
        (label_ref 32)) -1
     (nil)
 -> 32)
(barrier 116 115 118)
(code_label 118 116 117 8 13 "" [1 uses])
(note 117 118 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 117 32 8 (set (reg/f:DI 99 [ D.10502 ])
        (reg/v/f:DI 87 [ _IO_acquire_lock_file ])) -1
     (nil))
(code_label 32 5 33 9 2 "" [1 uses])
(note 33 32 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 9 (set (reg/f:DI 98 [ D.10501 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ D.10502 ])
                (const_int 160 [0xa0])) [1 _63->_wide_data+0 S8 A64])) putwchar.c:26 -1
     (nil))
(insn 35 34 36 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.10501 ])
            (const_int 0 [0]))) putwchar.c:26 -1
     (nil))
(jump_insn 36 35 37 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) putwchar.c:26 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 41)
(note 37 36 38 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 10 (set (reg/f:DI 100 [ D.10503 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ D.10501 ])
                (const_int 32 [0x20])) [1 _23->_IO_write_ptr+0 S8 A64])) putwchar.c:26 -1
     (nil))
(insn 39 38 40 10 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 100 [ D.10503 ])
            (mem/f:DI (plus:DI (reg/f:DI 98 [ D.10501 ])
                    (const_int 40 [0x28])) [1 _23->_IO_write_end+0 S8 A64]))) putwchar.c:26 -1
     (nil))
(jump_insn 40 39 41 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) putwchar.c:26 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 49)
(code_label 41 40 42 11 4 "" [1 uses])
(note 42 41 43 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 11 (set (reg:SI 4 si)
        (reg/v:SI 119 [ wc ])) putwchar.c:26 -1
     (nil))
(insn 44 43 45 11 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.10502 ])) putwchar.c:26 -1
     (nil))
(call_insn 45 44 123 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___woverflow") [flags 0x43]  <function_decl 0x2ba40c1f56c0 __woverflow>) [0 __woverflow S1 A8])
            (const_int 0 [0]))) putwchar.c:26 -1
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___woverflow") [flags 0x43]  <function_decl 0x2ba40c1f56c0 __woverflow>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(note 123 45 46 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 46 123 47 12 (set (reg/v:SI 103 [ result ])
        (reg:SI 0 ax)) putwchar.c:26 -1
     (nil))
(jump_insn 47 46 48 12 (set (pc)
        (label_ref 100)) putwchar.c:26 -1
     (nil)
 -> 100)
(barrier 48 47 49)
(code_label 49 48 50 13 5 "" [1 uses])
(note 50 49 51 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 13 (parallel [
            (set (reg:DI 128)
                (plus:DI (reg/f:DI 100 [ D.10503 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) putwchar.c:26 -1
     (nil))
(insn 52 51 53 13 (set (mem/f:DI (plus:DI (reg/f:DI 98 [ D.10501 ])
                (const_int 32 [0x20])) [1 _23->_IO_write_ptr+0 S8 A64])
        (reg:DI 128)) putwchar.c:26 -1
     (nil))
(insn 53 52 54 13 (set (mem:SI (reg/f:DI 100 [ D.10503 ]) [3 *_27+0 S4 A32])
        (reg/v:SI 119 [ wc ])) putwchar.c:26 -1
     (nil))
(insn 54 53 55 13 (set (reg/v:SI 103 [ result ])
        (reg/v:SI 119 [ wc ])) putwchar.c:26 -1
     (nil))
(jump_insn 55 54 56 13 (set (pc)
        (label_ref 100)) putwchar.c:26 -1
     (nil)
 -> 100)
(barrier 56 55 102)
(code_label 102 56 57 14 11 "" [1 uses])
(note 57 102 58 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 14 (set (reg/f:DI 105 [ D.10500 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 59 58 60 14 (set (reg:SI 129)
        (mem:SI (plus:DI (reg/f:DI 105 [ D.10500 ])
                (const_int 4 [0x4])) [3 _44->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 60 59 61 14 (parallel [
            (set (reg:SI 107 [ D.10498 ])
                (plus:SI (reg:SI 129)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 105 [ D.10500 ])
                    (const_int 4 [0x4])) [3 _44->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 61 60 62 14 (set (mem:SI (plus:DI (reg/f:DI 105 [ D.10500 ])
                (const_int 4 [0x4])) [3 _44->cnt+0 S4 A32])
        (reg:SI 107 [ D.10498 ])) libioP.h:863 -1
     (nil))
(insn 62 61 63 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.10498 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 63 62 64 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 67)
(note 64 63 65 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 65 64 66 15 (set (pc)
        (label_ref 72)) libioP.h:863 -1
     (nil)
 -> 72)
(barrier 66 65 67)
(code_label 67 66 68 16 7 "" [1 uses])
(note 68 67 69 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 16 (set (mem/f:DI (plus:DI (reg/f:DI 105 [ D.10500 ])
                (const_int 8 [0x8])) [1 _44->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 70 69 71 16 (parallel [
            (set (mem:SI (reg/f:DI 105 [ D.10500 ]) [3 _44->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 105 [ D.10500 ]) [3 _44->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 130 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 105 [ D.10500 ]) [3 _44->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 71 70 72 16 (set (reg/v:SI 108 [ ignore ])
        (reg:SI 130 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 72 71 73 17 8 "" [2 uses])
(note 73 72 74 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 17 (set (reg:SI 118 [ <retval> ])
        (reg/v:SI 103 [ result ])) putwchar.c:28 -1
     (nil))
(jump_insn 75 74 76 17 (set (pc)
        (label_ref 111)) putwchar.c:28 -1
     (nil)
 -> 111)
(barrier 76 75 124)
(code_label/s 124 76 126 18 15 "" [1 uses])
(note 126 124 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 125 126 77 18 (set (reg:DI 136)
        (reg:DI 0 ax)) -1
     (nil))
(code_label 77 125 78 19 9 "" [0 uses])
(note 78 77 79 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 19 (set (reg:SI 133)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 80 79 81 19 (parallel [
            (set (reg:SI 132 [ D.10498 ])
                (and:SI (reg:SI 133)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 81 80 82 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ D.10498 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 82 81 83 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 94)
(note 83 82 84 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 20 (set (reg/f:DI 111 [ D.10500 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 85 84 86 20 (set (reg:SI 134)
        (mem:SI (plus:DI (reg/f:DI 111 [ D.10500 ])
                (const_int 4 [0x4])) [3 _50->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 86 85 87 20 (parallel [
            (set (reg:SI 113 [ D.10498 ])
                (plus:SI (reg:SI 134)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 111 [ D.10500 ])
                    (const_int 4 [0x4])) [3 _50->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 87 86 88 20 (set (mem:SI (plus:DI (reg/f:DI 111 [ D.10500 ])
                (const_int 4 [0x4])) [3 _50->cnt+0 S4 A32])
        (reg:SI 113 [ D.10498 ])) libioP.h:863 -1
     (nil))
(insn 88 87 89 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.10498 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 89 88 90 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 94)
(note 90 89 91 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 21 (set (mem/f:DI (plus:DI (reg/f:DI 111 [ D.10500 ])
                (const_int 8 [0x8])) [1 _50->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 92 91 93 21 (parallel [
            (set (mem:SI (reg/f:DI 111 [ D.10500 ]) [3 _50->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 111 [ D.10500 ]) [3 _50->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 135 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 111 [ D.10500 ]) [3 _50->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 93 92 94 21 (set (reg/v:SI 114 [ ignore ])
        (reg:SI 135 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 94 93 95 22 10 "" [2 uses])
(note 95 94 96 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 22 (set (reg/f:DI 115 [ D.10497 ])
        (reg:DI 136)) -1
     (nil))
(insn 97 96 98 22 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.10497 ])) -1
     (nil))
(call_insn 98 97 99 22 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2ba40be0f798 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2ba40be0f798 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 99 98 100)
(code_label 100 99 101 23 6 "" [2 uses])
(note 101 100 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 101 104 23 (set (reg:SI 138)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 104 103 105 23 (parallel [
            (set (reg:SI 137 [ D.10498 ])
                (and:SI (reg:SI 138)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 105 104 106 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.10498 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 106 105 110 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 3721 (nil))
 -> 102)
(note 110 106 108 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 108 110 109 24 (set (pc)
        (label_ref:DI 72)) libioP.h:862 654 {jump}
     (nil)
 -> 72)
(barrier 109 108 111)
(code_label 111 109 114 25 1 "" [1 uses])
(note 114 111 112 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 112 114 113 25 (set (reg/i:SI 0 ax)
        (reg:SI 118 [ <retval> ])) putwchar.c:29 -1
     (nil))
(insn 113 112 0 25 (use (reg/i:SI 0 ax)) putwchar.c:29 -1
     (nil))
