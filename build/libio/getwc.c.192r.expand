
;; Function _IO_getwc (_IO_getwc, funcdef_no=53, decl_uid=7688, cgraph_uid=53, symbol_order=58)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Purged edges from bb 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 12->13 to 15 failed.
Forwarding edge 21->22 to 15 failed.
Redirecting jump 102 from 13 to 15.


try_optimize_cfg iteration 2

Forwarding edge 12->13 to 15 failed.
Deleted label in block 13.
Forwarding edge 21->22 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 117 [ fp ])
        (reg:DI 5 di [ fp ])) getwc.c:35 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 119)
        (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])) getwc.c:38 -1
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg:SI 118 [ D.11074 ])
                (and:SI (reg:SI 119)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) getwc.c:38 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ D.11074 ])
            (const_int 0 [0]))) getwc.c:38 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) getwc.c:38 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 28)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (parallel [
            (set (reg:DI 120 [ __self ])
                (asm_operands:DI ("mov %%fs:%c1,%0") ("=r") 0 [
                        (const_int 16 [0x10])
                    ]
                     [
                        (asm_input:DI ("i") getwc.c:38)
                    ]
                     [] getwc.c:38))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) getwc.c:38 -1
     (nil))
(insn 12 11 13 4 (set (reg/v/f:DI 90 [ __self ])
        (reg:DI 120 [ __self ])) getwc.c:38 -1
     (nil))
(insn 13 12 14 4 (set (reg/f:DI 95 [ D.11076 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [ fp ])
                (const_int 136 [0x88])) [1 MEM[(struct _IO_FILE *)fp_6(D)]._lock+0 S8 A64])) getwc.c:38 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ __self ])
            (mem/f:DI (plus:DI (reg/f:DI 95 [ D.11076 ])
                    (const_int 8 [0x8])) [1 _10->owner+0 S8 A64]))) getwc.c:38 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) getwc.c:38 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 25)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:SI 124)
        (const_int 1 [0x1])) getwc.c:38 -1
     (nil))
(insn 18 17 19 5 (set (reg:SI 125)
        (const_int 0 [0])) getwc.c:38 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:SI 121 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 124)
                        (mem:SI (reg/f:DI 95 [ D.11076 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 125)
                    ]
                     [
                        (asm_input:SI ("0") getwc.c:38)
                        (asm_input:SI ("m") getwc.c:38)
                        (asm_input:SI ("3") getwc.c:38)
                    ]
                     [] getwc.c:38))
            (set (reg:SI 122 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 124)
                        (mem:SI (reg/f:DI 95 [ D.11076 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 125)
                    ]
                     [
                        (asm_input:SI ("0") getwc.c:38)
                        (asm_input:SI ("m") getwc.c:38)
                        (asm_input:SI ("3") getwc.c:38)
                    ]
                     [] getwc.c:38))
            (set (mem:SI (reg/f:DI 95 [ D.11076 ]) [3 _10->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 124)
                        (mem:SI (reg/f:DI 95 [ D.11076 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 125)
                    ]
                     [
                        (asm_input:SI ("0") getwc.c:38)
                        (asm_input:SI ("m") getwc.c:38)
                        (asm_input:SI ("3") getwc.c:38)
                    ]
                     [] getwc.c:38))
            (set (reg:SI 123 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 124)
                        (mem:SI (reg/f:DI 95 [ D.11076 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 125)
                    ]
                     [
                        (asm_input:SI ("0") getwc.c:38)
                        (asm_input:SI ("m") getwc.c:38)
                        (asm_input:SI ("3") getwc.c:38)
                    ]
                     [] getwc.c:38))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) getwc.c:38 -1
     (nil))
(insn 20 19 21 5 (set (reg/v:SI 92 [ ignore1 ])
        (reg:SI 121 [ ignore1 ])) getwc.c:38 -1
     (nil))
(insn 21 20 22 5 (set (reg/v:SI 93 [ ignore2 ])
        (reg:SI 122 [ ignore2 ])) getwc.c:38 -1
     (nil))
(insn 22 21 23 5 (set (reg/v:SI 94 [ ignore3 ])
        (reg:SI 123 [ ignore3 ])) getwc.c:38 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 95 [ D.11076 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [ fp ])
                (const_int 136 [0x88])) [1 MEM[(struct _IO_FILE *)fp_6(D)]._lock+0 S8 A64])) getwc.c:38 -1
     (nil))
(insn 24 23 25 5 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.11076 ])
                (const_int 8 [0x8])) [1 _16->owner+0 S8 A64])
        (reg/v/f:DI 90 [ __self ])) getwc.c:38 -1
     (nil))
(code_label 25 24 26 6 3 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (parallel [
            (set (mem:SI (plus:DI (reg/f:DI 95 [ D.11076 ])
                        (const_int 4 [0x4])) [3 _29->cnt+0 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/f:DI 95 [ D.11076 ])
                            (const_int 4 [0x4])) [3 _29->cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getwc.c:38 -1
     (nil))
(code_label 28 27 29 7 2 "" [1 uses])
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 7 (set (reg/f:DI 98 [ D.11077 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [ fp ])
                (const_int 160 [0xa0])) [1 fp_6(D)->_wide_data+0 S8 A64])) getwc.c:39 -1
     (nil))
(insn 31 30 32 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.11077 ])
            (const_int 0 [0]))) getwc.c:39 -1
     (nil))
(jump_insn 32 31 33 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) getwc.c:39 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 37)
(note 33 32 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:DI 99 [ D.11078 ])
        (mem/f:DI (reg/f:DI 98 [ D.11077 ]) [1 _22->_IO_read_ptr+0 S8 A64])) getwc.c:39 -1
     (nil))
(insn 35 34 36 8 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 99 [ D.11078 ])
            (mem/f:DI (plus:DI (reg/f:DI 98 [ D.11077 ])
                    (const_int 8 [0x8])) [1 _22->_IO_read_end+0 S8 A64]))) getwc.c:39 -1
     (nil))
(jump_insn 36 35 37 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) getwc.c:39 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 44)
(code_label 37 36 38 9 4 "" [1 uses])
(note 38 37 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (set (reg:DI 5 di)
        (reg/v/f:DI 117 [ fp ])) getwc.c:39 -1
     (nil))
(call_insn 40 39 109 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___wuflow") [flags 0x43]  <function_decl 0x2b03de43c5e8 __wuflow>) [0 __wuflow S1 A8])
            (const_int 0 [0]))) getwc.c:39 -1
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___wuflow") [flags 0x43]  <function_decl 0x2b03de43c5e8 __wuflow>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(note 109 40 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 109 42 10 (set (reg/v:SI 103 [ result ])
        (reg:SI 0 ax)) getwc.c:39 -1
     (nil))
(jump_insn 42 41 43 10 (set (pc)
        (label_ref 94)) getwc.c:39 -1
     (nil)
 -> 94)
(barrier 43 42 44)
(code_label 44 43 45 11 5 "" [1 uses])
(note 45 44 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 11 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 99 [ D.11078 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getwc.c:39 -1
     (nil))
(insn 47 46 48 11 (set (mem/f:DI (reg/f:DI 98 [ D.11077 ]) [1 _22->_IO_read_ptr+0 S8 A64])
        (reg:DI 126)) getwc.c:39 -1
     (nil))
(insn 48 47 49 11 (set (reg/v:SI 103 [ result ])
        (mem:SI (reg/f:DI 99 [ D.11078 ]) [3 *_26+0 S4 A32])) getwc.c:39 -1
     (nil))
(jump_insn 49 48 50 11 (set (pc)
        (label_ref 94)) getwc.c:39 -1
     (nil)
 -> 94)
(barrier 50 49 96)
(code_label 96 50 51 12 11 "" [1 uses])
(note 51 96 52 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 12 (set (reg/f:DI 104 [ D.11076 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [ fp ])
                (const_int 136 [0x88])) [1 MEM[(struct _IO_FILE *)fp_6(D)]._lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 53 52 54 12 (set (reg:SI 127)
        (mem:SI (plus:DI (reg/f:DI 104 [ D.11076 ])
                (const_int 4 [0x4])) [3 _40->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 54 53 55 12 (parallel [
            (set (reg:SI 106 [ D.11074 ])
                (plus:SI (reg:SI 127)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 104 [ D.11076 ])
                    (const_int 4 [0x4])) [3 _40->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 55 54 56 12 (set (mem:SI (plus:DI (reg/f:DI 104 [ D.11076 ])
                (const_int 4 [0x4])) [3 _40->cnt+0 S4 A32])
        (reg:SI 106 [ D.11074 ])) libioP.h:863 -1
     (nil))
(insn 56 55 57 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 106 [ D.11074 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 61)
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 58 60 13 (set (pc)
        (label_ref 66)) libioP.h:863 -1
     (nil)
 -> 66)
(barrier 60 59 61)
(code_label 61 60 62 14 7 "" [1 uses])
(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 14 (set (mem/f:DI (plus:DI (reg/f:DI 104 [ D.11076 ])
                (const_int 8 [0x8])) [1 _40->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 64 63 65 14 (parallel [
            (set (mem:SI (reg/f:DI 104 [ D.11076 ]) [3 _40->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 104 [ D.11076 ]) [3 _40->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 128 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 104 [ D.11076 ]) [3 _40->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 65 64 66 14 (set (reg/v:SI 107 [ ignore ])
        (reg:SI 128 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 66 65 67 15 8 "" [2 uses])
(note 67 66 68 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 15 (set (reg:SI 116 [ <retval> ])
        (reg/v:SI 103 [ result ])) getwc.c:41 -1
     (nil))
(jump_insn 69 68 70 15 (set (pc)
        (label_ref 105)) getwc.c:41 -1
     (nil)
 -> 105)
(barrier 70 69 110)
(code_label/s 110 70 112 16 13 "" [1 uses])
(note 112 110 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 112 71 16 (set (reg:DI 134)
        (reg:DI 0 ax)) -1
     (nil))
(code_label 71 111 72 17 9 "" [0 uses])
(note 72 71 73 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 17 (set (reg:SI 131)
        (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 74 73 75 17 (parallel [
            (set (reg:SI 130 [ D.11074 ])
                (and:SI (reg:SI 131)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 75 74 76 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.11074 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 76 75 77 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 88)
(note 77 76 78 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 18 (set (reg/f:DI 110 [ D.11076 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [ fp ])
                (const_int 136 [0x88])) [1 MEM[(struct _IO_FILE *)fp_6(D)]._lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 79 78 80 18 (set (reg:SI 132)
        (mem:SI (plus:DI (reg/f:DI 110 [ D.11076 ])
                (const_int 4 [0x4])) [3 _46->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 80 79 81 18 (parallel [
            (set (reg:SI 112 [ D.11074 ])
                (plus:SI (reg:SI 132)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 110 [ D.11076 ])
                    (const_int 4 [0x4])) [3 _46->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 81 80 82 18 (set (mem:SI (plus:DI (reg/f:DI 110 [ D.11076 ])
                (const_int 4 [0x4])) [3 _46->cnt+0 S4 A32])
        (reg:SI 112 [ D.11074 ])) libioP.h:863 -1
     (nil))
(insn 82 81 83 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ D.11074 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 83 82 84 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 88)
(note 84 83 85 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 19 (set (mem/f:DI (plus:DI (reg/f:DI 110 [ D.11076 ])
                (const_int 8 [0x8])) [1 _46->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 86 85 87 19 (parallel [
            (set (mem:SI (reg/f:DI 110 [ D.11076 ]) [3 _46->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 110 [ D.11076 ]) [3 _46->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 133 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 110 [ D.11076 ]) [3 _46->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 87 86 88 19 (set (reg/v:SI 113 [ ignore ])
        (reg:SI 133 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 88 87 89 20 10 "" [2 uses])
(note 89 88 90 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 20 (set (reg/f:DI 87 [ D.11073 ])
        (reg:DI 134)) -1
     (nil))
(insn 91 90 92 20 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.11073 ])) -1
     (nil))
(call_insn 92 91 93 20 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b03de056798 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2b03de056798 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 93 92 94)
(code_label 94 93 95 21 6 "" [2 uses])
(note 95 94 97 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 97 95 98 21 (set (reg:SI 136)
        (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 98 97 99 21 (parallel [
            (set (reg:SI 135 [ D.11074 ])
                (and:SI (reg:SI 136)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 117 [ fp ]) [3 MEM[(struct _IO_FILE *)fp_6(D)]._flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 99 98 100 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 135 [ D.11074 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 100 99 104 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 3721 (nil))
 -> 96)
(note 104 100 102 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 104 103 22 (set (pc)
        (label_ref:DI 66)) libioP.h:862 654 {jump}
     (nil)
 -> 66)
(barrier 103 102 105)
(code_label 105 103 108 23 1 "" [1 uses])
(note 108 105 106 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 106 108 107 23 (set (reg/i:SI 0 ax)
        (reg:SI 116 [ <retval> ])) getwc.c:42 -1
     (nil))
(insn 107 106 0 23 (use (reg/i:SI 0 ax)) getwc.c:42 -1
     (nil))
