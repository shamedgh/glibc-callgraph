
;; Function getwchar (getwchar, funcdef_no=41, decl_uid=10121, cgraph_uid=41, symbol_order=46)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 2->6 redirected to 22
Edge 3->5 redirected to 23
Purged edges from bb 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 14->15 to 17 failed.
Forwarding edge 23->24 to 17 failed.
Redirecting jump 105 from 15 to 17.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 17 failed.
Deleted label in block 15.
Forwarding edge 23->24 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 5 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 8 2 (set (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
        (mem/f/c:DI (symbol_ref:DI ("_IO_stdin") [flags 0x42]  <var_decl 0x2ad4573ca990 _IO_stdin>) [1 _IO_stdin+0 S8 A64])) getwchar.c:36 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 120)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) getwchar.c:36 -1
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:SI 119 [ D.10497 ])
                (and:SI (reg:SI 120)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) getwchar.c:36 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.10497 ])
            (const_int 0 [0]))) getwchar.c:36 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 115)
            (pc))) getwchar.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 115)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (parallel [
            (set (reg:DI 121 [ __self ])
                (asm_operands:DI ("mov %%fs:%c1,%0") ("=r") 0 [
                        (const_int 16 [0x10])
                    ]
                     [
                        (asm_input:DI ("i") getwchar.c:36)
                    ]
                     [] getwchar.c:36))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) getwchar.c:36 -1
     (nil))
(insn 14 13 15 4 (set (reg/v/f:DI 90 [ __self ])
        (reg:DI 121 [ __self ])) getwchar.c:36 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:DI 95 [ D.10499 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) getwchar.c:36 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ __self ])
            (mem/f:DI (plus:DI (reg/f:DI 95 [ D.10499 ])
                    (const_int 8 [0x8])) [1 _10->owner+0 S8 A64]))) getwchar.c:36 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) getwchar.c:36 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 119)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:SI 125)
        (const_int 1 [0x1])) getwchar.c:36 -1
     (nil))
(insn 20 19 21 5 (set (reg:SI 126)
        (const_int 0 [0])) getwchar.c:36 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:SI 122 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 125)
                        (mem:SI (reg/f:DI 95 [ D.10499 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 126)
                    ]
                     [
                        (asm_input:SI ("0") getwchar.c:36)
                        (asm_input:SI ("m") getwchar.c:36)
                        (asm_input:SI ("3") getwchar.c:36)
                    ]
                     [] getwchar.c:36))
            (set (reg:SI 123 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 125)
                        (mem:SI (reg/f:DI 95 [ D.10499 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 126)
                    ]
                     [
                        (asm_input:SI ("0") getwchar.c:36)
                        (asm_input:SI ("m") getwchar.c:36)
                        (asm_input:SI ("3") getwchar.c:36)
                    ]
                     [] getwchar.c:36))
            (set (mem:SI (reg/f:DI 95 [ D.10499 ]) [3 _10->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 125)
                        (mem:SI (reg/f:DI 95 [ D.10499 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 126)
                    ]
                     [
                        (asm_input:SI ("0") getwchar.c:36)
                        (asm_input:SI ("m") getwchar.c:36)
                        (asm_input:SI ("3") getwchar.c:36)
                    ]
                     [] getwchar.c:36))
            (set (reg:SI 124 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 125)
                        (mem:SI (reg/f:DI 95 [ D.10499 ]) [3 _10->lock+0 S4 A64])
                        (reg:SI 126)
                    ]
                     [
                        (asm_input:SI ("0") getwchar.c:36)
                        (asm_input:SI ("m") getwchar.c:36)
                        (asm_input:SI ("3") getwchar.c:36)
                    ]
                     [] getwchar.c:36))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) getwchar.c:36 -1
     (nil))
(insn 22 21 23 5 (set (reg/v:SI 92 [ ignore1 ])
        (reg:SI 122 [ ignore1 ])) getwchar.c:36 -1
     (nil))
(insn 23 22 24 5 (set (reg/v:SI 93 [ ignore2 ])
        (reg:SI 123 [ ignore2 ])) getwchar.c:36 -1
     (nil))
(insn 24 23 25 5 (set (reg/v:SI 94 [ ignore3 ])
        (reg:SI 124 [ ignore3 ])) getwchar.c:36 -1
     (nil))
(insn 25 24 26 5 (set (reg/f:DI 95 [ D.10499 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) getwchar.c:36 -1
     (nil))
(insn 26 25 27 5 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.10499 ])
                (const_int 8 [0x8])) [1 _16->owner+0 S8 A64])
        (reg/v/f:DI 90 [ __self ])) getwchar.c:36 -1
     (nil))
(insn 27 26 116 5 (set (reg/f:DI 99 [ D.10501 ])
        (mem/f/c:DI (symbol_ref:DI ("_IO_stdin") [flags 0x42]  <var_decl 0x2ad4573ca990 _IO_stdin>) [1 _IO_stdin+0 S8 A64])) -1
     (nil))
(jump_insn 116 27 117 5 (set (pc)
        (label_ref 28)) -1
     (nil)
 -> 28)
(barrier 117 116 119)
(code_label 119 117 118 6 14 "" [1 uses])
(note 118 119 3 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 3 118 28 6 (set (reg/f:DI 99 [ D.10501 ])
        (reg/v/f:DI 87 [ _IO_acquire_lock_file ])) -1
     (nil))
(code_label 28 3 29 7 3 "" [1 uses])
(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 112 7 (parallel [
            (set (mem:SI (plus:DI (reg/f:DI 95 [ D.10499 ])
                        (const_int 4 [0x4])) [3 _59->cnt+0 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/f:DI 95 [ D.10499 ])
                            (const_int 4 [0x4])) [3 _59->cnt+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) getwchar.c:36 -1
     (nil))
(jump_insn 112 30 113 7 (set (pc)
        (label_ref 31)) -1
     (nil)
 -> 31)
(barrier 113 112 115)
(code_label 115 113 114 8 13 "" [1 uses])
(note 114 115 4 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 4 114 31 8 (set (reg/f:DI 99 [ D.10501 ])
        (reg/v/f:DI 87 [ _IO_acquire_lock_file ])) -1
     (nil))
(code_label 31 4 32 9 2 "" [1 uses])
(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 9 (set (reg/f:DI 98 [ D.10500 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ D.10501 ])
                (const_int 160 [0xa0])) [1 _61->_wide_data+0 S8 A64])) getwchar.c:37 -1
     (nil))
(insn 34 33 35 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.10500 ])
            (const_int 0 [0]))) getwchar.c:37 -1
     (nil))
(jump_insn 35 34 36 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) getwchar.c:37 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 40)
(note 36 35 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 10 (set (reg/f:DI 100 [ D.10502 ])
        (mem/f:DI (reg/f:DI 98 [ D.10500 ]) [1 _23->_IO_read_ptr+0 S8 A64])) getwchar.c:37 -1
     (nil))
(insn 38 37 39 10 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 100 [ D.10502 ])
            (mem/f:DI (plus:DI (reg/f:DI 98 [ D.10500 ])
                    (const_int 8 [0x8])) [1 _23->_IO_read_end+0 S8 A64]))) getwchar.c:37 -1
     (nil))
(jump_insn 39 38 40 10 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) getwchar.c:37 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 47)
(code_label 40 39 41 11 4 "" [1 uses])
(note 41 40 42 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 11 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.10501 ])) getwchar.c:37 -1
     (nil))
(call_insn 43 42 120 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___wuflow") [flags 0x43]  <function_decl 0x2ad4573e15e8 __wuflow>) [0 __wuflow S1 A8])
            (const_int 0 [0]))) getwchar.c:37 -1
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___wuflow") [flags 0x43]  <function_decl 0x2ad4573e15e8 __wuflow>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(note 120 43 44 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 44 120 45 12 (set (reg/v:SI 104 [ result ])
        (reg:SI 0 ax)) getwchar.c:37 -1
     (nil))
(jump_insn 45 44 46 12 (set (pc)
        (label_ref 97)) getwchar.c:37 -1
     (nil)
 -> 97)
(barrier 46 45 47)
(code_label 47 46 48 13 5 "" [1 uses])
(note 48 47 49 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 13 (parallel [
            (set (reg:DI 127)
                (plus:DI (reg/f:DI 100 [ D.10502 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) getwchar.c:37 -1
     (nil))
(insn 50 49 51 13 (set (mem/f:DI (reg/f:DI 98 [ D.10500 ]) [1 _23->_IO_read_ptr+0 S8 A64])
        (reg:DI 127)) getwchar.c:37 -1
     (nil))
(insn 51 50 52 13 (set (reg/v:SI 104 [ result ])
        (mem:SI (reg/f:DI 100 [ D.10502 ]) [3 *_27+0 S4 A32])) getwchar.c:37 -1
     (nil))
(jump_insn 52 51 53 13 (set (pc)
        (label_ref 97)) getwchar.c:37 -1
     (nil)
 -> 97)
(barrier 53 52 99)
(code_label 99 53 54 14 11 "" [1 uses])
(note 54 99 55 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 14 (set (reg/f:DI 105 [ D.10499 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 56 55 57 14 (set (reg:SI 128)
        (mem:SI (plus:DI (reg/f:DI 105 [ D.10499 ])
                (const_int 4 [0x4])) [3 _42->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 57 56 58 14 (parallel [
            (set (reg:SI 107 [ D.10497 ])
                (plus:SI (reg:SI 128)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 105 [ D.10499 ])
                    (const_int 4 [0x4])) [3 _42->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 58 57 59 14 (set (mem:SI (plus:DI (reg/f:DI 105 [ D.10499 ])
                (const_int 4 [0x4])) [3 _42->cnt+0 S4 A32])
        (reg:SI 107 [ D.10497 ])) libioP.h:863 -1
     (nil))
(insn 59 58 60 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ D.10497 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 60 59 61 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 64)
(note 61 60 62 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 62 61 63 15 (set (pc)
        (label_ref 69)) libioP.h:863 -1
     (nil)
 -> 69)
(barrier 63 62 64)
(code_label 64 63 65 16 7 "" [1 uses])
(note 65 64 66 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 16 (set (mem/f:DI (plus:DI (reg/f:DI 105 [ D.10499 ])
                (const_int 8 [0x8])) [1 _42->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 67 66 68 16 (parallel [
            (set (mem:SI (reg/f:DI 105 [ D.10499 ]) [3 _42->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 105 [ D.10499 ]) [3 _42->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 129 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 105 [ D.10499 ]) [3 _42->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 68 67 69 16 (set (reg/v:SI 108 [ ignore ])
        (reg:SI 129 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 69 68 70 17 8 "" [2 uses])
(note 70 69 71 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 17 (set (reg:SI 118 [ <retval> ])
        (reg/v:SI 104 [ result ])) getwchar.c:39 -1
     (nil))
(jump_insn 72 71 73 17 (set (pc)
        (label_ref 108)) getwchar.c:39 -1
     (nil)
 -> 108)
(barrier 73 72 121)
(code_label/s 121 73 123 18 15 "" [1 uses])
(note 123 121 122 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 122 123 74 18 (set (reg:DI 135)
        (reg:DI 0 ax)) -1
     (nil))
(code_label 74 122 75 19 9 "" [0 uses])
(note 75 74 76 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 19 (set (reg:SI 132)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 77 76 78 19 (parallel [
            (set (reg:SI 131 [ D.10497 ])
                (and:SI (reg:SI 132)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 78 77 79 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 131 [ D.10497 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 79 78 80 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 91)
(note 80 79 81 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 20 (set (reg/f:DI 111 [ D.10499 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ _IO_acquire_lock_file ])
                (const_int 136 [0x88])) [1 _IO_acquire_lock_file_6->_lock+0 S8 A64])) libioP.h:863 -1
     (nil))
(insn 82 81 83 20 (set (reg:SI 133)
        (mem:SI (plus:DI (reg/f:DI 111 [ D.10499 ])
                (const_int 4 [0x4])) [3 _48->cnt+0 S4 A32])) libioP.h:863 -1
     (nil))
(insn 83 82 84 20 (parallel [
            (set (reg:SI 113 [ D.10497 ])
                (plus:SI (reg:SI 133)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:863 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/f:DI 111 [ D.10499 ])
                    (const_int 4 [0x4])) [3 _48->cnt+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 84 83 85 20 (set (mem:SI (plus:DI (reg/f:DI 111 [ D.10499 ])
                (const_int 4 [0x4])) [3 _48->cnt+0 S4 A32])
        (reg:SI 113 [ D.10497 ])) libioP.h:863 -1
     (nil))
(insn 85 84 86 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.10497 ])
            (const_int 0 [0]))) libioP.h:863 -1
     (nil))
(jump_insn 86 85 87 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) libioP.h:863 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 91)
(note 87 86 88 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 21 (set (mem/f:DI (plus:DI (reg/f:DI 111 [ D.10499 ])
                (const_int 8 [0x8])) [1 _48->owner+0 S8 A64])
        (const_int 0 [0])) libioP.h:863 -1
     (nil))
(insn 89 88 90 21 (parallel [
            (set (mem:SI (reg/f:DI 111 [ D.10499 ]) [3 _48->lock+0 S4 A64])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem:SI (reg/f:DI 111 [ D.10499 ]) [3 _48->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (set (reg:SI 134 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem:SI (reg/f:DI 111 [ D.10499 ]) [3 _48->lock+0 S4 A64])
                    ]
                     [
                        (asm_input:SI ("m") libioP.h:863)
                    ]
                     [] libioP.h:863))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) libioP.h:863 -1
     (nil))
(insn 90 89 91 21 (set (reg/v:SI 114 [ ignore ])
        (reg:SI 134 [ ignore ])) libioP.h:863 -1
     (nil))
(code_label 91 90 92 22 10 "" [2 uses])
(note 92 91 93 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 22 (set (reg/f:DI 115 [ D.10496 ])
        (reg:DI 135)) -1
     (nil))
(insn 94 93 95 22 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.10496 ])) -1
     (nil))
(call_insn 95 94 96 22 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2ad456ffb798 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x2ad456ffb798 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 96 95 97)
(code_label 97 96 98 23 6 "" [2 uses])
(note 98 97 100 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 100 98 101 23 (set (reg:SI 137)
        (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])) libioP.h:862 -1
     (nil))
(insn 101 100 102 23 (parallel [
            (set (reg:SI 136 [ D.10497 ])
                (and:SI (reg:SI 137)
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) libioP.h:862 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 87 [ _IO_acquire_lock_file ]) [3 _IO_acquire_lock_file_6->_flags+0 S4 A64])
            (const_int 32768 [0x8000]))
        (nil)))
(insn 102 101 103 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 136 [ D.10497 ])
            (const_int 0 [0]))) libioP.h:862 -1
     (nil))
(jump_insn 103 102 107 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) libioP.h:862 -1
     (int_list:REG_BR_PROB 3721 (nil))
 -> 99)
(note 107 103 105 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 105 107 106 24 (set (pc)
        (label_ref:DI 69)) libioP.h:862 654 {jump}
     (nil)
 -> 69)
(barrier 106 105 108)
(code_label 108 106 111 25 1 "" [1 uses])
(note 111 108 109 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 109 111 110 25 (set (reg/i:SI 0 ax)
        (reg:SI 118 [ <retval> ])) getwchar.c:40 -1
     (nil))
(insn 110 109 0 25 (use (reg/i:SI 0 ax)) getwchar.c:40 -1
     (nil))
