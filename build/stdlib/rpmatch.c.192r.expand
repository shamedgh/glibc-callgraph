
;; Function try (try, funcdef_no=23, decl_uid=4007, cgraph_uid=23, symbol_order=26)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 5->9 redirected to 12
Edge 7->9 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 53.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 12 NOTE_INSN_DELETED)
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 93 [ response ])
        (reg:DI 5 di [ response ])) rpmatch.c:31 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 94 [ tag ])
        (reg:SI 4 si [ tag ])) rpmatch.c:31 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 95 [ match ])
        (reg:SI 1 dx [ match ])) rpmatch.c:31 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 96 [ nomatch ])
        (reg:SI 2 cx [ nomatch ])) rpmatch.c:31 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 97 [ lastp ])
        (reg:DI 37 r8 [ lastp ])) rpmatch.c:31 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 98 [ re ])
        (reg:DI 38 r9 [ re ])) rpmatch.c:31 -1
     (nil))
(note 8 7 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 8 15 2 (set (reg:SI 5 di)
        (reg/v:SI 94 [ tag ])) rpmatch.c:32 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_nl_langinfo") [flags 0x43]  <function_decl 0x2adf54201000 nl_langinfo>) [0 nl_langinfo S1 A8])
            (const_int 0 [0]))) rpmatch.c:32 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_nl_langinfo") [flags 0x43]  <function_decl 0x2adf54201000 nl_langinfo>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 16 15 17 2 (set (reg/v/f:DI 88 [ pattern ])
        (reg:DI 0 ax)) rpmatch.c:32 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 89 [ D.4047 ])
        (mem/f:DI (reg/v/f:DI 97 [ lastp ]) [1 *lastp_9(D)+0 S8 A64])) rpmatch.c:33 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ pattern ])
            (reg/f:DI 89 [ D.4047 ]))) rpmatch.c:33 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) rpmatch.c:33 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 38)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.4047 ])
            (const_int 0 [0]))) rpmatch.c:36 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) rpmatch.c:36 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 27)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ re ])) rpmatch.c:39 -1
     (nil))
(call_insn 25 24 26 5 (call (mem:QI (symbol_ref:DI ("__regfree") [flags 0x41]  <function_decl 0x2adf543506c0 __regfree>) [0 __regfree S1 A8])
        (const_int 0 [0])) rpmatch.c:39 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__regfree") [flags 0x41]  <function_decl 0x2adf543506c0 __regfree>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 5 (set (mem/f:DI (reg/v/f:DI 97 [ lastp ]) [1 *lastp_9(D)+0 S8 A64])
        (const_int 0 [0])) rpmatch.c:40 -1
     (nil))
(code_label 27 26 28 6 3 "" [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) rpmatch.c:43 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 4 si)
        (reg/v/f:DI 88 [ pattern ])) rpmatch.c:43 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ re ])) rpmatch.c:43 -1
     (nil))
(call_insn 32 31 33 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__regcomp") [flags 0x41]  <function_decl 0x2adf54350438 __regcomp>) [0 __regcomp S1 A8])
            (const_int 0 [0]))) rpmatch.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__regcomp") [flags 0x41]  <function_decl 0x2adf54350438 __regcomp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 33 32 34 6 (set (reg:SI 90 [ D.4046 ])
        (reg:SI 0 ax)) rpmatch.c:43 -1
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.4046 ])
            (const_int 0 [0]))) rpmatch.c:43 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) rpmatch.c:43 612 {*jcc_1}
     (int_list:REG_BR_PROB 400 (nil))
 -> 62)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (mem/f:DI (reg/v/f:DI 97 [ lastp ]) [1 *lastp_9(D)+0 S8 A64])
        (reg/v/f:DI 88 [ pattern ])) rpmatch.c:45 -1
     (nil))
(code_label 38 37 39 8 2 "" [1 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (reg:SI 37 r8)
        (const_int 0 [0])) rpmatch.c:49 -1
     (nil))
(insn 41 40 42 8 (set (reg:DI 2 cx)
        (const_int 0 [0])) rpmatch.c:49 -1
     (nil))
(insn 42 41 43 8 (set (reg:DI 1 dx)
        (const_int 0 [0])) rpmatch.c:49 -1
     (nil))
(insn 43 42 44 8 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ response ])) rpmatch.c:49 -1
     (nil))
(insn 44 43 45 8 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ re ])) rpmatch.c:49 -1
     (nil))
(call_insn 45 44 46 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__regexec") [flags 0x41]  <function_decl 0x2adf54350510 __regexec>) [0 __regexec S1 A8])
            (const_int 0 [0]))) rpmatch.c:49 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__regexec") [flags 0x41]  <function_decl 0x2adf54350510 __regexec>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 46 45 47 8 (set (reg:SI 91 [ D.4046 ])
        (reg:SI 0 ax)) rpmatch.c:49 -1
     (nil))
(insn 47 46 48 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.4046 ])
            (const_int 0 [0]))) rpmatch.c:49 -1
     (nil))
(jump_insn 48 47 49 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 66)
            (pc))) rpmatch.c:49 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 66)
(note 49 48 10 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 10 49 59 9 (set (reg:SI 87 [ D.4046 ])
        (reg/v:SI 96 [ nomatch ])) rpmatch.c:49 -1
     (nil))
(jump_insn 59 10 60 9 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
(barrier 60 59 62)
(code_label 62 60 61 10 5 "" [1 uses])
(note 61 62 9 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 9 61 63 10 (set (reg:SI 87 [ D.4046 ])
        (const_int -1 [0xffffffffffffffff])) rpmatch.c:44 -1
     (nil))
(jump_insn 63 9 64 10 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
(barrier 64 63 66)
(code_label 66 64 65 11 6 "" [1 uses])
(note 65 66 11 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 11 65 50 11 (set (reg:SI 87 [ D.4046 ])
        (reg/v:SI 95 [ match ])) rpmatch.c:49 -1
     (nil))
(code_label 50 11 51 12 4 "" [2 uses])
(note 51 50 52 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 56 12 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.4046 ])) -1
     (nil))
(insn 56 52 57 12 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) rpmatch.c:50 -1
     (nil))
(insn 57 56 0 12 (use (reg/i:SI 0 ax)) rpmatch.c:50 -1
     (nil))

;; Function rpmatch (rpmatch, funcdef_no=24, decl_uid=3212, cgraph_uid=24, symbol_order=27)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 29.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 89 [ response ])
        (reg:DI 5 di [ response ])) rpmatch.c:54 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 38 r9)
        (symbol_ref:DI ("yesre.4015") [flags 0x2]  <var_decl 0x2adf5427fb40 yesre>)) rpmatch.c:59 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 37 r8)
        (symbol_ref:DI ("yesexpr.4013") [flags 0x2]  <var_decl 0x2adf5427fa20 yesexpr>)) rpmatch.c:59 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) rpmatch.c:59 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) rpmatch.c:59 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 327680 [0x50000])) rpmatch.c:59 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ response ])) rpmatch.c:59 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("try") [flags 0x3]  <function_decl 0x2adf54350798 try>) [0 try S1 A8])
            (const_int 0 [0]))) rpmatch.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("try") [flags 0x3]  <function_decl 0x2adf54350798 try>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 13 12 14 2 (set (reg:SI 87 [ D.4050 ])
        (reg:SI 0 ax)) rpmatch.c:59 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.4050 ])
            (const_int 0 [0]))) rpmatch.c:59 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) rpmatch.c:59 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 26)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 38 r9)
        (symbol_ref:DI ("nore.4016") [flags 0x2]  <var_decl 0x2adf5427fbd0 nore>)) rpmatch.c:59 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 37 r8)
        (symbol_ref:DI ("noexpr.4014") [flags 0x2]  <var_decl 0x2adf5427fab0 noexpr>)) rpmatch.c:59 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 2 cx)
        (const_int -1 [0xffffffffffffffff])) rpmatch.c:59 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) rpmatch.c:59 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 4 si)
        (const_int 327681 [0x50001])) rpmatch.c:59 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ response ])) rpmatch.c:59 -1
     (nil))
(call_insn/j 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("try") [flags 0x3]  <function_decl 0x2adf54350798 try>) [0 try S1 A8])
            (const_int 0 [0]))) rpmatch.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("try") [flags 0x3]  <function_decl 0x2adf54350798 try>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(barrier 24 23 26)
(code_label 26 24 27 5 13 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 32 5 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.4050 ])) rpmatch.c:59 -1
     (nil))
(insn 32 28 33 5 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) rpmatch.c:61 -1
     (nil))
(insn 33 32 0 5 (use (reg/i:SI 0 ax)) rpmatch.c:61 -1
     (nil))
