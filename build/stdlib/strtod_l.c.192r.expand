
;; Function round_away (round_away, funcdef_no=94, decl_uid=9706, cgraph_uid=94, symbol_order=102)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13
Edge 2->13 redirected to 16
Edge 3->5 redirected to 17
Edge 6->8 redirected to 18
Edge 9->11 redirected to 19
Purged edges from bb 25


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 22 failed.
Forwarding edge 8->9 to 22 failed.
Redirecting jump 78 from 13 to 24.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Redirecting jump 82 from 17 to 24.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Redirecting jump 86 from 21 to 24.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Removing jump 70.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 22 failed.
Forwarding edge 8->9 to 22 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 16 NOTE_INSN_DELETED)
(note 16 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 16 4 2 (set (reg:SI 90)
        (reg:SI 5 di [ negative ])) ../include/rounding-mode.h:45 -1
     (nil))
(insn 4 2 6 2 (set (reg:SI 92)
        (reg:SI 4 si [ last_digit_odd ])) ../include/rounding-mode.h:45 -1
     (nil))
(insn 6 4 8 2 (set (reg:SI 94)
        (reg:SI 1 dx [ half_bit ])) ../include/rounding-mode.h:45 -1
     (nil))
(insn 8 6 10 2 (set (reg:SI 96)
        (reg:SI 2 cx [ more_bits ])) ../include/rounding-mode.h:45 -1
     (nil))
(insn 10 8 3 2 (set (reg/v:SI 97 [ mode ])
        (reg:SI 37 r8 [ mode ])) ../include/rounding-mode.h:45 -1
     (nil))
(insn 3 10 5 2 (set (reg/v:QI 89 [ negative ])
        (subreg:QI (reg:SI 90) 0)) ../include/rounding-mode.h:45 -1
     (nil))
(insn 5 3 7 2 (set (reg/v:QI 91 [ last_digit_odd ])
        (subreg:QI (reg:SI 92) 0)) ../include/rounding-mode.h:45 -1
     (nil))
(insn 7 5 9 2 (set (reg/v:QI 93 [ half_bit ])
        (subreg:QI (reg:SI 94) 0)) ../include/rounding-mode.h:45 -1
     (nil))
(insn 9 7 11 2 (set (reg/v:QI 95 [ more_bits ])
        (subreg:QI (reg:SI 96) 0)) ../include/rounding-mode.h:45 -1
     (nil))
(note 11 9 18 2 NOTE_INSN_FUNCTION_BEG)
(insn 18 11 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ mode ])
            (const_int 1024 [0x400]))) ../include/rounding-mode.h:46 -1
     (nil))
(jump_insn 19 18 90 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) ../include/rounding-mode.h:46 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 33)
(note 90 19 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 90 21 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 97 [ mode ])
            (const_int 1024 [0x400]))) ../include/rounding-mode.h:46 -1
     (nil))
(jump_insn 21 20 91 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) ../include/rounding-mode.h:46 -1
     (int_list:REG_BR_PROB 6250 (nil))
 -> 26)
(note 91 21 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 91 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ mode ])
            (const_int 0 [0]))) ../include/rounding-mode.h:46 -1
     (nil))
(jump_insn 23 22 92 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) ../include/rounding-mode.h:46 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 43)
(note 92 23 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 24 92 25 6 (set (pc)
        (label_ref 63)) ../include/rounding-mode.h:46 -1
     (nil)
 -> 63)
(barrier 25 24 26)
(code_label 26 25 93 7 4 "" [1 uses])
(note 93 26 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 93 28 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ mode ])
            (const_int 2048 [0x800]))) ../include/rounding-mode.h:46 -1
     (nil))
(jump_insn 28 27 94 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) ../include/rounding-mode.h:46 -1
     (int_list:REG_BR_PROB 4000 (nil))
 -> 53)
(note 94 28 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 94 30 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 97 [ mode ])
            (const_int 3072 [0xc00]))) ../include/rounding-mode.h:46 -1
     (nil))
(jump_insn 30 29 95 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) ../include/rounding-mode.h:46 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 77)
(note 95 30 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 31 95 32 9 (set (pc)
        (label_ref 63)) ../include/rounding-mode.h:46 -1
     (nil)
 -> 63)
(barrier 32 31 33)
(code_label 33 32 34 10 3 "" [1 uses])
(note 34 33 35 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 89 [ negative ])
            (const_int 0 [0]))) ../include/rounding-mode.h:49 -1
     (nil))
(jump_insn 36 35 37 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 81)
            (pc))) ../include/rounding-mode.h:49 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 81)
(note 37 36 38 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 78 11 (parallel [
            (set (reg:QI 87 [ D.13112 ])
                (ior:QI (reg/v:QI 93 [ half_bit ])
                    (reg/v:QI 95 [ more_bits ])))
            (clobber (reg:CC 17 flags))
        ]) ../include/rounding-mode.h:49 -1
     (nil))
(jump_insn 78 38 79 11 (set (pc)
        (label_ref:DI 67)) 654 {jump}
     (nil)
 -> 67)
(barrier 79 78 81)
(code_label 81 79 80 12 12 "" [1 uses])
(note 80 81 12 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 12 80 41 12 (set (reg:QI 87 [ D.13112 ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 41 12 42 12 (set (pc)
        (label_ref 67)) ../include/rounding-mode.h:49 -1
     (nil)
 -> 67)
(barrier 42 41 43)
(code_label 43 42 44 14 5 "" [1 uses])
(note 44 43 45 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 93 [ half_bit ])
            (const_int 0 [0]))) ../include/rounding-mode.h:52 -1
     (nil))
(jump_insn 46 45 47 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 85)
            (pc))) ../include/rounding-mode.h:52 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 85)
(note 47 46 48 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 82 15 (parallel [
            (set (reg:QI 87 [ D.13112 ])
                (ior:QI (reg/v:QI 95 [ more_bits ])
                    (reg/v:QI 91 [ last_digit_odd ])))
            (clobber (reg:CC 17 flags))
        ]) ../include/rounding-mode.h:52 -1
     (nil))
(jump_insn 82 48 83 15 (set (pc)
        (label_ref:DI 67)) 654 {jump}
     (nil)
 -> 67)
(barrier 83 82 85)
(code_label 85 83 84 16 13 "" [1 uses])
(note 84 85 13 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 13 84 51 16 (set (reg:QI 87 [ D.13112 ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 51 13 52 16 (set (pc)
        (label_ref 67)) ../include/rounding-mode.h:52 -1
     (nil)
 -> 67)
(barrier 52 51 53)
(code_label 53 52 54 18 6 "" [1 uses])
(note 54 53 55 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 89 [ negative ])
            (const_int 0 [0]))) ../include/rounding-mode.h:58 -1
     (nil))
(jump_insn 56 55 57 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 89)
            (pc))) ../include/rounding-mode.h:58 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 89)
(note 57 56 58 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 86 19 (parallel [
            (set (reg:QI 87 [ D.13112 ])
                (ior:QI (reg/v:QI 93 [ half_bit ])
                    (reg/v:QI 95 [ more_bits ])))
            (clobber (reg:CC 17 flags))
        ]) ../include/rounding-mode.h:58 -1
     (nil))
(jump_insn 86 58 87 19 (set (pc)
        (label_ref:DI 67)) 654 {jump}
     (nil)
 -> 67)
(barrier 87 86 89)
(code_label 89 87 88 20 14 "" [1 uses])
(note 88 89 14 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 14 88 61 20 (set (reg:QI 87 [ D.13112 ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 61 14 62 20 (set (pc)
        (label_ref 67)) ../include/rounding-mode.h:58 -1
     (nil)
 -> 67)
(barrier 62 61 63)
(code_label 63 62 64 22 2 "" [2 uses])
(note 64 63 65 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 65 64 66 22 (call (mem:QI (symbol_ref:DI ("*__GI_abort") [flags 0x43]  <function_decl 0x2ab61dd99360 abort>) [0 __builtin_abort S1 A8])
        (const_int 0 [0])) ../include/rounding-mode.h:61 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_abort") [flags 0x43]  <function_decl 0x2ab61dd99360 abort>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 66 65 77)
(code_label 77 66 76 23 11 "" [1 uses])
(note 76 77 15 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 15 76 67 23 (set (reg:QI 87 [ D.13112 ])
        (const_int 0 [0])) ../include/rounding-mode.h:55 -1
     (nil))
(code_label 67 15 68 24 7 "" [6 uses])
(note 68 67 69 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 73 24 (set (reg:QI 88 [ <retval> ])
        (reg:QI 87 [ D.13112 ])) -1
     (nil))
(insn 73 69 74 24 (set (reg/i:QI 0 ax)
        (reg:QI 88 [ <retval> ])) ../include/rounding-mode.h:63 -1
     (nil))
(insn 74 73 0 24 (use (reg/i:QI 0 ax)) ../include/rounding-mode.h:63 -1
     (nil))

;; Function round_and_return (round_and_return, funcdef_no=104, decl_uid=11225, cgraph_uid=104, symbol_order=112)

Partition 0: size 2 align 2
	fc

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45
Edge 2->7 redirected to 49
Edge 24->27 redirected to 50
Edge 32->43 redirected to 51
Purged edges from bb 57


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 12 failed.
Forwarding edge 8->9 to 12 failed.
Forwarding edge 39->40 to 48 failed.
Redirecting jump 255 from 55 to 49.
Redirecting jump 264 from 55 to 49.
Redirecting jump 359 from 55 to 49.
Merging block 55 into block 54...
Merged blocks 54 and 55.
Merged 54 and 55 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 12 failed.
Forwarding edge 8->9 to 12 failed.
Forwarding edge 39->40 to 48 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 25 NOTE_INSN_DELETED)
(note 25 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 25 3 2 (set (reg/v/f:DI 151 [ retval ])
        (reg:DI 5 di [ retval ])) strtod_l.c:197 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 152 [ exponent ])
        (reg:DI 4 si [ exponent ])) strtod_l.c:197 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 153 [ negative ])
        (reg:SI 1 dx [ negative ])) strtod_l.c:197 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 154 [ round_limb ])
        (reg:DI 2 cx [ round_limb ])) strtod_l.c:197 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 155 [ round_bit ])
        (reg:DI 37 r8 [ round_bit ])) strtod_l.c:197 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 156 [ more_bits ])
        (reg:SI 38 r9 [ more_bits ])) strtod_l.c:197 -1
     (nil))
(note 8 7 27 2 NOTE_INSN_FUNCTION_BEG)
(insn 27 8 28 2 (parallel [
            (set (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -2 [0xfffffffffffffffe])) [5 fc+0 S2 A16])
                (asm_operands/v:HI ("fnstcw %0") ("=m") 0 []
                     []
                     [] ../sysdeps/generic/get-rounding-mode.h:94))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) ../sysdeps/generic/get-rounding-mode.h:94 -1
     (nil))
(insn 28 27 29 2 (set (reg:HI 158)
        (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [5 fc+0 S2 A16])) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:HI 157 [ D.13135 ])
                (and:HI (reg:HI 158)
                    (const_int 3072 [0xc00])))
            (clobber (reg:CC 17 flags))
        ]) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (expr_list:REG_EQUAL (and:HI (mem/c:HI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [5 fc+0 S2 A16])
            (const_int 3072 [0xc00]))
        (nil)))
(insn 30 29 31 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 157 [ D.13135 ])
            (const_int 1024 [0x400]))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(jump_insn 31 30 363 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 57)
(note 363 31 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 363 33 4 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 157 [ D.13135 ])
            (const_int 1024 [0x400]))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(jump_insn 33 32 364 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (int_list:REG_BR_PROB 6250 (nil))
 -> 38)
(note 364 33 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 364 35 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 157 [ D.13135 ])
            (const_int 0 [0]))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(jump_insn 35 34 365 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 354)
            (pc))) ../sysdeps/generic/get-rounding-mode.h:95 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 354)
(note 365 35 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 36 365 37 6 (set (pc)
        (label_ref 53)) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil)
 -> 53)
(barrier 37 36 38)
(code_label 38 37 366 7 22 "" [1 uses])
(note 366 38 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 366 40 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 157 [ D.13135 ])
            (const_int 2048 [0x800]))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(jump_insn 40 39 367 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (int_list:REG_BR_PROB 4000 (nil))
 -> 49)
(note 367 40 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 41 367 42 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 157 [ D.13135 ])
            (const_int 3072 [0xc00]))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil))
(jump_insn 42 41 368 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 45)
(note 368 42 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 43 368 44 9 (set (pc)
        (label_ref 53)) ../sysdeps/generic/get-rounding-mode.h:95 -1
     (nil)
 -> 53)
(barrier 44 43 45)
(code_label 45 44 46 10 25 "" [1 uses])
(note 46 45 11 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 11 46 47 10 (set (reg:SI 142 [ D.13131 ])
        (const_int 3072 [0xc00])) ../sysdeps/generic/get-rounding-mode.h:109 -1
     (nil))
(jump_insn 47 11 48 10 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 48 47 49)
(code_label 49 48 50 11 24 "" [1 uses])
(note 50 49 12 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 12 50 51 11 (set (reg:SI 142 [ D.13131 ])
        (const_int 2048 [0x800])) ../sysdeps/generic/get-rounding-mode.h:114 -1
     (nil))
(jump_insn 51 12 52 11 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 52 51 53)
(code_label 53 52 54 12 20 "" [2 uses])
(note 54 53 55 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 54 56 12 (call (mem:QI (symbol_ref:DI ("*__GI_abort") [flags 0x43]  <function_decl 0x2ab61dd99360 abort>) [0 __builtin_abort S1 A8])
        (const_int 0 [0])) ../sysdeps/generic/get-rounding-mode.h:118 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_abort") [flags 0x43]  <function_decl 0x2ab61dd99360 abort>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 56 55 57)
(code_label 57 56 58 13 21 "" [1 uses])
(note 58 57 9 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 9 58 351 13 (set (reg:SI 142 [ D.13131 ])
        (const_int 1024 [0x400])) ../sysdeps/generic/get-rounding-mode.h:99 -1
     (nil))
(jump_insn 351 9 352 13 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
(barrier 352 351 354)
(code_label 354 352 353 14 49 "" [1 uses])
(note 353 354 10 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 10 353 59 14 (set (reg:SI 142 [ D.13131 ])
        (const_int 0 [0])) ../sysdeps/generic/get-rounding-mode.h:104 -1
     (nil))
(code_label 59 10 60 15 23 "" [3 uses])
(note 60 59 61 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 152 [ exponent ])
            (const_int -1022 [0xfffffffffffffc02]))) strtod_l.c:200 -1
     (nil))
(jump_insn 62 61 63 15 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) strtod_l.c:200 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 187)
(note 63 62 64 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 152 [ exponent ])
            (const_int -1075 [0xfffffffffffffbcd]))) strtod_l.c:202 -1
     (nil))
(jump_insn 65 64 66 16 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) strtod_l.c:202 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 84)
(note 66 65 67 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 17 (set (reg:DI 159)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:185 -1
     (nil))
(insn 68 67 69 17 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 159)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:185 -1
     (nil))
(insn 69 68 70 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) strtod_l.c:186 -1
     (nil))
(jump_insn 70 69 71 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) strtod_l.c:186 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 77)
(note 71 70 72 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 18 (set (reg:DF 160)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 73 72 74 18 (set (reg:DF 161)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF -2.22507385850720138309023271733240406421921598046233e-308 [-0x0.8p-1021])
        (nil)))
(insn 74 73 22 18 (set (reg/v:DF 129 [ result ])
        (mult:DF (reg:DF 160)
            (reg:DF 161))) strtod_l.c:186 -1
     (nil))
(insn 22 74 75 18 (set (reg:DF 93 [ D.13133 ])
        (reg/v:DF 129 [ result ])) strtod_l.c:186 -1
     (nil))
(jump_insn 75 22 76 18 (set (pc)
        (label_ref 294)) strtod_l.c:186 -1
     (nil)
 -> 294)
(barrier 76 75 77)
(code_label 77 76 78 19 28 "" [1 uses])
(note 78 77 79 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 19 (set (reg:DF 162)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 80 79 81 19 (set (reg:DF 163)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 81 80 19 19 (set (reg/v:DF 138 [ result ])
        (mult:DF (reg:DF 162)
            (reg:DF 163))) strtod_l.c:186 -1
     (nil))
(insn 19 81 82 19 (set (reg:DF 93 [ D.13133 ])
        (reg/v:DF 138 [ result ])) strtod_l.c:186 -1
     (nil))
(jump_insn 82 19 83 19 (set (pc)
        (label_ref 294)) strtod_l.c:186 -1
     (nil)
 -> 294)
(barrier 83 82 84)
(code_label 84 83 85 20 27 "" [1 uses])
(note 85 84 86 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 20 (set (reg:DI 164)
        (const_int -1022 [0xfffffffffffffc02])) strtod_l.c:205 -1
     (nil))
(insn 87 86 88 20 (parallel [
            (set (reg/v:DI 96 [ shift ])
                (minus:DI (reg:DI 164)
                    (reg/v:DI 152 [ exponent ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:205 -1
     (nil))
(insn 88 87 89 20 (set (reg:SI 97 [ D.13132 ])
        (subreg:SI (reg/v:DI 155 [ round_bit ]) 0)) strtod_l.c:208 -1
     (nil))
(insn 89 88 90 20 (set (reg:DI 166)
        (const_int 1 [0x1])) strtod_l.c:208 -1
     (nil))
(insn 90 89 91 20 (parallel [
            (set (reg:DI 165 [ D.13134 ])
                (ashift:DI (reg:DI 166)
                    (subreg:QI (reg:SI 97 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:208 -1
     (nil))
(insn 91 90 92 20 (parallel [
            (set (reg:DI 167 [ D.13134 ])
                (plus:DI (reg:DI 165 [ D.13134 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:208 -1
     (nil))
(insn 92 91 93 20 (parallel [
            (set (reg:DI 168 [ D.13134 ])
                (and:DI (reg:DI 167 [ D.13134 ])
                    (reg/v:DI 154 [ round_limb ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:208 -1
     (nil))
(insn 93 92 94 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 168 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:208 -1
     (nil))
(insn 94 93 95 20 (set (reg:QI 170)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:208 -1
     (nil))
(insn 95 94 96 20 (set (reg:SI 169 [ D.13130 ])
        (zero_extend:SI (reg:QI 170))) strtod_l.c:208 -1
     (nil))
(insn 96 95 97 20 (parallel [
            (set (reg/v:SI 156 [ more_bits ])
                (ior:SI (reg/v:SI 156 [ more_bits ])
                    (reg:SI 169 [ D.13130 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:208 -1
     (nil))
(insn 97 96 98 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 96 [ shift ])
            (const_int 53 [0x35]))) strtod_l.c:209 -1
     (nil))
(jump_insn 98 97 99 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 104)
            (pc))) strtod_l.c:209 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 104)
(note 99 98 100 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 21 (set (reg/v:DI 154 [ round_limb ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) strtod_l.c:215 -1
     (nil))
(insn 101 100 13 21 (set (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])
        (const_int 0 [0])) strtod_l.c:219 -1
     (nil))
(insn 13 101 14 21 (set (reg:SI 147 [ D.13131 ])
        (const_int 0 [0])) strtod_l.c:219 -1
     (nil))
(insn 14 13 15 21 (set (reg:DI 146 [ D.13134 ])
        (const_int 0 [0])) strtod_l.c:219 -1
     (nil))
(insn 15 14 102 21 (set (reg:SI 92 [ D.13132 ])
        (const_int 52 [0x34])) strtod_l.c:219 -1
     (nil))
(jump_insn 102 15 103 21 (set (pc)
        (label_ref 148)) strtod_l.c:219 -1
     (nil)
 -> 148)
(barrier 103 102 104)
(code_label 104 103 105 22 30 "" [1 uses])
(note 105 104 106 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 96 [ shift ])
            (const_int 1 [0x1]))) strtod_l.c:245 -1
     (nil))
(jump_insn 107 106 108 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) strtod_l.c:245 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 319)
(note 108 107 109 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 23 (parallel [
            (set (reg:DI 171 [ D.13134 ])
                (lshiftrt:DI (reg/v:DI 154 [ round_limb ])
                    (subreg:QI (reg:SI 97 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:251 -1
     (nil))
(insn 110 109 111 23 (parallel [
            (set (reg:QI 172 [ D.13130 ])
                (and:QI (subreg:QI (reg:DI 171 [ D.13134 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:251 -1
     (nil))
(insn 111 110 112 23 (set (reg:SI 115 [ D.13131 ])
        (zero_extend:SI (reg:QI 172 [ D.13130 ]))) strtod_l.c:251 -1
     (nil))
(insn 112 111 113 23 (set (reg/v:DI 154 [ round_limb ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) strtod_l.c:252 -1
     (nil))
(insn 113 112 114 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) strtod_l.c:251 -1
     (nil))
(insn 114 113 115 23 (set (reg:QI 174)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:251 -1
     (nil))
(insn 115 114 116 23 (set (reg:SI 173 [ D.13130 ])
        (zero_extend:SI (reg:QI 174))) strtod_l.c:251 -1
     (nil))
(insn 116 115 117 23 (set (reg:SI 144 [ D.13131 ])
        (reg:SI 173 [ D.13130 ])) strtod_l.c:251 -1
     (nil))
(insn 117 116 118 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ more_bits ])
            (const_int 0 [0]))) strtod_l.c:251 -1
     (nil))
(insn 118 117 119 23 (set (reg:QI 176)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:251 -1
     (nil))
(insn 119 118 120 23 (set (reg:SI 175 [ D.13130 ])
        (zero_extend:SI (reg:QI 176))) strtod_l.c:251 -1
     (nil))
(insn 120 119 121 23 (parallel [
            (set (reg:DI 177 [ D.13134 ])
                (and:DI (reg/v:DI 154 [ round_limb ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:251 -1
     (nil))
(insn 121 120 122 23 (set (reg:SI 37 r8)
        (reg:SI 142 [ D.13131 ])) strtod_l.c:251 -1
     (nil))
(insn 122 121 123 23 (set (reg:SI 2 cx)
        (reg:SI 175 [ D.13130 ])) strtod_l.c:251 -1
     (nil))
(insn 123 122 124 23 (set (reg:SI 1 dx)
        (reg:SI 115 [ D.13131 ])) strtod_l.c:251 -1
     (nil))
(insn 124 123 125 23 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 177 [ D.13134 ]) 0)) strtod_l.c:251 -1
     (nil))
(insn 125 124 126 23 (set (reg:SI 5 di)
        (reg:SI 144 [ D.13131 ])) strtod_l.c:251 -1
     (nil))
(call_insn/c/i 126 125 127 23 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("round_away") [flags 0x3]  <function_decl 0x2ab61e343ca8 round_away>) [0 round_away S1 A8])
            (const_int 0 [0]))) strtod_l.c:251 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_away") [flags 0x3]  <function_decl 0x2ab61e343ca8 round_away>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 127 126 128 23 (set (reg:QI 119 [ D.13130 ])
        (reg:QI 0 ax)) strtod_l.c:251 -1
     (nil))
(insn 128 127 129 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ D.13130 ])
            (const_int 0 [0]))) strtod_l.c:251 -1
     (nil))
(jump_insn 129 128 130 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) strtod_l.c:251 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 335)
(note 130 129 131 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 24 (set (reg:DI 178)
        (const_int -1023 [0xfffffffffffffc01])) strtod_l.c:273 -1
     (nil))
(insn 132 131 133 24 (parallel [
            (set (reg/v:DI 111 [ round_bit ])
                (minus:DI (reg:DI 178)
                    (reg/v:DI 152 [ exponent ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:273 -1
     (nil))
(insn 133 132 134 24 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) strtod_l.c:274 -1
     (nil))
(insn 134 133 135 24 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:274 -1
     (nil))
(insn 135 134 136 24 (set (reg:DI 4 si)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(insn 136 135 137 24 (set (reg:DI 5 di)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(call_insn 137 136 138 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>) [0 __mpn_rshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 138 137 139 24 (parallel [
            (set (reg:DI 179 [ s2_limb ])
                (plus:DI (reg/v:DI 154 [ round_limb ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:283 -1
     (nil))
(insn 139 138 140 24 (set (reg:DI 181)
        (const_int 9007199254740992 [0x20000000000000])) strtod_l.c:283 -1
     (nil))
(insn 140 139 141 24 (parallel [
            (set (reg:DI 180 [ D.13134 ])
                (and:DI (reg:DI 179 [ s2_limb ])
                    (reg:DI 181)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:283 -1
     (nil))
(insn 141 140 142 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 180 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:283 -1
     (nil))
(jump_insn 142 141 344 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 299)
            (pc))) strtod_l.c:283 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 299)
(code_label 344 142 143 25 48 "" [1 uses])
(note 143 344 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 25 (set (reg:SI 92 [ D.13132 ])
        (subreg:SI (reg/v:DI 111 [ round_bit ]) 0)) -1
     (nil))
(insn 145 144 146 25 (set (reg:DI 146 [ D.13134 ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) -1
     (nil))
(insn 146 145 147 25 (parallel [
            (set (reg:DI 182 [ D.13134 ])
                (and:DI (reg:DI 146 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 147 146 148 25 (set (reg:SI 147 [ D.13131 ])
        (subreg:SI (reg:DI 182 [ D.13134 ]) 0)) -1
     (nil))
(code_label 148 147 149 26 31 "" [2 uses])
(note 149 148 150 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 26 (parallel [
            (set (reg:DI 145 [ D.13134 ])
                (lshiftrt:DI (reg/v:DI 154 [ round_limb ])
                    (subreg:QI (reg:SI 92 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:284 -1
     (nil))
(insn 151 150 152 26 (parallel [
            (set (reg:DI 121 [ D.13134 ])
                (and:DI (reg:DI 145 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:284 -1
     (nil))
(insn 152 151 153 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ more_bits ])
            (const_int 0 [0]))) strtod_l.c:285 -1
     (nil))
(insn 153 152 154 26 (set (reg:QI 184 [ D.13130 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:285 -1
     (nil))
(insn 154 153 155 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 184 [ D.13130 ])
            (const_int 0 [0]))) strtod_l.c:285 -1
     (nil))
(jump_insn 155 154 369 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) strtod_l.c:285 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 173)
(note 369 155 156 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 156 369 157 27 (parallel [
            (set (reg:QI 185 [ D.13130 ])
                (and:QI (subreg:QI (reg:DI 145 [ D.13134 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:285 -1
     (nil))
(insn 157 156 158 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 185 [ D.13130 ])
            (const_int 0 [0]))) strtod_l.c:285 -1
     (nil))
(jump_insn 158 157 159 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) strtod_l.c:285 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 173)
(note 159 158 160 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 28 (set (reg:DI 187)
        (const_int 1 [0x1])) strtod_l.c:286 -1
     (nil))
(insn 161 160 162 28 (parallel [
            (set (reg:DI 186 [ D.13134 ])
                (ashift:DI (reg:DI 187)
                    (subreg:QI (reg:SI 92 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:286 -1
     (nil))
(insn 162 161 163 28 (parallel [
            (set (reg:DI 188 [ D.13134 ])
                (plus:DI (reg:DI 186 [ D.13134 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:286 -1
     (nil))
(insn 163 162 164 28 (parallel [
            (set (reg:DI 109 [ D.13134 ])
                (and:DI (reg:DI 188 [ D.13134 ])
                    (reg/v:DI 154 [ round_limb ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:286 -1
     (nil))
(insn 164 163 165 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 109 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:286 -1
     (nil))
(jump_insn 165 164 166 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) strtod_l.c:286 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 173)
(note 166 165 167 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) -1
     (nil))
(insn 168 167 169 29 (set (reg:QI 190)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 169 168 170 29 (set (reg:SI 189 [ D.13130 ])
        (zero_extend:SI (reg:QI 190))) -1
     (nil))
(insn 170 169 17 29 (set (reg:SI 144 [ D.13131 ])
        (reg:SI 189 [ D.13130 ])) -1
     (nil))
(insn 17 170 171 29 (set (reg/v:DI 152 [ exponent ])
        (const_int -1023 [0xfffffffffffffc01])) strtod_l.c:286 -1
     (nil))
(jump_insn 171 17 172 29 (set (pc)
        (label_ref 209)) -1
     (nil)
 -> 209)
(barrier 172 171 173)
(code_label 173 172 174 30 35 "" [3 uses])
(note 174 173 175 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 30 (set (reg:DI 191)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:288 -1
     (nil))
(insn 176 175 177 30 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 191)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:288 -1
     (nil))
(insn 177 176 178 30 (set (reg:DF 193)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:290 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 178 177 179 30 (set (reg:DF 194)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:290 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 179 178 180 30 (set (reg:DF 192 [ force_underflow ])
        (mult:DF (reg:DF 193)
            (reg:DF 194))) strtod_l.c:290 -1
     (nil))
(insn 180 179 181 30 (parallel [
            (asm_operands/v ("") ("") 0 [
                    (reg:DF 192 [ force_underflow ])
                ]
                 [
                    (asm_input:DF ("x") strtod_l.c:290)
                ]
                 [] strtod_l.c:290)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:290 -1
     (nil))
(insn 181 180 182 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) -1
     (nil))
(insn 182 181 183 30 (set (reg:QI 196)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 183 182 184 30 (set (reg:SI 195 [ D.13130 ])
        (zero_extend:SI (reg:QI 196))) -1
     (nil))
(insn 184 183 185 30 (set (reg:SI 144 [ D.13131 ])
        (reg:SI 195 [ D.13130 ])) -1
     (nil))
(jump_insn 185 184 186 30 (set (pc)
        (label_ref 306)) -1
     (nil)
 -> 306)
(barrier 186 185 187)
(code_label 187 186 188 31 26 "" [1 uses])
(note 188 187 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 152 [ exponent ])
            (const_int 1024 [0x400]))) strtod_l.c:294 -1
     (nil))
(jump_insn 190 189 191 31 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) strtod_l.c:294 -1
     (int_list:REG_BR_PROB 6919 (nil))
 -> 266)
(note 191 190 192 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) -1
     (nil))
(insn 193 192 194 32 (set (reg:QI 198)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 194 193 195 32 (set (reg:SI 197 [ D.13130 ])
        (zero_extend:SI (reg:QI 198))) -1
     (nil))
(insn 195 194 196 32 (set (reg:SI 144 [ D.13131 ])
        (reg:SI 197 [ D.13130 ])) -1
     (nil))
(insn 196 195 197 32 (set (reg:SI 92 [ D.13132 ])
        (subreg:SI (reg/v:DI 155 [ round_bit ]) 0)) -1
     (nil))
(insn 197 196 198 32 (parallel [
            (set (reg:DI 145 [ D.13134 ])
                (lshiftrt:DI (reg/v:DI 154 [ round_limb ])
                    (subreg:QI (reg:SI 92 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 198 197 199 32 (set (reg:DI 146 [ D.13134 ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) -1
     (nil))
(insn 199 198 200 32 (parallel [
            (set (reg:DI 199 [ D.13134 ])
                (and:DI (reg:DI 146 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 200 199 308 32 (set (reg:SI 147 [ D.13131 ])
        (subreg:SI (reg:DI 199 [ D.13134 ]) 0)) -1
     (nil))
(code_label 308 200 201 33 46 "" [1 uses])
(note 201 308 202 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ more_bits ])
            (const_int 0 [0]))) strtod_l.c:301 -1
     (nil))
(jump_insn 203 202 204 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 358)
            (pc))) strtod_l.c:301 612 {*jcc_1}
     (int_list:REG_BR_PROB 5217 (nil))
 -> 358)
(note 204 203 205 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 34 (set (reg:DI 201)
        (const_int 1 [0x1])) -1
     (nil))
(insn 206 205 207 34 (parallel [
            (set (reg:DI 200 [ D.13134 ])
                (ashift:DI (reg:DI 201)
                    (subreg:QI (reg:SI 92 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 207 206 208 34 (parallel [
            (set (reg:DI 202 [ D.13134 ])
                (plus:DI (reg:DI 200 [ D.13134 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 208 207 209 34 (parallel [
            (set (reg:DI 109 [ D.13134 ])
                (and:DI (reg:DI 202 [ D.13134 ])
                    (reg/v:DI 154 [ round_limb ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 209 208 210 35 36 "" [1 uses])
(note 210 209 211 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 109 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:301 -1
     (nil))
(insn 212 211 213 35 (set (reg:QI 204)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:301 -1
     (nil))
(insn 213 212 214 35 (set (reg:SI 203 [ D.13130 ])
        (zero_extend:SI (reg:QI 204))) strtod_l.c:301 -1
     (nil))
(insn 214 213 355 35 (set (reg:SI 88 [ D.13131 ])
        (reg:SI 203 [ D.13130 ])) strtod_l.c:301 -1
     (nil))
(jump_insn 355 214 356 35 (set (pc)
        (label_ref 215)) -1
     (nil)
 -> 215)
(barrier 356 355 358)
(code_label 358 356 357 36 50 "" [1 uses])
(note 357 358 18 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 18 357 215 36 (set (reg:SI 88 [ D.13131 ])
        (const_int 1 [0x1])) strtod_l.c:301 -1
     (nil))
(code_label 215 18 216 37 39 "" [1 uses])
(note 216 215 217 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 37 (parallel [
            (set (reg:QI 205 [ D.13130 ])
                (and:QI (subreg:QI (reg:DI 145 [ D.13134 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:297 -1
     (nil))
(insn 218 217 219 37 (set (reg:SI 206 [ D.13131 ])
        (zero_extend:SI (reg:QI 205 [ D.13130 ]))) strtod_l.c:297 -1
     (nil))
(insn 219 218 220 37 (set (reg:SI 37 r8)
        (reg:SI 142 [ D.13131 ])) strtod_l.c:297 -1
     (nil))
(insn 220 219 221 37 (set (reg:SI 2 cx)
        (reg:SI 88 [ D.13131 ])) strtod_l.c:297 -1
     (nil))
(insn 221 220 222 37 (set (reg:SI 1 dx)
        (reg:SI 206 [ D.13131 ])) strtod_l.c:297 -1
     (nil))
(insn 222 221 223 37 (set (reg:SI 4 si)
        (reg:SI 147 [ D.13131 ])) strtod_l.c:297 -1
     (nil))
(insn 223 222 224 37 (set (reg:SI 5 di)
        (reg:SI 144 [ D.13131 ])) strtod_l.c:297 -1
     (nil))
(call_insn/c/i 224 223 225 37 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("round_away") [flags 0x3]  <function_decl 0x2ab61e343ca8 round_away>) [0 round_away S1 A8])
            (const_int 0 [0]))) strtod_l.c:297 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_away") [flags 0x3]  <function_decl 0x2ab61e343ca8 round_away>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 225 224 226 37 (set (reg:QI 128 [ D.13130 ])
        (reg:QI 0 ax)) strtod_l.c:297 -1
     (nil))
(insn 226 225 227 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.13130 ])
            (const_int 0 [0]))) strtod_l.c:297 -1
     (nil))
(jump_insn 227 226 228 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) strtod_l.c:297 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 311)
(note 228 227 229 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 38 (parallel [
            (set (reg/v:DI 137 [ s2_limb ])
                (plus:DI (reg:DI 146 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:447 -1
     (nil))
(insn 230 229 231 38 (set (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])
        (reg/v:DI 137 [ s2_limb ])) ../stdlib/gmp.h:448 -1
     (nil))
(insn 231 230 232 38 (set (reg:DI 208)
        (const_int 9007199254740992 [0x20000000000000])) strtod_l.c:306 -1
     (nil))
(insn 232 231 233 38 (parallel [
            (set (reg:DI 207 [ D.13134 ])
                (and:DI (reg/v:DI 137 [ s2_limb ])
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:306 -1
     (nil))
(insn 233 232 234 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 207 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:306 -1
     (nil))
(jump_insn 234 233 235 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) strtod_l.c:306 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 249)
(note 235 234 236 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 39 (parallel [
            (set (reg/v:DI 131 [ exponent ])
                (plus:DI (reg/v:DI 152 [ exponent ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:311 -1
     (nil))
(insn 237 236 238 39 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) strtod_l.c:312 -1
     (nil))
(insn 238 237 239 39 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:312 -1
     (nil))
(insn 239 238 240 39 (set (reg:DI 4 si)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:312 -1
     (nil))
(insn 240 239 241 39 (set (reg:DI 5 di)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:312 -1
     (nil))
(call_insn 241 240 242 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>) [0 __mpn_rshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:312 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 242 241 243 39 (set (reg:DI 209)
        (const_int 4503599627370496 [0x10000000000000])) strtod_l.c:314 -1
     (nil))
(insn 243 242 244 39 (parallel [
            (set (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])
                (ior:DI (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])
                    (reg:DI 209)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:314 -1
     (nil))
(insn 244 243 245 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 131 [ exponent ])
            (const_int 1025 [0x401]))) strtod_l.c:324 -1
     (nil))
(jump_insn 245 244 248 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) strtod_l.c:324 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 266)
(note 248 245 246 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 246 248 247 40 (set (pc)
        (label_ref 285)) -1
     (nil)
 -> 285)
(barrier 247 246 249)
(code_label 249 247 250 41 41 "" [1 uses])
(note 250 249 251 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 152 [ exponent ])
            (const_int -1023 [0xfffffffffffffc01]))) strtod_l.c:316 -1
     (nil))
(jump_insn 252 251 253 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 257)
            (pc))) strtod_l.c:316 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 257)
(note 253 252 254 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 42 (set (reg:SI 105 [ D.13131 ])
        (subreg:SI (reg/v:DI 152 [ exponent ]) 0)) -1
     (nil))
(jump_insn 255 254 256 42 (set (pc)
        (label_ref:DI 316)) 654 {jump}
     (nil)
 -> 316)
(barrier 256 255 257)
(code_label 257 256 258 43 43 "" [1 uses])
(note 258 257 259 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 43 (set (reg:DI 211)
        (const_int 4503599627370496 [0x10000000000000])) strtod_l.c:317 -1
     (nil))
(insn 260 259 261 43 (parallel [
            (set (reg:DI 210 [ D.13134 ])
                (and:DI (reg/v:DI 137 [ s2_limb ])
                    (reg:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:317 -1
     (nil))
(insn 261 260 262 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 210 [ D.13134 ])
            (const_int 0 [0]))) strtod_l.c:317 -1
     (nil))
(jump_insn 262 261 263 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 362)
            (pc))) strtod_l.c:317 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 362)
(note 263 262 24 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 24 263 264 44 (set (reg:SI 105 [ D.13131 ])
        (const_int -1023 [0xfffffffffffffc01])) strtod_l.c:317 -1
     (nil))
(jump_insn 264 24 265 44 (set (pc)
        (label_ref:DI 316)) 654 {jump}
     (nil)
 -> 316)
(barrier 265 264 266)
(code_label 266 265 267 45 38 "" [2 uses])
(note 267 266 268 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 45 (set (reg:DI 212)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:173 -1
     (nil))
(insn 269 268 270 45 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 212)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:173 -1
     (nil))
(insn 270 269 271 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ negative ])
            (const_int 0 [0]))) strtod_l.c:174 -1
     (nil))
(jump_insn 271 270 272 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 278)
            (pc))) strtod_l.c:174 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 278)
(note 272 271 273 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 46 (set (reg:DF 213)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 274 273 275 46 (set (reg:DF 214)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF -1.79769313486231570814527423731704356798070567525845e+308 [-0x0.fffffffffffff8p+1024])
        (nil)))
(insn 275 274 21 46 (set (reg/v:DF 95 [ result ])
        (mult:DF (reg:DF 213)
            (reg:DF 214))) strtod_l.c:174 -1
     (nil))
(insn 21 275 276 46 (set (reg:DF 93 [ D.13133 ])
        (reg/v:DF 95 [ result ])) strtod_l.c:174 -1
     (nil))
(jump_insn 276 21 277 46 (set (pc)
        (label_ref 294)) strtod_l.c:174 -1
     (nil)
 -> 294)
(barrier 277 276 278)
(code_label 278 277 279 47 45 "" [1 uses])
(note 279 278 280 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 47 (set (reg:DF 215)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 281 280 282 47 (set (reg:DF 216)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 282 281 20 47 (set (reg/v:DF 139 [ result ])
        (mult:DF (reg:DF 215)
            (reg:DF 216))) strtod_l.c:174 -1
     (nil))
(insn 20 282 283 47 (set (reg:DF 93 [ D.13133 ])
        (reg/v:DF 139 [ result ])) strtod_l.c:174 -1
     (nil))
(jump_insn 283 20 284 47 (set (pc)
        (label_ref 294)) strtod_l.c:174 -1
     (nil)
 -> 294)
(barrier 284 283 285)
(code_label 285 284 286 48 42 "" [1 uses])
(note 286 285 287 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 316 48 (set (reg:SI 105 [ D.13131 ])
        (subreg:SI (reg/v:DI 131 [ exponent ]) 0)) -1
     (nil))
(code_label 316 287 288 49 47 "" [4 uses])
(note 288 316 289 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 49 (set (reg:SI 1 dx)
        (reg/v:SI 153 [ negative ])) strtod_l.c:328 -1
     (nil))
(insn 290 289 291 49 (set (reg:SI 4 si)
        (reg:SI 105 [ D.13131 ])) strtod_l.c:328 -1
     (nil))
(insn 291 290 292 49 (set (reg:DI 5 di)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:328 -1
     (nil))
(call_insn 292 291 293 49 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("__mpn_construct_double") [flags 0x41]  <function_decl 0x2ab61e39f1b0 __mpn_construct_double>) [0 __mpn_construct_double S1 A8])
            (const_int 0 [0]))) strtod_l.c:328 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_construct_double") [flags 0x41]  <function_decl 0x2ab61e39f1b0 __mpn_construct_double>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 293 292 294 49 (set (reg:DF 93 [ D.13133 ])
        (reg:DF 21 xmm0)) strtod_l.c:328 -1
     (nil))
(code_label 294 293 295 50 29 "" [4 uses])
(note 295 294 296 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 296 295 297 50 (set (reg:DF 150 [ <retval> ])
        (reg:DF 93 [ D.13133 ])) -1
     (nil))
(jump_insn 297 296 298 50 (set (pc)
        (label_ref 347)) -1
     (nil)
 -> 347)
(barrier 298 297 299)
(code_label 299 298 300 51 34 "" [1 uses])
(note 300 299 301 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 51 (set (reg:SI 92 [ D.13132 ])
        (subreg:SI (reg/v:DI 111 [ round_bit ]) 0)) -1
     (nil))
(insn 302 301 303 51 (parallel [
            (set (reg:DI 145 [ D.13134 ])
                (lshiftrt:DI (reg/v:DI 154 [ round_limb ])
                    (subreg:QI (reg:SI 92 [ D.13132 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 303 302 304 51 (set (reg:DI 146 [ D.13134 ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) -1
     (nil))
(insn 304 303 305 51 (parallel [
            (set (reg:DI 218 [ D.13134 ])
                (and:DI (reg:DI 146 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 305 304 306 51 (set (reg:SI 147 [ D.13131 ])
        (subreg:SI (reg:DI 218 [ D.13134 ]) 0)) -1
     (nil))
(code_label 306 305 307 52 37 "" [1 uses])
(note 307 306 16 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 16 307 309 52 (set (reg/v:DI 152 [ exponent ])
        (const_int -1023 [0xfffffffffffffc01])) strtod_l.c:219 -1
     (nil))
(jump_insn 309 16 310 52 (set (pc)
        (label_ref 308)) -1
     (nil)
 -> 308)
(barrier 310 309 311)
(code_label 311 310 312 53 40 "" [1 uses])
(note 312 311 313 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 359 53 (set (reg:SI 105 [ D.13131 ])
        (subreg:SI (reg/v:DI 152 [ exponent ]) 0)) -1
     (nil))
(jump_insn 359 313 360 53 (set (pc)
        (label_ref:DI 316)) 654 {jump}
     (nil)
 -> 316)
(barrier 360 359 362)
(code_label 362 360 361 54 51 "" [1 uses])
(note 361 362 23 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 23 361 317 54 (set (reg:SI 105 [ D.13131 ])
        (const_int -1022 [0xfffffffffffffc02])) -1
     (nil))
(jump_insn 317 23 318 54 (set (pc)
        (label_ref 316)) -1
     (nil)
 -> 316)
(barrier 318 317 319)
(code_label 319 318 320 56 32 "" [1 uses])
(note 320 319 321 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 56 (set (reg/v:DI 154 [ round_limb ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) strtod_l.c:272 -1
     (nil))
(insn 322 321 323 56 (set (reg:SI 2 cx)
        (subreg:SI (reg/v:DI 96 [ shift ]) 0)) strtod_l.c:274 -1
     (nil))
(insn 323 322 324 56 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:274 -1
     (nil))
(insn 324 323 325 56 (set (reg:DI 4 si)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(insn 325 324 326 56 (set (reg:DI 5 di)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(call_insn 326 325 327 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>) [0 __mpn_rshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 327 326 328 56 (set (reg:DI 220)
        (const_int -1023 [0xfffffffffffffc01])) -1
     (nil))
(insn 328 327 329 56 (parallel [
            (set (reg:DI 219 [ round_bit ])
                (minus:DI (reg:DI 220)
                    (reg/v:DI 152 [ exponent ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 329 328 330 56 (set (reg:SI 92 [ D.13132 ])
        (subreg:SI (reg:DI 219 [ round_bit ]) 0)) -1
     (nil))
(insn 330 329 331 56 (set (reg:DI 146 [ D.13134 ])
        (mem:DI (reg/v/f:DI 151 [ retval ]) [3 *retval_48(D)+0 S8 A128])) -1
     (nil))
(insn 331 330 332 56 (parallel [
            (set (reg:DI 221 [ D.13134 ])
                (and:DI (reg:DI 146 [ D.13134 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 332 331 333 56 (set (reg:SI 147 [ D.13131 ])
        (subreg:SI (reg:DI 221 [ D.13134 ]) 0)) -1
     (nil))
(jump_insn 333 332 334 56 (set (pc)
        (label_ref 148)) -1
     (nil)
 -> 148)
(barrier 334 333 335)
(code_label 335 334 336 57 33 "" [1 uses])
(note 336 335 337 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 57 (set (reg:DI 222)
        (const_int -1023 [0xfffffffffffffc01])) strtod_l.c:273 -1
     (nil))
(insn 338 337 339 57 (parallel [
            (set (reg/v:DI 111 [ round_bit ])
                (minus:DI (reg:DI 222)
                    (reg/v:DI 152 [ exponent ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:273 -1
     (nil))
(insn 339 338 340 57 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) strtod_l.c:274 -1
     (nil))
(insn 340 339 341 57 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:274 -1
     (nil))
(insn 341 340 342 57 (set (reg:DI 4 si)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(insn 342 341 343 57 (set (reg:DI 5 di)
        (reg/v/f:DI 151 [ retval ])) strtod_l.c:274 -1
     (nil))
(call_insn 343 342 345 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>) [0 __mpn_rshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(jump_insn 345 343 346 57 (set (pc)
        (label_ref 344)) strtod_l.c:274 -1
     (nil)
 -> 344)
(barrier 346 345 347)
(code_label 347 346 350 58 19 "" [1 uses])
(note 350 347 348 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 348 350 349 58 (set (reg/i:DF 21 xmm0)
        (reg:DF 150 [ <retval> ])) strtod_l.c:329 -1
     (nil))
(insn 349 348 0 58 (use (reg/i:DF 21 xmm0)) strtod_l.c:329 -1
     (nil))

;; Function str_to_mpn.isra.0 (str_to_mpn.isra.0, funcdef_no=108, decl_uid=13029, cgraph_uid=0, symbol_order=147)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44
Edge 13->17 redirected to 53
Edge 21->44 redirected to 54


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 31->32 to 54 failed.


try_optimize_cfg iteration 2

Forwarding edge 31->32 to 54 failed.


;;
;; Full RTL generated for this function:
;;
(note 47 0 70 NOTE_INSN_DELETED)
(note 70 47 48 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 48 70 49 2 (set (reg/v/f:DI 186 [ str ])
        (reg:DI 5 di [ str ])) strtod_l.c:338 -1
     (nil))
(insn 49 48 50 2 (set (reg/v:SI 187 [ digcnt ])
        (reg:SI 4 si [ digcnt ])) strtod_l.c:338 -1
     (nil))
(insn 50 49 51 2 (set (reg/v/f:DI 188 [ n ])
        (reg:DI 1 dx [ n ])) strtod_l.c:338 -1
     (nil))
(insn 51 50 52 2 (set (reg/v/f:DI 189 [ nsize ])
        (reg:DI 2 cx [ nsize ])) strtod_l.c:338 -1
     (nil))
(insn 52 51 53 2 (set (reg/v/f:DI 190 [ exponent ])
        (reg:DI 37 r8 [ exponent ])) strtod_l.c:338 -1
     (nil))
(insn 53 52 54 2 (set (reg/v:DI 191 [ decimal_len ])
        (reg:DI 38 r9 [ decimal_len ])) strtod_l.c:338 -1
     (nil))
(insn 54 53 55 2 (set (reg/v/f:DI 192 [ thousands ])
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [2 thousands+0 S8 A64])) strtod_l.c:338 -1
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [2 thousands+0 S8 A64])
        (nil)))
(note 55 54 72 2 NOTE_INSN_FUNCTION_BEG)
(insn 72 55 73 2 (set (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
        (const_int 0 [0])) strtod_l.c:351 -1
     (nil))
(insn 73 72 74 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 187 [ digcnt ])
            (const_int 0 [0]))) strtod_l.c:352 -1
     (nil))
(jump_insn 74 73 75 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) strtod_l.c:352 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 78)
(note 75 74 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 56 75 57 4 (set (reg/v:DI 158 [ low ])
        (const_int 0 [0])) strtod_l.c:352 -1
     (nil))
(insn 57 56 76 4 (set (reg/v:SI 159 [ cnt ])
        (const_int 0 [0])) strtod_l.c:352 -1
     (nil))
(jump_insn 76 57 77 4 (set (pc)
        (label_ref 157)) strtod_l.c:352 -1
     (nil)
 -> 157)
(barrier 77 76 78)
(code_label 78 77 79 5 69 "" [1 uses])
(note 79 78 80 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 5 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11267") [flags 0x2]  <var_decl 0x2ab61e412990 __PRETTY_FUNCTION__>)) strtod_l.c:352 -1
     (nil))
(insn 81 80 82 5 (set (reg:SI 1 dx)
        (const_int 352 [0x160])) strtod_l.c:352 -1
     (nil))
(insn 82 81 83 5 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:352 -1
     (nil))
(insn 83 82 84 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ab61e6ab7e0 *.LC7>)) strtod_l.c:352 -1
     (nil))
(call_insn 84 83 85 5 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:352 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 85 84 214)
(code_label 214 85 86 6 85 "" [1 uses])
(note 86 214 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 159 [ cnt ])
            (const_int 19 [0x13]))) strtod_l.c:355 -1
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) strtod_l.c:355 -1
     (int_list:REG_BR_PROB 7068 (nil))
 -> 155)
(note 89 88 90 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 7 (set (reg:DI 133 [ D.13185 ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:357 -1
     (nil))
(insn 91 90 92 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 133 [ D.13185 ])
            (const_int 0 [0]))) strtod_l.c:357 -1
     (nil))
(jump_insn 92 91 93 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) strtod_l.c:357 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 98)
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (mem:DI (reg/v/f:DI 188 [ n ]) [3 *n_6(D)+0 S8 A128])
        (reg/v:DI 158 [ low ])) strtod_l.c:359 -1
     (nil))
(insn 95 94 60 8 (set (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
        (const_int 1 [0x1])) strtod_l.c:360 -1
     (nil))
(insn 60 95 61 8 (set (reg/v:DI 158 [ low ])
        (const_int 0 [0])) strtod_l.c:375 -1
     (nil))
(insn 61 60 96 8 (set (reg/v:SI 159 [ cnt ])
        (const_int 0 [0])) strtod_l.c:374 -1
     (nil))
(jump_insn 96 61 97 8 (set (pc)
        (label_ref 155)) strtod_l.c:360 -1
     (nil)
 -> 155)
(barrier 97 96 98)
(code_label 98 97 99 9 72 "" [1 uses])
(note 99 98 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 9 (set (reg:DI 2 cx)
        (const_int -8446744073709551616 [0x8ac7230489e80000])) strtod_l.c:365 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 1 dx)
        (reg:DI 133 [ D.13185 ])) strtod_l.c:365 -1
     (nil))
(insn 102 101 103 9 (set (reg:DI 4 si)
        (reg/v/f:DI 188 [ n ])) strtod_l.c:365 -1
     (nil))
(insn 103 102 104 9 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ n ])) strtod_l.c:365 -1
     (nil))
(call_insn 104 103 105 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_mul_1") [flags 0x41]  <function_decl 0x2ab61e386d80 __mpn_mul_1>) [0 __mpn_mul_1 S1 A8])
            (const_int 0 [0]))) strtod_l.c:365 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_mul_1") [flags 0x41]  <function_decl 0x2ab61e386d80 __mpn_mul_1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 105 104 106 9 (set (reg/v:DI 134 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:365 -1
     (nil))
(insn 106 105 107 9 (set (reg/v:DI 141 [ s1_size ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:366 -1
     (nil))
(insn 107 106 108 9 (set (reg/v:DI 135 [ x ])
        (mem:DI (reg/v/f:DI 188 [ n ]) [3 MEM[(const mp_limb_t *)n_6(D)]+0 S8 A128])) ../stdlib/gmp.h:446 -1
     (nil))
(insn 108 107 109 9 (parallel [
            (set (reg/v:DI 136 [ s2_limb ])
                (plus:DI (reg/v:DI 135 [ x ])
                    (reg/v:DI 158 [ low ])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:447 -1
     (nil))
(insn 109 108 110 9 (set (mem:DI (reg/v/f:DI 188 [ n ]) [3 *n_6(D)+0 S8 A128])
        (reg/v:DI 136 [ s2_limb ])) ../stdlib/gmp.h:448 -1
     (nil))
(insn 110 109 111 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ x ])
            (reg/v:DI 136 [ s2_limb ]))) ../stdlib/gmp.h:449 -1
     (nil))
(jump_insn 111 110 112 9 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 126)
            (pc))) ../stdlib/gmp.h:449 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 126)
(code_label 112 111 113 10 74 ("fin") [1 uses])
(note 113 112 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 113 114 10 (set (reg:DI 142 [ D.13186 ])
        (const_int 0 [0])) ../stdlib/gmp.h:469 -1
     (nil))
(jump_insn 114 59 115 10 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
(barrier 115 114 132)
(code_label 132 115 116 11 77 "" [1 uses])
(note 116 132 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 11 (parallel [
            (set (reg/v/f:DI 137 [ s1_ptr ])
                (plus:DI (reg/v/f:DI 137 [ s1_ptr ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:453 -1
     (nil))
(insn 118 117 119 11 (set (reg:DI 193)
        (mem:DI (plus:DI (reg/v/f:DI 137 [ s1_ptr ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_13, offset: -8B]+0 S8 A64])) ../stdlib/gmp.h:453 -1
     (nil))
(insn 119 118 120 11 (parallel [
            (set (reg/v:DI 139 [ x ])
                (plus:DI (reg:DI 193)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:453 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 137 [ s1_ptr ])
                    (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_13, offset: -8B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 120 119 121 11 (set (mem:DI (plus:DI (reg/v/f:DI 137 [ s1_ptr ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_13, offset: -8B]+0 S8 A64])
        (reg/v:DI 139 [ x ])) ../stdlib/gmp.h:454 -1
     (nil))
(insn 121 120 122 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 139 [ x ])
            (const_int 0 [0]))) ../stdlib/gmp.h:455 -1
     (nil))
(jump_insn 122 121 125 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) ../stdlib/gmp.h:455 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 112)
(note 125 122 123 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 123 125 124 12 (set (pc)
        (label_ref 129)) ../stdlib/gmp.h:455 -1
     (nil)
 -> 129)
(barrier 124 123 126)
(code_label 126 124 127 13 73 "" [1 uses])
(note 127 126 128 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 13 (parallel [
            (set (reg/v/f:DI 137 [ s1_ptr ])
                (plus:DI (reg/v/f:DI 188 [ n ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:446 -1
     (nil))
(code_label 129 128 130 14 76 "" [1 uses])
(note 130 129 131 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 133 14 (parallel [
            (set (reg/v:DI 141 [ s1_size ])
                (plus:DI (reg/v:DI 141 [ s1_size ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:451 -1
     (nil))
(insn 133 131 134 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 141 [ s1_size ])
            (const_int 0 [0]))) ../stdlib/gmp.h:451 -1
     (nil))
(jump_insn 134 133 325 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) ../stdlib/gmp.h:451 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 132)
(note 325 134 58 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 58 325 135 15 (set (reg:DI 142 [ D.13186 ])
        (const_int 1 [0x1])) ../stdlib/gmp.h:459 -1
     (nil))
(code_label 135 58 136 16 75 "" [1 uses])
(note 136 135 137 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 16 (parallel [
            (set (reg/v:DI 143 [ cy ])
                (plus:DI (reg/v:DI 134 [ cy ])
                    (reg:DI 142 [ D.13186 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:366 -1
     (nil))
(insn 138 137 139 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 143 [ cy ])
            (const_int 0 [0]))) strtod_l.c:367 -1
     (nil))
(jump_insn 139 138 140 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 329)
            (pc))) strtod_l.c:367 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 329)
(note 140 139 141 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 17 (set (reg:DI 144 [ D.13185 ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:369 -1
     (nil))
(insn 142 141 143 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 144 [ D.13185 ])
            (const_int 58 [0x3a]))) strtod_l.c:369 -1
     (nil))
(jump_insn 143 142 144 17 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 151)
            (pc))) strtod_l.c:369 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 151)
(note 144 143 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 18 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11267") [flags 0x2]  <var_decl 0x2ab61e412990 __PRETTY_FUNCTION__>)) strtod_l.c:369 -1
     (nil))
(insn 146 145 147 18 (set (reg:SI 1 dx)
        (const_int 369 [0x171])) strtod_l.c:369 -1
     (nil))
(insn 147 146 148 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:369 -1
     (nil))
(insn 148 147 149 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ab61e6ab870 *.LC8>)) strtod_l.c:369 -1
     (nil))
(call_insn 149 148 150 18 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:369 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 150 149 151)
(code_label 151 150 152 19 78 "" [1 uses])
(note 152 151 153 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 19 (set (mem:DI (plus:DI (mult:DI (reg:DI 144 [ D.13185 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 188 [ n ])) [3 *_36+0 S8 A64])
        (reg/v:DI 143 [ cy ])) strtod_l.c:370 -1
     (nil))
(insn 154 153 64 19 (parallel [
            (set (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
                (plus:DI (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:371 -1
     (nil))
(insn 64 154 65 19 (set (reg/v:DI 158 [ low ])
        (const_int 0 [0])) strtod_l.c:375 -1
     (nil))
(insn 65 64 326 19 (set (reg/v:SI 159 [ cnt ])
        (const_int 0 [0])) strtod_l.c:374 -1
     (nil))
(jump_insn 326 65 327 19 (set (pc)
        (label_ref 155)) -1
     (nil)
 -> 155)
(barrier 327 326 329)
(code_label 329 327 328 20 96 "" [1 uses])
(note 328 329 62 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 62 328 63 20 (set (reg/v:DI 158 [ low ])
        (const_int 0 [0])) strtod_l.c:375 -1
     (nil))
(insn 63 62 155 20 (set (reg/v:SI 159 [ cnt ])
        (const_int 0 [0])) strtod_l.c:374 -1
     (nil))
(code_label 155 63 156 21 71 "" [3 uses])
(note 156 155 157 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(code_label 157 156 158 22 70 "" [1 uses])
(note 158 157 159 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 22 (set (reg:QI 150 [ D.13188 ])
        (mem:QI (reg/v/f:DI 186 [ str ]) [0 *str_111+0 S1 A8])) strtod_l.c:386 -1
     (nil))
(insn 160 159 161 22 (parallel [
            (set (reg:QI 194 [ D.13189 ])
                (plus:QI (reg:QI 150 [ D.13188 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:386 -1
     (nil))
(insn 161 160 162 22 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 194 [ D.13189 ])
            (const_int 9 [0x9]))) strtod_l.c:386 -1
     (nil))
(jump_insn 162 161 163 22 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) strtod_l.c:386 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 201)
(note 163 162 164 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 192 [ thousands ])
            (const_int 0 [0]))) strtod_l.c:389 -1
     (nil))
(jump_insn 165 164 166 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) strtod_l.c:389 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 197)
(note 166 165 167 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 150 [ D.13188 ])
            (mem:QI (reg/v/f:DI 192 [ thousands ]) [0 *thousands_43(D)+0 S1 A8]))) strtod_l.c:389 -1
     (nil))
(jump_insn 168 167 169 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) strtod_l.c:389 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 197)
(note 169 168 170 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 25 (set (reg:QI 183 [ D.13188 ])
        (mem:QI (plus:DI (reg/v/f:DI 192 [ thousands ])
                (const_int 1 [0x1])) [0 MEM[(const char *)thousands_43(D) + 1B]+0 S1 A8])) strtod_l.c:390 -1
     (nil))
(insn 171 170 172 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.13188 ])
            (const_int 0 [0]))) strtod_l.c:390 -1
     (nil))
(jump_insn 172 171 173 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 331)
            (pc))) strtod_l.c:390 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 331)
(note 173 172 174 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.13188 ])
            (mem:QI (plus:DI (reg/v/f:DI 186 [ str ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)str_111 + 1B]+0 S1 A8]))) strtod_l.c:391 -1
     (nil))
(jump_insn 175 174 178 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) strtod_l.c:391 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 197)
(note 178 175 66 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 66 178 176 27 (set (reg:DI 140 [ ivtmp.172 ])
        (const_int 2 [0x2])) strtod_l.c:391 -1
     (nil))
(jump_insn 176 66 177 27 (set (pc)
        (label_ref 186)) strtod_l.c:391 -1
     (nil)
 -> 186)
(barrier 177 176 191)
(code_label 191 177 179 28 84 "" [1 uses])
(note 179 191 180 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 28 (parallel [
            (set (reg:DI 140 [ ivtmp.172 ])
                (plus:DI (reg:DI 140 [ ivtmp.172 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 181 180 182 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 186 [ str ])
                        (reg:DI 140 [ ivtmp.172 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: str_111, index: ivtmp.172_23, offset: -1B]+0 S1 A8])
            (reg:QI 155 [ D.13188 ]))) strtod_l.c:391 -1
     (nil))
(jump_insn 182 181 185 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) strtod_l.c:391 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 197)
(note 185 182 183 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 183 185 184 29 (set (pc)
        (label_ref 188)) strtod_l.c:391 -1
     (nil)
 -> 188)
(barrier 184 183 186)
(code_label 186 184 187 30 82 "" [1 uses])
(note 187 186 188 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(code_label 188 187 189 31 83 "" [1 uses])
(note 189 188 190 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 192 31 (set (reg:QI 155 [ D.13188 ])
        (mem:QI (plus:DI (reg/v/f:DI 192 [ thousands ])
                (reg:DI 140 [ ivtmp.172 ])) [0 MEM[base: thousands_43(D), index: ivtmp.172_16, offset: 0B]+0 S1 A8])) strtod_l.c:390 -1
     (nil))
(insn 192 190 193 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 155 [ D.13188 ])
            (const_int 0 [0]))) strtod_l.c:390 -1
     (nil))
(jump_insn 193 192 196 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 191)
            (pc))) strtod_l.c:390 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 191)
(note 196 193 194 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 194 196 195 32 (set (pc)
        (label_ref 315)) strtod_l.c:390 -1
     (nil)
 -> 315)
(barrier 195 194 197)
(code_label 197 195 198 33 80 "" [4 uses])
(note 198 197 199 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 199 198 200 33 (parallel [
            (set (reg/v/f:DI 186 [ str ])
                (plus:DI (reg/v/f:DI 186 [ str ])
                    (reg/v:DI 191 [ decimal_len ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:396 -1
     (nil))
(insn 200 199 201 33 (set (reg:QI 150 [ D.13188 ])
        (mem:QI (reg/v/f:DI 186 [ str ]) [0 *str_54+0 S1 A8])) -1
     (nil))
(code_label 201 200 202 34 79 "" [2 uses])
(note 202 201 203 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 34 (parallel [
            (set (reg/v/f:DI 186 [ str ])
                (plus:DI (reg/v/f:DI 186 [ str ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:399 -1
     (nil))
(insn 204 203 205 34 (set (reg:DI 195)
        (reg/v:DI 158 [ low ])) -1
     (nil))
(insn 205 204 206 34 (parallel [
            (set (reg:DI 196)
                (ashift:DI (reg:DI 195)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 206 205 207 34 (parallel [
            (set (reg:DI 197 [ D.13186 ])
                (plus:DI (reg:DI 196)
                    (reg/v:DI 158 [ low ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 158 [ low ])
            (const_int 5 [0x5]))
        (nil)))
(insn 207 206 208 34 (parallel [
            (set (reg:DI 198)
                (ashift:DI (reg:DI 197 [ D.13186 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 208 207 209 34 (set (reg:DI 197 [ D.13186 ])
        (reg:DI 198)) -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 158 [ low ])
            (const_int 10 [0xa]))
        (nil)))
(insn 209 208 210 34 (parallel [
            (set (reg:DI 182 [ D.13186 ])
                (plus:DI (reg:DI 197 [ D.13186 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 210 209 211 34 (set (reg:DI 199 [ D.13186 ])
        (sign_extend:DI (reg:QI 150 [ D.13188 ]))) strtod_l.c:399 -1
     (nil))
(insn 211 210 212 34 (parallel [
            (set (reg/v:DI 158 [ low ])
                (plus:DI (reg:DI 199 [ D.13186 ])
                    (reg:DI 182 [ D.13186 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:399 -1
     (nil))
(insn 212 211 213 34 (parallel [
            (set (reg/v:SI 159 [ cnt ])
                (plus:SI (reg/v:SI 159 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:400 -1
     (nil))
(insn 213 212 215 34 (parallel [
            (set (reg/v:SI 187 [ digcnt ])
                (plus:SI (reg/v:SI 187 [ digcnt ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:402 -1
     (nil))
(insn 215 213 216 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 187 [ digcnt ])
            (const_int 0 [0]))) strtod_l.c:402 -1
     (nil))
(jump_insn 216 215 217 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 214)
            (pc))) strtod_l.c:402 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 214)
(note 217 216 218 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 35 (set (reg:DI 160 [ D.13185 ])
        (mem:DI (reg/v/f:DI 190 [ exponent ]) [3 *exponent_67(D)+0 S8 A64])) strtod_l.c:404 -1
     (nil))
(insn 219 218 220 35 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 160 [ D.13185 ])
            (const_int 0 [0]))) strtod_l.c:404 -1
     (nil))
(jump_insn 220 219 221 35 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) strtod_l.c:404 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 237)
(note 221 220 222 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 36 (set (reg:SI 201)
        (const_int 19 [0x13])) strtod_l.c:404 -1
     (nil))
(insn 223 222 224 36 (parallel [
            (set (reg:SI 200 [ D.13190 ])
                (minus:SI (reg:SI 201)
                    (reg/v:SI 159 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:404 -1
     (nil))
(insn 224 223 225 36 (set (reg:DI 202 [ D.13185 ])
        (sign_extend:DI (reg:SI 200 [ D.13190 ]))) strtod_l.c:404 -1
     (nil))
(insn 225 224 226 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 160 [ D.13185 ])
            (reg:DI 202 [ D.13185 ]))) strtod_l.c:404 -1
     (nil))
(jump_insn 226 225 227 36 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 237)
            (pc))) strtod_l.c:404 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 237)
(note 227 226 228 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 37 (set (reg/f:DI 203)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_tens_in_limb") [flags 0x40]  <var_decl 0x2ab61e350f30 _tens_in_limb>)
                    ] UNSPEC_GOTPCREL)) [7  S8 A8])) strtod_l.c:406 -1
     (nil))
(insn 229 228 230 37 (parallel [
            (set (reg/v:DI 158 [ low ])
                (mult:DI (reg/v:DI 158 [ low ])
                    (mem/u:DI (plus:DI (mult:DI (reg:DI 160 [ D.13185 ])
                                (const_int 8 [0x8]))
                            (reg/f:DI 203)) [3 _tens_in_limb S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:406 -1
     (nil))
(insn 230 229 231 37 (set (reg/f:DI 204)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_tens_in_limb") [flags 0x40]  <var_decl 0x2ab61e350f30 _tens_in_limb>)
                    ] UNSPEC_GOTPCREL)) [7  S8 A8])) strtod_l.c:407 -1
     (nil))
(insn 231 230 232 37 (set (reg:DI 205 [ D.13185 ])
        (sign_extend:DI (reg/v:SI 159 [ cnt ]))) strtod_l.c:407 -1
     (nil))
(insn 232 231 233 37 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg:DI 205 [ D.13185 ])
                    (reg:DI 160 [ D.13185 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:407 -1
     (nil))
(insn 233 232 234 37 (set (reg/v:DI 166 [ start ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 206)
                    (const_int 8 [0x8]))
                (reg/f:DI 204)) [3 _tens_in_limb S8 A64])) strtod_l.c:407 -1
     (nil))
(insn 234 233 235 37 (set (mem:DI (reg/v/f:DI 190 [ exponent ]) [3 *exponent_67(D)+0 S8 A64])
        (const_int 0 [0])) strtod_l.c:408 -1
     (nil))
(jump_insn 235 234 236 37 (set (pc)
        (label_ref 242)) strtod_l.c:408 -1
     (nil)
 -> 242)
(barrier 236 235 237)
(code_label 237 236 238 38 86 "" [2 uses])
(note 238 237 239 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 38 (set (reg/f:DI 207)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("_tens_in_limb") [flags 0x40]  <var_decl 0x2ab61e350f30 _tens_in_limb>)
                    ] UNSPEC_GOTPCREL)) [7  S8 A8])) strtod_l.c:411 -1
     (nil))
(insn 240 239 241 38 (set (reg:DI 208)
        (sign_extend:DI (reg/v:SI 159 [ cnt ]))) strtod_l.c:411 -1
     (nil))
(insn 241 240 242 38 (set (reg/v:DI 166 [ start ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 208)
                    (const_int 8 [0x8]))
                (reg/f:DI 207)) [3 _tens_in_limb S8 A64])) strtod_l.c:411 -1
     (nil))
(code_label 242 241 243 39 87 "" [1 uses])
(note 243 242 244 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 39 (set (reg:DI 167 [ D.13185 ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:413 -1
     (nil))
(insn 245 244 246 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 167 [ D.13185 ])
            (const_int 0 [0]))) strtod_l.c:413 -1
     (nil))
(jump_insn 246 245 247 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 252)
            (pc))) strtod_l.c:413 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 252)
(note 247 246 248 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 40 (set (mem:DI (reg/v/f:DI 188 [ n ]) [3 *n_6(D)+0 S8 A128])
        (reg/v:DI 158 [ low ])) strtod_l.c:415 -1
     (nil))
(insn 249 248 250 40 (set (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
        (const_int 1 [0x1])) strtod_l.c:416 -1
     (nil))
(jump_insn 250 249 251 40 (set (pc)
        (label_ref 310)) strtod_l.c:416 -1
     (nil)
 -> 310)
(barrier 251 250 252)
(code_label 252 251 253 41 88 "" [1 uses])
(note 253 252 254 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 41 (set (reg:DI 2 cx)
        (reg/v:DI 166 [ start ])) strtod_l.c:421 -1
     (nil))
(insn 255 254 256 41 (set (reg:DI 1 dx)
        (reg:DI 167 [ D.13185 ])) strtod_l.c:421 -1
     (nil))
(insn 256 255 257 41 (set (reg:DI 4 si)
        (reg/v/f:DI 188 [ n ])) strtod_l.c:421 -1
     (nil))
(insn 257 256 258 41 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ n ])) strtod_l.c:421 -1
     (nil))
(call_insn 258 257 259 41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_mul_1") [flags 0x41]  <function_decl 0x2ab61e386d80 __mpn_mul_1>) [0 __mpn_mul_1 S1 A8])
            (const_int 0 [0]))) strtod_l.c:421 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_mul_1") [flags 0x41]  <function_decl 0x2ab61e386d80 __mpn_mul_1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 259 258 260 41 (set (reg/v:DI 168 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:421 -1
     (nil))
(insn 260 259 261 41 (set (reg/v:DI 174 [ s1_size ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:422 -1
     (nil))
(insn 261 260 262 41 (set (reg/v:DI 169 [ x ])
        (mem:DI (reg/v/f:DI 188 [ n ]) [3 MEM[(const mp_limb_t *)n_6(D)]+0 S8 A128])) ../stdlib/gmp.h:446 -1
     (nil))
(insn 262 261 263 41 (parallel [
            (set (reg/v:DI 170 [ s2_limb ])
                (plus:DI (reg/v:DI 158 [ low ])
                    (reg/v:DI 169 [ x ])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:447 -1
     (nil))
(insn 263 262 264 41 (set (mem:DI (reg/v/f:DI 188 [ n ]) [3 *n_6(D)+0 S8 A128])
        (reg/v:DI 170 [ s2_limb ])) ../stdlib/gmp.h:448 -1
     (nil))
(insn 264 263 265 41 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 169 [ x ])
            (reg/v:DI 170 [ s2_limb ]))) ../stdlib/gmp.h:449 -1
     (nil))
(jump_insn 265 264 266 41 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 280)
            (pc))) ../stdlib/gmp.h:449 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 280)
(code_label 266 265 267 42 91 ("fin") [1 uses])
(note 267 266 68 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 68 267 268 42 (set (reg:DI 175 [ D.13186 ])
        (const_int 0 [0])) ../stdlib/gmp.h:469 -1
     (nil))
(jump_insn 268 68 269 42 (set (pc)
        (label_ref 289)) -1
     (nil)
 -> 289)
(barrier 269 268 286)
(code_label 286 269 270 43 94 "" [1 uses])
(note 270 286 271 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 43 (parallel [
            (set (reg/v/f:DI 171 [ s1_ptr ])
                (plus:DI (reg/v/f:DI 171 [ s1_ptr ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:453 -1
     (nil))
(insn 272 271 273 43 (set (reg:DI 209)
        (mem:DI (plus:DI (reg/v/f:DI 171 [ s1_ptr ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_86, offset: -8B]+0 S8 A64])) ../stdlib/gmp.h:453 -1
     (nil))
(insn 273 272 274 43 (parallel [
            (set (reg/v:DI 173 [ x ])
                (plus:DI (reg:DI 209)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:453 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 171 [ s1_ptr ])
                    (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_86, offset: -8B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 274 273 275 43 (set (mem:DI (plus:DI (reg/v/f:DI 171 [ s1_ptr ])
                (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: s1_ptr_86, offset: -8B]+0 S8 A64])
        (reg/v:DI 173 [ x ])) ../stdlib/gmp.h:454 -1
     (nil))
(insn 275 274 276 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 173 [ x ])
            (const_int 0 [0]))) ../stdlib/gmp.h:455 -1
     (nil))
(jump_insn 276 275 279 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 266)
            (pc))) ../stdlib/gmp.h:455 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 266)
(note 279 276 277 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 277 279 278 44 (set (pc)
        (label_ref 283)) ../stdlib/gmp.h:455 -1
     (nil)
 -> 283)
(barrier 278 277 280)
(code_label 280 278 281 45 90 "" [1 uses])
(note 281 280 282 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 45 (parallel [
            (set (reg/v/f:DI 171 [ s1_ptr ])
                (plus:DI (reg/v/f:DI 188 [ n ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:446 -1
     (nil))
(code_label 283 282 284 46 93 "" [1 uses])
(note 284 283 285 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 287 46 (parallel [
            (set (reg/v:DI 174 [ s1_size ])
                (plus:DI (reg/v:DI 174 [ s1_size ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ../stdlib/gmp.h:451 -1
     (nil))
(insn 287 285 288 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 174 [ s1_size ])
            (const_int 0 [0]))) ../stdlib/gmp.h:451 -1
     (nil))
(jump_insn 288 287 332 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) ../stdlib/gmp.h:451 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 286)
(note 332 288 67 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 67 332 289 47 (set (reg:DI 175 [ D.13186 ])
        (const_int 1 [0x1])) ../stdlib/gmp.h:459 -1
     (nil))
(code_label 289 67 290 48 92 "" [1 uses])
(note 290 289 291 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 48 (parallel [
            (set (reg/v:DI 176 [ cy ])
                (plus:DI (reg/v:DI 168 [ cy ])
                    (reg:DI 175 [ D.13186 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:422 -1
     (nil))
(insn 292 291 293 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 176 [ cy ])
            (const_int 0 [0]))) strtod_l.c:423 -1
     (nil))
(jump_insn 293 292 294 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 310)
            (pc))) strtod_l.c:423 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 310)
(note 294 293 295 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 49 (set (reg:DI 177 [ D.13185 ])
        (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])) strtod_l.c:425 -1
     (nil))
(insn 296 295 297 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 177 [ D.13185 ])
            (const_int 58 [0x3a]))) strtod_l.c:425 -1
     (nil))
(jump_insn 297 296 298 49 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 305)
            (pc))) strtod_l.c:425 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 305)
(note 298 297 299 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 50 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11267") [flags 0x2]  <var_decl 0x2ab61e412990 __PRETTY_FUNCTION__>)) strtod_l.c:425 -1
     (nil))
(insn 300 299 301 50 (set (reg:SI 1 dx)
        (const_int 425 [0x1a9])) strtod_l.c:425 -1
     (nil))
(insn 301 300 302 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:425 -1
     (nil))
(insn 302 301 303 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ab61e6ab870 *.LC8>)) strtod_l.c:425 -1
     (nil))
(call_insn 303 302 304 50 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:425 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 304 303 305)
(code_label 305 304 306 51 95 "" [1 uses])
(note 306 305 307 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 51 (parallel [
            (set (reg:DI 210)
                (plus:DI (reg:DI 177 [ D.13185 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:426 -1
     (nil))
(insn 308 307 309 51 (set (mem:DI (reg/v/f:DI 189 [ nsize ]) [3 *nsize_1(D)+0 S8 A64])
        (reg:DI 210)) strtod_l.c:426 -1
     (nil))
(insn 309 308 310 51 (set (mem:DI (plus:DI (mult:DI (reg:DI 177 [ D.13185 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 188 [ n ])) [3 *_110+0 S8 A64])
        (reg/v:DI 176 [ cy ])) strtod_l.c:426 -1
     (nil))
(code_label 310 309 311 52 89 "" [2 uses])
(note 311 310 312 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 52 (set (reg:DI 185 [ <retval> ])
        (reg/v/f:DI 186 [ str ])) strtod_l.c:430 -1
     (nil))
(jump_insn 313 312 314 52 (set (pc)
        (label_ref 321)) strtod_l.c:430 -1
     (nil)
 -> 321)
(barrier 314 313 331)
(code_label 331 314 330 53 97 "" [1 uses])
(note 330 331 69 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 69 330 315 53 (set (reg:DI 140 [ ivtmp.172 ])
        (const_int 1 [0x1])) strtod_l.c:390 -1
     (nil))
(code_label 315 69 316 54 81 "" [1 uses])
(note 316 315 317 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 54 (parallel [
            (set (reg/v/f:DI 186 [ str ])
                (plus:DI (reg/v/f:DI 186 [ str ])
                    (reg:DI 140 [ ivtmp.172 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:394 -1
     (nil))
(insn 318 317 319 54 (set (reg:QI 150 [ D.13188 ])
        (mem:QI (reg/v/f:DI 186 [ str ]) [0 *str_52+0 S1 A8])) -1
     (nil))
(jump_insn 319 318 320 54 (set (pc)
        (label_ref 201)) -1
     (nil)
 -> 201)
(barrier 320 319 321)
(code_label 321 320 324 55 68 "" [1 uses])
(note 324 321 322 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 322 324 323 55 (set (reg/i:DI 0 ax)
        (reg:DI 185 [ <retval> ])) strtod_l.c:431 -1
     (nil))
(insn 323 322 0 55 (use (reg/i:DI 0 ax)) strtod_l.c:431 -1
     (nil))

;; Function ____strtod_l_internal (*__GI_____strtod_l_internal, funcdef_no=106, decl_uid=1843, cgraph_uid=106, symbol_order=114)

Partition 3: size 472 align 16
	den	endp
Partition 0: size 472 align 16
	num
Partition 2: size 8 align 8
	exponent
Partition 1: size 8 align 8
	numsize
Partition 4: size 8 align 16
	retval

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227

;; Generating RTL for gimple basic block 228

;; Generating RTL for gimple basic block 229

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233

;; Generating RTL for gimple basic block 234

;; Generating RTL for gimple basic block 235

;; Generating RTL for gimple basic block 236

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238

;; Generating RTL for gimple basic block 239

;; Generating RTL for gimple basic block 240

;; Generating RTL for gimple basic block 241

;; Generating RTL for gimple basic block 242

;; Generating RTL for gimple basic block 243

;; Generating RTL for gimple basic block 244

;; Generating RTL for gimple basic block 245

;; Generating RTL for gimple basic block 246

;; Generating RTL for gimple basic block 247

;; Generating RTL for gimple basic block 248

;; Generating RTL for gimple basic block 249

;; Generating RTL for gimple basic block 250

;; Generating RTL for gimple basic block 251

;; Generating RTL for gimple basic block 252

;; Generating RTL for gimple basic block 253

;; Generating RTL for gimple basic block 254

;; Generating RTL for gimple basic block 255

;; Generating RTL for gimple basic block 256

;; Generating RTL for gimple basic block 257

;; Generating RTL for gimple basic block 258

;; Generating RTL for gimple basic block 259

;; Generating RTL for gimple basic block 260

;; Generating RTL for gimple basic block 261

;; Generating RTL for gimple basic block 262

;; Generating RTL for gimple basic block 263

;; Generating RTL for gimple basic block 264

;; Generating RTL for gimple basic block 265

;; Generating RTL for gimple basic block 266

;; Generating RTL for gimple basic block 267

;; Generating RTL for gimple basic block 268

;; Generating RTL for gimple basic block 269

;; Generating RTL for gimple basic block 270

;; Generating RTL for gimple basic block 271

;; Generating RTL for gimple basic block 272

;; Generating RTL for gimple basic block 273

;; Generating RTL for gimple basic block 274

;; Generating RTL for gimple basic block 275

;; Generating RTL for gimple basic block 276

;; Generating RTL for gimple basic block 277

;; Generating RTL for gimple basic block 278

;; Generating RTL for gimple basic block 279

;; Generating RTL for gimple basic block 280

;; Generating RTL for gimple basic block 281

;; Generating RTL for gimple basic block 282

;; Generating RTL for gimple basic block 283

;; Generating RTL for gimple basic block 284

;; Generating RTL for gimple basic block 285

;; Generating RTL for gimple basic block 286

;; Generating RTL for gimple basic block 287

;; Generating RTL for gimple basic block 288

;; Generating RTL for gimple basic block 289

;; Generating RTL for gimple basic block 290

;; Generating RTL for gimple basic block 291

;; Generating RTL for gimple basic block 292

;; Generating RTL for gimple basic block 293

;; Generating RTL for gimple basic block 294

;; Generating RTL for gimple basic block 295

;; Generating RTL for gimple basic block 296

;; Generating RTL for gimple basic block 297

;; Generating RTL for gimple basic block 298

;; Generating RTL for gimple basic block 299

;; Generating RTL for gimple basic block 300

;; Generating RTL for gimple basic block 301

;; Generating RTL for gimple basic block 302

;; Generating RTL for gimple basic block 303

;; Generating RTL for gimple basic block 304

;; Generating RTL for gimple basic block 305

;; Generating RTL for gimple basic block 306

;; Generating RTL for gimple basic block 307

;; Generating RTL for gimple basic block 308

;; Generating RTL for gimple basic block 309

;; Generating RTL for gimple basic block 310

;; Generating RTL for gimple basic block 311

;; Generating RTL for gimple basic block 312

;; Generating RTL for gimple basic block 313

;; Generating RTL for gimple basic block 314

;; Generating RTL for gimple basic block 315

;; Generating RTL for gimple basic block 316

;; Generating RTL for gimple basic block 317

;; Generating RTL for gimple basic block 318

;; Generating RTL for gimple basic block 319

;; Generating RTL for gimple basic block 320

;; Generating RTL for gimple basic block 321

;; Generating RTL for gimple basic block 322

;; Generating RTL for gimple basic block 323

;; Generating RTL for gimple basic block 324

;; Generating RTL for gimple basic block 325

;; Generating RTL for gimple basic block 326

;; Generating RTL for gimple basic block 327

;; Generating RTL for gimple basic block 328

;; Generating RTL for gimple basic block 329

;; Generating RTL for gimple basic block 330

;; Generating RTL for gimple basic block 331

;; Generating RTL for gimple basic block 332

;; Generating RTL for gimple basic block 333

;; Generating RTL for gimple basic block 334

;; Generating RTL for gimple basic block 335

;; Generating RTL for gimple basic block 336

;; Generating RTL for gimple basic block 337

;; Generating RTL for gimple basic block 338

;; Generating RTL for gimple basic block 339

;; Generating RTL for gimple basic block 340

;; Generating RTL for gimple basic block 341

;; Generating RTL for gimple basic block 342

;; Generating RTL for gimple basic block 343

;; Generating RTL for gimple basic block 344

;; Generating RTL for gimple basic block 345

;; Generating RTL for gimple basic block 346

;; Generating RTL for gimple basic block 347

;; Generating RTL for gimple basic block 348

;; Generating RTL for gimple basic block 349

;; Generating RTL for gimple basic block 350

;; Generating RTL for gimple basic block 351

;; Generating RTL for gimple basic block 352

;; Generating RTL for gimple basic block 353

;; Generating RTL for gimple basic block 354

;; Generating RTL for gimple basic block 355

;; Generating RTL for gimple basic block 356

;; Generating RTL for gimple basic block 357

;; Generating RTL for gimple basic block 358

;; Generating RTL for gimple basic block 359

;; Generating RTL for gimple basic block 360

;; Generating RTL for gimple basic block 361

;; Generating RTL for gimple basic block 362

;; Generating RTL for gimple basic block 363

;; Generating RTL for gimple basic block 364

;; Generating RTL for gimple basic block 365

;; Generating RTL for gimple basic block 366

;; Generating RTL for gimple basic block 367

;; Generating RTL for gimple basic block 368

;; Generating RTL for gimple basic block 369

;; Generating RTL for gimple basic block 370

;; Generating RTL for gimple basic block 371

;; Generating RTL for gimple basic block 372

;; Generating RTL for gimple basic block 373

;; Generating RTL for gimple basic block 374

;; Generating RTL for gimple basic block 375

;; Generating RTL for gimple basic block 376

;; Generating RTL for gimple basic block 377

;; Generating RTL for gimple basic block 378

;; Generating RTL for gimple basic block 379

;; Generating RTL for gimple basic block 380

;; Generating RTL for gimple basic block 381

;; Generating RTL for gimple basic block 382

;; Generating RTL for gimple basic block 383

;; Generating RTL for gimple basic block 384

;; Generating RTL for gimple basic block 385

;; Generating RTL for gimple basic block 386

;; Generating RTL for gimple basic block 387

;; Generating RTL for gimple basic block 388

;; Generating RTL for gimple basic block 389

;; Generating RTL for gimple basic block 390

;; Generating RTL for gimple basic block 391

;; Generating RTL for gimple basic block 392

;; Generating RTL for gimple basic block 393

;; Generating RTL for gimple basic block 394

;; Generating RTL for gimple basic block 395

;; Generating RTL for gimple basic block 396

;; Generating RTL for gimple basic block 397

;; Generating RTL for gimple basic block 398

;; Generating RTL for gimple basic block 399

;; Generating RTL for gimple basic block 400

;; Generating RTL for gimple basic block 401

;; Generating RTL for gimple basic block 402

;; Generating RTL for gimple basic block 403

;; Generating RTL for gimple basic block 404

;; Generating RTL for gimple basic block 405

;; Generating RTL for gimple basic block 406

;; Generating RTL for gimple basic block 407

;; Generating RTL for gimple basic block 408

;; Generating RTL for gimple basic block 409

;; Generating RTL for gimple basic block 410

;; Generating RTL for gimple basic block 411

;; Generating RTL for gimple basic block 412

;; Generating RTL for gimple basic block 413

;; Generating RTL for gimple basic block 414

;; Generating RTL for gimple basic block 415

;; Generating RTL for gimple basic block 416

;; Generating RTL for gimple basic block 417

;; Generating RTL for gimple basic block 418

;; Generating RTL for gimple basic block 419

;; Generating RTL for gimple basic block 420

;; Generating RTL for gimple basic block 421

;; Generating RTL for gimple basic block 422

;; Generating RTL for gimple basic block 423

;; Generating RTL for gimple basic block 424

;; Generating RTL for gimple basic block 425

;; Generating RTL for gimple basic block 426

;; Generating RTL for gimple basic block 427

;; Generating RTL for gimple basic block 428

;; Generating RTL for gimple basic block 429

;; Generating RTL for gimple basic block 430

;; Generating RTL for gimple basic block 431

;; Generating RTL for gimple basic block 432

;; Generating RTL for gimple basic block 433

;; Generating RTL for gimple basic block 434

;; Generating RTL for gimple basic block 435

;; Generating RTL for gimple basic block 436

;; Generating RTL for gimple basic block 437

;; Generating RTL for gimple basic block 438

;; Generating RTL for gimple basic block 439

;; Generating RTL for gimple basic block 440

;; Generating RTL for gimple basic block 441

;; Generating RTL for gimple basic block 442

;; Generating RTL for gimple basic block 443

;; Generating RTL for gimple basic block 444

;; Generating RTL for gimple basic block 445

;; Generating RTL for gimple basic block 446

;; Generating RTL for gimple basic block 447

;; Generating RTL for gimple basic block 448

;; Generating RTL for gimple basic block 449

;; Generating RTL for gimple basic block 450

;; Generating RTL for gimple basic block 451

;; Generating RTL for gimple basic block 452

;; Generating RTL for gimple basic block 453

;; Generating RTL for gimple basic block 454

;; Generating RTL for gimple basic block 455

;; Generating RTL for gimple basic block 456

;; Generating RTL for gimple basic block 457

;; Generating RTL for gimple basic block 458

;; Generating RTL for gimple basic block 459

;; Generating RTL for gimple basic block 460

;; Generating RTL for gimple basic block 461

;; Generating RTL for gimple basic block 462

;; Generating RTL for gimple basic block 463

;; Generating RTL for gimple basic block 464

;; Generating RTL for gimple basic block 465

;; Generating RTL for gimple basic block 466

;; Generating RTL for gimple basic block 467

;; Generating RTL for gimple basic block 468
Edge 2->6 redirected to 517
Edge 3->6 redirected to 518
Edge 4->6 redirected to 519
Edge 12->14 redirected to 520
Edge 14->438 redirected to 521
Edge 26->437 redirected to 522
Edge 30->34 redirected to 523
Edge 34->437 redirected to 524
Edge 43->56 redirected to 526
Edge 48->55 redirected to 527
Edge 49->439 redirected to 528
Edge 58->57 redirected to 530
Edge 64->57 redirected to 531
Edge 65->57 redirected to 532
Edge 66->57 redirected to 533
Edge 68->71 redirected to 534
Edge 69->71 redirected to 535
Edge 80->443 redirected to 536
Edge 101->111 redirected to 538
Edge 102->111 redirected to 539
Edge 114->175 redirected to 540
Edge 120->175 redirected to 541
Edge 130->445 redirected to 542
Edge 142->445 redirected to 543
Edge 146->149 redirected to 544
Edge 160->169 redirected to 545
Edge 171->437 redirected to 546
Edge 204->208 redirected to 548
Edge 240->245 redirected to 550
Edge 241->245 redirected to 551
Edge 242->245 redirected to 552
Edge 258->298 redirected to 553
Edge 270->262 redirected to 554
Edge 280->283 redirected to 556
Edge 283->285 redirected to 557
Edge 313->315 redirected to 558
Edge 319->321 redirected to 559
Edge 347->466 redirected to 560
Edge 406->413 redirected to 562
Edge 456->45 redirected to 563
Edge 457->196 redirected to 565
Purged non-fallthru edges from bb 567
Purged non-fallthru edges from bb 569
Purged non-fallthru edges from bb 573
Purged non-fallthru edges from bb 576
Purged non-fallthru edges from bb 578
Purged non-fallthru edges from bb 581
Purged edges from bb 583
Purged non-fallthru edges from bb 588


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 10 failed.
Forwarding edge 25->26 to 538 failed.
Edge 29->45 redirected to 46
Edge 36->45 redirected to 46
Edge 37->45 redirected to 46
Edge 39->41 redirected to 43
Merging block 41 into block 40...
Merged blocks 40 and 41.
Merged 40 and 41 without moving.
deleting block 45
Edge 78->80 redirected to 81
Forwarding edge 79->80 to 81 failed.
Deleted label in block 80.
Forwarding edge 87->88 to 546 failed.
Edge 91->93 redirected to 94
Forwarding edge 92->93 to 94 failed.
Deleted label in block 93.
Forwarding edge 124->125 to 571 failed.
Forwarding edge 128->129 to 103 failed.
Forwarding edge 141->142 to 552 failed.
Forwarding edge 149->150 to 153 failed.
Edge 155->157 redirected to 158
Forwarding edge 156->157 to 158 failed.
Deleted label in block 157.
Redirecting jump 885 from 555 to 199.
Edge 172->174 redirected to 175
Forwarding edge 173->174 to 175 failed.
Deleted label in block 174.
Redirecting jump 942 from 555 to 199.
Redirecting jump 967 from 555 to 199.
Edge 186->188 redirected to 189
Forwarding edge 187->188 to 189 failed.
Deleted label in block 188.
Redirecting jump 1020 from 555 to 199.
Forwarding edge 196->197 to 199 failed.
Edge 201->203 redirected to 209
Merging block 203 into block 202...
Merged blocks 202 and 203.
Merged 202 and 203 without moving.
Edge 206->208 redirected to 209
Merging block 208 into block 207...
Merged blocks 207 and 208.
Merged 207 and 208 without moving.
Edge 245->247 redirected to 559
Merging block 247 into block 246...
Merged blocks 246 and 247.
Merged 246 and 247 without moving.
Forwarding edge 250->251 to 253 failed.
Forwarding edge 255->256 to 103 failed.
Forwarding edge 266->267 to 561 failed.
Forwarding edge 272->273 to 577 failed.
Forwarding edge 304->305 to 308 failed.
Forwarding edge 344->345 to 322 failed.
Forwarding edge 353->354 to 356 failed.
Forwarding edge 362->363 to 372 failed.
Forwarding edge 366->367 to 372 failed.
Redirecting jump 1927 from 363 to 372.
Forwarding edge 370->371 to 372 failed.
Removing jump 1961.
Edge 379->381 redirected to 382
Forwarding edge 380->381 to 382 failed.
Deleted label in block 381.
Forwarding edge 411->412 to 466 failed.
Forwarding edge 423->424 to 429 failed.
Edge 427->583 redirected to 429
Removing jump 2346.
Removing jump 2418.
Forwarding edge 458->459 to 464 failed.
Edge 462->586 redirected to 464
Removing jump 2561.
Forwarding edge 482->483 to 480 failed.
Forwarding edge 484->485 to 493 failed.
Forwarding edge 491->492 to 489 failed.
Forwarding edge 503->504 to 506 failed.
Forwarding edge 511->512 to 522 failed.
Forwarding edge 514->515 to 511 failed.
Forwarding edge 520->521 to 526 failed.
Edge 524->587 redirected to 526
Removing jump 2933.
Forwarding edge 538->539 to 27 failed.
Edge 546->548 redirected to 549
Forwarding edge 547->548 to 549 failed.
Deleted label in block 548.
Redirecting jump 3288 from 555 to 199.
Merging block 555 into block 554...
Merged blocks 554 and 555.
Merged 554 and 555 without moving.
Redirecting jump 3043 from 197 to 199.
Forwarding edge 557->558 to 224 failed.
Forwarding edge 559->560 to 257 failed.
Forwarding edge 561->562 to 575 failed.
Forwarding edge 571->572 to 255 failed.
Forwarding edge 573->574 to 272 failed.
Forwarding edge 575->576 to 274 failed.
Forwarding edge 579->580 to 350 failed.
deleting block 583
Merging block 585 into block 584...
Merged blocks 584 and 585.
Merged 584 and 585 without moving.
deleting block 586
deleting block 587


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 10 failed.
Forwarding edge 25->26 to 538 failed.
Forwarding edge 79->80 to 81 failed.
Forwarding edge 87->88 to 546 failed.
Forwarding edge 92->93 to 94 failed.
Forwarding edge 124->125 to 571 failed.
Forwarding edge 128->129 to 103 failed.
Forwarding edge 141->142 to 552 failed.
Forwarding edge 149->150 to 153 failed.
Forwarding edge 156->157 to 158 failed.
Forwarding edge 173->174 to 175 failed.
Forwarding edge 187->188 to 189 failed.
Merging block 197 into block 196...
Merged blocks 196 and 197.
Merged 196 and 197 without moving.
Forwarding edge 250->251 to 253 failed.
Forwarding edge 255->256 to 103 failed.
Forwarding edge 266->267 to 561 failed.
Forwarding edge 272->273 to 577 failed.
Forwarding edge 304->305 to 308 failed.
Forwarding edge 344->345 to 322 failed.
Forwarding edge 353->354 to 356 failed.
Forwarding edge 362->363 to 372 failed.
Deleted label in block 363.
Forwarding edge 366->367 to 372 failed.
Forwarding edge 370->371 to 372 failed.
Forwarding edge 380->381 to 382 failed.
Forwarding edge 411->412 to 466 failed.
Forwarding edge 423->424 to 429 failed.
Forwarding edge 458->459 to 464 failed.
Forwarding edge 482->483 to 480 failed.
Forwarding edge 484->485 to 493 failed.
Forwarding edge 491->492 to 489 failed.
Forwarding edge 503->504 to 506 failed.
Forwarding edge 511->512 to 522 failed.
Forwarding edge 514->515 to 511 failed.
Forwarding edge 520->521 to 526 failed.
Forwarding edge 538->539 to 27 failed.
Forwarding edge 547->548 to 549 failed.
Forwarding edge 557->558 to 224 failed.
Forwarding edge 559->560 to 257 failed.
Forwarding edge 561->562 to 575 failed.
Forwarding edge 571->572 to 255 failed.
Forwarding edge 573->574 to 272 failed.
Forwarding edge 575->576 to 274 failed.
Forwarding edge 579->580 to 350 failed.


try_optimize_cfg iteration 3

Forwarding edge 5->6 to 10 failed.
Forwarding edge 25->26 to 538 failed.
Forwarding edge 79->80 to 81 failed.
Forwarding edge 87->88 to 546 failed.
Forwarding edge 92->93 to 94 failed.
Forwarding edge 124->125 to 571 failed.
Forwarding edge 128->129 to 103 failed.
Forwarding edge 141->142 to 552 failed.
Forwarding edge 149->150 to 153 failed.
Forwarding edge 156->157 to 158 failed.
Forwarding edge 173->174 to 175 failed.
Forwarding edge 187->188 to 189 failed.
Forwarding edge 250->251 to 253 failed.
Forwarding edge 255->256 to 103 failed.
Forwarding edge 266->267 to 561 failed.
Forwarding edge 272->273 to 577 failed.
Forwarding edge 304->305 to 308 failed.
Forwarding edge 344->345 to 322 failed.
Forwarding edge 353->354 to 356 failed.
Forwarding edge 362->363 to 372 failed.
Forwarding edge 366->367 to 372 failed.
Forwarding edge 370->371 to 372 failed.
Forwarding edge 380->381 to 382 failed.
Forwarding edge 411->412 to 466 failed.
Forwarding edge 423->424 to 429 failed.
Forwarding edge 458->459 to 464 failed.
Forwarding edge 482->483 to 480 failed.
Forwarding edge 484->485 to 493 failed.
Forwarding edge 491->492 to 489 failed.
Forwarding edge 503->504 to 506 failed.
Forwarding edge 511->512 to 522 failed.
Forwarding edge 514->515 to 511 failed.
Forwarding edge 520->521 to 526 failed.
Forwarding edge 538->539 to 27 failed.
Forwarding edge 547->548 to 549 failed.
Forwarding edge 557->558 to 224 failed.
Forwarding edge 559->560 to 257 failed.
Forwarding edge 561->562 to 575 failed.
Forwarding edge 571->572 to 255 failed.
Forwarding edge 573->574 to 272 failed.
Forwarding edge 575->576 to 274 failed.
Forwarding edge 579->580 to 350 failed.


;;
;; Full RTL generated for this function:
;;
(note 82 0 241 NOTE_INSN_DELETED)
(note 241 82 83 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 83 241 84 2 (set (reg/v/f:DI 830 [ nptr ])
        (reg:DI 5 di [ nptr ])) strtod_l.c:481 -1
     (nil))
(insn 84 83 85 2 (set (reg/v/f:DI 831 [ endptr ])
        (reg:DI 4 si [ endptr ])) strtod_l.c:481 -1
     (nil))
(insn 85 84 86 2 (set (reg/v:SI 832 [ group ])
        (reg:SI 1 dx [ group ])) strtod_l.c:481 -1
     (nil))
(insn 86 85 87 2 (set (reg/v/f:DI 833 [ loc ])
        (reg:DI 2 cx [ loc ])) strtod_l.c:481 -1
     (nil))
(note 87 86 243 2 NOTE_INSN_FUNCTION_BEG)
(insn 243 87 244 2 (set (reg/v/f:DI 238 [ current ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 8 [0x8])) [2 loc_240(D)->__locales+8 S8 A64])) strtod_l.c:534 -1
     (nil))
(insn 244 243 245 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 832 [ group ])
            (const_int 0 [0]))) strtod_l.c:536 -1
     (nil))
(jump_insn 245 244 246 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3208)
            (pc))) strtod_l.c:536 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 3208)
(note 246 245 247 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 4 (set (reg/v/f:DI 762 [ grouping ])
        (mem/f:DI (plus:DI (reg/v/f:DI 238 [ current ])
                (const_int 80 [0x50])) [0 current_241->values[2].string+0 S8 A64])) strtod_l.c:538 -1
     (nil))
(insn 248 247 249 4 (set (reg:QI 838)
        (mem:QI (reg/v/f:DI 762 [ grouping ]) [0 *grouping_245+0 S1 A8])) strtod_l.c:539 -1
     (nil))
(insn 249 248 250 4 (parallel [
            (set (reg:QI 837 [ D.13412 ])
                (plus:QI (reg:QI 838)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:539 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (reg/v/f:DI 762 [ grouping ]) [0 *grouping_245+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 250 249 251 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 837 [ D.13412 ])
            (const_int 125 [0x7d]))) strtod_l.c:539 -1
     (nil))
(jump_insn 251 250 252 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3212)
            (pc))) strtod_l.c:539 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3212)
(note 252 251 253 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 5 (set (reg/v/f:DI 188 [ thousands ])
        (mem/f:DI (plus:DI (reg/v/f:DI 238 [ current ])
                (const_int 72 [0x48])) [0 current_241->values[1].string+0 S8 A64])) strtod_l.c:550 -1
     (nil))
(insn 254 253 255 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 188 [ thousands ]) [0 *thousands_249+0 S1 A8])
            (const_int 0 [0]))) strtod_l.c:551 -1
     (nil))
(jump_insn 255 254 256 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3216)
            (pc))) strtod_l.c:551 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3216)
(note 256 255 3205 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3205 256 3206 6 (set (pc)
        (label_ref 257)) -1
     (nil)
 -> 257)
(barrier 3206 3205 3208)
(code_label 3208 3206 3207 7 406 "" [1 uses])
(note 3207 3208 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 88 3207 89 7 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:554 -1
     (nil))
(insn 89 88 3209 7 (set (reg/v/f:DI 188 [ thousands ])
        (const_int 0 [0])) strtod_l.c:553 -1
     (nil))
(jump_insn 3209 89 3210 7 (set (pc)
        (label_ref 257)) -1
     (nil)
 -> 257)
(barrier 3210 3209 3212)
(code_label 3212 3210 3211 8 407 "" [1 uses])
(note 3211 3212 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 3211 93 8 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:554 -1
     (nil))
(insn 93 92 3213 8 (set (reg/v/f:DI 188 [ thousands ])
        (const_int 0 [0])) strtod_l.c:553 -1
     (nil))
(jump_insn 3213 93 3214 8 (set (pc)
        (label_ref 257)) -1
     (nil)
 -> 257)
(barrier 3214 3213 3216)
(code_label 3216 3214 3215 9 408 "" [1 uses])
(note 3215 3216 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 3215 91 9 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:554 -1
     (nil))
(insn 91 90 257 9 (set (reg/v/f:DI 188 [ thousands ])
        (const_int 0 [0])) strtod_l.c:553 -1
     (nil))
(code_label 257 91 258 10 114 "" [3 uses])
(note 258 257 259 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 10 (set (reg/v/f:DI 244 [ decimal ])
        (mem/f:DI (plus:DI (reg/v/f:DI 238 [ current ])
                (const_int 64 [0x40])) [0 current_241->values[0].string+0 S8 A64])) strtod_l.c:568 -1
     (nil))
(insn 260 259 261 10 (set (reg:DI 5 di)
        (reg/v/f:DI 244 [ decimal ])) strtod_l.c:569 -1
     (nil))
(call_insn/i 261 260 262 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ab61dd82948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strtod_l.c:569 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ab61dd82948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 262 261 263 10 (set (reg:DI 840)
        (reg:DI 0 ax)) strtod_l.c:569 -1
     (nil))
(insn 263 262 264 10 (set (reg:DI 841)
        (reg:DI 840)) strtod_l.c:569 -1
     (nil))
(insn 264 263 265 10 (set (reg/v:DI 245 [ decimal_len ])
        (reg:DI 841)) strtod_l.c:569 -1
     (nil))
(insn 265 264 266 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 245 [ decimal_len ])
            (const_int 0 [0]))) strtod_l.c:570 -1
     (nil))
(jump_insn 266 265 267 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) strtod_l.c:570 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 274)
(note 267 266 268 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 11 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:570 -1
     (nil))
(insn 269 268 270 11 (set (reg:SI 1 dx)
        (const_int 570 [0x23a])) strtod_l.c:570 -1
     (nil))
(insn 270 269 271 11 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:570 -1
     (nil))
(insn 271 270 272 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2ab61e83c240 *.LC15>)) strtod_l.c:570 -1
     (nil))
(call_insn 272 271 273 11 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:570 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 273 272 274)
(code_label 274 273 275 12 115 "" [1 uses])
(note 275 274 276 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 12 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (const_int 0 [0])) strtod_l.c:574 -1
     (nil))
(insn 277 276 278 12 (parallel [
            (set (reg/v/f:DI 174 [ startp ])
                (plus:DI (reg/v/f:DI 830 [ nptr ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:580 -1
     (nil))
(insn 278 277 282 12 (set (reg/f:DI 767 [ D.13413 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 104 [0x68])) [2 loc_240(D)->__ctype_b+0 S8 A64])) -1
     (nil))
(code_label 282 278 279 13 116 "" [1 uses])
(note 279 282 280 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 13 (parallel [
            (set (reg/v/f:DI 174 [ startp ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:583 -1
     (nil))
(insn 281 280 283 13 (set (reg/v:QI 186 [ c ])
        (mem:QI (reg/v/f:DI 174 [ startp ]) [0 MEM[base: startp_256, offset: 0B]+0 S1 A8])) strtod_l.c:583 -1
     (nil))
(insn 283 281 284 13 (set (reg:DI 842 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:584 -1
     (nil))
(insn 284 283 285 13 (set (reg:HI 844)
        (mem:HI (plus:DI (mult:DI (reg:DI 842 [ D.13400 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 767 [ D.13413 ])) [5 *_261+0 S2 A16])) strtod_l.c:584 -1
     (nil))
(insn 285 284 286 13 (parallel [
            (set (reg:HI 843 [ D.13403 ])
                (and:HI (reg:HI 844)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:584 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 842 [ D.13400 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 767 [ D.13413 ])) [5 *_261+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 286 285 287 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 843 [ D.13403 ])
            (const_int 0 [0]))) strtod_l.c:584 -1
     (nil))
(jump_insn 287 286 288 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 282)
            (pc))) strtod_l.c:584 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 282)
(note 288 287 289 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 45 [0x2d]))) strtod_l.c:587 -1
     (nil))
(jump_insn 290 289 291 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) strtod_l.c:587 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 296)
(note 291 290 292 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 15 (parallel [
            (set (reg/v/f:DI 250 [ startp ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:590 -1
     (nil))
(insn 293 292 94 15 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_256 + 1B]+0 S1 A8])) strtod_l.c:590 -1
     (nil))
(insn 94 293 95 15 (set (reg/v/f:DI 174 [ startp ])
        (reg/v/f:DI 250 [ startp ])) strtod_l.c:590 -1
     (nil))
(insn 95 94 294 15 (set (reg/v:SI 168 [ negative ])
        (const_int 1 [0x1])) strtod_l.c:589 -1
     (nil))
(jump_insn 294 95 295 15 (set (pc)
        (label_ref 303)) -1
     (nil)
 -> 303)
(barrier 295 294 296)
(code_label 296 295 297 16 117 "" [1 uses])
(note 297 296 298 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 43 [0x2b]))) strtod_l.c:592 -1
     (nil))
(jump_insn 299 298 300 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3220)
            (pc))) strtod_l.c:592 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3220)
(note 300 299 301 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 17 (parallel [
            (set (reg/v/f:DI 251 [ startp ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:593 -1
     (nil))
(insn 302 301 97 17 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_256 + 1B]+0 S1 A8])) strtod_l.c:593 -1
     (nil))
(insn 97 302 98 17 (set (reg/v/f:DI 174 [ startp ])
        (reg/v/f:DI 251 [ startp ])) strtod_l.c:593 -1
     (nil))
(insn 98 97 3217 17 (set (reg/v:SI 168 [ negative ])
        (const_int 0 [0])) strtod_l.c:575 -1
     (nil))
(jump_insn 3217 98 3218 17 (set (pc)
        (label_ref 303)) -1
     (nil)
 -> 303)
(barrier 3218 3217 3220)
(code_label 3220 3218 3219 18 409 "" [1 uses])
(note 3219 3220 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 96 3219 303 18 (set (reg/v:SI 168 [ negative ])
        (const_int 0 [0])) strtod_l.c:575 -1
     (nil))
(code_label 303 96 304 19 118 "" [2 uses])
(note 304 303 305 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 19 (set (reg:QI 201 [ D.13401 ])
        (mem:QI (reg/v/f:DI 244 [ decimal ]) [0 *decimal_251+0 S1 A8])) strtod_l.c:605 -1
     (nil))
(insn 306 305 307 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:605 -1
     (nil))
(jump_insn 307 306 308 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3222)
            (pc))) strtod_l.c:605 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3222)
(note 308 307 309 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 174 [ startp ]) [0 *startp_17+0 S1 A8])
            (reg:QI 201 [ D.13401 ]))) strtod_l.c:606 -1
     (nil))
(jump_insn 310 309 313 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) strtod_l.c:606 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 332)
(note 313 310 99 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 99 313 311 21 (set (reg:DI 287 [ ivtmp.378 ])
        (const_int 1 [0x1])) strtod_l.c:606 -1
     (nil))
(jump_insn 311 99 312 21 (set (pc)
        (label_ref 321)) strtod_l.c:606 -1
     (nil)
 -> 321)
(barrier 312 311 326)
(code_label 326 312 314 22 123 "" [1 uses])
(note 314 326 315 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 22 (parallel [
            (set (reg:DI 287 [ ivtmp.378 ])
                (plus:DI (reg:DI 287 [ ivtmp.378 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 316 315 317 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 252 [ D.13401 ])
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 174 [ startp ])
                        (reg:DI 287 [ ivtmp.378 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: startp_17, index: ivtmp.378_342, offset: -1B]+0 S1 A8]))) strtod_l.c:606 -1
     (nil))
(jump_insn 317 316 320 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) strtod_l.c:606 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 332)
(note 320 317 318 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 318 320 319 23 (set (pc)
        (label_ref 323)) -1
     (nil)
 -> 323)
(barrier 319 318 321)
(code_label 321 319 322 24 121 "" [1 uses])
(note 322 321 323 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(code_label 323 322 324 25 122 "" [1 uses])
(note 324 323 325 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 327 25 (set (reg:QI 252 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 244 [ decimal ])
                (reg:DI 287 [ ivtmp.378 ])) [0 MEM[base: decimal_251, index: ivtmp.378_1474, offset: 0B]+0 S1 A8])) strtod_l.c:605 -1
     (nil))
(insn 327 325 328 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 252 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:605 -1
     (nil))
(jump_insn 328 327 331 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 326)
            (pc))) strtod_l.c:605 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 326)
(note 331 328 329 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 329 331 330 26 (set (pc)
        (label_ref 2982)) -1
     (nil)
 -> 2982)
(barrier 330 329 332)
(code_label 332 330 333 27 120 "" [3 uses])
(note 333 332 334 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 27 (parallel [
            (set (reg:QI 845 [ D.13412 ])
                (plus:QI (reg/v:QI 186 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:614 -1
     (nil))
(insn 335 334 336 27 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 845 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:614 -1
     (nil))
(jump_insn 336 335 337 27 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) strtod_l.c:614 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 428)
(note 337 336 338 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 28 (set (reg/f:DI 846)
        (symbol_ref:DI ("_nl_C_locobj") [flags 0x42]  <var_decl 0x2ab61de9d480 _nl_C_locobj>)) strtod_l.c:617 -1
     (nil))
(insn 339 338 340 28 (set (reg:DI 847 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:617 -1
     (nil))
(insn 340 339 341 28 (set (reg/f:DI 848)
        (mem/u/f/c:DI (plus:DI (reg/f:DI 846)
                (const_int 112 [0x70])) [2 _nl_C_locobj.__ctype_tolower+0 S8 A64])) strtod_l.c:617 -1
     (nil))
(insn 341 340 342 28 (set (reg:SI 849)
        (mem:SI (plus:DI (mult:DI (reg:DI 847 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 848)) [4 *_290+0 S4 A32])) strtod_l.c:617 -1
     (nil))
(insn 342 341 343 28 (set (reg/v:QI 265 [ lowc ])
        (subreg:QI (reg:SI 849) 0)) strtod_l.c:617 -1
     (nil))
(insn 343 342 344 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 265 [ lowc ])
            (const_int 105 [0x69]))) strtod_l.c:619 -1
     (nil))
(jump_insn 344 343 345 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 379)
            (pc))) strtod_l.c:619 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 379)
(note 345 344 346 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 29 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_nl_C_locobj") [flags 0x42]  <var_decl 0x2ab61de9d480 _nl_C_locobj>)) strtod_l.c:619 -1
     (nil))
(insn 347 346 348 29 (set (reg:DI 1 dx)
        (const_int 3 [0x3])) strtod_l.c:619 -1
     (nil))
(insn 348 347 349 29 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2ab61e83c2d0 *.LC16>)) strtod_l.c:619 -1
     (nil))
(insn 349 348 350 29 (set (reg:DI 5 di)
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:619 -1
     (nil))
(call_insn 350 349 351 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>) [0 __strncasecmp_l S1 A8])
            (const_int 0 [0]))) strtod_l.c:619 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 351 350 352 29 (set (reg:SI 266 [ D.13409 ])
        (reg:SI 0 ax)) strtod_l.c:619 -1
     (nil))
(insn 352 351 353 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 266 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:619 -1
     (nil))
(jump_insn 353 352 354 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 687)
            (pc))) strtod_l.c:619 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 687)
(note 354 353 355 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:622 -1
     (nil))
(jump_insn 356 355 357 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) strtod_l.c:622 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 372)
(note 357 356 358 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 31 (parallel [
            (set (reg/f:DI 267 [ D.13399 ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:624 -1
     (nil))
(insn 359 358 360 31 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_nl_C_locobj") [flags 0x42]  <var_decl 0x2ab61de9d480 _nl_C_locobj>)) strtod_l.c:624 -1
     (nil))
(insn 360 359 361 31 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) strtod_l.c:624 -1
     (nil))
(insn 361 360 362 31 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2ab61e83c360 *.LC17>)) strtod_l.c:624 -1
     (nil))
(insn 362 361 363 31 (set (reg:DI 5 di)
        (reg/f:DI 267 [ D.13399 ])) strtod_l.c:624 -1
     (nil))
(call_insn 363 362 364 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>) [0 __strncasecmp_l S1 A8])
            (const_int 0 [0]))) strtod_l.c:624 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 364 363 365 31 (set (reg:SI 268 [ D.13409 ])
        (reg:SI 0 ax)) strtod_l.c:624 -1
     (nil))
(insn 365 364 366 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 268 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:623 -1
     (nil))
(jump_insn 366 365 367 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 369)
            (pc))) strtod_l.c:623 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 369)
(note 367 366 368 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 32 (parallel [
            (set (reg/f:DI 267 [ D.13399 ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 369 368 370 33 128 "" [1 uses])
(note 370 369 371 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 33 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/f:DI 267 [ D.13399 ])) strtod_l.c:623 -1
     (nil))
(code_label 372 371 373 34 127 "" [1 uses])
(note 373 372 374 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:627 -1
     (nil))
(jump_insn 375 374 376 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3226)
            (pc))) strtod_l.c:627 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3226)
(note 376 375 225 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 225 376 377 35 (set (reg:DF 222 [ D.13405 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [8  S8 A64])) strtod_l.c:627 -1
     (expr_list:REG_EQUAL (const_double:DF -Inf [-Inf])
        (nil)))
(jump_insn 377 225 378 35 (set (pc)
        (label_ref 2977)) -1
     (nil)
 -> 2977)
(barrier 378 377 379)
(code_label 379 378 380 36 125 "" [1 uses])
(note 380 379 381 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 265 [ lowc ])
            (const_int 110 [0x6e]))) strtod_l.c:630 -1
     (nil))
(jump_insn 382 381 383 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 687)
            (pc))) strtod_l.c:630 612 {*jcc_1}
     (int_list:REG_BR_PROB 8523 (nil))
 -> 687)
(note 383 382 384 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 384 383 385 37 (set (reg:DI 2 cx)
        (symbol_ref:DI ("_nl_C_locobj") [flags 0x42]  <var_decl 0x2ab61de9d480 _nl_C_locobj>)) strtod_l.c:630 -1
     (nil))
(insn 385 384 386 37 (set (reg:DI 1 dx)
        (const_int 3 [0x3])) strtod_l.c:630 -1
     (nil))
(insn 386 385 387 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2ab61e83c3f0 *.LC18>)) strtod_l.c:630 -1
     (nil))
(insn 387 386 388 37 (set (reg:DI 5 di)
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:630 -1
     (nil))
(call_insn 388 387 389 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>) [0 __strncasecmp_l S1 A8])
            (const_int 0 [0]))) strtod_l.c:630 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strncasecmp_l") [flags 0x43]  <function_decl 0x2ab61e063ca8 __strncasecmp_l>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 389 388 390 37 (set (reg:SI 269 [ D.13409 ])
        (reg:SI 0 ax)) strtod_l.c:630 -1
     (nil))
(insn 390 389 391 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 269 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:630 -1
     (nil))
(jump_insn 391 390 392 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 687)
            (pc))) strtod_l.c:630 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 687)
(note 392 391 393 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 38 (parallel [
            (set (reg/v/f:DI 175 [ cp ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:635 -1
     (nil))
(insn 394 393 395 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 3 [0x3])) [0 MEM[(const char *)startp_17 + 3B]+0 S1 A8])
            (const_int 40 [0x28]))) strtod_l.c:638 -1
     (nil))
(jump_insn 395 394 396 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3230)
            (pc))) strtod_l.c:638 612 {*jcc_1}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 3230)
(note 396 395 397 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 39 (parallel [
            (set (reg:DI 850)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:642 -1
     (nil))
(insn 398 397 399 39 (parallel [
            (set (reg:DI 851 [ D.13399 ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:642 -1
     (nil))
(insn 399 398 400 39 (set (reg:SI 1 dx)
        (const_int 41 [0x29])) strtod_l.c:642 -1
     (nil))
(insn 400 399 401 39 (set (reg:DI 4 si)
        (reg:DI 850)) strtod_l.c:642 -1
     (nil))
(insn 401 400 402 39 (set (reg:DI 5 di)
        (reg:DI 851 [ D.13399 ])) strtod_l.c:642 -1
     (nil))
(call_insn 402 401 403 39 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("*__GI___strtod_nan") [flags 0x43]  <function_decl 0x2ab61dfefaf8 __strtod_nan>) [0 __strtod_nan S1 A8])
            (const_int 0 [0]))) strtod_l.c:642 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___strtod_nan") [flags 0x43]  <function_decl 0x2ab61dfefaf8 __strtod_nan>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 403 402 404 39 (set (reg/v:DF 189 [ retval ])
        (reg:DF 21 xmm0)) strtod_l.c:642 -1
     (nil))
(insn 404 403 405 39 (set (reg/f:DI 272 [ D.13407 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [2 endp+0 S8 A128])) strtod_l.c:643 -1
     (nil))
(insn 405 404 406 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 272 [ D.13407 ]) [0 *_310+0 S1 A8])
            (const_int 41 [0x29]))) strtod_l.c:643 -1
     (nil))
(jump_insn 406 405 407 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 411)
            (pc))) strtod_l.c:643 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 411)
(note 407 406 408 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 3227 40 (parallel [
            (set (reg/v/f:DI 175 [ cp ])
                (plus:DI (reg/f:DI 272 [ D.13407 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:645 -1
     (nil))
(jump_insn 3227 408 3228 40 (set (pc)
        (label_ref 411)) -1
     (nil)
 -> 411)
(barrier 3228 3227 3230)
(code_label 3230 3228 3229 42 412 "" [1 uses])
(note 3229 3230 100 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 100 3229 411 42 (set (reg/v:DF 189 [ retval ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [8  S8 A64])) strtod_l.c:633 -1
     (expr_list:REG_EQUAL (const_double:DF +QNaN [+QNaN])
        (nil)))
(code_label 411 100 412 43 130 "" [2 uses])
(note 412 411 413 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:651 -1
     (nil))
(jump_insn 414 413 415 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3234)
            (pc))) strtod_l.c:651 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 3234)
(note 415 414 416 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 221 44 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/v/f:DI 175 [ cp ])) strtod_l.c:652 -1
     (nil))
(insn 221 416 417 44 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 189 [ retval ])) strtod_l.c:654 -1
     (nil))
(jump_insn 417 221 418 44 (set (pc)
        (label_ref 2977)) strtod_l.c:652 -1
     (nil)
 -> 2977)
(barrier 418 417 687)
(code_label 687 418 421 46 166 "" [4 uses])
(note 421 687 422 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:658 -1
     (nil))
(jump_insn 423 422 424 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 600)
            (pc))) strtod_l.c:658 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 600)
(note 424 423 425 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 222 47 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/v/f:DI 830 [ nptr ])) strtod_l.c:658 -1
     (nil))
(insn 222 425 426 47 (set (reg:DF 222 [ D.13405 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [8  S8 A64])) strtod_l.c:658 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 426 222 427 47 (set (pc)
        (label_ref 2977)) strtod_l.c:658 -1
     (nil)
 -> 2977)
(barrier 427 426 428)
(code_label 428 427 429 48 124 "" [2 uses])
(note 429 428 430 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 48 [0x30]))) strtod_l.c:662 -1
     (nil))
(jump_insn 431 430 432 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3102)
            (pc))) strtod_l.c:662 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3102)
(note 432 431 433 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 49 (set (reg/f:DI 277 [ D.13414 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) strtod_l.c:662 -1
     (nil))
(insn 434 433 435 49 (set (reg:QI 823 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_17 + 1B]+0 S1 A8])) strtod_l.c:662 -1
     (nil))
(insn 435 434 436 49 (set (reg:DI 852 [ D.13400 ])
        (sign_extend:DI (reg:QI 823 [ D.13401 ]))) strtod_l.c:662 -1
     (nil))
(insn 436 435 437 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (mult:DI (reg:DI 852 [ D.13400 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 277 [ D.13414 ])) [4 *_323+0 S4 A32])
            (const_int 120 [0x78]))) strtod_l.c:662 -1
     (nil))
(jump_insn 437 436 438 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3116)
            (pc))) strtod_l.c:662 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3116)
(note 438 437 439 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 439 438 440 50 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 174 [ startp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:668 -1
     (nil))
(insn 440 439 441 50 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (const_int 2 [0x2])) [0 MEM[(const char *)startp_17 + 2B]+0 S1 A8])) strtod_l.c:669 -1
     (nil))
(insn 441 440 442 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 188 [ thousands ])
            (const_int 0 [0]))) strtod_l.c:681 -1
     (nil))
(jump_insn 442 441 3235 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 447)
            (pc))) strtod_l.c:681 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 447)
(note 3235 442 101 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 101 3235 102 51 (set (reg/v/f:DI 174 [ startp ])
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:668 -1
     (nil))
(insn 102 101 103 51 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:670 -1
     (nil))
(insn 103 102 3108 51 (set (reg/v:SI 786 [ base ])
        (const_int 16 [0x10])) strtod_l.c:667 -1
     (nil))
(code_label 3108 103 443 52 396 "" [2 uses])
(note 443 3108 444 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 112 52 (set (reg:QI 828 [ D.13401 ])
        (mem:QI (reg/v/f:DI 188 [ thousands ]) [0 *thousands_78+0 S1 A8])) -1
     (nil))
(insn 112 444 445 52 (set (reg/v/f:DI 290 [ startp ])
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:487 -1
     (nil))
(jump_insn 445 112 446 52 (set (pc)
        (label_ref 463)) -1
     (nil)
 -> 463)
(barrier 446 445 447)
(code_label 447 446 448 53 135 "" [1 uses])
(note 448 447 449 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 48 [0x30]))) strtod_l.c:682 -1
     (nil))
(jump_insn 450 449 451 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3237)
            (pc))) strtod_l.c:682 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 3237)
(note 451 450 452 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 106 54 (set (reg:QI 823 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (const_int 3 [0x3])) [0 MEM[(const char *)startp_17 + 3B]+0 S1 A8])) -1
     (nil))
(insn 106 452 107 54 (set (reg/v/f:DI 174 [ startp ])
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:668 -1
     (nil))
(insn 107 106 108 54 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:670 -1
     (nil))
(insn 108 107 3352 54 (set (reg/v:SI 786 [ base ])
        (const_int 16 [0x10])) strtod_l.c:667 -1
     (nil))
(jump_insn 3352 108 3353 54 (set (pc)
        (label_ref 3118)) -1
     (nil)
 -> 3118)
(barrier 3353 3352 3355)
(code_label 3355 3353 3354 55 445 "" [1 uses])
(note 3354 3355 109 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 109 3354 3118 55 (set (reg/v:SI 786 [ base ])
        (const_int 10 [0xa])) strtod_l.c:487 -1
     (nil))
(code_label 3118 109 453 56 397 "" [1 uses])
(note 453 3118 110 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 110 453 111 56 (set (reg/v:QI 186 [ c ])
        (reg:QI 823 [ D.13401 ])) strtod_l.c:487 -1
     (nil))
(insn 111 110 460 56 (set (reg/v/f:DI 290 [ startp ])
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:487 -1
     (nil))
(code_label 460 111 454 57 138 "" [1 uses])
(note 454 460 455 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 57 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:683 -1
     (nil))
(insn 456 455 457 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 48 [0x30]))) strtod_l.c:682 -1
     (nil))
(jump_insn 457 456 458 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 501)
            (pc))) strtod_l.c:682 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 501)
(note 458 457 459 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 461 58 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 290 [ startp ])
                (const_int 1 [0x1])) [0 MEM[base: startp_349, offset: 1B]+0 S1 A8])) -1
     (nil))
(jump_insn 461 459 462 58 (set (pc)
        (label_ref 460)) -1
     (nil)
 -> 460)
(barrier 462 461 463)
(code_label 463 462 464 59 136 "" [2 uses])
(note 464 463 465 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 48 [0x30]))) strtod_l.c:689 -1
     (nil))
(jump_insn 466 465 467 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3239)
            (pc))) strtod_l.c:689 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3239)
(note 467 466 468 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 828 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:691 -1
     (nil))
(jump_insn 469 468 470 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3241)
            (pc))) strtod_l.c:691 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3241)
(note 470 469 471 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 290 [ startp ]) [0 *startp_22+0 S1 A8])
            (reg:QI 828 [ D.13401 ]))) strtod_l.c:692 -1
     (nil))
(jump_insn 472 471 475 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 501)
            (pc))) strtod_l.c:692 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 501)
(note 475 472 113 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 113 475 473 62 (set (reg:DI 303 [ ivtmp.370 ])
        (const_int 1 [0x1])) strtod_l.c:692 -1
     (nil))
(jump_insn 473 113 474 62 (set (pc)
        (label_ref 483)) strtod_l.c:692 -1
     (nil)
 -> 483)
(barrier 474 473 488)
(code_label 488 474 476 63 143 "" [1 uses])
(note 476 488 477 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 63 (parallel [
            (set (reg:DI 303 [ ivtmp.370 ])
                (plus:DI (reg:DI 303 [ ivtmp.370 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 478 477 479 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 284 [ D.13401 ])
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 290 [ startp ])
                        (reg:DI 303 [ ivtmp.370 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: startp_22, index: ivtmp.370_371, offset: -1B]+0 S1 A8]))) strtod_l.c:692 -1
     (nil))
(jump_insn 479 478 482 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 501)
            (pc))) strtod_l.c:692 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 501)
(note 482 479 480 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 480 482 481 64 (set (pc)
        (label_ref 485)) -1
     (nil)
 -> 485)
(barrier 481 480 483)
(code_label 483 481 484 65 141 "" [1 uses])
(note 484 483 485 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(code_label 485 484 486 66 142 "" [1 uses])
(note 486 485 487 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 489 66 (set (reg:QI 284 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 188 [ thousands ])
                (reg:DI 303 [ ivtmp.370 ])) [0 MEM[base: thousands_78, index: ivtmp.370_1213, offset: 0B]+0 S1 A8])) strtod_l.c:691 -1
     (nil))
(insn 489 487 490 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 284 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:691 -1
     (nil))
(jump_insn 490 489 491 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) strtod_l.c:691 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 488)
(note 491 490 492 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 67 (parallel [
            (set (reg:DI 822 [ D.13408 ])
                (plus:DI (reg:DI 303 [ ivtmp.370 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 493 492 494 67 (set (pc)
        (label_ref 2991)) -1
     (nil)
 -> 2991)
(barrier 494 493 3239)
(code_label 3239 494 3238 68 415 "" [1 uses])
(note 3238 3239 114 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 114 3238 495 68 (set (reg/v/f:DI 176 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(code_label 495 114 496 69 139 "" [1 uses])
(note 496 495 497 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 69 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 176 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:698 -1
     (nil))
(insn 498 497 499 69 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 176 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_23 + 1B]+0 S1 A8])) strtod_l.c:698 -1
     (nil))
(jump_insn 499 498 500 69 (set (pc)
        (label_ref 463)) strtod_l.c:699 -1
     (nil)
 -> 463)
(barrier 500 499 3237)
(code_label 3237 500 3236 70 414 "" [1 uses])
(note 3236 3237 115 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 115 3236 116 70 (set (reg/v/f:DI 174 [ startp ])
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:668 -1
     (nil))
(insn 116 115 117 70 (set (reg/v/f:DI 762 [ grouping ])
        (const_int 0 [0])) strtod_l.c:670 -1
     (nil))
(insn 117 116 501 70 (set (reg/v:SI 786 [ base ])
        (const_int 16 [0x10])) strtod_l.c:667 -1
     (nil))
(code_label 501 117 502 71 137 "" [4 uses])
(note 502 501 503 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 503 502 504 71 (parallel [
            (set (reg:QI 853 [ D.13412 ])
                (plus:QI (reg/v:QI 186 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:706 -1
     (nil))
(insn 504 503 505 71 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 853 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:706 -1
     (nil))
(jump_insn 505 504 3242 71 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 509)
            (pc))) strtod_l.c:706 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 509)
(note 3242 505 120 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 120 3242 121 72 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 121 120 3243 72 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3243 121 3244 72 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3244 3243 3246)
(code_label 3246 3244 3245 73 417 "" [1 uses])
(note 3245 3246 122 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 122 3245 123 73 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 123 122 3247 73 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3247 123 3248 73 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3248 3247 3250)
(code_label 3250 3248 3249 74 418 "" [1 uses])
(note 3249 3250 124 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 124 3249 125 74 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 125 124 3251 74 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3251 125 3252 74 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3252 3251 3254)
(code_label 3254 3252 3253 75 419 "" [1 uses])
(note 3253 3254 132 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 132 3253 133 75 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 133 132 3255 75 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3255 133 3256 75 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3256 3255 3258)
(code_label 3258 3256 3257 76 420 "" [1 uses])
(note 3257 3258 128 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 128 3257 129 76 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 129 128 513 76 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(code_label 513 129 506 77 146 "" [6 uses])
(note 506 513 507 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(jump_insn 507 506 508 77 (set (pc)
        (label_ref 604)) -1
     (nil)
 -> 604)
(barrier 508 507 509)
(code_label 509 508 510 78 144 "" [1 uses])
(note 510 509 511 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 511 510 512 78 (set (reg:DI 854 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:705 -1
     (nil))
(insn 512 511 514 78 (set (reg/v:SI 294 [ __res ])
        (mem:SI (plus:DI (mult:DI (reg:DI 854 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277 [ D.13414 ])) [4 *_354+0 S4 A32])) strtod_l.c:705 -1
     (nil))
(insn 514 512 515 78 (parallel [
            (set (reg:QI 855 [ D.13412 ])
                (plus:QI (subreg:QI (reg/v:SI 294 [ __res ]) 0)
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:707 -1
     (nil))
(insn 515 514 516 78 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 855 [ D.13412 ])
            (const_int 5 [0x5]))) strtod_l.c:707 -1
     (nil))
(insn 516 515 517 78 (set (reg:QI 857 [ D.13402 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:707 -1
     (nil))
(insn 517 516 518 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 857 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:707 -1
     (nil))
(jump_insn 518 517 3361 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3384)
            (pc))) strtod_l.c:707 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 3384)
(note 3361 518 519 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 519 3361 520 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:707 -1
     (nil))
(insn 520 519 521 79 (set (reg:QI 859 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:707 -1
     (nil))
(insn 521 520 522 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 859 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:707 -1
     (nil))
(jump_insn 522 521 3362 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3246)
            (pc))) strtod_l.c:707 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 3246)
(note 3362 522 3384 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(code_label 3384 3362 524 81 447 "" [1 uses])
(note 524 3384 525 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 81 (set (reg/v:QI 295 [ lowc ])
        (subreg:QI (reg/v:SI 294 [ __res ]) 0)) strtod_l.c:705 -1
     (nil))
(insn 526 525 527 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:712 -1
     (nil))
(jump_insn 527 526 528 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3013)
            (pc))) strtod_l.c:712 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 3013)
(note 528 527 529 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 529 528 530 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.13401 ])
            (mem:QI (reg/v/f:DI 290 [ startp ]) [0 *startp_24+0 S1 A8]))) strtod_l.c:713 -1
     (nil))
(jump_insn 530 529 533 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2996)
            (pc))) strtod_l.c:713 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2996)
(note 533 530 134 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 134 533 531 83 (set (reg:DI 336 [ ivtmp.351 ])
        (const_int 0 [0])) strtod_l.c:713 -1
     (nil))
(jump_insn 531 134 532 83 (set (pc)
        (label_ref 541)) strtod_l.c:713 -1
     (nil)
 -> 541)
(barrier 532 531 546)
(code_label 546 532 534 84 152 "" [1 uses])
(note 534 546 535 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 536 84 (parallel [
            (set (reg:DI 336 [ ivtmp.351 ])
                (plus:DI (reg:DI 336 [ ivtmp.351 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 536 535 537 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 299 [ D.13401 ])
            (mem:QI (plus:DI (reg/v/f:DI 290 [ startp ])
                    (reg:DI 336 [ ivtmp.351 ])) [0 MEM[base: startp_24, index: ivtmp.351_423, offset: 0B]+0 S1 A8]))) strtod_l.c:713 -1
     (nil))
(jump_insn 537 536 540 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2996)
            (pc))) strtod_l.c:713 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2996)
(note 540 537 538 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(jump_insn 538 540 539 85 (set (pc)
        (label_ref 543)) -1
     (nil)
 -> 543)
(barrier 539 538 541)
(code_label 541 539 542 86 150 "" [1 uses])
(note 542 541 543 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(code_label 543 542 544 87 151 "" [1 uses])
(note 544 543 545 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 547 87 (set (reg:QI 299 [ D.13401 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 244 [ decimal ])
                    (reg:DI 336 [ ivtmp.351 ]))
                (const_int 1 [0x1])) [0 MEM[base: decimal_251, index: ivtmp.351_1212, offset: 1B]+0 S1 A8])) strtod_l.c:712 -1
     (nil))
(insn 547 545 548 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 299 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:712 -1
     (nil))
(jump_insn 548 547 551 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) strtod_l.c:712 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 546)
(note 551 548 549 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(jump_insn 549 551 550 88 (set (pc)
        (label_ref 3013)) -1
     (nil)
 -> 3013)
(barrier 550 549 3015)
(code_label 3015 550 552 89 383 "" [1 uses])
(note 552 3015 553 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 89 (set (reg:QI 308 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 290 [ startp ])
                (reg/v:DI 245 [ decimal_len ])) [0 *_377+0 S1 A8])) strtod_l.c:722 -1
     (nil))
(insn 554 553 555 89 (parallel [
            (set (reg:QI 860 [ D.13412 ])
                (plus:QI (reg:QI 308 [ D.13401 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:722 -1
     (nil))
(insn 555 554 556 89 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 860 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:722 -1
     (nil))
(jump_insn 556 555 557 89 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3250)
            (pc))) strtod_l.c:722 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3250)
(note 557 556 558 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 90 (set (reg:DI 861 [ D.13400 ])
        (sign_extend:DI (reg:QI 308 [ D.13401 ]))) strtod_l.c:723 -1
     (nil))
(insn 559 558 560 90 (set (reg:SI 862)
        (mem:SI (plus:DI (mult:DI (reg:DI 861 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277 [ D.13414 ])) [4 *_386+0 S4 A32])) strtod_l.c:723 -1
     (nil))
(insn 560 559 561 90 (parallel [
            (set (reg:QI 863 [ D.13412 ])
                (plus:QI (subreg:QI (reg:SI 862) 0)
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:723 -1
     (nil))
(insn 561 560 562 90 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 863 [ D.13412 ])
            (const_int 5 [0x5]))) strtod_l.c:723 -1
     (nil))
(jump_insn 562 561 2998 90 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3254)
            (pc))) strtod_l.c:723 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3254)
(code_label 2998 562 563 91 382 "" [3 uses])
(note 563 2998 564 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:706 -1
     (nil))
(insn 565 564 566 91 (set (reg:QI 865 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:706 -1
     (nil))
(insn 566 565 567 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 865 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:706 -1
     (nil))
(jump_insn 567 566 3363 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3385)
            (pc))) strtod_l.c:706 612 {*jcc_1}
     (int_list:REG_BR_PROB 1450 (nil))
 -> 3385)
(note 3363 567 568 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 568 3363 569 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 295 [ lowc ])
            (const_int 101 [0x65]))) strtod_l.c:706 -1
     (nil))
(insn 569 568 570 92 (set (reg:QI 867 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:706 -1
     (nil))
(insn 570 569 571 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 867 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:706 -1
     (nil))
(jump_insn 571 570 3364 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3258)
            (pc))) strtod_l.c:706 612 {*jcc_1}
     (int_list:REG_BR_PROB 8304 (nil))
 -> 3258)
(note 3364 571 3385 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(code_label 3385 3364 573 94 448 "" [1 uses])
(note 573 3385 574 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 574 573 575 94 (set (reg:DI 2 cx)
        (reg/v/f:DI 762 [ grouping ])) strtod_l.c:733 -1
     (nil))
(insn 575 574 576 94 (set (reg:DI 1 dx)
        (reg/v/f:DI 188 [ thousands ])) strtod_l.c:733 -1
     (nil))
(insn 576 575 577 94 (set (reg:DI 4 si)
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:733 -1
     (nil))
(insn 577 576 578 94 (set (reg:DI 5 di)
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:733 -1
     (nil))
(call_insn 578 577 579 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__correctly_grouped_prefixmb") [flags 0x43]  <function_decl 0x2ab61e42e0d8 __correctly_grouped_prefixmb>) [0 __correctly_grouped_prefixmb S1 A8])
            (const_int 0 [0]))) strtod_l.c:733 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__correctly_grouped_prefixmb") [flags 0x43]  <function_decl 0x2ab61e42e0d8 __correctly_grouped_prefixmb>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 579 578 580 94 (set (reg/v/f:DI 323 [ tp ])
        (reg:DI 0 ax)) strtod_l.c:733 -1
     (nil))
(insn 580 579 581 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:738 -1
     (nil))
(jump_insn 581 580 582 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 593)
            (pc))) strtod_l.c:738 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 593)
(note 582 581 583 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 323 [ tp ])
            (reg/v/f:DI 174 [ startp ]))) strtod_l.c:738 -1
     (nil))
(jump_insn 584 583 585 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3262)
            (pc))) strtod_l.c:738 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 3262)
(note 585 584 586 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 586 585 587 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:738 -1
     (nil))
(jump_insn 587 586 588 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3266)
            (pc))) strtod_l.c:738 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 3266)
(note 588 587 589 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 3259 97 (parallel [
            (set (reg/f:DI 224 [ D.13407 ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:738 -1
     (nil))
(jump_insn 3259 589 3260 97 (set (pc)
        (label_ref 590)) -1
     (nil)
 -> 590)
(barrier 3260 3259 3262)
(code_label 3262 3260 3261 98 421 "" [1 uses])
(note 3261 3262 136 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 136 3261 3263 98 (set (reg/f:DI 224 [ D.13407 ])
        (reg/v/f:DI 323 [ tp ])) -1
     (nil))
(jump_insn 3263 136 3264 98 (set (pc)
        (label_ref 590)) -1
     (nil)
 -> 590)
(barrier 3264 3263 3266)
(code_label 3266 3264 3265 99 422 "" [1 uses])
(note 3265 3266 135 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 135 3265 590 99 (set (reg/f:DI 224 [ D.13407 ])
        (reg/v/f:DI 830 [ nptr ])) strtod_l.c:738 -1
     (nil))
(code_label 590 135 591 100 155 "" [2 uses])
(note 591 590 592 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 100 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/f:DI 224 [ D.13407 ])) strtod_l.c:738 -1
     (nil))
(code_label 593 592 594 101 154 "" [1 uses])
(note 594 593 595 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:738 -1
     (nil))
(jump_insn 596 595 707 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 600)
            (pc))) strtod_l.c:738 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 600)
(code_label 707 596 597 102 171 "" [2 uses])
(note 597 707 231 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 231 597 598 102 (set (reg:DF 222 [ D.13405 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [8  S8 A64])) strtod_l.c:738 -1
     (expr_list:REG_EQUAL (const_double:DF -0.0 [-0x0.0p+0])
        (nil)))
(jump_insn 598 231 599 102 (set (pc)
        (label_ref 2977)) -1
     (nil)
 -> 2977)
(barrier 599 598 600)
(code_label 600 599 601 103 132 "" [4 uses])
(note 601 600 223 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 223 601 602 103 (set (reg:DF 222 [ D.13405 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [8  S8 A64])) strtod_l.c:738 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(jump_insn 602 223 603 103 (set (pc)
        (label_ref 2977)) -1
     (nil)
 -> 2977)
(barrier 603 602 604)
(code_label 604 603 605 104 145 "" [2 uses])
(note 605 604 606 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 104 (parallel [
            (set (reg:QI 868 [ D.13412 ])
                (plus:QI (reg/v:QI 186 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:748 -1
     (nil))
(insn 607 606 608 104 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 868 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:748 -1
     (nil))
(jump_insn 608 607 609 104 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) strtod_l.c:748 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 618)
(note 609 608 610 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:749 -1
     (nil))
(jump_insn 611 610 612 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) strtod_l.c:749 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 623)
(note 612 611 613 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 106 (set (reg:DI 869 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:750 -1
     (nil))
(insn 614 613 615 106 (set (reg:SI 870)
        (mem:SI (plus:DI (mult:DI (reg:DI 869 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 277 [ D.13414 ])) [4 *_414+0 S4 A32])) strtod_l.c:750 -1
     (nil))
(insn 615 614 616 106 (parallel [
            (set (reg:QI 871 [ D.13412 ])
                (plus:QI (subreg:QI (reg:SI 870) 0)
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:750 -1
     (nil))
(insn 616 615 617 106 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 871 [ D.13412 ])
            (const_int 5 [0x5]))) strtod_l.c:750 -1
     (nil))
(jump_insn 617 616 618 106 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 623)
            (pc))) strtod_l.c:750 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 623)
(code_label 618 617 619 107 156 "" [1 uses])
(note 619 618 620 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 138 107 (parallel [
            (set (reg/v:DI 183 [ dig_no ])
                (plus:DI (reg/v:DI 183 [ dig_no ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:752 -1
     (nil))
(insn 138 620 621 107 (set (reg/v/f:DI 178 [ startp ])
        (reg/v/f:DI 177 [ startp ])) strtod_l.c:752 -1
     (nil))
(jump_insn 621 138 622 107 (set (pc)
        (label_ref 656)) strtod_l.c:752 -1
     (nil)
 -> 656)
(barrier 622 621 623)
(code_label 623 622 624 108 157 "" [2 uses])
(note 624 623 625 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 188 [ thousands ])
            (const_int 0 [0]))) strtod_l.c:761 -1
     (nil))
(jump_insn 626 625 627 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) strtod_l.c:761 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 662)
(note 627 626 628 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 628 627 629 109 (set (reg:QI 743 [ D.13401 ])
        (mem:QI (reg/v/f:DI 188 [ thousands ]) [0 *thousands_78+0 S1 A8])) strtod_l.c:765 -1
     (nil))
(insn 629 628 630 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 743 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:765 -1
     (nil))
(jump_insn 630 629 631 109 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3268)
            (pc))) strtod_l.c:765 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3268)
(note 631 630 632 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 177 [ startp ]) [0 *startp_25+0 S1 A8])
            (reg:QI 743 [ D.13401 ]))) strtod_l.c:766 -1
     (nil))
(jump_insn 633 632 636 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) strtod_l.c:766 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 662)
(note 636 633 137 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 137 636 634 111 (set (reg:DI 345 [ ivtmp.345 ])
        (const_int 1 [0x1])) strtod_l.c:766 -1
     (nil))
(jump_insn 634 137 635 111 (set (pc)
        (label_ref 644)) strtod_l.c:766 -1
     (nil)
 -> 644)
(barrier 635 634 649)
(code_label 649 635 637 112 163 "" [1 uses])
(note 637 649 638 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 638 637 639 112 (parallel [
            (set (reg:DI 345 [ ivtmp.345 ])
                (plus:DI (reg:DI 345 [ ivtmp.345 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 639 638 640 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 334 [ D.13401 ])
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 177 [ startp ])
                        (reg:DI 345 [ ivtmp.345 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: startp_25, index: ivtmp.345_443, offset: -1B]+0 S1 A8]))) strtod_l.c:766 -1
     (nil))
(jump_insn 640 639 643 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) strtod_l.c:766 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 662)
(note 643 640 641 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(jump_insn 641 643 642 113 (set (pc)
        (label_ref 646)) -1
     (nil)
 -> 646)
(barrier 642 641 644)
(code_label 644 642 645 114 161 "" [1 uses])
(note 645 644 646 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(code_label 646 645 647 115 162 "" [1 uses])
(note 647 646 648 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 650 115 (set (reg:QI 334 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 188 [ thousands ])
                (reg:DI 345 [ ivtmp.345 ])) [0 MEM[base: thousands_78, index: ivtmp.345_1215, offset: 0B]+0 S1 A8])) strtod_l.c:765 -1
     (nil))
(insn 650 648 651 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 334 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:765 -1
     (nil))
(jump_insn 651 650 652 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) strtod_l.c:765 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 649)
(note 652 651 653 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 116 (parallel [
            (set (reg:DI 820 [ D.13408 ])
                (plus:DI (reg:DI 345 [ ivtmp.345 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 654 653 655 116 (set (pc)
        (label_ref 3028)) -1
     (nil)
 -> 3028)
(barrier 655 654 656)
(code_label 656 655 657 117 158 "" [2 uses])
(note 657 656 658 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 117 (parallel [
            (set (reg/v/f:DI 177 [ startp ])
                (plus:DI (reg/v/f:DI 178 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:774 -1
     (nil))
(insn 659 658 660 117 (set (reg/v:QI 186 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 178 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_26 + 1B]+0 S1 A8])) strtod_l.c:774 -1
     (nil))
(jump_insn 660 659 661 117 (set (pc)
        (label_ref 604)) strtod_l.c:775 -1
     (nil)
 -> 604)
(barrier 661 660 662)
(code_label 662 661 663 118 159 "" [3 uses])
(note 663 662 664 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 118 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 177 [ startp ])
            (reg/v/f:DI 174 [ startp ]))) strtod_l.c:777 -1
     (nil))
(insn 665 664 666 118 (set (reg:QI 873 [ D.13402 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:777 -1
     (nil))
(insn 666 665 667 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 873 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:777 -1
     (nil))
(jump_insn 667 666 3365 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 731)
            (pc))) strtod_l.c:777 -1
     (int_list:REG_BR_PROB 3550 (nil))
 -> 731)
(note 3365 667 668 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 668 3365 669 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 762 [ grouping ])
            (const_int 0 [0]))) strtod_l.c:777 -1
     (nil))
(insn 669 668 670 119 (set (reg:QI 875 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:777 -1
     (nil))
(insn 670 669 671 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 875 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:777 -1
     (nil))
(jump_insn 671 670 672 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 731)
            (pc))) strtod_l.c:777 -1
     (int_list:REG_BR_PROB 5504 (nil))
 -> 731)
(note 672 671 673 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 120 (set (reg:DI 2 cx)
        (reg/v/f:DI 762 [ grouping ])) strtod_l.c:784 -1
     (nil))
(insn 674 673 675 120 (set (reg:DI 1 dx)
        (reg/v/f:DI 188 [ thousands ])) strtod_l.c:784 -1
     (nil))
(insn 675 674 676 120 (set (reg:DI 4 si)
        (reg/v/f:DI 177 [ startp ])) strtod_l.c:784 -1
     (nil))
(insn 676 675 677 120 (set (reg:DI 5 di)
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:784 -1
     (nil))
(call_insn 677 676 678 120 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__correctly_grouped_prefixmb") [flags 0x43]  <function_decl 0x2ab61e42e0d8 __correctly_grouped_prefixmb>) [0 __correctly_grouped_prefixmb S1 A8])
            (const_int 0 [0]))) strtod_l.c:784 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__correctly_grouped_prefixmb") [flags 0x43]  <function_decl 0x2ab61e42e0d8 __correctly_grouped_prefixmb>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 678 677 679 120 (set (reg/v/f:DI 179 [ startp ])
        (reg:DI 0 ax)) strtod_l.c:784 -1
     (nil))
(insn 679 678 680 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 177 [ startp ])
            (reg/v/f:DI 179 [ startp ]))) strtod_l.c:787 -1
     (nil))
(jump_insn 680 679 681 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 685)
            (pc))) strtod_l.c:787 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 685)
(note 681 680 682 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 682 681 683 121 (set (reg:QI 201 [ D.13401 ])
        (mem:QI (reg/v/f:DI 244 [ decimal ]) [0 *decimal_251+0 S1 A8])) -1
     (nil))
(jump_insn 683 682 684 121 (set (pc)
        (label_ref 731)) -1
     (nil)
 -> 731)
(barrier 684 683 685)
(code_label 685 684 686 122 165 "" [1 uses])
(note 686 685 688 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 688 686 689 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 179 [ startp ])
            (reg/v/f:DI 174 [ startp ]))) strtod_l.c:791 -1
     (nil))
(jump_insn 689 688 690 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 687)
            (pc))) strtod_l.c:791 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 687)
(note 690 689 691 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 691 690 692 123 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 290 [ startp ])
            (reg/v/f:DI 179 [ startp ]))) strtod_l.c:795 -1
     (nil))
(jump_insn 692 691 693 123 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 699)
            (pc))) strtod_l.c:795 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 699)
(note 693 692 694 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 124 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 290 [ startp ])
            (reg/v/f:DI 179 [ startp ]))) strtod_l.c:804 -1
     (nil))
(jump_insn 695 694 698 124 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 713)
            (pc))) strtod_l.c:804 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 713)
(note 698 695 696 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(jump_insn 696 698 697 125 (set (pc)
        (label_ref 3124)) strtod_l.c:804 -1
     (nil)
 -> 3124)
(barrier 697 696 699)
(code_label 699 697 700 126 167 "" [1 uses])
(note 700 699 701 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 701 700 702 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:798 -1
     (nil))
(jump_insn 702 701 703 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 705)
            (pc))) strtod_l.c:798 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 705)
(note 703 702 704 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 127 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/v/f:DI 179 [ startp ])) strtod_l.c:798 -1
     (nil))
(code_label 705 704 706 128 170 "" [1 uses])
(note 706 705 708 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 708 706 709 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:798 -1
     (nil))
(jump_insn 709 708 712 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 707)
            (pc))) strtod_l.c:798 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 707)
(note 712 709 710 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(jump_insn 710 712 711 129 (set (pc)
        (label_ref 600)) -1
     (nil)
 -> 600)
(barrier 711 710 713)
(code_label 713 711 714 130 168 "" [1 uses])
(note 714 713 139 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 139 714 140 130 (set (reg/v/f:DI 342 [ startp ])
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:804 -1
     (nil))
(insn 140 139 725 130 (set (reg/v:DI 184 [ dig_no ])
        (const_int 0 [0])) strtod_l.c:804 -1
     (nil))
(code_label 725 140 715 131 173 "" [1 uses])
(note 715 725 716 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 716 715 717 131 (set (reg:QI 877)
        (mem:QI (reg/v/f:DI 342 [ startp ]) [0 MEM[base: startp_1206, offset: 0B]+0 S1 A8])) strtod_l.c:805 -1
     (nil))
(insn 717 716 718 131 (parallel [
            (set (reg:QI 876 [ D.13412 ])
                (plus:QI (reg:QI 877)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:805 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (reg/v/f:DI 342 [ startp ]) [0 MEM[base: startp_1206, offset: 0B]+0 S1 A8])
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 718 717 719 131 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 876 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:805 -1
     (nil))
(jump_insn 719 718 720 131 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 722)
            (pc))) strtod_l.c:805 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 722)
(note 720 719 721 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 721 720 722 132 (parallel [
            (set (reg/v:DI 184 [ dig_no ])
                (plus:DI (reg/v:DI 184 [ dig_no ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:806 -1
     (nil))
(code_label 722 721 723 133 172 "" [1 uses])
(note 723 722 724 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 724 723 726 133 (parallel [
            (set (reg/v/f:DI 342 [ startp ])
                (plus:DI (reg/v/f:DI 342 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:804 -1
     (nil))
(insn 726 724 727 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 179 [ startp ])
            (reg/v/f:DI 342 [ startp ]))) strtod_l.c:804 -1
     (nil))
(jump_insn 727 726 730 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 725)
            (pc))) strtod_l.c:804 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 725)
(note 730 727 159 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 159 730 160 134 (set (reg/v:DI 183 [ dig_no ])
        (reg/v:DI 184 [ dig_no ])) -1
     (nil))
(insn 160 159 728 134 (set (reg/v:DI 185 [ lead_zero ])
        (const_int 0 [0])) strtod_l.c:809 -1
     (nil))
(jump_insn 728 160 729 134 (set (pc)
        (label_ref 1251)) -1
     (nil)
 -> 1251)
(barrier 729 728 731)
(code_label 731 729 732 135 164 "" [3 uses])
(note 732 731 733 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 183 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:819 -1
     (nil))
(insn 734 733 735 135 (set (reg:QI 879)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:819 -1
     (nil))
(insn 735 734 736 135 (set (reg:DI 878 [ D.13402 ])
        (zero_extend:DI (reg:QI 879))) strtod_l.c:819 -1
     (nil))
(insn 736 735 737 135 (parallel [
            (set (reg/v:DI 185 [ lead_zero ])
                (neg:DI (reg:DI 878 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:819 -1
     (nil))
(insn 737 736 738 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:828 -1
     (nil))
(jump_insn 738 737 739 135 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3033)
            (pc))) strtod_l.c:828 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 3033)
(note 739 738 740 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 740 739 741 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 177 [ startp ]) [0 *startp_25+0 S1 A8])
            (reg:QI 201 [ D.13401 ]))) strtod_l.c:829 -1
     (nil))
(jump_insn 741 740 744 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3273)
            (pc))) strtod_l.c:829 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3273)
(note 744 741 141 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 141 744 742 137 (set (reg:DI 352 [ ivtmp.336 ])
        (const_int 0 [0])) strtod_l.c:829 -1
     (nil))
(jump_insn 742 141 743 137 (set (pc)
        (label_ref 752)) strtod_l.c:829 -1
     (nil)
 -> 752)
(barrier 743 742 757)
(code_label 757 743 745 138 179 "" [1 uses])
(note 745 757 746 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 138 (parallel [
            (set (reg:DI 352 [ ivtmp.336 ])
                (plus:DI (reg:DI 352 [ ivtmp.336 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 747 746 748 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 343 [ D.13401 ])
            (mem:QI (plus:DI (reg/v/f:DI 177 [ startp ])
                    (reg:DI 352 [ ivtmp.336 ])) [0 MEM[base: startp_25, index: ivtmp.336_1411, offset: 0B]+0 S1 A8]))) strtod_l.c:829 -1
     (nil))
(jump_insn 748 747 751 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3277)
            (pc))) strtod_l.c:829 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3277)
(note 751 748 749 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(jump_insn 749 751 750 139 (set (pc)
        (label_ref 754)) -1
     (nil)
 -> 754)
(barrier 750 749 752)
(code_label 752 750 753 140 177 "" [1 uses])
(note 753 752 754 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(code_label 754 753 755 141 178 "" [1 uses])
(note 755 754 756 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 758 141 (set (reg:QI 343 [ D.13401 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 244 [ decimal ])
                    (reg:DI 352 [ ivtmp.336 ]))
                (const_int 1 [0x1])) [0 MEM[base: decimal_251, index: ivtmp.336_452, offset: 1B]+0 S1 A8])) strtod_l.c:828 -1
     (nil))
(insn 758 756 759 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 343 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:828 -1
     (nil))
(jump_insn 759 758 762 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 757)
            (pc))) strtod_l.c:828 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 757)
(note 762 759 760 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 760 762 761 142 (set (pc)
        (label_ref 3033)) -1
     (nil)
 -> 3033)
(barrier 761 760 783)
(code_label 783 761 763 143 181 "" [2 uses])
(note 763 783 764 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 765 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 186 [ c ])
            (const_int 48 [0x30]))) strtod_l.c:841 -1
     (nil))
(insn 765 764 766 143 (set (reg:QI 881 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:841 -1
     (nil))
(insn 766 765 767 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 881 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:841 -1
     (nil))
(jump_insn 767 766 3366 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) strtod_l.c:841 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 774)
(note 3366 767 768 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 768 3366 769 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int -1 [0xffffffffffffffff]))) strtod_l.c:841 -1
     (nil))
(insn 769 768 770 144 (set (reg:QI 883 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:841 -1
     (nil))
(insn 770 769 771 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 883 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:841 -1
     (nil))
(jump_insn 771 770 772 144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) strtod_l.c:841 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 774)
(note 772 771 773 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 773 772 774 145 (parallel [
            (set (reg/v:DI 185 [ lead_zero ])
                (minus:DI (reg/v/f:DI 177 [ startp ])
                    (reg:DI 751 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 774 773 775 146 180 "" [2 uses])
(note 775 774 776 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 146 (parallel [
            (set (reg/v/f:DI 177 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:844 -1
     (nil))
(insn 777 776 3037 146 (set (reg/v:QI 186 [ c ])
        (mem:QI (reg/v/f:DI 177 [ startp ]) [0 MEM[base: startp_453, offset: 0B]+0 S1 A8])) strtod_l.c:844 -1
     (nil))
(code_label 3037 777 778 147 385 "" [1 uses])
(note 778 3037 779 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 779 778 780 147 (set (reg:DI 751 [ D.13400 ])
        (reg/v/f:DI 346 [ startp ])) -1
     (nil))
(insn 780 779 781 147 (parallel [
            (set (reg:DI 884 [ D.13400 ])
                (minus:DI (reg/v:DI 183 [ dig_no ])
                    (reg:DI 751 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 781 780 782 147 (parallel [
            (set (reg/f:DI 777 [ D.13399 ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (reg:DI 884 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 782 781 784 147 (set (reg/v:DI 184 [ dig_no ])
        (reg/f:DI 777 [ D.13399 ])) -1
     (nil))
(insn 784 782 785 147 (parallel [
            (set (reg:QI 885 [ D.13412 ])
                (plus:QI (reg/v:QI 186 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:837 -1
     (nil))
(insn 785 784 786 147 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 885 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:837 -1
     (nil))
(jump_insn 786 785 787 147 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) strtod_l.c:837 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 783)
(note 787 786 788 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:837 -1
     (nil))
(jump_insn 789 788 790 148 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) strtod_l.c:837 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 797)
(note 790 789 791 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 791 790 792 149 (set (reg:DI 886 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:838 -1
     (nil))
(insn 792 791 793 149 (set (reg/f:DI 887)
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) strtod_l.c:838 -1
     (nil))
(insn 793 792 794 149 (set (reg:SI 888)
        (mem:SI (plus:DI (mult:DI (reg:DI 886 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 887)) [4 *_458+0 S4 A32])) strtod_l.c:838 -1
     (nil))
(insn 794 793 795 149 (parallel [
            (set (reg:QI 889 [ D.13412 ])
                (plus:QI (subreg:QI (reg:SI 888) 0)
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:838 -1
     (nil))
(insn 795 794 796 149 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 889 [ D.13412 ])
            (const_int 5 [0x5]))) strtod_l.c:838 -1
     (nil))
(jump_insn 796 795 3269 149 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 783)
            (pc))) strtod_l.c:838 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 783)
(note 3269 796 3270 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3270 3269 3271 150 (set (pc)
        (label_ref 797)) -1
     (nil)
 -> 797)
(barrier 3271 3270 3273)
(code_label 3273 3271 3272 151 424 "" [1 uses])
(note 3272 3273 144 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 144 3272 3274 151 (set (reg/v:DI 184 [ dig_no ])
        (reg/v:DI 183 [ dig_no ])) strtod_l.c:829 -1
     (nil))
(jump_insn 3274 144 3275 151 (set (pc)
        (label_ref 797)) -1
     (nil)
 -> 797)
(barrier 3275 3274 3277)
(code_label 3277 3275 3276 152 425 "" [1 uses])
(note 3276 3277 143 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 143 3276 797 152 (set (reg/v:DI 184 [ dig_no ])
        (reg/v:DI 183 [ dig_no ])) -1
     (nil))
(code_label 797 143 798 153 176 "" [3 uses])
(note 798 797 799 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 800 153 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 184 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:847 -1
     (nil))
(jump_insn 800 799 801 153 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 808)
            (pc))) strtod_l.c:847 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 808)
(note 801 800 802 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 802 801 803 154 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:847 -1
     (nil))
(insn 803 802 804 154 (set (reg:SI 1 dx)
        (const_int 847 [0x34f])) strtod_l.c:847 -1
     (nil))
(insn 804 803 805 154 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:847 -1
     (nil))
(insn 805 804 806 154 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2ab61e83c480 *.LC19>)) strtod_l.c:847 -1
     (nil))
(call_insn 806 805 807 154 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:847 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 807 806 808)
(code_label 808 807 809 155 182 "" [1 uses])
(note 809 808 810 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 810 809 811 155 (set (reg:DI 890 [ D.13400 ])
        (sign_extend:DI (reg/v:QI 186 [ c ]))) strtod_l.c:853 -1
     (nil))
(insn 811 810 812 155 (set (reg/f:DI 891)
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) strtod_l.c:853 -1
     (nil))
(insn 812 811 813 155 (set (reg:SI 892)
        (mem:SI (plus:DI (mult:DI (reg:DI 890 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 891)) [4 *_466+0 S4 A32])) strtod_l.c:853 -1
     (nil))
(insn 813 812 814 155 (set (reg/v:QI 366 [ lowc ])
        (subreg:QI (reg:SI 892) 0)) strtod_l.c:853 -1
     (nil))
(insn 814 813 815 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:854 -1
     (nil))
(insn 815 814 816 155 (set (reg:QI 894 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:854 -1
     (nil))
(insn 816 815 817 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 894 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:854 -1
     (nil))
(jump_insn 817 816 3367 155 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3386)
            (pc))) strtod_l.c:854 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 3386)
(note 3367 817 818 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 818 3367 819 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 366 [ lowc ])
            (const_int 112 [0x70]))) strtod_l.c:854 -1
     (nil))
(insn 819 818 820 156 (set (reg:QI 896 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:854 -1
     (nil))
(insn 820 819 821 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 896 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:854 -1
     (nil))
(jump_insn 821 820 3368 156 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 832)
            (pc))) strtod_l.c:854 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 832)
(note 3368 821 3386 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(code_label 3386 3368 823 158 449 "" [1 uses])
(note 823 3386 824 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 824 823 825 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:855 -1
     (nil))
(insn 825 824 826 158 (set (reg:QI 898 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:855 -1
     (nil))
(insn 826 825 827 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 898 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:855 -1
     (nil))
(jump_insn 827 826 3369 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3281)
            (pc))) strtod_l.c:855 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 3281)
(note 3369 827 828 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 828 3369 829 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 366 [ lowc ])
            (const_int 101 [0x65]))) strtod_l.c:855 -1
     (nil))
(insn 829 828 830 159 (set (reg:QI 900 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:855 -1
     (nil))
(insn 830 829 831 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 900 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:855 -1
     (nil))
(jump_insn 831 830 832 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3281)
            (pc))) strtod_l.c:855 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 3281)
(code_label 832 831 833 160 183 "" [1 uses])
(note 833 832 834 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 834 833 835 160 (set (reg/v:QI 187 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 177 [ startp ])
                (const_int 1 [0x1])) [0 MEM[(const char *)startp_28 + 1B]+0 S1 A8])) strtod_l.c:859 -1
     (nil))
(insn 835 834 836 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 187 [ c ])
            (const_int 45 [0x2d]))) strtod_l.c:860 -1
     (nil))
(jump_insn 836 835 837 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 842)
            (pc))) strtod_l.c:860 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 842)
(note 837 836 838 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 838 837 839 161 (parallel [
            (set (reg/v/f:DI 179 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:863 -1
     (nil))
(insn 839 838 145 161 (set (reg/v:QI 187 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 177 [ startp ])
                (const_int 2 [0x2])) [0 MEM[(const char *)startp_28 + 2B]+0 S1 A8])) strtod_l.c:863 -1
     (nil))
(insn 145 839 840 161 (set (reg/v:SI 190 [ exp_negative ])
        (const_int 1 [0x1])) strtod_l.c:862 -1
     (nil))
(jump_insn 840 145 841 161 (set (pc)
        (label_ref 854)) -1
     (nil)
 -> 854)
(barrier 841 840 842)
(code_label 842 841 843 162 186 "" [1 uses])
(note 843 842 844 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 844 843 845 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 187 [ c ])
            (const_int 43 [0x2b]))) strtod_l.c:865 -1
     (nil))
(jump_insn 845 844 846 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 850)
            (pc))) strtod_l.c:865 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 850)
(note 846 845 847 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 146 163 (parallel [
            (set (reg/v/f:DI 179 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:859 -1
     (nil))
(insn 146 847 848 163 (set (reg/v:SI 190 [ exp_negative ])
        (const_int 0 [0])) strtod_l.c:857 -1
     (nil))
(jump_insn 848 146 849 163 (set (pc)
        (label_ref 854)) strtod_l.c:859 -1
     (nil)
 -> 854)
(barrier 849 848 850)
(code_label 850 849 851 164 188 "" [1 uses])
(note 851 850 852 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 852 851 853 164 (parallel [
            (set (reg/v/f:DI 179 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:866 -1
     (nil))
(insn 853 852 147 164 (set (reg/v:QI 187 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 177 [ startp ])
                (const_int 2 [0x2])) [0 MEM[(const char *)startp_28 + 2B]+0 S1 A8])) strtod_l.c:866 -1
     (nil))
(insn 147 853 854 164 (set (reg/v:SI 190 [ exp_negative ])
        (const_int 0 [0])) strtod_l.c:857 -1
     (nil))
(code_label 854 147 855 165 187 "" [2 uses])
(note 855 854 856 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 856 855 857 165 (parallel [
            (set (reg:QI 901 [ D.13412 ])
                (plus:QI (reg/v:QI 187 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:868 -1
     (nil))
(insn 857 856 858 165 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 901 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:868 -1
     (nil))
(jump_insn 858 857 859 165 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3285)
            (pc))) strtod_l.c:868 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3285)
(note 859 858 860 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:873 -1
     (nil))
(jump_insn 861 860 862 166 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 944)
            (pc))) strtod_l.c:873 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 944)
(note 862 861 863 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 863 862 864 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190 [ exp_negative ])
            (const_int 0 [0]))) strtod_l.c:875 -1
     (nil))
(jump_insn 864 863 865 167 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 887)
            (pc))) strtod_l.c:875 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 887)
(note 865 864 866 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 866 865 867 168 (set (reg:DI 902)
        (const_int 2305843009213693683 [0x1ffffffffffffef3])) strtod_l.c:877 -1
     (nil))
(insn 867 866 868 168 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 183 [ dig_no ])
            (reg:DI 902))) strtod_l.c:877 -1
     (nil))
(jump_insn 868 867 869 168 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 876)
            (pc))) strtod_l.c:877 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 876)
(note 869 868 870 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 870 869 871 169 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:877 -1
     (nil))
(insn 871 870 872 169 (set (reg:SI 1 dx)
        (const_int 878 [0x36e])) strtod_l.c:877 -1
     (nil))
(insn 872 871 873 169 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:877 -1
     (nil))
(insn 873 872 874 169 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2ab61e83c510 *.LC20>)) strtod_l.c:877 -1
     (nil))
(call_insn 874 873 875 169 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:877 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 875 874 876)
(code_label 876 875 877 170 191 "" [1 uses])
(note 877 876 878 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 170 (parallel [
            (set (reg:DI 903 [ D.13406 ])
                (ashift:DI (reg/v:DI 183 [ dig_no ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:879 -1
     (nil))
(insn 879 878 880 170 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (plus:DI (reg:DI 903 [ D.13406 ])
                    (const_int 1074 [0x432])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:879 -1
     (nil))
(insn 880 879 881 170 (set (reg:DI 905)
        (const_int 7378697629483820647 [0x6666666666666667])) -1
     (nil))
(insn 881 880 882 170 (parallel [
            (set (reg:DI 904)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 905)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 882 881 883 170 (parallel [
            (set (reg:DI 906)
                (ashiftrt:DI (reg:DI 904)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 883 882 884 170 (parallel [
            (set (reg:DI 907)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 884 883 885 170 (parallel [
            (set (reg:DI 816 [ D.13406 ])
                (minus:DI (reg:DI 906)
                    (reg:DI 907)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(jump_insn 885 884 886 170 (set (pc)
        (label_ref:DI 1033)) 654 {jump}
     (nil)
 -> 1033)
(barrier 886 885 887)
(code_label 887 886 888 171 190 "" [1 uses])
(note 888 887 889 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 183 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:883 -1
     (nil))
(jump_insn 890 889 891 171 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 917)
            (pc))) strtod_l.c:883 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 917)
(note 891 890 892 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 892 891 893 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int 0 [0]))) strtod_l.c:885 -1
     (nil))
(insn 893 892 894 172 (set (reg:QI 909 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:885 -1
     (nil))
(insn 894 893 895 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 909 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:885 -1
     (nil))
(jump_insn 895 894 3370 172 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3387)
            (pc))) strtod_l.c:885 612 {*jcc_1}
     (int_list:REG_BR_PROB 2 (nil))
 -> 3387)
(note 3370 895 896 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 896 3370 897 173 (set (reg:DI 911)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) strtod_l.c:885 -1
     (nil))
(insn 897 896 898 173 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 183 [ dig_no ])
            (reg:DI 911))) strtod_l.c:885 -1
     (nil))
(insn 898 897 899 173 (set (reg:QI 912 [ D.13402 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:885 -1
     (nil))
(insn 899 898 900 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 912 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:885 -1
     (nil))
(jump_insn 900 899 3371 173 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) strtod_l.c:885 -1
     (int_list:REG_BR_PROB 9998 (nil))
 -> 909)
(note 3371 900 3387 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(code_label 3387 3371 902 175 450 "" [1 uses])
(note 902 3387 903 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 903 902 904 175 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:885 -1
     (nil))
(insn 904 903 905 175 (set (reg:SI 1 dx)
        (const_int 886 [0x376])) strtod_l.c:885 -1
     (nil))
(insn 905 904 906 175 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:885 -1
     (nil))
(insn 906 905 907 175 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2ab61e83c5a0 *.LC21>)) strtod_l.c:885 -1
     (nil))
(call_insn 907 906 908 175 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:885 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 908 907 909)
(code_label 909 908 910 176 194 "" [1 uses])
(note 910 909 911 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 176 (set (reg:DI 914)
        (const_int 256 [0x100])) strtod_l.c:887 -1
     (nil))
(insn 912 911 913 176 (parallel [
            (set (reg:DI 913 [ D.13406 ])
                (minus:DI (reg:DI 914)
                    (reg/v:DI 183 [ dig_no ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:887 -1
     (nil))
(insn 913 912 914 176 (parallel [
            (set (reg:DI 915 [ D.13406 ])
                (ashift:DI (reg:DI 913 [ D.13406 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:887 -1
     (nil))
(insn 914 913 915 176 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (plus:DI (reg:DI 915 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:887 -1
     (nil))
(jump_insn 915 914 916 176 (set (pc)
        (label_ref 1022)) -1
     (nil)
 -> 1022)
(barrier 916 915 917)
(code_label 917 916 918 177 193 "" [1 uses])
(note 918 917 919 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 919 918 920 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int -1 [0xffffffffffffffff]))) strtod_l.c:889 -1
     (nil))
(jump_insn 920 919 921 177 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3287)
            (pc))) strtod_l.c:889 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3287)
(note 921 920 922 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 922 921 923 178 (set (reg:DI 916)
        (const_int 2305843009213693695 [0x1ffffffffffffeff])) strtod_l.c:897 -1
     (nil))
(insn 923 922 924 178 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 185 [ lead_zero ])
            (reg:DI 916))) strtod_l.c:897 -1
     (nil))
(jump_insn 924 923 925 178 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 932)
            (pc))) strtod_l.c:897 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 932)
(note 925 924 926 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 179 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:897 -1
     (nil))
(insn 927 926 928 179 (set (reg:SI 1 dx)
        (const_int 898 [0x382])) strtod_l.c:897 -1
     (nil))
(insn 928 927 929 179 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:897 -1
     (nil))
(insn 929 928 930 179 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2ab61e83c630 *.LC22>)) strtod_l.c:897 -1
     (nil))
(call_insn 930 929 931 179 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:897 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 931 930 932)
(code_label 932 931 933 180 197 "" [1 uses])
(note 933 932 934 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 934 933 935 180 (parallel [
            (set (reg:DI 917 [ D.13406 ])
                (plus:DI (reg/v:DI 185 [ lead_zero ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:899 -1
     (nil))
(insn 935 934 936 180 (parallel [
            (set (reg:DI 918 [ D.13406 ])
                (ashift:DI (reg:DI 917 [ D.13406 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:899 -1
     (nil))
(insn 936 935 937 180 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (plus:DI (reg:DI 918 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:899 -1
     (nil))
(insn 937 936 938 180 (set (reg:DI 920)
        (const_int 7378697629483820647 [0x6666666666666667])) -1
     (nil))
(insn 938 937 939 180 (parallel [
            (set (reg:DI 919)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 920)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 939 938 940 180 (parallel [
            (set (reg:DI 921)
                (ashiftrt:DI (reg:DI 919)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 940 939 941 180 (parallel [
            (set (reg:DI 922)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 941 940 942 180 (parallel [
            (set (reg:DI 816 [ D.13406 ])
                (minus:DI (reg:DI 921)
                    (reg:DI 922)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(jump_insn 942 941 943 180 (set (pc)
        (label_ref:DI 1033)) 654 {jump}
     (nil)
 -> 1033)
(barrier 943 942 944)
(code_label 944 943 945 181 189 "" [1 uses])
(note 945 944 946 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190 [ exp_negative ])
            (const_int 0 [0]))) strtod_l.c:907 -1
     (nil))
(jump_insn 947 946 948 181 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 969)
            (pc))) strtod_l.c:907 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 969)
(note 948 947 949 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 949 948 950 182 (set (reg:DI 923)
        (const_int 9223372036854775447 [0x7ffffffffffffe97])) strtod_l.c:909 -1
     (nil))
(insn 950 949 951 182 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 183 [ dig_no ])
            (reg:DI 923))) strtod_l.c:909 -1
     (nil))
(jump_insn 951 950 952 182 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 959)
            (pc))) strtod_l.c:909 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 959)
(note 952 951 953 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 953 952 954 183 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:909 -1
     (nil))
(insn 954 953 955 183 (set (reg:SI 1 dx)
        (const_int 910 [0x38e])) strtod_l.c:909 -1
     (nil))
(insn 955 954 956 183 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:909 -1
     (nil))
(insn 956 955 957 183 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2ab61e83c6c0 *.LC23>)) strtod_l.c:909 -1
     (nil))
(call_insn 957 956 958 183 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:909 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 958 957 959)
(code_label 959 958 960 184 199 "" [1 uses])
(note 960 959 961 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 961 960 962 184 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (plus:DI (reg/v:DI 183 [ dig_no ])
                    (const_int 360 [0x168])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:911 -1
     (nil))
(insn 962 961 963 184 (set (reg:DI 925)
        (const_int 7378697629483820647 [0x6666666666666667])) -1
     (nil))
(insn 963 962 964 184 (parallel [
            (set (reg:DI 924)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 925)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 964 963 965 184 (parallel [
            (set (reg:DI 926)
                (ashiftrt:DI (reg:DI 924)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 965 964 966 184 (parallel [
            (set (reg:DI 927)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 966 965 967 184 (parallel [
            (set (reg:DI 816 [ D.13406 ])
                (minus:DI (reg:DI 926)
                    (reg:DI 927)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(jump_insn 967 966 968 184 (set (pc)
        (label_ref:DI 1033)) 654 {jump}
     (nil)
 -> 1033)
(barrier 968 967 969)
(code_label 969 968 970 185 198 "" [1 uses])
(note 970 969 971 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 971 970 972 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 183 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:915 -1
     (nil))
(jump_insn 972 971 973 185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 997)
            (pc))) strtod_l.c:915 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 997)
(note 973 972 974 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 974 973 975 186 (set (reg:DI 388 [ D.13415 ])
        (reg/v:DI 183 [ dig_no ])) strtod_l.c:917 -1
     (nil))
(insn 975 974 976 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int 0 [0]))) strtod_l.c:917 -1
     (nil))
(insn 976 975 977 186 (set (reg:QI 929 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:917 -1
     (nil))
(insn 977 976 978 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 929 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:917 -1
     (nil))
(jump_insn 978 977 3372 186 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3388)
            (pc))) strtod_l.c:917 612 {*jcc_1}
     (int_list:REG_BR_PROB 2 (nil))
 -> 3388)
(note 3372 978 979 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 979 3372 980 187 (parallel [
            (set (reg:DI 931)
                (lshiftrt:DI (reg:DI 388 [ D.13415 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:917 -1
     (nil))
(insn 980 979 981 187 (set (reg:QI 932)
        (subreg:QI (reg:DI 931) 0)) strtod_l.c:917 -1
     (nil))
(insn 981 980 982 187 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 932)
            (const_int 0 [0]))) strtod_l.c:917 -1
     (nil))
(jump_insn 982 981 3373 187 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 991)
            (pc))) strtod_l.c:917 -1
     (int_list:REG_BR_PROB 9998 (nil))
 -> 991)
(note 3373 982 3388 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(code_label 3388 3373 984 189 451 "" [1 uses])
(note 984 3388 985 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 986 189 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:917 -1
     (nil))
(insn 986 985 987 189 (set (reg:SI 1 dx)
        (const_int 918 [0x396])) strtod_l.c:917 -1
     (nil))
(insn 987 986 988 189 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:917 -1
     (nil))
(insn 988 987 989 189 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2ab61e83c750 *.LC24>)) strtod_l.c:917 -1
     (nil))
(call_insn 989 988 990 189 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:917 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 990 989 991)
(code_label 991 990 992 190 201 "" [1 uses])
(note 992 991 993 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 190 (set (reg:DI 933)
        (const_int 309 [0x135])) strtod_l.c:919 -1
     (nil))
(insn 994 993 995 190 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (minus:DI (reg:DI 933)
                    (reg:DI 388 [ D.13415 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:919 -1
     (nil))
(jump_insn 995 994 996 190 (set (pc)
        (label_ref 1022)) -1
     (nil)
 -> 1022)
(barrier 996 995 997)
(code_label 997 996 998 191 200 "" [1 uses])
(note 998 997 999 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 999 998 1000 191 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int -1 [0xffffffffffffffff]))) strtod_l.c:921 -1
     (nil))
(jump_insn 1000 999 1001 191 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3291)
            (pc))) strtod_l.c:921 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3291)
(note 1001 1000 1002 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1002 1001 1003 192 (set (reg:DI 934)
        (const_int 9223372036854775498 [0x7ffffffffffffeca])) strtod_l.c:929 -1
     (nil))
(insn 1003 1002 1004 192 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 185 [ lead_zero ])
            (reg:DI 934))) strtod_l.c:929 -1
     (nil))
(jump_insn 1004 1003 1005 192 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1012)
            (pc))) strtod_l.c:929 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1012)
(note 1005 1004 1006 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 1006 1005 1007 193 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:929 -1
     (nil))
(insn 1007 1006 1008 193 (set (reg:SI 1 dx)
        (const_int 930 [0x3a2])) strtod_l.c:929 -1
     (nil))
(insn 1008 1007 1009 193 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:929 -1
     (nil))
(insn 1009 1008 1010 193 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2ab61e83c7e0 *.LC25>)) strtod_l.c:929 -1
     (nil))
(call_insn 1010 1009 1011 193 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:929 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1011 1010 1012)
(code_label 1012 1011 1013 194 203 "" [1 uses])
(note 1013 1012 1014 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 194 (parallel [
            (set (reg/v:DI 692 [ exp_limit ])
                (plus:DI (reg/v:DI 185 [ lead_zero ])
                    (const_int 309 [0x135])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:931 -1
     (nil))
(insn 1015 1014 1016 194 (set (reg:DI 936)
        (const_int 7378697629483820647 [0x6666666666666667])) -1
     (nil))
(insn 1016 1015 1017 194 (parallel [
            (set (reg:DI 935)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 936)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1017 1016 1018 194 (parallel [
            (set (reg:DI 937)
                (ashiftrt:DI (reg:DI 935)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1018 1017 1019 194 (parallel [
            (set (reg:DI 938)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1019 1018 1020 194 (parallel [
            (set (reg:DI 816 [ D.13406 ])
                (minus:DI (reg:DI 937)
                    (reg:DI 938)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(jump_insn 1020 1019 1021 194 (set (pc)
        (label_ref:DI 1033)) 654 {jump}
     (nil)
 -> 1033)
(barrier 1021 1020 1022)
(code_label 1022 1021 1023 195 196 "" [2 uses])
(note 1023 1022 1024 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 1024 1023 1025 195 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 692 [ exp_limit ])
            (const_int 0 [0]))) strtod_l.c:936 -1
     (nil))
(jump_insn 1025 1024 1026 195 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3295)
            (pc))) strtod_l.c:936 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3295)
(note 1026 1025 1027 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 196 (set (reg:DI 940)
        (const_int 7378697629483820647 [0x6666666666666667])) -1
     (nil))
(insn 1028 1027 1029 196 (parallel [
            (set (reg:DI 939)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 940)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1029 1028 1030 196 (parallel [
            (set (reg:DI 941)
                (ashiftrt:DI (reg:DI 939)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1030 1029 1031 196 (parallel [
            (set (reg:DI 942)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1031 1030 3292 196 (parallel [
            (set (reg:DI 816 [ D.13406 ])
                (minus:DI (reg:DI 941)
                    (reg:DI 942)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(jump_insn 3292 1031 3293 196 (set (pc)
        (label_ref 1033)) -1
     (nil)
 -> 1033)
(barrier 3293 3292 3295)
(code_label 3295 3293 3294 198 430 "" [1 uses])
(note 3294 3295 148 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 148 3294 149 198 (set (reg:DI 816 [ D.13406 ])
        (const_int 0 [0])) -1
     (nil))
(insn 149 148 1033 198 (set (reg/v:DI 692 [ exp_limit ])
        (const_int 0 [0])) strtod_l.c:937 -1
     (nil))
(code_label 1033 149 1034 199 204 "" [7 uses])
(note 1034 1033 1035 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 1035 1034 1036 199 (set (reg:DI 401 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(insn 1036 1035 1037 199 (set (reg:DI 944)
        (const_int 7378697629483820647 [0x6666666666666667])) strtod_l.c:943 -1
     (nil))
(insn 1037 1036 1038 199 (parallel [
            (set (reg:DI 943)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg/v:DI 692 [ exp_limit ]))
                            (sign_extend:TI (reg:DI 944)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1038 1037 1039 199 (parallel [
            (set (reg:DI 945)
                (ashiftrt:DI (reg:DI 943)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1039 1038 1040 199 (parallel [
            (set (reg:DI 946)
                (ashiftrt:DI (reg/v:DI 692 [ exp_limit ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1040 1039 1041 199 (parallel [
            (set (reg:DI 397 [ D.13406 ])
                (minus:DI (reg:DI 945)
                    (reg:DI 946)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (expr_list:REG_EQUAL (div:DI (reg/v:DI 692 [ exp_limit ])
            (const_int 10 [0xa]))
        (nil)))
(insn 1041 1040 1042 199 (set (reg:DI 947)
        (reg:DI 397 [ D.13406 ])) strtod_l.c:943 -1
     (nil))
(insn 1042 1041 1043 199 (parallel [
            (set (reg:DI 948)
                (ashift:DI (reg:DI 947)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1043 1042 1044 199 (parallel [
            (set (reg:DI 949)
                (plus:DI (reg:DI 948)
                    (reg:DI 397 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 397 [ D.13406 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 1044 1043 1045 199 (parallel [
            (set (reg:DI 950)
                (ashift:DI (reg:DI 949)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1045 1044 1046 199 (set (reg:DI 949)
        (reg:DI 950)) strtod_l.c:943 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 397 [ D.13406 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 1046 1045 150 199 (parallel [
            (set (reg:DI 397 [ D.13406 ])
                (minus:DI (reg/v:DI 692 [ exp_limit ])
                    (reg:DI 949)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 150 1046 3061 199 (set (reg:QI 752 [ exponent_lsm.189 ])
        (const_int 0 [0])) strtod_l.c:943 -1
     (nil))
(code_label 3061 150 1047 200 387 "" [1 uses])
(note 1047 3061 1048 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 200 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 816 [ D.13406 ])
            (reg:DI 401 [ D.13406 ]))) strtod_l.c:941 -1
     (nil))
(jump_insn 1049 1048 1050 200 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1059)
            (pc))) strtod_l.c:941 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1059)
(note 1050 1049 1051 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 1051 1050 1052 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 752 [ exponent_lsm.189 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 1052 1051 1053 201 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1076)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1076)
(note 1053 1052 1054 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1057 202 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 401 [ D.13406 ])) -1
     (nil))
(jump_insn 1057 1054 1058 202 (set (pc)
        (label_ref 1076)) -1
     (nil)
 -> 1076)
(barrier 1058 1057 1059)
(code_label 1059 1058 1060 204 205 "" [1 uses])
(note 1060 1059 1061 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1061 1060 1062 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 816 [ D.13406 ])
            (reg:DI 401 [ D.13406 ]))) strtod_l.c:941 -1
     (nil))
(jump_insn 1062 1061 1063 204 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3045)
            (pc))) strtod_l.c:941 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 3045)
(note 1063 1062 1064 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 1064 1063 1065 205 (set (reg:SI 951 [ D.13409 ])
        (sign_extend:SI (reg/v:QI 187 [ c ]))) strtod_l.c:943 -1
     (nil))
(insn 1065 1064 1066 205 (parallel [
            (set (reg:SI 952 [ D.13409 ])
                (plus:SI (reg:SI 951 [ D.13409 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:943 -1
     (nil))
(insn 1066 1065 1067 205 (set (reg:DI 819 [ D.13406 ])
        (sign_extend:DI (reg:SI 952 [ D.13409 ]))) strtod_l.c:943 -1
     (nil))
(insn 1067 1066 1068 205 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 819 [ D.13406 ])
            (reg:DI 397 [ D.13406 ]))) strtod_l.c:941 -1
     (nil))
(jump_insn 1068 1067 1069 205 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3050)
            (pc))) strtod_l.c:941 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 3050)
(note 1069 1068 1070 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 1070 1069 1071 206 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 752 [ exponent_lsm.189 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 1071 1070 1072 206 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1076)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1076)
(note 1072 1071 1073 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1072 1076 207 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 401 [ D.13406 ])) -1
     (nil))
(code_label 1076 1073 1077 209 207 "" [3 uses])
(note 1077 1076 1078 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 1078 1077 1079 209 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int -1 [0xffffffffffffffff]))) strtod_l.c:952 -1
     (nil))
(jump_insn 1079 1078 1080 209 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1086)
            (pc))) strtod_l.c:952 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1086)
(note 1080 1079 1081 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 210 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:953 -1
     (nil))
(jump_insn 1082 1081 1083 210 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3299)
            (pc))) strtod_l.c:953 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3299)
(note 1083 1082 152 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 152 1083 1084 211 (set (reg/v:DF 288 [ result ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [8  S8 A64])) strtod_l.c:953 -1
     (expr_list:REG_EQUAL (const_double:DF -0.0 [-0x0.0p+0])
        (nil)))
(jump_insn 1084 152 1085 211 (set (pc)
        (label_ref 1125)) -1
     (nil)
 -> 1125)
(barrier 1085 1084 1086)
(code_label 1086 1085 1087 212 211 "" [1 uses])
(note 1087 1086 1088 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 1088 1087 1089 212 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190 [ exp_negative ])
            (const_int 0 [0]))) strtod_l.c:959 -1
     (nil))
(jump_insn 1089 1088 1090 212 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1108)
            (pc))) strtod_l.c:959 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1108)
(note 1090 1089 1091 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 1091 1090 1092 213 (set (reg:DI 953)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:185 -1
     (nil))
(insn 1092 1091 1093 213 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 953)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:185 -1
     (nil))
(insn 1093 1092 1094 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:186 -1
     (nil))
(jump_insn 1094 1093 1095 213 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1101)
            (pc))) strtod_l.c:186 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1101)
(note 1095 1094 1096 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 1096 1095 1097 214 (set (reg:DF 954)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1097 1096 1098 214 (set (reg:DF 955)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF -2.22507385850720138309023271733240406421921598046233e-308 [-0x0.8p-1021])
        (nil)))
(insn 1098 1097 1099 214 (set (reg/v:DF 288 [ result ])
        (mult:DF (reg:DF 954)
            (reg:DF 955))) strtod_l.c:186 -1
     (nil))
(jump_insn 1099 1098 1100 214 (set (pc)
        (label_ref 1125)) strtod_l.c:186 -1
     (nil)
 -> 1125)
(barrier 1100 1099 1101)
(code_label 1101 1100 1102 215 214 "" [1 uses])
(note 1102 1101 1103 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 1103 1102 1104 215 (set (reg:DF 956)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1104 1103 1105 215 (set (reg:DF 957)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1105 1104 1106 215 (set (reg/v:DF 288 [ result ])
        (mult:DF (reg:DF 956)
            (reg:DF 957))) strtod_l.c:186 -1
     (nil))
(jump_insn 1106 1105 1107 215 (set (pc)
        (label_ref 1125)) strtod_l.c:186 -1
     (nil)
 -> 1125)
(barrier 1107 1106 1108)
(code_label 1108 1107 1109 216 213 "" [1 uses])
(note 1109 1108 1110 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 1110 1109 1111 216 (set (reg:DI 958)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:173 -1
     (nil))
(insn 1111 1110 1112 216 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 958)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:173 -1
     (nil))
(insn 1112 1111 1113 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:174 -1
     (nil))
(jump_insn 1113 1112 1114 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1120)
            (pc))) strtod_l.c:174 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1120)
(note 1114 1113 1115 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1115 1114 1116 217 (set (reg:DF 959)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1116 1115 1117 217 (set (reg:DF 960)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF -1.79769313486231570814527423731704356798070567525845e+308 [-0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1117 1116 1118 217 (set (reg/v:DF 288 [ result ])
        (mult:DF (reg:DF 959)
            (reg:DF 960))) strtod_l.c:174 -1
     (nil))
(jump_insn 1118 1117 1119 217 (set (pc)
        (label_ref 1125)) strtod_l.c:174 -1
     (nil)
 -> 1125)
(barrier 1119 1118 1120)
(code_label 1120 1119 1121 218 215 "" [1 uses])
(note 1121 1120 1122 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1122 1121 1123 218 (set (reg:DF 961)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1123 1122 1124 218 (set (reg:DF 962)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1124 1123 3296 218 (set (reg/v:DF 288 [ result ])
        (mult:DF (reg:DF 961)
            (reg:DF 962))) strtod_l.c:174 -1
     (nil))
(jump_insn 3296 1124 3297 218 (set (pc)
        (label_ref 1125)) -1
     (nil)
 -> 1125)
(barrier 3297 3296 3299)
(code_label 3299 3297 3298 219 431 "" [1 uses])
(note 3298 3299 151 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 151 3298 1125 219 (set (reg/v:DF 288 [ result ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [8  S8 A64])) strtod_l.c:953 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(code_label 1125 151 1126 220 212 "" [5 uses])
(note 1126 1125 1129 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(code_label 1129 1126 1127 221 216 "" [1 uses])
(note 1127 1129 1128 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 1128 1127 1130 221 (parallel [
            (set (reg/v/f:DI 179 [ startp ])
                (plus:DI (reg/v/f:DI 179 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:964 -1
     (nil))
(insn 1130 1128 1131 221 (set (reg:QI 964)
        (mem:QI (reg/v/f:DI 179 [ startp ]) [0 MEM[base: startp_542, offset: 0B]+0 S1 A8])) strtod_l.c:965 -1
     (nil))
(insn 1131 1130 1132 221 (parallel [
            (set (reg:QI 963 [ D.13412 ])
                (plus:QI (reg:QI 964)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:965 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (reg/v/f:DI 179 [ startp ]) [0 MEM[base: startp_542, offset: 0B]+0 S1 A8])
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 1132 1131 1133 221 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 963 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:965 -1
     (nil))
(jump_insn 1133 1132 1134 221 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1129)
            (pc))) strtod_l.c:965 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1129)
(note 1134 1133 1135 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 1135 1134 1136 222 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:967 -1
     (nil))
(jump_insn 1136 1135 1137 222 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3303)
            (pc))) strtod_l.c:967 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 3303)
(note 1137 1136 1138 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1138 1137 226 223 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/v/f:DI 179 [ startp ])) strtod_l.c:967 -1
     (nil))
(insn 226 1138 1139 223 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 288 [ result ])) strtod_l.c:967 -1
     (nil))
(jump_insn 1139 226 1140 223 (set (pc)
        (label_ref 2977)) strtod_l.c:967 -1
     (nil)
 -> 2977)
(barrier 1140 1139 3065)
(code_label 3065 1140 1141 224 388 "" [1 uses])
(note 1141 3065 1142 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 224 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 401 [ D.13406 ])) -1
     (nil))
(insn 1143 1142 1144 224 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 190 [ exp_negative ])
            (const_int 0 [0]))) strtod_l.c:978 -1
     (nil))
(jump_insn 1144 1143 1145 224 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1148)
            (pc))) strtod_l.c:978 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1148)
(note 1145 1144 1146 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 1146 1145 1147 225 (parallel [
            (set (reg:DI 965)
                (neg:DI (reg:DI 401 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:979 -1
     (nil))
(insn 1147 1146 3278 225 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 965)) strtod_l.c:979 -1
     (nil))
(jump_insn 3278 1147 3279 225 (set (pc)
        (label_ref 1148)) -1
     (nil)
 -> 1148)
(barrier 3279 3278 3281)
(code_label 3281 3279 3280 226 426 "" [2 uses])
(note 3280 3281 153 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 153 3280 3282 226 (set (reg/v/f:DI 179 [ startp ])
        (reg/v/f:DI 177 [ startp ])) -1
     (nil))
(jump_insn 3282 153 3283 226 (set (pc)
        (label_ref 1148)) -1
     (nil)
 -> 1148)
(barrier 3283 3282 3285)
(code_label 3285 3283 3284 227 427 "" [1 uses])
(note 3284 3285 154 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 154 3284 1148 227 (set (reg/v/f:DI 179 [ startp ])
        (reg/v/f:DI 177 [ startp ])) -1
     (nil))
(code_label 1148 154 1149 228 185 "" [3 uses])
(note 1149 1148 1150 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1150 1149 1151 228 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 183 [ dig_no ])
            (reg/v:DI 184 [ dig_no ]))) strtod_l.c:986 -1
     (nil))
(jump_insn 1151 1150 1152 228 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1175)
            (pc))) strtod_l.c:986 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1175)
(note 1152 1151 1153 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 1153 1152 1154 229 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[(const char *)startp_28 + -1B]+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:988 -1
     (nil))
(jump_insn 1154 1153 1155 229 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1164)
            (pc))) strtod_l.c:988 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1164)
(note 1155 1154 155 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 155 1155 1161 230 (set (reg/v/f:DI 410 [ startp ])
        (reg/v/f:DI 177 [ startp ])) strtod_l.c:988 -1
     (nil))
(code_label 1161 155 1156 231 219 "" [1 uses])
(note 1156 1161 1157 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1157 1156 1158 231 (parallel [
            (set (reg/v/f:DI 410 [ startp ])
                (plus:DI (reg/v/f:DI 410 [ startp ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:990 -1
     (nil))
(insn 1158 1157 1159 231 (parallel [
            (set (reg:DI 966 [ D.13400 ])
                (minus:DI (reg/v:DI 184 [ dig_no ])
                    (reg/v/f:DI 177 [ startp ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1159 1158 1160 231 (parallel [
            (set (reg/f:DI 780 [ D.13399 ])
                (plus:DI (reg/v/f:DI 410 [ startp ])
                    (reg:DI 966 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1160 1159 1162 231 (set (reg/v:DI 779 [ dig_no ])
        (reg/f:DI 780 [ D.13399 ])) -1
     (nil))
(insn 1162 1160 1163 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 410 [ startp ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: startp_548, offset: -1B]+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:988 -1
     (nil))
(jump_insn 1163 1162 3304 231 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1161)
            (pc))) strtod_l.c:988 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1161)
(note 3304 1163 156 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 156 3304 157 232 (set (reg/v:DI 184 [ dig_no ])
        (reg/v:DI 779 [ dig_no ])) -1
     (nil))
(insn 157 156 1164 232 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 410 [ startp ])) strtod_l.c:990 -1
     (nil))
(code_label 1164 157 1165 233 218 "" [1 uses])
(note 1165 1164 1166 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1165 1167 233 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 183 [ dig_no ])
            (reg/v:DI 184 [ dig_no ]))) strtod_l.c:993 -1
     (nil))
(jump_insn 1167 1166 1168 233 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1175)
            (pc))) strtod_l.c:993 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1175)
(note 1168 1167 1169 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 1169 1168 1170 234 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:993 -1
     (nil))
(insn 1170 1169 1171 234 (set (reg:SI 1 dx)
        (const_int 993 [0x3e1])) strtod_l.c:993 -1
     (nil))
(insn 1171 1170 1172 234 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:993 -1
     (nil))
(insn 1172 1171 1173 234 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2ab61e83c870 *.LC26>)) strtod_l.c:993 -1
     (nil))
(call_insn 1173 1172 1174 234 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:993 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1174 1173 1175)
(code_label 1175 1174 1176 235 217 "" [2 uses])
(note 1176 1175 1177 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1177 1176 1178 235 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 183 [ dig_no ])
            (reg/v:DI 184 [ dig_no ]))) strtod_l.c:996 -1
     (nil))
(insn 1178 1177 1179 235 (set (reg:QI 968 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(insn 1179 1178 1180 235 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 968 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(jump_insn 1180 1179 3374 235 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) strtod_l.c:996 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1251)
(note 3374 1180 1181 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 1181 3374 1182 236 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 184 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(insn 1182 1181 1183 236 (set (reg:QI 970 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(insn 1183 1182 1184 236 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 970 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(jump_insn 1184 1183 1185 236 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1251)
            (pc))) strtod_l.c:996 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 1251)
(note 1185 1184 1186 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1186 1185 1187 237 (set (reg:DI 756 [ exponent_lsm.186 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:996 -1
     (nil))
(insn 1187 1186 1188 237 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 756 [ exponent_lsm.186 ])
            (const_int 0 [0]))) strtod_l.c:996 -1
     (nil))
(jump_insn 1188 1187 1189 237 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3069)
            (pc))) strtod_l.c:996 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 3069)
(note 1189 1188 1191 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 1191 1189 1192 238 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) -1
     (nil))
(insn 1192 1191 1193 238 (set (reg:QI 972)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 1193 1192 1194 238 (set (reg:DI 971)
        (zero_extend:DI (reg:QI 972))) -1
     (nil))
(insn 1194 1193 1195 238 (set (reg:DI 971)
        (plus:DI (plus:DI (mult:DI (reg:DI 971)
                    (const_int 2 [0x2]))
                (reg:DI 971))
            (const_int 1 [0x1]))) -1
     (nil))
(insn 1195 1194 1196 238 (set (reg:DI 228 [ D.13410 ])
        (reg:DI 971)) -1
     (nil))
(insn 1196 1195 158 238 (parallel [
            (set (reg:DI 432 [ ivtmp.314 ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 158 1196 1197 238 (set (reg:QI 755 [ exponent_lsm.187 ])
        (const_int 0 [0])) strtod_l.c:996 -1
     (nil))
(jump_insn 1197 158 1198 238 (set (pc)
        (label_ref 1201)) -1
     (nil)
 -> 1201)
(barrier 1198 1197 1223)
(code_label 1223 1198 1199 239 224 "" [2 uses])
(note 1199 1223 1200 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 1200 1199 1201 239 (parallel [
            (set (reg:DI 432 [ ivtmp.314 ])
                (plus:DI (reg:DI 432 [ ivtmp.314 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1201 1200 1202 240 221 "" [1 uses])
(note 1202 1201 1203 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 1203 1202 1204 240 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:999 -1
     (nil))
(jump_insn 1204 1203 1205 240 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1214)
            (pc))) strtod_l.c:999 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1214)
(note 1205 1204 1206 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 1206 1205 1207 241 (set (reg:DI 973 [ D.13400 ])
        (sign_extend:DI (mem:QI (reg:DI 432 [ ivtmp.314 ]) [0 MEM[base: _585, offset: 0B]+0 S1 A8]))) strtod_l.c:999 -1
     (nil))
(insn 1207 1206 1208 241 (set (reg/f:DI 974)
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 104 [0x68])) [2 loc_240(D)->__ctype_b+0 S8 A64])) strtod_l.c:999 -1
     (nil))
(insn 1208 1207 1209 241 (set (reg:HI 976)
        (mem:HI (plus:DI (mult:DI (reg:DI 973 [ D.13400 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 974)) [5 *_560+0 S2 A16])) strtod_l.c:999 -1
     (nil))
(insn 1209 1208 1210 241 (parallel [
            (set (reg:HI 975)
                (lshiftrt:HI (reg:HI 976)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:999 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 973 [ D.13400 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 974)) [5 *_560+0 S2 A16])
            (const_int 12 [0xc]))
        (nil)))
(insn 1210 1209 1211 241 (parallel [
            (set (reg:HI 977)
                (xor:HI (reg:HI 975)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:999 -1
     (nil))
(insn 1211 1210 1212 241 (parallel [
            (set (reg:QI 227 [ D.13402 ])
                (and:QI (subreg:QI (reg:HI 977) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:999 -1
     (nil))
(jump_insn 1212 1211 1213 241 (set (pc)
        (label_ref 1221)) -1
     (nil)
 -> 1221)
(barrier 1213 1212 1214)
(code_label 1214 1213 1215 242 222 "" [1 uses])
(note 1215 1214 1216 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 1216 1215 1217 242 (set (reg:SI 978 [ D.13416 ])
        (sign_extend:SI (mem:QI (reg:DI 432 [ ivtmp.314 ]) [0 MEM[base: _1403, offset: 0B]+0 S1 A8]))) strtod_l.c:999 -1
     (nil))
(insn 1217 1216 1218 242 (parallel [
            (set (reg:SI 979 [ D.13416 ])
                (plus:SI (reg:SI 978 [ D.13416 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:999 -1
     (nil))
(insn 1218 1217 1219 242 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 979 [ D.13416 ])
            (const_int 9 [0x9]))) strtod_l.c:999 -1
     (nil))
(insn 1219 1218 1220 242 (set (reg:QI 980)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:999 -1
     (nil))
(insn 1220 1219 1221 242 (set (reg:QI 227 [ D.13402 ])
        (reg:QI 980)) strtod_l.c:999 -1
     (nil))
(code_label 1221 1220 1222 243 223 "" [1 uses])
(note 1222 1221 1224 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1222 1225 243 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 227 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:999 -1
     (nil))
(jump_insn 1225 1224 1226 243 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1223)
            (pc))) strtod_l.c:999 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1223)
(note 1226 1225 1227 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 1227 1226 1228 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 432 [ ivtmp.314 ]) [0 MEM[base: _1402, offset: 0B]+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:1002 -1
     (nil))
(jump_insn 1228 1227 1229 244 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1238)
            (pc))) strtod_l.c:1002 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1238)
(note 1229 1228 1230 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 1230 1229 1231 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 755 [ exponent_lsm.187 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 1231 1230 1232 245 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3069)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3069)
(note 1232 1231 1233 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 1233 1232 1236 246 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 756 [ exponent_lsm.186 ])) -1
     (nil))
(jump_insn 1236 1233 1237 246 (set (pc)
        (label_ref 3069)) -1
     (nil)
 -> 3069)
(barrier 1237 1236 1238)
(code_label 1238 1237 1239 248 225 "" [1 uses])
(note 1239 1238 1240 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 1240 1239 1241 248 (parallel [
            (set (reg/v:DI 184 [ dig_no ])
                (plus:DI (reg/v:DI 184 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1006 -1
     (nil))
(insn 1241 1240 1242 248 (parallel [
            (set (reg/v:DI 183 [ dig_no ])
                (plus:DI (reg/v:DI 183 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1007 -1
     (nil))
(insn 1242 1241 1243 248 (parallel [
            (set (reg:DI 756 [ exponent_lsm.186 ])
                (plus:DI (reg:DI 756 [ exponent_lsm.186 ])
                    (reg:DI 228 [ D.13410 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1008 -1
     (nil))
(insn 1243 1242 1244 248 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 184 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:1010 -1
     (nil))
(insn 1244 1243 1245 248 (set (reg:QI 982 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1010 -1
     (nil))
(insn 1245 1244 1246 248 (parallel [
            (set (reg:DI 984)
                (lshiftrt:DI (reg:DI 756 [ exponent_lsm.186 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1010 -1
     (nil))
(insn 1246 1245 1247 248 (parallel [
            (set (reg:QI 755 [ exponent_lsm.187 ])
                (and:QI (reg:QI 982 [ D.13402 ])
                    (subreg:QI (reg:DI 984) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1010 -1
     (nil))
(insn 1247 1246 1248 248 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 755 [ exponent_lsm.187 ])
            (const_int 0 [0]))) strtod_l.c:1010 -1
     (nil))
(jump_insn 1248 1247 1249 248 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1223)
            (pc))) strtod_l.c:1010 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1223)
(note 1249 1248 1250 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 1250 1249 1251 249 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 756 [ exponent_lsm.186 ])) -1
     (nil))
(code_label 1251 1250 1252 250 174 ("number_parsed") [3 uses])
(note 1252 1251 1253 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 1253 1252 1254 250 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:1015 -1
     (nil))
(jump_insn 1254 1253 3356 250 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1257)
            (pc))) strtod_l.c:1015 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 1257)
(note 3356 1254 3357 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3357 3356 3358 251 (set (pc)
        (label_ref 3071)) -1
     (nil)
 -> 3071)
(barrier 3358 3357 3360)
(code_label 3360 3358 3359 252 446 "" [1 uses])
(note 3359 3360 161 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 161 3359 162 252 (set (reg/v:DI 185 [ lead_zero ])
        (const_int 0 [0])) strtod_l.c:809 -1
     (nil))
(insn 162 161 163 252 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) strtod_l.c:1015 -1
     (nil))
(insn 163 162 3071 252 (set (reg/v:DI 184 [ dig_no ])
        (const_int 0 [0])) strtod_l.c:1015 -1
     (nil))
(code_label 3071 163 1255 253 389 "" [2 uses])
(note 1255 3071 1256 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1256 1255 1257 253 (set (mem/f:DI (reg/v/f:DI 831 [ endptr ]) [2 *endptr_296(D)+0 S8 A64])
        (reg/v/f:DI 179 [ startp ])) strtod_l.c:1016 -1
     (nil))
(code_label 1257 1256 1258 254 227 "" [1 uses])
(note 1258 1257 1259 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 254 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 184 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:1018 -1
     (nil))
(jump_insn 1260 1259 3128 254 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1267)
            (pc))) strtod_l.c:1018 -1
     (int_list:REG_BR_PROB 4657 (nil))
 -> 1267)
(code_label 3128 1260 1261 255 398 "" [1 uses])
(note 1261 3128 1262 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 1262 1261 1263 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:1019 -1
     (nil))
(jump_insn 1263 1262 1266 255 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 707)
            (pc))) strtod_l.c:1019 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 707)
(note 1266 1263 1264 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1264 1266 1265 256 (set (pc)
        (label_ref 600)) -1
     (nil)
 -> 600)
(barrier 1265 1264 1267)
(code_label 1267 1265 1268 257 228 "" [2 uses])
(note 1268 1267 1269 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1269 1268 1270 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 185 [ lead_zero ])
            (const_int 0 [0]))) strtod_l.c:1021 -1
     (nil))
(jump_insn 1270 1269 1271 257 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1352)
            (pc))) strtod_l.c:1021 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1352)
(note 1271 1270 1272 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1272 1271 1273 258 (set (reg:QI 814 [ D.13401 ])
        (mem:QI (reg/v/f:DI 244 [ decimal ]) [0 *decimal_251+0 S1 A8])) -1
     (nil))
(insn 1273 1272 1274 258 (set (reg:QI 827 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 244 [ decimal ])
                (const_int 1 [0x1])) [0 MEM[(const char *)decimal_251 + 1B]+0 S1 A8])) -1
     (nil))
(insn 1274 1273 1312 258 (set (reg:QI 815 [ D.13401 ])
        (mem:QI (reg/v/f:DI 290 [ startp ]) [0 *startp_24+0 S1 A8])) -1
     (nil))
(code_label 1312 1274 1275 259 236 "" [1 uses])
(note 1275 1312 1276 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 1276 1275 1277 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 814 [ D.13401 ])
            (reg:QI 815 [ D.13401 ]))) strtod_l.c:1030 -1
     (nil))
(jump_insn 1277 1276 1278 259 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1306)
            (pc))) strtod_l.c:1030 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1306)
(note 1278 1277 1279 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 1279 1278 1280 260 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 827 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:1032 -1
     (nil))
(jump_insn 1280 1279 1281 260 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3077)
            (pc))) strtod_l.c:1032 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 3077)
(note 1281 1280 1282 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 1282 1281 1283 261 (set (reg:QI 815 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 290 [ startp ])
                (const_int 1 [0x1])) [0 MEM[base: startp_35, offset: 1B]+0 S1 A8])) strtod_l.c:1033 -1
     (nil))
(insn 1283 1282 1284 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 815 [ D.13401 ])
            (reg:QI 827 [ D.13401 ]))) strtod_l.c:1033 -1
     (nil))
(jump_insn 1284 1283 1287 261 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1309)
            (pc))) strtod_l.c:1033 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1309)
(note 1287 1284 164 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 164 1287 1285 262 (set (reg:DI 698 [ ivtmp.293 ])
        (const_int 0 [0])) strtod_l.c:1033 -1
     (nil))
(jump_insn 1285 164 1286 262 (set (pc)
        (label_ref 1295)) strtod_l.c:1033 -1
     (nil)
 -> 1295)
(barrier 1286 1285 1300)
(code_label 1300 1286 1288 263 235 "" [1 uses])
(note 1288 1300 1289 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 1289 1288 1290 263 (parallel [
            (set (reg:DI 698 [ ivtmp.293 ])
                (plus:DI (reg:DI 698 [ ivtmp.293 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1290 1289 1291 263 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 429 [ D.13401 ])
            (mem:QI (plus:DI (plus:DI (reg/v/f:DI 290 [ startp ])
                        (reg:DI 698 [ ivtmp.293 ]))
                    (const_int 1 [0x1])) [0 MEM[base: startp_35, index: ivtmp.293_1075, offset: 1B]+0 S1 A8]))) strtod_l.c:1033 -1
     (nil))
(jump_insn 1291 1290 1294 263 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3308)
            (pc))) strtod_l.c:1033 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3308)
(note 1294 1291 1292 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1292 1294 1293 264 (set (pc)
        (label_ref 1297)) -1
     (nil)
 -> 1297)
(barrier 1293 1292 1295)
(code_label 1295 1293 1296 265 233 "" [1 uses])
(note 1296 1295 1297 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(code_label 1297 1296 1298 266 234 "" [1 uses])
(note 1298 1297 1299 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 1299 1298 1301 266 (set (reg:QI 429 [ D.13401 ])
        (mem:QI (plus:DI (plus:DI (reg/v/f:DI 244 [ decimal ])
                    (reg:DI 698 [ ivtmp.293 ]))
                (const_int 2 [0x2])) [0 MEM[base: decimal_251, index: ivtmp.293_1074, offset: 2B]+0 S1 A8])) strtod_l.c:1032 -1
     (nil))
(insn 1301 1299 1302 266 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 429 [ D.13401 ])
            (const_int 0 [0]))) strtod_l.c:1032 -1
     (nil))
(jump_insn 1302 1301 1305 266 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1300)
            (pc))) strtod_l.c:1032 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1300)
(note 1305 1302 1303 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1303 1305 1304 267 (set (pc)
        (label_ref 3077)) -1
     (nil)
 -> 3077)
(barrier 1304 1303 1306)
(code_label 1306 1304 1307 268 230 "" [1 uses])
(note 1307 1306 1308 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 1308 1307 3305 268 (set (reg:QI 815 [ D.13401 ])
        (mem:QI (plus:DI (reg/v/f:DI 290 [ startp ])
                (const_int 1 [0x1])) [0 MEM[base: startp_35, offset: 1B]+0 S1 A8])) -1
     (nil))
(jump_insn 3305 1308 3306 268 (set (pc)
        (label_ref 1309)) -1
     (nil)
 -> 1309)
(barrier 3306 3305 3308)
(code_label 3308 3306 3307 269 433 "" [1 uses])
(note 3307 3308 165 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 165 3307 1309 269 (set (reg:QI 815 [ D.13401 ])
        (reg:QI 827 [ D.13401 ])) -1
     (nil))
(code_label 1309 165 1310 270 232 "" [2 uses])
(note 1310 1309 1311 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1310 1313 270 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1038 -1
     (nil))
(jump_insn 1313 1311 1314 270 (set (pc)
        (label_ref 1312)) strtod_l.c:1039 -1
     (nil)
 -> 1312)
(barrier 1314 1313 3134)
(code_label 3134 1314 1315 271 399 "" [2 uses])
(note 1315 3134 1316 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 1316 1315 1317 271 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1042 -1
     (nil))
(insn 1317 1316 1318 271 (set (reg:SI 1 dx)
        (const_int 1044 [0x414])) strtod_l.c:1042 -1
     (nil))
(insn 1318 1317 1319 271 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1042 -1
     (nil))
(insn 1319 1318 1320 271 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2ab61e83c900 *.LC27>)) strtod_l.c:1042 -1
     (nil))
(call_insn 1320 1319 1321 271 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1042 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1321 1320 3138)
(code_label 3138 1321 1322 272 400 "" [1 uses])
(note 1322 3138 1323 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 1323 1322 1324 272 (set (reg:DI 437 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1045 -1
     (nil))
(insn 1324 1323 1325 272 (set (reg:DI 986)
        (const_int -9223372036854775808 [0x8000000000000000])) strtod_l.c:1045 -1
     (nil))
(insn 1325 1324 1326 272 (parallel [
            (set (reg:DI 985 [ D.13400 ])
                (plus:DI (reg:DI 437 [ D.13406 ])
                    (reg:DI 986)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1045 -1
     (nil))
(insn 1326 1325 1327 272 (parallel [
            (set (reg:DI 987 [ D.13400 ])
                (lshiftrt:DI (reg:DI 985 [ D.13400 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1045 -1
     (nil))
(insn 1327 1326 1328 272 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 987 [ D.13400 ])
            (reg/v:DI 185 [ lead_zero ]))) strtod_l.c:1045 -1
     (nil))
(jump_insn 1328 1327 1331 272 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1338)
            (pc))) strtod_l.c:1045 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 1338)
(note 1331 1328 1329 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1329 1331 1330 273 (set (pc)
        (label_ref 3151)) strtod_l.c:1045 -1
     (nil)
 -> 3151)
(barrier 1330 1329 3147)
(code_label 3147 1330 1332 274 401 "" [1 uses])
(note 1332 3147 1333 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 1334 274 (set (reg:DI 437 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1045 -1
     (nil))
(insn 1334 1333 1335 274 (set (reg:DI 989)
        (const_int -9223372036854775808 [0x8000000000000000])) strtod_l.c:1045 -1
     (nil))
(insn 1335 1334 1336 274 (parallel [
            (set (reg:DI 988 [ D.13400 ])
                (plus:DI (reg:DI 437 [ D.13406 ])
                    (reg:DI 989)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1045 -1
     (nil))
(insn 1336 1335 1337 274 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 988 [ D.13400 ])
            (reg/v:DI 185 [ lead_zero ]))) strtod_l.c:1045 -1
     (nil))
(jump_insn 1337 1336 1338 274 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 3157)
            (pc))) strtod_l.c:1045 -1
     (int_list:REG_BR_PROB 9853 (nil))
 -> 3157)
(code_label 1338 1337 1339 275 237 "" [1 uses])
(note 1339 1338 1340 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 1340 1339 1341 275 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1045 -1
     (nil))
(insn 1341 1340 1342 275 (set (reg:SI 1 dx)
        (const_int 1048 [0x418])) strtod_l.c:1045 -1
     (nil))
(insn 1342 1341 1343 275 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1045 -1
     (nil))
(insn 1343 1342 1344 275 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x2ab61e83c990 *.LC28>)) strtod_l.c:1045 -1
     (nil))
(call_insn 1344 1343 1345 275 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1045 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1345 1344 3154)
(code_label 3154 1345 1346 276 402 "" [2 uses])
(note 1346 3154 1347 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1346 1348 276 (parallel [
            (set (reg:DI 990 [ D.13400 ])
                (plus:DI (reg/v:DI 245 [ decimal_len ])
                    (reg/v:DI 185 [ lead_zero ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1041 -1
     (nil))
(insn 1348 1347 1349 276 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (reg:DI 990 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1041 -1
     (nil))
(insn 1349 1348 1350 276 (parallel [
            (set (reg:DI 991)
                (minus:DI (reg:DI 437 [ D.13406 ])
                    (reg:DI 229 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1049 -1
     (nil))
(insn 1350 1349 1351 276 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 991)) strtod_l.c:1049 -1
     (nil))
(insn 1351 1350 1352 276 (parallel [
            (set (reg/v:DI 184 [ dig_no ])
                (minus:DI (reg/v:DI 184 [ dig_no ])
                    (reg/v:DI 185 [ lead_zero ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1050 -1
     (nil))
(code_label 1352 1351 1353 277 229 "" [1 uses])
(note 1353 1352 1354 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 1354 1353 1355 277 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:1054 -1
     (nil))
(jump_insn 1355 1354 1356 277 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1583)
            (pc))) strtod_l.c:1054 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1583)
(note 1356 1355 1357 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 1357 1356 1358 278 (set (reg/f:DI 750 [ D.13413 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 104 [0x68])) [2 loc_240(D)->__ctype_b+0 S8 A64])) strtod_l.c:1062 -1
     (nil))
(insn 1358 1357 1359 278 (set (reg:QI 442 [ D.13401 ])
        (mem:QI (reg/v/f:DI 290 [ startp ]) [0 *startp_36+0 S1 A8])) strtod_l.c:1062 -1
     (nil))
(insn 1359 1358 1360 278 (set (reg:DI 992 [ D.13400 ])
        (sign_extend:DI (reg:QI 442 [ D.13401 ]))) strtod_l.c:1062 -1
     (nil))
(insn 1360 1359 1361 278 (set (reg:HI 994)
        (mem:HI (plus:DI (mult:DI (reg:DI 992 [ D.13400 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 750 [ D.13413 ])) [5 *_1505+0 S2 A16])) strtod_l.c:1062 -1
     (nil))
(insn 1361 1360 1362 278 (parallel [
            (set (reg:HI 993 [ D.13403 ])
                (and:HI (reg:HI 994)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1062 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 992 [ D.13400 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 750 [ D.13413 ])) [5 *_1505+0 S2 A16])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 1362 1361 1363 278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 993 [ D.13403 ])
            (const_int 0 [0]))) strtod_l.c:1062 -1
     (nil))
(jump_insn 1363 1362 1364 278 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1374)
            (pc))) strtod_l.c:1062 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1374)
(note 1364 1363 1368 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(code_label 1368 1364 1365 280 242 "" [1 uses])
(note 1365 1368 1366 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1365 1367 280 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1063 -1
     (nil))
(insn 1367 1366 1369 280 (set (reg:QI 442 [ D.13401 ])
        (mem:QI (reg/v/f:DI 290 [ startp ]) [0 MEM[base: startp_614, offset: 0B]+0 S1 A8])) strtod_l.c:1062 -1
     (nil))
(insn 1369 1367 1370 280 (set (reg:DI 995 [ D.13400 ])
        (sign_extend:DI (reg:QI 442 [ D.13401 ]))) strtod_l.c:1062 -1
     (nil))
(insn 1370 1369 1371 280 (set (reg:HI 997)
        (mem:HI (plus:DI (mult:DI (reg:DI 995 [ D.13400 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 750 [ D.13413 ])) [5 *_612+0 S2 A16])) strtod_l.c:1062 -1
     (nil))
(insn 1371 1370 1372 280 (parallel [
            (set (reg:HI 996 [ D.13403 ])
                (and:HI (reg:HI 997)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1062 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 995 [ D.13400 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 750 [ D.13413 ])) [5 *_612+0 S2 A16])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 1372 1371 1373 280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 996 [ D.13403 ])
            (const_int 0 [0]))) strtod_l.c:1062 -1
     (nil))
(jump_insn 1373 1372 1374 280 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1368)
            (pc))) strtod_l.c:1062 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1368)
(code_label 1374 1373 1375 281 241 "" [1 uses])
(note 1375 1374 1376 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 1376 1375 1377 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 442 [ D.13401 ])
            (const_int 48 [0x30]))) strtod_l.c:1064 -1
     (nil))
(jump_insn 1377 1376 1378 281 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1385)
            (pc))) strtod_l.c:1064 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 1385)
(note 1378 1377 1382 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(code_label 1382 1378 1379 283 244 "" [1 uses])
(note 1379 1382 1380 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 1380 1379 1381 283 (parallel [
            (set (reg/v/f:DI 290 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1065 -1
     (nil))
(insn 1381 1380 1383 283 (set (reg:QI 442 [ D.13401 ])
        (mem:QI (reg/v/f:DI 290 [ startp ]) [0 MEM[base: startp_616, offset: 0B]+0 S1 A8])) strtod_l.c:1064 -1
     (nil))
(insn 1383 1381 1384 283 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 442 [ D.13401 ])
            (const_int 48 [0x30]))) strtod_l.c:1064 -1
     (nil))
(jump_insn 1384 1383 1385 283 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1382)
            (pc))) strtod_l.c:1064 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1382)
(code_label 1385 1384 1386 284 243 "" [1 uses])
(note 1386 1385 1387 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 1387 1386 1388 284 (set (reg:SI 998 [ D.13416 ])
        (sign_extend:SI (reg:QI 442 [ D.13401 ]))) strtod_l.c:1066 -1
     (nil))
(insn 1388 1387 1389 284 (parallel [
            (set (reg:SI 999 [ D.13416 ])
                (plus:SI (reg:SI 998 [ D.13416 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1066 -1
     (nil))
(insn 1389 1388 1390 284 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 999 [ D.13416 ])
            (const_int 9 [0x9]))) strtod_l.c:1066 -1
     (nil))
(jump_insn 1390 1389 1391 284 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1398)
            (pc))) strtod_l.c:1066 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1398)
(note 1391 1390 1392 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 1392 1391 1393 285 (parallel [
            (set (reg/v/f:DI 180 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1067 -1
     (nil))
(insn 1393 1392 1394 285 (set (reg:SI 1000 [ D.13409 ])
        (sign_extend:SI (reg:QI 442 [ D.13401 ]))) strtod_l.c:1067 -1
     (nil))
(insn 1394 1393 1395 285 (parallel [
            (set (reg:SI 1001 [ D.13409 ])
                (plus:SI (reg:SI 1000 [ D.13409 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1067 -1
     (nil))
(insn 1395 1394 1396 285 (set (reg/v:DI 191 [ val ])
        (sign_extend:DI (reg:SI 1001 [ D.13409 ]))) strtod_l.c:1067 -1
     (nil))
(jump_insn 1396 1395 1397 285 (set (pc)
        (label_ref 1406)) -1
     (nil)
 -> 1406)
(barrier 1397 1396 1398)
(code_label 1398 1397 1399 286 245 "" [1 uses])
(note 1399 1398 1400 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 1400 1399 1401 286 (parallel [
            (set (reg/v/f:DI 180 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1069 -1
     (nil))
(insn 1401 1400 1402 286 (set (reg:DI 1002 [ D.13400 ])
        (sign_extend:DI (reg:QI 442 [ D.13401 ]))) strtod_l.c:1069 -1
     (nil))
(insn 1402 1401 1403 286 (set (reg/f:DI 1003)
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) strtod_l.c:1069 -1
     (nil))
(insn 1403 1402 1404 286 (set (reg:SI 1005)
        (mem:SI (plus:DI (mult:DI (reg:DI 1002 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1003)) [4 *_628+0 S4 A32])) strtod_l.c:1069 -1
     (nil))
(insn 1404 1403 1405 286 (parallel [
            (set (reg:SI 1004 [ D.13409 ])
                (plus:SI (reg:SI 1005)
                    (const_int -87 [0xffffffffffffffa9])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1069 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (mult:DI (reg:DI 1002 [ D.13400 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 1003)) [4 *_628+0 S4 A32])
            (const_int -87 [0xffffffffffffffa9]))
        (nil)))
(insn 1405 1404 1406 286 (set (reg/v:DI 191 [ val ])
        (sign_extend:DI (reg:SI 1004 [ D.13409 ]))) strtod_l.c:1069 -1
     (nil))
(code_label 1406 1405 1407 287 246 "" [1 uses])
(note 1407 1406 1408 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 1408 1407 1409 287 (set (reg/f:DI 1006)
        (symbol_ref:DI ("nbits.11405") [flags 0x2]  <var_decl 0x2ab61e4512d0 nbits>)) strtod_l.c:1070 -1
     (nil))
(insn 1409 1408 1410 287 (set (reg/v:SI 458 [ bits ])
        (mem/u:SI (plus:DI (mult:DI (reg/v:DI 191 [ val ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1006)) [4 nbits S4 A32])) strtod_l.c:1070 -1
     (nil))
(insn 1410 1409 1411 287 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 458 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1072 -1
     (nil))
(jump_insn 1411 1410 1412 287 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1419)
            (pc))) strtod_l.c:1072 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1419)
(note 1412 1411 1413 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 1413 1412 1414 288 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1072 -1
     (nil))
(insn 1414 1413 1415 288 (set (reg:SI 1 dx)
        (const_int 1072 [0x430])) strtod_l.c:1072 -1
     (nil))
(insn 1415 1414 1416 288 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1072 -1
     (nil))
(insn 1416 1415 1417 288 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2ab61e83ca20 *.LC29>)) strtod_l.c:1072 -1
     (nil))
(call_insn 1417 1416 1418 288 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1072 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1418 1417 1419)
(code_label 1419 1418 1420 289 247 "" [1 uses])
(note 1420 1419 1421 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 1421 1420 1422 289 (set (reg:SI 1008)
        (const_int 53 [0x35])) strtod_l.c:1080 -1
     (nil))
(insn 1422 1421 1423 289 (parallel [
            (set (reg:SI 1007 [ D.13409 ])
                (minus:SI (reg:SI 1008)
                    (reg/v:SI 458 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1080 -1
     (nil))
(insn 1423 1422 1424 289 (parallel [
            (set (reg:DI 494 [ D.13400 ])
                (ashift:DI (reg/v:DI 191 [ val ])
                    (subreg:QI (reg:SI 1007 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1080 -1
     (nil))
(insn 1424 1423 1425 289 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 494 [ D.13400 ])) strtod_l.c:1080 -1
     (nil))
(insn 1425 1424 1426 289 (set (reg:SI 1009)
        (const_int 52 [0x34])) strtod_l.c:1081 -1
     (nil))
(insn 1426 1425 1427 289 (parallel [
            (set (reg/v:SI 495 [ pos ])
                (minus:SI (reg:SI 1009)
                    (reg/v:SI 458 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1081 -1
     (nil))
(insn 1427 1426 1428 289 (set (reg:DI 460 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1091 -1
     (nil))
(insn 1428 1427 1429 289 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 460 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1091 -1
     (nil))
(jump_insn 1429 1428 1430 289 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) strtod_l.c:1091 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 1438)
(note 1430 1429 1431 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 1431 1430 1432 290 (set (reg:DI 1010 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 458 [ bits ]))) strtod_l.c:1091 -1
     (nil))
(insn 1432 1431 1433 290 (set (reg:DI 1012)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) strtod_l.c:1091 -1
     (nil))
(insn 1433 1432 1434 290 (parallel [
            (set (reg:DI 1011 [ D.13406 ])
                (minus:DI (reg:DI 1012)
                    (reg:DI 1010 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1434 1433 1435 290 (parallel [
            (set (reg:DI 1013 [ D.13406 ])
                (plus:DI (reg:DI 1011 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1435 1434 1436 290 (parallel [
            (set (reg:DI 230 [ D.13400 ])
                (ashiftrt:DI (reg:DI 1013 [ D.13406 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(jump_insn 1436 1435 1437 290 (set (pc)
        (label_ref 1451)) -1
     (nil)
 -> 1451)
(barrier 1437 1436 1438)
(code_label 1438 1437 1439 291 248 "" [1 uses])
(note 1439 1438 1440 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 1440 1439 1441 291 (set (reg:DI 1015)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) strtod_l.c:1091 -1
     (nil))
(insn 1441 1440 1442 291 (parallel [
            (set (reg:DI 1014 [ D.13406 ])
                (minus:DI (reg:DI 1015)
                    (reg:DI 460 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1442 1441 1443 291 (set (reg:DI 1016 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 458 [ bits ]))) strtod_l.c:1091 -1
     (nil))
(insn 1443 1442 1444 291 (parallel [
            (set (reg:DI 1017 [ D.13406 ])
                (minus:DI (reg:DI 1014 [ D.13406 ])
                    (reg:DI 1016 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1444 1443 1445 291 (parallel [
            (set (reg:DI 1018 [ D.13406 ])
                (plus:DI (reg:DI 1017 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1445 1444 1446 291 (set (reg:DI 1019)
        (reg:DI 1018 [ D.13406 ])) strtod_l.c:1091 -1
     (nil))
(insn 1446 1445 1447 291 (parallel [
            (set (reg:DI 1020)
                (plus:DI (reg:DI 1019)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (nil))
(insn 1447 1446 1448 291 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 1019)
            (const_int 0 [0]))) strtod_l.c:1091 -1
     (nil))
(insn 1448 1447 1449 291 (set (reg:DI 1019)
        (if_then_else:DI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 1020)
            (reg:DI 1019))) strtod_l.c:1091 -1
     (nil))
(insn 1449 1448 1450 291 (parallel [
            (set (reg:DI 1021 [ D.13406 ])
                (ashiftrt:DI (reg:DI 1019)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1091 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 1018 [ D.13406 ])
            (const_int 4 [0x4]))
        (nil)))
(insn 1450 1449 1451 291 (set (reg:DI 230 [ D.13400 ])
        (reg:DI 1021 [ D.13406 ])) strtod_l.c:1091 -1
     (nil))
(code_label 1451 1450 1452 292 249 "" [1 uses])
(note 1452 1451 1453 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 1453 1452 1454 292 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 230 [ D.13400 ])
            (reg/v:DI 183 [ dig_no ]))) strtod_l.c:1091 -1
     (nil))
(jump_insn 1454 1453 1455 292 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1462)
            (pc))) strtod_l.c:1091 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1462)
(note 1455 1454 1456 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1457 293 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1091 -1
     (nil))
(insn 1457 1456 1458 293 (set (reg:SI 1 dx)
        (const_int 1093 [0x445])) strtod_l.c:1091 -1
     (nil))
(insn 1458 1457 1459 293 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1091 -1
     (nil))
(insn 1459 1458 1460 293 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x2ab61e83cab0 *.LC30>)) strtod_l.c:1091 -1
     (nil))
(call_insn 1460 1459 1461 293 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1091 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1461 1460 1462)
(code_label 1462 1461 1463 294 250 "" [1 uses])
(note 1463 1462 1464 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 1464 1463 1465 294 (parallel [
            (set (reg:DI 1022 [ D.13406 ])
                (plus:DI (reg/v:DI 183 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1094 -1
     (nil))
(insn 1465 1464 1466 294 (parallel [
            (set (reg:DI 1023 [ D.13406 ])
                (ashift:DI (reg:DI 1022 [ D.13406 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1094 -1
     (nil))
(insn 1466 1465 1467 294 (parallel [
            (set (reg:SI 1024 [ D.13409 ])
                (plus:SI (reg/v:SI 458 [ bits ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1094 -1
     (nil))
(insn 1467 1466 1468 294 (set (reg:DI 1025 [ D.13406 ])
        (sign_extend:DI (reg:SI 1024 [ D.13409 ]))) strtod_l.c:1094 -1
     (nil))
(insn 1468 1467 1469 294 (parallel [
            (set (reg:DI 1026 [ D.13406 ])
                (plus:DI (reg:DI 1023 [ D.13406 ])
                    (reg:DI 1025 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1094 -1
     (nil))
(insn 1469 1468 1470 294 (parallel [
            (set (reg:DI 476 [ D.13406 ])
                (plus:DI (reg:DI 1026 [ D.13406 ])
                    (reg:DI 460 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1094 -1
     (nil))
(insn 1470 1469 1471 294 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 476 [ D.13406 ])) strtod_l.c:1094 -1
     (nil))
(insn 1471 1470 1472 294 (parallel [
            (set (reg/v:DI 477 [ dig_no ])
                (plus:DI (reg/v:DI 184 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1096 -1
     (nil))
(insn 1472 1471 1473 294 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 477 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:1096 -1
     (nil))
(jump_insn 1473 1472 1516 294 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1570)
            (pc))) strtod_l.c:1096 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1570)
(code_label 1516 1473 1474 295 256 "" [1 uses])
(note 1474 1516 1475 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 1475 1474 1476 295 (set (reg:QI 478 [ D.13401 ])
        (mem:QI (reg/v/f:DI 180 [ startp ]) [0 *startp_1481+0 S1 A8])) strtod_l.c:1098 -1
     (nil))
(insn 1476 1475 1477 295 (set (reg:DI 1027 [ D.13400 ])
        (sign_extend:DI (reg:QI 478 [ D.13401 ]))) strtod_l.c:1098 -1
     (nil))
(insn 1477 1476 1478 295 (set (reg:HI 1029)
        (mem:HI (plus:DI (mult:DI (reg:DI 1027 [ D.13400 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 750 [ D.13413 ])) [5 *_661+0 S2 A16])) strtod_l.c:1098 -1
     (nil))
(insn 1478 1477 1479 295 (parallel [
            (set (reg:HI 1028 [ D.13403 ])
                (and:HI (reg:HI 1029)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1098 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 1027 [ D.13400 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 750 [ D.13413 ])) [5 *_661+0 S2 A16])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 1479 1478 1480 295 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1028 [ D.13403 ])
            (const_int 0 [0]))) strtod_l.c:1098 -1
     (nil))
(jump_insn 1480 1479 1481 295 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1484)
            (pc))) strtod_l.c:1098 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1484)
(note 1481 1480 1482 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 1482 1481 1483 296 (parallel [
            (set (reg/v/f:DI 180 [ startp ])
                (plus:DI (reg/v/f:DI 180 [ startp ])
                    (reg/v:DI 245 [ decimal_len ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1099 -1
     (nil))
(insn 1483 1482 1484 296 (set (reg:QI 478 [ D.13401 ])
        (mem:QI (reg/v/f:DI 180 [ startp ]) [0 *startp_663+0 S1 A8])) -1
     (nil))
(code_label 1484 1483 1485 297 252 "" [1 uses])
(note 1485 1484 1486 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 1486 1485 1487 297 (set (reg:SI 1030 [ D.13416 ])
        (sign_extend:SI (reg:QI 478 [ D.13401 ]))) strtod_l.c:1100 -1
     (nil))
(insn 1487 1486 1488 297 (parallel [
            (set (reg:SI 1031 [ D.13416 ])
                (plus:SI (reg:SI 1030 [ D.13416 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1100 -1
     (nil))
(insn 1488 1487 1489 297 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1031 [ D.13416 ])
            (const_int 9 [0x9]))) strtod_l.c:1100 -1
     (nil))
(jump_insn 1489 1488 1490 297 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1497)
            (pc))) strtod_l.c:1100 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1497)
(note 1490 1489 1491 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 1491 1490 1492 298 (parallel [
            (set (reg/v/f:DI 180 [ startp ])
                (plus:DI (reg/v/f:DI 180 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1101 -1
     (nil))
(insn 1492 1491 1493 298 (set (reg:SI 1032 [ D.13409 ])
        (sign_extend:SI (reg:QI 478 [ D.13401 ]))) strtod_l.c:1101 -1
     (nil))
(insn 1493 1492 1494 298 (parallel [
            (set (reg:SI 1033 [ D.13409 ])
                (plus:SI (reg:SI 1032 [ D.13409 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1101 -1
     (nil))
(insn 1494 1493 1495 298 (set (reg/v:DI 192 [ val ])
        (sign_extend:DI (reg:SI 1033 [ D.13409 ]))) strtod_l.c:1101 -1
     (nil))
(jump_insn 1495 1494 1496 298 (set (pc)
        (label_ref 1505)) -1
     (nil)
 -> 1505)
(barrier 1496 1495 1497)
(code_label 1497 1496 1498 299 253 "" [1 uses])
(note 1498 1497 1499 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 1499 1498 1500 299 (parallel [
            (set (reg/v/f:DI 180 [ startp ])
                (plus:DI (reg/v/f:DI 180 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1103 -1
     (nil))
(insn 1500 1499 1501 299 (set (reg:DI 1034 [ D.13400 ])
        (sign_extend:DI (reg:QI 478 [ D.13401 ]))) strtod_l.c:1103 -1
     (nil))
(insn 1501 1500 1502 299 (set (reg/f:DI 1035)
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) strtod_l.c:1103 -1
     (nil))
(insn 1502 1501 1503 299 (set (reg:SI 1037)
        (mem:SI (plus:DI (mult:DI (reg:DI 1034 [ D.13400 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1035)) [4 *_675+0 S4 A32])) strtod_l.c:1103 -1
     (nil))
(insn 1503 1502 1504 299 (parallel [
            (set (reg:SI 1036 [ D.13409 ])
                (plus:SI (reg:SI 1037)
                    (const_int -87 [0xffffffffffffffa9])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1103 -1
     (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (mult:DI (reg:DI 1034 [ D.13400 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 1035)) [4 *_675+0 S4 A32])
            (const_int -87 [0xffffffffffffffa9]))
        (nil)))
(insn 1504 1503 1505 299 (set (reg/v:DI 192 [ val ])
        (sign_extend:DI (reg:SI 1036 [ D.13409 ]))) strtod_l.c:1103 -1
     (nil))
(code_label 1505 1504 1506 300 254 "" [1 uses])
(note 1506 1505 1507 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1506 1508 300 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 495 [ pos ])
            (const_int 2 [0x2]))) strtod_l.c:1105 -1
     (nil))
(jump_insn 1508 1507 1509 300 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1523)
            (pc))) strtod_l.c:1105 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1523)
(note 1509 1508 1510 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 1510 1509 1511 301 (parallel [
            (set (reg:SI 1038 [ D.13416 ])
                (plus:SI (reg/v:SI 495 [ pos ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1107 -1
     (nil))
(insn 1511 1510 1512 301 (parallel [
            (set (reg:DI 1039 [ D.13400 ])
                (ashift:DI (reg/v:DI 192 [ val ])
                    (subreg:QI (reg:SI 1038 [ D.13416 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1107 -1
     (nil))
(insn 1512 1511 1513 301 (parallel [
            (set (reg:DI 494 [ D.13400 ])
                (ior:DI (reg:DI 494 [ D.13400 ])
                    (reg:DI 1039 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1107 -1
     (nil))
(insn 1513 1512 1514 301 (parallel [
            (set (reg/v:SI 495 [ pos ])
                (plus:SI (reg/v:SI 495 [ pos ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1108 -1
     (nil))
(insn 1514 1513 1515 301 (parallel [
            (set (reg/v:DI 477 [ dig_no ])
                (plus:DI (reg/v:DI 477 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1096 -1
     (nil))
(insn 1515 1514 1517 301 (set (reg:QI 768 [ retval_I_lsm.185 ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 1517 1515 1518 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 477 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:1096 -1
     (nil))
(jump_insn 1518 1517 1519 301 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1516)
            (pc))) strtod_l.c:1096 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1516)
(note 1519 1518 1520 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 1520 1519 1521 302 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 494 [ D.13400 ])) -1
     (nil))
(jump_insn 1521 1520 1522 302 (set (pc)
        (label_ref 1570)) -1
     (nil)
 -> 1570)
(barrier 1522 1521 1523)
(code_label 1523 1522 1524 303 255 "" [1 uses])
(note 1524 1523 1525 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 1525 1524 1526 303 (set (reg:SI 1041)
        (const_int 3 [0x3])) strtod_l.c:1112 -1
     (nil))
(insn 1526 1525 1527 303 (parallel [
            (set (reg:SI 1040 [ D.13409 ])
                (minus:SI (reg:SI 1041)
                    (reg/v:SI 495 [ pos ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1112 -1
     (nil))
(insn 1527 1526 1528 303 (parallel [
            (set (reg:DI 1042 [ D.13400 ])
                (lshiftrt:DI (reg/v:DI 192 [ val ])
                    (subreg:QI (reg:SI 1040 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1112 -1
     (nil))
(insn 1528 1527 1529 303 (parallel [
            (set (reg:DI 1043)
                (ior:DI (reg:DI 1042 [ D.13400 ])
                    (reg:DI 494 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1112 -1
     (nil))
(insn 1529 1528 1530 303 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 1043)) strtod_l.c:1112 -1
     (nil))
(insn 1530 1529 1531 303 (parallel [
            (set (reg:SI 1044 [ D.13409 ])
                (plus:SI (reg/v:SI 495 [ pos ])
                    (const_int 61 [0x3d])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1113 -1
     (nil))
(insn 1531 1530 1532 303 (parallel [
            (set (reg/v:DI 500 [ val ])
                (ashift:DI (reg/v:DI 192 [ val ])
                    (subreg:QI (reg:SI 1044 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1113 -1
     (nil))
(insn 1532 1531 1533 303 (parallel [
            (set (reg/v:DI 394 [ dig_no ])
                (plus:DI (reg/v:DI 477 [ dig_no ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1117 -1
     (nil))
(insn 1533 1532 1534 303 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 394 [ dig_no ])
            (const_int 0 [0]))) strtod_l.c:1117 -1
     (nil))
(jump_insn 1534 1533 1535 303 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3313)
            (pc))) strtod_l.c:1117 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3313)
(note 1535 1534 1536 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 1536 1535 1537 304 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 180 [ startp ]) [0 *startp_41+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:1119 -1
     (nil))
(jump_insn 1537 1536 1540 304 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3317)
            (pc))) strtod_l.c:1119 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3317)
(note 1540 1537 1538 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1538 1540 1539 305 (set (pc)
        (label_ref 1548)) strtod_l.c:1119 -1
     (nil)
 -> 1548)
(barrier 1539 1538 1554)
(code_label 1554 1539 1541 306 260 "" [1 uses])
(note 1541 1554 1542 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 1542 1541 1543 306 (parallel [
            (set (reg:DI 173 [ ivtmp.194 ])
                (plus:DI (reg:DI 173 [ ivtmp.194 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1543 1542 1544 306 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg:DI 173 [ ivtmp.194 ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: _1310, offset: -1B]+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:1119 -1
     (nil))
(jump_insn 1544 1543 1547 306 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3321)
            (pc))) strtod_l.c:1119 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 3321)
(note 1547 1544 1545 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1545 1547 1546 307 (set (pc)
        (label_ref 1552)) -1
     (nil)
 -> 1552)
(barrier 1546 1545 1548)
(code_label 1548 1546 1549 308 258 "" [1 uses])
(note 1549 1548 1550 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 1550 1549 1551 308 (parallel [
            (set (reg:DI 173 [ ivtmp.194 ])
                (plus:DI (reg/v/f:DI 180 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1551 1550 1552 308 (parallel [
            (set (reg:DI 809 [ D.13404 ])
                (plus:DI (reg/v/f:DI 180 [ startp ])
                    (reg/v:DI 394 [ dig_no ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1552 1551 1553 309 259 "" [1 uses])
(note 1553 1552 1555 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 1555 1553 1556 309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 173 [ ivtmp.194 ])
            (reg:DI 809 [ D.13404 ]))) strtod_l.c:1117 -1
     (nil))
(jump_insn 1556 1555 3309 309 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1554)
            (pc))) strtod_l.c:1117 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1554)
(note 3309 1556 166 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 166 3309 3310 310 (set (reg/v:SI 193 [ rest_nonzero ])
        (const_int 0 [0])) strtod_l.c:1116 -1
     (nil))
(jump_insn 3310 166 3311 310 (set (pc)
        (label_ref 1557)) -1
     (nil)
 -> 1557)
(barrier 3311 3310 3313)
(code_label 3313 3311 3312 311 434 "" [1 uses])
(note 3312 3313 168 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 168 3312 3314 311 (set (reg/v:SI 193 [ rest_nonzero ])
        (const_int 0 [0])) strtod_l.c:1116 -1
     (nil))
(jump_insn 3314 168 3315 311 (set (pc)
        (label_ref 1557)) -1
     (nil)
 -> 1557)
(barrier 3315 3314 3317)
(code_label 3317 3315 3316 312 435 "" [1 uses])
(note 3316 3317 169 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 169 3316 3318 312 (set (reg/v:SI 193 [ rest_nonzero ])
        (const_int 1 [0x1])) strtod_l.c:1121 -1
     (nil))
(jump_insn 3318 169 3319 312 (set (pc)
        (label_ref 1557)) -1
     (nil)
 -> 1557)
(barrier 3319 3318 3321)
(code_label 3321 3319 3320 313 436 "" [1 uses])
(note 3320 3321 167 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 167 3320 1557 313 (set (reg/v:SI 193 [ rest_nonzero ])
        (const_int 1 [0x1])) strtod_l.c:1121 -1
     (nil))
(code_label 1557 167 1558 314 257 "" [3 uses])
(note 1558 1557 1559 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 1559 1558 1560 314 (parallel [
            (set (reg:DI 1045)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1126 -1
     (nil))
(insn 1560 1559 1561 314 (set (reg:SI 38 r9)
        (reg/v:SI 193 [ rest_nonzero ])) strtod_l.c:1126 -1
     (nil))
(insn 1561 1560 1562 314 (set (reg:DI 37 r8)
        (const_int 63 [0x3f])) strtod_l.c:1126 -1
     (nil))
(insn 1562 1561 1563 314 (set (reg:DI 2 cx)
        (reg/v:DI 500 [ val ])) strtod_l.c:1126 -1
     (nil))
(insn 1563 1562 1564 314 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1126 -1
     (nil))
(insn 1564 1563 1565 314 (set (reg:DI 4 si)
        (reg:DI 476 [ D.13406 ])) strtod_l.c:1126 -1
     (nil))
(insn 1565 1564 1566 314 (set (reg:DI 5 di)
        (reg:DI 1045)) strtod_l.c:1126 -1
     (nil))
(call_insn 1566 1565 1567 314 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1126 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1567 1566 1568 314 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1126 -1
     (nil))
(jump_insn 1568 1567 1569 314 (set (pc)
        (label_ref 2977)) strtod_l.c:1126 -1
     (nil)
 -> 2977)
(barrier 1569 1568 1570)
(code_label 1570 1569 1571 315 251 "" [2 uses])
(note 1571 1570 1572 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 1572 1571 1573 315 (parallel [
            (set (reg:DI 1046)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1138 -1
     (nil))
(insn 1573 1572 1574 315 (set (reg:SI 38 r9)
        (const_int 0 [0])) strtod_l.c:1138 -1
     (nil))
(insn 1574 1573 1575 315 (set (reg:DI 37 r8)
        (const_int 0 [0])) strtod_l.c:1138 -1
     (nil))
(insn 1575 1574 1576 315 (set (reg:DI 2 cx)
        (const_int 0 [0])) strtod_l.c:1138 -1
     (nil))
(insn 1576 1575 1577 315 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1138 -1
     (nil))
(insn 1577 1576 1578 315 (set (reg:DI 4 si)
        (reg:DI 476 [ D.13406 ])) strtod_l.c:1138 -1
     (nil))
(insn 1578 1577 1579 315 (set (reg:DI 5 di)
        (reg:DI 1046)) strtod_l.c:1138 -1
     (nil))
(call_insn 1579 1578 1580 315 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1138 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1580 1579 1581 315 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1138 -1
     (nil))
(jump_insn 1581 1580 1582 315 (set (pc)
        (label_ref 2977)) strtod_l.c:1138 -1
     (nil)
 -> 2977)
(barrier 1582 1581 1583)
(code_label 1583 1582 1584 316 240 "" [1 uses])
(note 1584 1583 1585 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 1585 1584 1586 316 (set (reg:DI 504 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1146 -1
     (nil))
(insn 1586 1585 1587 316 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 504 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1148 -1
     (nil))
(jump_insn 1587 1586 1588 316 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1594)
            (pc))) strtod_l.c:1148 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 1594)
(note 1588 1587 1589 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 1589 1588 1590 317 (parallel [
            (set (reg:DI 1047 [ D.13406 ])
                (neg:DI (reg/v:DI 183 [ dig_no ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1148 -1
     (nil))
(insn 1590 1589 1591 317 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1047 [ D.13406 ])
            (reg:DI 504 [ D.13406 ]))) strtod_l.c:1148 -1
     (nil))
(insn 1591 1590 1592 317 (set (reg/v:DI 231 [ incr ])
        (if_then_else:DI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:DI 1047 [ D.13406 ])
            (reg:DI 504 [ D.13406 ]))) strtod_l.c:1148 -1
     (nil))
(jump_insn 1592 1591 1593 317 (set (pc)
        (label_ref 1599)) -1
     (nil)
 -> 1599)
(barrier 1593 1592 1594)
(code_label 1594 1593 1595 318 261 "" [1 uses])
(note 1595 1594 1596 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 1596 1595 1597 318 (parallel [
            (set (reg:DI 1048 [ D.13406 ])
                (minus:DI (reg/v:DI 184 [ dig_no ])
                    (reg/v:DI 183 [ dig_no ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1148 -1
     (nil))
(insn 1597 1596 1598 318 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1048 [ D.13406 ])
            (reg:DI 504 [ D.13406 ]))) strtod_l.c:1148 -1
     (nil))
(insn 1598 1597 1599 318 (set (reg/v:DI 231 [ incr ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:DI 1048 [ D.13406 ])
            (reg:DI 504 [ D.13406 ]))) strtod_l.c:1148 -1
     (nil))
(code_label 1599 1598 1600 319 262 "" [1 uses])
(note 1600 1599 1601 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 1601 1600 1602 319 (parallel [
            (set (reg/v:DI 511 [ int_no ])
                (plus:DI (reg/v:DI 231 [ incr ])
                    (reg/v:DI 183 [ dig_no ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1149 -1
     (nil))
(insn 1602 1601 1603 319 (parallel [
            (set (reg:DI 512 [ D.13406 ])
                (minus:DI (reg:DI 504 [ D.13406 ])
                    (reg/v:DI 231 [ incr ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1150 -1
     (nil))
(insn 1603 1602 1604 319 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 512 [ D.13406 ])) strtod_l.c:1150 -1
     (nil))
(insn 1604 1603 1605 319 (set (reg:DI 513 [ D.13406 ])
        (reg/v:DI 511 [ int_no ])) strtod_l.c:1153 -1
     (nil))
(insn 1605 1604 1606 319 (set (reg:DI 1050)
        (const_int 309 [0x135])) strtod_l.c:1153 -1
     (nil))
(insn 1606 1605 1607 319 (parallel [
            (set (reg:DI 1049 [ D.13406 ])
                (minus:DI (reg:DI 1050)
                    (reg:DI 513 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1153 -1
     (nil))
(insn 1607 1606 1608 319 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 512 [ D.13406 ])
            (reg:DI 1049 [ D.13406 ]))) strtod_l.c:1153 -1
     (nil))
(jump_insn 1608 1607 1609 319 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1627)
            (pc))) strtod_l.c:1153 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1627)
(note 1609 1608 1610 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 1610 1609 1611 320 (set (reg:DI 1051)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:173 -1
     (nil))
(insn 1611 1610 1612 320 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 1051)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:173 -1
     (nil))
(insn 1612 1611 1613 320 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:174 -1
     (nil))
(jump_insn 1613 1612 1778 320 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1620)
            (pc))) strtod_l.c:174 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1620)
(code_label 1778 1613 1614 321 278 "" [1 uses])
(note 1614 1778 1615 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 1615 1614 1616 321 (set (reg:DF 1052)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1616 1615 1617 321 (set (reg:DF 1053)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF -1.79769313486231570814527423731704356798070567525845e+308 [-0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1617 1616 224 321 (set (reg/v:DF 405 [ result ])
        (mult:DF (reg:DF 1052)
            (reg:DF 1053))) strtod_l.c:174 -1
     (nil))
(insn 224 1617 1618 321 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 405 [ result ])) strtod_l.c:174 -1
     (nil))
(jump_insn 1618 224 1619 321 (set (pc)
        (label_ref 2977)) strtod_l.c:174 -1
     (nil)
 -> 2977)
(barrier 1619 1618 1620)
(code_label 1620 1619 1621 322 264 "" [2 uses])
(note 1621 1620 1622 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 1622 1621 1623 322 (set (reg:DF 1054)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1623 1622 1624 322 (set (reg:DF 1055)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [8  S8 A64])) strtod_l.c:174 -1
     (expr_list:REG_EQUAL (const_double:DF 1.79769313486231570814527423731704356798070567525845e+308 [0x0.fffffffffffff8p+1024])
        (nil)))
(insn 1624 1623 228 322 (set (reg/v:DF 739 [ result ])
        (mult:DF (reg:DF 1054)
            (reg:DF 1055))) strtod_l.c:174 -1
     (nil))
(insn 228 1624 1625 322 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 739 [ result ])) strtod_l.c:174 -1
     (nil))
(jump_insn 1625 228 1626 322 (set (pc)
        (label_ref 2977)) strtod_l.c:174 -1
     (nil)
 -> 2977)
(barrier 1626 1625 1627)
(code_label 1627 1626 1628 323 263 "" [1 uses])
(note 1628 1627 1629 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 1629 1628 1630 323 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 512 [ D.13406 ])
            (const_int -324 [0xfffffffffffffebc]))) strtod_l.c:1165 -1
     (nil))
(jump_insn 1630 1629 1631 323 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1649)
            (pc))) strtod_l.c:1165 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1649)
(note 1631 1630 1632 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1631 1633 324 (set (reg:DI 1056)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:185 -1
     (nil))
(insn 1633 1632 1634 324 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 1056)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:185 -1
     (nil))
(insn 1634 1633 1635 324 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:186 -1
     (nil))
(jump_insn 1635 1634 1636 324 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1642)
            (pc))) strtod_l.c:186 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1642)
(note 1636 1635 1637 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 1637 1636 1638 325 (set (reg:DF 1057)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1638 1637 1639 325 (set (reg:DF 1058)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF -2.22507385850720138309023271733240406421921598046233e-308 [-0x0.8p-1021])
        (nil)))
(insn 1639 1638 230 325 (set (reg/v:DF 515 [ result ])
        (mult:DF (reg:DF 1057)
            (reg:DF 1058))) strtod_l.c:186 -1
     (nil))
(insn 230 1639 1640 325 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 515 [ result ])) strtod_l.c:186 -1
     (nil))
(jump_insn 1640 230 1641 325 (set (pc)
        (label_ref 2977)) strtod_l.c:186 -1
     (nil)
 -> 2977)
(barrier 1641 1640 1642)
(code_label 1642 1641 1643 326 266 "" [1 uses])
(note 1643 1642 1644 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 1644 1643 1645 326 (set (reg:DF 1059)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1645 1644 1646 326 (set (reg:DF 1060)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [8  S8 A64])) strtod_l.c:186 -1
     (expr_list:REG_EQUAL (const_double:DF 2.22507385850720138309023271733240406421921598046233e-308 [0x0.8p-1021])
        (nil)))
(insn 1646 1645 229 326 (set (reg/v:DF 740 [ result ])
        (mult:DF (reg:DF 1059)
            (reg:DF 1060))) strtod_l.c:186 -1
     (nil))
(insn 229 1646 1647 326 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 740 [ result ])) strtod_l.c:186 -1
     (nil))
(jump_insn 1647 229 1648 326 (set (pc)
        (label_ref 2977)) strtod_l.c:186 -1
     (nil)
 -> 2977)
(barrier 1648 1647 1649)
(code_label 1649 1648 1650 327 265 "" [1 uses])
(note 1650 1649 1651 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 1651 1650 1652 327 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 511 [ int_no ])
            (const_int 0 [0]))) strtod_l.c:1168 -1
     (nil))
(jump_insn 1652 1651 1653 327 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3325)
            (pc))) strtod_l.c:1168 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 3325)
(note 1653 1652 1654 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 1654 1653 1655 328 (parallel [
            (set (reg:DI 1061)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -968 [0xfffffffffffffc38])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1171 -1
     (nil))
(insn 1655 1654 1656 328 (parallel [
            (set (reg:DI 1062)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1171 -1
     (nil))
(insn 1656 1655 1657 328 (parallel [
            (set (reg:DI 1063)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1171 -1
     (nil))
(insn 1657 1656 1658 328 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1658 1657 1659 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg/v/f:DI 188 [ thousands ])) strtod_l.c:1171 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1659 1658 1660 328 (set (reg:DI 38 r9)
        (reg/v:DI 245 [ decimal_len ])) strtod_l.c:1171 -1
     (nil))
(insn 1660 1659 1661 328 (set (reg:DI 37 r8)
        (reg:DI 1061)) strtod_l.c:1171 -1
     (nil))
(insn 1661 1660 1662 328 (set (reg:DI 2 cx)
        (reg:DI 1062)) strtod_l.c:1171 -1
     (nil))
(insn 1662 1661 1663 328 (set (reg:DI 1 dx)
        (reg:DI 1063)) strtod_l.c:1171 -1
     (nil))
(insn 1663 1662 1664 328 (set (reg:SI 4 si)
        (subreg:SI (reg/v:DI 511 [ int_no ]) 0)) strtod_l.c:1171 -1
     (nil))
(insn 1664 1663 1665 328 (set (reg:DI 5 di)
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:1171 -1
     (nil))
(call_insn 1665 1664 1666 328 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("str_to_mpn.isra.0") [flags 0x3]  <function_decl 0x2ab61e5c6438 str_to_mpn.isra.0>) [0 str_to_mpn.isra.0 S1 A8])
            (const_int 16 [0x10]))) strtod_l.c:1171 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("str_to_mpn.isra.0") [flags 0x3]  <function_decl 0x2ab61e5c6438 str_to_mpn.isra.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1666 1665 1667 328 (set (reg/v/f:DI 290 [ startp ])
        (reg:DI 0 ax)) strtod_l.c:1171 -1
     (nil))
(insn 1667 1666 1668 328 (set (reg:DI 782 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1177 -1
     (nil))
(insn 1668 1667 1669 328 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1177 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1669 1668 1670 328 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 782 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1177 -1
     (nil))
(jump_insn 1670 1669 1671 328 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1675)
            (pc))) strtod_l.c:1177 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 1675)
(note 1671 1670 1672 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 1672 1671 1673 329 (set (reg:DI 223 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(jump_insn 1673 1672 1674 329 (set (pc)
        (label_ref 1764)) -1
     (nil)
 -> 1764)
(barrier 1674 1673 1675)
(code_label 1675 1674 1676 330 268 "" [1 uses])
(note 1676 1675 1677 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 1677 1676 173 330 (set (reg:DI 223 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(insn 173 1677 174 330 (set (reg/v/f:DI 197 [ ttab ])
        (symbol_ref:DI ("_fpioconst_pow10") [flags 0x42]  <var_decl 0x2ab61e350900 _fpioconst_pow10>)) strtod_l.c:1177 -1
     (nil))
(insn 174 173 175 330 (set (reg/v:SI 196 [ expbit ])
        (const_int 1 [0x1])) strtod_l.c:1177 -1
     (nil))
(insn 175 174 176 330 (parallel [
            (set (reg/v/f:DI 195 [ pdest ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1177 -1
     (nil))
(insn 176 175 1678 330 (parallel [
            (set (reg/v/f:DI 194 [ pdest ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1177 -1
     (nil))
(jump_insn 1678 176 1679 330 (set (pc)
        (label_ref 1681)) -1
     (nil)
 -> 1681)
(barrier 1679 1678 3327)
(code_label 3327 1679 3326 331 438 "" [1 uses])
(note 3326 3327 170 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 170 3326 171 331 (set (reg/f:DI 834)
        (reg/v/f:DI 194 [ pdest ])) -1
     (nil))
(insn 171 170 172 331 (set (reg/v/f:DI 194 [ pdest ])
        (reg/v/f:DI 195 [ pdest ])) -1
     (nil))
(insn 172 171 1744 331 (set (reg/v/f:DI 195 [ pdest ])
        (reg/f:DI 834)) -1
     (nil))
(code_label 1744 172 1680 332 276 "" [1 uses])
(note 1680 1744 1681 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(code_label 1681 1680 1682 333 270 "" [1 uses])
(note 1682 1681 1683 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 1683 1682 1684 333 (set (reg:DI 517 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 196 [ expbit ]))) strtod_l.c:1187 -1
     (nil))
(insn 1684 1683 1685 333 (parallel [
            (set (reg:DI 1064 [ D.13406 ])
                (and:DI (reg:DI 517 [ D.13406 ])
                    (reg:DI 782 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1187 -1
     (nil))
(insn 1685 1684 1686 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 1064 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1187 -1
     (nil))
(jump_insn 1686 1685 1687 333 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3179)
            (pc))) strtod_l.c:1187 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3179)
(note 1687 1686 1688 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 1688 1687 1689 334 (set (reg:DI 1065)
        (mem:DI (plus:DI (reg/v/f:DI 197 [ ttab ])
                (const_int 8 [0x8])) [3 MEM[base: ttab_101, offset: 8B]+0 S8 A64])) strtod_l.c:1189 -1
     (nil))
(insn 1689 1688 1690 334 (parallel [
            (set (reg:DI 520 [ D.13406 ])
                (plus:DI (reg:DI 1065)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1189 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 197 [ ttab ])
                    (const_int 8 [0x8])) [3 MEM[base: ttab_101, offset: 8B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1690 1689 1691 334 (set (reg/v:DI 521 [ size ])
        (reg:DI 520 [ D.13406 ])) strtod_l.c:1189 -1
     (nil))
(insn 1691 1690 1692 334 (parallel [
            (set (reg:DI 1066)
                (xor:DI (reg:DI 517 [ D.13406 ])
                    (reg:DI 782 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1191 -1
     (nil))
(insn 1692 1691 1693 334 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 1066)) strtod_l.c:1191 -1
     (nil))
(insn 1693 1692 1694 334 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 520 [ D.13406 ])
            (reg:DI 223 [ D.13406 ]))) strtod_l.c:1197 -1
     (nil))
(jump_insn 1694 1693 1695 334 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1710)
            (pc))) strtod_l.c:1197 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1710)
(note 1695 1694 1696 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 1696 1695 1697 335 (set (reg:DI 1068)
        (mem:DI (reg/v/f:DI 197 [ ttab ]) [3 MEM[base: ttab_101, offset: 0B]+0 S8 A64])) strtod_l.c:1198 -1
     (nil))
(insn 1697 1696 1698 335 (parallel [
            (set (reg:DI 1067 [ D.13400 ])
                (plus:DI (reg:DI 1068)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1198 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/v/f:DI 197 [ ttab ]) [3 MEM[base: ttab_101, offset: 0B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 1698 1697 1699 335 (parallel [
            (set (reg:DI 1069)
                (ashift:DI (reg:DI 1067 [ D.13400 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1198 -1
     (nil))
(insn 1699 1698 1700 335 (set (reg:DI 1071)
        (symbol_ref:DI ("__tens") [flags 0x42]  <var_decl 0x2ab61e350870 __tens>)) strtod_l.c:1198 -1
     (nil))
(insn 1700 1699 1701 335 (parallel [
            (set (reg:DI 1070 [ D.13418 ])
                (plus:DI (reg:DI 1069)
                    (reg:DI 1071)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1198 -1
     (nil))
(insn 1701 1700 1702 335 (set (reg:DI 37 r8)
        (reg:DI 520 [ D.13406 ])) strtod_l.c:1198 -1
     (nil))
(insn 1702 1701 1703 335 (set (reg:DI 2 cx)
        (reg:DI 1070 [ D.13418 ])) strtod_l.c:1198 -1
     (nil))
(insn 1703 1702 1704 335 (set (reg:DI 1 dx)
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1198 -1
     (nil))
(insn 1704 1703 1705 335 (set (reg:DI 4 si)
        (reg/v/f:DI 194 [ pdest ])) strtod_l.c:1198 -1
     (nil))
(insn 1705 1704 1706 335 (set (reg:DI 5 di)
        (reg/v/f:DI 195 [ pdest ])) strtod_l.c:1198 -1
     (nil))
(call_insn 1706 1705 1707 335 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>) [0 __mpn_mul S1 A8])
            (const_int 0 [0]))) strtod_l.c:1198 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 1707 1706 1708 335 (set (reg/v:DI 198 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1198 -1
     (nil))
(jump_insn 1708 1707 1709 335 (set (pc)
        (label_ref 1724)) -1
     (nil)
 -> 1724)
(barrier 1709 1708 1710)
(code_label 1710 1709 1711 336 272 "" [1 uses])
(note 1711 1710 1712 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 1712 1711 1713 336 (set (reg:DI 1073)
        (mem:DI (reg/v/f:DI 197 [ ttab ]) [3 MEM[base: ttab_101, offset: 0B]+0 S8 A64])) strtod_l.c:1203 -1
     (nil))
(insn 1713 1712 1714 336 (parallel [
            (set (reg:DI 1072 [ D.13400 ])
                (plus:DI (reg:DI 1073)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1203 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/v/f:DI 197 [ ttab ]) [3 MEM[base: ttab_101, offset: 0B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 1714 1713 1715 336 (parallel [
            (set (reg:DI 1074)
                (ashift:DI (reg:DI 1072 [ D.13400 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1203 -1
     (nil))
(insn 1715 1714 1716 336 (set (reg:DI 1076)
        (symbol_ref:DI ("__tens") [flags 0x42]  <var_decl 0x2ab61e350870 __tens>)) strtod_l.c:1203 -1
     (nil))
(insn 1716 1715 1717 336 (parallel [
            (set (reg:DI 1075 [ D.13418 ])
                (plus:DI (reg:DI 1074)
                    (reg:DI 1076)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1203 -1
     (nil))
(insn 1717 1716 1718 336 (set (reg:DI 37 r8)
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1203 -1
     (nil))
(insn 1718 1717 1719 336 (set (reg:DI 2 cx)
        (reg/v/f:DI 194 [ pdest ])) strtod_l.c:1203 -1
     (nil))
(insn 1719 1718 1720 336 (set (reg:DI 1 dx)
        (reg:DI 520 [ D.13406 ])) strtod_l.c:1203 -1
     (nil))
(insn 1720 1719 1721 336 (set (reg:DI 4 si)
        (reg:DI 1075 [ D.13418 ])) strtod_l.c:1203 -1
     (nil))
(insn 1721 1720 1722 336 (set (reg:DI 5 di)
        (reg/v/f:DI 195 [ pdest ])) strtod_l.c:1203 -1
     (nil))
(call_insn 1722 1721 1723 336 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>) [0 __mpn_mul S1 A8])
            (const_int 0 [0]))) strtod_l.c:1203 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 1723 1722 1724 336 (set (reg/v:DI 198 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1203 -1
     (nil))
(code_label 1724 1723 1725 337 273 "" [1 uses])
(note 1725 1724 1726 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 1726 1725 1727 337 (set (reg:DI 1077)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) strtod_l.c:1206 -1
     (nil))
(insn 1727 1726 1728 337 (parallel [
            (set (reg:DI 223 [ D.13406 ])
                (plus:DI (reg/v:DI 521 [ size ])
                    (reg:DI 1077)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1206 -1
     (expr_list:REG_EQUAL (plus:DI (reg/v:DI 521 [ size ])
            (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128]))
        (nil)))
(insn 1728 1727 1729 337 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1206 -1
     (nil))
(insn 1729 1728 1730 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 198 [ cy ])
            (const_int 0 [0]))) strtod_l.c:1207 -1
     (nil))
(jump_insn 1730 1729 1731 337 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1735)
            (pc))) strtod_l.c:1207 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1735)
(note 1731 1730 1732 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 1732 1731 1733 338 (set (reg:DI 782 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(jump_insn 1733 1732 1734 338 (set (pc)
        (label_ref 1740)) -1
     (nil)
 -> 1740)
(barrier 1734 1733 1735)
(code_label 1735 1734 1736 339 274 "" [1 uses])
(note 1736 1735 1737 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 1737 1736 1738 339 (parallel [
            (set (reg:DI 223 [ D.13406 ])
                (plus:DI (reg:DI 223 [ D.13406 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1208 -1
     (nil))
(insn 1738 1737 1739 339 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1208 -1
     (nil))
(insn 1739 1738 1740 339 (set (reg:DI 782 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(code_label 1740 1739 1741 340 275 "" [1 uses])
(note 1741 1740 1742 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 1742 1741 1743 340 (parallel [
            (set (reg/v:SI 196 [ expbit ])
                (ashift:SI (reg/v:SI 196 [ expbit ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1211 -1
     (nil))
(insn 1743 1742 1745 340 (parallel [
            (set (reg/v/f:DI 197 [ ttab ])
                (plus:DI (reg/v/f:DI 197 [ ttab ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1212 -1
     (nil))
(insn 1745 1743 1746 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 782 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1214 -1
     (nil))
(jump_insn 1746 1745 1747 340 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3327)
            (pc))) strtod_l.c:1214 612 {*jcc_1}
     (int_list:REG_BR_PROB 8200 (nil))
 -> 3327)
(note 1747 1746 1748 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 1748 1747 1749 341 (parallel [
            (set (reg:DI 1078)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1216 -1
     (nil))
(insn 1749 1748 1750 341 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 195 [ pdest ])
            (reg:DI 1078))) strtod_l.c:1216 -1
     (nil))
(jump_insn 1750 1749 1751 341 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1764)
            (pc))) strtod_l.c:1216 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 1764)
(note 1751 1750 1752 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 1752 1751 1753 342 (parallel [
            (set (reg:DI 1079)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1217 -1
     (nil))
(insn 1753 1752 1754 342 (parallel [
            (set (reg:DI 1080 [ D.13400 ])
                (ashift:DI (reg:DI 223 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1217 -1
     (nil))
(insn 1754 1753 1755 342 (parallel [
            (set (reg:DI 1081)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1217 -1
     (nil))
(insn 1755 1754 1756 342 (set (reg:DI 1082)
        (reg:DI 1079)) strtod_l.c:1217 -1
     (nil))
(insn 1756 1755 1757 342 (set (reg:DI 1083)
        (reg:DI 1081)) strtod_l.c:1217 -1
     (nil))
(insn 1757 1756 1758 342 (set (reg:DI 1084)
        (reg:DI 1080 [ D.13400 ])) strtod_l.c:1217 -1
     (nil))
(insn 1758 1757 1759 342 (set (reg:DI 1 dx)
        (reg:DI 1084)) strtod_l.c:1217 -1
     (nil))
(insn 1759 1758 1760 342 (set (reg:DI 4 si)
        (reg:DI 1083)) strtod_l.c:1217 -1
     (nil))
(insn 1760 1759 1761 342 (set (reg:DI 5 di)
        (reg:DI 1082)) strtod_l.c:1217 -1
     (nil))
(call_insn 1761 1760 1762 342 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) strtod_l.c:1217 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 1762 1761 1763 342 (set (reg:DI 1085)
        (reg:DI 0 ax)) strtod_l.c:1217 -1
     (nil))
(insn 1763 1762 1764 342 (set (reg:DI 1086)
        (reg:DI 1085)) strtod_l.c:1217 -1
     (nil))
(code_label 1764 1763 1765 343 269 "" [2 uses])
(note 1765 1764 1766 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 1766 1765 1767 343 (parallel [
            (set (reg:DI 534 [ D.13406 ])
                (plus:DI (reg:DI 223 [ D.13406 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1221 -1
     (nil))
(insn 1767 1766 1768 343 (parallel [
            (set (reg:DI 1087)
                (minus:DI (const_int 63 [0x3f])
                    (clz:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 534 [ D.13406 ])
                                        (const_int 8 [0x8]))
                                    (reg/f:DI 82 virtual-stack-vars))
                                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64]))))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1221 -1
     (nil))
(insn 1768 1767 1769 343 (parallel [
            (set (reg:DI 1087)
                (xor:DI (reg:DI 1087)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1221 -1
     (expr_list:REG_EQUAL (clz:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 534 [ D.13406 ])
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64]))
        (nil)))
(insn 1769 1768 1770 343 (set (reg/v:SI 536 [ bits ])
        (subreg:SI (reg:DI 1087) 0)) strtod_l.c:1221 -1
     (nil))
(insn 1770 1769 1771 343 (parallel [
            (set (reg:SI 1088 [ D.13416 ])
                (ashift:SI (subreg:SI (reg:DI 223 [ D.13406 ]) 0)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1222 -1
     (nil))
(insn 1771 1770 1772 343 (parallel [
            (set (reg:SI 540 [ D.13416 ])
                (minus:SI (reg:SI 1088 [ D.13416 ])
                    (reg/v:SI 536 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1222 -1
     (nil))
(insn 1772 1771 1773 343 (set (reg/v:SI 170 [ bits ])
        (reg:SI 540 [ D.13416 ])) strtod_l.c:1222 -1
     (nil))
(insn 1773 1772 1774 343 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 1024 [0x400]))) strtod_l.c:1226 -1
     (nil))
(jump_insn 1774 1773 1775 343 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1784)
            (pc))) strtod_l.c:1226 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 1784)
(note 1775 1774 1776 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 1776 1775 1777 344 (set (reg:DI 1089)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ab61e207090 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) strtod_l.c:173 -1
     (nil))
(insn 1777 1776 1779 344 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 1089)) [4 __libc_errno+0 S4 A32])
        (const_int 34 [0x22])) strtod_l.c:173 -1
     (nil))
(insn 1779 1777 1780 344 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ negative ])
            (const_int 0 [0]))) strtod_l.c:174 -1
     (nil))
(jump_insn 1780 1779 1783 344 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1778)
            (pc))) strtod_l.c:174 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1778)
(note 1783 1780 1781 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1781 1783 1782 345 (set (pc)
        (label_ref 1620)) strtod_l.c:174 -1
     (nil)
 -> 1620)
(barrier 1782 1781 1784)
(code_label 1784 1782 1785 346 277 "" [1 uses])
(note 1785 1784 1786 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn 1786 1785 1787 346 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 53 [0x35]))) strtod_l.c:1232 -1
     (nil))
(jump_insn 1787 1786 1788 346 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) strtod_l.c:1232 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1863)
(note 1788 1787 1789 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn 1789 1788 1790 347 (parallel [
            (set (reg:SI 541 [ D.13409 ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int -53 [0xffffffffffffffcb])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1235 -1
     (nil))
(insn 1790 1789 1791 347 (parallel [
            (set (reg/v:SI 542 [ i ])
                (ashiftrt:SI (reg:SI 541 [ D.13409 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1235 -1
     (nil))
(insn 1791 1790 1792 347 (set (reg/v:DI 543 [ least_idx ])
        (sign_extend:DI (reg/v:SI 542 [ i ]))) strtod_l.c:1235 -1
     (nil))
(insn 1792 1791 1793 347 (parallel [
            (set (reg:SI 544 [ D.13409 ])
                (and:SI (reg:SI 541 [ D.13409 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1236 -1
     (nil))
(insn 1793 1792 1794 347 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 544 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:1238 -1
     (nil))
(jump_insn 1794 1793 1795 347 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3162)
            (pc))) strtod_l.c:1238 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3162)
(note 1795 1794 1796 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn 1796 1795 1797 348 (parallel [
            (set (reg:DI 546 [ D.13419 ])
                (plus:DI (reg/v:DI 543 [ least_idx ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1238 -1
     (nil))
(insn 1797 1796 1798 348 (set (reg:DI 1090)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 543 [ least_idx ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [0 num S8 A64])) strtod_l.c:1243 -1
     (nil))
(insn 1798 1797 177 348 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [0 MEM[(char * {ref-all})&retval]+0 S8 A128])
        (reg:DI 1090)) strtod_l.c:1243 -1
     (nil))
(insn 177 1798 178 348 (set (reg:DI 753 [ D.13406 ])
        (reg:DI 546 [ D.13419 ])) strtod_l.c:1238 -1
     (nil))
(insn 178 177 1799 348 (set (reg:DI 547 [ D.13406 ])
        (const_int 63 [0x3f])) strtod_l.c:1240 -1
     (nil))
(jump_insn 1799 178 1800 348 (set (pc)
        (label_ref 1824)) -1
     (nil)
 -> 1824)
(barrier 1800 1799 3166)
(code_label 3166 1800 1801 349 403 "" [1 uses])
(note 1801 3166 1802 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 1802 1801 1803 349 (set (reg:SI 275 [ D.13411 ])
        (reg:SI 544 [ D.13409 ])) strtod_l.c:1248 -1
     (nil))
(insn 1803 1802 1804 349 (parallel [
            (set (reg:SI 1091 [ i ])
                (plus:SI (reg/v:SI 542 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1249 -1
     (nil))
(insn 1804 1803 1805 349 (set (reg:DI 1092)
        (sign_extend:DI (reg:SI 1091 [ i ]))) strtod_l.c:1249 -1
     (nil))
(insn 1805 1804 1806 349 (set (reg:SI 1094)
        (const_int 64 [0x40])) strtod_l.c:1248 -1
     (nil))
(insn 1806 1805 1807 349 (parallel [
            (set (reg:SI 1093 [ D.13411 ])
                (minus:SI (reg:SI 1094)
                    (reg:SI 275 [ D.13411 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1248 -1
     (nil))
(insn 1807 1806 1808 349 (set (reg:DI 1096)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1092)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1248 -1
     (nil))
(insn 1808 1807 1809 349 (parallel [
            (set (reg:DI 1095 [ D.13400 ])
                (ashift:DI (reg:DI 1096)
                    (subreg:QI (reg:SI 1093 [ D.13411 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1248 -1
     (expr_list:REG_EQUAL (ashift:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1092)
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
            (subreg:QI (reg:SI 1093 [ D.13411 ]) 0))
        (nil)))
(insn 1809 1808 1810 349 (set (reg:DI 1097)
        (sign_extend:DI (reg/v:SI 542 [ i ]))) strtod_l.c:1248 -1
     (nil))
(insn 1810 1809 1811 349 (set (reg:DI 1099)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1097)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1248 -1
     (nil))
(insn 1811 1810 1812 349 (parallel [
            (set (reg:DI 1098 [ D.13400 ])
                (lshiftrt:DI (reg:DI 1099)
                    (subreg:QI (reg:SI 275 [ D.13411 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1248 -1
     (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1097)
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
            (subreg:QI (reg:SI 275 [ D.13411 ]) 0))
        (nil)))
(insn 1812 1811 1813 349 (parallel [
            (set (reg:DI 1100)
                (ior:DI (reg:DI 1095 [ D.13400 ])
                    (reg:DI 1098 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1248 -1
     (nil))
(insn 1813 1812 179 349 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 1100)) strtod_l.c:1248 -1
     (nil))
(insn 179 1813 1814 349 (set (reg:DI 753 [ D.13406 ])
        (reg/v:DI 543 [ least_idx ])) -1
     (nil))
(jump_insn 1814 179 1815 349 (set (pc)
        (label_ref 1824)) -1
     (nil)
 -> 1824)
(barrier 1815 1814 3169)
(code_label 3169 1815 1816 350 404 "" [1 uses])
(note 1816 3169 1817 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 1817 1816 1821 350 (set (reg:DI 1101)
        (sign_extend:DI (reg/v:SI 542 [ i ]))) strtod_l.c:1252 -1
     (nil))
(insn 1821 1817 1822 350 (set (reg:DI 1105)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1101)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1252 -1
     (nil))
(insn 1822 1821 1823 350 (parallel [
            (set (reg:DI 1104 [ D.13400 ])
                (lshiftrt:DI (reg:DI 1105)
                    (subreg:QI (reg:SI 544 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1252 -1
     (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1101)
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
            (subreg:QI (reg:SI 544 [ D.13409 ]) 0))
        (nil)))
(insn 1823 1822 180 350 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 1104 [ D.13400 ])) strtod_l.c:1252 -1
     (nil))
(insn 180 1823 1824 350 (set (reg:DI 753 [ D.13406 ])
        (reg/v:DI 543 [ least_idx ])) strtod_l.c:1252 -1
     (nil))
(code_label 1824 180 1825 351 281 "" [2 uses])
(note 1825 1824 1826 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 1826 1825 1827 351 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])
            (const_int 0 [0]))) strtod_l.c:1256 -1
     (nil))
(jump_insn 1827 1826 1828 351 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3332)
            (pc))) strtod_l.c:1256 612 {*jcc_1}
     (int_list:REG_BR_PROB 169 (nil))
 -> 3332)
(note 1828 1827 1829 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn 1829 1828 1830 352 (parallel [
            (set (reg:DI 1106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1830 1829 181 352 (parallel [
            (set (reg:DI 501 [ ivtmp.219 ])
                (plus:DI (reg:DI 1106)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 181 1830 1834 352 (set (reg/v:SI 554 [ i ])
        (const_int 0 [0])) strtod_l.c:1256 -1
     (nil))
(code_label 1834 181 1831 353 283 "" [1 uses])
(note 1831 1834 1832 353 [bb 353] NOTE_INSN_BASIC_BLOCK)
(insn 1832 1831 1833 353 (parallel [
            (set (reg/v:SI 554 [ i ])
                (plus:SI (reg/v:SI 554 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1256 -1
     (nil))
(insn 1833 1832 1835 353 (parallel [
            (set (reg:DI 501 [ ivtmp.219 ])
                (plus:DI (reg:DI 501 [ ivtmp.219 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1835 1833 1836 353 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg:DI 501 [ ivtmp.219 ])
                    (const_int -8 [0xfffffffffffffff8])) [3 MEM[base: _1415, offset: -8B]+0 S8 A64])
            (const_int 0 [0]))) strtod_l.c:1256 -1
     (nil))
(jump_insn 1836 1835 3328 353 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1834)
            (pc))) strtod_l.c:1256 -1
     (int_list:REG_BR_PROB 9831 (nil))
 -> 1834)
(note 3328 1836 3329 354 [bb 354] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3329 3328 3330 354 (set (pc)
        (label_ref 1837)) -1
     (nil)
 -> 1837)
(barrier 3330 3329 3332)
(code_label 3332 3330 3331 355 439 "" [1 uses])
(note 3331 3332 182 355 [bb 355] NOTE_INSN_BASIC_BLOCK)
(insn 182 3331 1837 355 (set (reg/v:SI 554 [ i ])
        (const_int 0 [0])) strtod_l.c:1256 -1
     (nil))
(code_label 1837 182 1838 356 282 "" [1 uses])
(note 1838 1837 1839 356 [bb 356] NOTE_INSN_BASIC_BLOCK)
(insn 1839 1838 1840 356 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 184 [ dig_no ])
            (reg/v:DI 511 [ int_no ]))) strtod_l.c:1259 -1
     (nil))
(jump_insn 1840 1839 1841 356 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3336)
            (pc))) strtod_l.c:1259 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 3336)
(note 1841 1840 1842 357 [bb 357] NOTE_INSN_BASIC_BLOCK)
(insn 1842 1841 1843 357 (set (reg:DI 1107 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 554 [ i ]))) strtod_l.c:1259 -1
     (nil))
(insn 1843 1842 1844 357 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1107 [ D.13406 ])
            (reg:DI 753 [ D.13406 ]))) strtod_l.c:1259 -1
     (nil))
(insn 1844 1843 1845 357 (set (reg:QI 1109)
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) strtod_l.c:1259 -1
     (nil))
(insn 1845 1844 1846 357 (set (reg:SI 1108 [ D.13402 ])
        (zero_extend:SI (reg:QI 1109))) strtod_l.c:1259 -1
     (nil))
(insn 1846 1845 3333 357 (set (reg:SI 232 [ D.13409 ])
        (reg:SI 1108 [ D.13402 ])) strtod_l.c:1259 -1
     (nil))
(jump_insn 3333 1846 3334 357 (set (pc)
        (label_ref 1847)) -1
     (nil)
 -> 1847)
(barrier 3334 3333 3336)
(code_label 3336 3334 3335 358 440 "" [1 uses])
(note 3335 3336 183 358 [bb 358] NOTE_INSN_BASIC_BLOCK)
(insn 183 3335 1847 358 (set (reg:SI 232 [ D.13409 ])
        (const_int 1 [0x1])) strtod_l.c:1259 -1
     (nil))
(code_label 1847 183 1848 359 284 "" [1 uses])
(note 1848 1847 1849 359 [bb 359] NOTE_INSN_BASIC_BLOCK)
(insn 1849 1848 1850 359 (set (reg:DI 1110)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 753 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1259 -1
     (nil))
(insn 1850 1849 1851 359 (parallel [
            (set (reg:SI 1111 [ D.13409 ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1259 -1
     (nil))
(insn 1851 1850 1852 359 (set (reg:DI 1112 [ D.13406 ])
        (sign_extend:DI (reg:SI 1111 [ D.13409 ]))) strtod_l.c:1259 -1
     (nil))
(insn 1852 1851 1853 359 (parallel [
            (set (reg:DI 1113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1259 -1
     (nil))
(insn 1853 1852 1854 359 (set (reg:SI 38 r9)
        (reg:SI 232 [ D.13409 ])) strtod_l.c:1259 -1
     (nil))
(insn 1854 1853 1855 359 (set (reg:DI 37 r8)
        (reg:DI 547 [ D.13406 ])) strtod_l.c:1259 -1
     (nil))
(insn 1855 1854 1856 359 (set (reg:DI 2 cx)
        (reg:DI 1110)) strtod_l.c:1259 -1
     (nil))
(insn 1856 1855 1857 359 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1259 -1
     (nil))
(insn 1857 1856 1858 359 (set (reg:DI 4 si)
        (reg:DI 1112 [ D.13406 ])) strtod_l.c:1259 -1
     (nil))
(insn 1858 1857 1859 359 (set (reg:DI 5 di)
        (reg:DI 1113)) strtod_l.c:1259 -1
     (nil))
(call_insn 1859 1858 1860 359 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1259 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1860 1859 1861 359 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1259 -1
     (nil))
(jump_insn 1861 1860 1862 359 (set (pc)
        (label_ref 2977)) strtod_l.c:1259 -1
     (nil)
 -> 2977)
(barrier 1862 1861 1863)
(code_label 1863 1862 1864 360 279 "" [1 uses])
(note 1864 1863 1865 360 [bb 360] NOTE_INSN_BASIC_BLOCK)
(insn 1865 1864 1866 360 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 184 [ dig_no ])
            (reg/v:DI 511 [ int_no ]))) strtod_l.c:1264 -1
     (nil))
(jump_insn 1866 1865 1867 360 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1978)
            (pc))) strtod_l.c:1264 -1
     (int_list:REG_BR_PROB 5123 (nil))
 -> 1978)
(note 1867 1866 1868 361 [bb 361] NOTE_INSN_BASIC_BLOCK)
(insn 1868 1867 1869 361 (parallel [
            (set (reg:SI 559 [ D.13409 ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1869 1868 1870 361 (parallel [
            (set (reg:SI 1114)
                (ashiftrt:SI (reg:SI 559 [ D.13409 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1870 1869 1871 361 (parallel [
            (set (reg:SI 1115)
                (lshiftrt:SI (reg:SI 1114)
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1871 1870 1872 361 (parallel [
            (set (reg:SI 1116)
                (plus:SI (reg:SI 559 [ D.13409 ])
                    (reg:SI 1115)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1872 1871 1873 361 (parallel [
            (set (reg:SI 1117)
                (and:SI (reg:SI 1116)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1873 1872 1874 361 (parallel [
            (set (reg:SI 1118)
                (minus:SI (reg:SI 1117)
                    (reg:SI 1115)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1267 -1
     (nil))
(insn 1874 1873 1875 361 (set (reg:SI 560 [ D.13409 ])
        (reg:SI 1118)) strtod_l.c:1267 -1
     (nil))
(insn 1875 1874 1876 361 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 560 [ D.13409 ])
            (const_int 52 [0x34]))) strtod_l.c:1269 -1
     (nil))
(jump_insn 1876 1875 1877 361 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1904)
            (pc))) strtod_l.c:1269 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 1904)
(note 1877 1876 1878 362 [bb 362] NOTE_INSN_BASIC_BLOCK)
(insn 1878 1877 1879 362 (set (reg:DI 1119)
        (const_int 1 [0x1])) strtod_l.c:1271 -1
     (nil))
(insn 1879 1878 1880 362 (parallel [
            (set (reg:DI 563 [ D.13406 ])
                (minus:DI (reg:DI 1119)
                    (reg:DI 223 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1880 1879 1881 362 (parallel [
            (set (reg:DI 1120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1881 1880 1882 362 (parallel [
            (set (reg:DI 1121)
                (ashift:DI (reg:DI 563 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1882 1881 1883 362 (parallel [
            (set (reg:DI 1122)
                (plus:DI (reg:DI 1120)
                    (reg:DI 1121)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1883 1882 1884 362 (parallel [
            (set (reg:DI 1123 [ D.13400 ])
                (ashift:DI (reg:DI 223 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1884 1883 1885 362 (parallel [
            (set (reg:DI 1124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1271 -1
     (nil))
(insn 1885 1884 1886 362 (set (reg:DI 1125)
        (reg:DI 1122)) strtod_l.c:1271 -1
     (nil))
(insn 1886 1885 1887 362 (set (reg:DI 1126)
        (reg:DI 1124)) strtod_l.c:1271 -1
     (nil))
(insn 1887 1886 1888 362 (set (reg:DI 1127)
        (reg:DI 1123 [ D.13400 ])) strtod_l.c:1271 -1
     (nil))
(insn 1888 1887 1889 362 (set (reg:DI 1 dx)
        (reg:DI 1127)) strtod_l.c:1271 -1
     (nil))
(insn 1889 1888 1890 362 (set (reg:DI 4 si)
        (reg:DI 1126)) strtod_l.c:1271 -1
     (nil))
(insn 1890 1889 1891 362 (set (reg:DI 5 di)
        (reg:DI 1125)) strtod_l.c:1271 -1
     (nil))
(call_insn 1891 1890 1892 362 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) strtod_l.c:1271 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 1892 1891 1893 362 (set (reg:DI 1128)
        (reg:DI 0 ax)) strtod_l.c:1271 -1
     (nil))
(insn 1893 1892 1894 362 (set (reg:DI 1129)
        (reg:DI 1128)) strtod_l.c:1271 -1
     (nil))
(insn 1894 1893 1895 362 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 563 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1275 -1
     (nil))
(jump_insn 1895 1894 1896 362 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1899)
            (pc))) strtod_l.c:1275 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1899)
(note 1896 1895 1897 363 [bb 363] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1897 1896 1898 363 (set (pc)
        (label_ref 1964)) strtod_l.c:1275 -1
     (nil)
 -> 1964)
(barrier 1898 1897 1899)
(code_label 1899 1898 1900 364 287 "" [3 uses])
(note 1900 1899 1901 364 [bb 364] NOTE_INSN_BASIC_BLOCK)
(insn 1901 1900 1902 364 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (const_int 0 [0])) strtod_l.c:1275 -1
     (nil))
(jump_insn 1902 1901 1903 364 (set (pc)
        (label_ref 1964)) -1
     (nil)
 -> 1964)
(barrier 1903 1902 1904)
(code_label 1904 1903 1905 365 286 "" [1 uses])
(note 1905 1904 1906 365 [bb 365] NOTE_INSN_BASIC_BLOCK)
(insn 1906 1905 1907 365 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 560 [ D.13409 ])
            (const_int 51 [0x33]))) strtod_l.c:1277 -1
     (nil))
(jump_insn 1907 1906 1908 365 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1930)
            (pc))) strtod_l.c:1277 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1930)
(note 1908 1907 1909 366 [bb 366] NOTE_INSN_BASIC_BLOCK)
(insn 1909 1908 1910 366 (set (reg:SI 1131)
        (const_int 52 [0x34])) strtod_l.c:1279 -1
     (nil))
(insn 1910 1909 1911 366 (parallel [
            (set (reg:SI 1130 [ D.13411 ])
                (minus:SI (reg:SI 1131)
                    (reg:SI 560 [ D.13409 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1911 1910 1912 366 (parallel [
            (set (reg:DI 1132)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1912 1911 1913 366 (parallel [
            (set (reg:DI 1133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1913 1912 1914 366 (set (reg:DI 1135)
        (const_int 1 [0x1])) strtod_l.c:1279 -1
     (nil))
(insn 1914 1913 1915 366 (parallel [
            (set (reg:DI 1134 [ D.13406 ])
                (minus:DI (reg:DI 1135)
                    (reg:DI 223 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1915 1914 1916 366 (parallel [
            (set (reg:DI 1136)
                (ashift:DI (reg:DI 1134 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1916 1915 1917 366 (parallel [
            (set (reg:DI 1137 [ D.13421 ])
                (plus:DI (reg:DI 1133)
                    (reg:DI 1136)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1279 -1
     (nil))
(insn 1917 1916 1918 366 (set (reg:SI 2 cx)
        (reg:SI 1130 [ D.13411 ])) strtod_l.c:1279 -1
     (nil))
(insn 1918 1917 1919 366 (set (reg:DI 1 dx)
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1279 -1
     (nil))
(insn 1919 1918 1920 366 (set (reg:DI 4 si)
        (reg:DI 1132)) strtod_l.c:1279 -1
     (nil))
(insn 1920 1919 1921 366 (set (reg:DI 5 di)
        (reg:DI 1137 [ D.13421 ])) strtod_l.c:1279 -1
     (nil))
(call_insn 1921 1920 1922 366 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1279 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1922 1921 1923 366 (set (reg:DI 1139)
        (const_int 1 [0x1])) strtod_l.c:1283 -1
     (nil))
(insn 1923 1922 1924 366 (parallel [
            (set (reg:DI 1138 [ D.13406 ])
                (minus:DI (reg:DI 1139)
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1283 -1
     (nil))
(insn 1924 1923 1925 366 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 1138 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1283 -1
     (nil))
(jump_insn 1925 1924 1929 366 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1899)
            (pc))) strtod_l.c:1283 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1899)
(note 1929 1925 1927 367 [bb 367] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1927 1929 1928 367 (set (pc)
        (label_ref:DI 1964)) strtod_l.c:1283 654 {jump}
     (nil)
 -> 1964)
(barrier 1928 1927 1930)
(code_label 1930 1928 1931 368 289 "" [1 uses])
(note 1931 1930 1932 368 [bb 368] NOTE_INSN_BASIC_BLOCK)
(insn 1932 1931 1933 368 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 223 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1288 -1
     (nil))
(jump_insn 1933 1932 1934 368 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1941)
            (pc))) strtod_l.c:1288 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1941)
(note 1934 1933 1935 369 [bb 369] NOTE_INSN_BASIC_BLOCK)
(insn 1935 1934 1936 369 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1288 -1
     (nil))
(insn 1936 1935 1937 369 (set (reg:SI 1 dx)
        (const_int 1288 [0x508])) strtod_l.c:1288 -1
     (nil))
(insn 1937 1936 1938 369 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1288 -1
     (nil))
(insn 1938 1937 1939 369 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x2ab61e83cea0 *.LC31>)) strtod_l.c:1288 -1
     (nil))
(call_insn 1939 1938 1940 369 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1288 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 1940 1939 1941)
(code_label 1941 1940 1942 370 291 "" [1 uses])
(note 1942 1941 1943 370 [bb 370] NOTE_INSN_BASIC_BLOCK)
(insn 1943 1942 1944 370 (parallel [
            (set (reg:SI 1140 [ D.13411 ])
                (plus:SI (reg:SI 560 [ D.13409 ])
                    (const_int -52 [0xffffffffffffffcc])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1944 1943 1945 370 (parallel [
            (set (reg:DI 1141)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1945 1944 1946 370 (parallel [
            (set (reg:DI 1142)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1946 1945 1947 370 (set (reg:DI 1144)
        (const_int 1 [0x1])) strtod_l.c:1290 -1
     (nil))
(insn 1947 1946 1948 370 (parallel [
            (set (reg:DI 1143 [ D.13406 ])
                (minus:DI (reg:DI 1144)
                    (reg:DI 223 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1948 1947 1949 370 (parallel [
            (set (reg:DI 1145)
                (ashift:DI (reg:DI 1143 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1949 1948 1950 370 (parallel [
            (set (reg:DI 1146 [ D.13421 ])
                (plus:DI (reg:DI 1142)
                    (reg:DI 1145)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1290 -1
     (nil))
(insn 1950 1949 1951 370 (set (reg:SI 2 cx)
        (reg:SI 1140 [ D.13411 ])) strtod_l.c:1290 -1
     (nil))
(insn 1951 1950 1952 370 (set (reg:DI 1 dx)
        (reg:DI 223 [ D.13406 ])) strtod_l.c:1290 -1
     (nil))
(insn 1952 1951 1953 370 (set (reg:DI 4 si)
        (reg:DI 1141)) strtod_l.c:1290 -1
     (nil))
(insn 1953 1952 1954 370 (set (reg:DI 5 di)
        (reg:DI 1146 [ D.13421 ])) strtod_l.c:1290 -1
     (nil))
(call_insn 1954 1953 1955 370 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>) [0 __mpn_rshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1290 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_rshift") [flags 0x41]  <function_decl 0x2ab61e38e360 __mpn_rshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1955 1954 1956 370 (set (reg/v:DI 574 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1290 -1
     (nil))
(insn 1956 1955 1957 370 (set (reg:DI 1147)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) strtod_l.c:1292 -1
     (nil))
(insn 1957 1956 1958 370 (parallel [
            (set (reg:DI 576 [ D.13406 ])
                (neg:DI (reg:DI 1147)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1292 -1
     (expr_list:REG_EQUAL (neg:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128]))
        (nil)))
(insn 1958 1957 1959 370 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 576 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -992 [0xfffffffffffffc20])) [3 retval S8 A64])
        (reg/v:DI 574 [ cy ])) strtod_l.c:1292 -1
     (nil))
(insn 1959 1958 1960 370 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:DI 576 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1295 -1
     (nil))
(jump_insn 1960 1959 1963 370 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1899)
            (pc))) strtod_l.c:1295 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1899)
(note 1963 1960 1964 371 [bb 371] NOTE_INSN_BASIC_BLOCK)
(code_label 1964 1963 1965 372 288 "" [3 uses])
(note 1965 1964 1966 372 [bb 372] NOTE_INSN_BASIC_BLOCK)
(insn 1966 1965 1967 372 (set (reg:DI 1148 [ D.13406 ])
        (sign_extend:DI (reg:SI 559 [ D.13409 ]))) strtod_l.c:1298 -1
     (nil))
(insn 1967 1966 1968 372 (parallel [
            (set (reg:DI 1149)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1298 -1
     (nil))
(insn 1968 1967 1969 372 (set (reg:SI 38 r9)
        (const_int 0 [0])) strtod_l.c:1298 -1
     (nil))
(insn 1969 1968 1970 372 (set (reg:DI 37 r8)
        (const_int 0 [0])) strtod_l.c:1298 -1
     (nil))
(insn 1970 1969 1971 372 (set (reg:DI 2 cx)
        (const_int 0 [0])) strtod_l.c:1298 -1
     (nil))
(insn 1971 1970 1972 372 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1298 -1
     (nil))
(insn 1972 1971 1973 372 (set (reg:DI 4 si)
        (reg:DI 1148 [ D.13406 ])) strtod_l.c:1298 -1
     (nil))
(insn 1973 1972 1974 372 (set (reg:DI 5 di)
        (reg:DI 1149)) strtod_l.c:1298 -1
     (nil))
(call_insn 1974 1973 1975 372 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1298 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 1975 1974 1976 372 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1298 -1
     (nil))
(jump_insn 1976 1975 1977 372 (set (pc)
        (label_ref 2977)) strtod_l.c:1298 -1
     (nil)
 -> 2977)
(barrier 1977 1976 1978)
(code_label 1978 1977 1979 373 285 "" [1 uses])
(note 1979 1978 1980 373 [bb 373] NOTE_INSN_BASIC_BLOCK)
(insn 1980 1979 1981 373 (parallel [
            (set (reg:DI 1150)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1303 -1
     (nil))
(insn 1981 1980 1982 373 (parallel [
            (set (reg:DI 1151 [ D.13400 ])
                (ashift:DI (reg:DI 223 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1303 -1
     (nil))
(insn 1982 1981 1983 373 (parallel [
            (set (reg:DI 1152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1303 -1
     (nil))
(insn 1983 1982 1984 373 (set (reg:DI 1153)
        (reg:DI 1150)) strtod_l.c:1303 -1
     (nil))
(insn 1984 1983 1985 373 (set (reg:DI 1154)
        (reg:DI 1152)) strtod_l.c:1303 -1
     (nil))
(insn 1985 1984 1986 373 (set (reg:DI 1155)
        (reg:DI 1151 [ D.13400 ])) strtod_l.c:1303 -1
     (nil))
(insn 1986 1985 1987 373 (set (reg:DI 1 dx)
        (reg:DI 1155)) strtod_l.c:1303 -1
     (nil))
(insn 1987 1986 1988 373 (set (reg:DI 4 si)
        (reg:DI 1154)) strtod_l.c:1303 -1
     (nil))
(insn 1988 1987 1989 373 (set (reg:DI 5 di)
        (reg:DI 1153)) strtod_l.c:1303 -1
     (nil))
(call_insn 1989 1988 1990 373 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) strtod_l.c:1303 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 1990 1989 1991 373 (set (reg:DI 1156)
        (reg:DI 0 ax)) strtod_l.c:1303 -1
     (nil))
(insn 1991 1990 3322 373 (set (reg:DI 1157)
        (reg:DI 1156)) strtod_l.c:1303 -1
     (nil))
(jump_insn 3322 1991 3323 373 (set (pc)
        (label_ref 1992)) -1
     (nil)
 -> 1992)
(barrier 3323 3322 3325)
(code_label 3325 3323 3324 374 437 "" [1 uses])
(note 3324 3325 184 374 [bb 374] NOTE_INSN_BASIC_BLOCK)
(insn 184 3324 1992 374 (set (reg/v:SI 170 [ bits ])
        (const_int 0 [0])) strtod_l.c:576 -1
     (nil))
(code_label 1992 184 1993 375 267 "" [1 uses])
(note 1993 1992 1994 375 [bb 375] NOTE_INSN_BASIC_BLOCK)
(insn 1994 1993 1995 375 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 184 [ dig_no ])
            (reg/v:DI 511 [ int_no ]))) strtod_l.c:1330 -1
     (nil))
(jump_insn 1995 1994 1996 375 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2001)
            (pc))) strtod_l.c:1330 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 2001)
(note 1996 1995 1997 376 [bb 376] NOTE_INSN_BASIC_BLOCK)
(insn 1997 1996 1998 376 (set (reg:DI 580 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1330 -1
     (nil))
(insn 1998 1997 1999 376 (parallel [
            (set (reg:DI 1158 [ D.13404 ])
                (plus:DI (reg:DI 580 [ D.13406 ])
                    (const_int 324 [0x144])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1330 -1
     (nil))
(insn 1999 1998 2000 376 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 1158 [ D.13404 ])
            (const_int 324 [0x144]))) strtod_l.c:1330 -1
     (nil))
(jump_insn 2000 1999 2001 376 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2009)
            (pc))) strtod_l.c:1330 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2009)
(code_label 2001 2000 2002 377 292 "" [1 uses])
(note 2002 2001 2003 377 [bb 377] NOTE_INSN_BASIC_BLOCK)
(insn 2003 2002 2004 377 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1330 -1
     (nil))
(insn 2004 2003 2005 377 (set (reg:SI 1 dx)
        (const_int 1332 [0x534])) strtod_l.c:1330 -1
     (nil))
(insn 2005 2004 2006 377 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1330 -1
     (nil))
(insn 2006 2005 2007 377 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x2ab61e885120 *.LC32>)) strtod_l.c:1330 -1
     (nil))
(call_insn 2007 2006 2008 377 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1330 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2008 2007 2009)
(code_label 2009 2008 2010 378 293 "" [1 uses])
(note 2010 2009 2011 378 [bb 378] NOTE_INSN_BASIC_BLOCK)
(insn 2011 2010 2012 378 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1339 -1
     (nil))
(jump_insn 2012 2011 2013 378 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2036)
            (pc))) strtod_l.c:1339 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2036)
(note 2013 2012 2014 379 [bb 379] NOTE_INSN_BASIC_BLOCK)
(insn 2014 2013 2015 379 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 511 [ int_no ])
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(insn 2015 2014 2016 379 (set (reg:QI 1160 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(insn 2016 2015 2017 379 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1160 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(jump_insn 2017 2016 3375 379 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3389)
            (pc))) strtod_l.c:1342 612 {*jcc_1}
     (int_list:REG_BR_PROB 2 (nil))
 -> 3389)
(note 3375 2017 2018 380 [bb 380] NOTE_INSN_BASIC_BLOCK)
(insn 2018 3375 2019 380 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 580 [ D.13406 ])
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(insn 2019 2018 2020 380 (set (reg:QI 1162 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(insn 2020 2019 2021 380 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1162 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1342 -1
     (nil))
(jump_insn 2021 2020 3376 380 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2030)
            (pc))) strtod_l.c:1342 -1
     (int_list:REG_BR_PROB 9998 (nil))
 -> 2030)
(note 3376 2021 3389 381 [bb 381] NOTE_INSN_BASIC_BLOCK)
(code_label 3389 3376 2023 382 452 "" [1 uses])
(note 2023 3389 2024 382 [bb 382] NOTE_INSN_BASIC_BLOCK)
(insn 2024 2023 2025 382 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1342 -1
     (nil))
(insn 2025 2024 2026 382 (set (reg:SI 1 dx)
        (const_int 1342 [0x53e])) strtod_l.c:1342 -1
     (nil))
(insn 2026 2025 2027 382 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1342 -1
     (nil))
(insn 2027 2026 2028 382 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x2ab61e8851b0 *.LC33>)) strtod_l.c:1342 -1
     (nil))
(call_insn 2028 2027 2029 382 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1342 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2029 2028 2030)
(code_label 2030 2029 2031 383 295 "" [1 uses])
(note 2031 2030 2032 383 [bb 383] NOTE_INSN_BASIC_BLOCK)
(insn 2032 2031 2033 383 (set (reg:SI 1163)
        (const_int 54 [0x36])) strtod_l.c:1343 -1
     (nil))
(insn 2033 2032 185 383 (parallel [
            (set (reg/v:SI 205 [ need_frac_digits ])
                (minus:SI (reg:SI 1163)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1343 -1
     (nil))
(insn 185 2033 2034 383 (set (reg:SI 589 [ D.13416 ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 2034 185 2035 383 (set (pc)
        (label_ref 2081)) -1
     (nil)
 -> 2081)
(barrier 2035 2034 2036)
(code_label 2036 2035 2037 384 294 "" [1 uses])
(note 2037 2036 2038 384 [bb 384] NOTE_INSN_BASIC_BLOCK)
(insn 2038 2037 2039 384 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 511 [ int_no ])
            (const_int 0 [0]))) strtod_l.c:1348 -1
     (nil))
(jump_insn 2039 2038 2040 384 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2043)
            (pc))) strtod_l.c:1348 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 2043)
(note 2040 2039 2041 385 [bb 385] NOTE_INSN_BASIC_BLOCK)
(insn 2041 2040 2042 385 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 290 [ startp ]) [0 *startp_44+0 S1 A8])
            (const_int 48 [0x30]))) strtod_l.c:1348 -1
     (nil))
(jump_insn 2042 2041 2043 385 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2051)
            (pc))) strtod_l.c:1348 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2051)
(code_label 2043 2042 2044 386 298 "" [1 uses])
(note 2044 2043 2045 386 [bb 386] NOTE_INSN_BASIC_BLOCK)
(insn 2045 2044 2046 386 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1348 -1
     (nil))
(insn 2046 2045 2047 386 (set (reg:SI 1 dx)
        (const_int 1348 [0x544])) strtod_l.c:1348 -1
     (nil))
(insn 2047 2046 2048 386 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1348 -1
     (nil))
(insn 2048 2047 2049 386 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x2ab61e885240 *.LC34>)) strtod_l.c:1348 -1
     (nil))
(call_insn 2049 2048 2050 386 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2050 2049 2051)
(code_label 2051 2050 2052 387 299 "" [1 uses])
(note 2052 2051 2053 387 [bb 387] NOTE_INSN_BASIC_BLOCK)
(insn 2053 2052 2054 387 (set (reg:DI 1165)
        (const_int 1 [0x1])) strtod_l.c:1354 -1
     (nil))
(insn 2054 2053 2055 387 (parallel [
            (set (reg:DI 1164 [ D.13406 ])
                (minus:DI (reg:DI 1165)
                    (reg:DI 580 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2055 2054 2056 387 (set (reg:DI 1166)
        (reg:DI 1164 [ D.13406 ])) strtod_l.c:1354 -1
     (nil))
(insn 2056 2055 2057 387 (parallel [
            (set (reg:DI 1167)
                (ashift:DI (reg:DI 1166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2057 2056 2058 387 (parallel [
            (set (reg:DI 1168 [ D.13406 ])
                (plus:DI (reg:DI 1167)
                    (reg:DI 1164 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1164 [ D.13406 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 2058 2057 2059 387 (parallel [
            (set (reg:DI 1169)
                (ashift:DI (reg:DI 1168 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2059 2058 2060 387 (set (reg:DI 1168 [ D.13406 ])
        (reg:DI 1169)) strtod_l.c:1354 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1164 [ D.13406 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 2060 2059 2061 387 (set (reg:DI 1172)
        (const_int 6148914691236517206 [0x5555555555555556])) strtod_l.c:1354 -1
     (nil))
(insn 2061 2060 2062 387 (parallel [
            (set (reg:DI 1171)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 1168 [ D.13406 ]))
                            (sign_extend:TI (reg:DI 1172)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2062 2061 2063 387 (parallel [
            (set (reg:DI 1173)
                (ashiftrt:DI (reg:DI 1168 [ D.13406 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2063 2062 2064 387 (parallel [
            (set (reg:DI 1170 [ D.13406 ])
                (minus:DI (reg:DI 1171)
                    (reg:DI 1173)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 1168 [ D.13406 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 2064 2063 2065 387 (parallel [
            (set (reg:SI 1174 [ D.13416 ])
                (plus:SI (subreg:SI (reg:DI 1170 [ D.13406 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2065 2064 2066 387 (parallel [
            (set (reg/v:SI 588 [ need_frac_digits ])
                (plus:SI (reg:SI 1174 [ D.13416 ])
                    (const_int 53 [0x35])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1354 -1
     (nil))
(insn 2066 2065 2068 387 (set (reg:SI 589 [ D.13416 ])
        (subreg:SI (reg:DI 580 [ D.13406 ]) 0)) strtod_l.c:1364 -1
     (nil))
(insn 2068 2066 2067 387 (set (reg:SI 1176)
        (const_int 1076 [0x434])) strtod_l.c:1364 -1
     (nil))
(insn 2067 2068 2069 387 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 588 [ need_frac_digits ])
            (const_int 1076 [0x434]))) strtod_l.c:1364 -1
     (nil))
(insn 2069 2067 2070 387 (set (reg:SI 1175 [ need_frac_digits ])
        (if_then_else:SI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg/v:SI 588 [ need_frac_digits ])
            (reg:SI 1176))) strtod_l.c:1364 -1
     (nil))
(insn 2070 2069 2071 387 (parallel [
            (set (reg:SI 591 [ D.13416 ])
                (plus:SI (reg:SI 1175 [ need_frac_digits ])
                    (reg:SI 589 [ D.13416 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1364 -1
     (nil))
(insn 2071 2070 2072 387 (set (reg/v:SI 205 [ need_frac_digits ])
        (reg:SI 591 [ D.13416 ])) strtod_l.c:1364 -1
     (nil))
(insn 2072 2071 2073 387 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 205 [ need_frac_digits ])
            (const_int 0 [0]))) strtod_l.c:1369 -1
     (nil))
(jump_insn 2073 2072 2074 387 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2081)
            (pc))) strtod_l.c:1369 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2081)
(note 2074 2073 2075 388 [bb 388] NOTE_INSN_BASIC_BLOCK)
(insn 2075 2074 2076 388 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1369 -1
     (nil))
(insn 2076 2075 2077 388 (set (reg:SI 1 dx)
        (const_int 1369 [0x559])) strtod_l.c:1369 -1
     (nil))
(insn 2077 2076 2078 388 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1369 -1
     (nil))
(insn 2078 2077 2079 388 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x2ab61e8852d0 *.LC35>)) strtod_l.c:1369 -1
     (nil))
(call_insn 2079 2078 2080 388 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1369 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2080 2079 2081)
(code_label 2081 2080 2082 389 297 "" [2 uses])
(note 2082 2081 2083 389 [bb 389] NOTE_INSN_BASIC_BLOCK)
(insn 2083 2082 2084 389 (set (reg:DI 592 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 205 [ need_frac_digits ]))) strtod_l.c:1372 -1
     (nil))
(insn 2084 2083 2085 389 (set (reg:DI 593 [ D.13406 ])
        (reg/v:DI 184 [ dig_no ])) strtod_l.c:1372 -1
     (nil))
(insn 2085 2084 2086 389 (parallel [
            (set (reg:DI 1177 [ D.13406 ])
                (minus:DI (reg:DI 593 [ D.13406 ])
                    (reg:DI 513 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1372 -1
     (nil))
(insn 2086 2085 2087 389 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 592 [ D.13406 ])
            (reg:DI 1177 [ D.13406 ]))) strtod_l.c:1372 -1
     (nil))
(jump_insn 2087 2086 2088 389 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2092)
            (pc))) strtod_l.c:1372 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2092)
(note 2088 2087 2089 390 [bb 390] NOTE_INSN_BASIC_BLOCK)
(insn 2089 2088 2090 390 (set (reg:SI 596 [ D.13416 ])
        (subreg:SI (reg/v:DI 511 [ int_no ]) 0)) -1
     (nil))
(jump_insn 2090 2089 2091 390 (set (pc)
        (label_ref 2097)) -1
     (nil)
 -> 2097)
(barrier 2091 2090 2092)
(code_label 2092 2091 2093 391 300 "" [1 uses])
(note 2093 2092 2094 391 [bb 391] NOTE_INSN_BASIC_BLOCK)
(insn 2094 2093 2095 391 (set (reg:SI 596 [ D.13416 ])
        (subreg:SI (reg/v:DI 511 [ int_no ]) 0)) strtod_l.c:1373 -1
     (nil))
(insn 2095 2094 2096 391 (parallel [
            (set (reg/v:SI 205 [ need_frac_digits ])
                (minus:SI (subreg:SI (reg/v:DI 184 [ dig_no ]) 0)
                    (reg:SI 596 [ D.13416 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1373 -1
     (nil))
(insn 2096 2095 2097 391 (set (reg:DI 592 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 205 [ need_frac_digits ]))) -1
     (nil))
(code_label 2097 2096 2098 392 301 "" [1 uses])
(note 2098 2097 2099 392 [bb 392] NOTE_INSN_BASIC_BLOCK)
(insn 2099 2098 2100 392 (parallel [
            (set (reg:DI 1178 [ D.13406 ])
                (plus:DI (reg:DI 513 [ D.13406 ])
                    (reg:DI 592 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1375 -1
     (nil))
(insn 2100 2099 2101 392 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 593 [ D.13406 ])
            (reg:DI 1178 [ D.13406 ]))) strtod_l.c:1375 -1
     (nil))
(jump_insn 2101 2100 2102 392 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3340)
            (pc))) strtod_l.c:1375 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3340)
(note 2102 2101 2103 393 [bb 393] NOTE_INSN_BASIC_BLOCK)
(insn 2103 2102 2104 393 (set (reg:DI 1179 [ D.13400 ])
        (sign_extend:DI (reg/v:SI 205 [ need_frac_digits ]))) strtod_l.c:1377 -1
     (nil))
(insn 2104 2103 186 393 (parallel [
            (set (reg/v:DI 184 [ dig_no ])
                (plus:DI (reg:DI 1179 [ D.13400 ])
                    (reg/v:DI 511 [ int_no ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1377 -1
     (nil))
(insn 186 2104 3337 393 (set (reg/v:SI 204 [ more_bits ])
        (const_int 1 [0x1])) strtod_l.c:1378 -1
     (nil))
(jump_insn 3337 186 3338 393 (set (pc)
        (label_ref 2105)) -1
     (nil)
 -> 2105)
(barrier 3338 3337 3340)
(code_label 3340 3338 3339 394 441 "" [1 uses])
(note 3339 3340 187 394 [bb 394] NOTE_INSN_BASIC_BLOCK)
(insn 187 3339 2105 394 (set (reg/v:SI 204 [ more_bits ])
        (const_int 0 [0])) strtod_l.c:1381 -1
     (nil))
(code_label 2105 187 2106 395 302 "" [1 uses])
(note 2106 2105 2107 395 [bb 395] NOTE_INSN_BASIC_BLOCK)
(insn 2107 2106 2108 395 (parallel [
            (set (reg:SI 601 [ D.13416 ])
                (minus:SI (subreg:SI (reg/v:DI 184 [ dig_no ]) 0)
                    (reg:SI 596 [ D.13416 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1383 -1
     (nil))
(insn 2108 2107 188 395 (parallel [
            (set (reg/v:SI 203 [ neg_exp ])
                (minus:SI (reg:SI 601 [ D.13416 ])
                    (reg:SI 589 [ D.13416 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1383 -1
     (nil))
(insn 188 2108 189 395 (set (reg/v/f:DI 208 [ ttab ])
        (symbol_ref:DI ("_fpioconst_pow10") [flags 0x42]  <var_decl 0x2ab61e350900 _fpioconst_pow10>)) strtod_l.c:1328 -1
     (nil))
(insn 189 188 190 395 (parallel [
            (set (reg/v/f:DI 207 [ pdest ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1327 -1
     (nil))
(insn 190 189 191 395 (parallel [
            (set (reg/v/f:DI 206 [ pdest ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1326 -1
     (nil))
(insn 191 190 192 395 (set (reg/v:SI 202 [ expbit ])
        (const_int 1 [0x1])) strtod_l.c:1387 -1
     (nil))
(insn 192 191 2164 395 (set (reg/v:DI 169 [ densize ])
        (const_int 0 [0])) strtod_l.c:1386 -1
     (nil))
(code_label 2164 192 2109 396 305 "" [1 uses])
(note 2109 2164 2110 396 [bb 396] NOTE_INSN_BASIC_BLOCK)
(insn 2110 2109 2111 396 (parallel [
            (set (reg:SI 1180 [ D.13409 ])
                (and:SI (reg/v:SI 202 [ expbit ])
                    (reg/v:SI 203 [ neg_exp ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1390 -1
     (nil))
(insn 2111 2110 2112 396 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1180 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:1390 -1
     (nil))
(jump_insn 2112 2111 2113 396 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2160)
            (pc))) strtod_l.c:1390 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2160)
(note 2113 2112 2114 397 [bb 397] NOTE_INSN_BASIC_BLOCK)
(insn 2114 2113 2115 397 (parallel [
            (set (reg/v:SI 203 [ neg_exp ])
                (xor:SI (reg/v:SI 203 [ neg_exp ])
                    (reg/v:SI 202 [ expbit ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1393 -1
     (nil))
(insn 2115 2114 2116 397 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ densize ])
            (const_int 0 [0]))) strtod_l.c:1395 -1
     (nil))
(jump_insn 2116 2115 2117 397 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2137)
            (pc))) strtod_l.c:1395 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2137)
(note 2117 2116 2118 398 [bb 398] NOTE_INSN_BASIC_BLOCK)
(insn 2118 2117 2119 398 (set (reg:DI 1181)
        (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])) strtod_l.c:1397 -1
     (nil))
(insn 2119 2118 2120 398 (parallel [
            (set (reg/v:DI 169 [ densize ])
                (plus:DI (reg:DI 1181)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1397 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                    (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 2120 2119 2121 398 (parallel [
            (set (reg:DI 1182 [ D.13400 ])
                (ashift:DI (reg/v:DI 169 [ densize ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1398 -1
     (nil))
(insn 2121 2120 2122 398 (set (reg:DI 1184)
        (mem:DI (reg/v/f:DI 208 [ ttab ]) [3 MEM[base: ttab_119, offset: 0B]+0 S8 A64])) strtod_l.c:1398 -1
     (nil))
(insn 2122 2121 2123 398 (parallel [
            (set (reg:DI 1183 [ D.13400 ])
                (plus:DI (reg:DI 1184)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1398 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/v/f:DI 208 [ ttab ]) [3 MEM[base: ttab_119, offset: 0B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 2123 2122 2124 398 (parallel [
            (set (reg:DI 1185)
                (ashift:DI (reg:DI 1183 [ D.13400 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1398 -1
     (nil))
(insn 2124 2123 2125 398 (set (reg:DI 1187)
        (symbol_ref:DI ("__tens") [flags 0x42]  <var_decl 0x2ab61e350870 __tens>)) strtod_l.c:1398 -1
     (nil))
(insn 2125 2124 2126 398 (parallel [
            (set (reg:DI 1186)
                (plus:DI (reg:DI 1185)
                    (reg:DI 1187)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1398 -1
     (nil))
(insn 2126 2125 2127 398 (set (reg:DI 1188)
        (reg/v/f:DI 206 [ pdest ])) strtod_l.c:1398 -1
     (nil))
(insn 2127 2126 2128 398 (set (reg:DI 1189)
        (reg:DI 1186)) strtod_l.c:1398 -1
     (nil))
(insn 2128 2127 2129 398 (set (reg:DI 1190)
        (reg:DI 1182 [ D.13400 ])) strtod_l.c:1398 -1
     (nil))
(insn 2129 2128 2130 398 (set (reg:DI 1 dx)
        (reg:DI 1190)) strtod_l.c:1398 -1
     (nil))
(insn 2130 2129 2131 398 (set (reg:DI 4 si)
        (reg:DI 1189)) strtod_l.c:1398 -1
     (nil))
(insn 2131 2130 2132 398 (set (reg:DI 5 di)
        (reg:DI 1188)) strtod_l.c:1398 -1
     (nil))
(call_insn 2132 2131 2133 398 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) strtod_l.c:1398 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2133 2132 2134 398 (set (reg:DI 1191)
        (reg:DI 0 ax)) strtod_l.c:1398 -1
     (nil))
(insn 2134 2133 2135 398 (set (reg:DI 1192)
        (reg:DI 1191)) strtod_l.c:1398 -1
     (nil))
(jump_insn 2135 2134 2136 398 (set (pc)
        (label_ref 2160)) -1
     (nil)
 -> 2160)
(barrier 2136 2135 2137)
(code_label 2137 2136 2138 399 304 "" [1 uses])
(note 2138 2137 2139 399 [bb 399] NOTE_INSN_BASIC_BLOCK)
(insn 2139 2138 2140 399 (set (reg:DI 1194)
        (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])) strtod_l.c:1403 -1
     (nil))
(insn 2140 2139 2141 399 (parallel [
            (set (reg:DI 1193 [ D.13406 ])
                (plus:DI (reg:DI 1194)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1403 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                    (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 2141 2140 2142 399 (set (reg:DI 1196)
        (mem:DI (reg/v/f:DI 208 [ ttab ]) [3 MEM[base: ttab_119, offset: 0B]+0 S8 A64])) strtod_l.c:1403 -1
     (nil))
(insn 2142 2141 2143 399 (parallel [
            (set (reg:DI 1195 [ D.13400 ])
                (plus:DI (reg:DI 1196)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1403 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (reg/v/f:DI 208 [ ttab ]) [3 MEM[base: ttab_119, offset: 0B]+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 2143 2142 2144 399 (parallel [
            (set (reg:DI 1197)
                (ashift:DI (reg:DI 1195 [ D.13400 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1403 -1
     (nil))
(insn 2144 2143 2145 399 (set (reg:DI 1199)
        (symbol_ref:DI ("__tens") [flags 0x42]  <var_decl 0x2ab61e350870 __tens>)) strtod_l.c:1403 -1
     (nil))
(insn 2145 2144 2146 399 (parallel [
            (set (reg:DI 1198 [ D.13418 ])
                (plus:DI (reg:DI 1197)
                    (reg:DI 1199)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1403 -1
     (nil))
(insn 2146 2145 2147 399 (set (reg:DI 37 r8)
        (reg/v:DI 169 [ densize ])) strtod_l.c:1403 -1
     (nil))
(insn 2147 2146 2148 399 (set (reg:DI 2 cx)
        (reg/v/f:DI 206 [ pdest ])) strtod_l.c:1403 -1
     (nil))
(insn 2148 2147 2149 399 (set (reg:DI 1 dx)
        (reg:DI 1193 [ D.13406 ])) strtod_l.c:1403 -1
     (nil))
(insn 2149 2148 2150 399 (set (reg:DI 4 si)
        (reg:DI 1198 [ D.13418 ])) strtod_l.c:1403 -1
     (nil))
(insn 2150 2149 2151 399 (set (reg:DI 5 di)
        (reg/v/f:DI 207 [ pdest ])) strtod_l.c:1403 -1
     (nil))
(call_insn 2151 2150 2152 399 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>) [0 __mpn_mul S1 A8])
            (const_int 0 [0]))) strtod_l.c:1403 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_mul") [flags 0x41]  <function_decl 0x2ab61e386ca8 __mpn_mul>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 2152 2151 2153 399 (set (reg/v:DI 615 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1403 -1
     (nil))
(insn 2153 2152 2154 399 (set (reg:DI 1201)
        (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])) strtod_l.c:1407 -1
     (nil))
(insn 2154 2153 2155 399 (parallel [
            (set (reg:DI 1200 [ D.13406 ])
                (plus:DI (reg:DI 1201)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1407 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 208 [ ttab ])
                    (const_int 8 [0x8])) [3 MEM[base: ttab_119, offset: 8B]+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 2155 2154 2156 399 (parallel [
            (set (reg/v:DI 169 [ densize ])
                (plus:DI (reg/v:DI 169 [ densize ])
                    (reg:DI 1200 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1407 -1
     (nil))
(insn 2156 2155 2157 399 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 615 [ cy ])
            (const_int 0 [0]))) strtod_l.c:1408 -1
     (nil))
(jump_insn 2157 2156 2158 399 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3344)
            (pc))) strtod_l.c:1408 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3344)
(note 2158 2157 2159 400 [bb 400] NOTE_INSN_BASIC_BLOCK)
(insn 2159 2158 193 400 (parallel [
            (set (reg/v:DI 169 [ densize ])
                (plus:DI (reg/v:DI 169 [ densize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1409 -1
     (nil))
(insn 193 2159 194 400 (set (reg/f:DI 835)
        (reg/v/f:DI 206 [ pdest ])) strtod_l.c:1409 -1
     (nil))
(insn 194 193 195 400 (set (reg/v/f:DI 206 [ pdest ])
        (reg/v/f:DI 207 [ pdest ])) strtod_l.c:1410 -1
     (nil))
(insn 195 194 3341 400 (set (reg/v/f:DI 207 [ pdest ])
        (reg/f:DI 835)) strtod_l.c:1409 -1
     (nil))
(jump_insn 3341 195 3342 400 (set (pc)
        (label_ref 2160)) -1
     (nil)
 -> 2160)
(barrier 3342 3341 3344)
(code_label 3344 3342 3343 401 442 "" [1 uses])
(note 3343 3344 196 401 [bb 401] NOTE_INSN_BASIC_BLOCK)
(insn 196 3343 197 401 (set (reg/f:DI 836)
        (reg/v/f:DI 206 [ pdest ])) -1
     (nil))
(insn 197 196 198 401 (set (reg/v/f:DI 206 [ pdest ])
        (reg/v/f:DI 207 [ pdest ])) strtod_l.c:1410 -1
     (nil))
(insn 198 197 2160 401 (set (reg/v/f:DI 207 [ pdest ])
        (reg/f:DI 836)) -1
     (nil))
(code_label 2160 198 2161 402 303 "" [3 uses])
(note 2161 2160 2162 402 [bb 402] NOTE_INSN_BASIC_BLOCK)
(insn 2162 2161 2163 402 (parallel [
            (set (reg/v:SI 202 [ expbit ])
                (ashift:SI (reg/v:SI 202 [ expbit ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1413 -1
     (nil))
(insn 2163 2162 2165 402 (parallel [
            (set (reg/v/f:DI 208 [ ttab ])
                (plus:DI (reg/v/f:DI 208 [ ttab ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1414 -1
     (nil))
(insn 2165 2163 2166 402 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 203 [ neg_exp ])
            (const_int 0 [0]))) strtod_l.c:1416 -1
     (nil))
(jump_insn 2166 2165 2167 402 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2164)
            (pc))) strtod_l.c:1416 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2164)
(note 2167 2166 2168 403 [bb 403] NOTE_INSN_BASIC_BLOCK)
(insn 2168 2167 2169 403 (parallel [
            (set (reg:DI 1202)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1418 -1
     (nil))
(insn 2169 2168 2170 403 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 206 [ pdest ])
            (reg:DI 1202))) strtod_l.c:1418 -1
     (nil))
(jump_insn 2170 2169 2171 403 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2184)
            (pc))) strtod_l.c:1418 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 2184)
(note 2171 2170 2172 404 [bb 404] NOTE_INSN_BASIC_BLOCK)
(insn 2172 2171 2173 404 (parallel [
            (set (reg:DI 1203)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1419 -1
     (nil))
(insn 2173 2172 2174 404 (parallel [
            (set (reg:DI 1204 [ D.13400 ])
                (ashift:DI (reg/v:DI 169 [ densize ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1419 -1
     (nil))
(insn 2174 2173 2175 404 (parallel [
            (set (reg:DI 1205)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1419 -1
     (nil))
(insn 2175 2174 2176 404 (set (reg:DI 1206)
        (reg:DI 1203)) strtod_l.c:1419 -1
     (nil))
(insn 2176 2175 2177 404 (set (reg:DI 1207)
        (reg:DI 1205)) strtod_l.c:1419 -1
     (nil))
(insn 2177 2176 2178 404 (set (reg:DI 1208)
        (reg:DI 1204 [ D.13400 ])) strtod_l.c:1419 -1
     (nil))
(insn 2178 2177 2179 404 (set (reg:DI 1 dx)
        (reg:DI 1208)) strtod_l.c:1419 -1
     (nil))
(insn 2179 2178 2180 404 (set (reg:DI 4 si)
        (reg:DI 1207)) strtod_l.c:1419 -1
     (nil))
(insn 2180 2179 2181 404 (set (reg:DI 5 di)
        (reg:DI 1206)) strtod_l.c:1419 -1
     (nil))
(call_insn 2181 2180 2182 404 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) strtod_l.c:1419 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ab61e079d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2182 2181 2183 404 (set (reg:DI 1209)
        (reg:DI 0 ax)) strtod_l.c:1419 -1
     (nil))
(insn 2183 2182 2184 404 (set (reg:DI 1210)
        (reg:DI 1209)) strtod_l.c:1419 -1
     (nil))
(code_label 2184 2183 2185 405 306 "" [1 uses])
(note 2185 2184 2186 405 [bb 405] NOTE_INSN_BASIC_BLOCK)
(insn 2186 2185 2187 405 (parallel [
            (set (reg:DI 1211)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -968 [0xfffffffffffffc38])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1422 -1
     (nil))
(insn 2187 2186 2188 405 (parallel [
            (set (reg:DI 1212)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -976 [0xfffffffffffffc30])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1422 -1
     (nil))
(insn 2188 2187 2189 405 (parallel [
            (set (reg:DI 1213)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1422 -1
     (nil))
(insn 2189 2188 2190 405 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1422 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2190 2189 2191 405 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (reg/v/f:DI 188 [ thousands ])) strtod_l.c:1422 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2191 2190 2192 405 (set (reg:DI 38 r9)
        (reg/v:DI 245 [ decimal_len ])) strtod_l.c:1422 -1
     (nil))
(insn 2192 2191 2193 405 (set (reg:DI 37 r8)
        (reg:DI 1211)) strtod_l.c:1422 -1
     (nil))
(insn 2193 2192 2194 405 (set (reg:DI 2 cx)
        (reg:DI 1212)) strtod_l.c:1422 -1
     (nil))
(insn 2194 2193 2195 405 (set (reg:DI 1 dx)
        (reg:DI 1213)) strtod_l.c:1422 -1
     (nil))
(insn 2195 2194 2196 405 (set (reg:SI 4 si)
        (reg:SI 601 [ D.13416 ])) strtod_l.c:1422 -1
     (nil))
(insn 2196 2195 2197 405 (set (reg:DI 5 di)
        (reg/v/f:DI 290 [ startp ])) strtod_l.c:1422 -1
     (nil))
(call_insn 2197 2196 2198 405 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("str_to_mpn.isra.0") [flags 0x3]  <function_decl 0x2ab61e5c6438 str_to_mpn.isra.0>) [0 str_to_mpn.isra.0 S1 A8])
            (const_int 16 [0x10]))) strtod_l.c:1422 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("str_to_mpn.isra.0") [flags 0x3]  <function_decl 0x2ab61e5c6438 str_to_mpn.isra.0>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2198 2197 2199 405 (parallel [
            (set (reg:DI 621 [ D.13406 ])
                (plus:DI (reg/v:DI 169 [ densize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1439 -1
     (nil))
(insn 2199 2198 2200 405 (parallel [
            (set (reg:DI 1214)
                (minus:DI (const_int 63 [0x3f])
                    (clz:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 621 [ D.13406 ])
                                        (const_int 8 [0x8]))
                                    (reg/f:DI 82 virtual-stack-vars))
                                (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64]))))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1439 -1
     (nil))
(insn 2200 2199 2201 405 (parallel [
            (set (reg:DI 1214)
                (xor:DI (reg:DI 1214)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1439 -1
     (expr_list:REG_EQUAL (clz:DI (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 621 [ D.13406 ])
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64]))
        (nil)))
(insn 2201 2200 2202 405 (set (reg/v:SI 623 [ cnt ])
        (subreg:SI (reg:DI 1214) 0)) strtod_l.c:1439 -1
     (nil))
(insn 2202 2201 2203 405 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1441 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2203 2202 2204 405 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 623 [ cnt ])
            (const_int 0 [0]))) strtod_l.c:1441 -1
     (nil))
(jump_insn 2204 2203 2205 405 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2209)
            (pc))) strtod_l.c:1441 -1
     (int_list:REG_BR_PROB 5248 (nil))
 -> 2209)
(note 2205 2204 2206 406 [bb 406] NOTE_INSN_BASIC_BLOCK)
(insn 2206 2205 2207 406 (set (reg:DI 798 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(jump_insn 2207 2206 2208 406 (set (pc)
        (label_ref 2240)) -1
     (nil)
 -> 2240)
(barrier 2208 2207 2209)
(code_label 2209 2208 2210 407 307 "" [1 uses])
(note 2210 2209 2211 407 [bb 407] NOTE_INSN_BASIC_BLOCK)
(insn 2211 2210 2212 407 (set (reg:SI 624 [ D.13411 ])
        (reg/v:SI 623 [ cnt ])) strtod_l.c:1445 -1
     (nil))
(insn 2212 2211 2213 407 (parallel [
            (set (reg:DI 1215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1445 -1
     (nil))
(insn 2213 2212 2214 407 (parallel [
            (set (reg:DI 1216)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1445 -1
     (nil))
(insn 2214 2213 2215 407 (set (reg:SI 2 cx)
        (reg:SI 624 [ D.13411 ])) strtod_l.c:1445 -1
     (nil))
(insn 2215 2214 2216 407 (set (reg:DI 1 dx)
        (reg/v:DI 169 [ densize ])) strtod_l.c:1445 -1
     (nil))
(insn 2216 2215 2217 407 (set (reg:DI 4 si)
        (reg:DI 1215)) strtod_l.c:1445 -1
     (nil))
(insn 2217 2216 2218 407 (set (reg:DI 5 di)
        (reg:DI 1216)) strtod_l.c:1445 -1
     (nil))
(call_insn 2218 2217 2219 407 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1445 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2219 2218 2220 407 (set (reg:DI 1217)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) strtod_l.c:1446 -1
     (nil))
(insn 2220 2219 2221 407 (parallel [
            (set (reg:DI 1218)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1446 -1
     (nil))
(insn 2221 2220 2222 407 (parallel [
            (set (reg:DI 1219)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1446 -1
     (nil))
(insn 2222 2221 2223 407 (set (reg:SI 2 cx)
        (reg:SI 624 [ D.13411 ])) strtod_l.c:1446 -1
     (nil))
(insn 2223 2222 2224 407 (set (reg:DI 1 dx)
        (reg:DI 1217)) strtod_l.c:1446 -1
     (nil))
(insn 2224 2223 2225 407 (set (reg:DI 4 si)
        (reg:DI 1218)) strtod_l.c:1446 -1
     (nil))
(insn 2225 2224 2226 407 (set (reg:DI 5 di)
        (reg:DI 1219)) strtod_l.c:1446 -1
     (nil))
(call_insn 2226 2225 2227 407 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1446 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2227 2226 2228 407 (set (reg/v:DI 626 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1446 -1
     (nil))
(insn 2228 2227 2229 407 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 626 [ cy ])
            (const_int 0 [0]))) strtod_l.c:1447 -1
     (nil))
(jump_insn 2229 2228 2230 407 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2234)
            (pc))) strtod_l.c:1447 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2234)
(note 2230 2229 2231 408 [bb 408] NOTE_INSN_BASIC_BLOCK)
(insn 2231 2230 2232 408 (set (reg:DI 798 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(jump_insn 2232 2231 2233 408 (set (pc)
        (label_ref 2240)) -1
     (nil)
 -> 2240)
(barrier 2233 2232 2234)
(code_label 2234 2233 2235 409 309 "" [1 uses])
(note 2235 2234 2236 409 [bb 409] NOTE_INSN_BASIC_BLOCK)
(insn 2236 2235 2237 409 (set (reg:DI 627 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) strtod_l.c:1448 -1
     (nil))
(insn 2237 2236 2238 409 (parallel [
            (set (reg:DI 798 [ D.13406 ])
                (plus:DI (reg:DI 627 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1448 -1
     (nil))
(insn 2238 2237 2239 409 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])
        (reg:DI 798 [ D.13406 ])) strtod_l.c:1448 -1
     (nil))
(insn 2239 2238 2240 409 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 627 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
        (reg/v:DI 626 [ cy ])) strtod_l.c:1448 -1
     (nil))
(code_label 2240 2239 2241 410 308 "" [2 uses])
(note 2241 2240 2242 410 [bb 410] NOTE_INSN_BASIC_BLOCK)
(insn 2242 2241 2243 410 (set (reg:DI 628 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 170 [ bits ]))) strtod_l.c:1458 -1
     (nil))
(insn 2243 2242 2244 410 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 628 [ D.13406 ])) strtod_l.c:1458 -1
     (nil))
(insn 2244 2243 2245 410 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ densize ])
            (const_int 1 [0x1]))) strtod_l.c:1460 -1
     (nil))
(jump_insn 2245 2244 3377 410 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2250)
            (pc))) strtod_l.c:1460 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 2250)
(note 3377 2245 2246 411 [bb 411] NOTE_INSN_BASIC_BLOCK)
(insn 2246 3377 2247 411 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ densize ])
            (const_int 2 [0x2]))) strtod_l.c:1460 -1
     (nil))
(jump_insn 2247 2246 3378 411 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2373)
            (pc))) strtod_l.c:1460 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2373)
(note 3378 2247 2248 412 [bb 412] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2248 3378 2249 412 (set (pc)
        (label_ref 2591)) strtod_l.c:1460 -1
     (nil)
 -> 2591)
(barrier 2249 2248 2250)
(code_label 2250 2249 2251 413 311 "" [1 uses])
(note 2251 2250 2252 413 [bb 413] NOTE_INSN_BASIC_BLOCK)
(insn 2252 2251 2253 413 (set (reg/v:DI 209 [ n ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])) strtod_l.c:1467 -1
     (nil))
(insn 2253 2252 2254 413 (set (reg/v:DI 629 [ d ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [3 den+0 S8 A128])) strtod_l.c:1468 -1
     (nil))
(insn 2254 2253 2255 413 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 209 [ n ])
            (reg/v:DI 629 [ d ]))) strtod_l.c:1469 -1
     (nil))
(insn 2255 2254 2256 413 (set (reg:QI 1221 [ D.13402 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:1469 -1
     (nil))
(insn 2256 2255 2257 413 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1221 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1469 -1
     (nil))
(jump_insn 2257 2256 3379 413 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2265)
            (pc))) strtod_l.c:1469 -1
     (int_list:REG_BR_PROB 2 (nil))
 -> 2265)
(note 3379 2257 2258 414 [bb 414] NOTE_INSN_BASIC_BLOCK)
(insn 2258 3379 2259 414 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 798 [ D.13406 ])
            (const_int 1 [0x1]))) strtod_l.c:1469 -1
     (nil))
(insn 2259 2258 2260 414 (set (reg:QI 1223 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1469 -1
     (nil))
(insn 2260 2259 2261 414 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1223 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1469 -1
     (nil))
(jump_insn 2261 2260 2262 414 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2265)
            (pc))) strtod_l.c:1469 -1
     (int_list:REG_BR_PROB 2 (nil))
 -> 2265)
(note 2262 2261 199 415 [bb 415] NOTE_INSN_BASIC_BLOCK)
(insn 199 2262 2263 415 (set (reg/v:SI 210 [ used ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 2263 199 2264 415 (set (pc)
        (label_ref 2274)) -1
     (nil)
 -> 2274)
(barrier 2264 2263 2265)
(code_label 2265 2264 2266 416 313 "" [2 uses])
(note 2266 2265 2267 416 [bb 416] NOTE_INSN_BASIC_BLOCK)
(insn 2267 2266 2268 416 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1469 -1
     (nil))
(insn 2268 2267 2269 416 (set (reg:SI 1 dx)
        (const_int 1469 [0x5bd])) strtod_l.c:1469 -1
     (nil))
(insn 2269 2268 2270 416 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1469 -1
     (nil))
(insn 2270 2269 2271 416 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x2ab61e8856c0 *.LC36>)) strtod_l.c:1469 -1
     (nil))
(call_insn 2271 2270 2272 416 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1469 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2272 2271 2312)
(code_label 2312 2272 2273 417 319 "" [2 uses])
(note 2273 2312 2274 417 [bb 417] NOTE_INSN_BASIC_BLOCK)
(code_label 2274 2273 2275 418 314 "" [1 uses])
(note 2275 2274 2276 418 [bb 418] NOTE_INSN_BASIC_BLOCK)
(insn 2276 2275 2277 418 (set (reg:DI 1226)
        (const_int 0 [0])) strtod_l.c:1473 -1
     (nil))
(insn 2277 2276 2278 418 (parallel [
            (set (reg:DI 1224 [ quot ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 1226)
                        (reg/v:DI 209 [ n ])
                        (reg/v:DI 629 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1473)
                        (asm_input:DI ("1") strtod_l.c:1473)
                        (asm_input:DI ("rm") strtod_l.c:1473)
                    ]
                     [] strtod_l.c:1473))
            (set (reg:DI 1225 [ n ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 1226)
                        (reg/v:DI 209 [ n ])
                        (reg/v:DI 629 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1473)
                        (asm_input:DI ("1") strtod_l.c:1473)
                        (asm_input:DI ("rm") strtod_l.c:1473)
                    ]
                     [] strtod_l.c:1473))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1473 -1
     (nil))
(insn 2278 2277 2279 418 (set (reg/v:DI 630 [ quot ])
        (reg:DI 1224 [ quot ])) strtod_l.c:1473 -1
     (nil))
(insn 2279 2278 2280 418 (set (reg/v:DI 209 [ n ])
        (reg:DI 1225 [ n ])) strtod_l.c:1473 -1
     (nil))
(insn 2280 2279 2281 418 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1511 -1
     (nil))
(jump_insn 2281 2280 2282 418 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2318)
            (pc))) strtod_l.c:1511 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2318)
(note 2282 2281 2283 419 [bb 419] NOTE_INSN_BASIC_BLOCK)
(insn 2283 2282 2284 419 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 630 [ quot ])
            (const_int 0 [0]))) strtod_l.c:1511 -1
     (nil))
(jump_insn 2284 2283 2285 419 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3084)
            (pc))) strtod_l.c:1511 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3084)
(note 2285 2284 2286 420 [bb 420] NOTE_INSN_BASIC_BLOCK)
(insn 2286 2285 2287 420 (parallel [
            (set (reg:DI 1227)
                (minus:DI (const_int 63 [0x3f])
                    (clz:DI (reg/v:DI 630 [ quot ]))))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2287 2286 2288 420 (parallel [
            (set (reg:DI 1227)
                (xor:DI (reg:DI 1227)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (expr_list:REG_EQUAL (clz:DI (reg/v:DI 630 [ quot ]))
        (nil)))
(insn 2288 2287 2289 420 (set (reg/v:SI 631 [ cnt ])
        (subreg:SI (reg:DI 1227) 0)) strtod_l.c:1511 -1
     (nil))
(insn 2289 2288 2290 420 (set (reg:DI 1228 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 631 [ cnt ]))) strtod_l.c:1511 -1
     (nil))
(insn 2290 2289 2291 420 (set (reg:DI 1229)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1511 -1
     (nil))
(insn 2291 2290 2292 420 (parallel [
            (set (reg:DI 634 [ D.13406 ])
                (minus:DI (reg:DI 1229)
                    (reg:DI 1228 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (expr_list:REG_EQUAL (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
            (reg:DI 1228 [ D.13406 ]))
        (nil)))
(insn 2292 2291 2293 420 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 634 [ D.13406 ])) strtod_l.c:1511 -1
     (nil))
(insn 2293 2292 2294 420 (set (reg:SI 1231)
        (const_int 64 [0x40])) strtod_l.c:1511 -1
     (nil))
(insn 2294 2293 2295 420 (parallel [
            (set (reg:SI 1230 [ D.13409 ])
                (minus:SI (reg:SI 1231)
                    (reg/v:SI 631 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2295 2294 2296 420 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1230 [ D.13409 ])
            (const_int 53 [0x35]))) strtod_l.c:1511 -1
     (nil))
(jump_insn 2296 2295 2297 420 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2305)
            (pc))) strtod_l.c:1511 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 2305)
(note 2297 2296 2298 421 [bb 421] NOTE_INSN_BASIC_BLOCK)
(insn 2298 2297 2299 421 (parallel [
            (set (reg/v:SI 210 [ used ])
                (plus:SI (reg/v:SI 631 [ cnt ])
                    (const_int 53 [0x35])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2299 2298 2300 421 (set (reg:SI 1233)
        (const_int 64 [0x40])) strtod_l.c:1511 -1
     (nil))
(insn 2300 2299 2301 421 (parallel [
            (set (reg:SI 1232 [ D.13409 ])
                (minus:SI (reg:SI 1233)
                    (reg/v:SI 210 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2301 2300 2302 421 (parallel [
            (set (reg:DI 1234)
                (lshiftrt:DI (reg/v:DI 630 [ quot ])
                    (subreg:QI (reg:SI 1232 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2302 2301 2303 421 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 1234)) strtod_l.c:1511 -1
     (nil))
(jump_insn 2303 2302 2304 421 (set (pc)
        (label_ref 2351)) strtod_l.c:1511 -1
     (nil)
 -> 2351)
(barrier 2304 2303 2305)
(code_label 2305 2304 2306 422 317 "" [1 uses])
(note 2306 2305 2307 422 [bb 422] NOTE_INSN_BASIC_BLOCK)
(insn 2307 2306 2308 422 (parallel [
            (set (reg:SI 812 [ D.13409 ])
                (neg:SI (reg/v:SI 631 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2308 2307 2309 422 (set (reg:SI 1235)
        (const_int 64 [0x40])) -1
     (nil))
(insn 2309 2308 200 422 (parallel [
            (set (reg:SI 813 [ D.13409 ])
                (minus:SI (reg:SI 1235)
                    (reg/v:SI 631 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 200 2309 3087 422 (set (reg/v:SI 170 [ bits ])
        (reg:SI 813 [ D.13409 ])) strtod_l.c:1511 -1
     (nil))
(code_label 3087 200 2310 423 392 "" [1 uses])
(note 2310 3087 2311 423 [bb 423] NOTE_INSN_BASIC_BLOCK)
(insn 2311 2310 2313 423 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg/v:DI 630 [ quot ])) strtod_l.c:1511 -1
     (nil))
(insn 2313 2311 2314 423 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 53 [0x35]))) strtod_l.c:1513 -1
     (nil))
(jump_insn 2314 2313 2317 423 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2312)
            (pc))) strtod_l.c:1513 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2312)
(note 2317 2314 2315 424 [bb 424] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2315 2317 2316 424 (set (pc)
        (label_ref 2348)) -1
     (nil)
 -> 2348)
(barrier 2316 2315 2318)
(code_label 2318 2316 2319 425 315 "" [1 uses])
(note 2319 2318 2320 425 [bb 425] NOTE_INSN_BASIC_BLOCK)
(insn 2320 2319 2321 425 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int -10 [0xfffffffffffffff6]))) strtod_l.c:1511 -1
     (nil))
(jump_insn 2321 2320 2322 425 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2327)
            (pc))) strtod_l.c:1511 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2327)
(note 2322 2321 2323 426 [bb 426] NOTE_INSN_BASIC_BLOCK)
(insn 2323 2322 2324 426 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
        (reg/v:DI 630 [ quot ])) strtod_l.c:1511 -1
     (nil))
(insn 2324 2323 2325 426 (parallel [
            (set (reg/v:SI 170 [ bits ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 2325 2324 2326 426 (set (pc)
        (label_ref 2312)) -1
     (nil)
 -> 2312)
(barrier 2326 2325 2327)
(code_label 2327 2326 2328 427 321 "" [1 uses])
(note 2328 2327 2329 427 [bb 427] NOTE_INSN_BASIC_BLOCK)
(insn 2329 2328 2330 427 (set (reg:SI 1236)
        (const_int 53 [0x35])) strtod_l.c:1511 -1
     (nil))
(insn 2330 2329 2331 427 (parallel [
            (set (reg/v:SI 210 [ used ])
                (minus:SI (reg:SI 1236)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2331 2330 2332 427 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 210 [ used ])
            (const_int 0 [0]))) strtod_l.c:1511 -1
     (nil))
(jump_insn 2332 2331 2333 427 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2348)
            (pc))) strtod_l.c:1511 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2348)
(note 2333 2332 2334 428 [bb 428] NOTE_INSN_BASIC_BLOCK)
(insn 2334 2333 2335 428 (set (reg/v:SI 639 [ __count ])
        (reg/v:SI 210 [ used ])) strtod_l.c:1511 -1
     (nil))
(insn 2335 2334 2336 428 (parallel [
            (set (reg:DI 1237)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2336 2335 2337 428 (parallel [
            (set (reg:DI 1238)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2337 2336 2338 428 (set (reg:SI 2 cx)
        (reg/v:SI 639 [ __count ])) strtod_l.c:1511 -1
     (nil))
(insn 2338 2337 2339 428 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:1511 -1
     (nil))
(insn 2339 2338 2340 428 (set (reg:DI 4 si)
        (reg:DI 1237)) strtod_l.c:1511 -1
     (nil))
(insn 2340 2339 2341 428 (set (reg:DI 5 di)
        (reg:DI 1238)) strtod_l.c:1511 -1
     (nil))
(call_insn 2341 2340 2342 428 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1511 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2342 2341 2343 428 (set (reg:SI 1240)
        (const_int 64 [0x40])) strtod_l.c:1511 -1
     (nil))
(insn 2343 2342 2344 428 (parallel [
            (set (reg:SI 1239 [ D.13411 ])
                (minus:SI (reg:SI 1240)
                    (reg/v:SI 639 [ __count ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2344 2343 2345 428 (parallel [
            (set (reg:DI 1241 [ D.13400 ])
                (lshiftrt:DI (reg/v:DI 630 [ quot ])
                    (subreg:QI (reg:SI 1239 [ D.13411 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(insn 2345 2344 2348 428 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                (ior:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                    (reg:DI 1241 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(code_label 2348 2345 2349 429 320 "" [2 uses])
(note 2349 2348 2350 429 [bb 429] NOTE_INSN_BASIC_BLOCK)
(insn 2350 2349 2351 429 (set (reg:DI 634 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(code_label 2351 2350 2352 430 318 "" [1 uses])
(note 2352 2351 2353 430 [bb 430] NOTE_INSN_BASIC_BLOCK)
(insn 2353 2352 2354 430 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 209 [ n ])
            (const_int 0 [0]))) strtod_l.c:1515 -1
     (nil))
(insn 2354 2353 2355 430 (set (reg:QI 1243 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1515 -1
     (nil))
(insn 2355 2354 2356 430 (parallel [
            (set (reg:QI 1244 [ D.13402 ])
                (and:QI (subreg:QI (reg/v:SI 204 [ more_bits ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1515 -1
     (nil))
(insn 2356 2355 2357 430 (parallel [
            (set (reg:QI 1245 [ D.13402 ])
                (ior:QI (reg:QI 1243 [ D.13402 ])
                    (reg:QI 1244 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1515 -1
     (nil))
(insn 2357 2356 2358 430 (set (reg:SI 1246 [ D.13409 ])
        (zero_extend:SI (reg:QI 1245 [ D.13402 ]))) strtod_l.c:1515 -1
     (nil))
(insn 2358 2357 2359 430 (set (reg:SI 1248)
        (const_int 63 [0x3f])) strtod_l.c:1515 -1
     (nil))
(insn 2359 2358 2360 430 (parallel [
            (set (reg:SI 1247 [ D.13409 ])
                (minus:SI (reg:SI 1248)
                    (reg/v:SI 210 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1515 -1
     (nil))
(insn 2360 2359 2361 430 (set (reg:DI 1249 [ D.13406 ])
        (sign_extend:DI (reg:SI 1247 [ D.13409 ]))) strtod_l.c:1515 -1
     (nil))
(insn 2361 2360 2362 430 (parallel [
            (set (reg:DI 1250 [ D.13406 ])
                (plus:DI (reg:DI 634 [ D.13406 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1515 -1
     (nil))
(insn 2362 2361 2363 430 (parallel [
            (set (reg:DI 1251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1515 -1
     (nil))
(insn 2363 2362 2364 430 (set (reg:SI 38 r9)
        (reg:SI 1246 [ D.13409 ])) strtod_l.c:1515 -1
     (nil))
(insn 2364 2363 2365 430 (set (reg:DI 37 r8)
        (reg:DI 1249 [ D.13406 ])) strtod_l.c:1515 -1
     (nil))
(insn 2365 2364 2366 430 (set (reg:DI 2 cx)
        (reg/v:DI 630 [ quot ])) strtod_l.c:1515 -1
     (nil))
(insn 2366 2365 2367 430 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1515 -1
     (nil))
(insn 2367 2366 2368 430 (set (reg:DI 4 si)
        (reg:DI 1250 [ D.13406 ])) strtod_l.c:1515 -1
     (nil))
(insn 2368 2367 2369 430 (set (reg:DI 5 di)
        (reg:DI 1251)) strtod_l.c:1515 -1
     (nil))
(call_insn 2369 2368 2370 430 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1515 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 2370 2369 2371 430 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1515 -1
     (nil))
(jump_insn 2371 2370 2372 430 (set (pc)
        (label_ref 2977)) strtod_l.c:1515 -1
     (nil)
 -> 2977)
(barrier 2372 2371 2373)
(code_label 2373 2372 2374 431 312 "" [1 uses])
(note 2374 2373 2375 431 [bb 431] NOTE_INSN_BASIC_BLOCK)
(insn 2375 2374 2376 431 (set (reg/v:DI 652 [ d0 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -480 [0xfffffffffffffe20])) [3 den+0 S8 A128])) strtod_l.c:1525 -1
     (nil))
(insn 2376 2375 2377 431 (set (reg/v:DI 653 [ d1 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -472 [0xfffffffffffffe28])) [3 den+8 S8 A64])) strtod_l.c:1526 -1
     (nil))
(insn 2377 2376 2378 431 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 798 [ D.13406 ])
            (const_int 1 [0x1]))) strtod_l.c:1528 -1
     (nil))
(jump_insn 2378 2377 2379 431 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2414)
            (pc))) strtod_l.c:1528 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2414)
(note 2379 2378 2380 432 [bb 432] NOTE_INSN_BASIC_BLOCK)
(insn 2380 2379 2381 432 (set (reg/v:DI 664 [ n0 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])) strtod_l.c:1530 -1
     (nil))
(insn 2381 2380 2382 432 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 653 [ d1 ])
            (reg/v:DI 664 [ n0 ]))) strtod_l.c:1530 -1
     (nil))
(jump_insn 2382 2381 2383 432 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3346)
            (pc))) strtod_l.c:1530 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3346)
(note 2383 2382 2384 433 [bb 433] NOTE_INSN_BASIC_BLOCK)
(insn 2384 2383 2385 433 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1540 -1
     (nil))
(jump_insn 2385 2384 2386 433 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2391)
            (pc))) strtod_l.c:1540 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 2391)
(note 2386 2385 2387 434 [bb 434] NOTE_INSN_BASIC_BLOCK)
(insn 2387 2386 2388 434 (parallel [
            (set (reg:DI 1252)
                (plus:DI (reg:DI 628 [ D.13406 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1541 -1
     (nil))
(insn 2388 2387 202 434 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 1252)) strtod_l.c:1541 -1
     (nil))
(insn 202 2388 203 434 (set (reg/v:DI 663 [ n0 ])
        (reg/v:DI 664 [ n0 ])) strtod_l.c:1541 -1
     (nil))
(insn 203 202 2389 434 (set (reg/v:DI 664 [ n0 ])
        (const_int 0 [0])) strtod_l.c:1556 -1
     (nil))
(jump_insn 2389 203 2390 434 (set (pc)
        (label_ref 2420)) strtod_l.c:1541 -1
     (nil)
 -> 2420)
(barrier 2390 2389 2391)
(code_label 2391 2390 2392 435 325 "" [1 uses])
(note 2392 2391 2393 435 [bb 435] NOTE_INSN_BASIC_BLOCK)
(insn 2393 2392 2394 435 (set (reg:SI 1253)
        (const_int 53 [0x35])) strtod_l.c:1549 -1
     (nil))
(insn 2394 2393 2395 435 (parallel [
            (set (reg/v:SI 655 [ used ])
                (minus:SI (reg:SI 1253)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1549 -1
     (nil))
(insn 2395 2394 2396 435 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 655 [ used ])
            (const_int 0 [0]))) strtod_l.c:1550 -1
     (nil))
(jump_insn 2396 2395 2397 435 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2406)
            (pc))) strtod_l.c:1550 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2406)
(note 2397 2396 2398 436 [bb 436] NOTE_INSN_BASIC_BLOCK)
(insn 2398 2397 2399 436 (parallel [
            (set (reg:DI 1254)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1551 -1
     (nil))
(insn 2399 2398 2400 436 (parallel [
            (set (reg:DI 1255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1551 -1
     (nil))
(insn 2400 2399 2401 436 (set (reg:SI 2 cx)
        (reg/v:SI 655 [ used ])) strtod_l.c:1551 -1
     (nil))
(insn 2401 2400 2402 436 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:1551 -1
     (nil))
(insn 2402 2401 2403 436 (set (reg:DI 4 si)
        (reg:DI 1254)) strtod_l.c:1551 -1
     (nil))
(insn 2403 2402 2404 436 (set (reg:DI 5 di)
        (reg:DI 1255)) strtod_l.c:1551 -1
     (nil))
(call_insn 2404 2403 2405 436 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1551 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2405 2404 201 436 (set (reg:DI 811 [ D.13400 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])) -1
     (nil))
(insn 201 2405 2406 436 (set (reg/v:DI 664 [ n0 ])
        (reg:DI 811 [ D.13400 ])) strtod_l.c:1551 -1
     (nil))
(code_label 2406 201 2407 437 327 "" [1 uses])
(note 2407 2406 2408 437 [bb 437] NOTE_INSN_BASIC_BLOCK)
(insn 2408 2407 2409 437 (set (reg:SI 1257)
        (const_int 63 [0x3f])) -1
     (nil))
(insn 2409 2408 2410 437 (parallel [
            (set (reg:SI 1256 [ D.13409 ])
                (minus:SI (reg:SI 1257)
                    (reg/v:SI 655 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2410 2409 2411 437 (set (reg:DI 806 [ D.13406 ])
        (sign_extend:DI (reg:SI 1256 [ D.13409 ]))) -1
     (nil))
(insn 2411 2410 211 437 (set (reg:DI 807 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(insn 211 2411 212 437 (set (reg/v:DI 663 [ n0 ])
        (reg/v:DI 664 [ n0 ])) strtod_l.c:1574 -1
     (nil))
(insn 212 211 213 437 (set (reg/v:DI 214 [ quot ])
        (const_int 0 [0])) strtod_l.c:1574 -1
     (nil))
(insn 213 212 2412 437 (set (reg/v:DI 664 [ n0 ])
        (const_int 0 [0])) strtod_l.c:1556 -1
     (nil))
(jump_insn 2412 213 2413 437 (set (pc)
        (label_ref 2569)) -1
     (nil)
 -> 2569)
(barrier 2413 2412 2414)
(code_label 2414 2413 2415 438 323 "" [1 uses])
(note 2415 2414 2416 438 [bb 438] NOTE_INSN_BASIC_BLOCK)
(insn 2416 2415 2417 438 (set (reg/v:DI 663 [ n0 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -952 [0xfffffffffffffc48])) [3 num+8 S8 A64])) strtod_l.c:1561 -1
     (nil))
(insn 2417 2416 2420 438 (set (reg/v:DI 664 [ n0 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])) strtod_l.c:1562 -1
     (nil))
(code_label 2420 2417 2421 439 326 "" [2 uses])
(note 2421 2420 204 439 [bb 439] NOTE_INSN_BASIC_BLOCK)
(insn 204 2421 2422 439 (set (reg/v:SI 650 [ used ])
        (const_int 0 [0])) strtod_l.c:1556 -1
     (nil))
(jump_insn 2422 204 2423 439 (set (pc)
        (label_ref 2425)) strtod_l.c:1562 -1
     (nil)
 -> 2425)
(barrier 2423 2422 2527)
(code_label 2527 2423 2424 440 340 "" [2 uses])
(note 2424 2527 2425 440 [bb 440] NOTE_INSN_BASIC_BLOCK)
(code_label 2425 2424 2426 441 329 "" [1 uses])
(note 2426 2425 2427 441 [bb 441] NOTE_INSN_BASIC_BLOCK)
(insn 2427 2426 2428 441 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 653 [ d1 ])
            (reg/v:DI 663 [ n0 ]))) strtod_l.c:1569 -1
     (nil))
(jump_insn 2428 2427 2429 441 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2453)
            (pc))) strtod_l.c:1569 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 2453)
(note 2429 2428 2430 442 [bb 442] NOTE_INSN_BASIC_BLOCK)
(insn 2430 2429 2431 442 (parallel [
            (set (reg/v:DI 215 [ r ])
                (plus:DI (reg/v:DI 653 [ d1 ])
                    (reg/v:DI 664 [ n0 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1576 -1
     (nil))
(insn 2431 2430 2432 442 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 653 [ d1 ])
            (reg/v:DI 215 [ r ]))) strtod_l.c:1577 -1
     (nil))
(jump_insn 2432 2431 2433 442 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2444)
            (pc))) strtod_l.c:1577 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2444)
(note 2433 2432 2434 443 [bb 443] NOTE_INSN_BASIC_BLOCK)
(insn 2434 2433 2435 443 (parallel [
            (set (reg:DI 1260 [ D.13400 ])
                (minus:DI (reg/v:DI 215 [ r ])
                    (reg/v:DI 652 [ d0 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1579 -1
     (nil))
(insn 2435 2434 2436 443 (set (reg:DI 1261)
        (const_int 0 [0])) strtod_l.c:1579 -1
     (nil))
(insn 2436 2435 2437 443 (parallel [
            (set (reg:DI 1258 [ n0 ])
                (asm_operands:DI ("add{q} {%5,%1|%1,%5}
	adc{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg:DI 1260 [ D.13400 ])
                        (const_int 0 [0])
                        (reg:DI 1261)
                        (reg/v:DI 652 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1579)
                        (asm_input:DI ("rme") strtod_l.c:1579)
                        (asm_input:DI ("%1") strtod_l.c:1579)
                        (asm_input:DI ("rme") strtod_l.c:1579)
                    ]
                     [] strtod_l.c:1579))
            (set (reg:DI 1259 [ n0 ])
                (asm_operands:DI ("add{q} {%5,%1|%1,%5}
	adc{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg:DI 1260 [ D.13400 ])
                        (const_int 0 [0])
                        (reg:DI 1261)
                        (reg/v:DI 652 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1579)
                        (asm_input:DI ("rme") strtod_l.c:1579)
                        (asm_input:DI ("%1") strtod_l.c:1579)
                        (asm_input:DI ("rme") strtod_l.c:1579)
                    ]
                     [] strtod_l.c:1579))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1579 -1
     (nil))
(insn 2437 2436 2438 443 (set (reg/v:DI 663 [ n0 ])
        (reg:DI 1258 [ n0 ])) strtod_l.c:1579 -1
     (nil))
(insn 2438 2437 2439 443 (set (reg/v:DI 664 [ n0 ])
        (reg:DI 1259 [ n0 ])) strtod_l.c:1579 -1
     (nil))
(insn 2439 2438 2440 443 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2440 2439 2443 443 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3173)
            (pc))) strtod_l.c:1605 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3173)
(note 2443 2440 210 444 [bb 444] NOTE_INSN_BASIC_BLOCK)
(insn 210 2443 2441 444 (set (reg/v:DI 214 [ quot ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:1574 -1
     (nil))
(jump_insn 2441 210 2442 444 (set (pc)
        (label_ref 2533)) strtod_l.c:1605 -1
     (nil)
 -> 2533)
(barrier 2442 2441 2444)
(code_label 2444 2442 2445 445 331 "" [1 uses])
(note 2445 2444 2446 445 [bb 445] NOTE_INSN_BASIC_BLOCK)
(insn 2446 2445 2447 445 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 652 [ d0 ])
            (const_int 0 [0]))) strtod_l.c:1582 -1
     (nil))
(insn 2447 2446 2448 445 (set (reg:QI 1263)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1582 -1
     (nil))
(insn 2448 2447 2449 445 (set (reg:DI 1262 [ D.13402 ])
        (zero_extend:DI (reg:QI 1263))) strtod_l.c:1582 -1
     (nil))
(insn 2449 2448 2450 445 (parallel [
            (set (reg/v:DI 213 [ n1 ])
                (minus:DI (reg/v:DI 652 [ d0 ])
                    (reg:DI 1262 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1582 -1
     (nil))
(insn 2450 2449 205 445 (parallel [
            (set (reg/v:DI 212 [ n0 ])
                (neg:DI (reg/v:DI 652 [ d0 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1583 -1
     (nil))
(insn 205 2450 2451 445 (set (reg/v:DI 214 [ quot ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:1574 -1
     (nil))
(jump_insn 2451 205 2452 445 (set (pc)
        (label_ref 2461)) -1
     (nil)
 -> 2461)
(barrier 2452 2451 2453)
(code_label 2453 2452 2454 446 330 "" [1 uses])
(note 2454 2453 2455 446 [bb 446] NOTE_INSN_BASIC_BLOCK)
(insn 2455 2454 2456 446 (parallel [
            (set (reg:DI 1264 [ quot ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg/v:DI 664 [ n0 ])
                        (reg/v:DI 663 [ n0 ])
                        (reg/v:DI 653 [ d1 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1587)
                        (asm_input:DI ("1") strtod_l.c:1587)
                        (asm_input:DI ("rm") strtod_l.c:1587)
                    ]
                     [] strtod_l.c:1587))
            (set (reg:DI 1265 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg/v:DI 664 [ n0 ])
                        (reg/v:DI 663 [ n0 ])
                        (reg/v:DI 653 [ d1 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1587)
                        (asm_input:DI ("1") strtod_l.c:1587)
                        (asm_input:DI ("rm") strtod_l.c:1587)
                    ]
                     [] strtod_l.c:1587))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1587 -1
     (nil))
(insn 2456 2455 2457 446 (set (reg/v:DI 214 [ quot ])
        (reg:DI 1264 [ quot ])) strtod_l.c:1587 -1
     (nil))
(insn 2457 2456 2458 446 (set (reg/v:DI 215 [ r ])
        (reg:DI 1265 [ r ])) strtod_l.c:1587 -1
     (nil))
(insn 2458 2457 2459 446 (parallel [
            (set (reg:DI 1266 [ n0 ])
                (asm_operands:DI ("mul{q} %3") ("=a") 0 [
                        (reg/v:DI 652 [ d0 ])
                        (reg/v:DI 214 [ quot ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1588)
                        (asm_input:DI ("rm") strtod_l.c:1588)
                    ]
                     [] strtod_l.c:1588))
            (set (reg:DI 1267 [ n1 ])
                (asm_operands:DI ("mul{q} %3") ("=d") 1 [
                        (reg/v:DI 652 [ d0 ])
                        (reg/v:DI 214 [ quot ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1588)
                        (asm_input:DI ("rm") strtod_l.c:1588)
                    ]
                     [] strtod_l.c:1588))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1588 -1
     (nil))
(insn 2459 2458 2460 446 (set (reg/v:DI 212 [ n0 ])
        (reg:DI 1266 [ n0 ])) strtod_l.c:1588 -1
     (nil))
(insn 2460 2459 2461 446 (set (reg/v:DI 213 [ n1 ])
        (reg:DI 1267 [ n1 ])) strtod_l.c:1588 -1
     (nil))
(code_label 2461 2460 2462 447 334 "" [1 uses])
(note 2462 2461 2482 447 [bb 447] NOTE_INSN_BASIC_BLOCK)
(code_label 2482 2462 2463 448 337 "" [1 uses])
(note 2463 2482 2464 448 [bb 448] NOTE_INSN_BASIC_BLOCK)
(insn 2464 2463 2465 448 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 213 [ n1 ])
            (reg/v:DI 215 [ r ]))) strtod_l.c:1592 -1
     (nil))
(jump_insn 2465 2464 2466 448 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2475)
            (pc))) strtod_l.c:1592 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2475)
(note 2466 2465 2467 449 [bb 449] NOTE_INSN_BASIC_BLOCK)
(insn 2467 2466 2468 449 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 213 [ n1 ])
            (reg/v:DI 215 [ r ]))) strtod_l.c:1592 -1
     (nil))
(insn 2468 2467 2469 449 (set (reg:QI 1269 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1592 -1
     (nil))
(insn 2469 2468 2470 449 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1269 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1592 -1
     (nil))
(jump_insn 2470 2469 3380 449 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2485)
            (pc))) strtod_l.c:1592 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 2485)
(note 3380 2470 2471 450 [bb 450] NOTE_INSN_BASIC_BLOCK)
(insn 2471 3380 2472 450 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 212 [ n0 ])
            (const_int 0 [0]))) strtod_l.c:1592 -1
     (nil))
(insn 2472 2471 2473 450 (set (reg:QI 1271 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1592 -1
     (nil))
(insn 2473 2472 2474 450 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1271 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:1592 -1
     (nil))
(jump_insn 2474 2473 2475 450 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2485)
            (pc))) strtod_l.c:1592 -1
     (int_list:REG_BR_PROB 230 (nil))
 -> 2485)
(code_label 2475 2474 2476 451 335 "" [1 uses])
(note 2476 2475 2477 451 [bb 451] NOTE_INSN_BASIC_BLOCK)
(insn 2477 2476 2478 451 (parallel [
            (set (reg/v:DI 214 [ quot ])
                (plus:DI (reg/v:DI 214 [ quot ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1595 -1
     (nil))
(insn 2478 2477 2479 451 (parallel [
            (set (reg:DI 1272 [ n1 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg/v:DI 213 [ n1 ])
                        (const_int 0 [0])
                        (reg/v:DI 212 [ n0 ])
                        (reg/v:DI 652 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1597)
                        (asm_input:DI ("rme") strtod_l.c:1597)
                        (asm_input:DI ("1") strtod_l.c:1597)
                        (asm_input:DI ("rme") strtod_l.c:1597)
                    ]
                     [] strtod_l.c:1597))
            (set (reg:DI 1273 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg/v:DI 213 [ n1 ])
                        (const_int 0 [0])
                        (reg/v:DI 212 [ n0 ])
                        (reg/v:DI 652 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1597)
                        (asm_input:DI ("rme") strtod_l.c:1597)
                        (asm_input:DI ("1") strtod_l.c:1597)
                        (asm_input:DI ("rme") strtod_l.c:1597)
                    ]
                     [] strtod_l.c:1597))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1597 -1
     (nil))
(insn 2479 2478 2480 451 (set (reg/v:DI 213 [ n1 ])
        (reg:DI 1272 [ n1 ])) strtod_l.c:1597 -1
     (nil))
(insn 2480 2479 2481 451 (set (reg/v:DI 212 [ n0 ])
        (reg:DI 1273 [ n0 ])) strtod_l.c:1597 -1
     (nil))
(insn 2481 2480 2483 451 (parallel [
            (set (reg/v:DI 215 [ r ])
                (plus:DI (reg/v:DI 215 [ r ])
                    (reg/v:DI 653 [ d1 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1598 -1
     (nil))
(insn 2483 2481 2484 451 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 653 [ d1 ])
            (reg/v:DI 215 [ r ]))) strtod_l.c:1599 -1
     (nil))
(jump_insn 2484 2483 2485 451 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2482)
            (pc))) strtod_l.c:1599 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 2482)
(code_label 2485 2484 2486 452 336 "" [2 uses])
(note 2486 2485 2487 452 [bb 452] NOTE_INSN_BASIC_BLOCK)
(insn 2487 2486 2488 452 (set (reg:DI 1276)
        (const_int 0 [0])) strtod_l.c:1602 -1
     (nil))
(insn 2488 2487 2489 452 (parallel [
            (set (reg:DI 1274 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg/v:DI 215 [ r ])
                        (reg/v:DI 213 [ n1 ])
                        (reg:DI 1276)
                        (reg/v:DI 212 [ n0 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1602)
                        (asm_input:DI ("rme") strtod_l.c:1602)
                        (asm_input:DI ("1") strtod_l.c:1602)
                        (asm_input:DI ("rme") strtod_l.c:1602)
                    ]
                     [] strtod_l.c:1602))
            (set (reg:DI 1275 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg/v:DI 215 [ r ])
                        (reg/v:DI 213 [ n1 ])
                        (reg:DI 1276)
                        (reg/v:DI 212 [ n0 ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1602)
                        (asm_input:DI ("rme") strtod_l.c:1602)
                        (asm_input:DI ("1") strtod_l.c:1602)
                        (asm_input:DI ("rme") strtod_l.c:1602)
                    ]
                     [] strtod_l.c:1602))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1602 -1
     (nil))
(insn 2489 2488 2490 452 (set (reg/v:DI 663 [ n0 ])
        (reg:DI 1274 [ n0 ])) strtod_l.c:1602 -1
     (nil))
(insn 2490 2489 2491 452 (set (reg/v:DI 664 [ n0 ])
        (reg:DI 1275 [ n0 ])) strtod_l.c:1602 -1
     (nil))
(insn 2491 2490 2492 452 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2492 2491 2493 452 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2533)
            (pc))) strtod_l.c:1605 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2533)
(note 2493 2492 2494 453 [bb 453] NOTE_INSN_BASIC_BLOCK)
(insn 2494 2493 2495 453 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 214 [ quot ])
            (const_int 0 [0]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2495 2494 2496 453 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3090)
            (pc))) strtod_l.c:1605 -1
     (int_list:REG_BR_PROB 5797 (nil))
 -> 3090)
(note 2496 2495 2497 454 [bb 454] NOTE_INSN_BASIC_BLOCK)
(insn 2497 2496 2498 454 (parallel [
            (set (reg:DI 1277)
                (minus:DI (const_int 63 [0x3f])
                    (clz:DI (reg/v:DI 214 [ quot ]))))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2498 2497 2499 454 (parallel [
            (set (reg:DI 1277)
                (xor:DI (reg:DI 1277)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (expr_list:REG_EQUAL (clz:DI (reg/v:DI 214 [ quot ]))
        (nil)))
(insn 2499 2498 2500 454 (set (reg/v:SI 665 [ cnt ])
        (subreg:SI (reg:DI 1277) 0)) strtod_l.c:1605 -1
     (nil))
(insn 2500 2499 2501 454 (set (reg:DI 1278 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 665 [ cnt ]))) strtod_l.c:1605 -1
     (nil))
(insn 2501 2500 2502 454 (set (reg:DI 1279)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1605 -1
     (nil))
(insn 2502 2501 2503 454 (parallel [
            (set (reg:DI 807 [ D.13406 ])
                (minus:DI (reg:DI 1279)
                    (reg:DI 1278 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (expr_list:REG_EQUAL (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
            (reg:DI 1278 [ D.13406 ]))
        (nil)))
(insn 2503 2502 2504 454 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 807 [ D.13406 ])) strtod_l.c:1605 -1
     (nil))
(insn 2504 2503 2505 454 (set (reg:SI 1281)
        (const_int 64 [0x40])) strtod_l.c:1605 -1
     (nil))
(insn 2505 2504 2506 454 (parallel [
            (set (reg:SI 1280 [ D.13409 ])
                (minus:SI (reg:SI 1281)
                    (reg/v:SI 665 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2506 2505 2507 454 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1280 [ D.13409 ])
            (const_int 53 [0x35]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2507 2506 2508 454 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2520)
            (pc))) strtod_l.c:1605 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 2520)
(note 2508 2507 2509 455 [bb 455] NOTE_INSN_BASIC_BLOCK)
(insn 2509 2508 2510 455 (parallel [
            (set (reg:SI 802 [ D.13409 ])
                (plus:SI (reg/v:SI 665 [ cnt ])
                    (const_int 53 [0x35])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2510 2509 2511 455 (set (reg:SI 1283)
        (const_int 64 [0x40])) -1
     (nil))
(insn 2511 2510 2512 455 (parallel [
            (set (reg:SI 1282 [ D.13409 ])
                (minus:SI (reg:SI 1283)
                    (reg:SI 802 [ D.13409 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2512 2511 2513 455 (parallel [
            (set (reg:DI 804 [ D.13400 ])
                (lshiftrt:DI (reg/v:DI 214 [ quot ])
                    (subreg:QI (reg:SI 1282 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2513 2512 2514 455 (set (reg:SI 1285)
        (const_int 63 [0x3f])) -1
     (nil))
(insn 2514 2513 2515 455 (parallel [
            (set (reg:SI 1284 [ D.13409 ])
                (minus:SI (reg:SI 1285)
                    (reg:SI 802 [ D.13409 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2515 2514 3176 455 (set (reg:DI 806 [ D.13406 ])
        (sign_extend:DI (reg:SI 1284 [ D.13409 ]))) -1
     (nil))
(code_label 3176 2515 2516 456 405 "" [1 uses])
(note 2516 3176 2517 456 [bb 456] NOTE_INSN_BASIC_BLOCK)
(insn 2517 2516 2518 456 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 804 [ D.13400 ])) strtod_l.c:1605 -1
     (nil))
(jump_insn 2518 2517 2519 456 (set (pc)
        (label_ref 2569)) strtod_l.c:1605 -1
     (nil)
 -> 2569)
(barrier 2519 2518 2520)
(code_label 2520 2519 2521 457 339 "" [1 uses])
(note 2521 2520 2522 457 [bb 457] NOTE_INSN_BASIC_BLOCK)
(insn 2522 2521 2523 457 (parallel [
            (set (reg:SI 808 [ D.13409 ])
                (neg:SI (reg/v:SI 665 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2523 2522 2524 457 (set (reg:SI 1286)
        (const_int 64 [0x40])) -1
     (nil))
(insn 2524 2523 209 457 (parallel [
            (set (reg:SI 810 [ D.13409 ])
                (minus:SI (reg:SI 1286)
                    (reg/v:SI 665 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 209 2524 3093 457 (set (reg/v:SI 170 [ bits ])
        (reg:SI 810 [ D.13409 ])) strtod_l.c:1605 -1
     (nil))
(code_label 3093 209 2525 458 393 "" [1 uses])
(note 2525 3093 2526 458 [bb 458] NOTE_INSN_BASIC_BLOCK)
(insn 2526 2525 2528 458 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg/v:DI 214 [ quot ])) strtod_l.c:1605 -1
     (nil))
(insn 2528 2526 2529 458 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 53 [0x35]))) strtod_l.c:1565 -1
     (nil))
(jump_insn 2529 2528 2532 458 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2527)
            (pc))) strtod_l.c:1565 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2527)
(note 2532 2529 2530 459 [bb 459] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2530 2532 2531 459 (set (pc)
        (label_ref 2563)) -1
     (nil)
 -> 2563)
(barrier 2531 2530 2533)
(code_label 2533 2531 2534 460 333 "" [2 uses])
(note 2534 2533 2535 460 [bb 460] NOTE_INSN_BASIC_BLOCK)
(insn 2535 2534 2536 460 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int -10 [0xfffffffffffffff6]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2536 2535 2537 460 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2542)
            (pc))) strtod_l.c:1605 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2542)
(note 2537 2536 2538 461 [bb 461] NOTE_INSN_BASIC_BLOCK)
(insn 2538 2537 2539 461 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
        (reg/v:DI 214 [ quot ])) strtod_l.c:1605 -1
     (nil))
(insn 2539 2538 2540 461 (parallel [
            (set (reg/v:SI 170 [ bits ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 2540 2539 2541 461 (set (pc)
        (label_ref 2527)) -1
     (nil)
 -> 2527)
(barrier 2541 2540 2542)
(code_label 2542 2541 2543 462 342 "" [1 uses])
(note 2543 2542 2544 462 [bb 462] NOTE_INSN_BASIC_BLOCK)
(insn 2544 2543 2545 462 (set (reg:SI 1287)
        (const_int 53 [0x35])) strtod_l.c:1605 -1
     (nil))
(insn 2545 2544 2546 462 (parallel [
            (set (reg/v:SI 650 [ used ])
                (minus:SI (reg:SI 1287)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2546 2545 2547 462 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 650 [ used ])
            (const_int 0 [0]))) strtod_l.c:1605 -1
     (nil))
(jump_insn 2547 2546 2548 462 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2563)
            (pc))) strtod_l.c:1605 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2563)
(note 2548 2547 2549 463 [bb 463] NOTE_INSN_BASIC_BLOCK)
(insn 2549 2548 2550 463 (set (reg/v:SI 669 [ __count ])
        (reg/v:SI 650 [ used ])) strtod_l.c:1605 -1
     (nil))
(insn 2550 2549 2551 463 (parallel [
            (set (reg:DI 1288)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2551 2550 2552 463 (parallel [
            (set (reg:DI 1289)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2552 2551 2553 463 (set (reg:SI 2 cx)
        (reg/v:SI 669 [ __count ])) strtod_l.c:1605 -1
     (nil))
(insn 2553 2552 2554 463 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:1605 -1
     (nil))
(insn 2554 2553 2555 463 (set (reg:DI 4 si)
        (reg:DI 1288)) strtod_l.c:1605 -1
     (nil))
(insn 2555 2554 2556 463 (set (reg:DI 5 di)
        (reg:DI 1289)) strtod_l.c:1605 -1
     (nil))
(call_insn 2556 2555 2557 463 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1605 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2557 2556 2558 463 (set (reg:SI 1291)
        (const_int 64 [0x40])) strtod_l.c:1605 -1
     (nil))
(insn 2558 2557 2559 463 (parallel [
            (set (reg:SI 1290 [ D.13411 ])
                (minus:SI (reg:SI 1291)
                    (reg/v:SI 669 [ __count ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2559 2558 2560 463 (parallel [
            (set (reg:DI 1292 [ D.13400 ])
                (lshiftrt:DI (reg/v:DI 214 [ quot ])
                    (subreg:QI (reg:SI 1290 [ D.13411 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(insn 2560 2559 2563 463 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                (ior:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                    (reg:DI 1292 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(code_label 2563 2560 2564 464 341 "" [2 uses])
(note 2564 2563 2565 464 [bb 464] NOTE_INSN_BASIC_BLOCK)
(insn 2565 2564 2566 464 (set (reg:SI 1294)
        (const_int 63 [0x3f])) -1
     (nil))
(insn 2566 2565 2567 464 (parallel [
            (set (reg:SI 1293 [ D.13409 ])
                (minus:SI (reg:SI 1294)
                    (reg/v:SI 650 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2567 2566 2568 464 (set (reg:DI 806 [ D.13406 ])
        (sign_extend:DI (reg:SI 1293 [ D.13409 ]))) -1
     (nil))
(insn 2568 2567 2569 464 (set (reg:DI 807 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(code_label 2569 2568 2570 465 328 "" [2 uses])
(note 2570 2569 2571 465 [bb 465] NOTE_INSN_BASIC_BLOCK)
(insn 2571 2570 2572 465 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 664 [ n0 ])
            (const_int 0 [0]))) strtod_l.c:1608 -1
     (nil))
(insn 2572 2571 2573 465 (set (reg:QI 1296 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1608 -1
     (nil))
(insn 2573 2572 2574 465 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 663 [ n0 ])
            (const_int 0 [0]))) strtod_l.c:1608 -1
     (nil))
(insn 2574 2573 2575 465 (set (reg:QI 1298 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:1608 -1
     (nil))
(insn 2575 2574 2576 465 (parallel [
            (set (reg:QI 1299 [ D.13402 ])
                (ior:QI (reg:QI 1296 [ D.13402 ])
                    (reg:QI 1298 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1608 -1
     (nil))
(insn 2576 2575 2577 465 (parallel [
            (set (reg:QI 1300 [ D.13402 ])
                (and:QI (subreg:QI (reg/v:SI 204 [ more_bits ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1608 -1
     (nil))
(insn 2577 2576 2578 465 (parallel [
            (set (reg:QI 1301 [ D.13402 ])
                (ior:QI (reg:QI 1299 [ D.13402 ])
                    (reg:QI 1300 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1608 -1
     (nil))
(insn 2578 2577 2579 465 (set (reg:SI 1302 [ D.13409 ])
        (zero_extend:SI (reg:QI 1301 [ D.13402 ]))) strtod_l.c:1608 -1
     (nil))
(insn 2579 2578 2580 465 (parallel [
            (set (reg:DI 1303 [ D.13406 ])
                (plus:DI (reg:DI 807 [ D.13406 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1608 -1
     (nil))
(insn 2580 2579 2581 465 (parallel [
            (set (reg:DI 1304)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1608 -1
     (nil))
(insn 2581 2580 2582 465 (set (reg:SI 38 r9)
        (reg:SI 1302 [ D.13409 ])) strtod_l.c:1608 -1
     (nil))
(insn 2582 2581 2583 465 (set (reg:DI 37 r8)
        (reg:DI 806 [ D.13406 ])) strtod_l.c:1608 -1
     (nil))
(insn 2583 2582 2584 465 (set (reg:DI 2 cx)
        (reg/v:DI 214 [ quot ])) strtod_l.c:1608 -1
     (nil))
(insn 2584 2583 2585 465 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1608 -1
     (nil))
(insn 2585 2584 2586 465 (set (reg:DI 4 si)
        (reg:DI 1303 [ D.13406 ])) strtod_l.c:1608 -1
     (nil))
(insn 2586 2585 2587 465 (set (reg:DI 5 di)
        (reg:DI 1304)) strtod_l.c:1608 -1
     (nil))
(call_insn 2587 2586 2588 465 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1608 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 2588 2587 2589 465 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1608 -1
     (nil))
(jump_insn 2589 2588 2590 465 (set (pc)
        (label_ref 2977)) strtod_l.c:1608 -1
     (nil)
 -> 2977)
(barrier 2590 2589 2591)
(code_label 2591 2590 2592 466 310 "" [1 uses])
(note 2592 2591 2593 466 [bb 466] NOTE_INSN_BASIC_BLOCK)
(insn 2593 2592 2594 466 (set (reg/v:DI 678 [ dX ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 621 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64])) strtod_l.c:1619 -1
     (nil))
(insn 2594 2593 2595 466 (parallel [
            (set (reg:DI 679 [ D.13406 ])
                (plus:DI (reg/v:DI 169 [ densize ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1620 -1
     (nil))
(insn 2595 2594 2596 466 (set (reg/v:DI 680 [ d1 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 679 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64])) strtod_l.c:1620 -1
     (nil))
(insn 2596 2595 2597 466 (parallel [
            (set (reg:DI 1305)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1624 -1
     (nil))
(insn 2597 2596 2598 466 (parallel [
            (set (reg:DI 1306 [ D.13406 ])
                (minus:DI (reg/v:DI 169 [ densize ])
                    (reg:DI 798 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1624 -1
     (nil))
(insn 2598 2597 2599 466 (parallel [
            (set (reg:DI 1307)
                (ashift:DI (reg:DI 1306 [ D.13406 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1624 -1
     (nil))
(insn 2599 2598 2600 466 (parallel [
            (set (reg:DI 1308 [ D.13421 ])
                (plus:DI (reg:DI 1305)
                    (reg:DI 1307)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1624 -1
     (nil))
(insn 2600 2599 2601 466 (parallel [
            (set (reg:DI 1309)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1624 -1
     (nil))
(insn 2601 2600 2602 466 (set (reg:DI 1 dx)
        (reg:DI 798 [ D.13406 ])) strtod_l.c:1624 -1
     (nil))
(insn 2602 2601 2603 466 (set (reg:DI 4 si)
        (reg:DI 1308 [ D.13421 ])) strtod_l.c:1624 -1
     (nil))
(insn 2603 2602 2604 466 (set (reg:DI 5 di)
        (reg:DI 1309)) strtod_l.c:1624 -1
     (nil))
(call_insn 2604 2603 2605 466 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_cmp") [flags 0x41]  <function_decl 0x2ab61e386288 __mpn_cmp>) [0 __mpn_cmp S1 A8])
            (const_int 0 [0]))) strtod_l.c:1624 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_cmp") [flags 0x41]  <function_decl 0x2ab61e386288 __mpn_cmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 2605 2604 2606 466 (set (reg:SI 683 [ D.13409 ])
        (reg:SI 0 ax)) strtod_l.c:1624 -1
     (nil))
(insn 2606 2605 2607 466 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 683 [ D.13409 ])
            (const_int 0 [0]))) strtod_l.c:1624 -1
     (nil))
(jump_insn 2607 2606 2608 466 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2612)
            (pc))) strtod_l.c:1624 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 2612)
(note 2608 2607 2609 467 [bb 467] NOTE_INSN_BASIC_BLOCK)
(insn 2609 2608 2610 467 (set (reg:DI 685 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(jump_insn 2610 2609 2611 467 (set (pc)
        (label_ref 2618)) -1
     (nil)
 -> 2618)
(barrier 2611 2610 2612)
(code_label 2612 2611 2613 468 344 "" [1 uses])
(note 2613 2612 2614 468 [bb 468] NOTE_INSN_BASIC_BLOCK)
(insn 2614 2613 2615 468 (set (reg:DI 684 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) strtod_l.c:1625 -1
     (nil))
(insn 2615 2614 2616 468 (parallel [
            (set (reg:DI 685 [ D.13406 ])
                (plus:DI (reg:DI 684 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1625 -1
     (nil))
(insn 2616 2615 2617 468 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])
        (reg:DI 685 [ D.13406 ])) strtod_l.c:1625 -1
     (nil))
(insn 2617 2616 2618 468 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 684 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
        (const_int 0 [0])) strtod_l.c:1625 -1
     (nil))
(code_label 2618 2617 2619 469 345 "" [1 uses])
(note 2619 2618 2620 469 [bb 469] NOTE_INSN_BASIC_BLOCK)
(insn 2620 2619 2621 469 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 169 [ densize ])
            (reg:DI 685 [ D.13406 ]))) strtod_l.c:1627 -1
     (nil))
(jump_insn 2621 2620 2622 469 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2714)
            (pc))) strtod_l.c:1627 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2714)
(note 2622 2621 2623 470 [bb 470] NOTE_INSN_BASIC_BLOCK)
(insn 2623 2622 2624 470 (parallel [
            (set (reg/v:DI 686 [ empty ])
                (minus:DI (reg/v:DI 169 [ densize ])
                    (reg:DI 685 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1629 -1
     (nil))
(insn 2624 2623 2625 470 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1632 -1
     (nil))
(jump_insn 2625 2624 2626 470 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2631)
            (pc))) strtod_l.c:1632 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 2631)
(note 2626 2625 2627 471 [bb 471] NOTE_INSN_BASIC_BLOCK)
(insn 2627 2626 2628 471 (parallel [
            (set (reg:DI 1310 [ D.13406 ])
                (ashift:DI (reg/v:DI 686 [ empty ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1633 -1
     (nil))
(insn 2628 2627 215 471 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                    (reg:DI 1310 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1633 -1
     (nil))
(insn 215 2628 2629 471 (set (reg/v:SI 181 [ used ])
        (const_int 0 [0])) strtod_l.c:1617 -1
     (nil))
(jump_insn 2629 215 2630 471 (set (pc)
        (label_ref 2672)) -1
     (nil)
 -> 2672)
(barrier 2630 2629 2631)
(code_label 2631 2630 2632 472 347 "" [1 uses])
(note 2632 2631 2633 472 [bb 472] NOTE_INSN_BASIC_BLOCK)
(insn 2633 2632 2634 472 (parallel [
            (set (reg:DI 1311 [ D.13406 ])
                (ashift:DI (reg/v:DI 686 [ empty ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1636 -1
     (nil))
(insn 2634 2633 2635 472 (parallel [
            (set (reg:DI 1312 [ D.13406 ])
                (plus:DI (reg:DI 1311 [ D.13406 ])
                    (reg:DI 628 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1636 -1
     (nil))
(insn 2635 2634 2636 472 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1312 [ D.13406 ])
            (const_int 53 [0x35]))) strtod_l.c:1636 -1
     (nil))
(jump_insn 2636 2635 2637 472 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2652)
            (pc))) strtod_l.c:1636 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2652)
(note 2637 2636 2638 473 [bb 473] NOTE_INSN_BASIC_BLOCK)
(insn 2638 2637 2639 473 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 686 [ empty ])
            (const_int 1 [0x1]))) strtod_l.c:1643 -1
     (nil))
(jump_insn 2639 2638 2640 473 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2647)
            (pc))) strtod_l.c:1643 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2647)
(note 2640 2639 2641 474 [bb 474] NOTE_INSN_BASIC_BLOCK)
(insn 2641 2640 2642 474 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1643 -1
     (nil))
(insn 2642 2641 2643 474 (set (reg:SI 1 dx)
        (const_int 1643 [0x66b])) strtod_l.c:1643 -1
     (nil))
(insn 2643 2642 2644 474 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1643 -1
     (nil))
(insn 2644 2643 2645 474 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x2ab61e885e10 *.LC37>)) strtod_l.c:1643 -1
     (nil))
(call_insn 2645 2644 2646 474 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1643 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2646 2645 2647)
(code_label 2647 2646 2648 475 350 "" [1 uses])
(note 2648 2647 2649 475 [bb 475] NOTE_INSN_BASIC_BLOCK)
(insn 2649 2648 214 475 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
        (const_int 0 [0])) strtod_l.c:1644 -1
     (nil))
(insn 214 2649 2650 475 (set (reg/v:SI 181 [ used ])
        (const_int 0 [0])) strtod_l.c:1617 -1
     (nil))
(jump_insn 2650 214 2651 475 (set (pc)
        (label_ref 2667)) -1
     (nil)
 -> 2667)
(barrier 2651 2650 2652)
(code_label 2652 2651 2653 476 349 "" [1 uses])
(note 2653 2652 2654 476 [bb 476] NOTE_INSN_BASIC_BLOCK)
(insn 2654 2653 2655 476 (set (reg:SI 1313)
        (const_int 53 [0x35])) strtod_l.c:1655 -1
     (nil))
(insn 2655 2654 2656 476 (parallel [
            (set (reg/v:SI 181 [ used ])
                (minus:SI (reg:SI 1313)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1655 -1
     (nil))
(insn 2656 2655 2657 476 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 181 [ used ])
            (const_int 0 [0]))) strtod_l.c:1668 -1
     (nil))
(jump_insn 2657 2656 2658 476 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2667)
            (pc))) strtod_l.c:1668 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2667)
(note 2658 2657 2659 477 [bb 477] NOTE_INSN_BASIC_BLOCK)
(insn 2659 2658 2660 477 (parallel [
            (set (reg:DI 1314)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1669 -1
     (nil))
(insn 2660 2659 2661 477 (parallel [
            (set (reg:DI 1315)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1669 -1
     (nil))
(insn 2661 2660 2662 477 (set (reg:SI 2 cx)
        (reg/v:SI 181 [ used ])) strtod_l.c:1669 -1
     (nil))
(insn 2662 2661 2663 477 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:1669 -1
     (nil))
(insn 2663 2662 2664 477 (set (reg:DI 4 si)
        (reg:DI 1314)) strtod_l.c:1669 -1
     (nil))
(insn 2664 2663 2665 477 (set (reg:DI 5 di)
        (reg:DI 1315)) strtod_l.c:1669 -1
     (nil))
(call_insn 2665 2664 2666 477 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1669 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2666 2665 2667 477 (set (reg:DI 685 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -976 [0xfffffffffffffc30])) [3 numsize+0 S8 A128])) -1
     (nil))
(code_label 2667 2666 2668 478 351 "" [2 uses])
(note 2668 2667 2669 478 [bb 478] NOTE_INSN_BASIC_BLOCK)
(insn 2669 2668 2670 478 (parallel [
            (set (reg:SI 1316 [ D.13416 ])
                (ashift:SI (subreg:SI (reg/v:DI 686 [ empty ]) 0)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1671 -1
     (nil))
(insn 2670 2669 2671 478 (parallel [
            (set (reg:SI 697 [ D.13416 ])
                (plus:SI (reg:SI 1316 [ D.13416 ])
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1671 -1
     (nil))
(insn 2671 2670 2672 478 (set (reg/v:SI 170 [ bits ])
        (reg:SI 697 [ D.13416 ])) strtod_l.c:1671 -1
     (nil))
(code_label 2672 2671 2673 479 348 "" [1 uses])
(note 2673 2672 2674 479 [bb 479] NOTE_INSN_BASIC_BLOCK)
(insn 2674 2673 2675 479 (set (reg/v:SI 699 [ i ])
        (subreg:SI (reg:DI 685 [ D.13406 ]) 0)) strtod_l.c:1673 -1
     (nil))
(insn 2675 2674 2676 479 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 699 [ i ])
            (const_int 0 [0]))) strtod_l.c:1673 -1
     (nil))
(jump_insn 2676 2675 2701 479 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2685)
            (pc))) strtod_l.c:1673 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2685)
(code_label 2701 2676 2677 480 355 "" [1 uses])
(note 2677 2701 2678 480 [bb 480] NOTE_INSN_BASIC_BLOCK)
(insn 2678 2677 2679 480 (parallel [
            (set (reg:DI 171 [ ivtmp.258 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2679 2678 2680 480 (parallel [
            (set (reg:DI 1317)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2680 2679 2681 480 (parallel [
            (set (reg:DI 1318 [ D.13408 ])
                (plus:DI (reg/v:DI 686 [ empty ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2681 2680 2682 480 (parallel [
            (set (reg:DI 1319 [ D.13408 ])
                (ashift:DI (reg:DI 1318 [ D.13408 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2682 2681 2683 480 (parallel [
            (set (reg:DI 221 [ D.13404 ])
                (plus:DI (reg:DI 1317)
                    (reg:DI 1319 [ D.13408 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 2683 2682 2684 480 (set (pc)
        (label_ref 2705)) -1
     (nil)
 -> 2705)
(barrier 2684 2683 2685)
(code_label 2685 2684 2686 481 352 "" [1 uses])
(note 2686 2685 2687 481 [bb 481] NOTE_INSN_BASIC_BLOCK)
(insn 2687 2686 2688 481 (parallel [
            (set (reg:DI 1320)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2688 2687 2689 481 (set (reg:DI 1321 [ D.13408 ])
        (sign_extend:DI (reg/v:SI 699 [ i ]))) -1
     (nil))
(insn 2689 2688 2690 481 (parallel [
            (set (reg:DI 1322 [ D.13408 ])
                (plus:DI (reg/v:DI 686 [ empty ])
                    (reg:DI 1321 [ D.13408 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2690 2689 2691 481 (parallel [
            (set (reg:DI 1323 [ D.13408 ])
                (ashift:DI (reg:DI 1322 [ D.13408 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2691 2690 2698 481 (parallel [
            (set (reg:DI 701 [ ivtmp.265 ])
                (plus:DI (reg:DI 1320)
                    (reg:DI 1323 [ D.13408 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 2698 2691 2692 482 354 "" [1 uses])
(note 2692 2698 2693 482 [bb 482] NOTE_INSN_BASIC_BLOCK)
(insn 2693 2692 2694 482 (parallel [
            (set (reg/v:SI 699 [ i ])
                (plus:SI (reg/v:SI 699 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1674 -1
     (nil))
(insn 2694 2693 2695 482 (set (reg:DI 1324)
        (sign_extend:DI (reg/v:SI 699 [ i ]))) strtod_l.c:1674 -1
     (nil))
(insn 2695 2694 2696 482 (set (reg:DI 700 [ D.13400 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1324)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1674 -1
     (nil))
(insn 2696 2695 2697 482 (set (mem:DI (reg:DI 701 [ ivtmp.265 ]) [3 MEM[base: _1404, offset: 0B]+0 S8 A64])
        (reg:DI 700 [ D.13400 ])) strtod_l.c:1674 -1
     (nil))
(insn 2697 2696 2699 482 (parallel [
            (set (reg:DI 701 [ ivtmp.265 ])
                (plus:DI (reg:DI 701 [ ivtmp.265 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2699 2697 2700 482 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 699 [ i ])
            (const_int 0 [0]))) strtod_l.c:1673 -1
     (nil))
(jump_insn 2700 2699 2704 482 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2698)
            (pc))) strtod_l.c:1673 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2698)
(note 2704 2700 2702 483 [bb 483] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2702 2704 2703 483 (set (pc)
        (label_ref 2701)) -1
     (nil)
 -> 2701)
(barrier 2703 2702 2705)
(code_label 2705 2703 2706 484 353 "" [2 uses])
(note 2706 2705 2707 484 [bb 484] NOTE_INSN_BASIC_BLOCK)
(insn 2707 2706 2708 484 (set (mem:DI (reg:DI 171 [ ivtmp.258 ]) [3 MEM[base: _1420, offset: 0B]+0 S8 A64])
        (const_int 0 [0])) strtod_l.c:1675 -1
     (nil))
(insn 2708 2707 2709 484 (parallel [
            (set (reg:DI 171 [ ivtmp.258 ])
                (plus:DI (reg:DI 171 [ ivtmp.258 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2709 2708 2710 484 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 221 [ D.13404 ])
            (reg:DI 171 [ ivtmp.258 ]))) strtod_l.c:1675 -1
     (nil))
(jump_insn 2710 2709 2713 484 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2705)
            (pc))) strtod_l.c:1675 -1
     (int_list:REG_BR_PROB 9830 (nil))
 -> 2705)
(note 2713 2710 2711 485 [bb 485] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2711 2713 2712 485 (set (pc)
        (label_ref 2752)) -1
     (nil)
 -> 2752)
(barrier 2712 2711 2714)
(code_label 2714 2712 2715 486 346 "" [1 uses])
(note 2715 2714 2716 486 [bb 486] NOTE_INSN_BASIC_BLOCK)
(insn 2716 2715 2717 486 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ densize ])
            (reg:DI 685 [ D.13406 ]))) strtod_l.c:1680 -1
     (nil))
(jump_insn 2717 2716 2718 486 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2725)
            (pc))) strtod_l.c:1680 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2725)
(note 2718 2717 2719 487 [bb 487] NOTE_INSN_BASIC_BLOCK)
(insn 2719 2718 2720 487 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1680 -1
     (nil))
(insn 2720 2719 2721 487 (set (reg:SI 1 dx)
        (const_int 1680 [0x690])) strtod_l.c:1680 -1
     (nil))
(insn 2721 2720 2722 487 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1680 -1
     (nil))
(insn 2722 2721 2723 487 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x2ab61e885ea0 *.LC38>)) strtod_l.c:1680 -1
     (nil))
(call_insn 2723 2722 2724 487 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1680 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2724 2723 2725)
(code_label 2725 2724 2726 488 357 "" [1 uses])
(note 2726 2725 2727 488 [bb 488] NOTE_INSN_BASIC_BLOCK)
(insn 2727 2726 2728 488 (set (reg/v:SI 702 [ i ])
        (subreg:SI (reg:DI 685 [ D.13406 ]) 0)) strtod_l.c:1681 -1
     (nil))
(insn 2728 2727 2729 488 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 702 [ i ])
            (const_int 0 [0]))) strtod_l.c:1681 -1
     (nil))
(jump_insn 2729 2728 2748 488 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2736)
            (pc))) strtod_l.c:1681 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2736)
(code_label 2748 2729 2730 489 361 "" [1 uses])
(note 2730 2748 2731 489 [bb 489] NOTE_INSN_BASIC_BLOCK)
(insn 2731 2730 2732 489 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])
        (const_int 0 [0])) strtod_l.c:1683 -1
     (nil))
(insn 2732 2731 2733 489 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64])
        (const_int 0 [0])) strtod_l.c:1686 -1
     (nil))
(insn 2733 2732 216 489 (set (reg/v:DI 219 [ n0 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1687 -1
     (nil))
(insn 216 2733 2734 489 (set (reg/v:SI 181 [ used ])
        (const_int 0 [0])) strtod_l.c:1617 -1
     (nil))
(jump_insn 2734 216 2735 489 (set (pc)
        (label_ref 2762)) strtod_l.c:1687 -1
     (nil)
 -> 2762)
(barrier 2735 2734 2736)
(code_label 2736 2735 2737 490 358 "" [1 uses])
(note 2737 2736 2745 490 [bb 490] NOTE_INSN_BASIC_BLOCK)
(code_label 2745 2737 2738 491 360 "" [1 uses])
(note 2738 2745 2739 491 [bb 491] NOTE_INSN_BASIC_BLOCK)
(insn 2739 2738 2740 491 (parallel [
            (set (reg/v:SI 703 [ i ])
                (plus:SI (reg/v:SI 702 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1682 -1
     (nil))
(insn 2740 2739 2741 491 (set (reg:DI 1325)
        (sign_extend:DI (reg/v:SI 703 [ i ]))) strtod_l.c:1682 -1
     (nil))
(insn 2741 2740 2742 491 (set (reg:DI 704 [ D.13400 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1325)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1682 -1
     (nil))
(insn 2742 2741 2743 491 (set (reg:DI 1326)
        (sign_extend:DI (reg/v:SI 702 [ i ]))) strtod_l.c:1682 -1
     (nil))
(insn 2743 2742 2744 491 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1326)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
        (reg:DI 704 [ D.13400 ])) strtod_l.c:1682 -1
     (nil))
(insn 2744 2743 2746 491 (set (reg/v:SI 702 [ i ])
        (reg/v:SI 703 [ i ])) -1
     (nil))
(insn 2746 2744 2747 491 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 703 [ i ])
            (const_int 0 [0]))) strtod_l.c:1681 -1
     (nil))
(jump_insn 2747 2746 2751 491 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2745)
            (pc))) strtod_l.c:1681 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2745)
(note 2751 2747 2749 492 [bb 492] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2749 2751 2750 492 (set (pc)
        (label_ref 2748)) -1
     (nil)
 -> 2748)
(barrier 2750 2749 2752)
(code_label 2752 2750 2753 493 356 "" [1 uses])
(note 2753 2752 2754 493 [bb 493] NOTE_INSN_BASIC_BLOCK)
(insn 2754 2753 2755 493 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -480 [0xfffffffffffffe20])) [3 den S8 A64])
        (const_int 0 [0])) strtod_l.c:1686 -1
     (nil))
(insn 2755 2754 2756 493 (set (reg/v:DI 219 [ n0 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1687 -1
     (nil))
(insn 2756 2755 2757 493 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 53 [0x35]))) strtod_l.c:1689 -1
     (nil))
(jump_insn 2757 2756 2758 493 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2762)
            (pc))) strtod_l.c:1689 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2762)
(note 2758 2757 2759 494 [bb 494] NOTE_INSN_BASIC_BLOCK)
(insn 2759 2758 219 494 (set (reg:DI 720 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(insn 219 2759 2760 494 (set (reg/v:DI 218 [ quot ])
        (const_int 0 [0])) strtod_l.c:1616 -1
     (nil))
(jump_insn 2760 219 2761 494 (set (pc)
        (label_ref 2938)) -1
     (nil)
 -> 2938)
(barrier 2761 2760 2762)
(code_label 2762 2761 2763 495 359 "" [2 uses])
(note 2763 2762 2764 495 [bb 495] NOTE_INSN_BASIC_BLOCK)
(insn 2764 2763 2765 495 (parallel [
            (set (reg:DI 799 [ D.13406 ])
                (plus:DI (reg/v:DI 169 [ densize ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 2765 2764 2766 495 (set (pc)
        (label_ref 2768)) -1
     (nil)
 -> 2768)
(barrier 2766 2765 2899)
(code_label 2899 2766 2767 496 376 "" [2 uses])
(note 2767 2899 2768 496 [bb 496] NOTE_INSN_BASIC_BLOCK)
(code_label 2768 2767 2769 497 363 "" [1 uses])
(note 2769 2768 2770 497 [bb 497] NOTE_INSN_BASIC_BLOCK)
(insn 2770 2769 2771 497 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 678 [ dX ])
            (reg/v:DI 219 [ n0 ]))) strtod_l.c:1691 -1
     (nil))
(jump_insn 2771 2770 2772 497 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3351)
            (pc))) strtod_l.c:1691 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3351)
(note 2772 2771 2773 498 [bb 498] NOTE_INSN_BASIC_BLOCK)
(insn 2773 2772 2774 498 (set (reg:DI 1329)
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 621 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1699 -1
     (nil))
(insn 2774 2773 2775 498 (parallel [
            (set (reg:DI 1327 [ quot ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 1329)
                        (reg/v:DI 219 [ n0 ])
                        (reg/v:DI 678 [ dX ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1699)
                        (asm_input:DI ("1") strtod_l.c:1699)
                        (asm_input:DI ("rm") strtod_l.c:1699)
                    ]
                     [] strtod_l.c:1699))
            (set (reg:DI 1328 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 1329)
                        (reg/v:DI 219 [ n0 ])
                        (reg/v:DI 678 [ dX ])
                    ]
                     [
                        (asm_input:DI ("0") strtod_l.c:1699)
                        (asm_input:DI ("1") strtod_l.c:1699)
                        (asm_input:DI ("rm") strtod_l.c:1699)
                    ]
                     [] strtod_l.c:1699))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1699 -1
     (nil))
(insn 2775 2774 2776 498 (set (reg/v:DI 218 [ quot ])
        (reg:DI 1327 [ quot ])) strtod_l.c:1699 -1
     (nil))
(insn 2776 2775 2777 498 (set (reg/v:DI 220 [ r ])
        (reg:DI 1328 [ r ])) strtod_l.c:1699 -1
     (nil))
(insn 2777 2776 2778 498 (parallel [
            (set (reg:DI 1330 [ n0 ])
                (asm_operands:DI ("mul{q} %3") ("=a") 0 [
                        (reg/v:DI 680 [ d1 ])
                        (reg/v:DI 218 [ quot ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1700)
                        (asm_input:DI ("rm") strtod_l.c:1700)
                    ]
                     [] strtod_l.c:1700))
            (set (reg:DI 1331 [ n1 ])
                (asm_operands:DI ("mul{q} %3") ("=d") 1 [
                        (reg/v:DI 680 [ d1 ])
                        (reg/v:DI 218 [ quot ])
                    ]
                     [
                        (asm_input:DI ("%0") strtod_l.c:1700)
                        (asm_input:DI ("rm") strtod_l.c:1700)
                    ]
                     [] strtod_l.c:1700))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) strtod_l.c:1700 -1
     (nil))
(insn 2778 2777 2779 498 (set (reg/v:DI 216 [ n0 ])
        (reg:DI 1330 [ n0 ])) strtod_l.c:1700 -1
     (nil))
(insn 2779 2778 2780 498 (set (reg/v:DI 217 [ n1 ])
        (reg:DI 1331 [ n1 ])) strtod_l.c:1700 -1
     (nil))
(jump_insn 2780 2779 2781 498 (set (pc)
        (label_ref 2793)) strtod_l.c:1702 -1
     (nil)
 -> 2793)
(barrier 2781 2780 2795)
(code_label 2795 2781 2782 499 366 "" [2 uses])
(note 2782 2795 2783 499 [bb 499] NOTE_INSN_BASIC_BLOCK)
(insn 2783 2782 2784 499 (parallel [
            (set (reg/v:DI 218 [ quot ])
                (plus:DI (reg/v:DI 218 [ quot ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1704 -1
     (nil))
(insn 2784 2783 2785 499 (parallel [
            (set (reg/v:DI 220 [ r ])
                (plus:DI (reg/v:DI 220 [ r ])
                    (reg/v:DI 678 [ dX ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1705 -1
     (nil))
(insn 2785 2784 2786 499 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 678 [ dX ])
            (reg/v:DI 220 [ r ]))) strtod_l.c:1706 -1
     (nil))
(jump_insn 2786 2785 2787 499 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2804)
            (pc))) strtod_l.c:1706 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2804)
(note 2787 2786 2788 500 [bb 500] NOTE_INSN_BASIC_BLOCK)
(insn 2788 2787 2789 500 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 216 [ n0 ])
            (reg/v:DI 680 [ d1 ]))) strtod_l.c:1708 -1
     (nil))
(insn 2789 2788 2790 500 (set (reg:QI 1333)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strtod_l.c:1708 -1
     (nil))
(insn 2790 2789 2791 500 (set (reg:DI 1332 [ D.13402 ])
        (zero_extend:DI (reg:QI 1333))) strtod_l.c:1708 -1
     (nil))
(insn 2791 2790 2792 500 (parallel [
            (set (reg/v:DI 217 [ n1 ])
                (minus:DI (reg/v:DI 217 [ n1 ])
                    (reg:DI 1332 [ D.13402 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1708 -1
     (nil))
(insn 2792 2791 2793 500 (parallel [
            (set (reg/v:DI 216 [ n0 ])
                (minus:DI (reg/v:DI 216 [ n0 ])
                    (reg/v:DI 680 [ d1 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1709 -1
     (nil))
(code_label 2793 2792 2794 501 365 "" [1 uses])
(note 2794 2793 2796 501 [bb 501] NOTE_INSN_BASIC_BLOCK)
(insn 2796 2794 2797 501 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 217 [ n1 ])
            (reg/v:DI 220 [ r ]))) strtod_l.c:1702 -1
     (nil))
(jump_insn 2797 2796 2798 501 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2795)
            (pc))) strtod_l.c:1702 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2795)
(note 2798 2797 2799 502 [bb 502] NOTE_INSN_BASIC_BLOCK)
(insn 2799 2798 2800 502 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 217 [ n1 ])
            (reg/v:DI 220 [ r ]))) strtod_l.c:1702 -1
     (nil))
(jump_insn 2800 2799 2801 502 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2804)
            (pc))) strtod_l.c:1702 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2804)
(note 2801 2800 2802 503 [bb 503] NOTE_INSN_BASIC_BLOCK)
(insn 2802 2801 2803 503 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 216 [ n0 ])
            (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 679 [ D.13406 ])
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64]))) strtod_l.c:1702 -1
     (nil))
(jump_insn 2803 2802 3347 503 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2795)
            (pc))) strtod_l.c:1702 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 2795)
(note 3347 2803 3348 504 [bb 504] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3348 3347 3349 504 (set (pc)
        (label_ref 2804)) -1
     (nil)
 -> 2804)
(barrier 3349 3348 3351)
(code_label 3351 3349 3350 505 444 "" [1 uses])
(note 3350 3351 217 505 [bb 505] NOTE_INSN_BASIC_BLOCK)
(insn 217 3350 2804 505 (set (reg/v:DI 218 [ quot ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:1694 -1
     (nil))
(code_label 2804 217 2805 506 364 "" [3 uses])
(note 2805 2804 2806 506 [bb 506] NOTE_INSN_BASIC_BLOCK)
(insn 2806 2805 2807 506 (parallel [
            (set (reg:DI 1334)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1717 -1
     (nil))
(insn 2807 2806 2808 506 (parallel [
            (set (reg:DI 1335)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1717 -1
     (nil))
(insn 2808 2807 2809 506 (set (reg:DI 2 cx)
        (reg/v:DI 218 [ quot ])) strtod_l.c:1717 -1
     (nil))
(insn 2809 2808 2810 506 (set (reg:DI 1 dx)
        (reg:DI 799 [ D.13406 ])) strtod_l.c:1717 -1
     (nil))
(insn 2810 2809 2811 506 (set (reg:DI 4 si)
        (reg:DI 1334)) strtod_l.c:1717 -1
     (nil))
(insn 2811 2810 2812 506 (set (reg:DI 5 di)
        (reg:DI 1335)) strtod_l.c:1717 -1
     (nil))
(call_insn 2812 2811 2813 506 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_submul_1") [flags 0x41]  <function_decl 0x2ab61e38ea20 __mpn_submul_1>) [0 __mpn_submul_1 S1 A8])
            (const_int 0 [0]))) strtod_l.c:1717 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_submul_1") [flags 0x41]  <function_decl 0x2ab61e38ea20 __mpn_submul_1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2813 2812 2814 506 (set (reg/v:DI 709 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1717 -1
     (nil))
(insn 2814 2813 2815 506 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 709 [ cy ])
            (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64]))) strtod_l.c:1719 -1
     (nil))
(jump_insn 2815 2814 2816 506 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2838)
            (pc))) strtod_l.c:1719 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 2838)
(note 2816 2815 2817 507 [bb 507] NOTE_INSN_BASIC_BLOCK)
(insn 2817 2816 2818 507 (parallel [
            (set (reg:DI 1336)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -480 [0xfffffffffffffe20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1721 -1
     (nil))
(insn 2818 2817 2819 507 (parallel [
            (set (reg:DI 1337)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1721 -1
     (nil))
(insn 2819 2818 2820 507 (parallel [
            (set (reg:DI 1338)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -960 [0xfffffffffffffc40])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1721 -1
     (nil))
(insn 2820 2819 2821 507 (set (reg:DI 2 cx)
        (reg/v:DI 169 [ densize ])) strtod_l.c:1721 -1
     (nil))
(insn 2821 2820 2822 507 (set (reg:DI 1 dx)
        (reg:DI 1336)) strtod_l.c:1721 -1
     (nil))
(insn 2822 2821 2823 507 (set (reg:DI 4 si)
        (reg:DI 1337)) strtod_l.c:1721 -1
     (nil))
(insn 2823 2822 2824 507 (set (reg:DI 5 di)
        (reg:DI 1338)) strtod_l.c:1721 -1
     (nil))
(call_insn 2824 2823 2825 507 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_add_n") [flags 0x41]  <function_decl 0x2ab61e386000 __mpn_add_n>) [0 __mpn_add_n S1 A8])
            (const_int 0 [0]))) strtod_l.c:1721 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_add_n") [flags 0x41]  <function_decl 0x2ab61e386000 __mpn_add_n>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2825 2824 2826 507 (set (reg/v:DI 711 [ cy ])
        (reg:DI 0 ax)) strtod_l.c:1721 -1
     (nil))
(insn 2826 2825 2827 507 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 711 [ cy ])
            (const_int 0 [0]))) strtod_l.c:1722 -1
     (nil))
(jump_insn 2827 2826 2828 507 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2835)
            (pc))) strtod_l.c:1722 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 2835)
(note 2828 2827 2829 508 [bb 508] NOTE_INSN_BASIC_BLOCK)
(insn 2829 2828 2830 508 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.11317") [flags 0x2]  <var_decl 0x2ab61e430bd0 __PRETTY_FUNCTION__>)) strtod_l.c:1722 -1
     (nil))
(insn 2830 2829 2831 508 (set (reg:SI 1 dx)
        (const_int 1722 [0x6ba])) strtod_l.c:1722 -1
     (nil))
(insn 2831 2830 2832 508 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ab61e6ab750 *.LC6>)) strtod_l.c:1722 -1
     (nil))
(insn 2832 2831 2833 508 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x2ab61e8a71b0 *.LC39>)) strtod_l.c:1722 -1
     (nil))
(call_insn 2833 2832 2834 508 (call (mem:QI (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) strtod_l.c:1722 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___assert_fail") [flags 0x43]  <function_decl 0x2ab61e39fca8 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 2834 2833 2835)
(code_label 2835 2834 2836 509 368 "" [1 uses])
(note 2836 2835 2837 509 [bb 509] NOTE_INSN_BASIC_BLOCK)
(insn 2837 2836 2838 509 (parallel [
            (set (reg/v:DI 218 [ quot ])
                (plus:DI (reg/v:DI 218 [ quot ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1723 -1
     (nil))
(code_label 2838 2837 2839 510 367 "" [1 uses])
(note 2839 2838 2840 510 [bb 510] NOTE_INSN_BASIC_BLOCK)
(insn 2840 2839 2841 510 (set (reg/v:DI 219 [ n0 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 621 [ D.13406 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1725 -1
     (nil))
(insn 2841 2840 2842 510 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 169 [ densize ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
        (reg/v:DI 219 [ n0 ])) strtod_l.c:1725 -1
     (nil))
(insn 2842 2841 2843 510 (parallel [
            (set (reg/v:SI 714 [ i ])
                (plus:SI (subreg:SI (reg/v:DI 169 [ densize ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1726 -1
     (nil))
(insn 2843 2842 2844 510 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 714 [ i ])
            (const_int 0 [0]))) strtod_l.c:1726 -1
     (nil))
(jump_insn 2844 2843 2864 510 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2852)
            (pc))) strtod_l.c:1726 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2852)
(code_label 2864 2844 2845 511 373 "" [1 uses])
(note 2845 2864 2846 511 [bb 511] NOTE_INSN_BASIC_BLOCK)
(insn 2846 2845 2847 511 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -960 [0xfffffffffffffc40])) [3 num+0 S8 A128])
        (const_int 0 [0])) strtod_l.c:1728 -1
     (nil))
(insn 2847 2846 2848 511 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 170 [ bits ])
            (const_int 0 [0]))) strtod_l.c:1730 -1
     (nil))
(jump_insn 2848 2847 2851 511 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2868)
            (pc))) strtod_l.c:1730 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2868)
(note 2851 2848 2849 512 [bb 512] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2849 2851 2850 512 (set (pc)
        (label_ref 2905)) -1
     (nil)
 -> 2905)
(barrier 2850 2849 2852)
(code_label 2852 2850 2853 513 369 "" [1 uses])
(note 2853 2852 2861 513 [bb 513] NOTE_INSN_BASIC_BLOCK)
(code_label 2861 2853 2854 514 372 "" [1 uses])
(note 2854 2861 2855 514 [bb 514] NOTE_INSN_BASIC_BLOCK)
(insn 2855 2854 2856 514 (parallel [
            (set (reg/v:SI 715 [ i ])
                (plus:SI (reg/v:SI 714 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1727 -1
     (nil))
(insn 2856 2855 2857 514 (set (reg:DI 1339)
        (sign_extend:DI (reg/v:SI 715 [ i ]))) strtod_l.c:1727 -1
     (nil))
(insn 2857 2856 2858 514 (set (reg:DI 716 [ D.13400 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1339)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])) strtod_l.c:1727 -1
     (nil))
(insn 2858 2857 2859 514 (set (reg:DI 1340)
        (sign_extend:DI (reg/v:SI 714 [ i ]))) strtod_l.c:1727 -1
     (nil))
(insn 2859 2858 2860 514 (set (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1340)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
        (reg:DI 716 [ D.13400 ])) strtod_l.c:1727 -1
     (nil))
(insn 2860 2859 2862 514 (set (reg/v:SI 714 [ i ])
        (reg/v:SI 715 [ i ])) -1
     (nil))
(insn 2862 2860 2863 514 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 715 [ i ])
            (const_int 0 [0]))) strtod_l.c:1726 -1
     (nil))
(jump_insn 2863 2862 2867 514 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2861)
            (pc))) strtod_l.c:1726 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 2861)
(note 2867 2863 2865 515 [bb 515] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2865 2867 2866 515 (set (pc)
        (label_ref 2864)) -1
     (nil)
 -> 2864)
(barrier 2866 2865 2868)
(code_label 2868 2866 2869 516 370 "" [1 uses])
(note 2869 2868 2870 516 [bb 516] NOTE_INSN_BASIC_BLOCK)
(insn 2870 2869 2871 516 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 218 [ quot ])
            (const_int 0 [0]))) strtod_l.c:1730 -1
     (nil))
(jump_insn 2871 2870 2872 516 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3096)
            (pc))) strtod_l.c:1730 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3096)
(note 2872 2871 2873 517 [bb 517] NOTE_INSN_BASIC_BLOCK)
(insn 2873 2872 2874 517 (parallel [
            (set (reg:DI 1341)
                (minus:DI (const_int 63 [0x3f])
                    (clz:DI (reg/v:DI 218 [ quot ]))))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2874 2873 2875 517 (parallel [
            (set (reg:DI 1341)
                (xor:DI (reg:DI 1341)
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (expr_list:REG_EQUAL (clz:DI (reg/v:DI 218 [ quot ]))
        (nil)))
(insn 2875 2874 2876 517 (set (reg/v:SI 717 [ cnt ])
        (subreg:SI (reg:DI 1341) 0)) strtod_l.c:1730 -1
     (nil))
(insn 2876 2875 2877 517 (set (reg:DI 1342 [ D.13406 ])
        (sign_extend:DI (reg/v:SI 717 [ cnt ]))) strtod_l.c:1730 -1
     (nil))
(insn 2877 2876 2878 517 (set (reg:DI 1343)
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1730 -1
     (nil))
(insn 2878 2877 2879 517 (parallel [
            (set (reg:DI 720 [ D.13406 ])
                (minus:DI (reg:DI 1343)
                    (reg:DI 1342 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (expr_list:REG_EQUAL (minus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
            (reg:DI 1342 [ D.13406 ]))
        (nil)))
(insn 2879 2878 2880 517 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
        (reg:DI 720 [ D.13406 ])) strtod_l.c:1730 -1
     (nil))
(insn 2880 2879 2881 517 (set (reg:SI 1345)
        (const_int 64 [0x40])) strtod_l.c:1730 -1
     (nil))
(insn 2881 2880 2882 517 (parallel [
            (set (reg:SI 1344 [ D.13409 ])
                (minus:SI (reg:SI 1345)
                    (reg/v:SI 717 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2882 2881 2883 517 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1344 [ D.13409 ])
            (const_int 53 [0x35]))) strtod_l.c:1730 -1
     (nil))
(jump_insn 2883 2882 2884 517 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2892)
            (pc))) strtod_l.c:1730 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 2892)
(note 2884 2883 2885 518 [bb 518] NOTE_INSN_BASIC_BLOCK)
(insn 2885 2884 2886 518 (parallel [
            (set (reg/v:SI 181 [ used ])
                (plus:SI (reg/v:SI 717 [ cnt ])
                    (const_int 53 [0x35])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2886 2885 2887 518 (set (reg:SI 1347)
        (const_int 64 [0x40])) strtod_l.c:1730 -1
     (nil))
(insn 2887 2886 2888 518 (parallel [
            (set (reg:SI 1346 [ D.13409 ])
                (minus:SI (reg:SI 1347)
                    (reg/v:SI 181 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2888 2887 2889 518 (parallel [
            (set (reg:DI 1348)
                (lshiftrt:DI (reg/v:DI 218 [ quot ])
                    (subreg:QI (reg:SI 1346 [ D.13409 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2889 2888 2890 518 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg:DI 1348)) strtod_l.c:1730 -1
     (nil))
(jump_insn 2890 2889 2891 518 (set (pc)
        (label_ref 2938)) strtod_l.c:1730 -1
     (nil)
 -> 2938)
(barrier 2891 2890 2892)
(code_label 2892 2891 2893 519 375 "" [1 uses])
(note 2893 2892 2894 519 [bb 519] NOTE_INSN_BASIC_BLOCK)
(insn 2894 2893 2895 519 (parallel [
            (set (reg:SI 800 [ D.13409 ])
                (neg:SI (reg/v:SI 717 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2895 2894 2896 519 (set (reg:SI 1349)
        (const_int 64 [0x40])) -1
     (nil))
(insn 2896 2895 218 519 (parallel [
            (set (reg:SI 801 [ D.13409 ])
                (minus:SI (reg:SI 1349)
                    (reg/v:SI 717 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 218 2896 3099 519 (set (reg/v:SI 170 [ bits ])
        (reg:SI 801 [ D.13409 ])) strtod_l.c:1730 -1
     (nil))
(code_label 3099 218 2897 520 394 "" [1 uses])
(note 2897 3099 2898 520 [bb 520] NOTE_INSN_BASIC_BLOCK)
(insn 2898 2897 2900 520 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 retval+0 S8 A128])
        (reg/v:DI 218 [ quot ])) strtod_l.c:1730 -1
     (nil))
(insn 2900 2898 2901 520 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int 53 [0x35]))) strtod_l.c:1689 -1
     (nil))
(jump_insn 2901 2900 2904 520 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2899)
            (pc))) strtod_l.c:1689 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2899)
(note 2904 2901 2902 521 [bb 521] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2902 2904 2903 521 (set (pc)
        (label_ref 2935)) -1
     (nil)
 -> 2935)
(barrier 2903 2902 2905)
(code_label 2905 2903 2906 522 371 "" [1 uses])
(note 2906 2905 2907 522 [bb 522] NOTE_INSN_BASIC_BLOCK)
(insn 2907 2906 2908 522 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 170 [ bits ])
            (const_int -10 [0xfffffffffffffff6]))) strtod_l.c:1730 -1
     (nil))
(jump_insn 2908 2907 2909 522 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2914)
            (pc))) strtod_l.c:1730 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2914)
(note 2909 2908 2910 523 [bb 523] NOTE_INSN_BASIC_BLOCK)
(insn 2910 2909 2911 523 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
        (reg/v:DI 218 [ quot ])) strtod_l.c:1730 -1
     (nil))
(insn 2911 2910 2912 523 (parallel [
            (set (reg/v:SI 170 [ bits ])
                (plus:SI (reg/v:SI 170 [ bits ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 2912 2911 2913 523 (set (pc)
        (label_ref 2899)) -1
     (nil)
 -> 2899)
(barrier 2913 2912 2914)
(code_label 2914 2913 2915 524 378 "" [1 uses])
(note 2915 2914 2916 524 [bb 524] NOTE_INSN_BASIC_BLOCK)
(insn 2916 2915 2917 524 (set (reg:SI 1350)
        (const_int 53 [0x35])) strtod_l.c:1730 -1
     (nil))
(insn 2917 2916 2918 524 (parallel [
            (set (reg/v:SI 181 [ used ])
                (minus:SI (reg:SI 1350)
                    (reg/v:SI 170 [ bits ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2918 2917 2919 524 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 181 [ used ])
            (const_int 0 [0]))) strtod_l.c:1730 -1
     (nil))
(jump_insn 2919 2918 2920 524 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2935)
            (pc))) strtod_l.c:1730 612 {*jcc_1}
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2935)
(note 2920 2919 2921 525 [bb 525] NOTE_INSN_BASIC_BLOCK)
(insn 2921 2920 2922 525 (set (reg/v:SI 725 [ __count ])
        (reg/v:SI 181 [ used ])) strtod_l.c:1730 -1
     (nil))
(insn 2922 2921 2923 525 (parallel [
            (set (reg:DI 1351)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2923 2922 2924 525 (parallel [
            (set (reg:DI 1352)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2924 2923 2925 525 (set (reg:SI 2 cx)
        (reg/v:SI 725 [ __count ])) strtod_l.c:1730 -1
     (nil))
(insn 2925 2924 2926 525 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) strtod_l.c:1730 -1
     (nil))
(insn 2926 2925 2927 525 (set (reg:DI 4 si)
        (reg:DI 1351)) strtod_l.c:1730 -1
     (nil))
(insn 2927 2926 2928 525 (set (reg:DI 5 di)
        (reg:DI 1352)) strtod_l.c:1730 -1
     (nil))
(call_insn 2928 2927 2929 525 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>) [0 __mpn_lshift S1 A8])
            (const_int 0 [0]))) strtod_l.c:1730 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_lshift") [flags 0x41]  <function_decl 0x2ab61e386af8 __mpn_lshift>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2929 2928 2930 525 (set (reg:SI 1354)
        (const_int 64 [0x40])) strtod_l.c:1730 -1
     (nil))
(insn 2930 2929 2931 525 (parallel [
            (set (reg:SI 1353 [ D.13411 ])
                (minus:SI (reg:SI 1354)
                    (reg/v:SI 725 [ __count ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2931 2930 2932 525 (parallel [
            (set (reg:DI 1355 [ D.13400 ])
                (lshiftrt:DI (reg/v:DI 218 [ quot ])
                    (subreg:QI (reg:SI 1353 [ D.13411 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(insn 2932 2931 2935 525 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                (ior:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -992 [0xfffffffffffffc20])) [3 MEM[(mp_limb_t *)&retval]+0 S8 A128])
                    (reg:DI 1355 [ D.13400 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(code_label 2935 2932 2936 526 377 "" [2 uses])
(note 2936 2935 2937 526 [bb 526] NOTE_INSN_BASIC_BLOCK)
(insn 2937 2936 2938 526 (set (reg:DI 720 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) -1
     (nil))
(code_label 2938 2937 2939 527 362 "" [2 uses])
(note 2939 2938 2940 527 [bb 527] NOTE_INSN_BASIC_BLOCK)
(insn 2940 2939 2941 527 (set (reg/v:SI 731 [ i ])
        (subreg:SI (reg/v:DI 169 [ densize ]) 0)) strtod_l.c:1733 -1
     (nil))
(insn 2941 2940 2942 527 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 731 [ i ])
            (const_int 0 [0]))) strtod_l.c:1733 -1
     (nil))
(jump_insn 2942 2941 2943 527 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2957)
            (pc))) strtod_l.c:1733 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2957)
(note 2943 2942 2944 528 [bb 528] NOTE_INSN_BASIC_BLOCK)
(insn 2944 2943 2945 528 (set (reg:DI 1356)
        (sign_extend:DI (reg/v:SI 731 [ i ]))) strtod_l.c:1733 -1
     (nil))
(insn 2945 2944 2946 528 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1356)
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
            (const_int 0 [0]))) strtod_l.c:1733 -1
     (nil))
(jump_insn 2946 2945 2947 528 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2957)
            (pc))) strtod_l.c:1733 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2957)
(note 2947 2946 2953 529 [bb 529] NOTE_INSN_BASIC_BLOCK)
(code_label 2953 2947 2948 530 381 "" [1 uses])
(note 2948 2953 2949 530 [bb 530] NOTE_INSN_BASIC_BLOCK)
(insn 2949 2948 2950 530 (parallel [
            (set (reg/v:SI 731 [ i ])
                (plus:SI (reg/v:SI 731 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1733 -1
     (nil))
(insn 2950 2949 2951 530 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 731 [ i ])
            (const_int -1 [0xffffffffffffffff]))) strtod_l.c:1733 -1
     (nil))
(jump_insn 2951 2950 2952 530 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2957)
            (pc))) strtod_l.c:1733 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2957)
(note 2952 2951 2954 531 [bb 531] NOTE_INSN_BASIC_BLOCK)
(insn 2954 2952 2955 531 (set (reg:DI 1357)
        (sign_extend:DI (reg/v:SI 731 [ i ]))) strtod_l.c:1733 -1
     (nil))
(insn 2955 2954 2956 531 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1357)
                            (const_int 8 [0x8]))
                        (reg/f:DI 82 virtual-stack-vars))
                    (const_int -960 [0xfffffffffffffc40])) [3 num S8 A64])
            (const_int 0 [0]))) strtod_l.c:1733 -1
     (nil))
(jump_insn 2956 2955 2957 531 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2953)
            (pc))) strtod_l.c:1733 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 2953)
(code_label 2957 2956 2958 532 380 "" [3 uses])
(note 2958 2957 2959 532 [bb 532] NOTE_INSN_BASIC_BLOCK)
(insn 2959 2958 2960 532 (set (reg:SI 1359)
        (not:SI (reg/v:SI 731 [ i ]))) strtod_l.c:1735 -1
     (nil))
(insn 2960 2959 2961 532 (parallel [
            (set (reg:SI 1360)
                (lshiftrt:SI (reg:SI 1359)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2961 2960 2962 532 (parallel [
            (set (reg:QI 1361 [ D.13402 ])
                (and:QI (subreg:QI (reg/v:SI 204 [ more_bits ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2962 2961 2963 532 (parallel [
            (set (reg:QI 1362 [ D.13402 ])
                (ior:QI (reg:QI 1361 [ D.13402 ])
                    (subreg:QI (reg:SI 1360) 0)))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2963 2962 2964 532 (set (reg:SI 1363 [ D.13409 ])
        (zero_extend:SI (reg:QI 1362 [ D.13402 ]))) strtod_l.c:1735 -1
     (nil))
(insn 2964 2963 2965 532 (set (reg:SI 1365)
        (const_int 63 [0x3f])) strtod_l.c:1735 -1
     (nil))
(insn 2965 2964 2966 532 (parallel [
            (set (reg:SI 1364 [ D.13409 ])
                (minus:SI (reg:SI 1365)
                    (reg/v:SI 181 [ used ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2966 2965 2967 532 (set (reg:DI 1366 [ D.13406 ])
        (sign_extend:DI (reg:SI 1364 [ D.13409 ]))) strtod_l.c:1735 -1
     (nil))
(insn 2967 2966 2968 532 (parallel [
            (set (reg:DI 1367 [ D.13406 ])
                (plus:DI (reg:DI 720 [ D.13406 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2968 2967 2969 532 (parallel [
            (set (reg:DI 1368)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -992 [0xfffffffffffffc20])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1735 -1
     (nil))
(insn 2969 2968 2970 532 (set (reg:SI 38 r9)
        (reg:SI 1363 [ D.13409 ])) strtod_l.c:1735 -1
     (nil))
(insn 2970 2969 2971 532 (set (reg:DI 37 r8)
        (reg:DI 1366 [ D.13406 ])) strtod_l.c:1735 -1
     (nil))
(insn 2971 2970 2972 532 (set (reg:DI 2 cx)
        (reg/v:DI 218 [ quot ])) strtod_l.c:1735 -1
     (nil))
(insn 2972 2971 2973 532 (set (reg:SI 1 dx)
        (reg/v:SI 168 [ negative ])) strtod_l.c:1735 -1
     (nil))
(insn 2973 2972 2974 532 (set (reg:DI 4 si)
        (reg:DI 1367 [ D.13406 ])) strtod_l.c:1735 -1
     (nil))
(insn 2974 2973 2975 532 (set (reg:DI 5 di)
        (reg:DI 1368)) strtod_l.c:1735 -1
     (nil))
(call_insn 2975 2974 2976 532 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>) [0 round_and_return S1 A8])
            (const_int 0 [0]))) strtod_l.c:1735 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("round_and_return") [flags 0x3]  <function_decl 0x2ab61e40e948 round_and_return>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(insn 2976 2975 3223 532 (set (reg:DF 222 [ D.13405 ])
        (reg:DF 21 xmm0)) strtod_l.c:1735 -1
     (nil))
(jump_insn 3223 2976 3224 532 (set (pc)
        (label_ref 2977)) strtod_l.c:1735 -1
     (nil)
 -> 2977)
(barrier 3224 3223 3226)
(code_label 3226 3224 3225 533 411 "" [1 uses])
(note 3225 3226 220 533 [bb 533] NOTE_INSN_BASIC_BLOCK)
(insn 220 3225 3231 533 (set (reg:DF 222 [ D.13405 ])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [8  S8 A64])) strtod_l.c:627 -1
     (expr_list:REG_EQUAL (const_double:DF +Inf [+Inf])
        (nil)))
(jump_insn 3231 220 3232 533 (set (pc)
        (label_ref 2977)) -1
     (nil)
 -> 2977)
(barrier 3232 3231 3234)
(code_label 3234 3232 3233 534 413 "" [1 uses])
(note 3233 3234 227 534 [bb 534] NOTE_INSN_BASIC_BLOCK)
(insn 227 3233 3300 534 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 189 [ retval ])) strtod_l.c:654 -1
     (nil))
(jump_insn 3300 227 3301 534 (set (pc)
        (label_ref 2977)) -1
     (nil)
 -> 2977)
(barrier 3301 3300 3303)
(code_label 3303 3301 3302 535 432 "" [1 uses])
(note 3302 3303 232 535 [bb 535] NOTE_INSN_BASIC_BLOCK)
(insn 232 3302 2977 535 (set (reg:DF 222 [ D.13405 ])
        (reg/v:DF 288 [ result ])) strtod_l.c:967 -1
     (nil))
(code_label 2977 232 2978 536 129 "" [19 uses])
(note 2978 2977 2979 536 [bb 536] NOTE_INSN_BASIC_BLOCK)
(insn 2979 2978 2980 536 (set (reg:DF 829 [ <retval> ])
        (reg:DF 222 [ D.13405 ])) -1
     (nil))
(jump_insn 2980 2979 2981 536 (set (pc)
        (label_ref 3201)) -1
     (nil)
 -> 3201)
(barrier 2981 2980 3222)
(code_label 3222 2981 3221 537 410 "" [1 uses])
(note 3221 3222 233 537 [bb 537] NOTE_INSN_BASIC_BLOCK)
(insn 233 3221 2982 537 (set (reg:DI 287 [ ivtmp.378 ])
        (const_int 0 [0])) strtod_l.c:605 -1
     (nil))
(code_label 2982 233 2983 538 119 "" [1 uses])
(note 2983 2982 2984 538 [bb 538] NOTE_INSN_BASIC_BLOCK)
(insn 2984 2983 2985 538 (set (reg:QI 1371)
        (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                (reg:DI 287 [ ivtmp.378 ])) [0 *_280+0 S1 A8])) strtod_l.c:608 -1
     (nil))
(insn 2985 2984 2986 538 (parallel [
            (set (reg:QI 1370 [ D.13412 ])
                (plus:QI (reg:QI 1371)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:608 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (plus:DI (reg/v/f:DI 174 [ startp ])
                    (reg:DI 287 [ ivtmp.378 ])) [0 *_280+0 S1 A8])
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 2986 2985 2987 538 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 1370 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:608 -1
     (nil))
(jump_insn 2987 2986 2990 538 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) strtod_l.c:608 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 428)
(note 2990 2987 2988 539 [bb 539] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2988 2990 2989 539 (set (pc)
        (label_ref 332)) -1
     (nil)
 -> 332)
(barrier 2989 2988 3241)
(code_label 3241 2989 3240 540 416 "" [1 uses])
(note 3240 3241 234 540 [bb 540] NOTE_INSN_BASIC_BLOCK)
(insn 234 3240 2991 540 (set (reg:DI 822 [ D.13408 ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:691 -1
     (nil))
(code_label 2991 234 2992 541 140 "" [1 uses])
(note 2992 2991 2993 541 [bb 541] NOTE_INSN_BASIC_BLOCK)
(insn 2993 2992 2994 541 (parallel [
            (set (reg/v/f:DI 176 [ startp ])
                (plus:DI (reg/v/f:DI 290 [ startp ])
                    (reg:DI 822 [ D.13408 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:696 -1
     (nil))
(jump_insn 2994 2993 2995 541 (set (pc)
        (label_ref 495)) strtod_l.c:696 -1
     (nil)
 -> 495)
(barrier 2995 2994 2996)
(code_label 2996 2995 2997 542 149 "" [2 uses])
(note 2997 2996 2999 542 [bb 542] NOTE_INSN_BASIC_BLOCK)
(insn 2999 2997 3000 542 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:725 -1
     (nil))
(jump_insn 3000 2999 3001 542 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2998)
            (pc))) strtod_l.c:725 -1
     (int_list:REG_BR_PROB 8160 (nil))
 -> 2998)
(note 3001 3000 3002 543 [bb 543] NOTE_INSN_BASIC_BLOCK)
(insn 3002 3001 3003 543 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 295 [ lowc ])
            (const_int 112 [0x70]))) strtod_l.c:725 -1
     (nil))
(insn 3003 3002 3004 543 (set (reg:QI 1373 [ D.13402 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:725 -1
     (nil))
(insn 3004 3003 3005 543 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1373 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:725 -1
     (nil))
(jump_insn 3005 3004 3381 543 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2998)
            (pc))) strtod_l.c:725 -1
     (int_list:REG_BR_PROB 833 (nil))
 -> 2998)
(note 3381 3005 3006 544 [bb 544] NOTE_INSN_BASIC_BLOCK)
(insn 3006 3381 3007 544 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 290 [ startp ])
            (reg/v/f:DI 174 [ startp ]))) strtod_l.c:725 -1
     (nil))
(insn 3007 3006 3008 544 (set (reg:QI 1375 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:725 -1
     (nil))
(insn 3008 3007 3009 544 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1375 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:725 -1
     (nil))
(jump_insn 3009 3008 3012 544 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2998)
            (pc))) strtod_l.c:725 -1
     (int_list:REG_BR_PROB 909 (nil))
 -> 2998)
(note 3012 3009 130 545 [bb 545] NOTE_INSN_BASIC_BLOCK)
(insn 130 3012 131 545 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 131 130 3010 545 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3010 131 3011 545 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3011 3010 3013)
(code_label 3013 3011 3014 546 148 "" [2 uses])
(note 3014 3013 3016 546 [bb 546] NOTE_INSN_BASIC_BLOCK)
(insn 3016 3014 3017 546 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:720 -1
     (nil))
(insn 3017 3016 3018 546 (set (reg:QI 1377 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:720 -1
     (nil))
(insn 3018 3017 3019 546 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1377 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:720 -1
     (nil))
(jump_insn 3019 3018 3382 546 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3390)
            (pc))) strtod_l.c:720 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 3390)
(note 3382 3019 3020 547 [bb 547] NOTE_INSN_BASIC_BLOCK)
(insn 3020 3382 3021 547 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 290 [ startp ])
            (reg/v/f:DI 174 [ startp ]))) strtod_l.c:720 -1
     (nil))
(insn 3021 3020 3022 547 (set (reg:QI 1379 [ D.13402 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strtod_l.c:720 -1
     (nil))
(insn 3022 3021 3023 547 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1379 [ D.13402 ])
            (const_int 0 [0]))) strtod_l.c:720 -1
     (nil))
(jump_insn 3023 3022 3383 547 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3015)
            (pc))) strtod_l.c:720 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 3015)
(note 3383 3023 3390 548 [bb 548] NOTE_INSN_BASIC_BLOCK)
(code_label 3390 3383 3027 549 453 "" [1 uses])
(note 3027 3390 126 549 [bb 549] NOTE_INSN_BASIC_BLOCK)
(insn 126 3027 127 549 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 290 [ startp ])) -1
     (nil))
(insn 127 126 3025 549 (set (reg/v:DI 183 [ dig_no ])
        (const_int 0 [0])) -1
     (nil))
(jump_insn 3025 127 3026 549 (set (pc)
        (label_ref 513)) -1
     (nil)
 -> 513)
(barrier 3026 3025 3268)
(code_label 3268 3026 3267 550 423 "" [1 uses])
(note 3267 3268 235 550 [bb 550] NOTE_INSN_BASIC_BLOCK)
(insn 235 3267 3028 550 (set (reg:DI 820 [ D.13408 ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:765 -1
     (nil))
(code_label 3028 235 3029 551 160 "" [1 uses])
(note 3029 3028 3030 551 [bb 551] NOTE_INSN_BASIC_BLOCK)
(insn 3030 3029 3031 551 (parallel [
            (set (reg/v/f:DI 178 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (reg:DI 820 [ D.13408 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:770 -1
     (nil))
(jump_insn 3031 3030 3032 551 (set (pc)
        (label_ref 656)) strtod_l.c:770 -1
     (nil)
 -> 656)
(barrier 3032 3031 3033)
(code_label 3033 3032 3034 552 175 "" [2 uses])
(note 3034 3033 3035 552 [bb 552] NOTE_INSN_BASIC_BLOCK)
(insn 3035 3034 3036 552 (parallel [
            (set (reg/v/f:DI 346 [ startp ])
                (plus:DI (reg/v/f:DI 177 [ startp ])
                    (reg/v:DI 245 [ decimal_len ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:835 -1
     (nil))
(insn 3036 3035 142 552 (set (reg/v:QI 186 [ c ])
        (mem:QI (reg/v/f:DI 346 [ startp ]) [0 *startp_444+0 S1 A8])) strtod_l.c:836 -1
     (nil))
(insn 142 3036 3038 552 (set (reg/v/f:DI 177 [ startp ])
        (reg/v/f:DI 346 [ startp ])) strtod_l.c:837 -1
     (nil))
(jump_insn 3038 142 3039 552 (set (pc)
        (label_ref 3037)) strtod_l.c:837 -1
     (nil)
 -> 3037)
(barrier 3039 3038 3287)
(code_label 3287 3039 3286 553 428 "" [1 uses])
(note 3286 3287 236 553 [bb 553] NOTE_INSN_BASIC_BLOCK)
(insn 236 3286 237 553 (set (reg:DI 816 [ D.13406 ])
        (const_int 102 [0x66])) -1
     (nil))
(insn 237 236 3288 553 (set (reg/v:DI 692 [ exp_limit ])
        (const_int 1027 [0x403])) strtod_l.c:893 -1
     (nil))
(jump_insn 3288 237 3289 553 (set (pc)
        (label_ref:DI 1033)) 654 {jump}
     (nil)
 -> 1033)
(barrier 3289 3288 3291)
(code_label 3291 3289 3290 554 429 "" [1 uses])
(note 3290 3291 238 554 [bb 554] NOTE_INSN_BASIC_BLOCK)
(insn 238 3290 239 554 (set (reg:DI 816 [ D.13406 ])
        (const_int 30 [0x1e])) -1
     (nil))
(insn 239 238 3043 554 (set (reg/v:DI 692 [ exp_limit ])
        (const_int 309 [0x135])) strtod_l.c:925 -1
     (nil))
(jump_insn 3043 239 3044 554 (set (pc)
        (label_ref:DI 1033)) strtod_l.c:837 654 {jump}
     (nil)
 -> 1033)
(barrier 3044 3043 3045)
(code_label 3045 3044 3046 556 208 "" [1 uses])
(note 3046 3045 3047 556 [bb 556] NOTE_INSN_BASIC_BLOCK)
(insn 3047 3046 3048 556 (set (reg:SI 1380 [ D.13409 ])
        (sign_extend:SI (reg/v:QI 187 [ c ]))) -1
     (nil))
(insn 3048 3047 3049 556 (parallel [
            (set (reg:SI 1381 [ D.13409 ])
                (plus:SI (reg:SI 1380 [ D.13409 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 3049 3048 3050 556 (set (reg:DI 819 [ D.13406 ])
        (sign_extend:DI (reg:SI 1381 [ D.13409 ]))) -1
     (nil))
(code_label 3050 3049 3051 557 209 "" [1 uses])
(note 3051 3050 3052 557 [bb 557] NOTE_INSN_BASIC_BLOCK)
(insn 3052 3051 3053 557 (set (reg:DI 1382)
        (reg:DI 401 [ D.13406 ])) strtod_l.c:972 -1
     (nil))
(insn 3053 3052 3054 557 (parallel [
            (set (reg:DI 1383)
                (ashift:DI (reg:DI 1382)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:972 -1
     (nil))
(insn 3054 3053 3055 557 (parallel [
            (set (reg:DI 1384 [ D.13406 ])
                (plus:DI (reg:DI 1383)
                    (reg:DI 401 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:972 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 401 [ D.13406 ])
            (const_int 5 [0x5]))
        (nil)))
(insn 3055 3054 3056 557 (parallel [
            (set (reg:DI 1385)
                (ashift:DI (reg:DI 1384 [ D.13406 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:972 -1
     (nil))
(insn 3056 3055 3057 557 (set (reg:DI 1384 [ D.13406 ])
        (reg:DI 1385)) strtod_l.c:972 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 401 [ D.13406 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 3057 3056 3058 557 (parallel [
            (set (reg:DI 401 [ D.13406 ])
                (plus:DI (reg:DI 1384 [ D.13406 ])
                    (reg:DI 819 [ D.13406 ])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:972 -1
     (nil))
(insn 3058 3057 3059 557 (parallel [
            (set (reg/v/f:DI 179 [ startp ])
                (plus:DI (reg/v/f:DI 179 [ startp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:974 -1
     (nil))
(insn 3059 3058 3060 557 (set (reg/v:QI 187 [ c ])
        (mem:QI (reg/v/f:DI 179 [ startp ]) [0 MEM[base: startp_534, offset: 0B]+0 S1 A8])) strtod_l.c:974 -1
     (nil))
(insn 3060 3059 3062 557 (set (reg:QI 752 [ exponent_lsm.189 ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 3062 3060 3063 557 (parallel [
            (set (reg:QI 1386 [ D.13412 ])
                (plus:QI (reg/v:QI 187 [ c ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:976 -1
     (nil))
(insn 3063 3062 3064 557 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 1386 [ D.13412 ])
            (const_int 9 [0x9]))) strtod_l.c:976 -1
     (nil))
(jump_insn 3064 3063 3068 557 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 3061)
            (pc))) strtod_l.c:976 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 3061)
(note 3068 3064 3066 558 [bb 558] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3066 3068 3067 558 (set (pc)
        (label_ref 3065)) -1
     (nil)
 -> 3065)
(barrier 3067 3066 3069)
(code_label 3069 3067 3070 559 220 "" [3 uses])
(note 3070 3069 3072 559 [bb 559] NOTE_INSN_BASIC_BLOCK)
(insn 3072 3070 3073 559 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:1015 -1
     (nil))
(jump_insn 3073 3072 3076 559 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3071)
            (pc))) strtod_l.c:1015 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 3071)
(note 3076 3073 3074 560 [bb 560] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3074 3076 3075 560 (set (pc)
        (label_ref 1267)) strtod_l.c:1015 -1
     (nil)
 -> 1267)
(barrier 3075 3074 3077)
(code_label 3077 3075 3078 561 231 "" [2 uses])
(note 3078 3077 3079 561 [bb 561] NOTE_INSN_BASIC_BLOCK)
(insn 3079 3078 3080 561 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 786 [ base ])
            (const_int 16 [0x10]))) strtod_l.c:1042 -1
     (nil))
(jump_insn 3080 3079 3083 561 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3132)
            (pc))) strtod_l.c:1042 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3132)
(note 3083 3080 3081 562 [bb 562] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3081 3083 3082 562 (set (pc)
        (label_ref 3142)) -1
     (nil)
 -> 3142)
(barrier 3082 3081 3084)
(code_label 3084 3082 3085 563 316 "" [1 uses])
(note 3085 3084 3086 563 [bb 563] NOTE_INSN_BASIC_BLOCK)
(insn 3086 3085 3088 563 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1511 -1
     (nil))
(jump_insn 3088 3086 3089 563 (set (pc)
        (label_ref 3087)) strtod_l.c:1511 -1
     (nil)
 -> 3087)
(barrier 3089 3088 3090)
(code_label 3090 3089 3091 564 338 "" [1 uses])
(note 3091 3090 3092 564 [bb 564] NOTE_INSN_BASIC_BLOCK)
(insn 3092 3091 3094 564 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1605 -1
     (nil))
(jump_insn 3094 3092 3095 564 (set (pc)
        (label_ref 3093)) strtod_l.c:1605 -1
     (nil)
 -> 3093)
(barrier 3095 3094 3096)
(code_label 3096 3095 3097 565 374 "" [1 uses])
(note 3097 3096 3098 565 [bb 565] NOTE_INSN_BASIC_BLOCK)
(insn 3098 3097 3100 565 (parallel [
            (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                (plus:DI (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1730 -1
     (nil))
(jump_insn 3100 3098 3101 565 (set (pc)
        (label_ref 3099)) strtod_l.c:1730 -1
     (nil)
 -> 3099)
(barrier 3101 3100 3102)
(code_label 3102 3101 3103 566 133 "" [1 uses])
(note 3103 3102 3104 566 [bb 566] NOTE_INSN_BASIC_BLOCK)
(insn 3104 3103 3105 566 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 188 [ thousands ])
            (const_int 0 [0]))) strtod_l.c:681 -1
     (nil))
(jump_insn 3105 3104 3106 566 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3111)
            (pc))) strtod_l.c:681 -1
     (int_list:REG_BR_PROB 1131 (nil))
 -> 3111)
(note 3106 3105 3107 567 [bb 567] NOTE_INSN_BASIC_BLOCK)
(insn 3107 3106 104 567 (set (reg/f:DI 277 [ D.13414 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) -1
     (nil))
(insn 104 3107 3109 567 (set (reg/v:SI 786 [ base ])
        (const_int 10 [0xa])) strtod_l.c:487 -1
     (nil))
(jump_insn 3109 104 3110 567 (set (pc)
        (label_ref 3108)) -1
     (nil)
 -> 3108)
(barrier 3110 3109 3111)
(code_label 3111 3110 3112 568 395 "" [1 uses])
(note 3112 3111 3113 568 [bb 568] NOTE_INSN_BASIC_BLOCK)
(insn 3113 3112 118 568 (set (reg/f:DI 277 [ D.13414 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 833 [ loc ])
                (const_int 112 [0x70])) [2 loc_240(D)->__ctype_tolower+0 S8 A64])) -1
     (nil))
(insn 118 3113 119 568 (set (reg/v/f:DI 290 [ startp ])
        (reg/v/f:DI 174 [ startp ])) strtod_l.c:681 -1
     (nil))
(insn 119 118 3114 568 (set (reg/v:SI 786 [ base ])
        (const_int 10 [0xa])) strtod_l.c:487 -1
     (nil))
(jump_insn 3114 119 3115 568 (set (pc)
        (label_ref 501)) -1
     (nil)
 -> 501)
(barrier 3115 3114 3116)
(code_label 3116 3115 3117 569 134 "" [1 uses])
(note 3117 3116 3119 569 [bb 569] NOTE_INSN_BASIC_BLOCK)
(insn 3119 3117 3120 569 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 188 [ thousands ])
            (const_int 0 [0]))) strtod_l.c:681 -1
     (nil))
(jump_insn 3120 3119 3123 569 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3355)
            (pc))) strtod_l.c:681 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3355)
(note 3123 3120 105 570 [bb 570] NOTE_INSN_BASIC_BLOCK)
(insn 105 3123 3121 570 (set (reg/v:SI 786 [ base ])
        (const_int 10 [0xa])) strtod_l.c:487 -1
     (nil))
(jump_insn 3121 105 3122 570 (set (pc)
        (label_ref 3108)) strtod_l.c:681 -1
     (nil)
 -> 3108)
(barrier 3122 3121 3124)
(code_label 3124 3122 3125 571 169 "" [1 uses])
(note 3125 3124 3126 571 [bb 571] NOTE_INSN_BASIC_BLOCK)
(insn 3126 3125 3127 571 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 831 [ endptr ])
            (const_int 0 [0]))) strtod_l.c:1015 -1
     (nil))
(jump_insn 3127 3126 3131 571 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3360)
            (pc))) strtod_l.c:1015 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 3360)
(note 3131 3127 3129 572 [bb 572] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3129 3131 3130 572 (set (pc)
        (label_ref 3128)) strtod_l.c:1015 -1
     (nil)
 -> 3128)
(barrier 3130 3129 3132)
(code_label 3132 3130 3133 573 390 "" [1 uses])
(note 3133 3132 3135 573 [bb 573] NOTE_INSN_BASIC_BLOCK)
(insn 3135 3133 3136 573 (set (reg:DI 1387)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) strtod_l.c:1042 -1
     (nil))
(insn 3136 3135 3137 573 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 185 [ lead_zero ])
            (reg:DI 1387))) strtod_l.c:1042 -1
     (nil))
(jump_insn 3137 3136 3141 573 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 3134)
            (pc))) strtod_l.c:1042 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 3134)
(note 3141 3137 3139 574 [bb 574] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3139 3141 3140 574 (set (pc)
        (label_ref 3138)) strtod_l.c:1042 -1
     (nil)
 -> 3138)
(barrier 3140 3139 3142)
(code_label 3142 3140 3143 575 391 "" [1 uses])
(note 3143 3142 3144 575 [bb 575] NOTE_INSN_BASIC_BLOCK)
(insn 3144 3143 3145 575 (set (reg:DI 1388)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) strtod_l.c:1042 -1
     (nil))
(insn 3145 3144 3146 575 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 185 [ lead_zero ])
            (reg:DI 1388))) strtod_l.c:1042 -1
     (nil))
(jump_insn 3146 3145 3150 575 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 3134)
            (pc))) strtod_l.c:1042 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 3134)
(note 3150 3146 3148 576 [bb 576] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3148 3150 3149 576 (set (pc)
        (label_ref 3147)) strtod_l.c:1042 -1
     (nil)
 -> 3147)
(barrier 3149 3148 3151)
(code_label 3151 3149 3152 577 238 "" [1 uses])
(note 3152 3151 3153 577 [bb 577] NOTE_INSN_BASIC_BLOCK)
(insn 3153 3152 3155 577 (parallel [
            (set (reg:DI 229 [ D.13406 ])
                (ashift:DI (reg/v:DI 185 [ lead_zero ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1049 -1
     (nil))
(jump_insn 3155 3153 3156 577 (set (pc)
        (label_ref 3154)) -1
     (nil)
 -> 3154)
(barrier 3156 3155 3157)
(code_label 3157 3156 3158 578 239 "" [1 uses])
(note 3158 3157 3159 578 [bb 578] NOTE_INSN_BASIC_BLOCK)
(insn 3159 3158 3160 578 (set (reg:DI 229 [ D.13406 ])
        (reg/v:DI 185 [ lead_zero ])) strtod_l.c:1049 -1
     (nil))
(jump_insn 3160 3159 3161 578 (set (pc)
        (label_ref 3154)) strtod_l.c:1049 -1
     (nil)
 -> 3154)
(barrier 3161 3160 3162)
(code_label 3162 3161 3163 579 280 "" [1 uses])
(note 3163 3162 3164 579 [bb 579] NOTE_INSN_BASIC_BLOCK)
(insn 3164 3163 3165 579 (set (reg:DI 1389 [ least_bit ])
        (sign_extend:DI (reg:SI 544 [ D.13409 ]))) strtod_l.c:1240 -1
     (nil))
(insn 3165 3164 3167 579 (parallel [
            (set (reg:DI 547 [ D.13406 ])
                (plus:DI (reg:DI 1389 [ least_bit ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1240 -1
     (nil))
(insn 3167 3165 3168 579 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 534 [ D.13406 ])
            (reg/v:DI 543 [ least_idx ]))) strtod_l.c:1247 -1
     (nil))
(jump_insn 3168 3167 3172 579 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3166)
            (pc))) strtod_l.c:1247 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3166)
(note 3172 3168 3170 580 [bb 580] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3170 3172 3171 580 (set (pc)
        (label_ref 3169)) strtod_l.c:1247 -1
     (nil)
 -> 3169)
(barrier 3171 3170 3173)
(code_label 3173 3171 3174 581 332 "" [1 uses])
(note 3174 3173 3175 581 [bb 581] NOTE_INSN_BASIC_BLOCK)
(insn 3175 3174 206 581 (set (reg:DI 807 [ D.13406 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -968 [0xfffffffffffffc38])) [3 exponent+0 S8 A64])) strtod_l.c:1605 -1
     (nil))
(insn 206 3175 207 581 (set (reg:DI 806 [ D.13406 ])
        (const_int 10 [0xa])) strtod_l.c:1605 -1
     (nil))
(insn 207 206 208 581 (set (reg:DI 804 [ D.13400 ])
        (const_int 9007199254740991 [0x1fffffffffffff])) strtod_l.c:1605 -1
     (nil))
(insn 208 207 3177 581 (set (reg/v:DI 214 [ quot ])
        (const_int -1 [0xffffffffffffffff])) strtod_l.c:1574 -1
     (nil))
(jump_insn 3177 208 3178 581 (set (pc)
        (label_ref 3176)) strtod_l.c:1605 -1
     (nil)
 -> 3176)
(barrier 3178 3177 3179)
(code_label 3179 3178 3180 582 271 "" [1 uses])
(note 3180 3179 3181 582 [bb 582] NOTE_INSN_BASIC_BLOCK)
(insn 3181 3180 3182 582 (parallel [
            (set (reg/v:SI 196 [ expbit ])
                (ashift:SI (reg/v:SI 196 [ expbit ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1211 -1
     (nil))
(insn 3182 3181 3183 582 (parallel [
            (set (reg/v/f:DI 197 [ ttab ])
                (plus:DI (reg/v/f:DI 197 [ ttab ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) strtod_l.c:1212 -1
     (nil))
(jump_insn 3183 3182 3184 582 (set (pc)
        (label_ref 1744)) strtod_l.c:1212 -1
     (nil)
 -> 1744)
(barrier 3184 3183 3346)
(code_label 3346 3184 3345 584 443 "" [1 uses])
(note 3345 3346 240 584 [bb 584] NOTE_INSN_BASIC_BLOCK)
(insn 240 3345 3191 584 (set (reg/v:DI 663 [ n0 ])
        (const_int 0 [0])) strtod_l.c:1535 -1
     (nil))
(jump_insn 3191 240 3192 584 (set (pc)
        (label_ref 2420)) strtod_l.c:1212 -1
     (nil)
 -> 2420)
(barrier 3192 3191 3201)
(code_label 3201 3192 3204 588 113 "" [1 uses])
(note 3204 3201 3202 588 [bb 588] NOTE_INSN_BASIC_BLOCK)
(insn 3202 3204 3203 588 (set (reg/i:DF 21 xmm0)
        (reg:DF 829 [ <retval> ])) strtod_l.c:1743 -1
     (nil))
(insn 3203 3202 0 588 (use (reg/i:DF 21 xmm0)) strtod_l.c:1743 -1
     (nil))

;; Function __strtod_l (*__GI___strtod_l, funcdef_no=107, decl_uid=4036, cgraph_uid=108, symbol_order=116)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 89 [ nptr ])
        (reg:DI 5 di [ nptr ])) strtod_l.c:1755 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ endptr ])
        (reg:DI 4 si [ endptr ])) strtod_l.c:1755 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ loc ])
        (reg:DI 1 dx [ loc ])) strtod_l.c:1755 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ loc ])) strtod_l.c:1756 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) strtod_l.c:1756 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ endptr ])) strtod_l.c:1756 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ nptr ])) strtod_l.c:1756 -1
     (nil))
(call_insn/j 12 11 13 2 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("*__GI_____strtod_l_internal") [flags 0x3]  <function_decl 0x2ab61de18d80 ____strtod_l_internal>) [0 ____strtod_l_internal S1 A8])
            (const_int 0 [0]))) strtod_l.c:1756 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_____strtod_l_internal") [flags 0x3]  <function_decl 0x2ab61de18d80 ____strtod_l_internal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 13 12 0)
