
;; Function __mpn_mod_1 (__mpn_mod_1, funcdef_no=4, decl_uid=2465, cgraph_uid=4, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 12
Edge 3->5 redirected to 13
Edge 5->8 redirected to 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 60.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 32 NOTE_INSN_DELETED)
(note 32 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 32 25 2 (set (reg/v/f:DI 119 [ dividend_ptr ])
        (reg:DI 5 di [ dividend_ptr ])) mod_1.c:42 -1
     (nil))
(insn 25 24 26 2 (set (reg/v:DI 120 [ dividend_size ])
        (reg:DI 4 si [ dividend_size ])) mod_1.c:42 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:DI 121 [ divisor_limb ])
        (reg:DI 1 dx [ divisor_limb ])) mod_1.c:42 -1
     (nil))
(note 27 26 34 2 NOTE_INSN_FUNCTION_BEG)
(insn 34 27 35 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 120 [ dividend_size ])
            (const_int 0 [0]))) mod_1.c:48 -1
     (nil))
(jump_insn 35 34 36 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) mod_1.c:48 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 70)
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 4 (parallel [
            (set (reg/v:DI 110 [ i ])
                (plus:DI (reg/v:DI 120 [ dividend_size ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mod_1.c:174 -1
     (nil))
(insn 38 37 39 4 (set (reg/v:DI 116 [ r ])
        (mem:DI (plus:DI (mult:DI (reg/v:DI 110 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 119 [ dividend_ptr ])) [1 *_10+0 S8 A64])) mod_1.c:175 -1
     (nil))
(insn 39 38 40 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 116 [ r ])
            (reg/v:DI 121 [ divisor_limb ]))) mod_1.c:177 -1
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) mod_1.c:177 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 74)
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 71 5 (parallel [
            (set (reg/v:DI 110 [ i ])
                (plus:DI (reg/v:DI 120 [ dividend_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) mod_1.c:180 -1
     (nil))
(jump_insn 71 42 72 5 (set (pc)
        (label_ref 43)) -1
     (nil)
 -> 43)
(barrier 72 71 74)
(code_label 74 72 73 6 6 "" [1 uses])
(note 73 74 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 73 43 6 (set (reg/v:DI 116 [ r ])
        (const_int 0 [0])) mod_1.c:178 -1
     (nil))
(code_label 43 28 44 7 3 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 110 [ i ])
            (const_int 0 [0]))) mod_1.c:182 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) mod_1.c:182 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 78)
(note 47 46 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(code_label 54 47 48 9 4 "" [1 uses])
(note 48 54 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 9 (set (reg:DI 124)
        (mem:DI (plus:DI (mult:DI (reg/v:DI 110 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 119 [ dividend_ptr ])) [1 MEM[base: dividend_ptr_9(D), index: _25, step: 8, offset: 0B]+0 S8 A64])) mod_1.c:185 -1
     (nil))
(insn 50 49 51 9 (parallel [
            (set (reg:DI 122 [ dummy ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 124)
                        (reg/v:DI 116 [ r ])
                        (reg/v:DI 121 [ divisor_limb ])
                    ]
                     [
                        (asm_input:DI ("0") mod_1.c:185)
                        (asm_input:DI ("1") mod_1.c:185)
                        (asm_input:DI ("rm") mod_1.c:185)
                    ]
                     [] mod_1.c:185))
            (set (reg:DI 123 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 124)
                        (reg/v:DI 116 [ r ])
                        (reg/v:DI 121 [ divisor_limb ])
                    ]
                     [
                        (asm_input:DI ("0") mod_1.c:185)
                        (asm_input:DI ("1") mod_1.c:185)
                        (asm_input:DI ("rm") mod_1.c:185)
                    ]
                     [] mod_1.c:185))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) mod_1.c:185 -1
     (nil))
(insn 51 50 52 9 (set (reg/v:DI 115 [ dummy ])
        (reg:DI 122 [ dummy ])) mod_1.c:185 -1
     (nil))
(insn 52 51 53 9 (set (reg/v:DI 116 [ r ])
        (reg:DI 123 [ r ])) mod_1.c:185 -1
     (nil))
(insn 53 52 55 9 (parallel [
            (set (reg/v:DI 110 [ i ])
                (plus:DI (reg/v:DI 110 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mod_1.c:182 -1
     (nil))
(insn 55 53 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 110 [ i ])
            (const_int -1 [0xffffffffffffffff]))) mod_1.c:182 -1
     (nil))
(jump_insn 56 55 66 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) mod_1.c:182 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 54)
(note 66 56 30 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 30 66 67 10 (set (reg:DI 109 [ D.2790 ])
        (reg/v:DI 116 [ r ])) mod_1.c:185 -1
     (nil))
(jump_insn 67 30 68 10 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 68 67 70)
(code_label 70 68 69 11 5 "" [1 uses])
(note 69 70 29 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 29 69 75 11 (set (reg:DI 109 [ D.2790 ])
        (const_int 0 [0])) mod_1.c:49 -1
     (nil))
(jump_insn 75 29 76 11 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
(barrier 76 75 78)
(code_label 78 76 77 12 7 "" [1 uses])
(note 77 78 31 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 31 77 57 12 (set (reg:DI 109 [ D.2790 ])
        (reg/v:DI 116 [ r ])) mod_1.c:182 -1
     (nil))
(code_label 57 31 58 13 2 "" [2 uses])
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 63 13 (set (reg:DI 118 [ <retval> ])
        (reg:DI 109 [ D.2790 ])) -1
     (nil))
(insn 63 59 64 13 (set (reg/i:DI 0 ax)
        (reg:DI 118 [ <retval> ])) mod_1.c:189 -1
     (nil))
(insn 64 63 0 13 (use (reg/i:DI 0 ax)) mod_1.c:189 -1
     (nil))
