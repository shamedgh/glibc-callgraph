
;; Function __mpn_divmod_1 (__mpn_divmod_1, funcdef_no=4, decl_uid=2414, cgraph_uid=4, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 12
Edge 3->5 redirected to 13
Edge 5->8 redirected to 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 66.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 33 NOTE_INSN_DELETED)
(note 33 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 33 25 2 (set (reg/v/f:DI 124 [ quot_ptr ])
        (reg:DI 5 di [ quot_ptr ])) divmod_1.c:46 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 125 [ dividend_ptr ])
        (reg:DI 4 si [ dividend_ptr ])) divmod_1.c:46 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:DI 126 [ dividend_size ])
        (reg:DI 1 dx [ dividend_size ])) divmod_1.c:46 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:DI 127 [ divisor_limb ])
        (reg:DI 2 cx [ divisor_limb ])) divmod_1.c:46 -1
     (nil))
(note 28 27 35 2 NOTE_INSN_FUNCTION_BEG)
(insn 35 28 36 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 126 [ dividend_size ])
            (const_int 0 [0]))) divmod_1.c:52 -1
     (nil))
(jump_insn 36 35 37 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 76)
            (pc))) divmod_1.c:52 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 76)
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (parallel [
            (set (reg/v:DI 112 [ i ])
                (plus:DI (reg/v:DI 126 [ dividend_size ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divmod_1.c:181 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 114 [ D.2797 ])
                (ashift:DI (reg/v:DI 112 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) divmod_1.c:182 -1
     (nil))
(insn 40 39 41 4 (set (reg/v:DI 119 [ r ])
        (mem:DI (plus:DI (reg/v/f:DI 125 [ dividend_ptr ])
                (reg:DI 114 [ D.2797 ])) [1 *_12+0 S8 A64])) divmod_1.c:182 -1
     (nil))
(insn 41 40 42 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 119 [ r ])
            (reg/v:DI 127 [ divisor_limb ]))) divmod_1.c:184 -1
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 80)
            (pc))) divmod_1.c:184 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 80)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (mem:DI (plus:DI (reg/v/f:DI 124 [ quot_ptr ])
                (reg:DI 114 [ D.2797 ])) [1 *_18+0 S8 A64])
        (const_int 0 [0])) divmod_1.c:188 -1
     (nil))
(insn 45 44 77 5 (parallel [
            (set (reg/v:DI 112 [ i ])
                (plus:DI (reg/v:DI 126 [ dividend_size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) divmod_1.c:189 -1
     (nil))
(jump_insn 77 45 78 5 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
(barrier 78 77 80)
(code_label 80 78 79 6 6 "" [1 uses])
(note 79 80 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 79 46 6 (set (reg/v:DI 119 [ r ])
        (const_int 0 [0])) divmod_1.c:185 -1
     (nil))
(code_label 46 29 47 7 3 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 112 [ i ])
            (const_int 0 [0]))) divmod_1.c:192 -1
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 84)
            (pc))) divmod_1.c:192 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 84)
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (parallel [
            (set (reg:DI 128 [ D.2797 ])
                (ashift:DI (reg/v:DI 112 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 52 51 60 8 (parallel [
            (set (reg:DI 120 [ ivtmp.13 ])
                (plus:DI (reg/v/f:DI 124 [ quot_ptr ])
                    (reg:DI 128 [ D.2797 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 60 52 53 9 4 "" [1 uses])
(note 53 60 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:DI 131)
        (mem:DI (plus:DI (mult:DI (reg/v:DI 112 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 125 [ dividend_ptr ])) [1 MEM[base: dividend_ptr_11(D), index: _37, step: 8, offset: 0B]+0 S8 A64])) divmod_1.c:195 -1
     (nil))
(insn 55 54 56 9 (parallel [
            (set (reg:DI 129)
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 131)
                        (reg/v:DI 119 [ r ])
                        (reg/v:DI 127 [ divisor_limb ])
                    ]
                     [
                        (asm_input:DI ("0") divmod_1.c:195)
                        (asm_input:DI ("1") divmod_1.c:195)
                        (asm_input:DI ("rm") divmod_1.c:195)
                    ]
                     [] divmod_1.c:195))
            (set (reg:DI 130 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 131)
                        (reg/v:DI 119 [ r ])
                        (reg/v:DI 127 [ divisor_limb ])
                    ]
                     [
                        (asm_input:DI ("0") divmod_1.c:195)
                        (asm_input:DI ("1") divmod_1.c:195)
                        (asm_input:DI ("rm") divmod_1.c:195)
                    ]
                     [] divmod_1.c:195))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divmod_1.c:195 -1
     (nil))
(insn 56 55 57 9 (set (mem:DI (reg:DI 120 [ ivtmp.13 ]) [1 *_26+0 S8 A64])
        (reg:DI 129)) divmod_1.c:195 -1
     (nil))
(insn 57 56 58 9 (set (reg/v:DI 119 [ r ])
        (reg:DI 130 [ r ])) divmod_1.c:195 -1
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg/v:DI 112 [ i ])
                (plus:DI (reg/v:DI 112 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divmod_1.c:192 -1
     (nil))
(insn 59 58 61 9 (parallel [
            (set (reg:DI 120 [ ivtmp.13 ])
                (plus:DI (reg:DI 120 [ ivtmp.13 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 61 59 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 112 [ i ])
            (const_int -1 [0xffffffffffffffff]))) divmod_1.c:192 -1
     (nil))
(jump_insn 62 61 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) divmod_1.c:192 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 60)
(note 72 62 31 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 31 72 73 10 (set (reg:DI 111 [ D.2798 ])
        (reg/v:DI 119 [ r ])) divmod_1.c:195 -1
     (nil))
(jump_insn 73 31 74 10 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 74 73 76)
(code_label 76 74 75 11 5 "" [1 uses])
(note 75 76 30 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 30 75 81 11 (set (reg:DI 111 [ D.2798 ])
        (const_int 0 [0])) divmod_1.c:53 -1
     (nil))
(jump_insn 81 30 82 11 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 82 81 84)
(code_label 84 82 83 12 7 "" [1 uses])
(note 83 84 32 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 32 83 63 12 (set (reg:DI 111 [ D.2798 ])
        (reg/v:DI 119 [ r ])) divmod_1.c:192 -1
     (nil))
(code_label 63 32 64 13 2 "" [2 uses])
(note 64 63 65 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 69 13 (set (reg:DI 123 [ <retval> ])
        (reg:DI 111 [ D.2798 ])) -1
     (nil))
(insn 69 65 70 13 (set (reg/i:DI 0 ax)
        (reg:DI 123 [ <retval> ])) divmod_1.c:199 -1
     (nil))
(insn 70 69 0 13 (use (reg/i:DI 0 ax)) divmod_1.c:199 -1
     (nil))
