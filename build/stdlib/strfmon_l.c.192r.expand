
;; Function __vstrfmon_l (__vstrfmon_l, funcdef_no=57, decl_uid=7800, cgraph_uid=57, symbol_order=66)

Partition 0: size 240 align 16
	f
Partition 1: size 20 align 16
	info
Partition 2: size 16 align 16
	fpnum
Partition 3: size 8 align 8
	ptr
Partition 4: size 4 align 16
	int_symbol

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227

;; Generating RTL for gimple basic block 228

;; Generating RTL for gimple basic block 229

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233

;; Generating RTL for gimple basic block 234

;; Generating RTL for gimple basic block 235

;; Generating RTL for gimple basic block 236

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238
Edge 13->12 redirected to 285
Edge 20->28 redirected to 286
Edge 28->33 redirected to 288
Edge 30->33 redirected to 289
Edge 33->38 redirected to 291
Edge 35->38 redirected to 292
Edge 38->40 redirected to 293
Edge 45->47 redirected to 294
Edge 47->49 redirected to 295
Edge 62->64 redirected to 296
Edge 68->70 redirected to 297
Edge 70->72 redirected to 298
Edge 72->74 redirected to 299
Edge 74->76 redirected to 300
Edge 77->81 redirected to 301
Edge 78->81 redirected to 302
Edge 79->81 redirected to 303
Edge 82->86 redirected to 304
Edge 83->86 redirected to 305
Edge 84->86 redirected to 306
Edge 86->225 redirected to 307
Edge 87->90 redirected to 308
Edge 90->93 redirected to 309
Edge 153->155 redirected to 310
Edge 162->229 redirected to 311
Edge 226->44 redirected to 314
Edge 227->44 redirected to 315
Edge 231->44 redirected to 316
Edge 232->44 redirected to 317
Edge 233->47 redirected to 318
Edge 234->47 redirected to 319
Edge 235->46 redirected to 321
Edge 236->47 redirected to 322
Purged edges from bb 330
Purged edges from bb 332
Purged non-fallthru edges from bb 335
Purged non-fallthru edges from bb 337
Purged non-fallthru edges from bb 339
Purged non-fallthru edges from bb 341


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 201 from 299 to 300.
Redirecting jump 222 from 299 to 300.
Forwarding edge 18->19 to 31 failed.
Forwarding edge 22->23 to 31 failed.
Forwarding edge 32->33 to 39 failed.
Forwarding edge 35->36 to 39 failed.
Forwarding edge 46->47 to 50 failed.
Forwarding edge 54->55 to 58 failed.
Forwarding edge 62->63 to 68 failed.
Forwarding edge 64->65 to 316 failed.
Forwarding edge 66->67 to 318 failed.
Forwarding edge 74->75 to 77 failed.
Forwarding edge 82->83 to 85 failed.
Forwarding edge 99->100 to 102 failed.
Forwarding edge 102->103 to 305 failed.
Forwarding edge 105->106 to 306 failed.
Forwarding edge 108->109 to 111 failed.
Forwarding edge 111->112 to 114 failed.
Forwarding edge 117->118 to 120 failed.
Edge 122->124 redirected to 125
Forwarding edge 123->124 to 125 failed.
Deleted label in block 124.
Edge 125->127 redirected to 132
Forwarding edge 126->127 to 132 failed.
Deleted label in block 127.
Merging block 128 into block 127...
Merged blocks 127 and 128.
Merged 127 and 128 without moving.
Forwarding edge 126->127 to 132 failed.
Forwarding edge 126->127 to 132 failed.
Edge 134->136 redirected to 137
Forwarding edge 135->136 to 137 failed.
Deleted label in block 136.
Edge 137->139 redirected to 144
Forwarding edge 138->139 to 144 failed.
Deleted label in block 139.
Merging block 140 into block 139...
Merged blocks 139 and 140.
Merged 139 and 140 without moving.
Forwarding edge 138->139 to 144 failed.
Forwarding edge 138->139 to 144 failed.
Edge 168->167 redirected to 6
Edge 180->167 redirected to 6
Edge 182->167 redirected to 6
Edge 191->167 redirected to 6
Edge 193->167 redirected to 6
Edge 202->167 redirected to 6
Edge 204->167 redirected to 6
Edge 218->167 redirected to 6
Edge 220->167 redirected to 6
Edge 235->167 redirected to 6
Edge 237->167 redirected to 6
Forwarding edge 240->241 to 323 failed.
Edge 249->167 redirected to 6
Forwarding edge 249->250 to 253 failed.
Forwarding edge 249->250 to 253 failed.
Edge 251->167 redirected to 6
Edge 260->167 redirected to 6
Forwarding edge 260->261 to 264 failed.
Forwarding edge 260->261 to 264 failed.
Edge 262->167 redirected to 6
Forwarding edge 265->266 to 278 failed.
Edge 272->167 redirected to 6
Forwarding edge 272->273 to 276 failed.
Forwarding edge 272->273 to 276 failed.
Edge 274->167 redirected to 6
Edge 283->167 redirected to 6
Forwarding edge 286->287 to 297 failed.
Edge 289->167 redirected to 6
Forwarding edge 289->290 to 286 failed.
Forwarding edge 289->290 to 286 failed.
deleting block 299
Forwarding edge 306->307 to 311 failed.
Forwarding edge 308->309 to 313 failed.
Forwarding edge 316->317 to 331 failed.
Forwarding edge 318->319 to 333 failed.
Forwarding edge 320->321 to 211 failed.
Forwarding edge 325->326 to 255 failed.
Forwarding edge 327->328 to 335 failed.
Forwarding edge 329->330 to 337 failed.
Edge 339->167 redirected to 6
Forwarding edge 339->340 to 170 failed.
Forwarding edge 339->340 to 170 failed.
Forwarding edge 341->342 to 315 failed.


try_optimize_cfg iteration 2

Forwarding edge 18->19 to 31 failed.
Forwarding edge 22->23 to 31 failed.
Forwarding edge 32->33 to 39 failed.
Forwarding edge 35->36 to 39 failed.
Forwarding edge 46->47 to 50 failed.
Forwarding edge 54->55 to 58 failed.
Forwarding edge 62->63 to 68 failed.
Forwarding edge 64->65 to 316 failed.
Forwarding edge 66->67 to 318 failed.
Forwarding edge 74->75 to 77 failed.
Forwarding edge 82->83 to 85 failed.
Forwarding edge 99->100 to 102 failed.
Forwarding edge 102->103 to 305 failed.
Forwarding edge 105->106 to 306 failed.
Forwarding edge 108->109 to 111 failed.
Forwarding edge 111->112 to 114 failed.
Forwarding edge 117->118 to 120 failed.
Forwarding edge 123->124 to 125 failed.
Forwarding edge 126->127 to 132 failed.
Forwarding edge 135->136 to 137 failed.
Forwarding edge 138->139 to 144 failed.
deleting block 167
Forwarding edge 240->241 to 323 failed.
Forwarding edge 249->250 to 253 failed.
Forwarding edge 260->261 to 264 failed.
Forwarding edge 265->266 to 278 failed.
Forwarding edge 272->273 to 276 failed.
Forwarding edge 286->287 to 297 failed.
Forwarding edge 289->290 to 286 failed.
Forwarding edge 306->307 to 311 failed.
Forwarding edge 308->309 to 313 failed.
Forwarding edge 316->317 to 331 failed.
Forwarding edge 318->319 to 333 failed.
Forwarding edge 320->321 to 211 failed.
Forwarding edge 325->326 to 255 failed.
Forwarding edge 327->328 to 335 failed.
Forwarding edge 329->330 to 337 failed.
Forwarding edge 339->340 to 170 failed.
Forwarding edge 341->342 to 315 failed.


try_optimize_cfg iteration 3

Forwarding edge 18->19 to 31 failed.
Forwarding edge 22->23 to 31 failed.
Forwarding edge 32->33 to 39 failed.
Forwarding edge 35->36 to 39 failed.
Forwarding edge 46->47 to 50 failed.
Forwarding edge 54->55 to 58 failed.
Forwarding edge 62->63 to 68 failed.
Forwarding edge 64->65 to 316 failed.
Forwarding edge 66->67 to 318 failed.
Forwarding edge 74->75 to 77 failed.
Forwarding edge 82->83 to 85 failed.
Forwarding edge 99->100 to 102 failed.
Forwarding edge 102->103 to 305 failed.
Forwarding edge 105->106 to 306 failed.
Forwarding edge 108->109 to 111 failed.
Forwarding edge 111->112 to 114 failed.
Forwarding edge 117->118 to 120 failed.
Forwarding edge 123->124 to 125 failed.
Forwarding edge 126->127 to 132 failed.
Forwarding edge 135->136 to 137 failed.
Forwarding edge 138->139 to 144 failed.
Forwarding edge 240->241 to 323 failed.
Forwarding edge 249->250 to 253 failed.
Forwarding edge 260->261 to 264 failed.
Forwarding edge 265->266 to 278 failed.
Forwarding edge 272->273 to 276 failed.
Forwarding edge 286->287 to 297 failed.
Forwarding edge 289->290 to 286 failed.
Forwarding edge 306->307 to 311 failed.
Forwarding edge 308->309 to 313 failed.
Forwarding edge 316->317 to 331 failed.
Forwarding edge 318->319 to 333 failed.
Forwarding edge 320->321 to 211 failed.
Forwarding edge 325->326 to 255 failed.
Forwarding edge 327->328 to 335 failed.
Forwarding edge 329->330 to 337 failed.
Forwarding edge 339->340 to 170 failed.
Forwarding edge 341->342 to 315 failed.


;;
;; Full RTL generated for this function:
;;
(note 54 0 178 NOTE_INSN_DELETED)
(note 178 54 55 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 55 178 56 2 (set (reg/v/f:DI 424 [ s ])
        (reg:DI 5 di [ s ])) strfmon_l.c:86 -1
     (nil))
(insn 56 55 57 2 (set (reg/v:DI 425 [ maxsize ])
        (reg:DI 4 si [ maxsize ])) strfmon_l.c:86 -1
     (nil))
(insn 57 56 58 2 (set (reg/v/f:DI 426 [ loc ])
        (reg:DI 1 dx [ loc ])) strfmon_l.c:86 -1
     (nil))
(insn 58 57 59 2 (set (reg/v/f:DI 427 [ format ])
        (reg:DI 2 cx [ format ])) strfmon_l.c:86 -1
     (nil))
(insn 59 58 60 2 (set (reg/v/f:DI 428 [ ap ])
        (reg:DI 37 r8 [ ap ])) strfmon_l.c:86 -1
     (nil))
(note 60 59 180 2 NOTE_INSN_FUNCTION_BEG)
(insn 180 60 172 2 (set (reg/v/f:DI 186 [ current ])
        (mem/f:DI (plus:DI (reg/v/f:DI 426 [ loc ])
                (const_int 32 [0x20])) [3 loc_146(D)->__locales+32 S8 A64])) strfmon_l.c:87 -1
     (nil))
(insn 172 180 181 2 (set (reg/v/f:DI 147 [ s ])
        (reg/v/f:DI 424 [ s ])) strfmon_l.c:93 -1
     (nil))
(jump_insn 181 172 182 2 (set (pc)
        (label_ref 1377)) strfmon_l.c:97 -1
     (nil)
 -> 1377)
(barrier 182 181 1380)
(code_label 1380 182 183 4 133 "" [1 uses])
(note 183 1380 184 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 187 [ D.11988 ])
            (const_int 37 [0x25]))) strfmon_l.c:136 -1
     (nil))
(jump_insn 185 184 186 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) strfmon_l.c:136 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 203)
(note 186 185 187 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 5 (parallel [
            (set (reg:DI 430 [ D.11987 ])
                (plus:DI (reg/v:DI 425 [ maxsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:138 -1
     (nil))
(insn 188 187 189 5 (parallel [
            (set (reg:DI 431 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg:DI 430 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:138 -1
     (nil))
(insn 189 188 190 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 147 [ s ])
            (reg:DI 431 [ D.11989 ]))) strfmon_l.c:138 -1
     (nil))
(jump_insn 190 189 213 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) strfmon_l.c:138 -1
     (int_list:REG_BR_PROB 9833 (nil))
 -> 196)
(code_label 213 190 191 6 9 "" [31 uses])
(note 191 213 192 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 6 (set (reg:DI 432)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b008dc1ca20 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [21  S8 A8])) strfmon_l.c:138 -1
     (nil))
(insn 193 192 194 6 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 432)) [2 __libc_errno+0 S4 A32])
        (const_int 7 [0x7])) strfmon_l.c:138 -1
     (nil))
(jump_insn 194 193 195 6 (set (pc)
        (label_ref 1369)) strfmon_l.c:138 -1
     (nil)
 -> 1369)
(barrier 195 194 196)
(code_label 196 195 197 7 4 "" [1 uses])
(note 197 196 198 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 7 (parallel [
            (set (reg/v/f:DI 380 [ s ])
                (plus:DI (reg/v/f:DI 147 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:138 -1
     (nil))
(insn 199 198 200 7 (parallel [
            (set (reg/v/f:DI 427 [ format ])
                (plus:DI (reg/v/f:DI 427 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:138 -1
     (nil))
(insn 200 199 169 7 (set (mem:QI (reg/v/f:DI 147 [ s ]) [0 *s_27+0 S1 A8])
        (reg:QI 187 [ D.11988 ])) strfmon_l.c:138 -1
     (nil))
(insn 169 200 201 7 (set (reg/v/f:DI 147 [ s ])
        (reg/v/f:DI 380 [ s ])) strfmon_l.c:138 -1
     (nil))
(jump_insn 201 169 202 7 (set (pc)
        (label_ref:DI 1375)) strfmon_l.c:139 654 {jump}
     (nil)
 -> 1375)
(barrier 202 201 203)
(code_label 203 202 204 8 3 "" [1 uses])
(note 204 203 205 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 8 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 427 [ format ])
                (const_int 1 [0x1])) [0 MEM[(const char *)format_37 + 1B]+0 S1 A8])) strfmon_l.c:143 -1
     (nil))
(insn 206 205 207 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 37 [0x25]))) strfmon_l.c:143 -1
     (nil))
(jump_insn 207 206 208 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) strfmon_l.c:143 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 211)
(note 208 207 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 208 62 9 (set (reg/v:SI 158 [ left ])
        (const_int 0 [0])) -1
     (nil))
(insn 62 61 63 9 (set (reg/v:SI 157 [ other_sign_posn ])
        (const_int -2 [0xfffffffffffffffe])) -1
     (nil))
(insn 63 62 64 9 (set (reg/v:SI 156 [ other_sign_posn ])
        (const_int -2 [0xfffffffffffffffe])) -1
     (nil))
(insn 64 63 65 9 (set (reg/v:QI 143 [ pad ])
        (const_int 32 [0x20])) -1
     (nil))
(insn 65 64 66 9 (set (reg/v:SI 154 [ group ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 66 65 209 9 (set (reg/v:SI 144 [ print_curr_symbol ])
        (const_int 1 [0x1])) -1
     (nil))
(jump_insn 209 66 210 9 (set (pc)
        (label_ref 229)) -1
     (nil)
 -> 229)
(barrier 210 209 211)
(code_label 211 210 212 10 7 "" [1 uses])
(note 212 211 214 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 214 212 215 10 (parallel [
            (set (reg:DI 433 [ D.11987 ])
                (plus:DI (reg/v:DI 425 [ maxsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:145 -1
     (nil))
(insn 215 214 216 10 (parallel [
            (set (reg:DI 434 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg:DI 433 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:145 -1
     (nil))
(insn 216 215 217 10 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 147 [ s ])
            (reg:DI 434 [ D.11989 ]))) strfmon_l.c:145 -1
     (nil))
(jump_insn 217 216 218 10 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:145 -1
     (int_list:REG_BR_PROB 167 (nil))
 -> 213)
(note 218 217 219 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 11 (parallel [
            (set (reg/v/f:DI 377 [ s ])
                (plus:DI (reg/v/f:DI 147 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:145 -1
     (nil))
(insn 220 219 221 11 (set (mem:QI (reg/v/f:DI 147 [ s ]) [0 *s_27+0 S1 A8])
        (const_int 37 [0x25])) strfmon_l.c:145 -1
     (nil))
(insn 221 220 170 11 (parallel [
            (set (reg/v/f:DI 427 [ format ])
                (plus:DI (reg/v/f:DI 427 [ format ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:146 -1
     (nil))
(insn 170 221 222 11 (set (reg/v/f:DI 147 [ s ])
        (reg/v/f:DI 377 [ s ])) strfmon_l.c:145 -1
     (nil))
(jump_insn 222 170 223 11 (set (pc)
        (label_ref:DI 1375)) strfmon_l.c:147 654 {jump}
     (nil)
 -> 1375)
(barrier 223 222 224)
(code_label 224 223 225 12 10 "" [1 uses])
(note 225 224 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 225 1567 12 (set (reg/v:SI 154 [ group ])
        (const_int 0 [0])) strfmon_l.c:178 -1
     (nil))
(jump_insn 1567 67 1568 12 (set (pc)
        (label_ref 226)) -1
     (nil)
 -> 226)
(barrier 1568 1567 1570)
(code_label 1570 1568 1569 13 151 "" [1 uses])
(note 1569 1570 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 1569 226 13 (set (reg/v:SI 144 [ print_curr_symbol ])
        (const_int 0 [0])) strfmon_l.c:199 -1
     (nil))
(code_label 226 70 227 14 11 "" [5 uses])
(note 227 226 228 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 72 14 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 1 [0x1])) [0 MEM[(const char *)format_133 + 1B]+0 S1 A8])) -1
     (nil))
(insn 72 228 229 14 (set (reg/v/f:DI 427 [ format ])
        (reg/v/f:DI 185 [ format ])) strfmon_l.c:202 -1
     (nil))
(code_label 229 72 230 15 8 "" [1 uses])
(note 230 229 231 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 15 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 427 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:166 -1
     (nil))
(insn 232 231 233 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 43 [0x2b]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 233 232 1698 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 1429 (nil))
 -> 262)
(note 1698 233 234 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 234 1698 235 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 401 [ D.11988 ])
            (const_int 43 [0x2b]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 235 234 1699 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 242)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 5833 (nil))
 -> 242)
(note 1699 235 236 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 236 1699 237 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 33 [0x21]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 237 236 1700 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1570)
            (pc))) strfmon_l.c:166 612 {*jcc_1}
     (int_list:REG_BR_PROB 4001 (nil))
 -> 1570)
(note 1700 237 238 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 238 1700 239 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 40 [0x28]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 239 238 1701 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 6668 (nil))
 -> 274)
(note 1701 239 240 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 240 1701 241 19 (set (pc)
        (label_ref 285)) strfmon_l.c:166 -1
     (nil)
 -> 285)
(barrier 241 240 242)
(code_label 242 241 1702 20 14 "" [1 uses])
(note 1702 242 243 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 243 1702 244 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 61 [0x3d]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 244 243 1703 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 2857 (nil))
 -> 251)
(note 1703 244 245 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 245 1703 246 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 94 [0x5e]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 246 245 1704 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 4001 (nil))
 -> 224)
(note 1704 246 247 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 247 1704 248 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 45 [0x2d]))) strfmon_l.c:166 -1
     (nil))
(jump_insn 248 247 1705 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 281)
            (pc))) strfmon_l.c:166 -1
     (int_list:REG_BR_PROB 4001 (nil))
 -> 281)
(note 1705 248 249 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 249 1705 250 23 (set (pc)
        (label_ref 285)) strfmon_l.c:166 -1
     (nil)
 -> 285)
(barrier 250 249 251)
(code_label 251 250 252 24 16 "" [1 uses])
(note 252 251 253 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 24 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 427 [ format ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:169 -1
     (nil))
(insn 254 253 255 24 (set (reg/v:QI 143 [ pad ])
        (mem:QI (plus:DI (reg/v/f:DI 427 [ format ])
                (const_int 2 [0x2])) [0 MEM[(const char *)format_28 + 2B]+0 S1 A8])) strfmon_l.c:169 -1
     (nil))
(insn 255 254 256 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 143 [ pad ])
            (const_int 0 [0]))) strfmon_l.c:170 -1
     (nil))
(jump_insn 256 255 264 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 226)
            (pc))) strfmon_l.c:170 -1
     (int_list:REG_BR_PROB 9600 (nil))
 -> 226)
(code_label 264 256 257 25 18 "" [4 uses])
(note 257 264 258 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 25 (set (reg:DI 435)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b008dc1ca20 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [21  S8 A8])) strfmon_l.c:173 -1
     (nil))
(insn 259 258 260 25 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 435)) [2 __libc_errno+0 S4 A32])
        (const_int 22 [0x16])) strfmon_l.c:173 -1
     (nil))
(jump_insn 260 259 261 25 (set (pc)
        (label_ref 1369)) strfmon_l.c:174 -1
     (nil)
 -> 1369)
(barrier 261 260 262)
(code_label 262 261 263 26 13 "" [1 uses])
(note 263 262 265 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 265 263 266 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:181 -1
     (nil))
(jump_insn 266 265 267 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) strfmon_l.c:181 -1
     (int_list:REG_BR_PROB 968 (nil))
 -> 264)
(note 267 266 268 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 27 (set (reg/f:DI 436)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 168 [0xa8])) [0 current_147->values[13].string+0 S8 A64])) strfmon_l.c:186 -1
     (nil))
(insn 269 268 270 27 (set (reg/v:SI 156 [ other_sign_posn ])
        (sign_extend:SI (mem:QI (reg/f:DI 436) [0 *_161+0 S1 A8]))) strfmon_l.c:186 -1
     (nil))
(insn 270 269 271 27 (set (reg/f:DI 437)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 176 [0xb0])) [0 current_147->values[14].string+0 S8 A64])) strfmon_l.c:187 -1
     (nil))
(insn 271 270 272 27 (set (reg/v:SI 157 [ other_sign_posn ])
        (sign_extend:SI (mem:QI (reg/f:DI 437) [0 *_164+0 S1 A8]))) strfmon_l.c:187 -1
     (nil))
(jump_insn 272 271 273 27 (set (pc)
        (label_ref 226)) strfmon_l.c:188 -1
     (nil)
 -> 226)
(barrier 273 272 274)
(code_label 274 273 275 28 15 "" [1 uses])
(note 275 274 276 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:190 -1
     (nil))
(jump_insn 277 276 280 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) strfmon_l.c:190 -1
     (int_list:REG_BR_PROB 968 (nil))
 -> 264)
(note 280 277 68 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 68 280 69 29 (set (reg/v:SI 157 [ other_sign_posn ])
        (const_int 0 [0])) strfmon_l.c:196 -1
     (nil))
(insn 69 68 278 29 (set (reg/v:SI 156 [ other_sign_posn ])
        (const_int 0 [0])) strfmon_l.c:195 -1
     (nil))
(jump_insn 278 69 279 29 (set (pc)
        (label_ref 226)) -1
     (nil)
 -> 226)
(barrier 279 278 281)
(code_label 281 279 282 30 17 "" [1 uses])
(note 282 281 71 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 71 282 283 30 (set (reg/v:SI 158 [ left ])
        (const_int 1 [0x1])) strfmon_l.c:202 -1
     (nil))
(jump_insn 283 71 284 30 (set (pc)
        (label_ref 226)) strfmon_l.c:203 -1
     (nil)
 -> 226)
(barrier 284 283 285)
(code_label 285 284 286 31 12 "" [2 uses])
(note 286 285 287 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 31 (set (reg:SI 438 [ D.11985 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:210 -1
     (nil))
(insn 288 287 289 31 (parallel [
            (set (reg:SI 439 [ D.11985 ])
                (plus:SI (reg:SI 438 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:210 -1
     (nil))
(insn 289 288 290 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 439 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:210 -1
     (nil))
(jump_insn 290 289 291 31 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1574)
            (pc))) strfmon_l.c:210 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1574)
(note 291 290 292 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 292 291 293 32 (set (reg:SI 440 [ D.11991 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:213 -1
     (nil))
(insn 293 292 294 32 (parallel [
            (set (reg:SI 441 [ D.11991 ])
                (plus:SI (reg:SI 440 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:213 -1
     (nil))
(insn 294 293 295 32 (set (reg/v:DI 206 [ width ])
        (sign_extend:DI (reg:SI 441 [ D.11991 ]))) strfmon_l.c:213 -1
     (nil))
(insn 295 294 296 32 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 427 [ format ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:215 -1
     (nil))
(insn 296 295 297 32 (set (reg:QI 410 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 427 [ format ])
                (const_int 2 [0x2])) [0 MEM[(const char *)format_28 + 2B]+0 S1 A8])) strfmon_l.c:215 -1
     (nil))
(insn 297 296 298 32 (set (reg:SI 442 [ D.11985 ])
        (sign_extend:SI (reg:QI 410 [ D.11988 ]))) strfmon_l.c:215 -1
     (nil))
(insn 298 297 299 32 (parallel [
            (set (reg:SI 443 [ D.11985 ])
                (plus:SI (reg:SI 442 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:215 -1
     (nil))
(insn 299 298 300 32 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 443 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:215 -1
     (nil))
(jump_insn 300 299 303 32 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) strfmon_l.c:215 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 335)
(note 303 300 301 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 301 303 302 33 (set (pc)
        (label_ref 342)) strfmon_l.c:215 -1
     (nil)
 -> 342)
(barrier 302 301 321)
(code_label 321 302 304 34 23 "" [1 uses])
(note 304 321 305 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 34 (set (reg:SI 444 [ D.11991 ])
        (sign_extend:SI (reg:QI 197 [ D.11988 ]))) strfmon_l.c:217 -1
     (nil))
(insn 306 305 307 34 (parallel [
            (set (reg/v:SI 202 [ val ])
                (plus:SI (reg:SI 444 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:217 -1
     (nil))
(insn 307 306 308 34 (set (reg:DI 445)
        (const_int 922337203685477580 [0xccccccccccccccc])) strfmon_l.c:219 -1
     (nil))
(insn 308 307 309 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 206 [ width ])
            (reg:DI 445))) strfmon_l.c:219 -1
     (nil))
(jump_insn 309 308 339 34 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) strfmon_l.c:219 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 329)
(code_label 339 309 310 35 24 "" [1 uses])
(note 310 339 311 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 35 (set (reg:DI 446)
        (reg/v:DI 206 [ width ])) strfmon_l.c:226 -1
     (nil))
(insn 312 311 313 35 (parallel [
            (set (reg:DI 447)
                (ashift:DI (reg:DI 446)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:226 -1
     (nil))
(insn 313 312 314 35 (parallel [
            (set (reg:DI 448)
                (plus:DI (reg:DI 447)
                    (reg/v:DI 206 [ width ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 206 [ width ])
            (const_int 5 [0x5]))
        (nil)))
(insn 314 313 315 35 (parallel [
            (set (reg:DI 449)
                (ashift:DI (reg:DI 448)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:226 -1
     (nil))
(insn 315 314 316 35 (set (reg:DI 448)
        (reg:DI 449)) strfmon_l.c:226 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 206 [ width ])
            (const_int 10 [0xa]))
        (nil)))
(insn 316 315 317 35 (set (reg:DI 204 [ D.11994 ])
        (reg:DI 448)) strfmon_l.c:226 -1
     (nil))
(insn 317 316 318 35 (set (reg:DI 450 [ D.11994 ])
        (sign_extend:DI (reg/v:SI 202 [ val ]))) strfmon_l.c:226 -1
     (nil))
(insn 318 317 319 35 (parallel [
            (set (reg/v:DI 206 [ width ])
                (plus:DI (reg:DI 450 [ D.11994 ])
                    (reg:DI 204 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:226 -1
     (nil))
(insn 319 318 320 35 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:215 -1
     (nil))
(insn 320 319 322 35 (set (reg:QI 197 [ D.11988 ])
        (mem:QI (reg/v/f:DI 185 [ format ]) [0 MEM[base: format_174, offset: 0B]+0 S1 A8])) strfmon_l.c:215 -1
     (nil))
(insn 322 320 323 35 (set (reg:SI 451 [ D.11985 ])
        (sign_extend:SI (reg:QI 197 [ D.11988 ]))) strfmon_l.c:215 -1
     (nil))
(insn 323 322 324 35 (parallel [
            (set (reg:SI 452 [ D.11985 ])
                (plus:SI (reg:SI 451 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:215 -1
     (nil))
(insn 324 323 325 35 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 452 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:215 -1
     (nil))
(jump_insn 325 324 328 35 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) strfmon_l.c:215 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 321)
(note 328 325 326 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 326 328 327 36 (set (pc)
        (label_ref 342)) -1
     (nil)
 -> 342)
(barrier 327 326 329)
(code_label 329 327 330 37 22 "" [3 uses])
(note 330 329 331 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 37 (set (reg:DI 453)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b008dc1ca20 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [21  S8 A8])) strfmon_l.c:222 -1
     (nil))
(insn 332 331 333 37 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 453)) [2 __libc_errno+0 S4 A32])
        (const_int 7 [0x7])) strfmon_l.c:222 -1
     (nil))
(jump_insn 333 332 334 37 (set (pc)
        (label_ref 1369)) strfmon_l.c:223 -1
     (nil)
 -> 1369)
(barrier 334 333 335)
(code_label 335 334 336 38 20 "" [1 uses])
(note 336 335 337 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 38 (set (reg:SI 454 [ D.11991 ])
        (sign_extend:SI (reg:QI 410 [ D.11988 ]))) strfmon_l.c:217 -1
     (nil))
(insn 338 337 340 38 (parallel [
            (set (reg/v:SI 202 [ val ])
                (plus:SI (reg:SI 454 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:217 -1
     (nil))
(jump_insn 340 338 341 38 (set (pc)
        (label_ref 339)) strfmon_l.c:217 -1
     (nil)
 -> 339)
(barrier 341 340 342)
(code_label 342 341 343 39 21 "" [2 uses])
(note 343 342 344 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 39 (parallel [
            (set (reg:DI 455 [ D.11994 ])
                (minus:DI (reg/v/f:DI 147 [ s ])
                    (reg/v/f:DI 424 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:231 -1
     (nil))
(insn 345 344 346 39 (parallel [
            (set (reg:DI 456 [ D.11995 ])
                (minus:DI (reg/v:DI 425 [ maxsize ])
                    (reg:DI 455 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:231 -1
     (nil))
(insn 346 345 347 39 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 456 [ D.11995 ])
            (reg/v:DI 206 [ width ]))) strfmon_l.c:231 -1
     (nil))
(jump_insn 347 346 348 39 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) strfmon_l.c:231 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 329)
(note 348 347 349 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 1571 40 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (reg/v/f:DI 185 [ format ]) [0 *format_761+0 S1 A8])) -1
     (nil))
(jump_insn 1571 349 1572 40 (set (pc)
        (label_ref 350)) -1
     (nil)
 -> 350)
(barrier 1572 1571 1574)
(code_label 1574 1572 1573 41 152 "" [1 uses])
(note 1573 1574 73 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 73 1573 350 41 (set (reg/v:DI 206 [ width ])
        (const_int -1 [0xffffffffffffffff])) strfmon_l.c:160 -1
     (nil))
(code_label 350 73 351 42 19 "" [1 uses])
(note 351 350 352 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 35 [0x23]))) strfmon_l.c:239 -1
     (nil))
(jump_insn 353 352 354 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1579)
            (pc))) strfmon_l.c:239 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1579)
(note 354 353 355 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 43 (set (reg:QI 214 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 1 [0x1])) [0 MEM[(const char *)format_30 + 1B]+0 S1 A8])) strfmon_l.c:241 -1
     (nil))
(insn 356 355 357 43 (set (reg:SI 457 [ D.11985 ])
        (sign_extend:SI (reg:QI 214 [ D.11988 ]))) strfmon_l.c:241 -1
     (nil))
(insn 357 356 358 43 (parallel [
            (set (reg:SI 458 [ D.11985 ])
                (plus:SI (reg:SI 457 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:241 -1
     (nil))
(insn 358 357 359 43 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 458 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:241 -1
     (nil))
(jump_insn 359 358 360 43 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) strfmon_l.c:241 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 264)
(note 360 359 361 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 44 (set (reg:SI 459 [ D.11991 ])
        (sign_extend:SI (reg:QI 214 [ D.11988 ]))) strfmon_l.c:246 -1
     (nil))
(insn 362 361 363 44 (parallel [
            (set (reg/v:SI 150 [ left_prec ])
                (plus:SI (reg:SI 459 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:246 -1
     (nil))
(insn 363 362 364 44 (parallel [
            (set (reg/v/f:DI 166 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:248 -1
     (nil))
(insn 364 363 365 44 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 2 [0x2])) [0 MEM[(const char *)format_30 + 2B]+0 S1 A8])) strfmon_l.c:248 -1
     (nil))
(insn 365 364 366 44 (set (reg:SI 460 [ D.11985 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:248 -1
     (nil))
(insn 366 365 367 44 (parallel [
            (set (reg:SI 461 [ D.11985 ])
                (plus:SI (reg:SI 460 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:248 -1
     (nil))
(insn 367 366 368 44 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 461 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:248 -1
     (nil))
(jump_insn 368 367 369 44 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1583)
            (pc))) strfmon_l.c:248 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 1583)
(note 369 368 74 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 74 369 382 45 (set (reg/v/f:DI 185 [ format ])
        (reg/v/f:DI 166 [ format ])) strfmon_l.c:248 -1
     (nil))
(code_label 382 74 370 46 26 "" [1 uses])
(note 370 382 371 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 46 (set (reg:SI 462)
        (reg/v:SI 150 [ left_prec ])) strfmon_l.c:250 -1
     (nil))
(insn 372 371 373 46 (parallel [
            (set (reg:SI 463)
                (ashift:SI (reg:SI 462)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:250 -1
     (nil))
(insn 373 372 374 46 (parallel [
            (set (reg:SI 464)
                (plus:SI (reg:SI 463)
                    (reg/v:SI 150 [ left_prec ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:250 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 150 [ left_prec ])
            (const_int 5 [0x5]))
        (nil)))
(insn 374 373 375 46 (parallel [
            (set (reg:SI 465)
                (ashift:SI (reg:SI 464)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:250 -1
     (nil))
(insn 375 374 376 46 (set (reg:SI 464)
        (reg:SI 465)) strfmon_l.c:250 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 150 [ left_prec ])
            (const_int 10 [0xa]))
        (nil)))
(insn 376 375 377 46 (set (reg/v:SI 220 [ left_prec ])
        (reg:SI 464)) strfmon_l.c:250 -1
     (nil))
(insn 377 376 378 46 (set (reg:SI 466 [ D.11991 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:251 -1
     (nil))
(insn 378 377 379 46 (parallel [
            (set (reg:SI 467 [ D.11991 ])
                (plus:SI (reg:SI 466 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:251 -1
     (nil))
(insn 379 378 380 46 (parallel [
            (set (reg/v:SI 150 [ left_prec ])
                (plus:SI (reg:SI 467 [ D.11991 ])
                    (reg/v:SI 220 [ left_prec ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:251 -1
     (nil))
(insn 380 379 381 46 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:248 -1
     (nil))
(insn 381 380 383 46 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (reg/v/f:DI 185 [ format ]) [0 MEM[base: format_204, offset: 0B]+0 S1 A8])) strfmon_l.c:248 -1
     (nil))
(insn 383 381 384 46 (set (reg:SI 468 [ D.11985 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:248 -1
     (nil))
(insn 384 383 385 46 (parallel [
            (set (reg:SI 469 [ D.11985 ])
                (plus:SI (reg:SI 468 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:248 -1
     (nil))
(insn 385 384 386 46 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 469 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:248 -1
     (nil))
(jump_insn 386 385 1575 46 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 382)
            (pc))) strfmon_l.c:248 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 382)
(note 1575 386 1576 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1576 1575 1577 47 (set (pc)
        (label_ref 387)) -1
     (nil)
 -> 387)
(barrier 1577 1576 1579)
(code_label 1579 1577 1578 48 153 "" [1 uses])
(note 1578 1579 75 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 75 1578 1580 48 (set (reg/v:SI 150 [ left_prec ])
        (const_int -1 [0xffffffffffffffff])) strfmon_l.c:153 -1
     (nil))
(jump_insn 1580 75 1581 48 (set (pc)
        (label_ref 387)) -1
     (nil)
 -> 387)
(barrier 1581 1580 1583)
(code_label 1583 1581 1582 49 154 "" [1 uses])
(note 1582 1583 76 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 76 1582 387 49 (set (reg/v/f:DI 185 [ format ])
        (reg/v/f:DI 166 [ format ])) strfmon_l.c:248 -1
     (nil))
(code_label 387 76 388 50 25 "" [2 uses])
(note 388 387 389 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 46 [0x2e]))) strfmon_l.c:256 -1
     (nil))
(jump_insn 390 389 391 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1588)
            (pc))) strfmon_l.c:256 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1588)
(note 391 390 392 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 51 (set (reg:QI 224 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 1 [0x1])) [0 MEM[(const char *)format_32 + 1B]+0 S1 A8])) strfmon_l.c:258 -1
     (nil))
(insn 393 392 394 51 (set (reg:SI 470 [ D.11985 ])
        (sign_extend:SI (reg:QI 224 [ D.11988 ]))) strfmon_l.c:258 -1
     (nil))
(insn 394 393 395 51 (parallel [
            (set (reg:SI 471 [ D.11985 ])
                (plus:SI (reg:SI 470 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:258 -1
     (nil))
(insn 395 394 396 51 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 471 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:258 -1
     (nil))
(jump_insn 396 395 397 51 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) strfmon_l.c:258 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 264)
(note 397 396 398 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 52 (set (reg:SI 472 [ D.11991 ])
        (sign_extend:SI (reg:QI 224 [ D.11988 ]))) strfmon_l.c:263 -1
     (nil))
(insn 399 398 400 52 (parallel [
            (set (reg/v:SI 153 [ right_prec ])
                (plus:SI (reg:SI 472 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:263 -1
     (nil))
(insn 400 399 401 52 (parallel [
            (set (reg/v/f:DI 182 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:265 -1
     (nil))
(insn 401 400 402 52 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 2 [0x2])) [0 MEM[(const char *)format_32 + 2B]+0 S1 A8])) strfmon_l.c:265 -1
     (nil))
(insn 402 401 403 52 (set (reg:SI 473 [ D.11985 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:265 -1
     (nil))
(insn 403 402 404 52 (parallel [
            (set (reg:SI 474 [ D.11985 ])
                (plus:SI (reg:SI 473 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:265 -1
     (nil))
(insn 404 403 405 52 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 474 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:265 -1
     (nil))
(jump_insn 405 404 406 52 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1592)
            (pc))) strfmon_l.c:265 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 1592)
(note 406 405 77 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 77 406 419 53 (set (reg/v/f:DI 185 [ format ])
        (reg/v/f:DI 182 [ format ])) strfmon_l.c:265 -1
     (nil))
(code_label 419 77 407 54 28 "" [1 uses])
(note 407 419 408 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 54 (set (reg:SI 475)
        (reg/v:SI 153 [ right_prec ])) strfmon_l.c:267 -1
     (nil))
(insn 409 408 410 54 (parallel [
            (set (reg:SI 476)
                (ashift:SI (reg:SI 475)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:267 -1
     (nil))
(insn 410 409 411 54 (parallel [
            (set (reg:SI 477)
                (plus:SI (reg:SI 476)
                    (reg/v:SI 153 [ right_prec ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:267 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 153 [ right_prec ])
            (const_int 5 [0x5]))
        (nil)))
(insn 411 410 412 54 (parallel [
            (set (reg:SI 478)
                (ashift:SI (reg:SI 477)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:267 -1
     (nil))
(insn 412 411 413 54 (set (reg:SI 477)
        (reg:SI 478)) strfmon_l.c:267 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 153 [ right_prec ])
            (const_int 10 [0xa]))
        (nil)))
(insn 413 412 414 54 (set (reg/v:SI 231 [ right_prec ])
        (reg:SI 477)) strfmon_l.c:267 -1
     (nil))
(insn 414 413 415 54 (set (reg:SI 479 [ D.11991 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:268 -1
     (nil))
(insn 415 414 416 54 (parallel [
            (set (reg:SI 480 [ D.11991 ])
                (plus:SI (reg:SI 479 [ D.11991 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:268 -1
     (nil))
(insn 416 415 417 54 (parallel [
            (set (reg/v:SI 153 [ right_prec ])
                (plus:SI (reg:SI 480 [ D.11991 ])
                    (reg/v:SI 231 [ right_prec ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:268 -1
     (nil))
(insn 417 416 418 54 (parallel [
            (set (reg/v/f:DI 185 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:265 -1
     (nil))
(insn 418 417 420 54 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (reg/v/f:DI 185 [ format ]) [0 MEM[base: format_222, offset: 0B]+0 S1 A8])) strfmon_l.c:265 -1
     (nil))
(insn 420 418 421 54 (set (reg:SI 481 [ D.11985 ])
        (sign_extend:SI (reg:QI 401 [ D.11988 ]))) strfmon_l.c:265 -1
     (nil))
(insn 421 420 422 54 (parallel [
            (set (reg:SI 482 [ D.11985 ])
                (plus:SI (reg:SI 481 [ D.11985 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:265 -1
     (nil))
(insn 422 421 423 54 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 482 [ D.11985 ])
            (const_int 9 [0x9]))) strfmon_l.c:265 -1
     (nil))
(jump_insn 423 422 1584 54 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 419)
            (pc))) strfmon_l.c:265 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 419)
(note 1584 423 1585 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1585 1584 1586 55 (set (pc)
        (label_ref 424)) -1
     (nil)
 -> 424)
(barrier 1586 1585 1588)
(code_label 1588 1586 1587 56 155 "" [1 uses])
(note 1587 1588 78 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 78 1587 1589 56 (set (reg/v:SI 153 [ right_prec ])
        (const_int -1 [0xffffffffffffffff])) strfmon_l.c:154 -1
     (nil))
(jump_insn 1589 78 1590 56 (set (pc)
        (label_ref 424)) -1
     (nil)
 -> 424)
(barrier 1590 1589 1592)
(code_label 1592 1590 1591 57 156 "" [1 uses])
(note 1591 1592 79 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 79 1591 424 57 (set (reg/v/f:DI 185 [ format ])
        (reg/v/f:DI 182 [ format ])) strfmon_l.c:265 -1
     (nil))
(code_label 424 79 425 58 27 "" [2 uses])
(note 425 424 426 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 76 [0x4c]))) strfmon_l.c:273 -1
     (nil))
(jump_insn 427 426 428 58 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1596)
            (pc))) strfmon_l.c:273 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1596)
(note 428 427 429 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 59 (parallel [
            (set (reg/v/f:DI 235 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:275 -1
     (nil))
(insn 430 429 81 59 (set (reg:QI 401 [ D.11988 ])
        (mem:QI (plus:DI (reg/v/f:DI 185 [ format ])
                (const_int 1 [0x1])) [0 MEM[(const char *)format_34 + 1B]+0 S1 A8])) -1
     (nil))
(insn 81 430 82 59 (set (reg/v/f:DI 185 [ format ])
        (reg/v/f:DI 235 [ format ])) strfmon_l.c:275 -1
     (nil))
(insn 82 81 1593 59 (set (reg/v:SI 155 [ is_long_double ])
        (const_int 1 [0x1])) strfmon_l.c:277 -1
     (nil))
(jump_insn 1593 82 1594 59 (set (pc)
        (label_ref 431)) -1
     (nil)
 -> 431)
(barrier 1594 1593 1596)
(code_label 1596 1594 1595 60 157 "" [1 uses])
(note 1595 1596 80 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 80 1595 431 60 (set (reg/v:SI 155 [ is_long_double ])
        (const_int 0 [0])) strfmon_l.c:157 -1
     (nil))
(code_label 431 80 432 61 29 "" [1 uses])
(note 432 431 433 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 105 [0x69]))) strfmon_l.c:282 -1
     (nil))
(jump_insn 434 433 1706 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) strfmon_l.c:282 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 439)
(note 1706 434 435 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 435 1706 436 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 401 [ D.11988 ])
            (const_int 110 [0x6e]))) strfmon_l.c:282 -1
     (nil))
(jump_insn 436 435 1707 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 454)
            (pc))) strfmon_l.c:282 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 454)
(note 1707 436 437 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(jump_insn 437 1707 438 63 (set (pc)
        (label_ref 467)) strfmon_l.c:282 -1
     (nil)
 -> 467)
(barrier 438 437 439)
(code_label 439 438 440 64 31 "" [1 uses])
(note 440 439 441 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 64 (set (reg/v/f:DI 236 [ int_curr_symbol ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 64 [0x40])) [0 current_147->values[0].string+0 S8 A64])) strfmon_l.c:287 -1
     (nil))
(insn 442 441 443 64 (parallel [
            (set (reg:DI 483)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:288 -1
     (nil))
(insn 443 442 444 64 (set (reg:DI 1 dx)
        (const_int 3 [0x3])) strfmon_l.c:288 -1
     (nil))
(insn 444 443 445 64 (set (reg:DI 4 si)
        (reg/v/f:DI 236 [ int_curr_symbol ])) strfmon_l.c:288 -1
     (nil))
(insn 445 444 446 64 (set (reg:DI 5 di)
        (reg:DI 483)) strfmon_l.c:288 -1
     (nil))
(call_insn 446 445 447 64 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strncpy") [flags 0x41]  <function_decl 0x2b008d7e9000 __builtin_strncpy>) [0 __builtin_strncpy S1 A8])
            (const_int 0 [0]))) strfmon_l.c:288 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strncpy") [flags 0x41]  <function_decl 0x2b008d7e9000 __builtin_strncpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 447 446 448 64 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -301 [0xfffffffffffffed3])) [0 int_symbol+3 S1 A8])
        (const_int 0 [0])) strfmon_l.c:289 -1
     (nil))
(insn 448 447 449 64 (set (reg/v:QI 237 [ space_char ])
        (mem:QI (plus:DI (reg/v/f:DI 236 [ int_curr_symbol ])
                (const_int 3 [0x3])) [0 MEM[(const char *)int_curr_symbol_237 + 3B]+0 S1 A8])) strfmon_l.c:293 -1
     (nil))
(insn 449 448 450 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:310 -1
     (nil))
(jump_insn 450 449 453 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1507)
            (pc))) strfmon_l.c:310 -1
     (int_list:REG_BR_PROB 2794 (nil))
 -> 1507)
(note 453 450 451 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 451 453 452 65 (set (pc)
        (label_ref 1460)) strfmon_l.c:310 -1
     (nil)
 -> 1460)
(barrier 452 451 454)
(code_label 454 452 455 66 32 "" [1 uses])
(note 455 454 456 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 66 (set (reg/v/f:DI 188 [ _s ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 72 [0x48])) [0 current_147->values[1].string+0 S8 A64])) strfmon_l.c:298 -1
     (nil))
(insn 457 456 458 66 (set (reg:DI 5 di)
        (reg/v/f:DI 188 [ _s ])) strfmon_l.c:299 -1
     (nil))
(call_insn/i 458 457 459 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strfmon_l.c:299 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 459 458 460 66 (set (reg:DI 485)
        (reg:DI 0 ax)) strfmon_l.c:299 -1
     (nil))
(insn 460 459 461 66 (set (reg:DI 486)
        (reg:DI 485)) strfmon_l.c:299 -1
     (nil))
(insn 461 460 462 66 (set (reg/v:DI 234 [ currency_symbol_len ])
        (reg:DI 486)) strfmon_l.c:299 -1
     (nil))
(insn 462 461 463 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:310 -1
     (nil))
(jump_insn 463 462 466 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1498)
            (pc))) strfmon_l.c:310 -1
     (int_list:REG_BR_PROB 2794 (nil))
 -> 1498)
(note 466 463 464 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(jump_insn 464 466 465 67 (set (pc)
        (label_ref 1468)) strfmon_l.c:310 -1
     (nil)
 -> 1468)
(barrier 465 464 467)
(code_label 467 465 468 68 30 "" [1 uses])
(note 468 467 469 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 68 (set (reg:DI 487)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b008dc1ca20 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [21  S8 A8])) strfmon_l.c:304 -1
     (nil))
(insn 470 469 471 68 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 487)) [2 __libc_errno+0 S4 A32])
        (const_int 22 [0x16])) strfmon_l.c:304 -1
     (nil))
(jump_insn 471 470 472 68 (set (pc)
        (label_ref 1369)) strfmon_l.c:305 -1
     (nil)
 -> 1369)
(barrier 472 471 1668)
(code_label 1668 472 1667 69 176 "" [1 uses])
(note 1667 1668 93 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 93 1667 94 69 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 94 93 95 69 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:294 -1
     (nil))
(insn 95 94 96 69 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(insn 96 95 1669 69 (set (reg:SI 175 [ D.11991 ])
        (const_int 21 [0x15])) strfmon_l.c:313 -1
     (nil))
(jump_insn 1669 96 1670 69 (set (pc)
        (label_ref 1462)) -1
     (nil)
 -> 1462)
(barrier 1670 1669 1672)
(code_label 1672 1670 1671 70 177 "" [1 uses])
(note 1671 1672 90 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 90 1671 91 70 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(insn 91 90 92 70 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:301 -1
     (nil))
(insn 92 91 1673 70 (set (reg:SI 175 [ D.11991 ])
        (const_int 14 [0xe])) strfmon_l.c:313 -1
     (nil))
(jump_insn 1673 92 1674 70 (set (pc)
        (label_ref 1462)) -1
     (nil)
 -> 1462)
(barrier 1674 1673 1676)
(code_label 1676 1674 1675 71 178 "" [1 uses])
(note 1675 1676 83 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 83 1675 84 71 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(insn 84 83 85 71 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:312 -1
     (nil))
(insn 85 84 1677 71 (set (reg:SI 175 [ D.11991 ])
        (const_int 14 [0xe])) strfmon_l.c:313 -1
     (nil))
(jump_insn 1677 85 1678 71 (set (pc)
        (label_ref 1462)) -1
     (nil)
 -> 1462)
(barrier 1678 1677 1680)
(code_label 1680 1678 1679 72 179 "" [1 uses])
(note 1679 1680 86 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 86 1679 87 72 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 87 86 88 72 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:294 -1
     (nil))
(insn 88 87 89 72 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(insn 89 88 1462 72 (set (reg:SI 175 [ D.11991 ])
        (const_int 21 [0x15])) strfmon_l.c:313 -1
     (nil))
(code_label 1462 89 473 73 141 "" [3 uses])
(note 473 1462 474 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 475 73 (set (reg:DI 488)
        (sign_extend:DI (reg:SI 175 [ D.11991 ]))) strfmon_l.c:313 -1
     (nil))
(insn 475 474 476 73 (parallel [
            (set (reg:DI 489)
                (plus:DI (reg:DI 488)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:313 -1
     (nil))
(insn 476 475 477 73 (set (reg/f:DI 490)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 489)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 186 [ current ])) [0 current_147->values[_98].string+0 S8 A64])) strfmon_l.c:313 -1
     (nil))
(insn 477 476 478 73 (set (reg/v:SI 157 [ other_sign_posn ])
        (sign_extend:SI (mem:QI (reg/f:DI 490) [0 *_246+0 S1 A8]))) strfmon_l.c:313 -1
     (nil))
(insn 478 477 479 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:315 -1
     (nil))
(jump_insn 479 478 480 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 493)
            (pc))) strfmon_l.c:315 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 493)
(note 480 479 481 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 312 [ int_format ])
            (const_int 0 [0]))) strfmon_l.c:317 -1
     (nil))
(jump_insn 482 481 1689 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1600)
            (pc))) strfmon_l.c:317 612 {*jcc_1}
     (int_list:REG_BR_PROB 4994 (nil))
 -> 1600)
(note 1689 482 1690 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1690 1689 1691 75 (set (pc)
        (label_ref 1532)) -1
     (nil)
 -> 1532)
(barrier 1691 1690 1693)
(code_label 1693 1691 1692 76 182 "" [1 uses])
(note 1692 1693 97 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 97 1692 1532 76 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(code_label 1532 97 483 77 148 "" [1 uses])
(note 483 1532 102 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 102 483 103 77 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:317 -1
     (nil))
(insn 103 102 1597 77 (set (reg:SI 176 [ D.11991 ])
        (const_int 8 [0x8])) strfmon_l.c:317 -1
     (nil))
(jump_insn 1597 103 1598 77 (set (pc)
        (label_ref 484)) -1
     (nil)
 -> 484)
(barrier 1598 1597 1600)
(code_label 1600 1598 1599 78 158 "" [1 uses])
(note 1599 1600 111 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 111 1599 112 78 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) -1
     (nil))
(insn 112 111 1681 78 (set (reg:SI 176 [ D.11991 ])
        (const_int 7 [0x7])) strfmon_l.c:317 -1
     (nil))
(jump_insn 1681 112 1682 78 (set (pc)
        (label_ref 484)) -1
     (nil)
 -> 484)
(barrier 1682 1681 1684)
(code_label 1684 1682 1683 79 180 "" [1 uses])
(note 1683 1684 107 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 107 1683 108 79 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:294 -1
     (nil))
(insn 108 107 109 79 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 109 108 110 79 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(insn 110 109 1685 79 (set (reg:SI 176 [ D.11991 ])
        (const_int 7 [0x7])) strfmon_l.c:317 -1
     (nil))
(jump_insn 1685 110 1686 79 (set (pc)
        (label_ref 484)) -1
     (nil)
 -> 484)
(barrier 1686 1685 1688)
(code_label 1688 1686 1687 80 181 "" [1 uses])
(note 1687 1688 104 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 104 1687 105 80 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:301 -1
     (nil))
(insn 105 104 106 80 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(insn 106 105 1694 80 (set (reg:SI 176 [ D.11991 ])
        (const_int 8 [0x8])) strfmon_l.c:317 -1
     (nil))
(jump_insn 1694 106 1695 80 (set (pc)
        (label_ref 484)) -1
     (nil)
 -> 484)
(barrier 1695 1694 1697)
(code_label 1697 1695 1696 81 183 "" [1 uses])
(note 1696 1697 98 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 98 1696 99 81 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:315 -1
     (nil))
(insn 99 98 100 81 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 100 99 101 81 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(insn 101 100 484 81 (set (reg:SI 176 [ D.11991 ])
        (const_int 7 [0x7])) strfmon_l.c:317 -1
     (nil))
(code_label 484 101 485 82 38 "" [4 uses])
(note 485 484 486 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 82 (set (reg:DI 491)
        (sign_extend:DI (reg:SI 176 [ D.11991 ]))) strfmon_l.c:317 -1
     (nil))
(insn 487 486 488 82 (parallel [
            (set (reg:DI 492)
                (plus:DI (reg:DI 491)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:317 -1
     (nil))
(insn 488 487 489 82 (set (reg/f:DI 493)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 492)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 186 [ current ])) [0 current_147->values[_99].string+0 S8 A64])) strfmon_l.c:317 -1
     (nil))
(insn 489 488 490 82 (set (reg/v:SI 153 [ right_prec ])
        (sign_extend:SI (mem:QI (reg/f:DI 493) [0 *_249+0 S1 A8]))) strfmon_l.c:317 -1
     (nil))
(insn 490 489 491 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:319 -1
     (nil))
(jump_insn 491 490 492 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1604)
            (pc))) strfmon_l.c:319 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1604)
(note 492 491 1601 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1601 492 1602 83 (set (pc)
        (label_ref 493)) -1
     (nil)
 -> 493)
(barrier 1602 1601 1604)
(code_label 1604 1602 1603 84 159 "" [1 uses])
(note 1603 1604 115 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 115 1603 493 84 (set (reg/v:SI 153 [ right_prec ])
        (const_int 2 [0x2])) strfmon_l.c:320 -1
     (nil))
(code_label 493 115 494 85 37 "" [6 uses])
(note 494 493 495 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 85 (set (reg:QI 242 [ D.11986 ])
        (subreg:QI (reg/v:SI 154 [ group ]) 0)) strfmon_l.c:325 -1
     (nil))
(insn 496 495 497 85 (parallel [
            (set (reg:QI 242 [ D.11986 ])
                (and:QI (reg:QI 242 [ D.11986 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:325 -1
     (nil))
(insn 497 496 498 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 150 [ left_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:325 -1
     (nil))
(insn 498 497 499 85 (set (reg:QI 495 [ D.11986 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:325 -1
     (nil))
(insn 499 498 500 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 495 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:325 -1
     (nil))
(jump_insn 500 499 1708 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) strfmon_l.c:325 -1
     (int_list:REG_BR_PROB 3550 (nil))
 -> 514)
(note 1708 500 501 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 501 1708 502 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 242 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:325 -1
     (nil))
(jump_insn 502 501 503 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 514)
            (pc))) strfmon_l.c:325 -1
     (int_list:REG_BR_PROB 5504 (nil))
 -> 514)
(note 503 502 504 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 87 (set (reg:SI 249 [ D.11996 ])
        (reg/v:SI 150 [ left_prec ])) strfmon_l.c:326 -1
     (nil))
(insn 505 504 506 87 (set (reg/f:DI 496)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 88 [0x58])) [0 current_147->values[3].string+0 S8 A64])) strfmon_l.c:328 -1
     (nil))
(insn 506 505 507 87 (set (reg:SI 497 [ D.11991 ])
        (sign_extend:SI (mem:QI (reg/f:DI 496) [0 *_255+0 S1 A8]))) strfmon_l.c:326 -1
     (nil))
(insn 507 506 508 87 (set (reg:DI 498)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 96 [0x60])) [0 current_147->values[4].string+0 S8 A64])) strfmon_l.c:326 -1
     (nil))
(insn 508 507 509 87 (set (reg:SI 1 dx)
        (reg:SI 497 [ D.11991 ])) strfmon_l.c:326 -1
     (nil))
(insn 509 508 510 87 (set (reg:DI 4 si)
        (reg:DI 498)) strfmon_l.c:326 -1
     (nil))
(insn 510 509 511 87 (set (reg:SI 5 di)
        (reg:SI 249 [ D.11996 ])) strfmon_l.c:326 -1
     (nil))
(call_insn 511 510 512 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__guess_grouping") [flags 0x41]  <function_decl 0x2b008deaa0d8 __guess_grouping>) [0 __guess_grouping S1 A8])
            (const_int 0 [0]))) strfmon_l.c:326 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__guess_grouping") [flags 0x41]  <function_decl 0x2b008deaa0d8 __guess_grouping>)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 512 511 513 87 (set (reg:SI 250 [ D.11996 ])
        (reg:SI 0 ax)) strfmon_l.c:326 -1
     (nil))
(insn 513 512 514 87 (parallel [
            (set (reg/v:SI 150 [ left_prec ])
                (plus:SI (reg:SI 249 [ D.11996 ])
                    (reg:SI 250 [ D.11996 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:326 -1
     (nil))
(code_label 514 513 515 88 39 "" [2 uses])
(note 515 514 516 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 155 [ is_long_double ])
            (const_int 1 [0x1]))) strfmon_l.c:332 -1
     (nil))
(jump_insn 517 516 518 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 545)
            (pc))) strfmon_l.c:332 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 545)
(note 518 517 519 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 89 (set (reg/f:DI 500)
        (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 8 [0x8])) [3 ap_265(D)->overflow_arg_area+0 S8 A64])) strfmon_l.c:334 -1
     (nil))
(insn 520 519 521 89 (parallel [
            (set (reg:DI 499 [ D.11992 ])
                (plus:DI (reg/f:DI 500)
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:334 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                    (const_int 8 [0x8])) [3 ap_265(D)->overflow_arg_area+0 S8 A64])
            (const_int 15 [0xf]))
        (nil)))
(insn 521 520 522 89 (parallel [
            (set (reg/f:DI 254 [ D.11992 ])
                (and:DI (reg:DI 499 [ D.11992 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:334 -1
     (nil))
(insn 522 521 523 89 (parallel [
            (set (reg:DI 501)
                (plus:DI (reg/f:DI 254 [ D.11992 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:334 -1
     (nil))
(insn 523 522 524 89 (set (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 8 [0x8])) [3 ap_265(D)->overflow_arg_area+0 S8 A64])
        (reg:DI 501)) strfmon_l.c:334 -1
     (nil))
(insn 524 523 525 89 (set (reg:XF 256 [ D.11997 ])
        (mem:XF (reg/f:DI 254 [ D.11992 ]) [0 MEM[(long double * {ref-all})_268]+0 S16 A128])) strfmon_l.c:334 -1
     (nil))
(insn 525 524 526 89 (set (reg:SF 506)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [22  S4 A32])) strfmon_l.c:335 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 526 525 527 89 (set (reg:XF 505)
        (float_extend:XF (reg:SF 506))) strfmon_l.c:335 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 527 526 528 89 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 505)
            (reg:XF 256 [ D.11997 ]))) strfmon_l.c:335 -1
     (nil))
(insn 528 527 529 89 (set (reg:QI 504)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) strfmon_l.c:335 -1
     (nil))
(insn 529 528 530 89 (set (reg:SI 502 [ D.11986 ])
        (zero_extend:SI (reg:QI 504))) strfmon_l.c:335 -1
     (nil))
(insn 530 529 531 89 (set (reg/v:SI 159 [ is_negative ])
        (reg:SI 502 [ D.11986 ])) strfmon_l.c:335 -1
     (nil))
(insn 531 530 532 89 (set (reg:SF 508)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [22  S4 A32])) strfmon_l.c:336 -1
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 532 531 533 89 (set (reg:XF 507)
        (float_extend:XF (reg:SF 508))) strfmon_l.c:336 -1
     (expr_list:REG_EQUAL (const_double:XF 0.0 [0x0.0p+0])
        (nil)))
(insn 533 532 534 89 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:XF 507)
            (reg:XF 256 [ D.11997 ]))) strfmon_l.c:336 -1
     (nil))
(jump_insn 534 533 535 89 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) strfmon_l.c:336 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 539)
(note 535 534 536 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 90 (set (mem/c:XF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 fpnum.ldbl+0 S16 A128])
        (reg:XF 256 [ D.11997 ])) strfmon_l.c:334 -1
     (nil))
(jump_insn 537 536 538 90 (set (pc)
        (label_ref 583)) strfmon_l.c:334 -1
     (nil)
 -> 583)
(barrier 538 537 539)
(code_label 539 538 540 91 41 "" [1 uses])
(note 540 539 541 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 91 (set (reg:XF 509 [ D.11997 ])
        (neg:XF (reg:XF 256 [ D.11997 ]))) strfmon_l.c:337 -1
     (nil))
(insn 542 541 543 91 (set (mem/c:XF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 fpnum.ldbl+0 S16 A128])
        (reg:XF 509 [ D.11997 ])) strfmon_l.c:337 -1
     (nil))
(jump_insn 543 542 544 91 (set (pc)
        (label_ref 583)) strfmon_l.c:337 -1
     (nil)
 -> 583)
(barrier 544 543 545)
(code_label 545 544 546 92 40 "" [1 uses])
(note 546 545 547 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 92 (set (reg:SI 260 [ D.11996 ])
        (mem:SI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 4 [0x4])) [2 ap_265(D)->fp_offset+0 S4 A32])) strfmon_l.c:341 -1
     (nil))
(insn 548 547 549 92 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 260 [ D.11996 ])
            (const_int 175 [0xaf]))) strfmon_l.c:341 -1
     (nil))
(jump_insn 549 548 550 92 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 558)
            (pc))) strfmon_l.c:341 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 558)
(note 550 549 551 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 93 (set (reg:DI 510 [ D.11987 ])
        (zero_extend:DI (reg:SI 260 [ D.11996 ]))) strfmon_l.c:341 -1
     (nil))
(insn 552 551 553 93 (set (reg/f:DI 511)
        (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 16 [0x10])) [3 ap_265(D)->reg_save_area+0 S8 A64])) strfmon_l.c:341 -1
     (nil))
(insn 553 552 554 93 (parallel [
            (set (reg/f:DI 177 [ D.11992 ])
                (plus:DI (reg:DI 510 [ D.11987 ])
                    (reg/f:DI 511)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:341 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                    (const_int 16 [0x10])) [3 ap_265(D)->reg_save_area+0 S8 A64])
            (reg:DI 510 [ D.11987 ]))
        (nil)))
(insn 554 553 555 93 (parallel [
            (set (reg:SI 512)
                (plus:SI (reg:SI 260 [ D.11996 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:341 -1
     (nil))
(insn 555 554 556 93 (set (mem:SI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 4 [0x4])) [2 ap_265(D)->fp_offset+0 S4 A32])
        (reg:SI 512)) strfmon_l.c:341 -1
     (nil))
(jump_insn 556 555 557 93 (set (pc)
        (label_ref 563)) strfmon_l.c:341 -1
     (nil)
 -> 563)
(barrier 557 556 558)
(code_label 558 557 559 94 43 "" [1 uses])
(note 559 558 560 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 560 559 561 94 (set (reg/f:DI 177 [ D.11992 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 8 [0x8])) [3 ap_265(D)->overflow_arg_area+0 S8 A64])) strfmon_l.c:341 -1
     (nil))
(insn 561 560 562 94 (parallel [
            (set (reg:DI 513)
                (plus:DI (reg/f:DI 177 [ D.11992 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:341 -1
     (nil))
(insn 562 561 563 94 (set (mem/f:DI (plus:DI (reg/v/f:DI 428 [ ap ])
                (const_int 8 [0x8])) [3 ap_265(D)->overflow_arg_area+0 S8 A64])
        (reg:DI 513)) strfmon_l.c:341 -1
     (nil))
(code_label 563 562 564 95 44 "" [1 uses])
(note 564 563 565 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 565 564 566 95 (set (reg:DF 266 [ D.11998 ])
        (mem:DF (reg/f:DI 177 [ D.11992 ]) [0 MEM[(double * {ref-all})_100]+0 S8 A64])) strfmon_l.c:341 -1
     (nil))
(insn 566 565 567 95 (set (reg:DF 517)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S8 A64])) strfmon_l.c:342 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 567 566 568 95 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 517)
            (reg:DF 266 [ D.11998 ]))) strfmon_l.c:342 -1
     (nil))
(insn 568 567 569 95 (set (reg:QI 516)
        (gt:QI (reg:CCFPU 17 flags)
            (const_int 0 [0]))) strfmon_l.c:342 -1
     (nil))
(insn 569 568 570 95 (set (reg:SI 514 [ D.11986 ])
        (zero_extend:SI (reg:QI 516))) strfmon_l.c:342 -1
     (nil))
(insn 570 569 571 95 (set (reg/v:SI 159 [ is_negative ])
        (reg:SI 514 [ D.11986 ])) strfmon_l.c:342 -1
     (nil))
(insn 571 570 572 95 (set (reg:DF 518)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [5  S8 A64])) strfmon_l.c:343 -1
     (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))
(insn 572 571 573 95 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 518)
            (reg:DF 266 [ D.11998 ]))) strfmon_l.c:343 -1
     (nil))
(jump_insn 573 572 574 95 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 578)
            (pc))) strfmon_l.c:343 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 578)
(note 574 573 575 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 575 574 576 96 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 fpnum.dbl+0 S8 A128])
        (reg:DF 266 [ D.11998 ])) strfmon_l.c:341 -1
     (nil))
(jump_insn 576 575 577 96 (set (pc)
        (label_ref 583)) strfmon_l.c:341 -1
     (nil)
 -> 583)
(barrier 577 576 578)
(code_label 578 577 579 97 45 "" [1 uses])
(note 579 578 580 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 580 579 581 97 (set (reg:V2DF 520)
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [5  S16 A128])) strfmon_l.c:344 -1
     (expr_list:REG_EQUAL (const_vector:V2DF [
                (const_double:DF -0.0 [-0x0.0p+0])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 581 580 582 97 (parallel [
            (set (reg:DF 519 [ D.11998 ])
                (neg:DF (reg:DF 266 [ D.11998 ])))
            (use (reg:V2DF 520))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:344 -1
     (expr_list:REG_EQUAL (neg:DF (reg:DF 266 [ D.11998 ]))
        (nil)))
(insn 582 581 583 97 (set (mem/c:DF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -288 [0xfffffffffffffee0])) [0 fpnum.dbl+0 S8 A128])
        (reg:DF 519 [ D.11998 ])) strfmon_l.c:344 -1
     (nil))
(code_label 583 582 584 98 42 "" [3 uses])
(note 584 583 585 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 159 [ is_negative ])
            (const_int 0 [0]))) strfmon_l.c:348 -1
     (nil))
(jump_insn 586 585 587 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 606)
            (pc))) strfmon_l.c:348 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 606)
(note 587 586 588 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 588 587 589 99 (set (reg/v/f:DI 164 [ _s ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 112 [0x70])) [0 current_147->values[6].string+0 S8 A64])) strfmon_l.c:350 -1
     (nil))
(insn 589 588 590 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_299+0 S1 A8])
            (const_int 0 [0]))) strfmon_l.c:353 -1
     (nil))
(jump_insn 590 589 591 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1608)
            (pc))) strfmon_l.c:353 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1608)
(note 591 590 1605 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1605 591 1606 100 (set (pc)
        (label_ref 592)) -1
     (nil)
 -> 592)
(barrier 1606 1605 1608)
(code_label 1608 1606 1607 101 160 "" [1 uses])
(note 1607 1608 124 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 124 1607 592 101 (set (reg/v/f:DI 164 [ _s ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b008e03b3f0 *.LC0>)) strfmon_l.c:354 -1
     (nil))
(code_label 592 124 593 102 47 "" [1 uses])
(note 593 592 594 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 312 [ int_format ])
            (const_int 0 [0]))) strfmon_l.c:355 -1
     (nil))
(jump_insn 595 594 598 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1391)
            (pc))) strfmon_l.c:355 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1391)
(note 598 595 596 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(jump_insn 596 598 597 103 (set (pc)
        (label_ref 1403)) -1
     (nil)
 -> 1403)
(barrier 597 596 1400)
(code_label 1400 597 599 104 134 "" [2 uses])
(note 599 1400 600 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 104 (set (reg:DI 521)
        (sign_extend:DI (reg:SI 181 [ D.11991 ]))) strfmon_l.c:361 -1
     (nil))
(insn 601 600 602 104 (parallel [
            (set (reg:DI 522)
                (plus:DI (reg:DI 521)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:361 -1
     (nil))
(insn 602 601 603 104 (set (reg/f:DI 523)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 522)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 186 [ current ])) [0 current_147->values[_104].string+0 S8 A64])) strfmon_l.c:361 -1
     (nil))
(insn 603 602 604 104 (set (reg/v:SI 161 [ other_sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 523) [0 *_312+0 S1 A8]))) strfmon_l.c:361 -1
     (nil))
(jump_insn 604 603 605 104 (set (pc)
        (label_ref 619)) -1
     (nil)
 -> 619)
(barrier 605 604 606)
(code_label 606 605 607 105 46 "" [1 uses])
(note 607 606 608 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 608 607 609 105 (set (reg/v/f:DI 164 [ _s ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 104 [0x68])) [0 current_147->values[5].string+0 S8 A64])) strfmon_l.c:366 -1
     (nil))
(insn 609 608 610 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 312 [ int_format ])
            (const_int 0 [0]))) strfmon_l.c:367 -1
     (nil))
(jump_insn 610 609 613 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1426)
            (pc))) strfmon_l.c:367 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1426)
(note 613 610 611 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(jump_insn 611 613 612 106 (set (pc)
        (label_ref 1414)) -1
     (nil)
 -> 1414)
(barrier 612 611 1444)
(code_label 1444 612 614 107 139 "" [2 uses])
(note 614 1444 615 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 107 (set (reg:DI 524)
        (sign_extend:DI (reg:SI 183 [ D.11991 ]))) strfmon_l.c:375 -1
     (nil))
(insn 616 615 617 107 (parallel [
            (set (reg:DI 525)
                (plus:DI (reg:DI 524)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:375 -1
     (nil))
(insn 617 616 618 107 (set (reg/f:DI 526)
        (mem/f:DI (plus:DI (mult:DI (reg:DI 525)
                    (const_int 8 [0x8]))
                (reg/v/f:DI 186 [ current ])) [0 current_147->values[_108].string+0 S8 A64])) strfmon_l.c:375 -1
     (nil))
(insn 618 617 129 107 (set (reg/v:SI 161 [ other_sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 526) [0 *_328+0 S1 A8]))) strfmon_l.c:375 -1
     (nil))
(insn 129 618 130 107 (set (reg:SI 429)
        (reg/v:SI 157 [ other_sign_posn ])) strfmon_l.c:375 -1
     (nil))
(insn 130 129 131 107 (set (reg/v:SI 157 [ other_sign_posn ])
        (reg/v:SI 156 [ other_sign_posn ])) strfmon_l.c:375 -1
     (nil))
(insn 131 130 619 107 (set (reg/v:SI 156 [ other_sign_posn ])
        (reg:SI 429)) strfmon_l.c:375 -1
     (nil))
(code_label 619 131 620 108 50 "" [1 uses])
(note 620 619 621 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:384 -1
     (nil))
(jump_insn 622 621 623 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1612)
            (pc))) strfmon_l.c:384 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1612)
(note 623 622 1609 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1609 623 1610 109 (set (pc)
        (label_ref 624)) -1
     (nil)
 -> 624)
(barrier 1610 1609 1612)
(code_label 1612 1610 1611 110 161 "" [1 uses])
(note 1611 1612 132 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 132 1611 624 110 (set (reg/v:SI 160 [ sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:385 -1
     (nil))
(code_label 624 132 625 111 53 "" [1 uses])
(note 625 624 626 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 627 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 161 [ other_sep_by_space ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:386 -1
     (nil))
(jump_insn 627 626 628 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1616)
            (pc))) strfmon_l.c:386 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1616)
(note 628 627 1613 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1613 628 1614 112 (set (pc)
        (label_ref 629)) -1
     (nil)
 -> 629)
(barrier 1614 1613 1616)
(code_label 1616 1614 1615 113 162 "" [1 uses])
(note 1615 1616 133 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 133 1615 629 113 (set (reg/v:SI 161 [ other_sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:387 -1
     (nil))
(code_label 629 133 630 114 54 "" [1 uses])
(note 630 629 631 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 631 630 632 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:388 -1
     (nil))
(jump_insn 632 631 633 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1620)
            (pc))) strfmon_l.c:388 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1620)
(note 633 632 634 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 0 [0]))) -1
     (nil))
(insn 635 634 636 115 (set (reg:QI 527)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 636 635 637 115 (set (reg:QI 171 [ D.11986 ])
        (reg:QI 527)) -1
     (nil))
(insn 637 636 638 115 (parallel [
            (set (reg:QI 528 [ D.11986 ])
                (and:QI (subreg:QI (reg/v:SI 159 [ is_negative ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 638 637 1617 115 (parallel [
            (set (reg:QI 276 [ D.11986 ])
                (and:QI (reg:QI 528 [ D.11986 ])
                    (reg:QI 171 [ D.11986 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 1617 638 1618 115 (set (pc)
        (label_ref 639)) -1
     (nil)
 -> 639)
(barrier 1618 1617 1620)
(code_label 1620 1618 1619 116 163 "" [1 uses])
(note 1619 1620 134 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 134 1619 135 116 (set (reg:QI 276 [ D.11986 ])
        (const_int 0 [0])) -1
     (nil))
(insn 135 134 136 116 (set (reg:QI 171 [ D.11986 ])
        (const_int 0 [0])) -1
     (nil))
(insn 136 135 639 116 (set (reg/v:SI 157 [ other_sign_posn ])
        (const_int 1 [0x1])) strfmon_l.c:389 -1
     (nil))
(code_label 639 136 640 117 55 "" [1 uses])
(note 640 639 641 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:390 -1
     (nil))
(jump_insn 642 641 643 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1624)
            (pc))) strfmon_l.c:390 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1624)
(note 643 642 1621 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1621 643 1622 118 (set (pc)
        (label_ref 644)) -1
     (nil)
 -> 644)
(barrier 1622 1621 1624)
(code_label 1624 1622 1623 119 164 "" [1 uses])
(note 1623 1624 137 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 137 1623 644 119 (set (reg/v:SI 156 [ other_sign_posn ])
        (const_int 1 [0x1])) strfmon_l.c:391 -1
     (nil))
(code_label 644 137 645 120 56 "" [1 uses])
(note 645 644 646 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 646 645 647 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:394 -1
     (nil))
(jump_insn 647 646 648 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 672)
            (pc))) strfmon_l.c:394 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 672)
(note 648 647 649 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(jump_insn 650 649 651 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1628)
            (pc))) strfmon_l.c:396 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1628)
(note 651 650 652 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 652 651 653 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(insn 653 652 654 122 (set (reg:QI 530 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(insn 654 653 655 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 530 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(jump_insn 655 654 1709 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1719)
            (pc))) strfmon_l.c:396 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1719)
(note 1709 655 656 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 656 1709 657 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 1 [0x1]))) strfmon_l.c:396 -1
     (nil))
(insn 657 656 658 123 (set (reg:QI 532 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(insn 658 657 659 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 532 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:396 -1
     (nil))
(jump_insn 659 658 1710 123 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1632)
            (pc))) strfmon_l.c:396 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 1632)
(note 1710 659 1719 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(code_label 1719 1710 661 125 184 "" [1 uses])
(note 661 1719 662 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 2 [0x2]))) strfmon_l.c:397 -1
     (nil))
(insn 663 662 664 125 (set (reg:QI 534 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:397 -1
     (nil))
(insn 664 663 665 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 534 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:397 -1
     (nil))
(jump_insn 665 664 1711 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 672)
            (pc))) strfmon_l.c:397 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 672)
(note 1711 665 666 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 666 1711 667 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:397 -1
     (nil))
(insn 667 666 668 126 (set (reg:QI 536 [ D.11986 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:397 -1
     (nil))
(insn 668 667 669 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 536 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:397 -1
     (nil))
(jump_insn 669 668 1712 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1636)
            (pc))) strfmon_l.c:397 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 1636)
(note 1712 669 1625 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1625 1712 1626 127 (set (pc)
        (label_ref 672)) -1
     (nil)
 -> 672)
(barrier 1626 1625 1628)
(code_label 1628 1626 1627 129 165 "" [1 uses])
(note 1627 1628 138 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 138 1627 1629 129 (set (reg/v:SI 160 [ sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:400 -1
     (nil))
(jump_insn 1629 138 1630 129 (set (pc)
        (label_ref 672)) -1
     (nil)
 -> 672)
(barrier 1630 1629 1632)
(code_label 1632 1630 1631 130 166 "" [1 uses])
(note 1631 1632 140 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 140 1631 1633 130 (set (reg/v:SI 160 [ sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:400 -1
     (nil))
(jump_insn 1633 140 1634 130 (set (pc)
        (label_ref 672)) -1
     (nil)
 -> 672)
(barrier 1634 1633 1636)
(code_label 1636 1634 1635 131 167 "" [1 uses])
(note 1635 1636 139 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 139 1635 672 131 (set (reg/v:SI 160 [ sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:400 -1
     (nil))
(code_label 672 139 673 132 57 "" [5 uses])
(note 673 672 674 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 161 [ other_sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:402 -1
     (nil))
(jump_insn 675 674 676 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 700)
            (pc))) strfmon_l.c:402 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 700)
(note 676 675 677 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 677 676 678 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(jump_insn 678 677 679 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1640)
            (pc))) strfmon_l.c:404 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1640)
(note 679 678 680 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ other_cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(insn 681 680 682 134 (set (reg:QI 538 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(insn 682 681 683 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 538 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(jump_insn 683 682 1713 134 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1720)
            (pc))) strfmon_l.c:404 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1720)
(note 1713 683 684 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 684 1713 685 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int 1 [0x1]))) strfmon_l.c:404 -1
     (nil))
(insn 685 684 686 135 (set (reg:QI 540 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(insn 686 685 687 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 540 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:404 -1
     (nil))
(jump_insn 687 686 1714 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1644)
            (pc))) strfmon_l.c:404 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 1644)
(note 1714 687 1720 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(code_label 1720 1714 689 137 185 "" [1 uses])
(note 689 1720 690 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 690 689 691 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int 2 [0x2]))) strfmon_l.c:405 -1
     (nil))
(insn 691 690 692 137 (set (reg:QI 542 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:405 -1
     (nil))
(insn 692 691 693 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 542 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:405 -1
     (nil))
(jump_insn 693 692 1715 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 700)
            (pc))) strfmon_l.c:405 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 700)
(note 1715 693 694 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 694 1715 695 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ other_cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:405 -1
     (nil))
(insn 695 694 696 138 (set (reg:QI 544 [ D.11986 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:405 -1
     (nil))
(insn 696 695 697 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 544 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:405 -1
     (nil))
(jump_insn 697 696 1716 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1648)
            (pc))) strfmon_l.c:405 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 1648)
(note 1716 697 1637 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1637 1716 1638 139 (set (pc)
        (label_ref 700)) -1
     (nil)
 -> 700)
(barrier 1638 1637 1640)
(code_label 1640 1638 1639 141 168 "" [1 uses])
(note 1639 1640 141 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 141 1639 1641 141 (set (reg/v:SI 161 [ other_sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:408 -1
     (nil))
(jump_insn 1641 141 1642 141 (set (pc)
        (label_ref 700)) -1
     (nil)
 -> 700)
(barrier 1642 1641 1644)
(code_label 1644 1642 1643 142 169 "" [1 uses])
(note 1643 1644 143 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 143 1643 1645 142 (set (reg/v:SI 161 [ other_sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:408 -1
     (nil))
(jump_insn 1645 143 1646 142 (set (pc)
        (label_ref 700)) -1
     (nil)
 -> 700)
(barrier 1646 1645 1648)
(code_label 1648 1646 1647 143 170 "" [1 uses])
(note 1647 1648 142 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 142 1647 700 143 (set (reg/v:SI 161 [ other_sep_by_space ])
        (const_int 0 [0])) strfmon_l.c:408 -1
     (nil))
(code_label 700 142 701 144 60 "" [5 uses])
(note 701 700 702 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 144 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 150 [ left_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:412 -1
     (nil))
(jump_insn 703 702 704 144 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1650)
            (pc))) strfmon_l.c:412 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1650)
(note 704 703 705 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:427 -1
     (nil))
(jump_insn 706 705 707 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1654)
            (pc))) strfmon_l.c:427 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1654)
(note 707 706 708 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 708 707 709 146 (set (reg/v:SI 168 [ left_bytes ])
        (subreg:SI (reg/v:DI 234 [ currency_symbol_len ]) 0)) strfmon_l.c:429 -1
     (nil))
(insn 709 708 710 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 0 [0]))) strfmon_l.c:430 -1
     (nil))
(jump_insn 710 709 711 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 713)
            (pc))) strfmon_l.c:430 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 713)
(note 711 710 712 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 712 711 1651 147 (parallel [
            (set (reg/v:SI 168 [ left_bytes ])
                (plus:SI (reg/v:SI 168 [ left_bytes ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:431 -1
     (nil))
(jump_insn 1651 712 1652 147 (set (pc)
        (label_ref 713)) -1
     (nil)
 -> 713)
(barrier 1652 1651 1654)
(code_label 1654 1652 1653 148 172 "" [1 uses])
(note 1653 1654 144 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 144 1653 713 148 (set (reg/v:SI 168 [ left_bytes ])
        (const_int 0 [0])) strfmon_l.c:422 -1
     (nil))
(code_label 713 144 714 149 64 "" [2 uses])
(note 714 713 715 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ other_cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:434 -1
     (nil))
(jump_insn 716 715 717 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1658)
            (pc))) strfmon_l.c:434 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1658)
(note 717 716 718 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 718 717 719 150 (set (reg/v:SI 169 [ other_left_bytes ])
        (subreg:SI (reg/v:DI 234 [ currency_symbol_len ]) 0)) strfmon_l.c:436 -1
     (nil))
(insn 719 718 720 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 161 [ other_sep_by_space ])
            (const_int 0 [0]))) strfmon_l.c:437 -1
     (nil))
(jump_insn 720 719 721 150 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 723)
            (pc))) strfmon_l.c:437 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 723)
(note 721 720 722 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 1655 151 (parallel [
            (set (reg/v:SI 169 [ other_left_bytes ])
                (plus:SI (reg/v:SI 169 [ other_left_bytes ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:438 -1
     (nil))
(jump_insn 1655 722 1656 151 (set (pc)
        (label_ref 723)) -1
     (nil)
 -> 723)
(barrier 1656 1655 1658)
(code_label 1658 1656 1657 152 173 "" [1 uses])
(note 1657 1658 145 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 145 1657 723 152 (set (reg/v:SI 169 [ other_left_bytes ])
        (const_int 0 [0])) strfmon_l.c:423 -1
     (nil))
(code_label 723 145 724 153 65 "" [2 uses])
(note 724 723 725 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 276 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:443 -1
     (nil))
(jump_insn 726 725 727 153 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 731)
            (pc))) strfmon_l.c:443 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 731)
(note 727 726 728 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 729 154 (parallel [
            (set (reg/v:SI 168 [ left_bytes ])
                (plus:SI (reg/v:SI 168 [ left_bytes ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:444 -1
     (nil))
(jump_insn 729 728 730 154 (set (pc)
        (label_ref 761)) -1
     (nil)
 -> 761)
(barrier 730 729 731)
(code_label 731 730 732 155 66 "" [1 uses])
(note 732 731 733 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 1 [0x1]))) strfmon_l.c:445 -1
     (nil))
(jump_insn 734 733 735 155 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 745)
            (pc))) strfmon_l.c:445 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 745)
(note 735 734 736 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 156 (set (reg:DI 5 di)
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:446 -1
     (nil))
(call_insn/i 737 736 738 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strfmon_l.c:446 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 738 737 739 156 (set (reg:DI 546)
        (reg:DI 0 ax)) strfmon_l.c:446 -1
     (nil))
(insn 739 738 740 156 (set (reg:DI 547)
        (reg:DI 546)) strfmon_l.c:446 -1
     (nil))
(insn 740 739 741 156 (set (reg:DI 288 [ D.11995 ])
        (reg:DI 547)) strfmon_l.c:446 -1
     (nil))
(insn 741 740 742 156 (parallel [
            (set (reg:SI 291 [ D.11985 ])
                (plus:SI (reg/v:SI 168 [ left_bytes ])
                    (subreg:SI (reg:DI 288 [ D.11995 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:446 -1
     (nil))
(insn 742 741 743 156 (set (reg/v:SI 168 [ left_bytes ])
        (reg:SI 291 [ D.11985 ])) strfmon_l.c:446 -1
     (nil))
(jump_insn 743 742 744 156 (set (pc)
        (label_ref 761)) -1
     (nil)
 -> 761)
(barrier 744 743 745)
(code_label 745 744 746 157 68 "" [1 uses])
(note 746 745 747 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 747 746 748 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:447 -1
     (nil))
(jump_insn 748 747 749 157 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 761)
            (pc))) strfmon_l.c:447 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 761)
(note 749 748 750 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 750 749 751 158 (parallel [
            (set (reg:SI 548 [ D.11985 ])
                (plus:SI (reg/v:SI 157 [ other_sign_posn ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:447 -1
     (nil))
(insn 751 750 752 158 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 548 [ D.11985 ])
            (const_int 1 [0x1]))) strfmon_l.c:447 -1
     (nil))
(jump_insn 752 751 753 158 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 761)
            (pc))) strfmon_l.c:447 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 761)
(note 753 752 754 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 159 (set (reg:DI 5 di)
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:448 -1
     (nil))
(call_insn/i 755 754 756 159 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strfmon_l.c:448 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 756 755 757 159 (set (reg:DI 550)
        (reg:DI 0 ax)) strfmon_l.c:448 -1
     (nil))
(insn 757 756 758 159 (set (reg:DI 551)
        (reg:DI 550)) strfmon_l.c:448 -1
     (nil))
(insn 758 757 759 159 (set (reg:DI 294 [ D.11995 ])
        (reg:DI 551)) strfmon_l.c:448 -1
     (nil))
(insn 759 758 760 159 (parallel [
            (set (reg:SI 297 [ D.11985 ])
                (plus:SI (reg/v:SI 168 [ left_bytes ])
                    (subreg:SI (reg:DI 294 [ D.11995 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:448 -1
     (nil))
(insn 760 759 761 159 (set (reg/v:SI 168 [ left_bytes ])
        (reg:SI 297 [ D.11985 ])) strfmon_l.c:448 -1
     (nil))
(code_label 761 760 762 160 67 "" [4 uses])
(note 762 761 763 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 763 762 764 160 (parallel [
            (set (reg:SI 552 [ D.11991 ])
                (ior:SI (reg/v:SI 156 [ other_sign_posn ])
                    (reg/v:SI 159 [ is_negative ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:450 -1
     (nil))
(insn 764 763 765 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 552 [ D.11991 ])
            (const_int 0 [0]))) strfmon_l.c:450 -1
     (nil))
(jump_insn 765 764 766 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 770)
            (pc))) strfmon_l.c:450 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 770)
(note 766 765 767 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 767 766 768 161 (parallel [
            (set (reg/v:SI 169 [ other_left_bytes ])
                (plus:SI (reg/v:SI 169 [ other_left_bytes ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:451 -1
     (nil))
(jump_insn 768 767 769 161 (set (pc)
        (label_ref 1555)) -1
     (nil)
 -> 1555)
(barrier 769 768 770)
(code_label 770 769 771 162 69 "" [1 uses])
(note 771 770 772 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 156 [ other_sign_posn ])
            (const_int 1 [0x1]))) strfmon_l.c:452 -1
     (nil))
(jump_insn 773 772 774 162 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 784)
            (pc))) strfmon_l.c:452 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 784)
(note 774 773 775 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 775 774 776 163 (set (reg:DI 5 di)
        (reg/v/f:DI 165 [ other_sign_string ])) strfmon_l.c:453 -1
     (nil))
(call_insn/i 776 775 777 163 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strfmon_l.c:453 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 777 776 778 163 (set (reg:DI 554)
        (reg:DI 0 ax)) strfmon_l.c:453 -1
     (nil))
(insn 778 777 779 163 (set (reg:DI 555)
        (reg:DI 554)) strfmon_l.c:453 -1
     (nil))
(insn 779 778 780 163 (set (reg:DI 299 [ D.11995 ])
        (reg:DI 555)) strfmon_l.c:453 -1
     (nil))
(insn 780 779 781 163 (parallel [
            (set (reg:SI 302 [ D.11985 ])
                (plus:SI (reg/v:SI 169 [ other_left_bytes ])
                    (subreg:SI (reg:DI 299 [ D.11995 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:453 -1
     (nil))
(insn 781 780 782 163 (set (reg/v:SI 169 [ other_left_bytes ])
        (reg:SI 302 [ D.11985 ])) strfmon_l.c:453 -1
     (nil))
(jump_insn 782 781 783 163 (set (pc)
        (label_ref 1555)) -1
     (nil)
 -> 1555)
(barrier 783 782 784)
(code_label 784 783 785 164 71 "" [1 uses])
(note 785 784 786 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ other_cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:454 -1
     (nil))
(jump_insn 787 786 788 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1555)
            (pc))) strfmon_l.c:454 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1555)
(note 788 787 789 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 165 (parallel [
            (set (reg:SI 556 [ D.11985 ])
                (plus:SI (reg/v:SI 156 [ other_sign_posn ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:454 -1
     (nil))
(insn 790 789 791 165 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 556 [ D.11985 ])
            (const_int 1 [0x1]))) strfmon_l.c:454 -1
     (nil))
(jump_insn 791 790 792 165 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1555)
            (pc))) strfmon_l.c:454 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 1555)
(note 792 791 793 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 793 792 794 166 (set (reg:DI 5 di)
        (reg/v/f:DI 165 [ other_sign_string ])) strfmon_l.c:456 -1
     (nil))
(call_insn/i 794 793 795 166 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) strfmon_l.c:456 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b008d7e5948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 795 794 796 166 (set (reg:DI 558)
        (reg:DI 0 ax)) strfmon_l.c:456 -1
     (nil))
(insn 796 795 797 166 (set (reg:DI 559)
        (reg:DI 558)) strfmon_l.c:456 -1
     (nil))
(insn 797 796 798 166 (set (reg:DI 305 [ D.11995 ])
        (reg:DI 559)) strfmon_l.c:456 -1
     (nil))
(insn 798 797 799 166 (parallel [
            (set (reg:SI 308 [ D.11985 ])
                (plus:SI (reg/v:SI 169 [ other_left_bytes ])
                    (subreg:SI (reg:DI 305 [ D.11995 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:456 -1
     (nil))
(insn 799 798 800 166 (set (reg/v:SI 169 [ other_left_bytes ])
        (reg:SI 308 [ D.11985 ])) strfmon_l.c:456 -1
     (nil))
(jump_insn 800 799 801 166 (set (pc)
        (label_ref 1555)) strfmon_l.c:456 -1
     (nil)
 -> 1555)
(barrier 801 800 821)
(code_label 821 801 805 168 74 "" [1 uses])
(note 805 821 807 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 807 805 808 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 271 [ D.11989 ])
            (reg/v/f:DI 310 [ s ]))) strfmon_l.c:474 -1
     (nil))
(jump_insn 808 807 811 168 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:474 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 811 808 809 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(jump_insn 809 811 810 169 (set (pc)
        (label_ref 817)) -1
     (nil)
 -> 817)
(barrier 810 809 1551)
(code_label 1551 810 812 170 149 "" [1 uses])
(note 812 1551 813 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 814 170 (parallel [
            (set (reg:SI 560 [ D.11985 ])
                (plus:SI (reg/v:SI 393 [ left_pad ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 814 813 815 170 (set (reg:DI 561 [ D.11987 ])
        (zero_extend:DI (reg:SI 560 [ D.11985 ]))) -1
     (nil))
(insn 815 814 816 170 (parallel [
            (set (reg:DI 562 [ D.11987 ])
                (plus:DI (reg:DI 561 [ D.11987 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 816 815 146 170 (parallel [
            (set (reg/v/f:DI 140 [ s ])
                (plus:DI (reg/v/f:DI 147 [ s ])
                    (reg:DI 562 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 146 816 817 170 (set (reg/v/f:DI 310 [ s ])
        (reg/v/f:DI 147 [ s ])) strfmon_l.c:474 -1
     (nil))
(code_label 817 146 818 171 73 "" [1 uses])
(note 818 817 819 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 820 171 (parallel [
            (set (reg/v/f:DI 310 [ s ])
                (plus:DI (reg/v/f:DI 310 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:474 -1
     (nil))
(insn 820 819 822 171 (set (mem:QI (plus:DI (reg/v/f:DI 310 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_384, offset: -1B]+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:474 -1
     (nil))
(insn 822 820 823 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 310 [ s ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:473 -1
     (nil))
(jump_insn 823 822 1457 171 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 821)
            (pc))) strfmon_l.c:473 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 821)
(code_label 1457 823 824 172 140 "" [1 uses])
(note 824 1457 825 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 276 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:476 -1
     (nil))
(jump_insn 826 825 827 172 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 832)
            (pc))) strfmon_l.c:476 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 832)
(note 827 826 828 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 173 (parallel [
            (set (reg:DI 563 [ D.11987 ])
                (plus:DI (reg/v:DI 425 [ maxsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 829 828 830 173 (parallel [
            (set (reg/f:DI 151 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg:DI 563 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 830 829 831 173 (set (pc)
        (label_ref 841)) -1
     (nil)
 -> 841)
(barrier 831 830 832)
(code_label 832 831 833 174 75 "" [1 uses])
(note 833 832 834 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 834 833 835 174 (parallel [
            (set (reg:DI 564 [ D.11987 ])
                (plus:DI (reg/v:DI 425 [ maxsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:477 -1
     (nil))
(insn 835 834 836 174 (parallel [
            (set (reg/f:DI 151 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg:DI 564 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:477 -1
     (nil))
(insn 836 835 837 174 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:477 -1
     (nil))
(jump_insn 837 836 838 174 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:477 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 838 837 839 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 839 838 840 175 (parallel [
            (set (reg/v/f:DI 313 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:477 -1
     (nil))
(insn 840 839 148 175 (set (mem:QI (reg/v/f:DI 140 [ s ]) [0 *s_621+0 S1 A8])
        (const_int 40 [0x28])) strfmon_l.c:477 -1
     (nil))
(insn 148 840 841 175 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 313 [ s ])) strfmon_l.c:477 -1
     (nil))
(code_label 841 148 842 176 76 "" [1 uses])
(note 842 841 843 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 176 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:479 -1
     (nil))
(jump_insn 844 843 845 176 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 991)
            (pc))) strfmon_l.c:479 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 991)
(note 845 844 846 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 846 845 847 177 (parallel [
            (set (reg:SI 565 [ D.11991 ])
                (and:SI (reg/v:SI 157 [ other_sign_posn ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:481 -1
     (nil))
(insn 847 846 848 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 565 [ D.11991 ])
            (const_int 0 [0]))) strfmon_l.c:481 -1
     (nil))
(jump_insn 848 847 849 177 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 890)
            (pc))) strfmon_l.c:481 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 890)
(note 849 848 850 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 850 849 851 178 (parallel [
            (set (reg:SI 566 [ D.11985 ])
                (plus:SI (reg/v:SI 157 [ other_sign_posn ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:482 -1
     (nil))
(insn 851 850 852 178 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 566 [ D.11985 ])
            (const_int 1 [0x1]))) strfmon_l.c:482 -1
     (nil))
(jump_insn 852 851 853 178 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 890)
            (pc))) strfmon_l.c:482 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 890)
(note 853 852 854 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 854 853 855 179 (set (reg:QI 277 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:484 -1
     (nil))
(insn 855 854 856 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 277 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:484 -1
     (nil))
(jump_insn 856 855 857 179 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 880)
            (pc))) strfmon_l.c:484 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 880)
(note 857 856 858 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 858 857 859 180 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:484 -1
     (nil))
(jump_insn 859 858 862 180 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:484 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 862 859 149 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 149 862 860 181 (set (reg/v/f:DI 318 [ _s ])
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:484 -1
     (nil))
(jump_insn 860 149 861 181 (set (pc)
        (label_ref 869)) strfmon_l.c:484 -1
     (nil)
 -> 869)
(barrier 861 860 877)
(code_label 877 861 863 182 82 "" [1 uses])
(note 863 877 864 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 864 863 865 182 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:484 -1
     (nil))
(jump_insn 865 864 868 182 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:484 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 868 865 866 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(jump_insn 866 868 867 183 (set (pc)
        (label_ref 871)) -1
     (nil)
 -> 871)
(barrier 867 866 869)
(code_label 869 867 870 184 80 "" [1 uses])
(note 870 869 871 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(code_label 871 870 872 185 81 "" [1 uses])
(note 872 871 873 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 185 (parallel [
            (set (reg/v/f:DI 140 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:484 -1
     (nil))
(insn 874 873 875 185 (parallel [
            (set (reg/v/f:DI 318 [ _s ])
                (plus:DI (reg/v/f:DI 318 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:484 -1
     (nil))
(insn 875 874 876 185 (set (mem:QI (plus:DI (reg/v/f:DI 140 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_408, offset: -1B]+0 S1 A8])
        (reg:QI 277 [ D.11988 ])) strfmon_l.c:484 -1
     (nil))
(insn 876 875 878 185 (set (reg:QI 277 [ D.11988 ])
        (mem:QI (reg/v/f:DI 318 [ _s ]) [0 MEM[base: _s_410, offset: 0B]+0 S1 A8])) strfmon_l.c:484 -1
     (nil))
(insn 878 876 879 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 277 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:484 -1
     (nil))
(jump_insn 879 878 880 185 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) strfmon_l.c:484 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 877)
(code_label 880 879 881 186 79 "" [1 uses])
(note 881 880 882 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:485 -1
     (nil))
(jump_insn 883 882 884 186 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 890)
            (pc))) strfmon_l.c:485 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 890)
(note 884 883 885 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 187 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:486 -1
     (nil))
(jump_insn 886 885 887 187 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:486 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 887 886 888 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 888 887 889 188 (parallel [
            (set (reg/v/f:DI 319 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:486 -1
     (nil))
(insn 889 888 150 188 (set (mem:QI (reg/v/f:DI 140 [ s ]) [0 *s_754+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:486 -1
     (nil))
(insn 150 889 890 188 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 319 [ s ])) strfmon_l.c:486 -1
     (nil))
(code_label 890 150 891 189 78 "" [3 uses])
(note 891 890 892 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 892 891 893 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144 [ print_curr_symbol ])
            (const_int 0 [0]))) strfmon_l.c:489 -1
     (nil))
(jump_insn 893 892 894 189 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1475)
            (pc))) strfmon_l.c:489 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1475)
(note 894 893 895 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 190 (set (reg:QI 203 [ D.11988 ])
        (mem:QI (reg/v/f:DI 188 [ _s ]) [0 *_s_160+0 S1 A8])) strfmon_l.c:490 -1
     (nil))
(insn 896 895 897 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 203 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:490 -1
     (nil))
(jump_insn 897 896 898 190 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 921)
            (pc))) strfmon_l.c:490 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 921)
(note 898 897 899 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 899 898 900 191 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:490 -1
     (nil))
(jump_insn 900 899 903 191 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:490 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 903 900 151 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 151 903 901 192 (set (reg/v/f:DI 320 [ _s ])
        (reg/v/f:DI 188 [ _s ])) strfmon_l.c:490 -1
     (nil))
(jump_insn 901 151 902 192 (set (pc)
        (label_ref 910)) strfmon_l.c:490 -1
     (nil)
 -> 910)
(barrier 902 901 918)
(code_label 918 902 904 193 87 "" [1 uses])
(note 904 918 905 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:490 -1
     (nil))
(jump_insn 906 905 909 193 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:490 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 909 906 907 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(jump_insn 907 909 908 194 (set (pc)
        (label_ref 912)) -1
     (nil)
 -> 912)
(barrier 908 907 910)
(code_label 910 908 911 195 85 "" [1 uses])
(note 911 910 912 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(code_label 912 911 913 196 86 "" [1 uses])
(note 913 912 914 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 196 (parallel [
            (set (reg/v/f:DI 140 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:490 -1
     (nil))
(insn 915 914 916 196 (parallel [
            (set (reg/v/f:DI 320 [ _s ])
                (plus:DI (reg/v/f:DI 320 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:490 -1
     (nil))
(insn 916 915 917 196 (set (mem:QI (plus:DI (reg/v/f:DI 140 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_424, offset: -1B]+0 S1 A8])
        (reg:QI 203 [ D.11988 ])) strfmon_l.c:490 -1
     (nil))
(insn 917 916 919 196 (set (reg:QI 203 [ D.11988 ])
        (mem:QI (reg/v/f:DI 320 [ _s ]) [0 MEM[base: _s_425, offset: 0B]+0 S1 A8])) strfmon_l.c:490 -1
     (nil))
(insn 919 917 920 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 203 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:490 -1
     (nil))
(jump_insn 920 919 921 196 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 918)
            (pc))) strfmon_l.c:490 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 918)
(code_label 921 920 922 197 84 "" [1 uses])
(note 922 921 923 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 923 922 924 197 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 4 [0x4]))) strfmon_l.c:492 -1
     (nil))
(jump_insn 924 923 925 197 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 974)
            (pc))) strfmon_l.c:492 -1
     (int_list:REG_BR_PROB 5904 (nil))
 -> 974)
(note 925 924 926 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 926 925 927 198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:494 -1
     (nil))
(jump_insn 927 926 928 198 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 934)
            (pc))) strfmon_l.c:494 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 934)
(note 928 927 929 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 929 928 930 199 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:495 -1
     (nil))
(jump_insn 930 929 931 199 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:495 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 931 930 932 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 932 931 933 200 (parallel [
            (set (reg/v/f:DI 325 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:495 -1
     (nil))
(insn 933 932 152 200 (set (mem:QI (reg/v/f:DI 140 [ s ]) [0 *s_6+0 S1 A8])
        (reg/v:QI 237 [ space_char ])) strfmon_l.c:495 -1
     (nil))
(insn 152 933 934 200 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 325 [ s ])) strfmon_l.c:495 -1
     (nil))
(code_label 934 152 935 201 89 "" [2 uses])
(note 935 934 936 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 201 (set (reg:QI 148 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:496 -1
     (nil))
(insn 937 936 938 201 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:496 -1
     (nil))
(jump_insn 938 937 939 201 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) strfmon_l.c:496 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 962)
(note 939 938 940 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 940 939 941 202 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:496 -1
     (nil))
(jump_insn 941 940 944 202 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:496 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 944 941 153 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 153 944 942 203 (set (reg/v/f:DI 327 [ _s ])
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:496 -1
     (nil))
(jump_insn 942 153 943 203 (set (pc)
        (label_ref 951)) strfmon_l.c:496 -1
     (nil)
 -> 951)
(barrier 943 942 959)
(code_label 959 943 945 204 93 "" [1 uses])
(note 945 959 946 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:496 -1
     (nil))
(jump_insn 947 946 950 204 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:496 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 950 947 948 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(jump_insn 948 950 949 205 (set (pc)
        (label_ref 953)) -1
     (nil)
 -> 953)
(barrier 949 948 951)
(code_label 951 949 952 206 91 "" [1 uses])
(note 952 951 953 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(code_label 953 952 954 207 92 "" [1 uses])
(note 954 953 955 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 207 (parallel [
            (set (reg/v/f:DI 140 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:496 -1
     (nil))
(insn 956 955 957 207 (parallel [
            (set (reg/v/f:DI 327 [ _s ])
                (plus:DI (reg/v/f:DI 327 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:496 -1
     (nil))
(insn 957 956 958 207 (set (mem:QI (plus:DI (reg/v/f:DI 140 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_450, offset: -1B]+0 S1 A8])
        (reg:QI 148 [ D.11988 ])) strfmon_l.c:496 -1
     (nil))
(insn 958 957 960 207 (set (reg:QI 148 [ D.11988 ])
        (mem:QI (reg/v/f:DI 327 [ _s ]) [0 MEM[base: _s_451, offset: 0B]+0 S1 A8])) strfmon_l.c:496 -1
     (nil))
(insn 960 958 961 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:496 -1
     (nil))
(jump_insn 961 960 962 207 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 959)
            (pc))) strfmon_l.c:496 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 959)
(code_label 962 961 963 208 90 "" [1 uses])
(note 963 962 964 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 208 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 1 [0x1]))) strfmon_l.c:497 -1
     (nil))
(jump_insn 965 964 966 208 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:497 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1029)
(note 966 965 967 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 967 966 968 209 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:500 -1
     (nil))
(jump_insn 968 967 969 209 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:500 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 969 968 970 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 970 969 971 210 (parallel [
            (set (reg/v/f:DI 328 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:500 -1
     (nil))
(insn 971 970 156 210 (set (mem:QI (reg/v/f:DI 140 [ s ]) [0 *s_636+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:500 -1
     (nil))
(insn 156 971 972 210 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 328 [ s ])) strfmon_l.c:500 -1
     (nil))
(jump_insn 972 156 973 210 (set (pc)
        (label_ref 1029)) strfmon_l.c:500 -1
     (nil)
 -> 1029)
(barrier 973 972 974)
(code_label 974 973 975 211 88 "" [2 uses])
(note 975 974 976 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 211 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 1 [0x1]))) strfmon_l.c:503 -1
     (nil))
(insn 977 976 978 211 (set (reg:QI 568 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:503 -1
     (nil))
(insn 978 977 979 211 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 568 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:503 -1
     (nil))
(jump_insn 979 978 1717 211 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:503 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1029)
(note 1717 979 980 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 980 1717 981 212 (parallel [
            (set (reg:QI 569 [ D.11986 ])
                (and:QI (subreg:QI (reg/v:SI 144 [ print_curr_symbol ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:503 -1
     (nil))
(insn 981 980 982 212 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 569 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:503 -1
     (nil))
(jump_insn 982 981 983 212 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:503 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 1029)
(note 983 982 984 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 984 983 985 213 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:504 -1
     (nil))
(jump_insn 985 984 986 213 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:504 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 986 985 987 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 987 986 988 214 (parallel [
            (set (reg/v/f:DI 324 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:504 -1
     (nil))
(insn 988 987 155 214 (set (mem:QI (reg/v/f:DI 140 [ s ]) [0 *s_665+0 S1 A8])
        (reg/v:QI 237 [ space_char ])) strfmon_l.c:504 -1
     (nil))
(insn 155 988 989 214 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 324 [ s ])) strfmon_l.c:504 -1
     (nil))
(jump_insn 989 155 990 214 (set (pc)
        (label_ref 1029)) strfmon_l.c:504 -1
     (nil)
 -> 1029)
(barrier 990 989 991)
(code_label 991 990 992 215 77 "" [1 uses])
(note 992 991 993 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 215 (parallel [
            (set (reg:SI 570 [ D.11985 ])
                (plus:SI (reg/v:SI 157 [ other_sign_posn ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:507 -1
     (nil))
(insn 994 993 995 215 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 570 [ D.11985 ])
            (const_int 3 [0x3]))) strfmon_l.c:507 -1
     (nil))
(insn 995 994 996 215 (set (reg:QI 572 [ D.11986 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) strfmon_l.c:507 -1
     (nil))
(insn 996 995 997 215 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 572 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:507 -1
     (nil))
(jump_insn 997 996 1718 215 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:507 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 1029)
(note 1718 997 998 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 998 1718 999 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 0 [0]))) strfmon_l.c:507 -1
     (nil))
(insn 999 998 1000 216 (set (reg:QI 574 [ D.11986 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:507 -1
     (nil))
(insn 1000 999 1001 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 574 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:507 -1
     (nil))
(jump_insn 1001 1000 1002 216 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:507 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 1029)
(note 1002 1001 1003 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1004 217 (set (reg:QI 332 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:509 -1
     (nil))
(insn 1004 1003 1005 217 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 332 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:509 -1
     (nil))
(jump_insn 1005 1004 1006 217 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1029)
            (pc))) strfmon_l.c:509 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1029)
(note 1006 1005 1007 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 1007 1006 1008 218 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 140 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:509 -1
     (nil))
(jump_insn 1008 1007 1011 218 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:509 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1011 1008 154 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 154 1011 1009 219 (set (reg/v/f:DI 333 [ _s ])
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:509 -1
     (nil))
(jump_insn 1009 154 1010 219 (set (pc)
        (label_ref 1018)) strfmon_l.c:509 -1
     (nil)
 -> 1018)
(barrier 1010 1009 1026)
(code_label 1026 1010 1012 220 97 "" [1 uses])
(note 1012 1026 1013 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 1013 1012 1014 220 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 140 [ s ]))) strfmon_l.c:509 -1
     (nil))
(jump_insn 1014 1013 1017 220 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:509 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1017 1014 1015 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1015 1017 1016 221 (set (pc)
        (label_ref 1020)) -1
     (nil)
 -> 1020)
(barrier 1016 1015 1018)
(code_label 1018 1016 1019 222 95 "" [1 uses])
(note 1019 1018 1020 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(code_label 1020 1019 1021 223 96 "" [1 uses])
(note 1021 1020 1022 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 1022 1021 1023 223 (parallel [
            (set (reg/v/f:DI 140 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:509 -1
     (nil))
(insn 1023 1022 1024 223 (parallel [
            (set (reg/v/f:DI 333 [ _s ])
                (plus:DI (reg/v/f:DI 333 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:509 -1
     (nil))
(insn 1024 1023 1025 223 (set (mem:QI (plus:DI (reg/v/f:DI 140 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_469, offset: -1B]+0 S1 A8])
        (reg:QI 332 [ D.11988 ])) strfmon_l.c:509 -1
     (nil))
(insn 1025 1024 1027 223 (set (reg:QI 332 [ D.11988 ])
        (mem:QI (reg/v/f:DI 333 [ _s ]) [0 MEM[base: _s_470, offset: 0B]+0 S1 A8])) strfmon_l.c:509 -1
     (nil))
(insn 1027 1025 1028 223 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 332 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:509 -1
     (nil))
(jump_insn 1028 1027 1029 223 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1026)
            (pc))) strfmon_l.c:509 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1026)
(code_label 1029 1028 1030 224 94 "" [8 uses])
(note 1030 1029 1031 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 224 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -104 [0xffffffffffffff98])) [3 f._sbf._f._lock+0 S8 A64])
        (const_int 0 [0])) strfmon_l.c:513 -1
     (nil))
(insn 1032 1031 1033 224 (parallel [
            (set (reg:DI 575)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:515 -1
     (nil))
(insn 1033 1032 1034 224 (set (reg:SI 4 si)
        (const_int 0 [0])) strfmon_l.c:515 -1
     (nil))
(insn 1034 1033 1035 224 (set (reg:DI 5 di)
        (reg:DI 575)) strfmon_l.c:515 -1
     (nil))
(call_insn 1035 1034 1036 224 (call (mem:QI (symbol_ref:DI ("_IO_init_internal") [flags 0x43]  <function_decl 0x2b008dd52360 _IO_init_internal>) [0 _IO_init_internal S1 A8])
        (const_int 0 [0])) strfmon_l.c:515 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_init_internal") [flags 0x43]  <function_decl 0x2b008dd52360 _IO_init_internal>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 1036 1035 1037 224 (set (reg/f:DI 576)
        (symbol_ref:DI ("_IO_str_jumps") [flags 0x42]  <var_decl 0x2b008dd735a0 _IO_str_jumps>)) strfmon_l.c:516 -1
     (nil))
(insn 1037 1036 1038 224 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 f._sbf.vtable+0 S8 A64])
        (reg/f:DI 576)) strfmon_l.c:516 -1
     (nil))
(insn 1038 1037 1039 224 (parallel [
            (set (reg:DI 577 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg/v:DI 425 [ maxsize ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:517 -1
     (nil))
(insn 1039 1038 1040 224 (parallel [
            (set (reg:DI 578 [ D.11994 ])
                (minus:DI (reg:DI 577 [ D.11989 ])
                    (reg/v/f:DI 140 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:517 -1
     (nil))
(insn 1040 1039 1041 224 (parallel [
            (set (reg:DI 579)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:517 -1
     (nil))
(insn 1041 1040 1042 224 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ s ])) strfmon_l.c:517 -1
     (nil))
(insn 1042 1041 1043 224 (set (reg:DI 1 dx)
        (reg:DI 578 [ D.11994 ])) strfmon_l.c:517 -1
     (nil))
(insn 1043 1042 1044 224 (set (reg:DI 4 si)
        (reg/v/f:DI 140 [ s ])) strfmon_l.c:517 -1
     (nil))
(insn 1044 1043 1045 224 (set (reg:DI 5 di)
        (reg:DI 579)) strfmon_l.c:517 -1
     (nil))
(call_insn 1045 1044 1046 224 (call (mem:QI (symbol_ref:DI ("_IO_str_init_static_internal") [flags 0x41]  <function_decl 0x2b008dda2bd0 _IO_str_init_static_internal>) [0 _IO_str_init_static_internal S1 A8])
        (const_int 0 [0])) strfmon_l.c:517 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_str_init_static_internal") [flags 0x41]  <function_decl 0x2b008dda2bd0 _IO_str_init_static_internal>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1046 1045 1047 224 (set (mem:QI (reg/f:DI 151 [ D.11989 ]) [0 *_44+0 S1 A8])
        (const_int 0 [0])) strfmon_l.c:520 -1
     (nil))
(insn 1047 1046 1048 224 (parallel [
            (set (reg:DI 580)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:522 -1
     (nil))
(insn 1048 1047 1049 224 (set (mem/c:DI (reg:DI 580) [0 MEM[(void *)&info]+0 S8 A128])
        (const_int 0 [0])) strfmon_l.c:522 -1
     (nil))
(insn 1049 1048 1050 224 (set (mem/c:DI (plus:DI (reg:DI 580)
                (const_int 8 [0x8])) [0 MEM[(void *)&info]+8 S8 A64])
        (const_int 0 [0])) strfmon_l.c:522 -1
     (nil))
(insn 1050 1049 1051 224 (set (mem/c:SI (plus:DI (reg:DI 580)
                (const_int 16 [0x10])) [0 MEM[(void *)&info]+16 S4 A128])
        (const_int 0 [0])) strfmon_l.c:522 -1
     (nil))
(insn 1051 1050 1052 224 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -272 [0xfffffffffffffef0])) [2 info.prec+0 S4 A128])
        (reg/v:SI 153 [ right_prec ])) strfmon_l.c:523 -1
     (nil))
(insn 1052 1051 1053 224 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int 0 [0]))) strfmon_l.c:524 -1
     (nil))
(jump_insn 1053 1052 1054 224 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1662)
            (pc))) strfmon_l.c:524 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1662)
(note 1054 1053 1055 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 1055 1054 1659 225 (parallel [
            (set (reg:SI 184 [ D.11991 ])
                (plus:SI (reg/v:SI 153 [ right_prec ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:524 -1
     (nil))
(jump_insn 1659 1055 1660 225 (set (pc)
        (label_ref 1056)) -1
     (nil)
 -> 1056)
(barrier 1660 1659 1662)
(code_label 1662 1660 1661 226 174 "" [1 uses])
(note 1661 1662 157 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 157 1661 1056 226 (set (reg:SI 184 [ D.11991 ])
        (const_int 0 [0])) strfmon_l.c:524 -1
     (nil))
(code_label 1056 157 1057 227 98 "" [1 uses])
(note 1057 1056 1058 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 227 (parallel [
            (set (reg:SI 581)
                (plus:SI (reg:SI 184 [ D.11991 ])
                    (reg/v:SI 150 [ left_prec ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:524 -1
     (nil))
(insn 1059 1058 1060 227 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -268 [0xfffffffffffffef4])) [2 info.width+0 S4 A32])
        (reg:SI 581)) strfmon_l.c:524 -1
     (nil))
(insn 1060 1059 1062 227 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -264 [0xfffffffffffffef8])) [2 info.spec+0 S4 A64])
        (const_int 102 [0x66])) strfmon_l.c:525 -1
     (nil))
(insn 1062 1060 1063 227 (parallel [
            (set (reg:QI 583)
                (and:QI (subreg:QI (reg/v:SI 155 [ is_long_double ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:526 -1
     (nil))
(insn 1063 1062 1064 227 (set (reg:QI 584)
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [19 info.is_long_double+0 S1 A32])) strfmon_l.c:526 -1
     (nil))
(insn 1064 1063 1065 227 (parallel [
            (set (reg:QI 585)
                (and:QI (reg:QI 584)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:526 -1
     (nil))
(insn 1065 1064 1066 227 (parallel [
            (set (reg:QI 586)
                (ior:QI (reg:QI 585)
                    (reg:QI 583)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:526 -1
     (nil))
(insn 1066 1065 1068 227 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [19 info.is_long_double+0 S1 A32])
        (reg:QI 586)) strfmon_l.c:526 -1
     (nil))
(insn 1068 1066 1069 227 (parallel [
            (set (reg:QI 588)
                (ashift:QI (reg:QI 242 [ D.11986 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:527 -1
     (nil))
(insn 1069 1068 1070 227 (set (reg:QI 589)
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [19 info.group+0 S1 A32])) strfmon_l.c:527 -1
     (nil))
(insn 1070 1069 1071 227 (parallel [
            (set (reg:QI 590)
                (and:QI (reg:QI 589)
                    (const_int 127 [0x7f])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:527 -1
     (nil))
(insn 1071 1070 1072 227 (parallel [
            (set (reg:QI 591)
                (ior:QI (reg:QI 590)
                    (reg:QI 588)))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:527 -1
     (nil))
(insn 1072 1071 1073 227 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -260 [0xfffffffffffffefc])) [19 info.group+0 S1 A32])
        (reg:QI 591)) strfmon_l.c:527 -1
     (nil))
(insn 1073 1072 1074 227 (set (reg:SI 592)
        (sign_extend:SI (reg/v:QI 143 [ pad ]))) strfmon_l.c:528 -1
     (nil))
(insn 1074 1073 1077 227 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -256 [0xffffffffffffff00])) [2 info.pad+0 S4 A128])
        (reg:SI 592)) strfmon_l.c:528 -1
     (nil))
(insn 1077 1074 1078 227 (set (reg:QI 595)
        (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -259 [0xfffffffffffffefd])) [0 +0 S1 A8])) strfmon_l.c:529 -1
     (nil))
(insn 1078 1077 1079 227 (parallel [
            (set (reg:QI 596)
                (ior:QI (reg:QI 595)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:529 -1
     (nil))
(insn 1079 1078 1080 227 (set (mem/j/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -259 [0xfffffffffffffefd])) [0 +0 S1 A8])
        (reg:QI 596)) strfmon_l.c:529 -1
     (nil))
(insn 1080 1079 1081 227 (parallel [
            (set (reg:DI 597)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -288 [0xfffffffffffffee0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:531 -1
     (nil))
(insn 1081 1080 1082 227 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -296 [0xfffffffffffffed8])) [3 ptr+0 S8 A64])
        (reg:DI 597)) strfmon_l.c:531 -1
     (nil))
(insn 1082 1081 1083 227 (parallel [
            (set (reg:DI 598)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -296 [0xfffffffffffffed8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:532 -1
     (nil))
(insn 1083 1082 1084 227 (parallel [
            (set (reg:DI 599)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:532 -1
     (nil))
(insn 1084 1083 1085 227 (parallel [
            (set (reg:DI 600)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -240 [0xffffffffffffff10])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:532 -1
     (nil))
(insn 1085 1084 1086 227 (set (reg:DI 2 cx)
        (reg:DI 598)) strfmon_l.c:532 -1
     (nil))
(insn 1086 1085 1087 227 (set (reg:DI 1 dx)
        (reg:DI 599)) strfmon_l.c:532 -1
     (nil))
(insn 1087 1086 1088 227 (set (reg:DI 4 si)
        (reg/v/f:DI 426 [ loc ])) strfmon_l.c:532 -1
     (nil))
(insn 1088 1087 1089 227 (set (reg:DI 5 di)
        (reg:DI 600)) strfmon_l.c:532 -1
     (nil))
(call_insn 1089 1088 1090 227 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___printf_fp_l") [flags 0x43]  <function_decl 0x2b008de5b438 __printf_fp_l>) [0 __printf_fp_l S1 A8])
            (const_int 0 [0]))) strfmon_l.c:532 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___printf_fp_l") [flags 0x43]  <function_decl 0x2b008de5b438 __printf_fp_l>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1090 1089 1091 227 (set (reg/v:SI 343 [ done ])
        (reg:SI 0 ax)) strfmon_l.c:532 -1
     (nil))
(insn 1091 1090 1092 227 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 343 [ done ])
            (const_int 0 [0]))) strfmon_l.c:533 -1
     (nil))
(jump_insn 1092 1091 1093 227 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1369)
            (pc))) strfmon_l.c:533 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 1369)
(note 1093 1092 1094 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 1094 1093 1095 228 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 151 [ D.11989 ]) [0 *_44+0 S1 A8])
            (const_int 0 [0]))) strfmon_l.c:536 -1
     (nil))
(jump_insn 1095 1094 1096 228 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) strfmon_l.c:536 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 329)
(note 1096 1095 1097 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 1097 1096 1098 229 (set (reg:DI 601 [ D.11987 ])
        (sign_extend:DI (reg/v:SI 343 [ done ]))) strfmon_l.c:542 -1
     (nil))
(insn 1098 1097 1099 229 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 140 [ s ])
                    (reg:DI 601 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:542 -1
     (nil))
(insn 1099 1098 1100 229 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ cs_precedes ])
            (const_int 0 [0]))) strfmon_l.c:544 -1
     (nil))
(jump_insn 1100 1099 1101 229 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1243)
            (pc))) strfmon_l.c:544 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1243)
(note 1101 1100 1102 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 1102 1101 1103 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 3 [0x3]))) strfmon_l.c:546 -1
     (nil))
(jump_insn 1103 1102 1104 230 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1490)
            (pc))) strfmon_l.c:546 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1490)
(note 1104 1103 1105 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 1105 1104 1106 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 1 [0x1]))) strfmon_l.c:548 -1
     (nil))
(jump_insn 1106 1105 1107 231 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1113)
            (pc))) strfmon_l.c:548 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1113)
(note 1107 1106 1108 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 1108 1107 1109 232 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:549 -1
     (nil))
(jump_insn 1109 1108 1110 232 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:549 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 1110 1109 1111 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 233 (parallel [
            (set (reg/v/f:DI 346 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:549 -1
     (nil))
(insn 1112 1111 158 233 (set (mem:QI (reg/v/f:DI 146 [ s ]) [0 *s_506+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:549 -1
     (nil))
(insn 158 1112 1113 233 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 346 [ s ])) strfmon_l.c:549 -1
     (nil))
(code_label 1113 158 1114 234 101 "" [1 uses])
(note 1114 1113 1115 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 1115 1114 1116 234 (set (reg:QI 200 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:550 -1
     (nil))
(insn 1116 1115 1117 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:550 -1
     (nil))
(jump_insn 1117 1116 1118 234 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1664)
            (pc))) strfmon_l.c:550 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 1664)
(note 1118 1117 1119 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 1119 1118 1120 235 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:550 -1
     (nil))
(jump_insn 1120 1119 1123 235 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:550 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1123 1120 159 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 159 1123 1121 236 (set (reg/v/f:DI 349 [ _s ])
        (reg/v/f:DI 164 [ _s ])) strfmon_l.c:550 -1
     (nil))
(jump_insn 1121 159 1122 236 (set (pc)
        (label_ref 1130)) strfmon_l.c:550 -1
     (nil)
 -> 1130)
(barrier 1122 1121 1138)
(code_label 1138 1122 1124 237 105 "" [1 uses])
(note 1124 1138 1125 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 1125 1124 1126 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 348 [ s ]))) strfmon_l.c:550 -1
     (nil))
(jump_insn 1126 1125 1129 237 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:550 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1129 1126 1127 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1127 1129 1128 238 (set (pc)
        (label_ref 1132)) -1
     (nil)
 -> 1132)
(barrier 1128 1127 1130)
(code_label 1130 1128 1131 239 103 "" [1 uses])
(note 1131 1130 160 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 160 1131 1132 239 (set (reg/v/f:DI 348 [ s ])
        (reg/v/f:DI 146 [ s ])) strfmon_l.c:550 -1
     (nil))
(code_label 1132 160 1133 240 104 "" [1 uses])
(note 1133 1132 1134 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 1134 1133 1135 240 (parallel [
            (set (reg/v/f:DI 348 [ s ])
                (plus:DI (reg/v/f:DI 348 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:550 -1
     (nil))
(insn 1135 1134 1136 240 (parallel [
            (set (reg/v/f:DI 349 [ _s ])
                (plus:DI (reg/v/f:DI 349 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:550 -1
     (nil))
(insn 1136 1135 1137 240 (set (mem:QI (plus:DI (reg/v/f:DI 348 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_512, offset: -1B]+0 S1 A8])
        (reg:QI 200 [ D.11988 ])) strfmon_l.c:550 -1
     (nil))
(insn 1137 1136 1139 240 (set (reg:QI 200 [ D.11988 ])
        (mem:QI (reg/v/f:DI 349 [ _s ]) [0 MEM[base: _s_513, offset: 0B]+0 S1 A8])) strfmon_l.c:550 -1
     (nil))
(insn 1139 1137 1140 240 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:550 -1
     (nil))
(jump_insn 1140 1139 1143 240 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1138)
            (pc))) strfmon_l.c:550 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1138)
(note 1143 1140 1141 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1141 1143 1142 241 (set (pc)
        (label_ref 1482)) -1
     (nil)
 -> 1482)
(barrier 1142 1141 1484)
(code_label 1484 1142 1144 242 144 "" [1 uses])
(note 1144 1484 1145 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 242 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:555 -1
     (nil))
(jump_insn 1146 1145 1665 242 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1161)
            (pc))) strfmon_l.c:555 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1161)
(note 1665 1146 161 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 161 1665 1492 243 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 348 [ s ])) -1
     (nil))
(code_label 1492 161 1147 244 145 "" [1 uses])
(note 1147 1492 1148 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 1148 1147 1149 244 (parallel [
            (set (reg:SI 602 [ D.11985 ])
                (plus:SI (reg/v:SI 157 [ other_sign_posn ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:559 -1
     (nil))
(insn 1149 1148 1150 244 (parallel [
            (set (reg:SI 603 [ D.11985 ])
                (and:SI (reg:SI 602 [ D.11985 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:559 -1
     (nil))
(insn 1150 1149 1151 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 603 [ D.11985 ])
            (const_int 0 [0]))) strfmon_l.c:559 -1
     (nil))
(insn 1151 1150 1152 244 (set (reg:QI 605 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:559 -1
     (nil))
(insn 1152 1151 1153 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 1 [0x1]))) strfmon_l.c:559 -1
     (nil))
(insn 1153 1152 1154 244 (set (reg:QI 607 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:559 -1
     (nil))
(insn 1154 1153 1155 244 (parallel [
            (set (reg:QI 608 [ D.11986 ])
                (ior:QI (reg:QI 607 [ D.11986 ])
                    (reg:QI 171 [ D.11986 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:559 -1
     (nil))
(insn 1155 1154 1156 244 (parallel [
            (set (reg:QI 609 [ D.11986 ])
                (ior:QI (reg:QI 605 [ D.11986 ])
                    (reg:QI 608 [ D.11986 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:559 -1
     (nil))
(insn 1156 1155 1157 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 1 [0x1]))) strfmon_l.c:559 -1
     (nil))
(insn 1157 1156 1158 244 (set (reg:QI 611 [ D.11986 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) strfmon_l.c:559 -1
     (nil))
(insn 1158 1157 1159 244 (parallel [
            (set (reg:QI 612 [ D.11999 ])
                (and:QI (reg:QI 609 [ D.11986 ])
                    (reg:QI 611 [ D.11986 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:559 -1
     (nil))
(insn 1159 1158 1160 244 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 612 [ D.11999 ])
            (const_int 0 [0]))) strfmon_l.c:559 -1
     (nil))
(jump_insn 1160 1159 1666 244 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1168)
            (pc))) strfmon_l.c:559 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1168)
(note 1666 1160 162 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 162 1666 1161 245 (set (reg/v/f:DI 348 [ s ])
        (reg/v/f:DI 146 [ s ])) -1
     (nil))
(code_label 1161 162 1162 246 106 "" [1 uses])
(note 1162 1161 1163 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 1163 1162 1164 246 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 348 [ s ]))) strfmon_l.c:560 -1
     (nil))
(jump_insn 1164 1163 1165 246 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:560 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 1165 1164 1166 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1165 1167 247 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 348 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:560 -1
     (nil))
(insn 1167 1166 1168 247 (set (mem:QI (reg/v/f:DI 348 [ s ]) [0 *s_667+0 S1 A8])
        (reg/v:QI 237 [ space_char ])) strfmon_l.c:560 -1
     (nil))
(code_label 1168 1167 1169 248 107 "" [1 uses])
(note 1169 1168 1170 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 1170 1169 1171 248 (set (reg:CCNO 17 flags)
        (compare:CCNO (subreg:SI (reg/v:DI 234 [ currency_symbol_len ]) 0)
            (const_int 0 [0]))) strfmon_l.c:561 -1
     (nil))
(jump_insn 1171 1170 1172 248 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) strfmon_l.c:561 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1199)
(note 1172 1171 1173 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 1173 1172 1174 249 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 146 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:561 -1
     (nil))
(jump_insn 1174 1173 1177 249 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:561 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1177 1174 1175 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1175 1177 1176 250 (set (pc)
        (label_ref 1185)) strfmon_l.c:561 -1
     (nil)
 -> 1185)
(barrier 1176 1175 1196)
(code_label 1196 1176 1178 251 111 "" [1 uses])
(note 1178 1196 1179 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 1179 1178 1180 251 (parallel [
            (set (reg:DI 371 [ ivtmp.109 ])
                (plus:DI (reg:DI 371 [ ivtmp.109 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1180 1179 1181 251 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:561 -1
     (nil))
(jump_insn 1181 1180 1184 251 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:561 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1184 1181 1182 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1182 1184 1183 252 (set (pc)
        (label_ref 1191)) -1
     (nil)
 -> 1191)
(barrier 1183 1182 1185)
(code_label 1185 1183 1186 253 109 "" [1 uses])
(note 1186 1185 1187 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 1187 1186 1188 253 (set (reg:DI 371 [ ivtmp.109 ])
        (reg/v/f:DI 188 [ _s ])) -1
     (nil))
(insn 1188 1187 1189 253 (parallel [
            (set (reg:SI 613 [ D.11985 ])
                (plus:SI (subreg:SI (reg/v:DI 234 [ currency_symbol_len ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1189 1188 1190 253 (set (reg:DI 614 [ D.11987 ])
        (zero_extend:DI (reg:SI 613 [ D.11985 ]))) -1
     (nil))
(insn 1190 1189 1191 253 (parallel [
            (set (reg:DI 394 [ D.12000 ])
                (plus:DI (reg/v/f:DI 188 [ _s ])
                    (reg:DI 614 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1191 1190 1192 254 110 "" [1 uses])
(note 1192 1191 1193 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 1193 1192 1194 254 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:561 -1
     (nil))
(insn 1194 1193 1195 254 (set (reg:QI 358 [ D.11988 ])
        (mem:QI (reg:DI 371 [ ivtmp.109 ]) [0 MEM[base: _464, offset: 0B]+0 S1 A8])) strfmon_l.c:561 -1
     (nil))
(insn 1195 1194 1197 254 (set (mem:QI (plus:DI (reg/v/f:DI 146 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_534, offset: -1B]+0 S1 A8])
        (reg:QI 358 [ D.11988 ])) strfmon_l.c:561 -1
     (nil))
(insn 1197 1195 1198 254 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 371 [ ivtmp.109 ])
            (reg:DI 394 [ D.12000 ]))) strfmon_l.c:561 -1
     (nil))
(jump_insn 1198 1197 1199 254 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1196)
            (pc))) strfmon_l.c:561 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1196)
(code_label 1199 1198 1200 255 108 "" [2 uses])
(note 1200 1199 1201 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 1201 1200 1202 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 4 [0x4]))) strfmon_l.c:564 -1
     (nil))
(jump_insn 1202 1201 1203 255 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1243)
            (pc))) strfmon_l.c:564 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1243)
(note 1203 1202 1204 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 256 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:566 -1
     (nil))
(jump_insn 1205 1204 1206 256 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1212)
            (pc))) strfmon_l.c:566 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1212)
(note 1206 1205 1207 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 1207 1206 1208 257 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 146 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:567 -1
     (nil))
(jump_insn 1208 1207 1209 257 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:567 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 1209 1208 1210 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 1210 1209 1211 258 (parallel [
            (set (reg/v/f:DI 359 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:567 -1
     (nil))
(insn 1211 1210 163 258 (set (mem:QI (reg/v/f:DI 146 [ s ]) [0 *s_16+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:567 -1
     (nil))
(insn 163 1211 1212 258 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 359 [ s ])) strfmon_l.c:567 -1
     (nil))
(code_label 1212 163 1213 259 112 "" [1 uses])
(note 1213 1212 1214 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 1214 1213 1215 259 (set (reg:QI 362 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:568 -1
     (nil))
(insn 1215 1214 1216 259 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 362 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:568 -1
     (nil))
(jump_insn 1216 1215 1217 259 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) strfmon_l.c:568 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1284)
(note 1217 1216 1218 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 1218 1217 1219 260 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:568 -1
     (nil))
(jump_insn 1219 1218 1222 260 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:568 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1222 1219 1220 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1220 1222 1221 261 (set (pc)
        (label_ref 1229)) strfmon_l.c:568 -1
     (nil)
 -> 1229)
(barrier 1221 1220 1237)
(code_label 1237 1221 1223 262 116 "" [1 uses])
(note 1223 1237 1224 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 1224 1223 1225 262 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:568 -1
     (nil))
(jump_insn 1225 1224 1228 262 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:568 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1228 1225 1226 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1226 1228 1227 263 (set (pc)
        (label_ref 1231)) -1
     (nil)
 -> 1231)
(barrier 1227 1226 1229)
(code_label 1229 1227 1230 264 114 "" [1 uses])
(note 1230 1229 1231 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(code_label 1231 1230 1232 265 115 "" [1 uses])
(note 1232 1231 1233 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 1233 1232 1234 265 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:568 -1
     (nil))
(insn 1234 1233 1235 265 (parallel [
            (set (reg/v/f:DI 164 [ _s ])
                (plus:DI (reg/v/f:DI 164 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:568 -1
     (nil))
(insn 1235 1234 1236 265 (set (mem:QI (plus:DI (reg/v/f:DI 146 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_545, offset: -1B]+0 S1 A8])
        (reg:QI 362 [ D.11988 ])) strfmon_l.c:568 -1
     (nil))
(insn 1236 1235 1238 265 (set (reg:QI 362 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 MEM[base: _s_546, offset: 0B]+0 S1 A8])) strfmon_l.c:568 -1
     (nil))
(insn 1238 1236 1239 265 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 362 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:568 -1
     (nil))
(jump_insn 1239 1238 1242 265 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1237)
            (pc))) strfmon_l.c:568 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1237)
(note 1242 1239 1240 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1240 1242 1241 266 (set (pc)
        (label_ref 1284)) -1
     (nil)
 -> 1284)
(barrier 1241 1240 1243)
(code_label 1243 1241 1244 267 99 "" [2 uses])
(note 1244 1243 1245 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 1245 1244 1246 267 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 2 [0x2]))) strfmon_l.c:572 -1
     (nil))
(jump_insn 1246 1245 1247 267 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) strfmon_l.c:572 -1
     (int_list:REG_BR_PROB 7024 (nil))
 -> 1284)
(note 1247 1246 1248 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 1248 1247 1249 268 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 160 [ sep_by_space ])
            (const_int 2 [0x2]))) strfmon_l.c:574 -1
     (nil))
(jump_insn 1249 1248 1250 268 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1256)
            (pc))) strfmon_l.c:574 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1256)
(note 1250 1249 1251 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 269 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 146 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:575 -1
     (nil))
(jump_insn 1252 1251 1253 269 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:575 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 1253 1252 1254 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 1254 1253 1255 270 (parallel [
            (set (reg/v/f:DI 363 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:575 -1
     (nil))
(insn 1255 1254 164 270 (set (mem:QI (reg/v/f:DI 146 [ s ]) [0 *s_19+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:575 -1
     (nil))
(insn 164 1255 1256 270 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 363 [ s ])) strfmon_l.c:575 -1
     (nil))
(code_label 1256 164 1257 271 117 "" [1 uses])
(note 1257 1256 1258 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 1258 1257 1259 271 (set (reg:QI 364 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 *_s_73+0 S1 A8])) strfmon_l.c:576 -1
     (nil))
(insn 1259 1258 1260 271 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 364 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:576 -1
     (nil))
(jump_insn 1260 1259 1261 271 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1284)
            (pc))) strfmon_l.c:576 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 1284)
(note 1261 1260 1262 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 1262 1261 1263 272 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:576 -1
     (nil))
(jump_insn 1263 1262 1266 272 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:576 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1266 1263 1264 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1264 1266 1265 273 (set (pc)
        (label_ref 1273)) strfmon_l.c:576 -1
     (nil)
 -> 1273)
(barrier 1265 1264 1281)
(code_label 1281 1265 1267 274 120 "" [1 uses])
(note 1267 1281 1268 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 1268 1267 1269 274 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:576 -1
     (nil))
(jump_insn 1269 1268 1272 274 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:576 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1272 1269 1270 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1270 1272 1271 275 (set (pc)
        (label_ref 1275)) -1
     (nil)
 -> 1275)
(barrier 1271 1270 1273)
(code_label 1273 1271 1274 276 118 "" [1 uses])
(note 1274 1273 1275 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(code_label 1275 1274 1276 277 119 "" [1 uses])
(note 1276 1275 1277 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 1277 1276 1278 277 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:576 -1
     (nil))
(insn 1278 1277 1279 277 (parallel [
            (set (reg/v/f:DI 164 [ _s ])
                (plus:DI (reg/v/f:DI 164 [ _s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:576 -1
     (nil))
(insn 1279 1278 1280 277 (set (mem:QI (plus:DI (reg/v/f:DI 146 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_555, offset: -1B]+0 S1 A8])
        (reg:QI 364 [ D.11988 ])) strfmon_l.c:576 -1
     (nil))
(insn 1280 1279 1282 277 (set (reg:QI 364 [ D.11988 ])
        (mem:QI (reg/v/f:DI 164 [ _s ]) [0 MEM[base: _s_556, offset: 0B]+0 S1 A8])) strfmon_l.c:576 -1
     (nil))
(insn 1282 1280 1283 277 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 364 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:576 -1
     (nil))
(jump_insn 1283 1282 1284 277 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1281)
            (pc))) strfmon_l.c:576 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1281)
(code_label 1284 1283 1285 278 113 "" [5 uses])
(note 1285 1284 1286 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 1286 1285 1287 278 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 276 [ D.11986 ])
            (const_int 0 [0]))) strfmon_l.c:579 -1
     (nil))
(jump_insn 1287 1286 1288 278 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1294)
            (pc))) strfmon_l.c:579 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1294)
(note 1288 1287 1289 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 1289 1288 1290 279 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 146 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:580 -1
     (nil))
(jump_insn 1290 1289 1291 279 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) strfmon_l.c:580 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 213)
(note 1291 1290 1292 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 1292 1291 1293 280 (parallel [
            (set (reg/v/f:DI 365 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:580 -1
     (nil))
(insn 1293 1292 166 280 (set (mem:QI (reg/v/f:DI 146 [ s ]) [0 *s_22+0 S1 A8])
        (const_int 41 [0x29])) strfmon_l.c:580 -1
     (nil))
(insn 166 1293 1294 280 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 365 [ s ])) strfmon_l.c:580 -1
     (nil))
(code_label 1294 166 1295 281 121 "" [1 uses])
(note 1295 1294 1296 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 1296 1295 1297 281 (set (reg:DI 367 [ D.11994 ])
        (reg/v/f:DI 147 [ s ])) strfmon_l.c:583 -1
     (nil))
(insn 1297 1296 1298 281 (parallel [
            (set (reg:DI 368 [ D.11994 ])
                (minus:DI (reg/v/f:DI 146 [ s ])
                    (reg:DI 367 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:583 -1
     (nil))
(insn 1298 1297 1299 281 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 206 [ width ])
            (reg:DI 368 [ D.11994 ]))) strfmon_l.c:583 -1
     (nil))
(jump_insn 1299 1298 1300 281 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1364)
            (pc))) strfmon_l.c:583 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1364)
(note 1300 1299 1301 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 1301 1300 1302 282 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 158 [ left ])
            (const_int 0 [0]))) strfmon_l.c:585 -1
     (nil))
(jump_insn 1302 1301 1303 282 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1334)
            (pc))) strfmon_l.c:585 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1334)
(note 1303 1302 1304 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 1304 1303 1305 283 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 146 [ s ])
            (reg/f:DI 151 [ D.11989 ]))) strfmon_l.c:588 -1
     (nil))
(jump_insn 1305 1304 1306 283 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:588 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1306 1305 1307 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 1307 1306 1308 284 (parallel [
            (set (reg/v/f:DI 174 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:588 -1
     (nil))
(insn 1308 1307 1309 284 (set (mem:QI (reg/v/f:DI 146 [ s ]) [0 *s_23+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:588 -1
     (nil))
(insn 1309 1308 1310 284 (parallel [
            (set (reg:DI 615 [ D.11994 ])
                (minus:DI (reg/v/f:DI 174 [ s ])
                    (reg:DI 367 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:589 -1
     (nil))
(insn 1310 1309 1311 284 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 206 [ width ])
            (reg:DI 615 [ D.11994 ]))) strfmon_l.c:589 -1
     (nil))
(jump_insn 1311 1310 1314 284 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) strfmon_l.c:589 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1324)
(note 1314 1311 168 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 168 1314 1312 285 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 174 [ s ])) strfmon_l.c:588 -1
     (nil))
(jump_insn 1312 168 1313 285 (set (pc)
        (label_ref 1364)) strfmon_l.c:589 -1
     (nil)
 -> 1364)
(barrier 1313 1312 1330)
(code_label 1330 1313 1315 286 126 "" [1 uses])
(note 1315 1330 1316 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 1316 1315 1317 286 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:588 -1
     (nil))
(insn 1317 1316 1318 286 (set (mem:QI (plus:DI (reg/v/f:DI 146 [ s ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: s_567, offset: -1B]+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:588 -1
     (nil))
(insn 1318 1317 1319 286 (parallel [
            (set (reg:DI 616 [ D.11994 ])
                (minus:DI (reg/v/f:DI 146 [ s ])
                    (reg:DI 367 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:589 -1
     (nil))
(insn 1319 1318 1320 286 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 206 [ width ])
            (reg:DI 616 [ D.11994 ]))) strfmon_l.c:589 -1
     (nil))
(jump_insn 1320 1319 1323 286 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1326)
            (pc))) strfmon_l.c:589 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 1326)
(note 1323 1320 1321 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1321 1323 1322 287 (set (pc)
        (label_ref 1364)) -1
     (nil)
 -> 1364)
(barrier 1322 1321 1324)
(code_label 1324 1322 1325 288 124 "" [1 uses])
(note 1325 1324 167 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 167 1325 1326 288 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 174 [ s ])) strfmon_l.c:589 -1
     (nil))
(code_label 1326 167 1327 289 125 "" [1 uses])
(note 1327 1326 1328 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 1328 1327 1329 289 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.11989 ])
            (reg/v/f:DI 146 [ s ]))) strfmon_l.c:588 -1
     (nil))
(jump_insn 1329 1328 1333 289 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:588 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1333 1329 1331 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1331 1333 1332 290 (set (pc)
        (label_ref 1330)) -1
     (nil)
 -> 1330)
(barrier 1332 1331 1334)
(code_label 1334 1332 1335 291 123 "" [1 uses])
(note 1335 1334 1336 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 1336 1335 1337 291 (parallel [
            (set (reg/v:DI 172 [ dist ])
                (minus:DI (reg/v:DI 206 [ width ])
                    (reg:DI 368 [ D.11994 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:592 -1
     (nil))
(insn 1337 1336 1338 291 (parallel [
            (set (reg/v/f:DI 373 [ cp ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:593 -1
     (nil))
(insn 1338 1337 1339 291 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 147 [ s ])
            (reg/v/f:DI 373 [ cp ]))) strfmon_l.c:593 -1
     (nil))
(jump_insn 1339 1338 1340 291 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1344)
            (pc))) strfmon_l.c:593 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1344)
(note 1340 1339 1341 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 1341 1340 1342 292 (set (reg:DI 145 [ D.11987 ])
        (reg/v:DI 172 [ dist ])) -1
     (nil))
(jump_insn 1342 1341 1343 292 (set (pc)
        (label_ref 1355)) -1
     (nil)
 -> 1355)
(barrier 1343 1342 1344)
(code_label 1344 1343 1345 293 127 "" [1 uses])
(note 1345 1344 1346 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 1346 1345 1347 293 (set (reg:DI 145 [ D.11987 ])
        (reg/v:DI 172 [ dist ])) -1
     (nil))
(insn 1347 1346 1352 293 (parallel [
            (set (reg/f:DI 374 [ D.11989 ])
                (plus:DI (reg/v/f:DI 147 [ s ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 1352 1347 1348 294 129 "" [1 uses])
(note 1348 1352 1349 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 1349 1348 1350 294 (set (reg:QI 372 [ D.11988 ])
        (mem:QI (reg/v/f:DI 373 [ cp ]) [0 MEM[base: cp_779, offset: 0B]+0 S1 A8])) strfmon_l.c:594 -1
     (nil))
(insn 1350 1349 1351 294 (set (mem:QI (plus:DI (reg/v/f:DI 373 [ cp ])
                (reg:DI 145 [ D.11987 ])) [0 MEM[base: cp_779, index: _18, offset: 0B]+0 S1 A8])
        (reg:QI 372 [ D.11988 ])) strfmon_l.c:594 -1
     (nil))
(insn 1351 1350 1353 294 (parallel [
            (set (reg/v/f:DI 373 [ cp ])
                (plus:DI (reg/v/f:DI 373 [ cp ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:593 -1
     (nil))
(insn 1353 1351 1354 294 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 373 [ cp ])
            (reg/f:DI 374 [ D.11989 ]))) strfmon_l.c:593 -1
     (nil))
(jump_insn 1354 1353 1355 294 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1352)
            (pc))) strfmon_l.c:593 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1352)
(code_label 1355 1354 1356 295 128 "" [1 uses])
(note 1356 1355 1357 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 1357 1356 1361 295 (parallel [
            (set (reg/v/f:DI 146 [ s ])
                (plus:DI (reg/v/f:DI 146 [ s ])
                    (reg:DI 145 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:596 -1
     (nil))
(code_label 1361 1357 1358 296 130 "" [1 uses])
(note 1358 1361 1359 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 1359 1358 1360 296 (parallel [
            (set (reg/v:DI 172 [ dist ])
                (plus:DI (reg/v:DI 172 [ dist ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:599 -1
     (nil))
(insn 1360 1359 1362 296 (set (mem:QI (plus:DI (reg/v/f:DI 147 [ s ])
                (reg/v:DI 172 [ dist ])) [0 MEM[base: s_27, index: _641, offset: 0B]+0 S1 A8])
        (const_int 32 [0x20])) strfmon_l.c:599 -1
     (nil))
(insn 1362 1360 1363 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 172 [ dist ])
            (const_int 0 [0]))) strfmon_l.c:600 -1
     (nil))
(jump_insn 1363 1362 1364 296 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1361)
            (pc))) strfmon_l.c:600 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1361)
(code_label 1364 1363 1365 297 122 "" [3 uses])
(note 1365 1364 1366 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1365 171 297 (parallel [
            (set (reg/v/f:DI 427 [ format ])
                (plus:DI (reg/v/f:DI 185 [ format ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:282 -1
     (nil))
(insn 171 1366 1367 297 (set (reg/v/f:DI 147 [ s ])
        (reg/v/f:DI 146 [ s ])) -1
     (nil))
(jump_insn 1367 171 1368 297 (set (pc)
        (label_ref 1375)) -1
     (nil)
 -> 1375)
(barrier 1368 1367 1369)
(code_label 1369 1368 1370 298 5 "" [5 uses])
(note 1370 1369 173 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 173 1370 1371 298 (set (reg:DI 173 [ D.11990 ])
        (const_int -1 [0xffffffffffffffff])) strfmon_l.c:138 -1
     (nil))
(jump_insn 1371 173 1372 298 (set (pc)
        (label_ref 1386)) strfmon_l.c:138 -1
     (nil)
 -> 1386)
(barrier 1372 1371 1375)
(code_label 1375 1372 1376 300 131 "" [3 uses])
(note 1376 1375 1377 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(code_label 1377 1376 1378 301 2 "" [1 uses])
(note 1378 1377 1379 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 1379 1378 1381 301 (set (reg:QI 187 [ D.11988 ])
        (mem:QI (reg/v/f:DI 427 [ format ]) [0 *format_37+0 S1 A8])) strfmon_l.c:97 -1
     (nil))
(insn 1381 1379 1382 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 187 [ D.11988 ])
            (const_int 0 [0]))) strfmon_l.c:97 -1
     (nil))
(jump_insn 1382 1381 1383 301 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1380)
            (pc))) strfmon_l.c:97 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 1380)
(note 1383 1382 1384 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 1384 1383 1385 302 (set (mem:QI (reg/v/f:DI 147 [ s ]) [0 *s_27+0 S1 A8])
        (const_int 0 [0])) strfmon_l.c:606 -1
     (nil))
(insn 1385 1384 1386 302 (parallel [
            (set (reg:DI 173 [ D.11990 ])
                (minus:DI (reg/v/f:DI 147 [ s ])
                    (reg/v/f:DI 424 [ s ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:608 -1
     (nil))
(code_label 1386 1385 1387 303 132 "" [1 uses])
(note 1387 1386 1388 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 1388 1387 1389 303 (set (reg:DI 423 [ <retval> ])
        (reg:DI 173 [ D.11990 ])) -1
     (nil))
(jump_insn 1389 1388 1390 303 (set (pc)
        (label_ref 1563)) -1
     (nil)
 -> 1563)
(barrier 1390 1389 1391)
(code_label 1391 1390 1392 304 48 "" [1 uses])
(note 1392 1391 1393 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 1393 1392 1394 304 (set (reg/f:DI 618)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 208 [0xd0])) [0 current_147->values[18].string+0 S8 A64])) strfmon_l.c:355 -1
     (nil))
(insn 1394 1393 1395 304 (set (reg/v:SI 162 [ cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 618) [0 *_655+0 S1 A8]))) strfmon_l.c:355 -1
     (nil))
(insn 1395 1394 1396 304 (set (reg/f:DI 619)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 216 [0xd8])) [0 current_147->values[19].string+0 S8 A64])) strfmon_l.c:356 -1
     (nil))
(insn 1396 1395 1397 304 (set (reg/v:SI 160 [ sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 619) [0 *_650+0 S1 A8]))) strfmon_l.c:356 -1
     (nil))
(insn 1397 1396 1398 304 (set (reg/v/f:DI 165 [ other_sign_string ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 104 [0x68])) [0 current_147->values[5].string+0 S8 A64])) strfmon_l.c:359 -1
     (nil))
(insn 1398 1397 1399 304 (set (reg/f:DI 620)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 192 [0xc0])) [0 current_147->values[16].string+0 S8 A64])) strfmon_l.c:360 -1
     (nil))
(insn 1399 1398 125 304 (set (reg/v:SI 163 [ other_cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 620) [0 *_697+0 S1 A8]))) strfmon_l.c:360 -1
     (nil))
(insn 125 1399 1401 304 (set (reg:SI 181 [ D.11991 ])
        (const_int 17 [0x11])) strfmon_l.c:361 -1
     (nil))
(jump_insn 1401 125 1402 304 (set (pc)
        (label_ref 1400)) strfmon_l.c:360 -1
     (nil)
 -> 1400)
(barrier 1402 1401 1403)
(code_label 1403 1402 1404 305 49 "" [1 uses])
(note 1404 1403 1405 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 1405 1404 1406 305 (set (reg/f:DI 621)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 152 [0x98])) [0 current_147->values[11].string+0 S8 A64])) strfmon_l.c:355 -1
     (nil))
(insn 1406 1405 1407 305 (set (reg/v:SI 162 [ cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 621) [0 *_651+0 S1 A8]))) strfmon_l.c:355 -1
     (nil))
(insn 1407 1406 1408 305 (set (reg/f:DI 622)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 160 [0xa0])) [0 current_147->values[12].string+0 S8 A64])) strfmon_l.c:356 -1
     (nil))
(insn 1408 1407 1409 305 (set (reg/v:SI 160 [ sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 622) [0 *_741+0 S1 A8]))) strfmon_l.c:356 -1
     (nil))
(insn 1409 1408 1410 305 (set (reg/v/f:DI 165 [ other_sign_string ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 104 [0x68])) [0 current_147->values[5].string+0 S8 A64])) strfmon_l.c:359 -1
     (nil))
(insn 1410 1409 1411 305 (set (reg/f:DI 623)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 136 [0x88])) [0 current_147->values[9].string+0 S8 A64])) strfmon_l.c:360 -1
     (nil))
(insn 1411 1410 126 305 (set (reg/v:SI 163 [ other_cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 623) [0 *_645+0 S1 A8]))) strfmon_l.c:360 -1
     (nil))
(insn 126 1411 1412 305 (set (reg:SI 181 [ D.11991 ])
        (const_int 10 [0xa])) strfmon_l.c:361 -1
     (nil))
(jump_insn 1412 126 1413 305 (set (pc)
        (label_ref 1400)) strfmon_l.c:360 -1
     (nil)
 -> 1400)
(barrier 1413 1412 1414)
(code_label 1414 1413 1415 306 52 "" [1 uses])
(note 1415 1414 1416 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 1416 1415 1417 306 (set (reg/f:DI 624)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 136 [0x88])) [0 current_147->values[9].string+0 S8 A64])) strfmon_l.c:367 -1
     (nil))
(insn 1417 1416 1418 306 (set (reg/v:SI 162 [ cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 624) [0 *_699+0 S1 A8]))) strfmon_l.c:367 -1
     (nil))
(insn 1418 1417 1419 306 (set (reg/f:DI 625)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 144 [0x90])) [0 current_147->values[10].string+0 S8 A64])) strfmon_l.c:368 -1
     (nil))
(insn 1419 1418 1420 306 (set (reg/v:SI 160 [ sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 625) [0 *_308+0 S1 A8]))) strfmon_l.c:368 -1
     (nil))
(insn 1420 1419 1421 306 (set (reg/v/f:DI 165 [ other_sign_string ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 112 [0x70])) [0 current_147->values[6].string+0 S8 A64])) strfmon_l.c:371 -1
     (nil))
(insn 1421 1420 1422 306 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 165 [ other_sign_string ]) [0 *other_sign_string_110+0 S1 A8])
            (const_int 0 [0]))) strfmon_l.c:372 -1
     (nil))
(jump_insn 1422 1421 1425 306 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1438)
            (pc))) strfmon_l.c:372 -1
     (int_list:REG_BR_PROB 4968 (nil))
 -> 1438)
(note 1425 1422 1423 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1423 1425 1424 307 (set (pc)
        (label_ref 1440)) strfmon_l.c:372 -1
     (nil)
 -> 1440)
(barrier 1424 1423 1426)
(code_label 1426 1424 1427 308 51 "" [1 uses])
(note 1427 1426 1428 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 1428 1427 1429 308 (set (reg/f:DI 626)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 192 [0xc0])) [0 current_147->values[16].string+0 S8 A64])) strfmon_l.c:367 -1
     (nil))
(insn 1429 1428 1430 308 (set (reg/v:SI 162 [ cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 626) [0 *_701+0 S1 A8]))) strfmon_l.c:367 -1
     (nil))
(insn 1430 1429 1431 308 (set (reg/f:DI 627)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 200 [0xc8])) [0 current_147->values[17].string+0 S8 A64])) strfmon_l.c:368 -1
     (nil))
(insn 1431 1430 1432 308 (set (reg/v:SI 160 [ sep_by_space ])
        (sign_extend:SI (mem:QI (reg/f:DI 627) [0 *_101+0 S1 A8]))) strfmon_l.c:368 -1
     (nil))
(insn 1432 1431 1433 308 (set (reg/v/f:DI 165 [ other_sign_string ])
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 112 [0x70])) [0 current_147->values[6].string+0 S8 A64])) strfmon_l.c:371 -1
     (nil))
(insn 1433 1432 1434 308 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 165 [ other_sign_string ]) [0 *other_sign_string_752+0 S1 A8])
            (const_int 0 [0]))) strfmon_l.c:372 -1
     (nil))
(jump_insn 1434 1433 1437 308 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1447)
            (pc))) strfmon_l.c:372 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1447)
(note 1437 1434 1435 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1435 1437 1436 309 (set (pc)
        (label_ref 1449)) strfmon_l.c:372 -1
     (nil)
 -> 1449)
(barrier 1436 1435 1438)
(code_label 1438 1436 1439 310 135 "" [1 uses])
(note 1439 1438 174 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 174 1439 1440 310 (set (reg/v/f:DI 165 [ other_sign_string ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b008e03b3f0 *.LC0>)) strfmon_l.c:373 -1
     (nil))
(code_label 1440 174 1441 311 136 "" [1 uses])
(note 1441 1440 1442 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 1443 311 (set (reg/f:DI 628)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 152 [0x98])) [0 current_147->values[11].string+0 S8 A64])) strfmon_l.c:374 -1
     (nil))
(insn 1443 1442 128 311 (set (reg/v:SI 163 [ other_cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 628) [0 *_834+0 S1 A8]))) strfmon_l.c:374 -1
     (nil))
(insn 128 1443 1445 311 (set (reg:SI 183 [ D.11991 ])
        (const_int 12 [0xc])) strfmon_l.c:375 -1
     (nil))
(jump_insn 1445 128 1446 311 (set (pc)
        (label_ref 1444)) strfmon_l.c:374 -1
     (nil)
 -> 1444)
(barrier 1446 1445 1447)
(code_label 1447 1446 1448 312 137 "" [1 uses])
(note 1448 1447 175 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 175 1448 1449 312 (set (reg/v/f:DI 165 [ other_sign_string ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b008e03b3f0 *.LC0>)) strfmon_l.c:373 -1
     (nil))
(code_label 1449 175 1450 313 138 "" [1 uses])
(note 1450 1449 1451 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 1451 1450 1452 313 (set (reg/f:DI 629)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 208 [0xd0])) [0 current_147->values[18].string+0 S8 A64])) strfmon_l.c:374 -1
     (nil))
(insn 1452 1451 127 313 (set (reg/v:SI 163 [ other_cs_precedes ])
        (sign_extend:SI (mem:QI (reg/f:DI 629) [0 *_749+0 S1 A8]))) strfmon_l.c:374 -1
     (nil))
(insn 127 1452 1453 313 (set (reg:SI 183 [ D.11991 ])
        (const_int 19 [0x13])) strfmon_l.c:375 -1
     (nil))
(jump_insn 1453 127 1454 313 (set (pc)
        (label_ref 1444)) strfmon_l.c:374 -1
     (nil)
 -> 1444)
(barrier 1454 1453 1650)
(code_label 1650 1454 1649 314 171 "" [1 uses])
(note 1649 1650 176 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 176 1649 1455 314 (set (reg/v:SI 150 [ left_prec ])
        (const_int 0 [0])) strfmon_l.c:414 -1
     (nil))
(code_label 1455 176 1456 315 63 "" [1 uses])
(note 1456 1455 147 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 147 1456 1458 315 (set (reg/v/f:DI 140 [ s ])
        (reg/v/f:DI 147 [ s ])) strfmon_l.c:474 -1
     (nil))
(jump_insn 1458 147 1459 315 (set (pc)
        (label_ref 1457)) strfmon_l.c:374 -1
     (nil)
 -> 1457)
(barrier 1459 1458 1460)
(code_label 1460 1459 1461 316 34 "" [1 uses])
(note 1461 1460 1463 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 1463 1461 1464 316 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:312 -1
     (nil))
(jump_insn 1464 1463 1467 316 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1668)
            (pc))) strfmon_l.c:312 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1668)
(note 1467 1464 1465 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1465 1467 1466 317 (set (pc)
        (label_ref 1516)) strfmon_l.c:312 -1
     (nil)
 -> 1516)
(barrier 1466 1465 1468)
(code_label 1468 1466 1469 318 36 "" [1 uses])
(note 1469 1468 1470 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 1470 1469 1471 318 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:312 -1
     (nil))
(jump_insn 1471 1470 1474 318 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1672)
            (pc))) strfmon_l.c:312 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1672)
(note 1474 1471 1472 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1472 1474 1473 319 (set (pc)
        (label_ref 1523)) strfmon_l.c:312 -1
     (nil)
 -> 1523)
(barrier 1473 1472 1475)
(code_label 1475 1473 1476 320 83 "" [1 uses])
(note 1476 1475 1477 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 1477 1476 1478 320 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int 4 [0x4]))) strfmon_l.c:492 -1
     (nil))
(jump_insn 1478 1477 1481 320 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 934)
            (pc))) strfmon_l.c:492 -1
     (int_list:REG_BR_PROB 2137 (nil))
 -> 934)
(note 1481 1478 1479 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1479 1481 1480 321 (set (pc)
        (label_ref 974)) strfmon_l.c:492 -1
     (nil)
 -> 974)
(barrier 1480 1479 1664)
(code_label 1664 1480 1663 322 175 "" [1 uses])
(note 1663 1664 177 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 177 1663 1482 322 (set (reg/v/f:DI 348 [ s ])
        (reg/v/f:DI 146 [ s ])) strfmon_l.c:550 -1
     (nil))
(code_label 1482 177 1483 323 102 "" [1 uses])
(note 1483 1482 1485 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 1485 1483 1486 323 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144 [ print_curr_symbol ])
            (const_int 0 [0]))) strfmon_l.c:553 -1
     (nil))
(jump_insn 1486 1485 1489 323 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1484)
            (pc))) strfmon_l.c:553 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1484)
(note 1489 1486 165 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 165 1489 1487 324 (set (reg/v/f:DI 146 [ s ])
        (reg/v/f:DI 348 [ s ])) strfmon_l.c:553 -1
     (nil))
(jump_insn 1487 165 1488 324 (set (pc)
        (label_ref 1284)) strfmon_l.c:553 -1
     (nil)
 -> 1284)
(barrier 1488 1487 1490)
(code_label 1490 1488 1491 325 100 "" [1 uses])
(note 1491 1490 1493 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 1493 1491 1494 325 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144 [ print_curr_symbol ])
            (const_int 0 [0]))) strfmon_l.c:553 -1
     (nil))
(jump_insn 1494 1493 1497 325 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1492)
            (pc))) strfmon_l.c:553 -1
     (int_list:REG_BR_PROB 2985 (nil))
 -> 1492)
(note 1497 1494 1495 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1495 1497 1496 326 (set (pc)
        (label_ref 1199)) strfmon_l.c:553 -1
     (nil)
 -> 1199)
(barrier 1496 1495 1498)
(code_label 1498 1496 1499 327 35 "" [1 uses])
(note 1499 1498 1500 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1499 1501 327 (set (reg/f:DI 630)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 168 [0xa8])) [0 current_147->values[13].string+0 S8 A64])) strfmon_l.c:311 -1
     (nil))
(insn 1501 1500 1502 327 (set (reg/v:SI 156 [ other_sign_posn ])
        (sign_extend:SI (mem:QI (reg/f:DI 630) [0 *_542+0 S1 A8]))) strfmon_l.c:311 -1
     (nil))
(insn 1502 1501 1503 327 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:312 -1
     (nil))
(jump_insn 1503 1502 1506 327 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1676)
            (pc))) strfmon_l.c:312 612 {*jcc_1}
     (int_list:REG_BR_PROB 2727 (nil))
 -> 1676)
(note 1506 1503 1504 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1504 1506 1505 328 (set (pc)
        (label_ref 1530)) strfmon_l.c:312 -1
     (nil)
 -> 1530)
(barrier 1505 1504 1507)
(code_label 1507 1505 1508 329 33 "" [1 uses])
(note 1508 1507 1509 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 1509 1508 1510 329 (set (reg/f:DI 631)
        (mem/f:DI (plus:DI (reg/v/f:DI 186 [ current ])
                (const_int 224 [0xe0])) [0 current_147->values[20].string+0 S8 A64])) strfmon_l.c:311 -1
     (nil))
(insn 1510 1509 1511 329 (set (reg/v:SI 156 [ other_sign_posn ])
        (sign_extend:SI (mem:QI (reg/f:DI 631) [0 *_516+0 S1 A8]))) strfmon_l.c:311 -1
     (nil))
(insn 1511 1510 1512 329 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 157 [ other_sign_posn ])
            (const_int -2 [0xfffffffffffffffe]))) strfmon_l.c:312 -1
     (nil))
(jump_insn 1512 1511 1515 329 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1680)
            (pc))) strfmon_l.c:312 612 {*jcc_1}
     (int_list:REG_BR_PROB 2713 (nil))
 -> 1680)
(note 1515 1512 1513 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1513 1515 1514 330 (set (pc)
        (label_ref 1538)) strfmon_l.c:312 -1
     (nil)
 -> 1538)
(barrier 1514 1513 1516)
(code_label 1516 1514 1517 331 142 "" [1 uses])
(note 1517 1516 1518 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 1518 1517 1519 331 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:315 -1
     (nil))
(jump_insn 1519 1518 1522 331 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1684)
            (pc))) strfmon_l.c:315 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1684)
(note 1522 1519 116 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 116 1522 117 332 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:294 -1
     (nil))
(insn 117 116 118 332 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 118 117 1520 332 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(jump_insn 1520 118 1521 332 (set (pc)
        (label_ref 493)) strfmon_l.c:315 -1
     (nil)
 -> 493)
(barrier 1521 1520 1523)
(code_label 1523 1521 1524 333 143 "" [1 uses])
(note 1524 1523 1525 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 1525 1524 1526 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:315 -1
     (nil))
(jump_insn 1526 1525 1529 333 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1688)
            (pc))) strfmon_l.c:315 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1688)
(note 1529 1526 119 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 119 1529 120 334 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:301 -1
     (nil))
(insn 120 119 1527 334 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(jump_insn 1527 120 1528 334 (set (pc)
        (label_ref 493)) strfmon_l.c:315 -1
     (nil)
 -> 493)
(barrier 1528 1527 1530)
(code_label 1530 1528 1531 335 146 "" [1 uses])
(note 1531 1530 1533 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 1533 1531 1534 335 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:315 -1
     (nil))
(jump_insn 1534 1533 1537 335 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1693)
            (pc))) strfmon_l.c:315 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1693)
(note 1537 1534 113 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 113 1537 114 336 (set (reg/v:SI 312 [ int_format ])
        (const_int 0 [0])) strfmon_l.c:301 -1
     (nil))
(insn 114 113 1535 336 (set (reg/v:QI 237 [ space_char ])
        (const_int 32 [0x20])) strfmon_l.c:300 -1
     (nil))
(jump_insn 1535 114 1536 336 (set (pc)
        (label_ref 493)) strfmon_l.c:315 -1
     (nil)
 -> 493)
(barrier 1536 1535 1538)
(code_label 1538 1536 1539 337 147 "" [1 uses])
(note 1539 1538 1540 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 1540 1539 1541 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ right_prec ])
            (const_int -1 [0xffffffffffffffff]))) strfmon_l.c:315 -1
     (nil))
(jump_insn 1541 1540 1544 337 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1697)
            (pc))) strfmon_l.c:315 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1697)
(note 1544 1541 121 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 121 1544 122 338 (set (reg/v:SI 312 [ int_format ])
        (const_int 1 [0x1])) strfmon_l.c:294 -1
     (nil))
(insn 122 121 123 338 (parallel [
            (set (reg/v/f:DI 188 [ _s ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -304 [0xfffffffffffffed0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:292 -1
     (nil))
(insn 123 122 1542 338 (set (reg/v:DI 234 [ currency_symbol_len ])
        (const_int 3 [0x3])) strfmon_l.c:291 -1
     (nil))
(jump_insn 1542 123 1543 338 (set (pc)
        (label_ref 493)) strfmon_l.c:315 -1
     (nil)
 -> 493)
(barrier 1543 1542 1557)
(code_label 1557 1543 1545 339 150 "" [1 uses])
(note 1545 1557 1546 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 1546 1545 1547 339 (parallel [
            (set (reg/v:SI 393 [ left_pad ])
                (minus:SI (reg/v:SI 169 [ other_left_bytes ])
                    (reg/v:SI 168 [ left_bytes ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:461 -1
     (nil))
(insn 1547 1546 1548 339 (parallel [
            (set (reg:DI 632 [ D.11987 ])
                (plus:DI (reg/v:DI 425 [ maxsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:474 -1
     (nil))
(insn 1548 1547 1549 339 (parallel [
            (set (reg/f:DI 271 [ D.11989 ])
                (plus:DI (reg/v/f:DI 424 [ s ])
                    (reg:DI 632 [ D.11987 ])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:474 -1
     (nil))
(insn 1549 1548 1550 339 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 147 [ s ])
            (reg/f:DI 271 [ D.11989 ]))) strfmon_l.c:474 -1
     (nil))
(jump_insn 1550 1549 1554 339 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 213)
            (pc))) strfmon_l.c:474 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 213)
(note 1554 1550 1552 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1552 1554 1553 340 (set (pc)
        (label_ref 1551)) strfmon_l.c:474 -1
     (nil)
 -> 1551)
(barrier 1553 1552 1555)
(code_label 1555 1553 1556 341 70 "" [5 uses])
(note 1556 1555 1558 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 1558 1556 1559 341 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 168 [ left_bytes ])
            (reg/v:SI 169 [ other_left_bytes ]))) strfmon_l.c:460 -1
     (nil))
(jump_insn 1559 1558 1562 341 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1557)
            (pc))) strfmon_l.c:460 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1557)
(note 1562 1559 1560 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1560 1562 1561 342 (set (pc)
        (label_ref 1455)) strfmon_l.c:460 -1
     (nil)
 -> 1455)
(barrier 1561 1560 1563)
(code_label 1563 1561 1566 343 1 "" [1 uses])
(note 1566 1563 1564 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 1564 1566 1565 343 (set (reg/i:DI 0 ax)
        (reg:DI 423 [ <retval> ])) strfmon_l.c:609 -1
     (nil))
(insn 1565 1564 0 343 (use (reg/i:DI 0 ax)) strfmon_l.c:609 -1
     (nil))

;; Function ___strfmon_l (___strfmon_l, funcdef_no=58, decl_uid=11381, cgraph_uid=58, symbol_order=67)

Partition 0: size 24 align 8
	ap

;; Generating RTL for gimple basic block 2
Predictions for insn 9 bb 3
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%


try_optimize_cfg iteration 1

Edge 2->4 redirected to 5
Merging block 4 into block 3...
Merged blocks 3 and 4.
Merged 3 and 4 without moving.
Removing jump 36.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 20 NOTE_INSN_DELETED)
(note 20 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 20 3 2 (set (reg/v/f:DI 89 [ s ])
        (reg:DI 5 di [ s ])) strfmon_l.c:613 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 90 [ maxsize ])
        (reg:DI 4 si [ maxsize ])) strfmon_l.c:613 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ loc ])
        (reg:DI 1 dx [ loc ])) strfmon_l.c:613 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ format ])
        (reg:DI 2 cx [ format ])) strfmon_l.c:613 -1
     (nil))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 32 [0x20])) [0  S8 A8])
        (reg:DI 37 r8)) strfmon_l.c:613 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int 40 [0x28])) [0  S8 A8])
        (reg:DI 38 r9)) strfmon_l.c:613 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax)
            (const_int 0 [0]))) strfmon_l.c:613 -1
     (nil))
(jump_insn 9 8 42 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) strfmon_l.c:613 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 44)
(note 42 9 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 42 11 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 48 [0x30])) [0  S16 A128])
        (reg:V4SF 21 xmm0)) strfmon_l.c:613 -1
     (nil))
(insn 11 10 12 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 64 [0x40])) [0  S16 A128])
        (reg:V4SF 22 xmm1)) strfmon_l.c:613 -1
     (nil))
(insn 12 11 13 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 80 [0x50])) [0  S16 A128])
        (reg:V4SF 23 xmm2)) strfmon_l.c:613 -1
     (nil))
(insn 13 12 14 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 96 [0x60])) [0  S16 A128])
        (reg:V4SF 24 xmm3)) strfmon_l.c:613 -1
     (nil))
(insn 14 13 15 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 112 [0x70])) [0  S16 A128])
        (reg:V4SF 25 xmm4)) strfmon_l.c:613 -1
     (nil))
(insn 15 14 16 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 128 [0x80])) [0  S16 A128])
        (reg:V4SF 26 xmm5)) strfmon_l.c:613 -1
     (nil))
(insn 16 15 17 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 144 [0x90])) [0  S16 A128])
        (reg:V4SF 27 xmm6)) strfmon_l.c:613 -1
     (nil))
(insn 17 16 19 3 (set (mem/c:V4SF (plus:DI (reg/f:DI 20 frame)
                (const_int 160 [0xa0])) [0  S16 A128])
        (reg:V4SF 28 xmm7)) strfmon_l.c:613 -1
     (nil))
(note 19 17 44 3 NOTE_INSN_FUNCTION_BEG)
(code_label 44 19 21 5 336 "" [1 uses])
(note 21 44 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:616 -1
     (nil))
(insn 23 22 24 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 MEM[(struct [1] *)&ap].gp_offset+0 S4 A64])
        (const_int 32 [0x20])) strfmon_l.c:616 -1
     (nil))
(insn 24 23 25 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 MEM[(struct [1] *)&ap].fp_offset+0 S4 A32])
        (const_int 48 [0x30])) strfmon_l.c:616 -1
     (nil))
(insn 25 24 26 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 MEM[(struct [1] *)&ap].overflow_arg_area+0 S8 A64])
        (reg/f:DI 81 virtual-incoming-args)) strfmon_l.c:616 -1
     (nil))
(insn 26 25 27 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 MEM[(struct [1] *)&ap].reg_save_area+0 S8 A64])
        (reg/f:DI 20 frame)) strfmon_l.c:616 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) strfmon_l.c:618 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 37 r8)
        (reg:DI 94)) strfmon_l.c:618 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 2 cx)
        (reg/v/f:DI 92 [ format ])) strfmon_l.c:618 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 1 dx)
        (reg/v/f:DI 91 [ loc ])) strfmon_l.c:618 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 4 si)
        (reg/v:DI 90 [ maxsize ])) strfmon_l.c:618 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ s ])) strfmon_l.c:618 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__vstrfmon_l") [flags 0x1]  <function_decl 0x2b008dc6e000 __vstrfmon_l>) [0 __vstrfmon_l S1 A8])
            (const_int 0 [0]))) strfmon_l.c:618 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__vstrfmon_l") [flags 0x1]  <function_decl 0x2b008dc6e000 __vstrfmon_l>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 34 33 35 5 (set (reg/v:DI 87 [ res ])
        (reg:DI 0 ax)) strfmon_l.c:618 -1
     (nil))
(insn 35 34 39 5 (set (reg:DI 88 [ <retval> ])
        (reg/v:DI 87 [ res ])) strfmon_l.c:622 -1
     (nil))
(insn 39 35 40 5 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) strfmon_l.c:623 -1
     (nil))
(insn 40 39 0 5 (use (reg/i:DI 0 ax)) strfmon_l.c:623 -1
     (nil))
