
;; Function __mpn_divrem (__mpn_divrem, funcdef_no=4, decl_uid=2421, cgraph_uid=4, symbol_order=7)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55
Edge 4->6 redirected to 59
Edge 13->16 redirected to 60
Edge 14->16 redirected to 61
Edge 33->37 redirected to 63
Edge 37->55 redirected to 65
Edge 45->52 redirected to 67
Purged edges from bb 70
Purged non-fallthru edges from bb 72


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 43 failed.
Edge 19->21 redirected to 22
Forwarding edge 20->21 to 22 failed.
Deleted label in block 21.
Forwarding edge 56->57 to 54 failed.
Forwarding edge 64->65 to 67 failed.
Removing jump 383.
Merging block 73 into block 72...
Merged blocks 72 and 73.
Merged 72 and 73 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 43 failed.
Forwarding edge 20->21 to 22 failed.
Forwarding edge 56->57 to 54 failed.
Forwarding edge 64->65 to 67 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 47 NOTE_INSN_DELETED)
(note 47 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 47 25 2 (set (reg/v/f:DI 209 [ qp ])
        (reg:DI 5 di [ qp ])) divrem.c:46 -1
     (nil))
(insn 25 24 26 2 (set (reg/v:DI 210 [ qextra_limbs ])
        (reg:DI 4 si [ qextra_limbs ])) divrem.c:46 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 211 [ np ])
        (reg:DI 1 dx [ np ])) divrem.c:46 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:DI 212 [ nsize ])
        (reg:DI 2 cx [ nsize ])) divrem.c:46 -1
     (nil))
(insn 28 27 29 2 (set (reg/v/f:DI 213 [ dp ])
        (reg:DI 37 r8 [ dp ])) divrem.c:46 -1
     (nil))
(insn 29 28 30 2 (set (reg/v:DI 214 [ dsize ])
        (reg:DI 38 r9 [ dsize ])) divrem.c:46 -1
     (nil))
(note 30 29 49 2 NOTE_INSN_FUNCTION_BEG)
(insn 49 30 50 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 214 [ dsize ])
            (const_int 1 [0x1]))) divrem.c:49 -1
     (nil))
(jump_insn 50 49 416 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) divrem.c:49 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 65)
(note 416 50 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 51 416 52 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 214 [ dsize ])
            (const_int 2 [0x2]))) divrem.c:49 -1
     (nil))
(jump_insn 52 51 417 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) divrem.c:49 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 117)
(note 417 52 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 53 417 54 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 214 [ dsize ])
            (const_int 0 [0]))) divrem.c:49 -1
     (nil))
(jump_insn 54 53 418 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) divrem.c:49 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 57)
(note 418 54 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 55 418 56 6 (set (pc)
        (label_ref 236)) divrem.c:49 -1
     (nil)
 -> 236)
(barrier 56 55 57)
(code_label 57 56 58 7 5 "" [1 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (set (reg:DI 215)
        (const_int 1 [0x1])) divrem.c:54 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 218)
        (const_int 0 [0])) divrem.c:54 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg:DI 216 [ D.2912 ])
                (div:DI (reg:DI 215)
                    (reg:DI 218)))
            (set (reg:DI 217)
                (mod:DI (reg:DI 215)
                    (reg:DI 218)))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:54 -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 127 [ D.2910 ])
        (reg:DI 216 [ D.2912 ])) divrem.c:54 -1
     (nil))
(jump_insn 63 62 64 7 (set (pc)
        (label_ref 380)) divrem.c:54 -1
     (nil)
 -> 380)
(barrier 64 63 65)
(code_label 65 64 66 8 3 "" [1 uses])
(note 66 65 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 8 (set (reg/v:DI 131 [ d ])
        (mem:DI (reg/v/f:DI 213 [ dp ]) [1 *dp_61(D)+0 S8 A64])) divrem.c:62 -1
     (nil))
(insn 68 67 69 8 (set (reg/v:DI 143 [ n1 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg/v:DI 212 [ nsize ])
                        (const_int 8 [0x8]))
                    (reg/v/f:DI 211 [ np ]))
                (const_int -8 [0xfffffffffffffff8])) [1 *_68+0 S8 A64])) divrem.c:63 -1
     (nil))
(insn 69 68 70 8 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 131 [ d ])
            (reg/v:DI 143 [ n1 ]))) divrem.c:65 -1
     (nil))
(jump_insn 70 69 71 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 392)
            (pc))) divrem.c:65 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 392)
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 32 9 (parallel [
            (set (reg/v:DI 143 [ n1 ])
                (minus:DI (reg/v:DI 143 [ n1 ])
                    (reg/v:DI 131 [ d ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:67 -1
     (nil))
(insn 32 72 389 9 (set (reg/v:DI 111 [ most_significant_q_limb ])
        (const_int 1 [0x1])) divrem.c:68 -1
     (nil))
(jump_insn 389 32 390 9 (set (pc)
        (label_ref 73)) -1
     (nil)
 -> 73)
(barrier 390 389 392)
(code_label 392 390 391 10 38 "" [1 uses])
(note 391 392 31 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 31 391 73 10 (set (reg/v:DI 111 [ most_significant_q_limb ])
        (const_int 0 [0])) divrem.c:47 -1
     (nil))
(code_label 73 31 74 11 7 "" [1 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (parallel [
            (set (reg:DI 137 [ D.2911 ])
                (ashift:DI (reg/v:DI 210 [ qextra_limbs ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:71 -1
     (nil))
(insn 76 75 77 11 (parallel [
            (set (reg/v/f:DI 138 [ qp ])
                (plus:DI (reg/v/f:DI 209 [ qp ])
                    (reg:DI 137 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:71 -1
     (nil))
(insn 77 76 78 11 (parallel [
            (set (reg/v:DI 144 [ i ])
                (plus:DI (reg/v:DI 212 [ nsize ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:72 -1
     (nil))
(insn 78 77 79 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 144 [ i ])
            (const_int 0 [0]))) divrem.c:72 -1
     (nil))
(jump_insn 79 78 80 11 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) divrem.c:72 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 93)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 12 (parallel [
            (set (reg:DI 219 [ D.2911 ])
                (ashift:DI (reg/v:DI 144 [ i ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 82 81 90 12 (parallel [
            (set (reg:DI 145 [ ivtmp.69 ])
                (plus:DI (reg/v/f:DI 138 [ qp ])
                    (reg:DI 219 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 90 82 83 13 9 "" [1 uses])
(note 83 90 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 13 (set (reg:DI 222)
        (mem:DI (plus:DI (mult:DI (reg/v:DI 144 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 211 [ np ])) [1 MEM[base: np_67(D), index: _248, step: 8, offset: 0B]+0 S8 A64])) divrem.c:73 -1
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:DI 220)
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 222)
                        (reg/v:DI 143 [ n1 ])
                        (reg/v:DI 131 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:73)
                        (asm_input:DI ("1") divrem.c:73)
                        (asm_input:DI ("rm") divrem.c:73)
                    ]
                     [] divrem.c:73))
            (set (reg:DI 221 [ n1 ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 222)
                        (reg/v:DI 143 [ n1 ])
                        (reg/v:DI 131 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:73)
                        (asm_input:DI ("1") divrem.c:73)
                        (asm_input:DI ("rm") divrem.c:73)
                    ]
                     [] divrem.c:73))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:73 -1
     (nil))
(insn 86 85 87 13 (set (mem:DI (reg:DI 145 [ ivtmp.69 ]) [1 *_79+0 S8 A64])
        (reg:DI 220)) divrem.c:73 -1
     (nil))
(insn 87 86 88 13 (set (reg/v:DI 143 [ n1 ])
        (reg:DI 221 [ n1 ])) divrem.c:73 -1
     (nil))
(insn 88 87 89 13 (parallel [
            (set (reg/v:DI 144 [ i ])
                (plus:DI (reg/v:DI 144 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:72 -1
     (nil))
(insn 89 88 91 13 (parallel [
            (set (reg:DI 145 [ ivtmp.69 ])
                (plus:DI (reg:DI 145 [ ivtmp.69 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 91 89 92 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 144 [ i ])
            (const_int -1 [0xffffffffffffffff]))) divrem.c:72 -1
     (nil))
(jump_insn 92 91 93 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) divrem.c:72 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 90)
(code_label 93 92 94 14 8 "" [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:DI 210 [ qextra_limbs ])
            (const_int 0 [0]))) divrem.c:76 -1
     (nil))
(jump_insn 96 95 97 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) divrem.c:76 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 112)
(note 97 96 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 15 (parallel [
            (set (reg:DI 184 [ D.2911 ])
                (plus:DI (reg:DI 137 [ D.2911 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 99 98 100 15 (parallel [
            (set (reg:DI 194 [ ivtmp.57 ])
                (plus:DI (reg/v/f:DI 138 [ qp ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 100 99 101 15 (set (reg:DI 224)
        (const_int -8 [0xfffffffffffffff8])) -1
     (nil))
(insn 101 100 102 15 (parallel [
            (set (reg:DI 223 [ D.2913 ])
                (minus:DI (reg:DI 224)
                    (reg:DI 137 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 102 101 109 15 (parallel [
            (set (reg:DI 206 [ D.2916 ])
                (plus:DI (reg/v/f:DI 138 [ qp ])
                    (reg:DI 223 [ D.2913 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 109 102 103 16 11 "" [1 uses])
(note 103 109 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (set (reg:DI 227)
        (const_int 0 [0])) divrem.c:77 -1
     (nil))
(insn 105 104 106 16 (parallel [
            (set (reg:DI 225)
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 227)
                        (reg/v:DI 143 [ n1 ])
                        (reg/v:DI 131 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:77)
                        (asm_input:DI ("1") divrem.c:77)
                        (asm_input:DI ("rm") divrem.c:77)
                    ]
                     [] divrem.c:77))
            (set (reg:DI 226 [ n1 ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 227)
                        (reg/v:DI 143 [ n1 ])
                        (reg/v:DI 131 [ d ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:77)
                        (asm_input:DI ("1") divrem.c:77)
                        (asm_input:DI ("rm") divrem.c:77)
                    ]
                     [] divrem.c:77))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:77 -1
     (nil))
(insn 106 105 107 16 (set (mem:DI (reg:DI 194 [ ivtmp.57 ]) [1 *_88+0 S8 A64])
        (reg:DI 225)) divrem.c:77 -1
     (nil))
(insn 107 106 108 16 (set (reg/v:DI 143 [ n1 ])
        (reg:DI 226 [ n1 ])) divrem.c:77 -1
     (nil))
(insn 108 107 110 16 (parallel [
            (set (reg:DI 194 [ ivtmp.57 ])
                (plus:DI (reg:DI 194 [ ivtmp.57 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 110 108 111 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 194 [ ivtmp.57 ])
            (reg:DI 206 [ D.2916 ]))) divrem.c:76 -1
     (nil))
(jump_insn 111 110 112 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) divrem.c:76 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 109)
(code_label 112 111 113 17 10 "" [1 uses])
(note 113 112 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 44 17 (set (mem:DI (reg/v/f:DI 211 [ np ]) [1 *np_67(D)+0 S8 A64])
        (reg/v:DI 143 [ n1 ])) divrem.c:79 -1
     (nil))
(insn 44 114 115 17 (set (reg:DI 127 [ D.2910 ])
        (reg/v:DI 111 [ most_significant_q_limb ])) divrem.c:81 -1
     (nil))
(jump_insn 115 44 116 17 (set (pc)
        (label_ref 380)) divrem.c:81 -1
     (nil)
 -> 380)
(barrier 116 115 117)
(code_label 117 116 118 18 4 "" [1 uses])
(note 118 117 119 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 18 (parallel [
            (set (reg:DI 228 [ D.2911 ])
                (ashift:DI (reg/v:DI 212 [ nsize ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:89 -1
     (nil))
(insn 120 119 121 18 (parallel [
            (set (reg:DI 229 [ D.2913 ])
                (plus:DI (reg:DI 228 [ D.2911 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:89 -1
     (nil))
(insn 121 120 122 18 (parallel [
            (set (reg/v/f:DI 109 [ np ])
                (plus:DI (reg/v/f:DI 211 [ np ])
                    (reg:DI 229 [ D.2913 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:89 -1
     (nil))
(insn 122 121 123 18 (set (reg/v:DI 150 [ d1 ])
        (mem:DI (plus:DI (reg/v/f:DI 213 [ dp ])
                (const_int 8 [0x8])) [1 MEM[(const mp_limb_t *)dp_61(D) + 8B]+0 S8 A64])) divrem.c:90 -1
     (nil))
(insn 123 122 124 18 (set (reg/v:DI 151 [ d0 ])
        (mem:DI (reg/v/f:DI 213 [ dp ]) [1 *dp_61(D)+0 S8 A64])) divrem.c:91 -1
     (nil))
(insn 124 123 125 18 (set (reg/v:DI 115 [ n1 ])
        (mem:DI (plus:DI (reg/v/f:DI 109 [ np ])
                (const_int 8 [0x8])) [1 MEM[(mp_limb_t *)np_96 + 8B]+0 S8 A64])) divrem.c:92 -1
     (nil))
(insn 125 124 126 18 (set (reg/v:DI 117 [ n0 ])
        (mem:DI (reg/v/f:DI 109 [ np ]) [1 *np_96+0 S8 A64])) divrem.c:93 -1
     (nil))
(insn 126 125 127 18 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 150 [ d1 ])
            (reg/v:DI 115 [ n1 ]))) divrem.c:95 -1
     (nil))
(jump_insn 127 126 128 18 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 396)
            (pc))) divrem.c:95 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 396)
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 19 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 150 [ d1 ])
            (reg/v:DI 115 [ n1 ]))) divrem.c:95 -1
     (nil))
(insn 130 129 131 19 (set (reg:QI 231 [ D.2915 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) divrem.c:95 -1
     (nil))
(insn 131 130 132 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 231 [ D.2915 ])
            (const_int 0 [0]))) divrem.c:95 -1
     (nil))
(jump_insn 132 131 419 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 422)
            (pc))) divrem.c:95 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 422)
(note 419 132 133 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 133 419 134 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 151 [ d0 ])
            (reg/v:DI 117 [ n0 ]))) divrem.c:95 -1
     (nil))
(insn 134 133 135 20 (set (reg:QI 233 [ D.2915 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) divrem.c:95 -1
     (nil))
(insn 135 134 136 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 233 [ D.2915 ])
            (const_int 0 [0]))) divrem.c:95 -1
     (nil))
(jump_insn 136 135 420 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 400)
            (pc))) divrem.c:95 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 400)
(note 420 136 422 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(code_label 422 420 138 22 44 "" [1 uses])
(note 138 422 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (parallel [
            (set (reg:DI 234 [ n1 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg/v:DI 115 [ n1 ])
                        (reg/v:DI 150 [ d1 ])
                        (reg/v:DI 117 [ n0 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:97)
                        (asm_input:DI ("rme") divrem.c:97)
                        (asm_input:DI ("1") divrem.c:97)
                        (asm_input:DI ("rme") divrem.c:97)
                    ]
                     [] divrem.c:97))
            (set (reg:DI 235 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg/v:DI 115 [ n1 ])
                        (reg/v:DI 150 [ d1 ])
                        (reg/v:DI 117 [ n0 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:97)
                        (asm_input:DI ("rme") divrem.c:97)
                        (asm_input:DI ("1") divrem.c:97)
                        (asm_input:DI ("rme") divrem.c:97)
                    ]
                     [] divrem.c:97))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:97 -1
     (nil))
(insn 140 139 141 22 (set (reg/v:DI 115 [ n1 ])
        (reg:DI 234 [ n1 ])) divrem.c:97 -1
     (nil))
(insn 141 140 35 22 (set (reg/v:DI 117 [ n0 ])
        (reg:DI 235 [ n0 ])) divrem.c:97 -1
     (nil))
(insn 35 141 393 22 (set (reg/v:DI 112 [ most_significant_q_limb ])
        (const_int 1 [0x1])) divrem.c:98 -1
     (nil))
(jump_insn 393 35 394 22 (set (pc)
        (label_ref 142)) -1
     (nil)
 -> 142)
(barrier 394 393 396)
(code_label 396 394 395 23 39 "" [1 uses])
(note 395 396 33 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 33 395 397 23 (set (reg/v:DI 112 [ most_significant_q_limb ])
        (const_int 0 [0])) divrem.c:47 -1
     (nil))
(jump_insn 397 33 398 23 (set (pc)
        (label_ref 142)) -1
     (nil)
 -> 142)
(barrier 398 397 400)
(code_label 400 398 399 24 40 "" [1 uses])
(note 399 400 34 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 34 399 142 24 (set (reg/v:DI 112 [ most_significant_q_limb ])
        (const_int 0 [0])) divrem.c:47 -1
     (nil))
(code_label 142 34 143 25 12 "" [2 uses])
(note 143 142 144 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 25 (parallel [
            (set (reg:DI 236 [ D.2912 ])
                (plus:DI (reg/v:DI 212 [ nsize ])
                    (reg/v:DI 210 [ qextra_limbs ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:101 -1
     (nil))
(insn 145 144 146 25 (parallel [
            (set (reg/v:DI 122 [ i ])
                (plus:DI (reg:DI 236 [ D.2912 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:101 -1
     (nil))
(insn 146 145 147 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 122 [ i ])
            (const_int 0 [0]))) divrem.c:101 -1
     (nil))
(jump_insn 147 146 148 25 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) divrem.c:101 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 230)
(note 148 147 227 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(code_label 227 148 149 27 24 "" [1 uses])
(note 149 227 150 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 210 [ qextra_limbs ])
            (reg/v:DI 122 [ i ]))) divrem.c:106 -1
     (nil))
(jump_insn 151 150 152 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) divrem.c:106 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 157)
(note 152 151 153 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 28 (parallel [
            (set (reg/v/f:DI 156 [ np ])
                (plus:DI (reg/v/f:DI 109 [ np ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:107 -1
     (nil))
(insn 154 153 36 28 (set (reg:DI 198 [ D.2911 ])
        (mem:DI (plus:DI (reg/v/f:DI 109 [ np ])
                (const_int -8 [0xfffffffffffffff8])) [1 MEM[(mp_limb_t *)np_230 + -8B]+0 S8 A64])) -1
     (nil))
(insn 36 154 155 28 (set (reg/v/f:DI 109 [ np ])
        (reg/v/f:DI 156 [ np ])) divrem.c:107 -1
     (nil))
(jump_insn 155 36 156 28 (set (pc)
        (label_ref 160)) -1
     (nil)
 -> 160)
(barrier 156 155 157)
(code_label 157 156 158 29 15 "" [1 uses])
(note 158 157 159 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 37 29 (set (mem:DI (reg/v/f:DI 109 [ np ]) [1 *np_230+0 S8 A64])
        (const_int 0 [0])) divrem.c:109 -1
     (nil))
(insn 37 159 160 29 (set (reg:DI 198 [ D.2911 ])
        (const_int 0 [0])) divrem.c:109 -1
     (nil))
(code_label 160 37 161 30 16 "" [1 uses])
(note 161 160 162 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 150 [ d1 ])
            (reg/v:DI 115 [ n1 ]))) divrem.c:111 -1
     (nil))
(jump_insn 163 162 164 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) divrem.c:111 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 186)
(note 164 163 165 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 31 (parallel [
            (set (reg/v:DI 119 [ r ])
                (plus:DI (reg/v:DI 150 [ d1 ])
                    (reg/v:DI 117 [ n0 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:118 -1
     (nil))
(insn 166 165 167 31 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 150 [ d1 ])
            (reg/v:DI 119 [ r ]))) divrem.c:119 -1
     (nil))
(jump_insn 167 166 168 31 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 177)
            (pc))) divrem.c:119 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 177)
(note 168 167 169 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 32 (parallel [
            (set (reg:DI 239 [ D.2911 ])
                (minus:DI (reg/v:DI 119 [ r ])
                    (reg/v:DI 151 [ d0 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:121 -1
     (nil))
(insn 170 169 171 32 (parallel [
            (set (reg:DI 237 [ n1 ])
                (asm_operands:DI ("add{q} {%5,%1|%1,%5}
	adc{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg:DI 239 [ D.2911 ])
                        (const_int 0 [0])
                        (reg:DI 198 [ D.2911 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:121)
                        (asm_input:DI ("rme") divrem.c:121)
                        (asm_input:DI ("%1") divrem.c:121)
                        (asm_input:DI ("rme") divrem.c:121)
                    ]
                     [] divrem.c:121))
            (set (reg:DI 238 [ n0 ])
                (asm_operands:DI ("add{q} {%5,%1|%1,%5}
	adc{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg:DI 239 [ D.2911 ])
                        (const_int 0 [0])
                        (reg:DI 198 [ D.2911 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:121)
                        (asm_input:DI ("rme") divrem.c:121)
                        (asm_input:DI ("%1") divrem.c:121)
                        (asm_input:DI ("rme") divrem.c:121)
                    ]
                     [] divrem.c:121))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:121 -1
     (nil))
(insn 171 170 172 32 (set (reg/v:DI 115 [ n1 ])
        (reg:DI 237 [ n1 ])) divrem.c:121 -1
     (nil))
(insn 172 171 173 32 (set (reg/v:DI 117 [ n0 ])
        (reg:DI 238 [ n0 ])) divrem.c:121 -1
     (nil))
(insn 173 172 174 32 (set (reg:DI 240)
        (const_int -1 [0xffffffffffffffff])) divrem.c:122 -1
     (nil))
(insn 174 173 175 32 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 122 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 209 [ qp ])) [1 MEM[base: qp_74(D), index: _77, step: 8, offset: 0B]+0 S8 A64])
        (reg:DI 240)) divrem.c:122 -1
     (nil))
(jump_insn 175 174 176 32 (set (pc)
        (label_ref 224)) divrem.c:123 -1
     (nil)
 -> 224)
(barrier 176 175 177)
(code_label 177 176 178 33 18 "" [1 uses])
(note 178 177 179 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 151 [ d0 ])
            (const_int 0 [0]))) divrem.c:125 -1
     (nil))
(insn 180 179 181 33 (set (reg:QI 242)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) divrem.c:125 -1
     (nil))
(insn 181 180 182 33 (set (reg:DI 241 [ D.2915 ])
        (zero_extend:DI (reg:QI 242))) divrem.c:125 -1
     (nil))
(insn 182 181 183 33 (parallel [
            (set (reg/v:DI 114 [ n1 ])
                (minus:DI (reg/v:DI 151 [ d0 ])
                    (reg:DI 241 [ D.2915 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:125 -1
     (nil))
(insn 183 182 38 33 (parallel [
            (set (reg/v:DI 116 [ n0 ])
                (neg:DI (reg/v:DI 151 [ d0 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:126 -1
     (nil))
(insn 38 183 184 33 (set (reg/v:DI 118 [ q ])
        (const_int -1 [0xffffffffffffffff])) divrem.c:116 -1
     (nil))
(jump_insn 184 38 185 33 (set (pc)
        (label_ref 194)) -1
     (nil)
 -> 194)
(barrier 185 184 186)
(code_label 186 185 187 34 17 "" [1 uses])
(note 187 186 188 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 34 (parallel [
            (set (reg:DI 243 [ q ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg/v:DI 117 [ n0 ])
                        (reg/v:DI 115 [ n1 ])
                        (reg/v:DI 150 [ d1 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:130)
                        (asm_input:DI ("1") divrem.c:130)
                        (asm_input:DI ("rm") divrem.c:130)
                    ]
                     [] divrem.c:130))
            (set (reg:DI 244 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg/v:DI 117 [ n0 ])
                        (reg/v:DI 115 [ n1 ])
                        (reg/v:DI 150 [ d1 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:130)
                        (asm_input:DI ("1") divrem.c:130)
                        (asm_input:DI ("rm") divrem.c:130)
                    ]
                     [] divrem.c:130))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:130 -1
     (nil))
(insn 189 188 190 34 (set (reg/v:DI 118 [ q ])
        (reg:DI 243 [ q ])) divrem.c:130 -1
     (nil))
(insn 190 189 191 34 (set (reg/v:DI 119 [ r ])
        (reg:DI 244 [ r ])) divrem.c:130 -1
     (nil))
(insn 191 190 192 34 (parallel [
            (set (reg:DI 245 [ n0 ])
                (asm_operands:DI ("mul{q} %3") ("=a") 0 [
                        (reg/v:DI 151 [ d0 ])
                        (reg/v:DI 118 [ q ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:131)
                        (asm_input:DI ("rm") divrem.c:131)
                    ]
                     [] divrem.c:131))
            (set (reg:DI 246 [ n1 ])
                (asm_operands:DI ("mul{q} %3") ("=d") 1 [
                        (reg/v:DI 151 [ d0 ])
                        (reg/v:DI 118 [ q ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:131)
                        (asm_input:DI ("rm") divrem.c:131)
                    ]
                     [] divrem.c:131))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:131 -1
     (nil))
(insn 192 191 193 34 (set (reg/v:DI 116 [ n0 ])
        (reg:DI 245 [ n0 ])) divrem.c:131 -1
     (nil))
(insn 193 192 194 34 (set (reg/v:DI 114 [ n1 ])
        (reg:DI 246 [ n1 ])) divrem.c:131 -1
     (nil))
(code_label 194 193 195 35 20 "" [1 uses])
(note 195 194 196 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(code_label 196 195 197 36 21 ("q_test") [1 uses])
(note 197 196 198 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 36 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 114 [ n1 ])
            (reg/v:DI 119 [ r ]))) divrem.c:136 -1
     (nil))
(jump_insn 199 198 200 36 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) divrem.c:136 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 209)
(note 200 199 201 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 114 [ n1 ])
            (reg/v:DI 119 [ r ]))) divrem.c:136 -1
     (nil))
(insn 202 201 203 37 (set (reg:QI 248 [ D.2915 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) divrem.c:136 -1
     (nil))
(insn 203 202 204 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 248 [ D.2915 ])
            (const_int 0 [0]))) divrem.c:136 -1
     (nil))
(jump_insn 204 203 421 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) divrem.c:136 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 218)
(note 421 204 205 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 205 421 206 38 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 116 [ n0 ])
            (reg:DI 198 [ D.2911 ]))) divrem.c:136 -1
     (nil))
(insn 206 205 207 38 (set (reg:QI 250 [ D.2915 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) divrem.c:136 -1
     (nil))
(insn 207 206 208 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 250 [ D.2915 ])
            (const_int 0 [0]))) divrem.c:136 -1
     (nil))
(jump_insn 208 207 209 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) divrem.c:136 -1
     (int_list:REG_BR_PROB 230 (nil))
 -> 218)
(code_label 209 208 210 39 22 "" [1 uses])
(note 210 209 211 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 39 (parallel [
            (set (reg/v:DI 118 [ q ])
                (plus:DI (reg/v:DI 118 [ q ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:139 -1
     (nil))
(insn 212 211 213 39 (parallel [
            (set (reg:DI 251 [ n1 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg/v:DI 114 [ n1 ])
                        (const_int 0 [0])
                        (reg/v:DI 116 [ n0 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:141)
                        (asm_input:DI ("rme") divrem.c:141)
                        (asm_input:DI ("1") divrem.c:141)
                        (asm_input:DI ("rme") divrem.c:141)
                    ]
                     [] divrem.c:141))
            (set (reg:DI 252 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg/v:DI 114 [ n1 ])
                        (const_int 0 [0])
                        (reg/v:DI 116 [ n0 ])
                        (reg/v:DI 151 [ d0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:141)
                        (asm_input:DI ("rme") divrem.c:141)
                        (asm_input:DI ("1") divrem.c:141)
                        (asm_input:DI ("rme") divrem.c:141)
                    ]
                     [] divrem.c:141))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:141 -1
     (nil))
(insn 213 212 214 39 (set (reg/v:DI 114 [ n1 ])
        (reg:DI 251 [ n1 ])) divrem.c:141 -1
     (nil))
(insn 214 213 215 39 (set (reg/v:DI 116 [ n0 ])
        (reg:DI 252 [ n0 ])) divrem.c:141 -1
     (nil))
(insn 215 214 216 39 (parallel [
            (set (reg/v:DI 119 [ r ])
                (plus:DI (reg/v:DI 119 [ r ])
                    (reg/v:DI 150 [ d1 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:142 -1
     (nil))
(insn 216 215 217 39 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 150 [ d1 ])
            (reg/v:DI 119 [ r ]))) divrem.c:143 -1
     (nil))
(jump_insn 217 216 218 39 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) divrem.c:143 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 196)
(code_label 218 217 219 40 23 "" [2 uses])
(note 219 218 220 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 40 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 122 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 209 [ qp ])) [1 MEM[base: qp_74(D), index: _78, step: 8, offset: 0B]+0 S8 A64])
        (reg/v:DI 118 [ q ])) divrem.c:147 -1
     (nil))
(insn 221 220 222 40 (parallel [
            (set (reg:DI 253 [ n1 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=r") 0 [
                        (reg/v:DI 119 [ r ])
                        (reg/v:DI 114 [ n1 ])
                        (reg:DI 198 [ D.2911 ])
                        (reg/v:DI 116 [ n0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:148)
                        (asm_input:DI ("rme") divrem.c:148)
                        (asm_input:DI ("1") divrem.c:148)
                        (asm_input:DI ("rme") divrem.c:148)
                    ]
                     [] divrem.c:148))
            (set (reg:DI 254 [ n0 ])
                (asm_operands:DI ("sub{q} {%5,%1|%1,%5}
	sbb{q} {%3,%0|%0,%3}") ("=&r") 1 [
                        (reg/v:DI 119 [ r ])
                        (reg/v:DI 114 [ n1 ])
                        (reg:DI 198 [ D.2911 ])
                        (reg/v:DI 116 [ n0 ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:148)
                        (asm_input:DI ("rme") divrem.c:148)
                        (asm_input:DI ("1") divrem.c:148)
                        (asm_input:DI ("rme") divrem.c:148)
                    ]
                     [] divrem.c:148))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:148 -1
     (nil))
(insn 222 221 223 40 (set (reg/v:DI 115 [ n1 ])
        (reg:DI 253 [ n1 ])) divrem.c:148 -1
     (nil))
(insn 223 222 224 40 (set (reg/v:DI 117 [ n0 ])
        (reg:DI 254 [ n0 ])) divrem.c:148 -1
     (nil))
(code_label 224 223 225 41 19 "" [1 uses])
(note 225 224 226 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 228 41 (parallel [
            (set (reg/v:DI 122 [ i ])
                (plus:DI (reg/v:DI 122 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:101 -1
     (nil))
(insn 228 226 229 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 122 [ i ])
            (const_int -1 [0xffffffffffffffff]))) divrem.c:101 -1
     (nil))
(jump_insn 229 228 230 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) divrem.c:101 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 227)
(code_label 230 229 231 42 14 "" [1 uses])
(note 231 230 232 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 42 (set (mem:DI (plus:DI (reg/v/f:DI 109 [ np ])
                (const_int 8 [0x8])) [1 MEM[(mp_limb_t *)np_229 + 8B]+0 S8 A64])
        (reg/v:DI 115 [ n1 ])) divrem.c:150 -1
     (nil))
(insn 233 232 43 42 (set (mem:DI (reg/v/f:DI 109 [ np ]) [1 *np_229+0 S8 A64])
        (reg/v:DI 117 [ n0 ])) divrem.c:151 -1
     (nil))
(insn 43 233 234 42 (set (reg:DI 127 [ D.2910 ])
        (reg/v:DI 112 [ most_significant_q_limb ])) divrem.c:153 -1
     (nil))
(jump_insn 234 43 235 42 (set (pc)
        (label_ref 380)) divrem.c:153 -1
     (nil)
 -> 380)
(barrier 235 234 236)
(code_label 236 235 237 43 2 "" [1 uses])
(note 237 236 238 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 43 (parallel [
            (set (reg:DI 255 [ D.2912 ])
                (minus:DI (reg/v:DI 212 [ nsize ])
                    (reg/v:DI 214 [ dsize ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:160 -1
     (nil))
(insn 239 238 240 43 (parallel [
            (set (reg:DI 256 [ D.2911 ])
                (ashift:DI (reg:DI 255 [ D.2912 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:160 -1
     (nil))
(insn 240 239 241 43 (parallel [
            (set (reg/v/f:DI 110 [ np ])
                (plus:DI (reg/v/f:DI 211 [ np ])
                    (reg:DI 256 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:160 -1
     (nil))
(insn 241 240 242 43 (set (reg:DI 167 [ D.2911 ])
        (reg/v:DI 214 [ dsize ])) divrem.c:161 -1
     (nil))
(insn 242 241 243 43 (parallel [
            (set (reg:DI 168 [ D.2911 ])
                (ashift:DI (reg:DI 167 [ D.2911 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:161 -1
     (nil))
(insn 243 242 244 43 (parallel [
            (set (reg:DI 169 [ D.2913 ])
                (plus:DI (reg:DI 168 [ D.2911 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:161 -1
     (nil))
(insn 244 243 245 43 (set (reg/v:DI 171 [ dX ])
        (mem:DI (plus:DI (reg/v/f:DI 213 [ dp ])
                (reg:DI 169 [ D.2913 ])) [1 *_151+0 S8 A64])) divrem.c:161 -1
     (nil))
(insn 245 244 246 43 (parallel [
            (set (reg:DI 172 [ D.2913 ])
                (plus:DI (reg:DI 168 [ D.2911 ])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:162 -1
     (nil))
(insn 246 245 247 43 (set (reg/v:DI 174 [ d1 ])
        (mem:DI (plus:DI (reg/v/f:DI 213 [ dp ])
                (reg:DI 172 [ D.2913 ])) [1 *_154+0 S8 A64])) divrem.c:162 -1
     (nil))
(insn 247 246 248 43 (parallel [
            (set (reg/f:DI 175 [ D.2914 ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (reg:DI 169 [ D.2913 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:163 -1
     (nil))
(insn 248 247 249 43 (set (reg/v:DI 120 [ n0 ])
        (mem:DI (reg/f:DI 175 [ D.2914 ]) [1 *_156+0 S8 A64])) divrem.c:163 -1
     (nil))
(insn 249 248 250 43 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 171 [ dX ])
            (reg/v:DI 120 [ n0 ]))) divrem.c:165 -1
     (nil))
(jump_insn 250 249 251 43 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) divrem.c:165 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 405)
(note 251 250 252 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 44 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 171 [ dX ])
            (reg/v:DI 120 [ n0 ]))) divrem.c:167 -1
     (nil))
(jump_insn 253 252 271 44 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) divrem.c:167 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 263)
(code_label 271 253 254 45 27 "" [1 uses])
(note 254 271 255 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 45 (set (reg:DI 2 cx)
        (reg/v:DI 214 [ dsize ])) divrem.c:169 -1
     (nil))
(insn 256 255 257 45 (set (reg:DI 1 dx)
        (reg/v/f:DI 213 [ dp ])) divrem.c:169 -1
     (nil))
(insn 257 256 258 45 (set (reg:DI 4 si)
        (reg/v/f:DI 110 [ np ])) divrem.c:169 -1
     (nil))
(insn 258 257 259 45 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ np ])) divrem.c:169 -1
     (nil))
(call_insn 259 258 260 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_sub_n") [flags 0x41]  <function_decl 0x2b13bba78a20 __mpn_sub_n>) [0 __mpn_sub_n S1 A8])
            (const_int 0 [0]))) divrem.c:169 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_sub_n") [flags 0x41]  <function_decl 0x2b13bba78a20 __mpn_sub_n>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 260 259 41 45 (set (reg/v:DI 120 [ n0 ])
        (mem:DI (reg/f:DI 175 [ D.2914 ]) [1 *_156+0 S8 A64])) divrem.c:170 -1
     (nil))
(insn 41 260 261 45 (set (reg/v:DI 113 [ most_significant_q_limb ])
        (const_int 1 [0x1])) divrem.c:171 -1
     (nil))
(jump_insn 261 41 262 45 (set (pc)
        (label_ref 274)) divrem.c:170 -1
     (nil)
 -> 274)
(barrier 262 261 263)
(code_label 263 262 264 46 26 "" [1 uses])
(note 264 263 265 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 46 (parallel [
            (set (reg:DI 257 [ D.2912 ])
                (plus:DI (reg/v:DI 214 [ dsize ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:167 -1
     (nil))
(insn 266 265 267 46 (set (reg:DI 1 dx)
        (reg:DI 257 [ D.2912 ])) divrem.c:167 -1
     (nil))
(insn 267 266 268 46 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ dp ])) divrem.c:167 -1
     (nil))
(insn 268 267 269 46 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ np ])) divrem.c:167 -1
     (nil))
(call_insn 269 268 270 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_cmp") [flags 0x41]  <function_decl 0x2b13bba70360 __mpn_cmp>) [0 __mpn_cmp S1 A8])
            (const_int 0 [0]))) divrem.c:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_cmp") [flags 0x41]  <function_decl 0x2b13bba70360 __mpn_cmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 270 269 272 46 (set (reg:SI 177 [ D.2918 ])
        (reg:SI 0 ax)) divrem.c:167 -1
     (nil))
(insn 272 270 273 46 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 177 [ D.2918 ])
            (const_int 0 [0]))) divrem.c:167 -1
     (nil))
(jump_insn 273 272 401 46 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 271)
            (pc))) divrem.c:167 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 271)
(note 401 273 40 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 40 401 402 47 (set (reg/v:DI 113 [ most_significant_q_limb ])
        (const_int 0 [0])) divrem.c:47 -1
     (nil))
(jump_insn 402 40 403 47 (set (pc)
        (label_ref 274)) -1
     (nil)
 -> 274)
(barrier 403 402 405)
(code_label 405 403 404 48 41 "" [1 uses])
(note 404 405 39 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 39 404 274 48 (set (reg/v:DI 113 [ most_significant_q_limb ])
        (const_int 0 [0])) divrem.c:47 -1
     (nil))
(code_label 274 39 275 49 25 "" [2 uses])
(note 275 274 276 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 49 (parallel [
            (set (reg:DI 258 [ D.2912 ])
                (plus:DI (reg/v:DI 212 [ nsize ])
                    (reg/v:DI 210 [ qextra_limbs ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:175 -1
     (nil))
(insn 277 276 278 49 (parallel [
            (set (reg:DI 259 [ D.2912 ])
                (minus:DI (reg:DI 258 [ D.2912 ])
                    (reg/v:DI 214 [ dsize ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:175 -1
     (nil))
(insn 278 277 279 49 (parallel [
            (set (reg/v:DI 195 [ i ])
                (plus:DI (reg:DI 259 [ D.2912 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:175 -1
     (nil))
(insn 279 278 280 49 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 195 [ i ])
            (const_int 0 [0]))) divrem.c:175 -1
     (nil))
(jump_insn 280 279 281 49 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 410)
            (pc))) divrem.c:175 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 410)
(note 281 280 282 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 50 (parallel [
            (set (reg:DI 260 [ D.2916 ])
                (plus:DI (reg:DI 167 [ D.2911 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 283 282 377 50 (parallel [
            (set (reg:DI 197 [ D.2911 ])
                (ashift:DI (reg:DI 260 [ D.2916 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 377 283 284 51 37 "" [1 uses])
(note 284 377 285 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 210 [ qextra_limbs ])
            (reg/v:DI 195 [ i ]))) divrem.c:181 -1
     (nil))
(jump_insn 286 285 287 51 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) divrem.c:181 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 293)
(note 287 286 288 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 52 (parallel [
            (set (reg/v/f:DI 110 [ np ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:183 -1
     (nil))
(insn 289 288 290 52 (set (reg/v:DI 125 [ n2 ])
        (mem:DI (plus:DI (reg/v/f:DI 110 [ np ])
                (reg:DI 168 [ D.2911 ])) [1 *_167+0 S8 A64])) divrem.c:184 -1
     (nil))
(insn 290 289 291 52 (parallel [
            (set (reg/f:DI 181 [ D.2914 ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (reg:DI 169 [ D.2913 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 291 290 292 52 (set (pc)
        (label_ref 319)) -1
     (nil)
 -> 319)
(barrier 292 291 293)
(code_label 293 292 294 53 28 "" [1 uses])
(note 294 293 295 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 53 (parallel [
            (set (reg/f:DI 181 [ D.2914 ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (reg:DI 169 [ D.2913 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:188 -1
     (nil))
(insn 296 295 297 53 (set (reg/v:DI 125 [ n2 ])
        (mem:DI (reg/f:DI 181 [ D.2914 ]) [1 *_169+0 S8 A64])) divrem.c:188 -1
     (nil))
(insn 297 296 298 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:DI 214 [ dsize ])
            (const_int 0 [0]))) divrem.c:189 -1
     (nil))
(jump_insn 298 297 315 53 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 303)
            (pc))) divrem.c:189 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 303)
(code_label 315 298 299 54 32 "" [1 uses])
(note 299 315 300 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 54 (set (mem:DI (reg/v/f:DI 110 [ np ]) [1 *np_231+0 S8 A64])
        (const_int 0 [0])) divrem.c:190 -1
     (nil))
(jump_insn 301 300 302 54 (set (pc)
        (label_ref 319)) divrem.c:190 -1
     (nil)
 -> 319)
(barrier 302 301 303)
(code_label 303 302 304 55 30 "" [1 uses])
(note 304 303 305 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 55 (parallel [
            (set (reg:DI 202 [ ivtmp.39 ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (reg:DI 197 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 306 305 312 55 (parallel [
            (set (reg:DI 203 [ D.2916 ])
                (plus:DI (reg/v/f:DI 110 [ np ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 312 306 307 56 31 "" [1 uses])
(note 307 312 308 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 56 (set (reg/f:DI 201 [ D.2919 ])
        (reg:DI 202 [ ivtmp.39 ])) -1
     (nil))
(insn 309 308 310 56 (set (reg:DI 261)
        (mem:DI (reg/f:DI 201 [ D.2919 ]) [1 MEM[base: _236, offset: 0B]+0 S8 A64])) divrem.c:189 -1
     (nil))
(insn 310 309 311 56 (set (mem:DI (plus:DI (reg/f:DI 201 [ D.2919 ])
                (const_int 8 [0x8])) [1 MEM[base: _236, offset: 8B]+0 S8 A64])
        (reg:DI 261)) divrem.c:189 -1
     (nil))
(insn 311 310 313 56 (parallel [
            (set (reg:DI 202 [ ivtmp.39 ])
                (plus:DI (reg:DI 202 [ ivtmp.39 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 313 311 314 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 202 [ ivtmp.39 ])
            (reg:DI 203 [ D.2916 ]))) divrem.c:189 -1
     (nil))
(jump_insn 314 313 318 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) divrem.c:189 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 312)
(note 318 314 316 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(jump_insn 316 318 317 57 (set (pc)
        (label_ref 315)) -1
     (nil)
 -> 315)
(barrier 317 316 319)
(code_label 319 317 320 58 29 "" [2 uses])
(note 320 319 321 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 171 [ dX ])
            (reg/v:DI 120 [ n0 ]))) divrem.c:193 -1
     (nil))
(jump_insn 322 321 323 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 415)
            (pc))) divrem.c:193 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 415)
(note 323 322 324 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 59 (set (reg:DI 264)
        (mem:DI (reg/f:DI 181 [ D.2914 ]) [1 *_214+0 S8 A64])) divrem.c:201 -1
     (nil))
(insn 325 324 326 59 (parallel [
            (set (reg:DI 262 [ q ])
                (asm_operands:DI ("div{q} %4") ("=a") 0 [
                        (reg:DI 264)
                        (reg/v:DI 120 [ n0 ])
                        (reg/v:DI 171 [ dX ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:201)
                        (asm_input:DI ("1") divrem.c:201)
                        (asm_input:DI ("rm") divrem.c:201)
                    ]
                     [] divrem.c:201))
            (set (reg:DI 263 [ r ])
                (asm_operands:DI ("div{q} %4") ("=d") 1 [
                        (reg:DI 264)
                        (reg/v:DI 120 [ n0 ])
                        (reg/v:DI 171 [ dX ])
                    ]
                     [
                        (asm_input:DI ("0") divrem.c:201)
                        (asm_input:DI ("1") divrem.c:201)
                        (asm_input:DI ("rm") divrem.c:201)
                    ]
                     [] divrem.c:201))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:201 -1
     (nil))
(insn 326 325 327 59 (set (reg/v:DI 123 [ q ])
        (reg:DI 262 [ q ])) divrem.c:201 -1
     (nil))
(insn 327 326 328 59 (set (reg/v:DI 126 [ r ])
        (reg:DI 263 [ r ])) divrem.c:201 -1
     (nil))
(insn 328 327 329 59 (parallel [
            (set (reg:DI 265 [ n0 ])
                (asm_operands:DI ("mul{q} %3") ("=a") 0 [
                        (reg/v:DI 174 [ d1 ])
                        (reg/v:DI 123 [ q ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:202)
                        (asm_input:DI ("rm") divrem.c:202)
                    ]
                     [] divrem.c:202))
            (set (reg:DI 266 [ n1 ])
                (asm_operands:DI ("mul{q} %3") ("=d") 1 [
                        (reg/v:DI 174 [ d1 ])
                        (reg/v:DI 123 [ q ])
                    ]
                     [
                        (asm_input:DI ("%0") divrem.c:202)
                        (asm_input:DI ("rm") divrem.c:202)
                    ]
                     [] divrem.c:202))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) divrem.c:202 -1
     (nil))
(insn 329 328 330 59 (set (reg/v:DI 121 [ n0 ])
        (reg:DI 265 [ n0 ])) divrem.c:202 -1
     (nil))
(insn 330 329 331 59 (set (reg/v:DI 124 [ n1 ])
        (reg:DI 266 [ n1 ])) divrem.c:202 -1
     (nil))
(jump_insn 331 330 332 59 (set (pc)
        (label_ref 344)) divrem.c:204 -1
     (nil)
 -> 344)
(barrier 332 331 346)
(code_label 346 332 333 60 35 "" [2 uses])
(note 333 346 334 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 60 (parallel [
            (set (reg/v:DI 123 [ q ])
                (plus:DI (reg/v:DI 123 [ q ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:206 -1
     (nil))
(insn 335 334 336 60 (parallel [
            (set (reg/v:DI 126 [ r ])
                (plus:DI (reg/v:DI 126 [ r ])
                    (reg/v:DI 171 [ dX ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:207 -1
     (nil))
(insn 336 335 337 60 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 171 [ dX ])
            (reg/v:DI 126 [ r ]))) divrem.c:208 -1
     (nil))
(jump_insn 337 336 338 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) divrem.c:208 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 355)
(note 338 337 339 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 61 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 121 [ n0 ])
            (reg/v:DI 174 [ d1 ]))) divrem.c:210 -1
     (nil))
(insn 340 339 341 61 (set (reg:QI 268)
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) divrem.c:210 -1
     (nil))
(insn 341 340 342 61 (set (reg:DI 267 [ D.2915 ])
        (zero_extend:DI (reg:QI 268))) divrem.c:210 -1
     (nil))
(insn 342 341 343 61 (parallel [
            (set (reg/v:DI 124 [ n1 ])
                (minus:DI (reg/v:DI 124 [ n1 ])
                    (reg:DI 267 [ D.2915 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:210 -1
     (nil))
(insn 343 342 344 61 (parallel [
            (set (reg/v:DI 121 [ n0 ])
                (minus:DI (reg/v:DI 121 [ n0 ])
                    (reg/v:DI 174 [ d1 ])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:211 -1
     (nil))
(code_label 344 343 345 62 34 "" [1 uses])
(note 345 344 347 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 347 345 348 62 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 124 [ n1 ])
            (reg/v:DI 126 [ r ]))) divrem.c:204 -1
     (nil))
(jump_insn 348 347 349 62 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) divrem.c:204 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 346)
(note 349 348 350 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 124 [ n1 ])
            (reg/v:DI 126 [ r ]))) divrem.c:204 -1
     (nil))
(jump_insn 351 350 352 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) divrem.c:204 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 355)
(note 352 351 353 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 64 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 121 [ n0 ])
            (mem:DI (plus:DI (reg/v/f:DI 110 [ np ])
                    (reg:DI 172 [ D.2913 ])) [1 *_188+0 S8 A64]))) divrem.c:204 -1
     (nil))
(jump_insn 354 353 411 64 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 346)
            (pc))) divrem.c:204 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 346)
(note 411 354 412 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 412 411 413 65 (set (pc)
        (label_ref 355)) -1
     (nil)
 -> 355)
(barrier 413 412 415)
(code_label 415 413 414 66 43 "" [1 uses])
(note 414 415 42 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 42 414 355 66 (set (reg/v:DI 123 [ q ])
        (const_int -1 [0xffffffffffffffff])) divrem.c:196 -1
     (nil))
(code_label 355 42 356 67 33 "" [3 uses])
(note 356 355 357 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 67 (set (reg:DI 2 cx)
        (reg/v:DI 123 [ q ])) divrem.c:219 -1
     (nil))
(insn 358 357 359 67 (set (reg:DI 1 dx)
        (reg/v:DI 214 [ dsize ])) divrem.c:219 -1
     (nil))
(insn 359 358 360 67 (set (reg:DI 4 si)
        (reg/v/f:DI 213 [ dp ])) divrem.c:219 -1
     (nil))
(insn 360 359 361 67 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ np ])) divrem.c:219 -1
     (nil))
(call_insn 361 360 362 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_submul_1") [flags 0x41]  <function_decl 0x2b13bba78af8 __mpn_submul_1>) [0 __mpn_submul_1 S1 A8])
            (const_int 0 [0]))) divrem.c:219 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_submul_1") [flags 0x41]  <function_decl 0x2b13bba78af8 __mpn_submul_1>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 362 361 363 67 (set (reg/v:DI 193 [ cy_limb ])
        (reg:DI 0 ax)) divrem.c:219 -1
     (nil))
(insn 363 362 364 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 125 [ n2 ])
            (reg/v:DI 193 [ cy_limb ]))) divrem.c:221 -1
     (nil))
(jump_insn 364 363 365 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) divrem.c:221 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 372)
(note 365 364 366 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 68 (set (reg:DI 2 cx)
        (reg/v:DI 214 [ dsize ])) divrem.c:223 -1
     (nil))
(insn 367 366 368 68 (set (reg:DI 1 dx)
        (reg/v/f:DI 213 [ dp ])) divrem.c:223 -1
     (nil))
(insn 368 367 369 68 (set (reg:DI 4 si)
        (reg/v/f:DI 110 [ np ])) divrem.c:223 -1
     (nil))
(insn 369 368 370 68 (set (reg:DI 5 di)
        (reg/v/f:DI 110 [ np ])) divrem.c:223 -1
     (nil))
(call_insn 370 369 371 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mpn_add_n") [flags 0x41]  <function_decl 0x2b13bba700d8 __mpn_add_n>) [0 __mpn_add_n S1 A8])
            (const_int 0 [0]))) divrem.c:223 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mpn_add_n") [flags 0x41]  <function_decl 0x2b13bba700d8 __mpn_add_n>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 371 370 372 68 (parallel [
            (set (reg/v:DI 123 [ q ])
                (plus:DI (reg/v:DI 123 [ q ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:224 -1
     (nil))
(code_label 372 371 373 69 36 "" [1 uses])
(note 373 372 374 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 375 69 (set (mem:DI (plus:DI (mult:DI (reg/v:DI 195 [ i ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 209 [ qp ])) [1 MEM[base: qp_74(D), index: _226, step: 8, offset: 0B]+0 S8 A64])
        (reg/v:DI 123 [ q ])) divrem.c:227 -1
     (nil))
(insn 375 374 376 69 (set (reg/v:DI 120 [ n0 ])
        (mem:DI (reg/f:DI 181 [ D.2914 ]) [1 *_214+0 S8 A64])) divrem.c:228 -1
     (nil))
(insn 376 375 378 69 (parallel [
            (set (reg/v:DI 195 [ i ])
                (plus:DI (reg/v:DI 195 [ i ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) divrem.c:175 -1
     (nil))
(insn 378 376 379 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 195 [ i ])
            (const_int -1 [0xffffffffffffffff]))) divrem.c:175 -1
     (nil))
(jump_insn 379 378 406 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) divrem.c:175 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 377)
(note 406 379 45 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 45 406 407 70 (set (reg:DI 127 [ D.2910 ])
        (reg/v:DI 113 [ most_significant_q_limb ])) -1
     (nil))
(jump_insn 407 45 408 70 (set (pc)
        (label_ref 380)) -1
     (nil)
 -> 380)
(barrier 408 407 410)
(code_label 410 408 409 71 42 "" [1 uses])
(note 409 410 46 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 46 409 380 71 (set (reg:DI 127 [ D.2910 ])
        (reg/v:DI 113 [ most_significant_q_limb ])) divrem.c:175 -1
     (nil))
(code_label 380 46 381 72 6 "" [4 uses])
(note 381 380 382 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 386 72 (set (reg:DI 208 [ <retval> ])
        (reg:DI 127 [ D.2910 ])) -1
     (nil))
(insn 386 382 387 72 (set (reg/i:DI 0 ax)
        (reg:DI 208 [ <retval> ])) divrem.c:234 -1
     (nil))
(insn 387 386 0 72 (use (reg/i:DI 0 ax)) divrem.c:234 -1
     (nil))
