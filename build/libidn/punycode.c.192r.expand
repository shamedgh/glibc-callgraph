
;; Function punycode_encode (punycode_encode, funcdef_no=13, decl_uid=2512, cgraph_uid=13, symbol_order=14)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57
Edge 4->48 redirected to 67
Edge 10->12 redirected to 68
Edge 12->14 redirected to 69
Edge 18->46 redirected to 70
Edge 20->22 redirected to 71
Edge 28->31 redirected to 72
Edge 29->31 redirected to 73
Edge 32->34 redirected to 74
Edge 40->43 redirected to 76
Purged non-fallthru edges from bb 78


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 22->23 to 66 failed.
Edge 24->26 redirected to 29
Forwarding edge 25->26 to 29 failed.
Deleted label in block 26.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.
Forwarding edge 25->26 to 29 failed.
Forwarding edge 25->26 to 29 failed.
Forwarding edge 29->30 to 69 failed.
Forwarding edge 48->49 to 72 failed.
Forwarding edge 55->56 to 58 failed.
Forwarding edge 60->61 to 66 failed.
Forwarding edge 69->70 to 68 failed.
Forwarding edge 72->73 to 77 failed.


try_optimize_cfg iteration 2

Forwarding edge 22->23 to 66 failed.
Forwarding edge 25->26 to 29 failed.
Forwarding edge 29->30 to 69 failed.
Forwarding edge 48->49 to 72 failed.
Forwarding edge 55->56 to 58 failed.
Forwarding edge 60->61 to 66 failed.
Forwarding edge 69->70 to 68 failed.
Forwarding edge 72->73 to 77 failed.


;;
;; Full RTL generated for this function:
;;
(note 231 0 271 NOTE_INSN_DELETED)
(note 271 231 232 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 232 271 233 2 (set (reg/v:DI 376 [ input_length ])
        (reg:DI 5 di [ input_length ])) punycode.c:190 -1
     (nil))
(insn 233 232 234 2 (set (reg/v/f:DI 377 [ input ])
        (reg:DI 4 si [ input ])) punycode.c:190 -1
     (nil))
(insn 234 233 235 2 (set (reg/v/f:DI 378 [ case_flags ])
        (reg:DI 1 dx [ case_flags ])) punycode.c:190 -1
     (nil))
(insn 235 234 236 2 (set (reg/v/f:DI 379 [ output_length ])
        (reg:DI 2 cx [ output_length ])) punycode.c:190 -1
     (nil))
(insn 236 235 237 2 (set (reg/v/f:DI 380 [ output ])
        (reg:DI 37 r8 [ output ])) punycode.c:190 -1
     (nil))
(note 237 236 273 2 NOTE_INSN_FUNCTION_BEG)
(insn 273 237 274 2 (set (reg:DI 381)
        (const_int 4294967295 [0xffffffff])) punycode.c:198 -1
     (nil))
(insn 274 273 275 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 376 [ input_length ])
            (reg:DI 381))) punycode.c:198 -1
     (nil))
(jump_insn 275 274 375 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) punycode.c:198 -1
     (int_list:REG_BR_PROB 3300 (nil))
 -> 279)
(code_label 375 275 276 4 18 "" [2 uses])
(note 276 375 268 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 268 276 277 4 (set (reg:SI 301 [ D.2913 ])
        (const_int 3 [0x3])) punycode.c:199 -1
     (nil))
(jump_insn 277 268 278 4 (set (pc)
        (label_ref 506)) -1
     (nil)
 -> 506)
(barrier 278 277 279)
(code_label 279 278 280 5 2 "" [1 uses])
(note 280 279 281 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 5 (set (reg/v:SI 305 [ input_len ])
        (subreg:SI (reg/v:DI 376 [ input_length ]) 0)) punycode.c:200 -1
     (nil))
(insn 282 281 283 5 (set (reg/v:DI 306 [ max_out ])
        (mem:DI (reg/v/f:DI 379 [ output_length ]) [2 *output_length_40(D)+0 S8 A64])) punycode.c:207 -1
     (nil))
(insn 283 282 284 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 376 [ input_length ])
            (const_int 0 [0]))) punycode.c:212 -1
     (nil))
(jump_insn 284 283 285 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 570)
            (pc))) punycode.c:212 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 570)
(note 285 284 238 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 238 285 239 6 (set (reg:DI 318 [ ivtmp.58 ])
        (const_int 0 [0])) punycode.c:212 -1
     (nil))
(insn 239 238 333 6 (set (reg/v:DI 299 [ out ])
        (const_int 0 [0])) punycode.c:212 -1
     (nil))
(code_label 333 239 286 7 11 "" [1 uses])
(note 286 333 287 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 7 (set (reg:SI 307 [ D.2911 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 318 [ ivtmp.58 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 377 [ input ])) [1 MEM[base: input_44(D), index: ivtmp.58_191, step: 4, offset: 0B]+0 S4 A32])) punycode.c:214 -1
     (nil))
(insn 288 287 289 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 307 [ D.2911 ])
            (const_int 127 [0x7f]))) punycode.c:214 -1
     (nil))
(jump_insn 289 288 290 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) punycode.c:214 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 330)
(note 290 289 291 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 8 (parallel [
            (set (reg:DI 382 [ D.2915 ])
                (minus:DI (reg/v:DI 306 [ max_out ])
                    (reg/v:DI 299 [ out ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:216 -1
     (nil))
(insn 292 291 293 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 382 [ D.2915 ])
            (const_int 1 [0x1]))) punycode.c:216 -1
     (nil))
(jump_insn 293 292 383 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) punycode.c:216 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 297)
(code_label 383 293 294 9 20 "" [2 uses])
(note 294 383 269 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 269 294 295 9 (set (reg:SI 301 [ D.2913 ])
        (const_int 2 [0x2])) punycode.c:217 -1
     (nil))
(jump_insn 295 269 296 9 (set (pc)
        (label_ref 506)) -1
     (nil)
 -> 506)
(barrier 296 295 297)
(code_label 297 296 298 10 6 "" [1 uses])
(note 298 297 299 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 10 (parallel [
            (set (reg/v:DI 309 [ out ])
                (plus:DI (reg/v:DI 299 [ out ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:218 -1
     (nil))
(insn 300 299 301 10 (parallel [
            (set (reg/f:DI 310 [ D.2916 ])
                (plus:DI (reg/v/f:DI 380 [ output ])
                    (reg/v:DI 299 [ out ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:218 -1
     (nil))
(insn 301 300 302 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 378 [ case_flags ])
            (const_int 0 [0]))) punycode.c:218 -1
     (nil))
(jump_insn 302 301 303 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) punycode.c:218 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 324)
(note 303 302 304 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 11 (set (reg:QI 311 [ D.2917 ])
        (mem:QI (plus:DI (reg/v/f:DI 378 [ case_flags ])
                (reg:DI 318 [ ivtmp.58 ])) [0 MEM[base: case_flags_53(D), index: ivtmp.58_191, offset: 0B]+0 S1 A8])) punycode.c:219 -1
     (nil))
(insn 305 304 306 11 (parallel [
            (set (reg:SI 383 [ D.2911 ])
                (plus:SI (reg:SI 307 [ D.2911 ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:117 -1
     (nil))
(insn 306 305 307 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 383 [ D.2911 ])
            (const_int 25 [0x19]))) punycode.c:117 -1
     (nil))
(jump_insn 307 306 308 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 574)
            (pc))) punycode.c:117 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 574)
(note 308 307 240 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 240 308 571 12 (set (reg:SI 337 [ D.2911 ])
        (const_int 32 [0x20])) punycode.c:117 -1
     (nil))
(jump_insn 571 240 572 12 (set (pc)
        (label_ref 309)) -1
     (nil)
 -> 309)
(barrier 572 571 574)
(code_label 574 572 573 13 39 "" [1 uses])
(note 573 574 241 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 241 573 309 13 (set (reg:SI 337 [ D.2911 ])
        (const_int 0 [0])) punycode.c:117 -1
     (nil))
(code_label 309 241 310 14 8 "" [1 uses])
(note 310 309 311 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 14 (parallel [
            (set (reg/v:SI 331 [ bcp ])
                (minus:SI (reg:SI 307 [ D.2911 ])
                    (reg:SI 337 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:117 -1
     (nil))
(insn 312 311 313 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 311 [ D.2917 ])
            (const_int 0 [0]))) punycode.c:118 -1
     (nil))
(jump_insn 313 312 314 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 578)
            (pc))) punycode.c:118 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 578)
(note 314 313 315 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 15 (parallel [
            (set (reg:SI 384 [ D.2911 ])
                (plus:SI (reg/v:SI 331 [ bcp ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 316 315 317 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 384 [ D.2911 ])
            (const_int 25 [0x19]))) -1
     (nil))
(insn 317 316 318 15 (set (reg:QI 386 [ D.2918 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 318 317 575 15 (parallel [
            (set (reg:QI 374 [ D.2912 ])
                (ashift:QI (reg:QI 386 [ D.2918 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 575 318 576 15 (set (pc)
        (label_ref 319)) -1
     (nil)
 -> 319)
(barrier 576 575 578)
(code_label 578 576 577 16 40 "" [1 uses])
(note 577 578 242 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 242 577 319 16 (set (reg:QI 374 [ D.2912 ])
        (const_int 0 [0])) punycode.c:118 -1
     (nil))
(code_label 319 242 320 17 9 "" [1 uses])
(note 320 319 321 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 17 (parallel [
            (set (reg:QI 302 [ D.2914 ])
                (plus:QI (reg:QI 374 [ D.2912 ])
                    (subreg:QI (reg/v:SI 331 [ bcp ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:118 -1
     (nil))
(jump_insn 322 321 323 17 (set (pc)
        (label_ref 327)) -1
     (nil)
 -> 327)
(barrier 323 322 324)
(code_label 324 323 325 18 7 "" [1 uses])
(note 325 324 326 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 18 (set (reg:QI 302 [ D.2914 ])
        (subreg:QI (reg:SI 307 [ D.2911 ]) 0)) punycode.c:218 -1
     (nil))
(code_label 327 326 328 19 10 "" [1 uses])
(note 328 327 329 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 243 19 (set (mem:QI (reg/f:DI 310 [ D.2916 ]) [0 *_52+0 S1 A8])
        (reg:QI 302 [ D.2914 ])) punycode.c:218 -1
     (nil))
(insn 243 329 330 19 (set (reg/v:DI 299 [ out ])
        (reg/v:DI 309 [ out ])) punycode.c:218 -1
     (nil))
(code_label 330 243 331 20 5 "" [1 uses])
(note 331 330 332 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 334 20 (parallel [
            (set (reg:DI 318 [ ivtmp.58 ])
                (plus:DI (reg:DI 318 [ ivtmp.58 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 334 332 335 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 305 [ input_len ])
            (subreg:SI (reg:DI 318 [ ivtmp.58 ]) 0))) punycode.c:212 -1
     (nil))
(jump_insn 335 334 336 20 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 333)
            (pc))) punycode.c:212 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 333)
(note 336 335 337 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 21 (set (reg/v:SI 316 [ h ])
        (subreg:SI (reg/v:DI 299 [ out ]) 0)) punycode.c:225 -1
     (nil))
(insn 338 337 339 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 316 [ h ])
            (const_int 0 [0]))) punycode.c:232 -1
     (nil))
(jump_insn 339 338 340 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 580)
            (pc))) punycode.c:232 612 {*jcc_1}
     (int_list:REG_BR_PROB 4641 (nil))
 -> 580)
(note 340 339 341 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 22 (parallel [
            (set (reg/v:DI 325 [ out ])
                (plus:DI (reg/v:DI 299 [ out ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:233 -1
     (nil))
(insn 342 341 343 22 (set (mem:QI (plus:DI (reg/v/f:DI 380 [ output ])
                (reg/v:DI 299 [ out ])) [0 *_70+0 S1 A8])
        (const_int 45 [0x2d])) punycode.c:233 -1
     (nil))
(insn 343 342 344 22 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 305 [ input_len ])
            (reg/v:SI 316 [ h ]))) punycode.c:237 -1
     (nil))
(jump_insn 344 343 347 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 497)
            (pc))) punycode.c:237 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 497)
(note 347 344 345 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 345 347 346 23 (set (pc)
        (label_ref 503)) punycode.c:237 -1
     (nil)
 -> 503)
(barrier 346 345 363)
(code_label 363 346 348 24 15 "" [2 uses])
(note 348 363 349 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 24 (set (reg/v:SI 320 [ m ])
        (mem:SI (plus:DI (mult:DI (reg:DI 321 [ ivtmp.53 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 377 [ input ])) [1 MEM[base: input_44(D), index: ivtmp.53_162, step: 4, offset: 0B]+0 S4 A32])) punycode.c:246 -1
     (nil))
(insn 350 349 351 24 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 320 [ m ])
            (reg/v:SI 341 [ n ]))) punycode.c:246 -1
     (nil))
(insn 351 350 352 24 (set (reg:QI 388 [ D.2918 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) punycode.c:246 -1
     (nil))
(insn 352 351 353 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 388 [ D.2918 ])
            (const_int 0 [0]))) punycode.c:246 -1
     (nil))
(jump_insn 353 352 602 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) punycode.c:246 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 360)
(note 602 353 354 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 354 602 355 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 320 [ m ])
            (reg/v:SI 297 [ m ]))) punycode.c:246 -1
     (nil))
(insn 355 354 356 25 (set (reg:QI 390 [ D.2918 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) punycode.c:246 -1
     (nil))
(insn 356 355 357 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 390 [ D.2918 ])
            (const_int 0 [0]))) punycode.c:246 -1
     (nil))
(jump_insn 357 356 603 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 584)
            (pc))) punycode.c:246 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 584)
(note 603 357 581 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 581 603 582 26 (set (pc)
        (label_ref 360)) -1
     (nil)
 -> 360)
(barrier 582 581 584)
(code_label 584 582 583 28 42 "" [1 uses])
(note 583 584 246 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 246 583 360 28 (set (reg/v:SI 297 [ m ])
        (reg/v:SI 320 [ m ])) -1
     (nil))
(code_label 360 246 361 29 13 "" [2 uses])
(note 361 360 362 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 364 29 (parallel [
            (set (reg:DI 321 [ ivtmp.53 ])
                (plus:DI (reg:DI 321 [ ivtmp.53 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 364 362 365 29 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 305 [ input_len ])
            (subreg:SI (reg:DI 321 [ ivtmp.53 ]) 0))) punycode.c:242 -1
     (nil))
(jump_insn 365 364 368 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) punycode.c:242 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 363)
(note 368 365 366 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 366 368 367 30 (set (pc)
        (label_ref 522)) -1
     (nil)
 -> 522)
(barrier 367 366 486)
(code_label 486 367 369 31 31 "" [2 uses])
(note 369 486 370 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 31 (set (reg:SI 323 [ D.2911 ])
        (mem:SI (reg:DI 326 [ ivtmp.49 ]) [1 MEM[base: _166, offset: 0B]+0 S4 A32])) punycode.c:261 -1
     (nil))
(insn 371 370 372 31 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 297 [ m ])
            (reg:SI 323 [ D.2911 ]))) punycode.c:261 -1
     (nil))
(jump_insn 372 371 373 31 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 378)
            (pc))) punycode.c:261 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 378)
(note 373 372 374 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 374 373 376 32 (parallel [
            (set (reg/v:SI 293 [ delta ])
                (plus:SI (reg/v:SI 293 [ delta ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:263 -1
     (nil))
(insn 376 374 377 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 293 [ delta ])
            (const_int 0 [0]))) punycode.c:263 -1
     (nil))
(jump_insn 377 376 378 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) punycode.c:263 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 375)
(code_label 378 377 379 33 17 "" [1 uses])
(note 379 378 380 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 297 [ m ])
            (reg:SI 323 [ D.2911 ]))) punycode.c:267 -1
     (nil))
(jump_insn 381 380 382 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 482)
            (pc))) punycode.c:267 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 482)
(note 382 381 384 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 384 382 385 34 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 306 [ max_out ])
            (reg/v:DI 325 [ out ]))) punycode.c:273 -1
     (nil))
(jump_insn 385 384 386 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 383)
            (pc))) punycode.c:273 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 383)
(note 386 385 247 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 247 386 248 35 (set (reg/v:SI 332 [ delta ])
        (reg/v:SI 293 [ delta ])) punycode.c:273 -1
     (nil))
(insn 248 247 420 35 (set (reg/v:SI 333 [ k ])
        (const_int 36 [0x24])) punycode.c:273 -1
     (nil))
(code_label 420 248 387 36 24 "" [1 uses])
(note 387 420 388 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 36 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 333 [ k ])
            (reg/v:SI 295 [ bias ]))) punycode.c:275 -1
     (nil))
(jump_insn 389 388 390 36 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 588)
            (pc))) punycode.c:275 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 588)
(note 390 389 391 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 37 (parallel [
            (set (reg:SI 391 [ D.2911 ])
                (plus:SI (reg/v:SI 295 [ bias ])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:276 -1
     (nil))
(insn 392 391 393 37 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 391 [ D.2911 ])
            (reg/v:SI 333 [ k ]))) punycode.c:276 -1
     (nil))
(jump_insn 393 392 394 37 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 592)
            (pc))) punycode.c:276 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 592)
(note 394 393 395 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 585 38 (parallel [
            (set (reg/v:SI 303 [ t ])
                (minus:SI (reg/v:SI 333 [ k ])
                    (reg/v:SI 295 [ bias ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:276 -1
     (nil))
(jump_insn 585 395 586 38 (set (pc)
        (label_ref 396)) -1
     (nil)
 -> 396)
(barrier 586 585 588)
(code_label 588 586 587 39 43 "" [1 uses])
(note 587 588 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 587 589 39 (set (reg/v:SI 303 [ t ])
        (const_int 1 [0x1])) punycode.c:275 -1
     (nil))
(jump_insn 589 250 590 39 (set (pc)
        (label_ref 396)) -1
     (nil)
 -> 396)
(barrier 590 589 592)
(code_label 592 590 591 40 44 "" [1 uses])
(note 591 592 249 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 249 591 396 40 (set (reg/v:SI 303 [ t ])
        (const_int 26 [0x1a])) punycode.c:276 -1
     (nil))
(code_label 396 249 397 41 21 "" [2 uses])
(note 397 396 398 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 41 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 303 [ t ])
            (reg/v:SI 332 [ delta ]))) punycode.c:277 -1
     (nil))
(jump_insn 399 398 400 41 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 424)
            (pc))) punycode.c:277 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 424)
(note 400 399 401 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 42 (parallel [
            (set (reg/v:DI 325 [ out ])
                (plus:DI (reg/v:DI 325 [ out ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 402 401 403 42 (parallel [
            (set (reg:SI 327 [ D.2911 ])
                (minus:SI (reg/v:SI 332 [ delta ])
                    (reg/v:SI 303 [ t ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 403 402 404 42 (set (reg:SI 392)
        (const_int 36 [0x24])) punycode.c:279 -1
     (nil))
(insn 404 403 405 42 (parallel [
            (set (reg:SI 328 [ D.2911 ])
                (minus:SI (reg:SI 392)
                    (reg/v:SI 303 [ t ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 405 404 406 42 (parallel [
            (set (reg:SI 395)
                (udiv:SI (reg:SI 327 [ D.2911 ])
                    (reg:SI 328 [ D.2911 ])))
            (set (reg:SI 394 [ D.2911 ])
                (umod:SI (reg:SI 327 [ D.2911 ])
                    (reg:SI 328 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 406 405 407 42 (parallel [
            (set (reg:SI 330 [ D.2911 ])
                (plus:SI (reg:SI 394 [ D.2911 ])
                    (reg/v:SI 303 [ t ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 407 406 408 42 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 330 [ D.2911 ])
            (const_int 25 [0x19]))) punycode.c:97 -1
     (nil))
(jump_insn 408 407 409 42 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 596)
            (pc))) punycode.c:97 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 596)
(note 409 408 251 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 251 409 593 43 (set (reg:QI 346 [ D.2912 ])
        (const_int 75 [0x4b])) punycode.c:97 -1
     (nil))
(jump_insn 593 251 594 43 (set (pc)
        (label_ref 410)) -1
     (nil)
 -> 410)
(barrier 594 593 596)
(code_label 596 594 595 44 45 "" [1 uses])
(note 595 596 252 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 252 595 410 44 (set (reg:QI 346 [ D.2912 ])
        (const_int 0 [0])) punycode.c:97 -1
     (nil))
(code_label 410 252 411 45 23 "" [1 uses])
(note 411 410 412 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 45 (parallel [
            (set (reg:QI 396 [ D.2912 ])
                (plus:QI (subreg:QI (reg:SI 330 [ D.2911 ]) 0)
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 413 412 414 45 (parallel [
            (set (reg:QI 397)
                (plus:QI (reg:QI 396 [ D.2912 ])
                    (reg:QI 346 [ D.2912 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:279 -1
     (nil))
(insn 414 413 415 45 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 380 [ output ])
                    (reg/v:DI 325 [ out ]))
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: output_51(D), index: out_90, offset: -1B]+0 S1 A8])
        (reg:QI 397)) punycode.c:279 -1
     (nil))
(insn 415 414 416 45 (parallel [
            (set (reg:SI 398)
                (udiv:SI (reg:SI 327 [ D.2911 ])
                    (reg:SI 328 [ D.2911 ])))
            (set (reg:SI 399)
                (umod:SI (reg:SI 327 [ D.2911 ])
                    (reg:SI 328 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:280 -1
     (nil))
(insn 416 415 417 45 (set (reg/v:SI 332 [ delta ])
        (reg:SI 398)) punycode.c:280 -1
     (nil))
(insn 417 416 418 45 (parallel [
            (set (reg/v:SI 333 [ k ])
                (plus:SI (reg/v:SI 333 [ k ])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:271 -1
     (nil))
(insn 418 417 419 45 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 306 [ max_out ])
            (reg/v:DI 325 [ out ]))) punycode.c:273 -1
     (nil))
(jump_insn 419 418 423 45 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 383)
            (pc))) punycode.c:273 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 383)
(note 423 419 421 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 421 423 422 46 (set (pc)
        (label_ref 420)) -1
     (nil)
 -> 420)
(barrier 422 421 424)
(code_label 424 422 425 47 22 "" [1 uses])
(note 425 424 426 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 47 (parallel [
            (set (reg/v:DI 334 [ out ])
                (plus:DI (reg/v:DI 325 [ out ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:283 -1
     (nil))
(insn 427 426 428 47 (parallel [
            (set (reg/f:DI 335 [ D.2916 ])
                (plus:DI (reg/v/f:DI 380 [ output ])
                    (reg/v:DI 325 [ out ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:283 -1
     (nil))
(insn 428 427 429 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 378 [ case_flags ])
            (const_int 0 [0]))) punycode.c:283 -1
     (nil))
(jump_insn 429 428 430 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) punycode.c:283 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 539)
(note 430 429 431 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 342 [ ivtmp.51 ]) [0 MEM[base: _172, offset: 0B]+0 S1 A8])
            (const_int 0 [0]))) punycode.c:283 -1
     (nil))
(jump_insn 432 431 435 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 551)
            (pc))) punycode.c:283 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 551)
(note 435 432 433 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 433 435 434 49 (set (pc)
        (label_ref 539)) -1
     (nil)
 -> 539)
(barrier 434 433 536)
(code_label 536 434 436 50 34 "" [4 uses])
(note 436 536 437 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 50 (parallel [
            (set (reg:QI 400 [ D.2912 ])
                (plus:QI (reg:QI 300 [ D.2912 ])
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:283 -1
     (nil))
(insn 438 437 439 50 (parallel [
            (set (reg:QI 401)
                (minus:QI (reg:QI 400 [ D.2912 ])
                    (reg:QI 357 [ D.2912 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:283 -1
     (nil))
(insn 439 438 440 50 (set (mem:QI (reg/f:DI 335 [ D.2916 ]) [0 *_101+0 S1 A8])
        (reg:QI 401)) punycode.c:283 -1
     (nil))
(insn 440 439 441 50 (parallel [
            (set (reg/v:SI 338 [ h ])
                (plus:SI (reg/v:SI 294 [ h ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:284 -1
     (nil))
(insn 441 440 442 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 294 [ h ])
            (reg/v:SI 316 [ h ]))) punycode.c:134 -1
     (nil))
(jump_insn 442 441 443 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) punycode.c:134 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 449)
(note 443 442 444 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 51 (set (reg:SI 403)
        (const_int 1570730897 [0x5d9f7391])) punycode.c:134 -1
     (nil))
(insn 445 444 446 51 (parallel [
            (set (reg:SI 402)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 293 [ delta ]))
                            (zero_extend:DI (reg:SI 403)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (nil))
(insn 446 445 447 51 (parallel [
            (set (reg/v:SI 349 [ delta ])
                (lshiftrt:SI (reg:SI 402)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 293 [ delta ])
            (const_int 700 [0x2bc]))
        (nil)))
(jump_insn 447 446 448 51 (set (pc)
        (label_ref 452)) punycode.c:134 -1
     (nil)
 -> 452)
(barrier 448 447 449)
(code_label 449 448 450 52 27 "" [1 uses])
(note 450 449 451 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 451 450 452 52 (parallel [
            (set (reg/v:SI 349 [ delta ])
                (lshiftrt:SI (reg/v:SI 293 [ delta ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (nil))
(code_label 452 451 453 53 28 "" [1 uses])
(note 453 452 454 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 53 (parallel [
            (set (reg:SI 404)
                (udiv:SI (reg/v:SI 349 [ delta ])
                    (reg/v:SI 338 [ h ])))
            (set (reg:SI 405)
                (umod:SI (reg/v:SI 349 [ delta ])
                    (reg/v:SI 338 [ h ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:136 -1
     (nil))
(insn 455 454 456 53 (set (reg:SI 350 [ D.2911 ])
        (reg:SI 404)) punycode.c:136 -1
     (nil))
(insn 456 455 457 53 (parallel [
            (set (reg/v:SI 351 [ delta ])
                (plus:SI (reg/v:SI 349 [ delta ])
                    (reg:SI 350 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:136 -1
     (nil))
(insn 457 456 458 53 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 351 [ delta ])
            (const_int 455 [0x1c7]))) punycode.c:138 -1
     (nil))
(jump_insn 458 457 459 53 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 601)
            (pc))) punycode.c:138 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 601)
(note 459 458 257 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 257 459 469 54 (set (reg/v:SI 352 [ k ])
        (const_int 0 [0])) punycode.c:138 -1
     (nil))
(code_label 469 257 460 55 30 "" [1 uses])
(note 460 469 461 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 55 (set (reg:SI 408)
        (const_int -736280107 [0xffffffffd41d41d5])) punycode.c:140 -1
     (nil))
(insn 462 461 463 55 (parallel [
            (set (reg:SI 407)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 351 [ delta ]))
                            (zero_extend:DI (reg:SI 408)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 463 462 464 55 (parallel [
            (set (reg:SI 409)
                (minus:SI (reg/v:SI 351 [ delta ])
                    (reg:SI 407)))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 464 463 465 55 (parallel [
            (set (reg:SI 410)
                (lshiftrt:SI (reg:SI 409)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 465 464 466 55 (parallel [
            (set (reg:SI 411)
                (plus:SI (reg:SI 407)
                    (reg:SI 410)))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 466 465 467 55 (parallel [
            (set (reg:SI 406)
                (lshiftrt:SI (reg:SI 411)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 351 [ delta ])
            (const_int 35 [0x23]))
        (nil)))
(insn 467 466 468 55 (set (reg/v:SI 351 [ delta ])
        (reg:SI 406)) punycode.c:140 -1
     (nil))
(insn 468 467 470 55 (parallel [
            (set (reg/v:SI 352 [ k ])
                (plus:SI (reg/v:SI 352 [ k ])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:138 -1
     (nil))
(insn 470 468 471 55 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 351 [ delta ])
            (const_int 455 [0x1c7]))) punycode.c:138 -1
     (nil))
(jump_insn 471 470 597 55 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) punycode.c:138 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 469)
(note 597 471 598 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(jump_insn 598 597 599 56 (set (pc)
        (label_ref 472)) -1
     (nil)
 -> 472)
(barrier 599 598 601)
(code_label 601 599 600 57 46 "" [1 uses])
(note 600 601 258 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 258 600 472 57 (set (reg/v:SI 352 [ k ])
        (const_int 0 [0])) punycode.c:138 -1
     (nil))
(code_label 472 258 473 58 29 "" [1 uses])
(note 473 472 474 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 475 58 (set (reg:SI 412)
        (reg/v:SI 351 [ delta ])) punycode.c:143 -1
     (nil))
(insn 475 474 476 58 (parallel [
            (set (reg:SI 413)
                (ashift:SI (reg:SI 412)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 476 475 477 58 (parallel [
            (set (reg:SI 414 [ D.2911 ])
                (plus:SI (reg:SI 413)
                    (reg/v:SI 351 [ delta ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 351 [ delta ])
            (const_int 9 [0x9]))
        (nil)))
(insn 477 476 478 58 (parallel [
            (set (reg:SI 415)
                (ashift:SI (reg:SI 414 [ D.2911 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 478 477 479 58 (set (reg:SI 414 [ D.2911 ])
        (reg:SI 415)) punycode.c:143 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 351 [ delta ])
            (const_int 36 [0x24]))
        (nil)))
(insn 479 478 480 58 (parallel [
            (set (reg:SI 416 [ D.2911 ])
                (plus:SI (reg/v:SI 351 [ delta ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 480 479 481 58 (parallel [
            (set (reg:SI 418 [ D.2911 ])
                (udiv:SI (reg:SI 414 [ D.2911 ])
                    (reg:SI 416 [ D.2911 ])))
            (set (reg:SI 419)
                (umod:SI (reg:SI 414 [ D.2911 ])
                    (reg:SI 416 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 481 480 259 58 (parallel [
            (set (reg/v:SI 295 [ bias ])
                (plus:SI (reg:SI 418 [ D.2911 ])
                    (reg/v:SI 352 [ k ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 259 481 260 58 (set (reg/v:DI 325 [ out ])
        (reg/v:DI 334 [ out ])) punycode.c:283 -1
     (nil))
(insn 260 259 261 58 (set (reg/v:SI 294 [ h ])
        (reg/v:SI 338 [ h ])) punycode.c:286 -1
     (nil))
(insn 261 260 482 58 (set (reg/v:SI 293 [ delta ])
        (const_int 0 [0])) punycode.c:285 -1
     (nil))
(code_label 482 261 483 59 19 "" [1 uses])
(note 483 482 484 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 59 (parallel [
            (set (reg:DI 326 [ ivtmp.49 ])
                (plus:DI (reg:DI 326 [ ivtmp.49 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 485 484 487 59 (parallel [
            (set (reg:DI 342 [ ivtmp.51 ])
                (plus:DI (reg:DI 342 [ ivtmp.51 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 487 485 488 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 342 [ ivtmp.51 ])
            (reg:DI 368 [ D.2920 ]))) punycode.c:258 -1
     (nil))
(jump_insn 488 487 489 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 486)
            (pc))) punycode.c:258 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 486)
(note 489 488 490 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 60 (parallel [
            (set (reg/v:SI 340 [ delta ])
                (plus:SI (reg/v:SI 293 [ delta ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:290 -1
     (nil))
(insn 491 490 492 60 (parallel [
            (set (reg/v:SI 341 [ n ])
                (plus:SI (reg/v:SI 297 [ m ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:290 -1
     (nil))
(insn 492 491 493 60 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 294 [ h ])
            (reg/v:SI 305 [ input_len ]))) punycode.c:237 -1
     (nil))
(jump_insn 493 492 496 60 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 499)
            (pc))) punycode.c:237 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 499)
(note 496 493 494 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(jump_insn 494 496 495 61 (set (pc)
        (label_ref 503)) -1
     (nil)
 -> 503)
(barrier 495 494 580)
(code_label 580 495 579 62 41 "" [1 uses])
(note 579 580 262 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 262 579 497 62 (set (reg/v:DI 325 [ out ])
        (reg/v:DI 299 [ out ])) -1
     (nil))
(code_label 497 262 498 63 12 "" [1 uses])
(note 498 497 263 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 263 498 264 63 (set (reg/v:SI 294 [ h ])
        (reg/v:SI 316 [ h ])) -1
     (nil))
(insn 264 263 265 63 (set (reg/v:SI 295 [ bias ])
        (const_int 72 [0x48])) -1
     (nil))
(insn 265 264 266 63 (set (reg/v:SI 340 [ delta ])
        (const_int 0 [0])) -1
     (nil))
(insn 266 265 499 63 (set (reg/v:SI 341 [ n ])
        (const_int 128 [0x80])) -1
     (nil))
(code_label 499 266 500 64 32 "" [1 uses])
(note 500 499 244 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 244 500 245 64 (set (reg:DI 321 [ ivtmp.53 ])
        (const_int 0 [0])) punycode.c:218 -1
     (nil))
(insn 245 244 501 64 (set (reg/v:SI 297 [ m ])
        (const_int -1 [0xffffffffffffffff])) punycode.c:218 -1
     (nil))
(jump_insn 501 245 502 64 (set (pc)
        (label_ref 363)) -1
     (nil)
 -> 363)
(barrier 502 501 570)
(code_label 570 502 569 65 38 "" [1 uses])
(note 569 570 267 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 267 569 503 65 (set (reg/v:DI 325 [ out ])
        (const_int 0 [0])) punycode.c:206 -1
     (nil))
(code_label 503 267 504 66 4 "" [2 uses])
(note 504 503 505 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 270 66 (set (mem:DI (reg/v/f:DI 379 [ output_length ]) [2 *output_length_40(D)+0 S8 A64])
        (reg/v:DI 325 [ out ])) punycode.c:293 -1
     (nil))
(insn 270 505 506 66 (set (reg:SI 301 [ D.2913 ])
        (const_int 0 [0])) punycode.c:294 -1
     (nil))
(code_label 506 270 507 67 3 "" [2 uses])
(note 507 506 508 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 508 507 509 67 (set (reg:SI 375 [ <retval> ])
        (reg:SI 301 [ D.2913 ])) -1
     (nil))
(jump_insn 509 508 510 67 (set (pc)
        (label_ref 565)) -1
     (nil)
 -> 565)
(barrier 510 509 530)
(code_label 530 510 511 68 33 "" [1 uses])
(note 511 530 512 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 68 (parallel [
            (set (reg:SI 421 [ D.2911 ])
                (mult:SI (reg:SI 296 [ D.2911 ])
                    (reg:SI 365 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:255 -1
     (nil))
(insn 513 512 514 68 (parallel [
            (set (reg/v:SI 293 [ delta ])
                (plus:SI (reg:SI 421 [ D.2911 ])
                    (reg/v:SI 340 [ delta ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:255 -1
     (nil))
(insn 514 513 515 68 (set (reg:DI 326 [ ivtmp.49 ])
        (reg/v/f:DI 377 [ input ])) -1
     (nil))
(insn 515 514 516 68 (set (reg:DI 342 [ ivtmp.51 ])
        (reg/v/f:DI 378 [ case_flags ])) -1
     (nil))
(insn 516 515 517 68 (parallel [
            (set (reg:SI 422 [ D.2911 ])
                (plus:SI (reg/v:SI 305 [ input_len ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 517 516 518 68 (set (reg:DI 423 [ D.2922 ])
        (zero_extend:DI (reg:SI 422 [ D.2911 ]))) -1
     (nil))
(insn 518 517 519 68 (parallel [
            (set (reg:DI 424 [ D.2922 ])
                (plus:DI (reg:DI 423 [ D.2922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 519 518 520 68 (parallel [
            (set (reg:DI 368 [ D.2920 ])
                (plus:DI (reg/v/f:DI 378 [ case_flags ])
                    (reg:DI 424 [ D.2922 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 520 519 521 68 (set (pc)
        (label_ref 486)) -1
     (nil)
 -> 486)
(barrier 521 520 522)
(code_label 522 521 523 69 16 "" [1 uses])
(note 523 522 524 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 69 (parallel [
            (set (reg:SI 365 [ D.2911 ])
                (minus:SI (reg/v:SI 297 [ m ])
                    (reg/v:SI 341 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:253 -1
     (nil))
(insn 525 524 526 69 (parallel [
            (set (reg:SI 296 [ D.2911 ])
                (plus:SI (reg/v:SI 294 [ h ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:253 -1
     (nil))
(insn 526 525 527 69 (set (reg:SI 425 [ D.2911 ])
        (not:SI (reg/v:SI 340 [ delta ]))) punycode.c:253 -1
     (nil))
(insn 527 526 528 69 (parallel [
            (set (reg:SI 427 [ D.2911 ])
                (udiv:SI (reg:SI 425 [ D.2911 ])
                    (reg:SI 296 [ D.2911 ])))
            (set (reg:SI 428)
                (umod:SI (reg:SI 425 [ D.2911 ])
                    (reg:SI 296 [ D.2911 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:253 -1
     (nil))
(insn 528 527 529 69 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 427 [ D.2911 ])
            (reg:SI 365 [ D.2911 ]))) punycode.c:253 -1
     (nil))
(jump_insn 529 528 533 69 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) punycode.c:253 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 375)
(note 533 529 531 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(jump_insn 531 533 532 70 (set (pc)
        (label_ref 530)) punycode.c:253 -1
     (nil)
 -> 530)
(barrier 532 531 541)
(code_label 541 532 534 71 35 "" [1 uses])
(note 534 541 535 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 535 534 256 71 (parallel [
            (set (reg:QI 300 [ D.2912 ])
                (plus:QI (subreg:QI (reg/v:SI 332 [ delta ]) 0)
                    (const_int 75 [0x4b])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:97 -1
     (nil))
(insn 256 535 537 71 (set (reg:QI 357 [ D.2912 ])
        (const_int 0 [0])) punycode.c:97 -1
     (nil))
(jump_insn 537 256 538 71 (set (pc)
        (label_ref 536)) punycode.c:97 -1
     (nil)
 -> 536)
(barrier 538 537 539)
(code_label 539 538 540 72 25 "" [2 uses])
(note 540 539 542 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 542 540 543 72 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 332 [ delta ])
            (const_int 25 [0x19]))) punycode.c:97 -1
     (nil))
(jump_insn 543 542 546 72 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) punycode.c:97 -1
     (int_list:REG_BR_PROB 4976 (nil))
 -> 541)
(note 546 543 544 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(jump_insn 544 546 545 73 (set (pc)
        (label_ref 560)) punycode.c:97 -1
     (nil)
 -> 560)
(barrier 545 544 553)
(code_label 553 545 547 74 37 "" [1 uses])
(note 547 553 548 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 255 74 (parallel [
            (set (reg:QI 300 [ D.2912 ])
                (plus:QI (subreg:QI (reg/v:SI 332 [ delta ]) 0)
                    (const_int 75 [0x4b])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:97 -1
     (nil))
(insn 255 548 549 74 (set (reg:QI 357 [ D.2912 ])
        (const_int 32 [0x20])) punycode.c:97 -1
     (nil))
(jump_insn 549 255 550 74 (set (pc)
        (label_ref 536)) punycode.c:97 -1
     (nil)
 -> 536)
(barrier 550 549 551)
(code_label 551 550 552 75 26 "" [1 uses])
(note 552 551 554 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 554 552 555 75 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 332 [ delta ])
            (const_int 25 [0x19]))) punycode.c:97 -1
     (nil))
(jump_insn 555 554 556 75 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 553)
            (pc))) punycode.c:97 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 553)
(note 556 555 557 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 254 76 (set (reg:QI 300 [ D.2912 ])
        (subreg:QI (reg/v:SI 332 [ delta ]) 0)) punycode.c:97 -1
     (nil))
(insn 254 557 558 76 (set (reg:QI 357 [ D.2912 ])
        (const_int 32 [0x20])) punycode.c:97 -1
     (nil))
(jump_insn 558 254 559 76 (set (pc)
        (label_ref 536)) punycode.c:97 -1
     (nil)
 -> 536)
(barrier 559 558 560)
(code_label 560 559 561 77 36 "" [1 uses])
(note 561 560 562 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 253 77 (set (reg:QI 300 [ D.2912 ])
        (subreg:QI (reg/v:SI 332 [ delta ]) 0)) punycode.c:97 -1
     (nil))
(insn 253 562 563 77 (set (reg:QI 357 [ D.2912 ])
        (const_int 0 [0])) punycode.c:97 -1
     (nil))
(jump_insn 563 253 564 77 (set (pc)
        (label_ref 536)) punycode.c:97 -1
     (nil)
 -> 536)
(barrier 564 563 565)
(code_label 565 564 568 78 1 "" [1 uses])
(note 568 565 566 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 566 568 567 78 (set (reg/i:SI 0 ax)
        (reg:SI 375 [ <retval> ])) punycode.c:295 -1
     (nil))
(insn 567 566 0 78 (use (reg/i:SI 0 ax)) punycode.c:295 -1
     (nil))

;; Function punycode_decode (punycode_decode, funcdef_no=14, decl_uid=2518, cgraph_uid=14, symbol_order=15)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47
Edge 2->4 redirected to 54
Edge 4->44 redirected to 56
Edge 6->8 redirected to 57
Edge 11->19 redirected to 58
Edge 18->13 redirected to 59
Edge 19->44 redirected to 60
Edge 26->29 redirected to 61
Edge 27->29 redirected to 62
Edge 30->45 redirected to 63
Edge 35->38 redirected to 65
Edge 38->45 redirected to 66
Edge 43->21 redirected to 67
Edge 46->45 redirected to 68


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 11 failed.
Forwarding edge 22->23 to 67 failed.
Forwarding edge 32->33 to 21 failed.
Forwarding edge 48->49 to 51 failed.
Forwarding edge 56->57 to 60 failed.
Forwarding edge 65->66 to 34 failed.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 11 failed.
Forwarding edge 22->23 to 67 failed.
Forwarding edge 32->33 to 21 failed.
Forwarding edge 48->49 to 51 failed.
Forwarding edge 56->57 to 60 failed.
Forwarding edge 65->66 to 34 failed.


;;
;; Full RTL generated for this function:
;;
(note 192 0 226 NOTE_INSN_DELETED)
(note 226 192 193 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 193 226 194 2 (set (reg/v:DI 331 [ input_length ])
        (reg:DI 5 di [ input_length ])) punycode.c:339 -1
     (nil))
(insn 194 193 195 2 (set (reg/v/f:DI 332 [ input ])
        (reg:DI 4 si [ input ])) punycode.c:339 -1
     (nil))
(insn 195 194 196 2 (set (reg/v/f:DI 333 [ output_length ])
        (reg:DI 1 dx [ output_length ])) punycode.c:339 -1
     (nil))
(insn 196 195 197 2 (set (reg/v/f:DI 334 [ output ])
        (reg:DI 2 cx [ output ])) punycode.c:339 -1
     (nil))
(insn 197 196 198 2 (set (reg/v/f:DI 335 [ case_flags ])
        (reg:DI 37 r8 [ case_flags ])) punycode.c:339 -1
     (nil))
(note 198 197 228 2 NOTE_INSN_FUNCTION_BEG)
(insn 228 198 229 2 (set (reg:DI 261 [ D.2957 ])
        (mem:DI (reg/v/f:DI 333 [ output_length ]) [2 *output_length_27(D)+0 S8 A64])) punycode.c:347 -1
     (nil))
(insn 229 228 230 2 (set (reg:DI 336)
        (const_int 4294967295 [0xffffffff])) punycode.c:348 -1
     (nil))
(insn 230 229 231 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 261 [ D.2957 ])
            (reg:DI 336))) punycode.c:348 -1
     (nil))
(jump_insn 231 230 232 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 493)
            (pc))) punycode.c:348 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 493)
(note 232 231 233 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 490 4 (set (reg/v:SI 258 [ max_out ])
        (subreg:SI (reg:DI 261 [ D.2957 ]) 0)) punycode.c:348 -1
     (nil))
(jump_insn 490 233 491 4 (set (pc)
        (label_ref 234)) -1
     (nil)
 -> 234)
(barrier 491 490 493)
(code_label 493 491 492 5 101 "" [1 uses])
(note 492 493 199 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 199 492 234 5 (set (reg/v:SI 258 [ max_out ])
        (const_int -1 [0xffffffffffffffff])) punycode.c:348 -1
     (nil))
(code_label 234 199 235 6 74 "" [1 uses])
(note 235 234 236 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 331 [ input_length ])
            (const_int 0 [0]))) punycode.c:355 -1
     (nil))
(jump_insn 237 236 238 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 498)
            (pc))) punycode.c:355 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 498)
(note 238 237 200 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 200 238 201 7 (set (reg/v:DI 264 [ b ])
        (const_int 0 [0])) punycode.c:355 -1
     (nil))
(insn 201 200 246 7 (set (reg/v:DI 256 [ b ])
        (const_int 0 [0])) punycode.c:355 -1
     (nil))
(code_label 246 201 239 8 77 "" [1 uses])
(note 239 246 240 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 240 239 241 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 332 [ input ])
                    (reg/v:DI 264 [ b ])) [0 MEM[base: input_33(D), index: b_148, offset: 0B]+0 S1 A8])
            (const_int 45 [0x2d]))) punycode.c:356 -1
     (nil))
(jump_insn 241 240 242 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 502)
            (pc))) punycode.c:356 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 502)
(note 242 241 499 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 499 242 500 9 (set (pc)
        (label_ref 243)) -1
     (nil)
 -> 243)
(barrier 500 499 502)
(code_label 502 500 501 10 103 "" [1 uses])
(note 501 502 202 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 202 501 243 10 (set (reg/v:DI 256 [ b ])
        (reg/v:DI 264 [ b ])) -1
     (nil))
(code_label 243 202 244 11 76 "" [1 uses])
(note 244 243 245 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 247 11 (parallel [
            (set (reg/v:DI 264 [ b ])
                (plus:DI (reg/v:DI 264 [ b ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:355 -1
     (nil))
(insn 247 245 248 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 331 [ input_length ])
            (reg/v:DI 264 [ b ]))) punycode.c:355 -1
     (nil))
(jump_insn 248 247 249 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 246)
            (pc))) punycode.c:355 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 246)
(note 249 248 250 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 12 (set (reg:DI 337 [ D.2957 ])
        (zero_extend:DI (reg/v:SI 258 [ max_out ]))) punycode.c:358 -1
     (nil))
(insn 251 250 252 12 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 256 [ b ])
            (reg:DI 337 [ D.2957 ]))) punycode.c:358 -1
     (nil))
(jump_insn 252 251 417 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) punycode.c:358 -1
     (int_list:REG_BR_PROB 2637 (nil))
 -> 256)
(code_label 417 252 253 13 96 "" [1 uses])
(note 253 417 220 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 220 253 254 13 (set (reg:SI 259 [ D.2956 ])
        (const_int 2 [0x2])) punycode.c:359 -1
     (nil))
(jump_insn 254 220 255 13 (set (pc)
        (label_ref 466)) -1
     (nil)
 -> 466)
(barrier 255 254 256)
(code_label 256 255 257 14 78 "" [1 uses])
(note 257 256 258 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 256 [ b ])
            (const_int 0 [0]))) punycode.c:361 -1
     (nil))
(jump_insn 259 258 260 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 504)
            (pc))) punycode.c:361 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 504)
(note 260 259 261 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 261 260 262 15 (set (reg:DI 329 [ ivtmp.87 ])
        (reg/v/f:DI 332 [ input ])) -1
     (nil))
(insn 262 261 203 15 (parallel [
            (set (reg:DI 326 [ D.2964 ])
                (plus:DI (reg/v/f:DI 332 [ input ])
                    (reg/v:DI 256 [ b ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 203 262 505 15 (set (reg/v:SI 327 [ i ])
        (const_int 0 [0])) punycode.c:361 -1
     (nil))
(jump_insn 505 203 506 15 (set (pc)
        (label_ref 294)) -1
     (nil)
 -> 294)
(barrier 506 505 508)
(code_label 508 506 507 16 105 "" [1 uses])
(note 507 508 204 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 204 507 294 16 (set (reg/v:SI 327 [ i ])
        (reg/v:SI 275 [ i ])) punycode.c:367 -1
     (nil))
(code_label 294 204 263 17 84 "" [1 uses])
(note 263 294 264 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 335 [ case_flags ])
            (const_int 0 [0]))) punycode.c:363 -1
     (nil))
(jump_insn 265 264 266 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) punycode.c:363 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 270)
(note 266 265 267 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 18 (set (reg/f:DI 254 [ D.2953 ])
        (reg:DI 329 [ ivtmp.87 ])) -1
     (nil))
(jump_insn 268 267 269 18 (set (pc)
        (label_ref 279)) -1
     (nil)
 -> 279)
(barrier 269 268 270)
(code_label 270 269 271 19 81 "" [1 uses])
(note 271 270 272 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 19 (set (reg/f:DI 254 [ D.2953 ])
        (reg:DI 329 [ ivtmp.87 ])) punycode.c:364 -1
     (nil))
(insn 273 272 274 19 (set (reg:DI 338 [ D.2954 ])
        (zero_extend:DI (reg/v:SI 327 [ i ]))) punycode.c:364 -1
     (nil))
(insn 274 273 275 19 (set (reg:SI 339 [ D.2955 ])
        (sign_extend:SI (mem:QI (reg/f:DI 254 [ D.2953 ]) [0 MEM[base: _42, offset: 0B]+0 S1 A8]))) punycode.c:364 -1
     (nil))
(insn 275 274 276 19 (parallel [
            (set (reg:SI 340 [ D.2955 ])
                (plus:SI (reg:SI 339 [ D.2955 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:364 -1
     (nil))
(insn 276 275 277 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 340 [ D.2955 ])
            (const_int 25 [0x19]))) punycode.c:364 -1
     (nil))
(insn 277 276 278 19 (set (reg:QI 341 [ D.2960 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) punycode.c:364 -1
     (nil))
(insn 278 277 279 19 (set (mem:QI (plus:DI (reg/v/f:DI 335 [ case_flags ])
                (reg:DI 338 [ D.2954 ])) [0 *_41+0 S1 A8])
        (reg:QI 341 [ D.2960 ])) punycode.c:364 -1
     (nil))
(code_label 279 278 280 20 82 "" [1 uses])
(note 280 279 281 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 20 (set (reg:QI 274 [ D.2958 ])
        (mem:QI (reg/f:DI 254 [ D.2953 ]) [0 *_1+0 S1 A8])) punycode.c:365 -1
     (nil))
(insn 282 281 283 20 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:QI 274 [ D.2958 ])
            (const_int 0 [0]))) punycode.c:365 -1
     (nil))
(jump_insn 283 282 327 20 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 287)
            (pc))) punycode.c:365 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 287)
(code_label 327 283 284 21 88 "" [2 uses])
(note 284 327 221 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 221 284 285 21 (set (reg:SI 259 [ D.2956 ])
        (const_int 1 [0x1])) punycode.c:366 -1
     (nil))
(jump_insn 285 221 286 21 (set (pc)
        (label_ref 466)) -1
     (nil)
 -> 466)
(barrier 286 285 287)
(code_label 287 286 288 22 83 "" [1 uses])
(note 288 287 289 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 22 (parallel [
            (set (reg/v:SI 275 [ i ])
                (plus:SI (reg/v:SI 327 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:367 -1
     (nil))
(insn 290 289 291 22 (set (reg:DI 342 [ D.2957 ])
        (zero_extend:DI (reg/v:SI 327 [ i ]))) punycode.c:367 -1
     (nil))
(insn 291 290 292 22 (set (reg:SI 343)
        (sign_extend:SI (reg:QI 274 [ D.2958 ]))) punycode.c:367 -1
     (nil))
(insn 292 291 293 22 (set (mem:SI (plus:DI (mult:DI (reg:DI 342 [ D.2957 ])
                    (const_int 4 [0x4]))
                (reg/v/f:DI 334 [ output ])) [1 *_55+0 S4 A32])
        (reg:SI 343)) punycode.c:367 -1
     (nil))
(insn 293 292 295 22 (parallel [
            (set (reg:DI 329 [ ivtmp.87 ])
                (plus:DI (reg:DI 329 [ ivtmp.87 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 295 293 296 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 326 [ D.2964 ])
            (reg:DI 329 [ ivtmp.87 ]))) punycode.c:361 -1
     (nil))
(jump_insn 296 295 299 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 508)
            (pc))) punycode.c:361 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 508)
(note 299 296 297 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(jump_insn 297 299 298 23 (set (pc)
        (label_ref 481)) -1
     (nil)
 -> 481)
(barrier 298 297 504)
(code_label 504 298 503 24 104 "" [1 uses])
(note 503 504 205 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 205 503 206 24 (set (reg/v:SI 275 [ i ])
        (const_int 0 [0])) punycode.c:361 -1
     (nil))
(insn 206 205 300 24 (set (reg/v:DI 262 [ in ])
        (const_int 0 [0])) punycode.c:373 -1
     (nil))
(code_label 300 206 301 25 80 "" [1 uses])
(note 301 300 302 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 262 [ in ])
            (reg/v:DI 331 [ input_length ]))) punycode.c:373 -1
     (nil))
(jump_insn 303 302 304 25 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 512)
            (pc))) punycode.c:373 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 512)
(note 304 303 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 207 304 208 26 (set (reg/v:SI 325 [ n ])
        (const_int 128 [0x80])) punycode.c:373 -1
     (nil))
(insn 208 207 209 26 (set (reg/v:SI 288 [ bias ])
        (const_int 72 [0x48])) punycode.c:373 -1
     (nil))
(insn 209 208 534 26 (set (reg/v:SI 273 [ i ])
        (const_int 0 [0])) punycode.c:373 -1
     (nil))
(jump_insn 534 209 535 26 (set (pc)
        (label_ref 460)) -1
     (nil)
 -> 460)
(barrier 535 534 537)
(code_label 537 535 536 27 112 "" [1 uses])
(note 536 537 210 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 210 536 460 27 (set (reg/v:SI 275 [ i ])
        (reg/v:SI 289 [ i ])) punycode.c:403 -1
     (nil))
(code_label 460 210 305 28 99 "" [1 uses])
(note 305 460 306 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 211 28 (parallel [
            (set (reg:DI 324 [ ivtmp.76 ])
                (plus:DI (reg/v/f:DI 332 [ input ])
                    (reg/v:DI 262 [ in ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 211 306 212 28 (set (reg/v:SI 286 [ i ])
        (reg/v:SI 273 [ i ])) punycode.c:403 -1
     (nil))
(insn 212 211 213 28 (set (reg/v:SI 313 [ k ])
        (const_int 36 [0x24])) punycode.c:403 -1
     (nil))
(insn 213 212 359 28 (set (reg/v:SI 312 [ w ])
        (const_int 1 [0x1])) punycode.c:403 -1
     (nil))
(code_label 359 213 307 29 91 "" [1 uses])
(note 307 359 308 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 29 (parallel [
            (set (reg/v:DI 262 [ in ])
                (plus:DI (reg/v:DI 262 [ in ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:388 -1
     (nil))
(insn 309 308 310 29 (set (reg/f:DI 280 [ D.2953 ])
        (reg:DI 324 [ ivtmp.76 ])) punycode.c:388 -1
     (nil))
(insn 310 309 311 29 (set (reg:SI 282 [ D.2955 ])
        (sign_extend:SI (mem:QI (reg/f:DI 280 [ D.2953 ]) [0 MEM[base: _65, offset: 0B]+0 S1 A8]))) punycode.c:388 -1
     (nil))
(insn 311 310 312 29 (parallel [
            (set (reg:SI 344 [ D.2955 ])
                (plus:SI (reg:SI 282 [ D.2955 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:84 -1
     (nil))
(insn 312 311 313 29 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 344 [ D.2955 ])
            (const_int 9 [0x9]))) punycode.c:84 -1
     (nil))
(jump_insn 313 312 314 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 318)
            (pc))) punycode.c:84 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 318)
(note 314 313 315 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 30 (parallel [
            (set (reg:SI 315 [ D.2955 ])
                (plus:SI (reg:SI 282 [ D.2955 ])
                    (const_int -22 [0xffffffffffffffea])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:84 -1
     (nil))
(jump_insn 316 315 317 30 (set (pc)
        (label_ref 471)) punycode.c:84 -1
     (nil)
 -> 471)
(barrier 317 316 318)
(code_label 318 317 319 31 86 "" [1 uses])
(note 319 318 320 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 320 319 321 31 (parallel [
            (set (reg:SI 315 [ D.2955 ])
                (plus:SI (reg:SI 282 [ D.2955 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:84 -1
     (nil))
(insn 321 320 322 31 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 315 [ D.2955 ])
            (const_int 25 [0x19]))) punycode.c:84 -1
     (nil))
(jump_insn 322 321 323 31 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) punycode.c:84 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 471)
(note 323 322 324 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 32 (parallel [
            (set (reg:SI 315 [ D.2955 ])
                (plus:SI (reg:SI 282 [ D.2955 ])
                    (const_int -97 [0xffffffffffffff9f])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:85 -1
     (nil))
(insn 325 324 326 32 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 315 [ D.2955 ])
            (const_int 25 [0x19]))) punycode.c:85 -1
     (nil))
(jump_insn 326 325 330 32 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) punycode.c:85 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 471)
(note 330 326 328 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 328 330 329 33 (set (pc)
        (label_ref 327)) punycode.c:85 -1
     (nil)
 -> 327)
(barrier 329 328 477)
(code_label 477 329 331 34 100 "" [1 uses])
(note 331 477 332 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 34 (parallel [
            (set (reg:SI 345 [ D.2955 ])
                (mult:SI (reg/v:SI 312 [ w ])
                    (reg:SI 315 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:393 -1
     (nil))
(insn 333 332 334 34 (parallel [
            (set (reg/v:SI 286 [ i ])
                (plus:SI (reg/v:SI 286 [ i ])
                    (reg:SI 345 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:393 -1
     (nil))
(insn 334 333 335 34 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 313 [ k ])
            (reg/v:SI 288 [ bias ]))) punycode.c:394 -1
     (nil))
(jump_insn 335 334 336 34 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 516)
            (pc))) punycode.c:394 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 516)
(note 336 335 337 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 35 (parallel [
            (set (reg:SI 346 [ D.2955 ])
                (plus:SI (reg/v:SI 288 [ bias ])
                    (const_int 26 [0x1a])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:395 -1
     (nil))
(insn 338 337 339 35 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 346 [ D.2955 ])
            (reg/v:SI 313 [ k ]))) punycode.c:395 -1
     (nil))
(jump_insn 339 338 340 35 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 520)
            (pc))) punycode.c:395 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 520)
(note 340 339 341 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 513 36 (parallel [
            (set (reg/v:SI 260 [ t ])
                (minus:SI (reg/v:SI 313 [ k ])
                    (reg/v:SI 288 [ bias ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:395 -1
     (nil))
(jump_insn 513 341 514 36 (set (pc)
        (label_ref 342)) -1
     (nil)
 -> 342)
(barrier 514 513 516)
(code_label 516 514 515 37 107 "" [1 uses])
(note 515 516 215 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 215 515 517 37 (set (reg/v:SI 260 [ t ])
        (const_int 1 [0x1])) punycode.c:394 -1
     (nil))
(jump_insn 517 215 518 37 (set (pc)
        (label_ref 342)) -1
     (nil)
 -> 342)
(barrier 518 517 520)
(code_label 520 518 519 38 108 "" [1 uses])
(note 519 520 214 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 214 519 342 38 (set (reg/v:SI 260 [ t ])
        (const_int 26 [0x1a])) punycode.c:395 -1
     (nil))
(code_label 342 214 343 39 89 "" [2 uses])
(note 343 342 344 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 39 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 260 [ t ])
            (reg:SI 315 [ D.2955 ]))) punycode.c:396 -1
     (nil))
(jump_insn 345 344 346 39 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) punycode.c:396 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 363)
(note 346 345 347 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 40 (set (reg:SI 347)
        (const_int 36 [0x24])) punycode.c:398 -1
     (nil))
(insn 348 347 349 40 (parallel [
            (set (reg:SI 310 [ D.2955 ])
                (minus:SI (reg:SI 347)
                    (reg/v:SI 260 [ t ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:398 -1
     (nil))
(insn 349 348 350 40 (set (reg:SI 351)
        (const_int -1 [0xffffffffffffffff])) punycode.c:398 -1
     (nil))
(insn 350 349 351 40 (parallel [
            (set (reg:SI 349 [ D.2955 ])
                (udiv:SI (reg:SI 351)
                    (reg:SI 310 [ D.2955 ])))
            (set (reg:SI 350)
                (umod:SI (reg:SI 351)
                    (reg:SI 310 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:398 -1
     (nil))
(insn 351 350 352 40 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 349 [ D.2955 ])
            (reg/v:SI 312 [ w ]))) punycode.c:398 -1
     (nil))
(jump_insn 352 351 353 40 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 524)
            (pc))) punycode.c:398 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 524)
(note 353 352 354 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 41 (parallel [
            (set (reg/v:SI 312 [ w ])
                (mult:SI (reg/v:SI 312 [ w ])
                    (reg:SI 310 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:400 -1
     (nil))
(insn 355 354 356 41 (parallel [
            (set (reg/v:SI 313 [ k ])
                (plus:SI (reg/v:SI 313 [ k ])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:384 -1
     (nil))
(insn 356 355 357 41 (parallel [
            (set (reg:DI 324 [ ivtmp.76 ])
                (plus:DI (reg:DI 324 [ ivtmp.76 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 357 356 358 41 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 331 [ input_length ])
            (reg/v:DI 262 [ in ]))) punycode.c:386 -1
     (nil))
(jump_insn 358 357 362 41 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) punycode.c:386 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 327)
(note 362 358 360 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 360 362 361 42 (set (pc)
        (label_ref 359)) -1
     (nil)
 -> 359)
(barrier 361 360 363)
(code_label 363 361 364 43 90 "" [1 uses])
(note 364 363 365 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 43 (parallel [
            (set (reg/v:SI 289 [ i ])
                (plus:SI (reg/v:SI 275 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:403 -1
     (nil))
(insn 366 365 367 43 (parallel [
            (set (reg:SI 290 [ D.2955 ])
                (minus:SI (reg/v:SI 286 [ i ])
                    (reg/v:SI 273 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:403 -1
     (nil))
(insn 367 366 368 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 273 [ i ])
            (const_int 0 [0]))) punycode.c:134 -1
     (nil))
(jump_insn 368 367 369 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) punycode.c:134 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 375)
(note 369 368 370 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 370 369 371 44 (set (reg:SI 353)
        (const_int 1570730897 [0x5d9f7391])) punycode.c:134 -1
     (nil))
(insn 371 370 372 44 (parallel [
            (set (reg:SI 352)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg:SI 290 [ D.2955 ]))
                            (zero_extend:DI (reg:SI 353)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (nil))
(insn 372 371 373 44 (parallel [
            (set (reg/v:SI 316 [ delta ])
                (lshiftrt:SI (reg:SI 352)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (expr_list:REG_EQUAL (udiv:SI (reg:SI 290 [ D.2955 ])
            (const_int 700 [0x2bc]))
        (nil)))
(jump_insn 373 372 374 44 (set (pc)
        (label_ref 378)) punycode.c:134 -1
     (nil)
 -> 378)
(barrier 374 373 375)
(code_label 375 374 376 45 92 "" [1 uses])
(note 376 375 377 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 45 (parallel [
            (set (reg/v:SI 316 [ delta ])
                (lshiftrt:SI (reg:SI 290 [ D.2955 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:134 -1
     (nil))
(code_label 378 377 379 46 93 "" [1 uses])
(note 379 378 380 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 46 (parallel [
            (set (reg:SI 354)
                (udiv:SI (reg/v:SI 316 [ delta ])
                    (reg/v:SI 289 [ i ])))
            (set (reg:SI 355)
                (umod:SI (reg/v:SI 316 [ delta ])
                    (reg/v:SI 289 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:136 -1
     (nil))
(insn 381 380 382 46 (set (reg:SI 317 [ D.2955 ])
        (reg:SI 354)) punycode.c:136 -1
     (nil))
(insn 382 381 383 46 (parallel [
            (set (reg/v:SI 318 [ delta ])
                (plus:SI (reg/v:SI 316 [ delta ])
                    (reg:SI 317 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:136 -1
     (nil))
(insn 383 382 384 46 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 318 [ delta ])
            (const_int 455 [0x1c7]))) punycode.c:138 -1
     (nil))
(jump_insn 384 383 385 46 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 529)
            (pc))) punycode.c:138 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 529)
(note 385 384 216 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 216 385 395 47 (set (reg/v:SI 319 [ k ])
        (const_int 0 [0])) punycode.c:138 -1
     (nil))
(code_label 395 216 386 48 95 "" [1 uses])
(note 386 395 387 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 388 48 (set (reg:SI 358)
        (const_int -736280107 [0xffffffffd41d41d5])) punycode.c:140 -1
     (nil))
(insn 388 387 389 48 (parallel [
            (set (reg:SI 357)
                (truncate:SI (lshiftrt:DI (mult:DI (zero_extend:DI (reg/v:SI 318 [ delta ]))
                            (zero_extend:DI (reg:SI 358)))
                        (const_int 32 [0x20]))))
            (clobber (scratch:SI))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 389 388 390 48 (parallel [
            (set (reg:SI 359)
                (minus:SI (reg/v:SI 318 [ delta ])
                    (reg:SI 357)))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 390 389 391 48 (parallel [
            (set (reg:SI 360)
                (lshiftrt:SI (reg:SI 359)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 391 390 392 48 (parallel [
            (set (reg:SI 361)
                (plus:SI (reg:SI 357)
                    (reg:SI 360)))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (nil))
(insn 392 391 393 48 (parallel [
            (set (reg:SI 356)
                (lshiftrt:SI (reg:SI 361)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:140 -1
     (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 318 [ delta ])
            (const_int 35 [0x23]))
        (nil)))
(insn 393 392 394 48 (set (reg/v:SI 318 [ delta ])
        (reg:SI 356)) punycode.c:140 -1
     (nil))
(insn 394 393 396 48 (parallel [
            (set (reg/v:SI 319 [ k ])
                (plus:SI (reg/v:SI 319 [ k ])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:138 -1
     (nil))
(insn 396 394 397 48 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 318 [ delta ])
            (const_int 455 [0x1c7]))) punycode.c:138 -1
     (nil))
(jump_insn 397 396 525 48 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) punycode.c:138 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 395)
(note 525 397 526 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 526 525 527 49 (set (pc)
        (label_ref 398)) -1
     (nil)
 -> 398)
(barrier 527 526 529)
(code_label 529 527 528 50 110 "" [1 uses])
(note 528 529 217 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 217 528 398 50 (set (reg/v:SI 319 [ k ])
        (const_int 0 [0])) punycode.c:138 -1
     (nil))
(code_label 398 217 399 51 94 "" [1 uses])
(note 399 398 400 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 51 (set (reg:SI 362)
        (reg/v:SI 318 [ delta ])) punycode.c:143 -1
     (nil))
(insn 401 400 402 51 (parallel [
            (set (reg:SI 363)
                (ashift:SI (reg:SI 362)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 402 401 403 51 (parallel [
            (set (reg:SI 364 [ D.2955 ])
                (plus:SI (reg:SI 363)
                    (reg/v:SI 318 [ delta ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 318 [ delta ])
            (const_int 9 [0x9]))
        (nil)))
(insn 403 402 404 51 (parallel [
            (set (reg:SI 365)
                (ashift:SI (reg:SI 364 [ D.2955 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 404 403 405 51 (set (reg:SI 364 [ D.2955 ])
        (reg:SI 365)) punycode.c:143 -1
     (expr_list:REG_EQUAL (mult:SI (reg/v:SI 318 [ delta ])
            (const_int 36 [0x24]))
        (nil)))
(insn 405 404 406 51 (parallel [
            (set (reg:SI 366 [ D.2955 ])
                (plus:SI (reg/v:SI 318 [ delta ])
                    (const_int 38 [0x26])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 406 405 407 51 (parallel [
            (set (reg:SI 368 [ D.2955 ])
                (udiv:SI (reg:SI 364 [ D.2955 ])
                    (reg:SI 366 [ D.2955 ])))
            (set (reg:SI 369)
                (umod:SI (reg:SI 364 [ D.2955 ])
                    (reg:SI 366 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 407 406 408 51 (parallel [
            (set (reg/v:SI 288 [ bias ])
                (plus:SI (reg:SI 368 [ D.2955 ])
                    (reg/v:SI 319 [ k ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:143 -1
     (nil))
(insn 408 407 409 51 (parallel [
            (set (reg:SI 370)
                (udiv:SI (reg/v:SI 286 [ i ])
                    (reg/v:SI 289 [ i ])))
            (set (reg:SI 371)
                (umod:SI (reg/v:SI 286 [ i ])
                    (reg/v:SI 289 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:408 -1
     (nil))
(insn 409 408 410 51 (set (reg:SI 292 [ D.2955 ])
        (reg:SI 370)) punycode.c:408 -1
     (nil))
(insn 410 409 411 51 (set (reg:SI 372 [ D.2955 ])
        (not:SI (reg/v:SI 325 [ n ]))) punycode.c:408 -1
     (nil))
(insn 411 410 412 51 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 292 [ D.2955 ])
            (reg:SI 372 [ D.2955 ]))) punycode.c:408 -1
     (nil))
(jump_insn 412 411 413 51 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 533)
            (pc))) punycode.c:408 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 533)
(note 413 412 414 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 52 (parallel [
            (set (reg/v:SI 325 [ n ])
                (plus:SI (reg/v:SI 325 [ n ])
                    (reg:SI 292 [ D.2955 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:410 -1
     (nil))
(insn 415 414 416 52 (parallel [
            (set (reg:SI 374)
                (udiv:SI (reg/v:SI 286 [ i ])
                    (reg/v:SI 289 [ i ])))
            (set (reg:SI 373)
                (umod:SI (reg/v:SI 286 [ i ])
                    (reg/v:SI 289 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:411 -1
     (nil))
(insn 416 415 418 52 (set (reg/v:SI 294 [ i ])
        (reg:SI 373)) punycode.c:411 -1
     (nil))
(insn 418 416 419 52 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 258 [ max_out ])
            (reg/v:SI 275 [ i ]))) punycode.c:417 -1
     (nil))
(jump_insn 419 418 420 52 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) punycode.c:417 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 417)
(note 420 419 421 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 421 420 422 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 335 [ case_flags ])
            (const_int 0 [0]))) punycode.c:420 -1
     (nil))
(jump_insn 422 421 423 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 430)
            (pc))) punycode.c:420 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 430)
(note 423 422 424 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 54 (parallel [
            (set (reg:SI 375 [ D.2955 ])
                (minus:SI (reg/v:SI 275 [ i ])
                    (reg/v:SI 294 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 425 424 426 54 (set (reg:DI 296 [ D.2957 ])
        (zero_extend:DI (reg:SI 375 [ D.2955 ]))) -1
     (nil))
(insn 426 425 427 54 (set (reg:DI 255 [ D.2954 ])
        (zero_extend:DI (reg/v:SI 294 [ i ]))) -1
     (nil))
(insn 427 426 428 54 (parallel [
            (set (reg:DI 298 [ D.2954 ])
                (plus:DI (reg:DI 255 [ D.2954 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 428 427 429 54 (set (pc)
        (label_ref 447)) -1
     (nil)
 -> 447)
(barrier 429 428 430)
(code_label 430 429 431 55 97 "" [1 uses])
(note 431 430 432 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 432 431 433 55 (parallel [
            (set (reg:SI 376 [ D.2955 ])
                (minus:SI (reg/v:SI 275 [ i ])
                    (reg/v:SI 294 [ i ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:422 -1
     (nil))
(insn 433 432 434 55 (set (reg:DI 296 [ D.2957 ])
        (zero_extend:DI (reg:SI 376 [ D.2955 ]))) punycode.c:422 -1
     (nil))
(insn 434 433 435 55 (set (reg:DI 255 [ D.2954 ])
        (zero_extend:DI (reg/v:SI 294 [ i ]))) punycode.c:422 -1
     (nil))
(insn 435 434 436 55 (parallel [
            (set (reg/f:DI 297 [ D.2963 ])
                (plus:DI (reg/v/f:DI 335 [ case_flags ])
                    (reg:DI 255 [ D.2954 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:422 -1
     (nil))
(insn 436 435 437 55 (parallel [
            (set (reg:DI 298 [ D.2954 ])
                (plus:DI (reg:DI 255 [ D.2954 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:422 -1
     (nil))
(insn 437 436 438 55 (parallel [
            (set (reg:DI 377 [ D.2959 ])
                (plus:DI (reg/v/f:DI 335 [ case_flags ])
                    (reg:DI 298 [ D.2954 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:422 -1
     (nil))
(insn 438 437 439 55 (set (reg:DI 1 dx)
        (reg:DI 296 [ D.2957 ])) punycode.c:422 -1
     (nil))
(insn 439 438 440 55 (set (reg:DI 4 si)
        (reg/f:DI 297 [ D.2963 ])) punycode.c:422 -1
     (nil))
(insn 440 439 441 55 (set (reg:DI 5 di)
        (reg:DI 377 [ D.2959 ])) punycode.c:422 -1
     (nil))
(call_insn 441 440 442 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x2b4a501960d8 memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) punycode.c:422 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x2b4a501960d8 memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 442 441 443 55 (set (reg:SI 378 [ D.2955 ])
        (sign_extend:SI (mem:QI (reg/f:DI 280 [ D.2953 ]) [0 *_65+0 S1 A8]))) punycode.c:424 -1
     (nil))
(insn 443 442 444 55 (parallel [
            (set (reg:SI 379 [ D.2955 ])
                (plus:SI (reg:SI 378 [ D.2955 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:424 -1
     (nil))
(insn 444 443 445 55 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 379 [ D.2955 ])
            (const_int 25 [0x19]))) punycode.c:424 -1
     (nil))
(insn 445 444 446 55 (set (reg:QI 380 [ D.2960 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) punycode.c:424 -1
     (nil))
(insn 446 445 447 55 (set (mem:QI (reg/f:DI 297 [ D.2963 ]) [0 MEM[(unsigned char *)_87]+0 S1 A8])
        (reg:QI 380 [ D.2960 ])) punycode.c:424 -1
     (nil))
(code_label 447 446 448 56 98 "" [1 uses])
(note 448 447 449 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 449 448 450 56 (parallel [
            (set (reg:DI 381 [ D.2957 ])
                (ashift:DI (reg:DI 255 [ D.2954 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:427 -1
     (nil))
(insn 450 449 451 56 (parallel [
            (set (reg/f:DI 307 [ D.2963 ])
                (plus:DI (reg/v/f:DI 334 [ output ])
                    (reg:DI 381 [ D.2957 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:427 -1
     (nil))
(insn 451 450 452 56 (parallel [
            (set (reg:DI 382 [ D.2957 ])
                (ashift:DI (reg:DI 296 [ D.2957 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:427 -1
     (nil))
(insn 452 451 453 56 (parallel [
            (set (reg:DI 383 [ D.2954 ])
                (ashift:DI (reg:DI 298 [ D.2954 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:427 -1
     (nil))
(insn 453 452 454 56 (parallel [
            (set (reg:DI 384 [ D.2962 ])
                (plus:DI (reg/v/f:DI 334 [ output ])
                    (reg:DI 383 [ D.2954 ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:427 -1
     (nil))
(insn 454 453 455 56 (set (reg:DI 1 dx)
        (reg:DI 382 [ D.2957 ])) punycode.c:427 -1
     (nil))
(insn 455 454 456 56 (set (reg:DI 4 si)
        (reg/f:DI 307 [ D.2963 ])) punycode.c:427 -1
     (nil))
(insn 456 455 457 56 (set (reg:DI 5 di)
        (reg:DI 384 [ D.2962 ])) punycode.c:427 -1
     (nil))
(call_insn 457 456 458 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x2b4a501960d8 memmove>) [0 __builtin_memmove S1 A8])
            (const_int 0 [0]))) punycode.c:427 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memmove") [flags 0x41]  <function_decl 0x2b4a501960d8 memmove>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 458 457 459 56 (parallel [
            (set (reg/v:SI 273 [ i ])
                (plus:SI (reg/v:SI 294 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:428 -1
     (nil))
(insn 459 458 461 56 (set (mem:SI (reg/f:DI 307 [ D.2963 ]) [1 MEM[(punycode_uint *)_102]+0 S4 A32])
        (reg/v:SI 325 [ n ])) punycode.c:428 -1
     (nil))
(insn 461 459 462 56 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 331 [ input_length ])
            (reg/v:DI 262 [ in ]))) punycode.c:373 -1
     (nil))
(jump_insn 462 461 494 56 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 537)
            (pc))) punycode.c:373 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 537)
(note 494 462 495 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(jump_insn 495 494 496 57 (set (pc)
        (label_ref 463)) -1
     (nil)
 -> 463)
(barrier 496 495 498)
(code_label 498 496 497 58 102 "" [1 uses])
(note 497 498 219 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 219 497 509 58 (set (reg/v:SI 289 [ i ])
        (const_int 0 [0])) punycode.c:355 -1
     (nil))
(jump_insn 509 219 510 58 (set (pc)
        (label_ref 463)) -1
     (nil)
 -> 463)
(barrier 510 509 512)
(code_label 512 510 511 59 106 "" [1 uses])
(note 511 512 218 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 218 511 463 59 (set (reg/v:SI 289 [ i ])
        (reg/v:SI 275 [ i ])) punycode.c:373 -1
     (nil))
(code_label 463 218 464 60 75 "" [2 uses])
(note 464 463 465 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 223 60 (set (mem:DI (reg/v/f:DI 333 [ output_length ]) [2 *output_length_27(D)+0 S8 A64])
        (zero_extend:DI (reg/v:SI 289 [ i ]))) punycode.c:431 -1
     (nil))
(insn 223 465 521 60 (set (reg:SI 259 [ D.2956 ])
        (const_int 0 [0])) punycode.c:433 -1
     (nil))
(jump_insn 521 223 522 60 (set (pc)
        (label_ref 466)) punycode.c:433 -1
     (nil)
 -> 466)
(barrier 522 521 524)
(code_label 524 522 523 61 109 "" [1 uses])
(note 523 524 224 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 224 523 530 61 (set (reg:SI 259 [ D.2956 ])
        (const_int 3 [0x3])) punycode.c:399 -1
     (nil))
(jump_insn 530 224 531 61 (set (pc)
        (label_ref 466)) -1
     (nil)
 -> 466)
(barrier 531 530 533)
(code_label 533 531 532 62 111 "" [1 uses])
(note 532 533 222 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 222 532 538 62 (set (reg:SI 259 [ D.2956 ])
        (const_int 3 [0x3])) punycode.c:399 -1
     (nil))
(jump_insn 538 222 539 62 (set (pc)
        (label_ref 466)) -1
     (nil)
 -> 466)
(barrier 539 538 541)
(code_label 541 539 540 63 113 "" [1 uses])
(note 540 541 225 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 225 540 466 63 (set (reg:SI 259 [ D.2956 ])
        (const_int 3 [0x3])) punycode.c:399 -1
     (nil))
(code_label 466 225 467 64 79 "" [5 uses])
(note 467 466 468 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 64 (set (reg:SI 330 [ <retval> ])
        (reg:SI 259 [ D.2956 ])) -1
     (nil))
(jump_insn 469 468 470 64 (set (pc)
        (label_ref 486)) -1
     (nil)
 -> 486)
(barrier 470 469 471)
(code_label 471 470 472 65 87 "" [3 uses])
(note 472 471 473 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 65 (set (reg:SI 386 [ D.2955 ])
        (not:SI (reg/v:SI 286 [ i ]))) punycode.c:391 -1
     (nil))
(insn 474 473 475 65 (parallel [
            (set (reg:SI 388 [ D.2955 ])
                (udiv:SI (reg:SI 386 [ D.2955 ])
                    (reg/v:SI 312 [ w ])))
            (set (reg:SI 389)
                (umod:SI (reg:SI 386 [ D.2955 ])
                    (reg/v:SI 312 [ w ])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:391 -1
     (nil))
(insn 475 474 476 65 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 388 [ D.2955 ])
            (reg:SI 315 [ D.2955 ]))) punycode.c:391 -1
     (nil))
(jump_insn 476 475 480 65 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 541)
            (pc))) punycode.c:391 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 541)
(note 480 476 478 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(jump_insn 478 480 479 66 (set (pc)
        (label_ref 477)) -1
     (nil)
 -> 477)
(barrier 479 478 481)
(code_label 481 479 482 67 85 "" [1 uses])
(note 482 481 483 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 67 (parallel [
            (set (reg/v:DI 262 [ in ])
                (plus:DI (reg/v:DI 256 [ b ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) punycode.c:373 -1
     (nil))
(jump_insn 484 483 485 67 (set (pc)
        (label_ref 300)) -1
     (nil)
 -> 300)
(barrier 485 484 486)
(code_label 486 485 489 68 73 "" [1 uses])
(note 489 486 487 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 487 489 488 68 (set (reg/i:SI 0 ax)
        (reg:SI 330 [ <retval> ])) punycode.c:434 -1
     (nil))
(insn 488 487 0 68 (use (reg/i:SI 0 ax)) punycode.c:434 -1
     (nil))
