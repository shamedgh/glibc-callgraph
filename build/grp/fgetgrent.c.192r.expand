
;; Function fgetgrent (fgetgrent, funcdef_no=46, decl_uid=7075, cgraph_uid=46, symbol_order=53)

Partition 0: size 16 align 16
	pos
Partition 1: size 8 align 8
	result

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17
Edge 2->17 redirected to 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 112.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 106 [ stream ])
        (reg:DI 5 di [ stream ])) fgetgrent.c:33 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fgetgrent.c:40 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 107)) fgetgrent.c:40 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ stream ])) fgetgrent.c:40 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_new_fgetpos") [flags 0x41]  <function_decl 0x2ba409bcf288 _IO_new_fgetpos>) [0 _IO_new_fgetpos S1 A8])
            (const_int 0 [0]))) fgetgrent.c:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_new_fgetpos") [flags 0x41]  <function_decl 0x2ba409bcf288 _IO_new_fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:SI 88 [ D.8614 ])
        (reg:SI 0 ax)) fgetgrent.c:40 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.8614 ])
            (const_int 0 [0]))) fgetgrent.c:40 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 121)
            (pc))) fgetgrent.c:40 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 121)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 111)
        (const_int 1 [0x1])) fgetgrent.c:44 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 112)
        (const_int 0 [0])) fgetgrent.c:44 -1
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 108 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 111)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                        (reg:SI 112)
                    ]
                     [
                        (asm_input:SI ("0") fgetgrent.c:44)
                        (asm_input:SI ("m") fgetgrent.c:44)
                        (asm_input:SI ("3") fgetgrent.c:44)
                    ]
                     [] fgetgrent.c:44))
            (set (reg:SI 109 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 111)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                        (reg:SI 112)
                    ]
                     [
                        (asm_input:SI ("0") fgetgrent.c:44)
                        (asm_input:SI ("m") fgetgrent.c:44)
                        (asm_input:SI ("3") fgetgrent.c:44)
                    ]
                     [] fgetgrent.c:44))
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 111)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                        (reg:SI 112)
                    ]
                     [
                        (asm_input:SI ("0") fgetgrent.c:44)
                        (asm_input:SI ("m") fgetgrent.c:44)
                        (asm_input:SI ("3") fgetgrent.c:44)
                    ]
                     [] fgetgrent.c:44))
            (set (reg:SI 110 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 111)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                        (reg:SI 112)
                    ]
                     [
                        (asm_input:SI ("0") fgetgrent.c:44)
                        (asm_input:SI ("m") fgetgrent.c:44)
                        (asm_input:SI ("3") fgetgrent.c:44)
                    ]
                     [] fgetgrent.c:44))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) fgetgrent.c:44 -1
     (nil))
(insn 19 18 20 4 (set (reg/v:SI 90 [ ignore1 ])
        (reg:SI 108 [ ignore1 ])) fgetgrent.c:44 -1
     (nil))
(insn 20 19 21 4 (set (reg/v:SI 91 [ ignore2 ])
        (reg:SI 109 [ ignore2 ])) fgetgrent.c:44 -1
     (nil))
(insn 21 20 22 4 (set (reg/v:SI 92 [ ignore3 ])
        (reg:SI 110 [ ignore3 ])) fgetgrent.c:44 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 89 [ D.8615 ])
        (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])) fgetgrent.c:47 -1
     (nil))
(insn 23 22 24 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.8615 ])
            (const_int 0 [0]))) fgetgrent.c:47 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) fgetgrent.c:47 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 32)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 5 (set (mem/c:DI (symbol_ref:DI ("buffer_size.8552") [flags 0x2]  <var_decl 0x2ba409bcd510 buffer_size>) [2 buffer_size+0 S8 A64])
        (const_int 1024 [0x400])) fgetgrent.c:49 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (const_int 1024 [0x400])) fgetgrent.c:50 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ba4096af360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) fgetgrent.c:50 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ba4096af360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 5 (set (reg/f:DI 113)
        (reg:DI 0 ax)) fgetgrent.c:50 -1
     (expr_list:REG_NOALIAS (reg/f:DI 113)
        (nil)))
(insn 30 29 31 5 (set (reg/f:DI 93 [ D.8616 ])
        (reg/f:DI 113)) fgetgrent.c:50 -1
     (nil))
(insn 31 30 4 5 (set (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])
        (reg/f:DI 93 [ D.8616 ])) fgetgrent.c:50 -1
     (nil))
(insn 4 31 32 5 (set (reg/f:DI 89 [ D.8615 ])
        (reg/f:DI 93 [ D.8616 ])) fgetgrent.c:50 -1
     (nil))
(code_label 32 4 33 6 3 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 34 33 35 6 (set (pc)
        (label_ref 72)) fgetgrent.c:50 -1
     (nil)
 -> 72)
(barrier 35 34 93)
(code_label 93 35 36 7 10 "" [1 uses])
(note 36 93 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 114)
        (mem/c:DI (symbol_ref:DI ("buffer_size.8552") [flags 0x2]  <var_decl 0x2ba409bcd510 buffer_size>) [2 buffer_size+0 S8 A64])) fgetgrent.c:58 -1
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg:DI 97 [ D.8617 ])
                (plus:DI (reg:DI 114)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) fgetgrent.c:58 -1
     (expr_list:REG_EQUAL (plus:DI (mem/c:DI (symbol_ref:DI ("buffer_size.8552") [flags 0x2]  <var_decl 0x2ba409bcd510 buffer_size>) [2 buffer_size+0 S8 A64])
            (const_int 1024 [0x400]))
        (nil)))
(insn 39 38 40 7 (set (mem/c:DI (symbol_ref:DI ("buffer_size.8552") [flags 0x2]  <var_decl 0x2ba409bcd510 buffer_size>) [2 buffer_size+0 S8 A64])
        (reg:DI 97 [ D.8617 ])) fgetgrent.c:58 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:DI 98 [ D.8615 ])
        (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])) fgetgrent.c:59 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 4 si)
        (reg:DI 97 [ D.8617 ])) fgetgrent.c:59 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.8615 ])) fgetgrent.c:59 -1
     (nil))
(call_insn 43 42 44 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2ba4096b3000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) fgetgrent.c:59 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2ba4096b3000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 43 45 7 (set (reg/v/f:DI 99 [ new_buf ])
        (reg:DI 0 ax)) fgetgrent.c:59 -1
     (nil))
(insn 45 44 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ new_buf ])
            (const_int 0 [0]))) fgetgrent.c:60 -1
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) fgetgrent.c:60 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 54)
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg:DI 115)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ba409a76900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) fgetgrent.c:64 -1
     (nil))
(insn 49 48 50 8 (set (reg/v:SI 100 [ save ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 115)) [3 __libc_errno+0 S4 A32])) fgetgrent.c:64 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.8615 ])) fgetgrent.c:65 -1
     (nil))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba4096a5e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) fgetgrent.c:65 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba4096a5e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 8 (set (reg:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ba409a76900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) fgetgrent.c:66 -1
     (nil))
(insn 53 52 54 8 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 116)) [3 __libc_errno+0 S4 A32])
        (reg/v:SI 100 [ save ])) fgetgrent.c:66 -1
     (nil))
(code_label 54 53 55 9 5 "" [1 uses])
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])
        (reg/v/f:DI 99 [ new_buf ])) fgetgrent.c:68 -1
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) fgetgrent.c:71 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 4 si)
        (reg:DI 117)) fgetgrent.c:71 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ stream ])) fgetgrent.c:71 -1
     (nil))
(call_insn 60 59 61 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_new_fsetpos") [flags 0x41]  <function_decl 0x2ba409bcf1b0 _IO_new_fsetpos>) [0 _IO_new_fsetpos S1 A8])
            (const_int 0 [0]))) fgetgrent.c:71 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_new_fsetpos") [flags 0x41]  <function_decl 0x2ba409bcf1b0 _IO_new_fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 9 (set (reg:SI 101 [ D.8614 ])
        (reg:SI 0 ax)) fgetgrent.c:71 -1
     (nil))
(insn 62 61 63 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 101 [ D.8614 ])
            (const_int 0 [0]))) fgetgrent.c:71 -1
     (nil))
(jump_insn 63 62 64 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) fgetgrent.c:71 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 68)
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg/f:DI 89 [ D.8615 ])
        (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])) -1
     (nil))
(jump_insn 66 65 67 10 (set (pc)
        (label_ref 74)) -1
     (nil)
 -> 74)
(barrier 67 66 68)
(code_label 68 67 69 11 6 "" [1 uses])
(note 69 68 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 11 (set (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])
        (const_int 0 [0])) fgetgrent.c:72 -1
     (nil))
(insn 71 70 72 11 (set (reg/f:DI 89 [ D.8615 ])
        (const_int 0 [0])) -1
     (nil))
(code_label 72 71 73 12 4 "" [1 uses])
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 74 73 75 13 7 "" [1 uses])
(note 75 74 76 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.8615 ])
            (const_int 0 [0]))) fgetgrent.c:53 -1
     (nil))
(jump_insn 77 76 97 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) fgetgrent.c:53 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 82)
(code_label 97 77 78 14 11 "" [1 uses])
(note 78 97 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 result+0 S8 A64])
        (const_int 0 [0])) fgetgrent.c:76 -1
     (nil))
(jump_insn 80 79 81 14 (set (pc)
        (label_ref 100)) fgetgrent.c:76 -1
     (nil)
 -> 100)
(barrier 81 80 82)
(code_label 82 81 83 15 8 "" [1 uses])
(note 83 82 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 15 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) fgetgrent.c:54 -1
     (nil))
(insn 85 84 86 15 (set (reg:DI 119)
        (mem/c:DI (symbol_ref:DI ("buffer_size.8552") [flags 0x2]  <var_decl 0x2ba409bcd510 buffer_size>) [2 buffer_size+0 S8 A64])) fgetgrent.c:54 -1
     (nil))
(insn 86 85 87 15 (set (reg:DI 37 r8)
        (reg:DI 118)) fgetgrent.c:54 -1
     (nil))
(insn 87 86 88 15 (set (reg:DI 2 cx)
        (reg:DI 119)) fgetgrent.c:54 -1
     (nil))
(insn 88 87 89 15 (set (reg:DI 1 dx)
        (reg/f:DI 89 [ D.8615 ])) fgetgrent.c:54 -1
     (nil))
(insn 89 88 90 15 (set (reg:DI 4 si)
        (symbol_ref:DI ("resbuf.8553") [flags 0x2]  <var_decl 0x2ba409bcd5a0 resbuf>)) fgetgrent.c:54 -1
     (nil))
(insn 90 89 91 15 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ stream ])) fgetgrent.c:54 -1
     (nil))
(call_insn 91 90 92 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fgetgrent_r") [flags 0x41]  <function_decl 0x2ba409ab7a20 __fgetgrent_r>) [0 __fgetgrent_r S1 A8])
            (const_int 0 [0]))) fgetgrent.c:54 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fgetgrent_r") [flags 0x41]  <function_decl 0x2ba409ab7a20 __fgetgrent_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 92 91 94 15 (set (reg:SI 95 [ D.8614 ])
        (reg:SI 0 ax)) fgetgrent.c:54 -1
     (nil))
(insn 94 92 95 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.8614 ])
            (const_int 34 [0x22]))) fgetgrent.c:54 -1
     (nil))
(jump_insn 95 94 96 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) fgetgrent.c:54 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 93)
(note 96 95 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 98 96 99 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("buffer") [flags 0x2]  <var_decl 0x2ba409bcd480 buffer>) [1 buffer+0 S8 A64])
            (const_int 0 [0]))) fgetgrent.c:75 -1
     (nil))
(jump_insn 99 98 100 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) fgetgrent.c:75 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 97)
(code_label 100 99 101 17 9 "" [1 uses])
(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 17 (set (reg:DI 120)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ba409a76900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) fgetgrent.c:79 -1
     (nil))
(insn 103 102 104 17 (set (reg/v:SI 103 [ save ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 120)) [3 __libc_errno+0 S4 A32])) fgetgrent.c:79 -1
     (nil))
(insn 104 103 105 17 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") fgetgrent.c:80)
                    ]
                     [] fgetgrent.c:80))
            (set (reg:SI 121 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba409bcd3f0 lock>) [3 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") fgetgrent.c:80)
                    ]
                     [] fgetgrent.c:80))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) fgetgrent.c:80 -1
     (nil))
(insn 105 104 106 17 (set (reg/v:SI 104 [ ignore ])
        (reg:SI 121 [ ignore ])) fgetgrent.c:80 -1
     (nil))
(insn 106 105 107 17 (set (reg:DI 122)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ba409a76900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [7  S8 A8])) fgetgrent.c:81 -1
     (nil))
(insn 107 106 108 17 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 122)) [3 __libc_errno+0 S4 A32])
        (reg/v:SI 103 [ save ])) fgetgrent.c:81 -1
     (nil))
(insn 108 107 118 17 (set (reg/f:DI 87 [ D.8613 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 result+0 S8 A64])) fgetgrent.c:83 -1
     (nil))
(jump_insn 118 108 119 17 (set (pc)
        (label_ref 109)) fgetgrent.c:83 -1
     (nil)
 -> 109)
(barrier 119 118 121)
(code_label 121 119 120 18 12 "" [1 uses])
(note 120 121 5 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 5 120 109 18 (set (reg/f:DI 87 [ D.8613 ])
        (const_int 0 [0])) fgetgrent.c:41 -1
     (nil))
(code_label 109 5 110 19 2 "" [1 uses])
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 115 19 (set (reg:DI 105 [ <retval> ])
        (reg/f:DI 87 [ D.8613 ])) -1
     (nil))
(insn 115 111 116 19 (set (reg/i:DI 0 ax)
        (reg:DI 105 [ <retval> ])) fgetgrent.c:84 -1
     (nil))
(insn 116 115 0 19 (use (reg/i:DI 0 ax)) fgetgrent.c:84 -1
     (nil))
