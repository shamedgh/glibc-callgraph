
;; Function __open_catalog (*__GI___open_catalog, funcdef_no=32, decl_uid=8308, cgraph_uid=32, symbol_order=37)

Partition 0: size 144 align 16
	st

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109
Edge 5->74 redirected to 120
Edge 11->13 redirected to 121
Edge 18->20 redirected to 122
Edge 22->24 redirected to 123
Edge 27->29 redirected to 124
Edge 39->41 redirected to 125
Edge 49->51 redirected to 126
Edge 54->56 redirected to 127
Edge 60->62 redirected to 128
Edge 66->68 redirected to 129
Edge 96->99 redirected to 131
Edge 100->105 redirected to 133
Purged edges from bb 142
Purged non-fallthru edges from bb 144
Purged non-fallthru edges from bb 146
Purged non-fallthru edges from bb 149
Purged non-fallthru edges from bb 151
Purged non-fallthru edges from bb 153
Purged non-fallthru edges from bb 155


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 23->24 to 29 failed.
Forwarding edge 27->28 to 29 failed.
Removing jump 231.
Edge 29->31 redirected to 32
Forwarding edge 30->31 to 32 failed.
Deleted label in block 31.
Edge 48->50 redirected to 51
Forwarding edge 49->50 to 51 failed.
Deleted label in block 50.
Edge 64->66 redirected to 67
Forwarding edge 65->66 to 67 failed.
Deleted label in block 66.
Edge 69->71 redirected to 72
Forwarding edge 70->71 to 72 failed.
Deleted label in block 71.
Edge 87->89 redirected to 90
Forwarding edge 88->89 to 90 failed.
Deleted label in block 89.
Edge 97->99 redirected to 100
Forwarding edge 98->99 to 100 failed.
Deleted label in block 99.
Forwarding edge 109->110 to 112 failed.
Forwarding edge 136->137 to 139 failed.
Forwarding edge 141->142 to 145 failed.
Forwarding edge 151->152 to 125 failed.


try_optimize_cfg iteration 2

Forwarding edge 23->24 to 29 failed.
Forwarding edge 27->28 to 29 failed.
Forwarding edge 30->31 to 32 failed.
Forwarding edge 49->50 to 51 failed.
Forwarding edge 65->66 to 67 failed.
Forwarding edge 70->71 to 72 failed.
Forwarding edge 88->89 to 90 failed.
Forwarding edge 98->99 to 100 failed.
Forwarding edge 109->110 to 112 failed.
Forwarding edge 136->137 to 139 failed.
Forwarding edge 141->142 to 145 failed.
Forwarding edge 151->152 to 125 failed.


;;
;; Full RTL generated for this function:
;;
(note 45 0 116 NOTE_INSN_DELETED)
(note 116 45 46 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 46 116 47 2 (set (reg/v/f:DI 287 [ cat_name ])
        (reg:DI 5 di [ cat_name ])) open_catalog.c:41 -1
     (nil))
(insn 47 46 48 2 (set (reg/v/f:DI 288 [ nlspath ])
        (reg:DI 4 si [ nlspath ])) open_catalog.c:41 -1
     (nil))
(insn 48 47 49 2 (set (reg/v/f:DI 289 [ env_var ])
        (reg:DI 1 dx [ env_var ])) open_catalog.c:41 -1
     (nil))
(insn 49 48 50 2 (set (reg/v/f:DI 290 [ catalog ])
        (reg:DI 2 cx [ catalog ])) open_catalog.c:41 -1
     (nil))
(note 50 49 118 2 NOTE_INSN_FUNCTION_BEG)
(insn 118 50 119 2 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) open_catalog.c:52 -1
     (nil))
(insn 119 118 120 2 (set (reg:DI 5 di)
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:52 -1
     (nil))
(call_insn/i 120 119 121 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2b9824466d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) open_catalog.c:52 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strchr") [flags 0x41]  <function_decl 0x2b9824466d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 121 120 122 2 (set (reg/f:DI 148 [ D.8763 ])
        (reg:DI 0 ax)) open_catalog.c:52 -1
     (nil))
(insn 122 121 123 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 288 [ nlspath ])
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(insn 123 122 124 2 (set (reg:QI 292 [ D.8761 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(insn 124 123 125 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 292 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(jump_insn 125 124 921 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) open_catalog.c:52 -1
     (int_list:REG_BR_PROB 750 (nil))
 -> 137)
(note 921 125 126 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 126 921 127 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 148 [ D.8763 ])
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(insn 127 126 128 4 (set (reg:QI 294 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(insn 128 127 129 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 294 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:52 -1
     (nil))
(jump_insn 129 128 130 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) open_catalog.c:52 -1
     (int_list:REG_BR_PROB 811 (nil))
 -> 137)
(note 130 129 131 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 5 (set (reg:QI 147 [ D.8762 ])
        (mem:QI (reg/v/f:DI 288 [ nlspath ]) [0 *nlspath_92(D)+0 S1 A8])) open_catalog.c:79 -1
     (nil))
(insn 132 131 133 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:79 -1
     (nil))
(jump_insn 133 132 136 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) open_catalog.c:79 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 161)
(note 136 133 90 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 90 136 134 6 (set (reg/v/f:DI 132 [ buf ])
        (const_int 0 [0])) open_catalog.c:79 -1
     (nil))
(jump_insn 134 90 135 6 (set (pc)
        (label_ref 648)) open_catalog.c:79 -1
     (nil)
 -> 648)
(barrier 135 134 137)
(code_label 137 135 138 7 2 "" [2 uses])
(note 138 137 139 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 7 (set (reg/v:DI 4 si [ _a2 ])
        (const_int 0 [0])) open_catalog.c:53 -1
     (nil))
(insn 140 139 141 7 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:53 -1
     (nil))
(insn 141 140 142 7 (set (reg:SI 296)
        (const_int 2 [0x2])) open_catalog.c:53 -1
     (nil))
(insn 142 141 143 7 (parallel [
            (set (reg:DI 295 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 296)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                    ]
                     [
                        (asm_input:SI ("0") open_catalog.c:53)
                        (asm_input:DI ("r") open_catalog.c:53)
                        (asm_input:DI ("r") open_catalog.c:53)
                    ]
                     [] open_catalog.c:53))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) open_catalog.c:53 -1
     (nil))
(insn 143 142 144 7 (set (reg/v:DI 238 [ resultvar ])
        (reg:DI 295 [ resultvar ])) open_catalog.c:53 -1
     (nil))
(insn 144 143 145 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 238 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) open_catalog.c:53 -1
     (nil))
(jump_insn 145 144 146 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) open_catalog.c:53 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 154)
(note 146 145 147 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 8 (set (reg/v:SI 187 [ fd ])
        (subreg:SI (reg/v:DI 238 [ resultvar ]) 0)) -1
     (nil))
(insn 148 147 149 8 (set (reg:DI 212 [ D.8764 ])
        (sign_extend:DI (reg/v:SI 187 [ fd ]))) -1
     (nil))
(insn 149 148 150 8 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 212 [ D.8764 ])
            (const_int 0 [0]))) open_catalog.c:191 -1
     (nil))
(jump_insn 150 149 153 8 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 892)
            (pc))) open_catalog.c:191 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 892)
(note 153 150 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 92 153 151 9 (set (reg/v/f:DI 132 [ buf ])
        (const_int 0 [0])) open_catalog.c:50 -1
     (nil))
(jump_insn 151 92 152 9 (set (pc)
        (label_ref 654)) -1
     (nil)
 -> 654)
(barrier 152 151 154)
(code_label 154 152 155 10 5 "" [1 uses])
(note 155 154 156 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 10 (set (reg:DI 297)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b9824857900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [9  S8 A8])) open_catalog.c:53 -1
     (nil))
(insn 157 156 158 10 (parallel [
            (set (reg:SI 298)
                (neg:SI (subreg:SI (reg/v:DI 238 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:53 -1
     (nil))
(insn 158 157 91 10 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 297)) [5 __libc_errno+0 S4 A32])
        (reg:SI 298)) open_catalog.c:53 -1
     (nil))
(insn 91 158 159 10 (set (reg/v/f:DI 132 [ buf ])
        (const_int 0 [0])) open_catalog.c:50 -1
     (nil))
(jump_insn 159 91 160 10 (set (pc)
        (label_ref 648)) open_catalog.c:53 -1
     (nil)
 -> 648)
(barrier 160 159 161)
(code_label 161 160 162 11 3 "" [1 uses])
(note 162 161 51 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 51 162 52 11 (set (reg/v:DI 135 [ bufmax ])
        (const_int 0 [0])) open_catalog.c:79 -1
     (nil))
(insn 52 51 645 11 (set (reg/v/f:DI 132 [ buf ])
        (const_int 0 [0])) open_catalog.c:79 -1
     (nil))
(code_label 645 52 163 12 49 "" [1 uses])
(note 163 645 164 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.8762 ])
            (const_int 58 [0x3a]))) open_catalog.c:83 -1
     (nil))
(jump_insn 165 164 166 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) open_catalog.c:83 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 170)
(note 166 165 167 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 85 13 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (reg/v/f:DI 288 [ nlspath ]) [0 *nlspath_266+0 S1 A8])) -1
     (nil))
(insn 85 167 86 13 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 288 [ nlspath ])) open_catalog.c:83 -1
     (nil))
(insn 86 85 168 13 (set (reg/v:DI 134 [ bufact ])
        (const_int 0 [0])) open_catalog.c:83 -1
     (nil))
(jump_insn 168 86 169 13 (set (pc)
        (label_ref 580)) -1
     (nil)
 -> 580)
(barrier 169 168 170)
(code_label 170 169 171 14 7 "" [1 uses])
(note 171 170 172 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 14 (set (reg:DI 5 di)
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:86 -1
     (nil))
(call_insn/i 173 172 174 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) open_catalog.c:86 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 174 173 175 14 (set (reg:DI 300)
        (reg:DI 0 ax)) open_catalog.c:86 -1
     (nil))
(insn 175 174 176 14 (set (reg:DI 301)
        (reg:DI 300)) open_catalog.c:86 -1
     (nil))
(insn 176 175 177 14 (set (reg/v:DI 134 [ bufact ])
        (reg:DI 301)) open_catalog.c:86 -1
     (nil))
(insn 177 176 178 14 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 134 [ bufact ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:87 -1
     (nil))
(jump_insn 178 177 179 14 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) open_catalog.c:87 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 195)
(note 179 178 180 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 15 (parallel [
            (set (reg:DI 302 [ D.8758 ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:87 -1
     (nil))
(insn 181 180 182 15 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 302 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:87 -1
     (nil))
(insn 182 181 183 15 (set (reg:DI 235 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 302 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:87 -1
     (nil))
(insn 183 182 184 15 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 235 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:87 -1
     (nil))
(insn 184 183 185 15 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:87 -1
     (nil))
(insn 185 184 186 15 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:87 -1
     (nil))
(call_insn 186 185 187 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 187 186 188 15 (set (reg/v/f:DI 236 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:87 -1
     (nil))
(insn 188 187 189 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 236 [ buf ])
            (const_int 0 [0]))) open_catalog.c:87 -1
     (nil))
(jump_insn 189 188 190 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 894)
            (pc))) open_catalog.c:87 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 894)
(note 190 189 191 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 16 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:87 -1
     (nil))
(call_insn 192 191 105 16 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:87 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 105 192 193 16 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:87 -1
     (nil))
(jump_insn 193 105 194 16 (set (pc)
        (label_ref 850)) open_catalog.c:87 -1
     (nil)
 -> 850)
(barrier 194 193 894)
(code_label 894 194 893 17 74 "" [1 uses])
(note 893 894 53 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 53 893 195 17 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 236 [ buf ])) -1
     (nil))
(code_label 195 53 196 18 9 "" [1 uses])
(note 196 195 197 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 18 (set (reg:DI 303)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:88 -1
     (nil))
(insn 198 197 199 18 (set (reg:DI 304)
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:88 -1
     (nil))
(insn 199 198 200 18 (set (reg:DI 305)
        (reg/v:DI 134 [ bufact ])) open_catalog.c:88 -1
     (nil))
(insn 200 199 201 18 (set (reg:DI 1 dx)
        (reg:DI 305)) open_catalog.c:88 -1
     (nil))
(insn 201 200 202 18 (set (reg:DI 4 si)
        (reg:DI 304)) open_catalog.c:88 -1
     (nil))
(insn 202 201 203 18 (set (reg:DI 5 di)
        (reg:DI 303)) open_catalog.c:88 -1
     (nil))
(call_insn 203 202 204 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) open_catalog.c:88 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 204 203 205 18 (set (reg:DI 306)
        (reg:DI 0 ax)) open_catalog.c:88 -1
     (nil))
(insn 205 204 87 18 (set (reg:DI 307)
        (reg:DI 306)) open_catalog.c:88 -1
     (nil))
(insn 87 205 206 18 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 288 [ nlspath ])) -1
     (nil))
(jump_insn 206 87 207 18 (set (pc)
        (label_ref 592)) -1
     (nil)
 -> 592)
(barrier 207 206 582)
(code_label 582 207 208 19 44 "" [1 uses])
(note 208 582 209 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 37 [0x25]))) open_catalog.c:93 -1
     (nil))
(jump_insn 210 209 211 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 552)
            (pc))) open_catalog.c:93 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 552)
(note 211 210 212 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 20 (parallel [
            (set (reg/v/f:DI 153 [ nlspath ])
                (plus:DI (reg/v/f:DI 133 [ nlspath ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:98 -1
     (nil))
(insn 213 212 214 20 (set (reg:QI 308 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 1 [0x1])) [0 MEM[(const char *)nlspath_29 + 1B]+0 S1 A8])) open_catalog.c:98 -1
     (nil))
(insn 214 213 215 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 78 [0x4e]))) open_catalog.c:98 -1
     (nil))
(jump_insn 215 214 922 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 1429 (nil))
 -> 248)
(note 922 215 216 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 216 922 217 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 308 [ D.8762 ])
            (const_int 78 [0x4e]))) open_catalog.c:98 -1
     (nil))
(jump_insn 217 216 923 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 5833 (nil))
 -> 224)
(note 923 217 218 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 218 923 219 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 37 [0x25]))) open_catalog.c:98 -1
     (nil))
(jump_insn 219 218 924 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 507)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 4001 (nil))
 -> 507)
(note 924 219 220 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 220 924 221 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 76 [0x4c]))) open_catalog.c:98 -1
     (nil))
(jump_insn 221 220 925 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 289)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 6668 (nil))
 -> 289)
(note 925 221 222 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 222 925 223 24 (set (pc)
        (label_ref 233)) open_catalog.c:98 -1
     (nil)
 -> 233)
(barrier 223 222 224)
(code_label 224 223 926 25 15 "" [1 uses])
(note 926 224 225 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 225 926 226 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 108 [0x6c]))) open_catalog.c:98 -1
     (nil))
(jump_insn 226 225 927 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 2857 (nil))
 -> 330)
(note 927 226 227 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 227 927 228 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 116 [0x74]))) open_catalog.c:98 -1
     (nil))
(jump_insn 228 227 928 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 4001 (nil))
 -> 376)
(note 928 228 229 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 229 928 230 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 308 [ D.8762 ])
            (const_int 99 [0x63]))) open_catalog.c:98 -1
     (nil))
(jump_insn 230 229 929 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 449)
            (pc))) open_catalog.c:98 -1
     (int_list:REG_BR_PROB 4001 (nil))
 -> 449)
(note 929 230 233 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(code_label 233 929 234 29 13 "" [1 uses])
(note 234 233 235 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 29 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) open_catalog.c:165 -1
     (nil))
(insn 236 235 237 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 58 [0x3a]))) open_catalog.c:165 -1
     (nil))
(insn 237 236 238 29 (set (reg:QI 310 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 238 237 239 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 310 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(jump_insn 239 238 930 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 943)
            (pc))) open_catalog.c:165 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 943)
(note 930 239 240 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 240 930 241 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 241 240 242 30 (set (reg:QI 312 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 242 241 243 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 312 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(jump_insn 243 242 931 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) open_catalog.c:165 -1
     (int_list:REG_BR_PROB 9529 (nil))
 -> 534)
(note 931 243 943 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(code_label 943 931 247 32 85 "" [1 uses])
(note 247 943 83 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 83 247 84 32 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:165 -1
     (nil))
(insn 84 83 245 32 (set (reg/v:DI 134 [ bufact ])
        (const_int 0 [0])) open_catalog.c:164 -1
     (nil))
(jump_insn 245 84 246 32 (set (pc)
        (label_ref 578)) open_catalog.c:165 -1
     (nil)
 -> 578)
(barrier 246 245 248)
(code_label 248 246 249 33 14 "" [1 uses])
(note 249 248 250 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 33 (set (reg:DI 5 di)
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:102 -1
     (nil))
(call_insn/i 251 250 252 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) open_catalog.c:102 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 252 251 253 33 (set (reg:DI 314)
        (reg:DI 0 ax)) open_catalog.c:102 -1
     (nil))
(insn 253 252 254 33 (set (reg:DI 315)
        (reg:DI 314)) open_catalog.c:102 -1
     (nil))
(insn 254 253 255 33 (set (reg/v:DI 162 [ len ])
        (reg:DI 315)) open_catalog.c:102 -1
     (nil))
(insn 255 254 256 33 (parallel [
            (set (reg/v:DI 163 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (reg/v:DI 162 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:103 -1
     (nil))
(insn 256 255 257 33 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 163 [ bufact ]))) open_catalog.c:103 -1
     (nil))
(jump_insn 257 256 258 33 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) open_catalog.c:103 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 274)
(note 258 257 259 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 34 (parallel [
            (set (reg:DI 316 [ D.8758 ])
                (plus:DI (reg/v:DI 162 [ len ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:103 -1
     (nil))
(insn 260 259 261 34 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 316 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:103 -1
     (nil))
(insn 261 260 262 34 (set (reg:DI 165 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 316 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:103 -1
     (nil))
(insn 262 261 263 34 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 165 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:103 -1
     (nil))
(insn 263 262 264 34 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:103 -1
     (nil))
(insn 264 263 265 34 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:103 -1
     (nil))
(call_insn 265 264 266 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 266 265 267 34 (set (reg/v/f:DI 166 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:103 -1
     (nil))
(insn 267 266 268 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 166 [ buf ])
            (const_int 0 [0]))) open_catalog.c:103 -1
     (nil))
(jump_insn 268 267 269 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 896)
            (pc))) open_catalog.c:103 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 896)
(note 269 268 270 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 35 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:103 -1
     (nil))
(call_insn 271 270 106 35 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 271 272 35 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:103 -1
     (nil))
(jump_insn 272 106 273 35 (set (pc)
        (label_ref 850)) open_catalog.c:103 -1
     (nil)
 -> 850)
(barrier 273 272 896)
(code_label 896 273 895 36 75 "" [1 uses])
(note 895 896 54 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 54 895 274 36 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 166 [ buf ])) -1
     (nil))
(code_label 274 54 275 37 24 "" [1 uses])
(note 275 274 276 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 37 (parallel [
            (set (reg:DI 317 [ D.8763 ])
                (plus:DI (reg/v/f:DI 132 [ buf ])
                    (reg/v:DI 134 [ bufact ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:104 -1
     (nil))
(insn 277 276 278 37 (set (reg:DI 318)
        (reg:DI 317 [ D.8763 ])) open_catalog.c:104 -1
     (nil))
(insn 278 277 279 37 (set (reg:DI 319)
        (reg/v/f:DI 287 [ cat_name ])) open_catalog.c:104 -1
     (nil))
(insn 279 278 280 37 (set (reg:DI 320)
        (reg/v:DI 162 [ len ])) open_catalog.c:104 -1
     (nil))
(insn 280 279 281 37 (set (reg:DI 1 dx)
        (reg:DI 320)) open_catalog.c:104 -1
     (nil))
(insn 281 280 282 37 (set (reg:DI 4 si)
        (reg:DI 319)) open_catalog.c:104 -1
     (nil))
(insn 282 281 283 37 (set (reg:DI 5 di)
        (reg:DI 318)) open_catalog.c:104 -1
     (nil))
(call_insn 283 282 284 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) open_catalog.c:104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 284 283 285 37 (set (reg:DI 321)
        (reg:DI 0 ax)) open_catalog.c:104 -1
     (nil))
(insn 285 284 286 37 (set (reg:DI 322)
        (reg:DI 321)) open_catalog.c:104 -1
     (nil))
(insn 286 285 81 37 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 81 286 82 37 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 163 [ bufact ])) open_catalog.c:103 -1
     (nil))
(insn 82 81 287 37 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 287 82 288 37 (set (pc)
        (label_ref 578)) open_catalog.c:106 -1
     (nil)
 -> 578)
(barrier 288 287 289)
(code_label 289 288 290 38 17 "" [1 uses])
(note 290 289 291 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 38 (set (reg:DI 5 di)
        (reg/v/f:DI 289 [ env_var ])) open_catalog.c:109 -1
     (nil))
(call_insn/i 292 291 293 38 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) open_catalog.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2b9824469948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 293 292 294 38 (set (reg:DI 324)
        (reg:DI 0 ax)) open_catalog.c:109 -1
     (nil))
(insn 294 293 295 38 (set (reg:DI 325)
        (reg:DI 324)) open_catalog.c:109 -1
     (nil))
(insn 295 294 296 38 (set (reg/v:DI 155 [ len ])
        (reg:DI 325)) open_catalog.c:109 -1
     (nil))
(insn 296 295 297 38 (parallel [
            (set (reg/v:DI 156 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (reg/v:DI 155 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:110 -1
     (nil))
(insn 297 296 298 38 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 156 [ bufact ]))) open_catalog.c:110 -1
     (nil))
(jump_insn 298 297 299 38 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 315)
            (pc))) open_catalog.c:110 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 315)
(note 299 298 300 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 39 (parallel [
            (set (reg:DI 326 [ D.8758 ])
                (plus:DI (reg/v:DI 155 [ len ])
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:110 -1
     (nil))
(insn 301 300 302 39 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 326 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:110 -1
     (nil))
(insn 302 301 303 39 (set (reg:DI 159 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg:DI 326 [ D.8758 ])
            (reg/v:DI 135 [ bufmax ]))) open_catalog.c:110 -1
     (nil))
(insn 303 302 304 39 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 159 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:110 -1
     (nil))
(insn 304 303 305 39 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:110 -1
     (nil))
(insn 305 304 306 39 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:110 -1
     (nil))
(call_insn 306 305 307 39 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 307 306 308 39 (set (reg/v/f:DI 160 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:110 -1
     (nil))
(insn 308 307 309 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 160 [ buf ])
            (const_int 0 [0]))) open_catalog.c:110 -1
     (nil))
(jump_insn 309 308 310 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 898)
            (pc))) open_catalog.c:110 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 898)
(note 310 309 311 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 40 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:110 -1
     (nil))
(call_insn 312 311 107 40 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 107 312 313 40 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:110 -1
     (nil))
(jump_insn 313 107 314 40 (set (pc)
        (label_ref 850)) open_catalog.c:110 -1
     (nil)
 -> 850)
(barrier 314 313 898)
(code_label 898 314 897 41 76 "" [1 uses])
(note 897 898 55 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 55 897 315 41 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 160 [ buf ])) -1
     (nil))
(code_label 315 55 316 42 25 "" [1 uses])
(note 316 315 317 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 42 (parallel [
            (set (reg:DI 327 [ D.8763 ])
                (plus:DI (reg/v/f:DI 132 [ buf ])
                    (reg/v:DI 134 [ bufact ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:111 -1
     (nil))
(insn 318 317 319 42 (set (reg:DI 328)
        (reg:DI 327 [ D.8763 ])) open_catalog.c:111 -1
     (nil))
(insn 319 318 320 42 (set (reg:DI 329)
        (reg/v/f:DI 289 [ env_var ])) open_catalog.c:111 -1
     (nil))
(insn 320 319 321 42 (set (reg:DI 330)
        (reg/v:DI 155 [ len ])) open_catalog.c:111 -1
     (nil))
(insn 321 320 322 42 (set (reg:DI 1 dx)
        (reg:DI 330)) open_catalog.c:111 -1
     (nil))
(insn 322 321 323 42 (set (reg:DI 4 si)
        (reg:DI 329)) open_catalog.c:111 -1
     (nil))
(insn 323 322 324 42 (set (reg:DI 5 di)
        (reg:DI 328)) open_catalog.c:111 -1
     (nil))
(call_insn 324 323 325 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) open_catalog.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2b98246f7798 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 325 324 326 42 (set (reg:DI 331)
        (reg:DI 0 ax)) open_catalog.c:111 -1
     (nil))
(insn 326 325 327 42 (set (reg:DI 332)
        (reg:DI 331)) open_catalog.c:111 -1
     (nil))
(insn 327 326 67 42 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 67 327 68 42 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 156 [ bufact ])) open_catalog.c:110 -1
     (nil))
(insn 68 67 328 42 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 328 68 329 42 (set (pc)
        (label_ref 578)) open_catalog.c:113 -1
     (nil)
 -> 578)
(barrier 329 328 330)
(code_label 330 329 331 43 18 "" [1 uses])
(note 331 330 56 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 56 331 359 43 (set (reg/v/f:DI 137 [ env_var ])
        (reg/v/f:DI 289 [ env_var ])) open_catalog.c:98 -1
     (nil))
(code_label 359 56 332 44 27 "" [1 uses])
(note 332 359 333 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 44 (parallel [
            (set (reg/v:DI 196 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:119 -1
     (nil))
(insn 334 333 335 44 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 196 [ bufact ]))) open_catalog.c:119 -1
     (nil))
(jump_insn 335 334 336 44 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 352)
            (pc))) open_catalog.c:119 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 352)
(note 336 335 338 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 338 336 337 45 (set (reg:DI 333)
        (const_int 257 [0x101])) open_catalog.c:119 -1
     (nil))
(insn 337 338 339 45 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:119 -1
     (nil))
(insn 339 337 340 45 (set (reg:DI 198 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 333))) open_catalog.c:119 -1
     (nil))
(insn 340 339 341 45 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 198 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:119 -1
     (nil))
(insn 341 340 342 45 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:119 -1
     (nil))
(insn 342 341 343 45 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:119 -1
     (nil))
(call_insn 343 342 344 45 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:119 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 344 343 345 45 (set (reg/v/f:DI 199 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:119 -1
     (nil))
(insn 345 344 346 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 199 [ buf ])
            (const_int 0 [0]))) open_catalog.c:119 -1
     (nil))
(jump_insn 346 345 347 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 900)
            (pc))) open_catalog.c:119 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 900)
(note 347 346 348 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 348 347 349 46 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:119 -1
     (nil))
(call_insn 349 348 108 46 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:119 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 108 349 350 46 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:119 -1
     (nil))
(jump_insn 350 108 351 46 (set (pc)
        (label_ref 850)) open_catalog.c:119 -1
     (nil)
 -> 850)
(barrier 351 350 900)
(code_label 900 351 899 47 77 "" [1 uses])
(note 899 900 57 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 57 899 352 47 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 199 [ buf ])) -1
     (nil))
(code_label 352 57 353 48 26 "" [1 uses])
(note 353 352 354 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 48 (parallel [
            (set (reg/v/f:DI 137 [ env_var ])
                (plus:DI (reg/v/f:DI 137 [ env_var ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:120 -1
     (nil))
(insn 355 354 356 48 (set (reg:QI 334)
        (mem:QI (plus:DI (reg/v/f:DI 137 [ env_var ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: env_var_216, offset: -1B]+0 S1 A8])) open_catalog.c:120 -1
     (nil))
(insn 356 355 357 48 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_215+0 S1 A8])
        (reg:QI 334)) open_catalog.c:120 -1
     (nil))
(insn 357 356 358 48 (set (reg:QI 204 [ D.8762 ])
        (mem:QI (reg/v/f:DI 137 [ env_var ]) [0 MEM[base: env_var_216, offset: 0B]+0 S1 A8])) open_catalog.c:122 -1
     (nil))
(insn 358 357 360 48 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 196 [ bufact ])) open_catalog.c:119 -1
     (nil))
(insn 360 358 361 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 204 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(insn 361 360 362 48 (set (reg:QI 336 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(insn 362 361 363 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 204 [ D.8762 ])
            (const_int 95 [0x5f]))) open_catalog.c:122 -1
     (nil))
(insn 363 362 364 48 (set (reg:QI 338 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(insn 364 363 365 48 (parallel [
            (set (reg:QI 339 [ D.8761 ])
                (and:QI (reg:QI 336 [ D.8761 ])
                    (reg:QI 338 [ D.8761 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:122 -1
     (nil))
(insn 365 364 366 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 339 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(jump_insn 366 365 932 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 944)
            (pc))) open_catalog.c:122 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 944)
(note 932 366 367 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 367 932 368 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 204 [ D.8762 ])
            (const_int 46 [0x2e]))) open_catalog.c:122 -1
     (nil))
(insn 368 367 369 49 (set (reg:QI 341 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(insn 369 368 370 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 341 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:122 -1
     (nil))
(jump_insn 370 369 933 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) open_catalog.c:122 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 359)
(note 933 370 944 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(code_label 944 933 372 51 86 "" [1 uses])
(note 372 944 373 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 69 51 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 69 373 70 51 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 196 [ bufact ])) open_catalog.c:119 -1
     (nil))
(insn 70 69 374 51 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 374 70 375 51 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 375 374 376)
(code_label 376 375 377 52 19 "" [1 uses])
(note 377 376 58 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 58 377 390 52 (set (reg/v/f:DI 138 [ env_var ])
        (reg/v/f:DI 289 [ env_var ])) open_catalog.c:98 -1
     (nil))
(code_label 390 58 378 53 30 "" [1 uses])
(note 378 390 379 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 53 (parallel [
            (set (reg/v/f:DI 138 [ env_var ])
                (plus:DI (reg/v/f:DI 138 [ env_var ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:128 -1
     (nil))
(insn 380 379 381 53 (set (reg:QI 180 [ D.8762 ])
        (mem:QI (reg/v/f:DI 138 [ env_var ]) [0 MEM[base: env_var_170, offset: 0B]+0 S1 A8])) open_catalog.c:129 -1
     (nil))
(insn 381 380 382 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:129 -1
     (nil))
(insn 382 381 383 53 (set (reg:QI 343 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:129 -1
     (nil))
(insn 383 382 384 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 343 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:129 -1
     (nil))
(jump_insn 384 383 934 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) open_catalog.c:129 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 397)
(note 934 384 385 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 385 934 386 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.8762 ])
            (const_int 95 [0x5f]))) open_catalog.c:129 -1
     (nil))
(insn 386 385 387 54 (set (reg:QI 345 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:129 -1
     (nil))
(insn 387 386 388 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 345 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:129 -1
     (nil))
(jump_insn 388 387 389 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 397)
            (pc))) open_catalog.c:129 -1
     (int_list:REG_BR_PROB 230 (nil))
 -> 397)
(note 389 388 391 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 391 389 392 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.8762 ])
            (const_int 46 [0x2e]))) open_catalog.c:129 -1
     (nil))
(jump_insn 392 391 393 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) open_catalog.c:129 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 390)
(note 393 392 394 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 78 56 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 78 394 395 56 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 395 78 396 56 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 396 395 397)
(code_label 397 396 398 57 29 "" [2 uses])
(note 398 397 399 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.8762 ])
            (const_int 95 [0x5f]))) open_catalog.c:130 -1
     (nil))
(jump_insn 400 399 401 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) open_catalog.c:130 -1
     (int_list:REG_BR_PROB 5488 (nil))
 -> 405)
(note 401 400 402 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 79 58 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 79 402 403 58 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 403 79 404 58 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 404 403 405)
(code_label 405 404 406 59 31 "" [1 uses])
(note 406 405 407 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 435 59 (parallel [
            (set (reg/v/f:DI 139 [ tmp ])
                (plus:DI (reg/v/f:DI 138 [ env_var ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:132 -1
     (nil))
(code_label 435 407 408 60 33 "" [1 uses])
(note 408 435 409 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 60 (parallel [
            (set (reg/v:DI 184 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:135 -1
     (nil))
(insn 410 409 411 60 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 184 [ bufact ]))) open_catalog.c:135 -1
     (nil))
(jump_insn 411 410 412 60 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 428)
            (pc))) open_catalog.c:135 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 428)
(note 412 411 414 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 414 412 413 61 (set (reg:DI 346)
        (const_int 257 [0x101])) open_catalog.c:135 -1
     (nil))
(insn 413 414 415 61 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:135 -1
     (nil))
(insn 415 413 416 61 (set (reg:DI 185 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 346))) open_catalog.c:135 -1
     (nil))
(insn 416 415 417 61 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 185 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:135 -1
     (nil))
(insn 417 416 418 61 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:135 -1
     (nil))
(insn 418 417 419 61 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:135 -1
     (nil))
(call_insn 419 418 420 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:135 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 420 419 421 61 (set (reg/v/f:DI 186 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:135 -1
     (nil))
(insn 421 420 422 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 186 [ buf ])
            (const_int 0 [0]))) open_catalog.c:135 -1
     (nil))
(jump_insn 422 421 423 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 902)
            (pc))) open_catalog.c:135 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 902)
(note 423 422 424 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 62 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:135 -1
     (nil))
(call_insn 425 424 109 62 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:135 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 109 425 426 62 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:135 -1
     (nil))
(jump_insn 426 109 427 62 (set (pc)
        (label_ref 850)) open_catalog.c:135 -1
     (nil)
 -> 850)
(barrier 427 426 902)
(code_label 902 427 901 63 78 "" [1 uses])
(note 901 902 59 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 59 901 428 63 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 186 [ buf ])) -1
     (nil))
(code_label 428 59 429 64 32 "" [1 uses])
(note 429 428 430 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 64 (parallel [
            (set (reg/v/f:DI 139 [ tmp ])
                (plus:DI (reg/v/f:DI 139 [ tmp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:136 -1
     (nil))
(insn 431 430 432 64 (set (reg:QI 347)
        (mem:QI (plus:DI (reg/v/f:DI 139 [ tmp ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: tmp_195, offset: -1B]+0 S1 A8])) open_catalog.c:136 -1
     (nil))
(insn 432 431 433 64 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_193+0 S1 A8])
        (reg:QI 347)) open_catalog.c:136 -1
     (nil))
(insn 433 432 434 64 (set (reg:QI 192 [ D.8762 ])
        (mem:QI (reg/v/f:DI 139 [ tmp ]) [0 MEM[base: tmp_195, offset: 0B]+0 S1 A8])) open_catalog.c:138 -1
     (nil))
(insn 434 433 436 64 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 184 [ bufact ])) open_catalog.c:135 -1
     (nil))
(insn 436 434 437 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 192 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:138 -1
     (nil))
(insn 437 436 438 64 (set (reg:QI 349 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:138 -1
     (nil))
(insn 438 437 439 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 349 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:138 -1
     (nil))
(jump_insn 439 438 935 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 945)
            (pc))) open_catalog.c:138 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 945)
(note 935 439 440 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 440 935 441 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 192 [ D.8762 ])
            (const_int 46 [0x2e]))) open_catalog.c:138 -1
     (nil))
(insn 441 440 442 65 (set (reg:QI 351 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:138 -1
     (nil))
(insn 442 441 443 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 351 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:138 -1
     (nil))
(jump_insn 443 442 936 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 435)
            (pc))) open_catalog.c:138 -1
     (int_list:REG_BR_PROB 9770 (nil))
 -> 435)
(note 936 443 945 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(code_label 945 936 445 67 87 "" [1 uses])
(note 445 945 446 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 71 67 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 71 446 72 67 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 184 [ bufact ])) open_catalog.c:135 -1
     (nil))
(insn 72 71 447 67 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 447 72 448 67 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 448 447 449)
(code_label 449 448 450 68 20 "" [1 uses])
(note 450 449 60 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 60 450 454 68 (set (reg/v/f:DI 140 [ env_var ])
        (reg/v/f:DI 289 [ env_var ])) open_catalog.c:98 -1
     (nil))
(code_label 454 60 451 69 35 "" [1 uses])
(note 451 454 452 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 69 (parallel [
            (set (reg/v/f:DI 140 [ env_var ])
                (plus:DI (reg/v/f:DI 140 [ env_var ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:145 -1
     (nil))
(insn 453 452 455 69 (set (reg:QI 168 [ D.8762 ])
        (mem:QI (reg/v/f:DI 140 [ env_var ]) [0 MEM[base: env_var_141, offset: 0B]+0 S1 A8])) open_catalog.c:146 -1
     (nil))
(insn 455 453 456 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:146 -1
     (nil))
(insn 456 455 457 69 (set (reg:QI 353 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:146 -1
     (nil))
(insn 457 456 458 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 353 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:146 -1
     (nil))
(jump_insn 458 457 937 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 946)
            (pc))) open_catalog.c:146 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 946)
(note 937 458 459 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 459 937 460 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.8762 ])
            (const_int 46 [0x2e]))) open_catalog.c:146 -1
     (nil))
(insn 460 459 461 70 (set (reg:QI 355 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:146 -1
     (nil))
(insn 461 460 462 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 355 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:146 -1
     (nil))
(jump_insn 462 461 938 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 454)
            (pc))) open_catalog.c:146 -1
     (int_list:REG_BR_PROB 9529 (nil))
 -> 454)
(note 938 462 946 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(code_label 946 938 464 72 88 "" [1 uses])
(note 464 946 465 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.8762 ])
            (const_int 46 [0x2e]))) open_catalog.c:147 -1
     (nil))
(jump_insn 466 465 467 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 471)
            (pc))) open_catalog.c:147 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 471)
(note 467 466 468 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 80 73 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 80 468 469 73 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 469 80 470 73 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 470 469 471)
(code_label 471 470 472 74 37 "" [1 uses])
(note 472 471 473 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 500 74 (parallel [
            (set (reg/v/f:DI 141 [ tmp ])
                (plus:DI (reg/v/f:DI 140 [ env_var ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:149 -1
     (nil))
(code_label 500 473 474 75 39 "" [1 uses])
(note 474 500 475 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 75 (parallel [
            (set (reg/v:DI 172 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:152 -1
     (nil))
(insn 476 475 477 75 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 172 [ bufact ]))) open_catalog.c:152 -1
     (nil))
(jump_insn 477 476 478 75 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) open_catalog.c:152 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 494)
(note 478 477 480 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 480 478 479 76 (set (reg:DI 356)
        (const_int 257 [0x101])) open_catalog.c:152 -1
     (nil))
(insn 479 480 481 76 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:152 -1
     (nil))
(insn 481 479 482 76 (set (reg:DI 173 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 356))) open_catalog.c:152 -1
     (nil))
(insn 482 481 483 76 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 173 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:152 -1
     (nil))
(insn 483 482 484 76 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:152 -1
     (nil))
(insn 484 483 485 76 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:152 -1
     (nil))
(call_insn 485 484 486 76 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:152 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 486 485 487 76 (set (reg/v/f:DI 174 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:152 -1
     (nil))
(insn 487 486 488 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 174 [ buf ])
            (const_int 0 [0]))) open_catalog.c:152 -1
     (nil))
(jump_insn 488 487 489 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 904)
            (pc))) open_catalog.c:152 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 904)
(note 489 488 490 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 77 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:152 -1
     (nil))
(call_insn 491 490 110 77 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:152 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 110 491 492 77 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:152 -1
     (nil))
(jump_insn 492 110 493 77 (set (pc)
        (label_ref 850)) open_catalog.c:152 -1
     (nil)
 -> 850)
(barrier 493 492 904)
(code_label 904 493 903 78 79 "" [1 uses])
(note 903 904 61 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 61 903 494 78 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 174 [ buf ])) -1
     (nil))
(code_label 494 61 495 79 38 "" [1 uses])
(note 495 494 496 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 79 (parallel [
            (set (reg/v/f:DI 141 [ tmp ])
                (plus:DI (reg/v/f:DI 141 [ tmp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:153 -1
     (nil))
(insn 497 496 498 79 (set (reg:QI 357)
        (mem:QI (plus:DI (reg/v/f:DI 141 [ tmp ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: tmp_165, offset: -1B]+0 S1 A8])) open_catalog.c:153 -1
     (nil))
(insn 498 497 499 79 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_163+0 S1 A8])
        (reg:QI 357)) open_catalog.c:153 -1
     (nil))
(insn 499 498 501 79 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 172 [ bufact ])) open_catalog.c:152 -1
     (nil))
(insn 501 499 502 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 141 [ tmp ]) [0 MEM[base: tmp_165, offset: 0B]+0 S1 A8])
            (const_int 0 [0]))) open_catalog.c:155 -1
     (nil))
(jump_insn 502 501 503 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 500)
            (pc))) open_catalog.c:155 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 500)
(note 503 502 504 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 73 80 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 73 504 74 80 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 172 [ bufact ])) open_catalog.c:152 -1
     (nil))
(insn 74 73 505 80 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 505 74 506 80 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 506 505 507)
(code_label 507 506 508 81 16 "" [1 uses])
(note 508 507 509 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 509 508 510 81 (parallel [
            (set (reg/v:DI 211 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:159 -1
     (nil))
(insn 510 509 511 81 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 211 [ bufact ]))) open_catalog.c:159 -1
     (nil))
(jump_insn 511 510 512 81 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 528)
            (pc))) open_catalog.c:159 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 528)
(note 512 511 514 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 514 512 513 82 (set (reg:DI 358)
        (const_int 257 [0x101])) open_catalog.c:159 -1
     (nil))
(insn 513 514 515 82 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:159 -1
     (nil))
(insn 515 513 516 82 (set (reg:DI 213 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 358))) open_catalog.c:159 -1
     (nil))
(insn 516 515 517 82 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 213 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:159 -1
     (nil))
(insn 517 516 518 82 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:159 -1
     (nil))
(insn 518 517 519 82 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:159 -1
     (nil))
(call_insn 519 518 520 82 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:159 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 520 519 521 82 (set (reg/v/f:DI 214 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:159 -1
     (nil))
(insn 521 520 522 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 214 [ buf ])
            (const_int 0 [0]))) open_catalog.c:159 -1
     (nil))
(jump_insn 522 521 523 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 906)
            (pc))) open_catalog.c:159 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 906)
(note 523 522 524 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 525 83 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:159 -1
     (nil))
(call_insn 525 524 111 83 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:159 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 111 525 526 83 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:159 -1
     (nil))
(jump_insn 526 111 527 83 (set (pc)
        (label_ref 850)) open_catalog.c:159 -1
     (nil)
 -> 850)
(barrier 527 526 906)
(code_label 906 527 905 84 80 "" [1 uses])
(note 905 906 62 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 62 905 528 84 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 214 [ buf ])) -1
     (nil))
(code_label 528 62 529 85 40 "" [1 uses])
(note 529 528 530 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 85 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_240+0 S1 A8])
        (const_int 37 [0x25])) open_catalog.c:160 -1
     (nil))
(insn 531 530 75 85 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 2 [0x2])) [0 MEM[(const char *)nlspath_29 + 2B]+0 S1 A8])) -1
     (nil))
(insn 75 531 76 85 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 211 [ bufact ])) open_catalog.c:159 -1
     (nil))
(insn 76 75 532 85 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:98 -1
     (nil))
(jump_insn 532 76 533 85 (set (pc)
        (label_ref 578)) open_catalog.c:161 -1
     (nil)
 -> 578)
(barrier 533 532 534)
(code_label 534 533 535 86 21 "" [1 uses])
(note 535 534 63 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 63 535 539 86 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 153 [ nlspath ])) open_catalog.c:165 -1
     (nil))
(code_label 539 63 536 87 41 "" [1 uses])
(note 536 539 537 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 87 (parallel [
            (set (reg/v/f:DI 133 [ nlspath ])
                (plus:DI (reg/v/f:DI 133 [ nlspath ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:166 -1
     (nil))
(insn 538 537 540 87 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (reg/v/f:DI 133 [ nlspath ]) [0 MEM[base: nlspath_227, offset: 0B]+0 S1 A8])) open_catalog.c:165 -1
     (nil))
(insn 540 538 541 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 541 540 542 87 (set (reg:QI 360 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 542 541 543 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 360 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(jump_insn 543 542 939 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 947)
            (pc))) open_catalog.c:165 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 947)
(note 939 543 544 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 544 939 545 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 58 [0x3a]))) open_catalog.c:165 -1
     (nil))
(insn 545 544 546 88 (set (reg:QI 362 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(insn 546 545 547 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 362 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:165 -1
     (nil))
(jump_insn 547 546 940 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) open_catalog.c:165 -1
     (int_list:REG_BR_PROB 9529 (nil))
 -> 539)
(note 940 547 947 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(code_label 947 940 551 90 89 "" [1 uses])
(note 551 947 77 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 77 551 549 90 (set (reg/v:DI 134 [ bufact ])
        (const_int 0 [0])) open_catalog.c:164 -1
     (nil))
(jump_insn 549 77 550 90 (set (pc)
        (label_ref 578)) -1
     (nil)
 -> 578)
(barrier 550 549 552)
(code_label 552 550 553 91 12 "" [1 uses])
(note 553 552 554 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 91 (parallel [
            (set (reg/v:DI 216 [ bufact ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:172 -1
     (nil))
(insn 555 554 556 91 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg/v:DI 216 [ bufact ]))) open_catalog.c:172 -1
     (nil))
(jump_insn 556 555 557 91 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 573)
            (pc))) open_catalog.c:172 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 573)
(note 557 556 559 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 559 557 558 92 (set (reg:DI 363)
        (const_int 257 [0x101])) open_catalog.c:172 -1
     (nil))
(insn 558 559 560 92 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:172 -1
     (nil))
(insn 560 558 561 92 (set (reg:DI 217 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 363))) open_catalog.c:172 -1
     (nil))
(insn 561 560 562 92 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 217 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:172 -1
     (nil))
(insn 562 561 563 92 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:172 -1
     (nil))
(insn 563 562 564 92 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:172 -1
     (nil))
(call_insn 564 563 565 92 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 565 564 566 92 (set (reg/v/f:DI 218 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:172 -1
     (nil))
(insn 566 565 567 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 218 [ buf ])
            (const_int 0 [0]))) open_catalog.c:172 -1
     (nil))
(jump_insn 567 566 568 92 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 908)
            (pc))) open_catalog.c:172 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 908)
(note 568 567 569 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 569 568 570 93 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:172 -1
     (nil))
(call_insn 570 569 112 93 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 570 571 93 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:172 -1
     (nil))
(jump_insn 571 112 572 93 (set (pc)
        (label_ref 850)) open_catalog.c:172 -1
     (nil)
 -> 850)
(barrier 572 571 908)
(code_label 908 572 907 94 81 "" [1 uses])
(note 907 908 64 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 64 907 573 94 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 218 [ buf ])) -1
     (nil))
(code_label 573 64 574 95 43 "" [1 uses])
(note 574 573 575 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 575 574 576 95 (parallel [
            (set (reg/v/f:DI 221 [ nlspath ])
                (plus:DI (reg/v/f:DI 133 [ nlspath ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:173 -1
     (nil))
(insn 576 575 577 95 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_254+0 S1 A8])
        (reg:QI 282 [ D.8762 ])) open_catalog.c:173 -1
     (nil))
(insn 577 576 65 95 (set (reg:QI 282 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 1 [0x1])) [0 MEM[(const char *)nlspath_29 + 1B]+0 S1 A8])) -1
     (nil))
(insn 65 577 66 95 (set (reg/v:DI 134 [ bufact ])
        (reg/v:DI 216 [ bufact ])) open_catalog.c:172 -1
     (nil))
(insn 66 65 578 95 (set (reg/v/f:DI 133 [ nlspath ])
        (reg/v/f:DI 221 [ nlspath ])) open_catalog.c:173 -1
     (nil))
(code_label 578 66 579 96 23 "" [11 uses])
(note 579 578 580 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(code_label 580 579 581 97 8 "" [1 uses])
(note 581 580 583 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 583 581 584 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 58 [0x3a]))) open_catalog.c:92 -1
     (nil))
(insn 584 583 585 97 (set (reg:QI 365 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:92 -1
     (nil))
(insn 585 584 586 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 365 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:92 -1
     (nil))
(jump_insn 586 585 941 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 592)
            (pc))) open_catalog.c:92 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 592)
(note 941 586 587 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 587 941 588 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 282 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:92 -1
     (nil))
(insn 588 587 589 98 (set (reg:QI 367 [ D.8761 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) open_catalog.c:92 -1
     (nil))
(insn 589 588 590 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 367 [ D.8761 ])
            (const_int 0 [0]))) open_catalog.c:92 -1
     (nil))
(jump_insn 590 589 942 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 582)
            (pc))) open_catalog.c:92 -1
     (int_list:REG_BR_PROB 9899 (nil))
 -> 582)
(note 942 590 592 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(code_label 592 942 593 100 11 "" [2 uses])
(note 593 592 594 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 100 (parallel [
            (set (reg:DI 368 [ D.8758 ])
                (plus:DI (reg/v:DI 134 [ bufact ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:176 -1
     (nil))
(insn 595 594 596 100 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (reg:DI 368 [ D.8758 ]))) open_catalog.c:176 -1
     (nil))
(jump_insn 596 595 597 100 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 613)
            (pc))) open_catalog.c:176 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 613)
(note 597 596 599 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 599 597 598 101 (set (reg:DI 369)
        (const_int 257 [0x101])) open_catalog.c:176 -1
     (nil))
(insn 598 599 600 101 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 135 [ bufmax ])
            (const_int 257 [0x101]))) open_catalog.c:176 -1
     (nil))
(insn 600 598 601 101 (set (reg:DI 224 [ D.8758 ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 135 [ bufmax ])
            (reg:DI 369))) open_catalog.c:176 -1
     (nil))
(insn 601 600 602 101 (parallel [
            (set (reg/v:DI 135 [ bufmax ])
                (plus:DI (reg/v:DI 135 [ bufmax ])
                    (reg:DI 224 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:176 -1
     (nil))
(insn 602 601 603 101 (set (reg:DI 4 si)
        (reg/v:DI 135 [ bufmax ])) open_catalog.c:176 -1
     (nil))
(insn 603 602 604 101 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:176 -1
     (nil))
(call_insn 604 603 605 101 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2b9824493000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 605 604 606 101 (set (reg/v/f:DI 225 [ buf ])
        (reg:DI 0 ax)) open_catalog.c:176 -1
     (nil))
(insn 606 605 607 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 225 [ buf ])
            (const_int 0 [0]))) open_catalog.c:176 -1
     (nil))
(jump_insn 607 606 608 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 910)
            (pc))) open_catalog.c:176 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 910)
(note 608 607 609 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 610 102 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:176 -1
     (nil))
(call_insn 610 609 113 102 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 113 610 611 102 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:176 -1
     (nil))
(jump_insn 611 113 612 102 (set (pc)
        (label_ref 850)) open_catalog.c:176 -1
     (nil)
 -> 850)
(barrier 612 611 910)
(code_label 910 612 909 103 82 "" [1 uses])
(note 909 910 88 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 88 909 613 103 (set (reg/v/f:DI 132 [ buf ])
        (reg/v/f:DI 225 [ buf ])) -1
     (nil))
(code_label 613 88 614 104 46 "" [1 uses])
(note 614 613 615 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 104 (set (mem:QI (plus:DI (reg/v/f:DI 132 [ buf ])
                (reg/v:DI 134 [ bufact ])) [0 *_269+0 S1 A8])
        (const_int 0 [0])) open_catalog.c:177 -1
     (nil))
(insn 616 615 617 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 134 [ bufact ])
            (const_int 0 [0]))) open_catalog.c:179 -1
     (nil))
(jump_insn 617 616 618 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 641)
            (pc))) open_catalog.c:179 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 641)
(note 618 617 619 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 105 (set (reg/v:DI 4 si [ _a2 ])
        (const_int 0 [0])) open_catalog.c:181 -1
     (nil))
(insn 620 619 621 105 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:181 -1
     (nil))
(insn 621 620 622 105 (set (reg:SI 371)
        (const_int 2 [0x2])) open_catalog.c:181 -1
     (nil))
(insn 622 621 623 105 (parallel [
            (set (reg:DI 370 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 371)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                    ]
                     [
                        (asm_input:SI ("0") open_catalog.c:181)
                        (asm_input:DI ("r") open_catalog.c:181)
                        (asm_input:DI ("r") open_catalog.c:181)
                    ]
                     [] open_catalog.c:181))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) open_catalog.c:181 -1
     (nil))
(insn 623 622 624 105 (set (reg/v:DI 228 [ resultvar ])
        (reg:DI 370 [ resultvar ])) open_catalog.c:181 -1
     (nil))
(insn 624 623 625 105 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 228 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) open_catalog.c:181 -1
     (nil))
(jump_insn 625 624 626 105 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 632)
            (pc))) open_catalog.c:181 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 632)
(note 626 625 627 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 106 (set (reg:DI 372)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b9824857900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [9  S8 A8])) open_catalog.c:181 -1
     (nil))
(insn 628 627 629 106 (parallel [
            (set (reg:SI 373)
                (neg:SI (subreg:SI (reg/v:DI 228 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:181 -1
     (nil))
(insn 629 628 630 106 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 372)) [5 __libc_errno+0 S4 A32])
        (reg:SI 373)) open_catalog.c:181 -1
     (nil))
(jump_insn 630 629 631 106 (set (pc)
        (label_ref 641)) open_catalog.c:181 -1
     (nil)
 -> 641)
(barrier 631 630 632)
(code_label 632 631 633 107 48 "" [1 uses])
(note 633 632 634 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 634 633 635 107 (set (reg/v:SI 187 [ fd ])
        (subreg:SI (reg/v:DI 228 [ resultvar ]) 0)) open_catalog.c:181 -1
     (nil))
(insn 635 634 636 107 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 187 [ fd ])
            (const_int 0 [0]))) open_catalog.c:182 -1
     (nil))
(jump_insn 636 635 637 107 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 641)
            (pc))) open_catalog.c:182 -1
     (int_list:REG_BR_PROB 9778 (nil))
 -> 641)
(note 637 636 638 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 638 637 639 108 (set (reg:DI 212 [ D.8764 ])
        (sign_extend:DI (reg/v:SI 187 [ fd ]))) -1
     (nil))
(jump_insn 639 638 640 108 (set (pc)
        (label_ref 654)) -1
     (nil)
 -> 654)
(barrier 640 639 641)
(code_label 641 640 642 109 47 "" [3 uses])
(note 642 641 643 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 643 642 644 109 (parallel [
            (set (reg/v/f:DI 288 [ nlspath ])
                (plus:DI (reg/v/f:DI 133 [ nlspath ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:186 -1
     (nil))
(insn 644 643 646 109 (set (reg:QI 147 [ D.8762 ])
        (mem:QI (plus:DI (reg/v/f:DI 133 [ nlspath ])
                (const_int 1 [0x1])) [0 MEM[(const char *)nlspath_30 + 1B]+0 S1 A8])) open_catalog.c:79 -1
     (nil))
(insn 646 644 647 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 147 [ D.8762 ])
            (const_int 0 [0]))) open_catalog.c:79 -1
     (nil))
(jump_insn 647 646 888 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 645)
            (pc))) open_catalog.c:79 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 645)
(note 888 647 889 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(jump_insn 889 888 890 110 (set (pc)
        (label_ref 648)) -1
     (nil)
 -> 648)
(barrier 890 889 892)
(code_label 892 890 891 111 73 "" [1 uses])
(note 891 892 89 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 89 891 648 111 (set (reg/v/f:DI 132 [ buf ])
        (const_int 0 [0])) open_catalog.c:50 -1
     (nil))
(code_label 648 89 649 112 4 "" [3 uses])
(note 649 648 650 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 112 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:193 -1
     (nil))
(call_insn 651 650 114 112 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:193 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 114 651 652 112 (set (reg:SI 143 [ D.8759 ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:194 -1
     (nil))
(jump_insn 652 114 653 112 (set (pc)
        (label_ref 850)) open_catalog.c:194 -1
     (nil)
 -> 850)
(barrier 653 652 654)
(code_label 654 653 655 113 6 "" [2 uses])
(note 655 654 656 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 113 (parallel [
            (set (reg:DI 374)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:197 -1
     (nil))
(insn 657 656 658 113 (set (reg:DI 1 dx)
        (reg:DI 374)) open_catalog.c:197 -1
     (nil))
(insn 658 657 659 113 (set (reg:SI 4 si)
        (reg/v:SI 187 [ fd ])) open_catalog.c:197 -1
     (nil))
(insn 659 658 660 113 (set (reg:SI 5 di)
        (const_int 1 [0x1])) open_catalog.c:197 -1
     (nil))
(call_insn 660 659 661 113 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___fxstat64") [flags 0x43]  <function_decl 0x2b9824637d80 __fxstat64>) [0 __fxstat64 S1 A8])
            (const_int 0 [0]))) open_catalog.c:197 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___fxstat64") [flags 0x43]  <function_decl 0x2b9824637d80 __fxstat64>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 661 660 662 113 (set (reg:SI 242 [ D.8759 ])
        (reg:SI 0 ax)) open_catalog.c:197 -1
     (nil))
(insn 662 661 663 113 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 242 [ D.8759 ])
            (const_int 0 [0]))) open_catalog.c:197 -1
     (nil))
(jump_insn 663 662 710 113 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) open_catalog.c:197 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 667)
(code_label 710 663 664 114 56 "" [1 uses])
(note 664 710 98 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 98 664 665 114 (set (reg/v:SI 131 [ result ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:49 -1
     (nil))
(jump_insn 665 98 666 114 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 666 665 667)
(code_label 667 666 668 115 50 "" [1 uses])
(note 668 667 669 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 669 668 670 115 (set (reg:SI 376)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [5 st.st_mode+0 S4 A64])) open_catalog.c:200 -1
     (nil))
(insn 670 669 671 115 (parallel [
            (set (reg:SI 375 [ D.8767 ])
                (and:SI (reg:SI 376)
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:200 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [5 st.st_mode+0 S4 A64])
            (const_int 61440 [0xf000]))
        (nil)))
(insn 671 670 672 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 375 [ D.8767 ])
            (const_int 32768 [0x8000]))) open_catalog.c:200 -1
     (nil))
(jump_insn 672 671 673 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 677)
            (pc))) open_catalog.c:200 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 677)
(note 673 672 674 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 116 (set (reg:DI 247 [ D.8758 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [3 st.st_size+0 S8 A128])) open_catalog.c:201 -1
     (nil))
(insn 675 674 676 116 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 247 [ D.8758 ])
            (const_int 11 [0xb]))) open_catalog.c:201 -1
     (nil))
(jump_insn 676 675 677 116 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 683)
            (pc))) open_catalog.c:201 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 683)
(code_label 677 676 678 117 52 "" [1 uses])
(note 678 677 679 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 679 678 680 117 (set (reg:DI 377)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b9824857900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [9  S8 A8])) open_catalog.c:205 -1
     (nil))
(insn 680 679 99 117 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 377)) [5 __libc_errno+0 S4 A32])
        (const_int 22 [0x16])) open_catalog.c:205 -1
     (nil))
(insn 99 680 681 117 (set (reg/v:SI 131 [ result ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:49 -1
     (nil))
(jump_insn 681 99 682 117 (set (pc)
        (label_ref 842)) open_catalog.c:206 -1
     (nil)
 -> 842)
(barrier 682 681 683)
(code_label 683 682 684 118 53 "" [1 uses])
(note 684 683 685 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 685 684 686 118 (set (mem:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 48 [0x30])) [3 catalog_326(D)->file_size+0 S8 A64])
        (reg:DI 247 [ D.8758 ])) open_catalog.c:209 -1
     (nil))
(insn 686 685 687 118 (set (reg:DI 38 r9)
        (const_int 0 [0])) open_catalog.c:220 -1
     (nil))
(insn 687 686 688 118 (set (reg:SI 37 r8)
        (reg/v:SI 187 [ fd ])) open_catalog.c:220 -1
     (nil))
(insn 688 687 689 118 (set (reg:SI 2 cx)
        (const_int 2 [0x2])) open_catalog.c:220 -1
     (nil))
(insn 689 688 690 118 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) open_catalog.c:220 -1
     (nil))
(insn 690 689 691 118 (set (reg:DI 4 si)
        (reg:DI 247 [ D.8758 ])) open_catalog.c:220 -1
     (nil))
(insn 691 690 692 118 (set (reg:DI 5 di)
        (const_int 0 [0])) open_catalog.c:220 -1
     (nil))
(call_insn 692 691 693 118 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__mmap") [flags 0x41]  <function_decl 0x2b982491e288 __mmap>) [0 __mmap S1 A8])
            (const_int 0 [0]))) open_catalog.c:220 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__mmap") [flags 0x41]  <function_decl 0x2b982491e288 __mmap>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 693 692 694 118 (set (reg/f:DI 248 [ D.8768 ])
        (reg:DI 0 ax)) open_catalog.c:220 -1
     (nil))
(insn 694 693 695 118 (set (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 40 [0x28])) [4 catalog_326(D)->file_ptr+0 S8 A64])
        (reg/f:DI 248 [ D.8768 ])) open_catalog.c:219 -1
     (nil))
(insn 695 694 696 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 248 [ D.8768 ])
            (const_int -1 [0xffffffffffffffff]))) open_catalog.c:222 -1
     (nil))
(jump_insn 696 695 697 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 701)
            (pc))) open_catalog.c:222 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 701)
(note 697 696 698 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 698 697 94 119 (set (mem:SI (reg/v/f:DI 290 [ catalog ]) [2 catalog_326(D)->status+0 S4 A64])
        (const_int 0 [0])) open_catalog.c:225 -1
     (nil))
(insn 94 698 699 119 (set (reg/f:DI 284 [ D.8765 ])
        (reg/f:DI 248 [ D.8768 ])) -1
     (nil))
(jump_insn 699 94 700 119 (set (pc)
        (label_ref 752)) -1
     (nil)
 -> 752)
(barrier 700 699 701)
(code_label 701 700 702 120 54 "" [1 uses])
(note 702 701 703 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 703 702 704 120 (set (reg:DI 283 [ D.8764 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [3 st.st_size+0 S8 A128])) open_catalog.c:232 -1
     (nil))
(insn 704 703 705 120 (set (reg/v:DI 142 [ todo ])
        (reg:DI 283 [ D.8764 ])) open_catalog.c:232 -1
     (nil))
(insn 705 704 706 120 (set (reg:DI 5 di)
        (reg/v:DI 142 [ todo ])) open_catalog.c:232 -1
     (nil))
(call_insn 706 705 707 120 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b982448f360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) open_catalog.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2b982448f360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 707 706 708 120 (set (reg/f:DI 378)
        (reg:DI 0 ax)) open_catalog.c:232 -1
     (expr_list:REG_NOALIAS (reg/f:DI 378)
        (nil)))
(insn 708 707 709 120 (set (reg/f:DI 249 [ D.8768 ])
        (reg/f:DI 378)) open_catalog.c:232 -1
     (nil))
(insn 709 708 711 120 (set (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 40 [0x28])) [4 catalog_326(D)->file_ptr+0 S8 A64])
        (reg/f:DI 249 [ D.8768 ])) open_catalog.c:232 -1
     (nil))
(insn 711 709 712 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 249 [ D.8768 ])
            (const_int 0 [0]))) open_catalog.c:233 -1
     (nil))
(jump_insn 712 711 713 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 710)
            (pc))) open_catalog.c:233 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 710)
(note 713 712 93 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 93 713 745 121 (set (reg/f:DI 219 [ D.8765 ])
        (reg/f:DI 249 [ D.8768 ])) -1
     (nil))
(code_label 745 93 714 122 60 "" [1 uses])
(note 714 745 715 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 122 (set (reg/v:DI 1 dx [ _a3 ])
        (reg/v:DI 142 [ todo ])) open_catalog.c:240 -1
     (nil))
(insn 716 715 717 122 (parallel [
            (set (reg:DI 379 [ D.8758 ])
                (minus:DI (reg:DI 283 [ D.8764 ])
                    (reg/v:DI 142 [ todo ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:240 -1
     (nil))
(insn 717 716 718 122 (parallel [
            (set (reg/v:DI 4 si [ _a2 ])
                (plus:DI (reg/f:DI 219 [ D.8765 ])
                    (reg:DI 379 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:240 -1
     (nil))
(insn 718 717 719 122 (set (reg/v:DI 5 di [ _a1 ])
        (reg:DI 212 [ D.8764 ])) open_catalog.c:240 -1
     (nil))
(insn 719 718 720 122 (set (reg:SI 381)
        (const_int 0 [0])) open_catalog.c:240 -1
     (nil))
(insn 720 719 721 122 (parallel [
            (set (reg:DI 380 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 381)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") open_catalog.c:240)
                        (asm_input:DI ("r") open_catalog.c:240)
                        (asm_input:DI ("r") open_catalog.c:240)
                        (asm_input:DI ("r") open_catalog.c:240)
                    ]
                     [] open_catalog.c:240))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) open_catalog.c:240 -1
     (nil))
(insn 721 720 722 122 (set (reg/v:DI 255 [ resultvar ])
        (reg:DI 380 [ resultvar ])) open_catalog.c:240 -1
     (nil))
(insn 722 721 723 122 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 255 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) open_catalog.c:240 -1
     (nil))
(jump_insn 723 722 724 122 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 855)
            (pc))) open_catalog.c:240 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 855)
(note 724 723 725 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 725 724 726 123 (parallel [
            (set (reg:SI 257 [ D.8766 ])
                (neg:SI (subreg:SI (reg/v:DI 255 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:240 -1
     (nil))
(insn 726 725 727 123 (set (reg:DI 382)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2b9824857900 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [9  S8 A8])) open_catalog.c:240 -1
     (nil))
(insn 727 726 728 123 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 382)) [5 __libc_errno+0 S4 A32])
        (reg:SI 257 [ D.8766 ])) open_catalog.c:240 -1
     (nil))
(insn 728 727 729 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 257 [ D.8766 ])
            (const_int 4 [0x4]))) open_catalog.c:245 -1
     (nil))
(jump_insn 729 728 857 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 738)
            (pc))) open_catalog.c:245 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 738)
(code_label 857 729 730 124 70 "" [1 uses])
(note 730 857 731 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 124 (set (reg:DI 383)
        (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 40 [0x28])) [4 catalog_326(D)->file_ptr+0 S8 A64])) open_catalog.c:248 -1
     (nil))
(insn 732 731 733 124 (set (reg:DI 5 di)
        (reg:DI 383)) open_catalog.c:248 -1
     (nil))
(call_insn 733 732 101 124 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:248 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 101 733 734 124 (set (reg/v:SI 131 [ result ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:49 -1
     (nil))
(jump_insn 734 101 735 124 (set (pc)
        (label_ref 842)) open_catalog.c:249 -1
     (nil)
 -> 842)
(barrier 735 734 861)
(code_label 861 735 736 125 71 "" [1 uses])
(note 736 861 737 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 737 736 738 125 (parallel [
            (set (reg/v:DI 142 [ todo ])
                (minus:DI (reg/v:DI 142 [ todo ])
                    (reg/v:DI 255 [ resultvar ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:251 -1
     (nil))
(code_label 738 737 739 126 58 "" [1 uses])
(note 739 738 740 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 740 739 741 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 142 [ todo ])
            (const_int 0 [0]))) open_catalog.c:253 -1
     (nil))
(jump_insn 741 740 742 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 748)
            (pc))) open_catalog.c:253 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 748)
(note 742 741 743 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 127 (set (reg/f:DI 219 [ D.8765 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 40 [0x28])) [4 catalog_326(D)->file_ptr+0 S8 A64])) -1
     (nil))
(insn 744 743 746 127 (set (reg:DI 283 [ D.8764 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [3 st.st_size+0 S8 A128])) -1
     (nil))
(jump_insn 746 744 747 127 (set (pc)
        (label_ref 745)) -1
     (nil)
 -> 745)
(barrier 747 746 748)
(code_label 748 747 749 128 59 "" [1 uses])
(note 749 748 750 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 750 749 751 128 (set (mem:SI (reg/v/f:DI 290 [ catalog ]) [2 catalog_326(D)->status+0 S4 A64])
        (const_int 1 [0x1])) open_catalog.c:254 -1
     (nil))
(insn 751 750 752 128 (set (reg/f:DI 284 [ D.8765 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 40 [0x28])) [4 catalog_326(D)->file_ptr+0 S8 A64])) -1
     (nil))
(code_label 752 751 753 129 55 "" [1 uses])
(note 753 752 754 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 755 129 (set (reg:SI 260 [ D.8767 ])
        (mem:SI (reg/f:DI 284 [ D.8765 ]) [5 _430->magic+0 S4 A32])) open_catalog.c:260 -1
     (nil))
(insn 755 754 756 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 260 [ D.8767 ])
            (const_int -1778120482 [0xffffffff960408de]))) open_catalog.c:260 -1
     (nil))
(jump_insn 756 755 757 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) open_catalog.c:260 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 877)
(note 757 756 758 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 260 [ D.8767 ])
            (const_int -569899882 [0xffffffffde080496]))) open_catalog.c:262 -1
     (nil))
(jump_insn 759 758 809 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 865)
            (pc))) open_catalog.c:262 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 865)
(code_label 809 759 760 131 66 "" [3 uses])
(note 760 809 761 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 761 760 762 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 290 [ catalog ]) [2 catalog_326(D)->status+0 S4 A64])
            (const_int 0 [0]))) open_catalog.c:270 -1
     (nil))
(jump_insn 762 761 763 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 770)
            (pc))) open_catalog.c:270 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 770)
(note 763 762 764 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 765 132 (set (reg:DI 384)
        (mem:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 48 [0x30])) [3 catalog_326(D)->file_size+0 S8 A64])) open_catalog.c:271 -1
     (nil))
(insn 765 764 766 132 (set (reg:DI 4 si)
        (reg:DI 384)) open_catalog.c:271 -1
     (nil))
(insn 766 765 767 132 (set (reg:DI 5 di)
        (reg/f:DI 284 [ D.8765 ])) open_catalog.c:271 -1
     (nil))
(call_insn 767 766 103 132 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__munmap") [flags 0x41]  <function_decl 0x2b982491e438 __munmap>) [0 __munmap S1 A8])
            (const_int 0 [0]))) open_catalog.c:271 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__munmap") [flags 0x41]  <function_decl 0x2b982491e438 __munmap>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 103 767 768 132 (set (reg/v:SI 131 [ result ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:49 -1
     (nil))
(jump_insn 768 103 769 132 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 769 768 770)
(code_label 770 769 771 133 63 "" [1 uses])
(note 771 770 772 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 133 (set (reg:DI 5 di)
        (reg/f:DI 284 [ D.8765 ])) open_catalog.c:274 -1
     (nil))
(call_insn 773 772 102 133 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:274 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 102 773 774 133 (set (reg/v:SI 131 [ result ])
        (const_int -1 [0xffffffffffffffff])) open_catalog.c:49 -1
     (nil))
(jump_insn 774 102 775 133 (set (pc)
        (label_ref 842)) open_catalog.c:274 -1
     (nil)
 -> 842)
(barrier 775 774 874)
(code_label 874 775 776 134 72 "" [2 uses])
(note 776 874 777 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 777 776 778 134 (set (mem:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 16 [0x10])) [3 catalog_326(D)->plane_depth+0 S8 A64])
        (reg:DI 145 [ D.8760 ])) open_catalog.c:282 -1
     (nil))
(insn 778 777 779 134 (parallel [
            (set (reg/f:DI 267 [ D.8769 ])
                (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:287 -1
     (nil))
(insn 779 778 780 134 (set (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 24 [0x18])) [4 catalog_326(D)->name_ptr+0 S8 A64])
        (reg/f:DI 267 [ D.8769 ])) open_catalog.c:287 -1
     (nil))
(insn 780 779 781 134 (parallel [
            (set (reg:DI 268 [ D.8758 ])
                (mult:DI (reg:DI 145 [ D.8760 ])
                    (reg:DI 200 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:300 -1
     (nil))
(insn 781 780 782 134 (set (reg:DI 385)
        (reg:DI 268 [ D.8758 ])) open_catalog.c:300 -1
     (nil))
(insn 782 781 783 134 (parallel [
            (set (reg:DI 386)
                (ashift:DI (reg:DI 385)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:300 -1
     (nil))
(insn 783 782 784 134 (parallel [
            (set (reg:DI 387)
                (plus:DI (reg:DI 386)
                    (reg:DI 268 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:300 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 268 [ D.8758 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 784 783 785 134 (parallel [
            (set (reg:DI 388)
                (ashift:DI (reg:DI 387)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:300 -1
     (nil))
(insn 785 784 786 134 (set (reg:DI 387)
        (reg:DI 388)) open_catalog.c:300 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 268 [ D.8758 ])
            (const_int 6 [0x6]))
        (nil)))
(insn 786 785 787 134 (set (reg:DI 269 [ D.8758 ])
        (reg:DI 387)) open_catalog.c:300 -1
     (nil))
(insn 787 786 788 134 (parallel [
            (set (reg:DI 389)
                (ashift:DI (reg:DI 269 [ D.8758 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:299 -1
     (nil))
(insn 788 787 789 134 (parallel [
            (set (reg:DI 390)
                (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (reg:DI 389)))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:299 -1
     (nil))
(insn 789 788 790 134 (parallel [
            (set (reg/f:DI 270 [ D.8769 ])
                (plus:DI (reg:DI 390)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:299 -1
     (nil))
(insn 790 789 791 134 (set (mem/f:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 32 [0x20])) [4 catalog_326(D)->strings+0 S8 A64])
        (reg/f:DI 270 [ D.8769 ])) open_catalog.c:298 -1
     (nil))
(insn 791 790 792 134 (set (reg:DI 391)
        (reg:DI 268 [ D.8758 ])) open_catalog.c:304 -1
     (nil))
(insn 792 791 793 134 (parallel [
            (set (reg:DI 392)
                (ashift:DI (reg:DI 391)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:304 -1
     (nil))
(insn 793 792 794 134 (parallel [
            (set (reg:DI 393)
                (plus:DI (reg:DI 392)
                    (reg:DI 268 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:304 -1
     (expr_list:REG_EQUAL (mult:DI (reg:DI 268 [ D.8758 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 794 793 795 134 (set (reg/v:DI 271 [ tab_size ])
        (reg:DI 393)) open_catalog.c:304 -1
     (nil))
(insn 795 794 796 134 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 271 [ tab_size ])
            (const_int 2 [0x2]))) open_catalog.c:305 -1
     (nil))
(jump_insn 796 795 797 134 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 915)
            (pc))) open_catalog.c:305 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 915)
(note 797 796 95 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 95 797 96 135 (set (reg/v:DI 197 [ max_offset ])
        (const_int 0 [0])) open_catalog.c:305 -1
     (nil))
(insn 96 95 803 135 (set (reg/v:DI 157 [ cnt ])
        (const_int 2 [0x2])) open_catalog.c:305 -1
     (nil))
(code_label 803 96 798 136 65 "" [1 uses])
(note 798 803 799 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 800 136 (set (reg/v:DI 273 [ max_offset ])
        (zero_extend:DI (mem:SI (plus:DI (mult:DI (reg/v:DI 157 [ cnt ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 267 [ D.8769 ])) [5 MEM[base: _382, index: cnt_109, step: 4, offset: 0B]+0 S4 A32]))) open_catalog.c:306 -1
     (nil))
(insn 800 799 801 136 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 197 [ max_offset ])
            (reg/v:DI 273 [ max_offset ]))) -1
     (nil))
(insn 801 800 802 136 (set (reg/v:DI 197 [ max_offset ])
        (if_then_else:DI (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 197 [ max_offset ])
            (reg/v:DI 273 [ max_offset ]))) -1
     (nil))
(insn 802 801 804 136 (parallel [
            (set (reg/v:DI 157 [ cnt ])
                (plus:DI (reg/v:DI 157 [ cnt ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:305 -1
     (nil))
(insn 804 802 805 136 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 271 [ tab_size ])
            (reg/v:DI 157 [ cnt ]))) open_catalog.c:305 -1
     (nil))
(jump_insn 805 804 911 136 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 803)
            (pc))) open_catalog.c:305 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 803)
(note 911 805 912 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(jump_insn 912 911 913 137 (set (pc)
        (label_ref 806)) -1
     (nil)
 -> 806)
(barrier 913 912 915)
(code_label 915 913 914 138 83 "" [1 uses])
(note 914 915 97 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 97 914 806 138 (set (reg/v:DI 197 [ max_offset ])
        (const_int 0 [0])) open_catalog.c:303 -1
     (nil))
(code_label 806 97 807 139 64 "" [1 uses])
(note 807 806 808 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 808 807 810 139 (set (reg:DI 275 [ D.8758 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [3 st.st_size+0 S8 A128])) open_catalog.c:311 -1
     (nil))
(insn 810 808 811 139 (parallel [
            (set (reg:DI 394 [ D.8758 ])
                (plus:DI (reg:DI 269 [ D.8758 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:311 -1
     (nil))
(insn 811 810 812 139 (parallel [
            (set (reg:DI 395 [ D.8758 ])
                (plus:DI (reg:DI 394 [ D.8758 ])
                    (reg/v:DI 197 [ max_offset ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:311 -1
     (nil))
(insn 812 811 813 139 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 275 [ D.8758 ])
            (reg:DI 395 [ D.8758 ]))) open_catalog.c:311 -1
     (nil))
(jump_insn 813 812 814 139 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 809)
            (pc))) open_catalog.c:311 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 809)
(note 814 813 815 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 815 814 816 140 (parallel [
            (set (reg/v/f:DI 179 [ lastp ])
                (plus:DI (reg/f:DI 270 [ D.8769 ])
                    (reg/v:DI 197 [ max_offset ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:316 -1
     (nil))
(insn 816 815 817 140 (parallel [
            (set (reg:DI 396 [ D.8758 ])
                (plus:DI (reg:DI 275 [ D.8758 ])
                    (const_int -13 [0xfffffffffffffff3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 817 816 818 140 (parallel [
            (set (reg:DI 229 [ D.8758 ])
                (plus:DI (reg:DI 396 [ D.8758 ])
                    (reg:DI 269 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 818 817 819 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 179 [ lastp ]) [0 *lastp_399+0 S1 A8])
            (const_int 0 [0]))) open_catalog.c:319 -1
     (nil))
(jump_insn 819 818 820 140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 920)
            (pc))) open_catalog.c:319 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 920)
(note 820 819 821 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 141 (parallel [
            (set (reg/v:DI 144 [ max_offset ])
                (plus:DI (reg/v:DI 197 [ max_offset ])
                    (reg:DI 229 [ D.8758 ])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:321 -1
     (nil))
(insn 822 821 823 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 144 [ max_offset ])
            (const_int 0 [0]))) open_catalog.c:321 -1
     (nil))
(jump_insn 823 822 826 141 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 809)
            (pc))) open_catalog.c:321 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 809)
(note 826 823 824 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 824 826 825 142 (set (pc)
        (label_ref 834)) open_catalog.c:321 -1
     (nil)
 -> 834)
(barrier 825 824 839)
(code_label 839 825 827 143 69 "" [1 uses])
(note 827 839 828 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 828 827 829 143 (parallel [
            (set (reg/v:DI 144 [ max_offset ])
                (plus:DI (reg/v:DI 144 [ max_offset ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:321 -1
     (nil))
(insn 829 828 830 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 144 [ max_offset ])
            (const_int 0 [0]))) open_catalog.c:321 -1
     (nil))
(jump_insn 830 829 833 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 809)
            (pc))) open_catalog.c:321 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 809)
(note 833 830 831 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(jump_insn 831 833 832 144 (set (pc)
        (label_ref 836)) -1
     (nil)
 -> 836)
(barrier 832 831 834)
(code_label 834 832 835 145 67 "" [1 uses])
(note 835 834 836 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(code_label 836 835 837 146 68 "" [1 uses])
(note 837 836 838 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 838 837 840 146 (parallel [
            (set (reg/v/f:DI 179 [ lastp ])
                (plus:DI (reg/v/f:DI 179 [ lastp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:323 -1
     (nil))
(insn 840 838 841 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 179 [ lastp ]) [0 MEM[base: lastp_406, offset: 0B]+0 S1 A8])
            (const_int 0 [0]))) open_catalog.c:319 -1
     (nil))
(jump_insn 841 840 916 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 839)
            (pc))) open_catalog.c:319 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 839)
(note 916 841 100 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 100 916 917 147 (set (reg/v:SI 131 [ result ])
        (const_int 0 [0])) open_catalog.c:327 -1
     (nil))
(jump_insn 917 100 918 147 (set (pc)
        (label_ref 842)) -1
     (nil)
 -> 842)
(barrier 918 917 920)
(code_label 920 918 919 148 84 "" [1 uses])
(note 919 920 104 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 104 919 842 148 (set (reg/v:SI 131 [ result ])
        (const_int 0 [0])) open_catalog.c:327 -1
     (nil))
(code_label 842 104 843 149 51 ("close_unlock_return") [6 uses])
(note 843 842 844 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 844 843 845 149 (set (reg/v:DI 5 di [ _a1 ])
        (reg:DI 212 [ D.8764 ])) open_catalog.c:331 -1
     (nil))
(insn 845 844 846 149 (set (reg:SI 398)
        (const_int 3 [0x3])) open_catalog.c:331 -1
     (nil))
(insn 846 845 847 149 (parallel [
            (set (reg:DI 397 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 398)
                        (reg/v:DI 5 di [ _a1 ])
                    ]
                     [
                        (asm_input:SI ("0") open_catalog.c:331)
                        (asm_input:DI ("r") open_catalog.c:331)
                    ]
                     [] open_catalog.c:331))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) open_catalog.c:331 -1
     (nil))
(insn 847 846 848 149 (set (reg/v:DI 281 [ resultvar ])
        (reg:DI 397 [ resultvar ])) open_catalog.c:331 -1
     (nil))
(insn 848 847 849 149 (set (reg:DI 5 di)
        (reg/v/f:DI 132 [ buf ])) open_catalog.c:332 -1
     (nil))
(call_insn 849 848 115 149 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) open_catalog.c:332 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2b9824485e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 115 849 850 149 (set (reg:SI 143 [ D.8759 ])
        (reg/v:SI 131 [ result ])) open_catalog.c:334 -1
     (nil))
(code_label 850 115 851 150 10 "" [10 uses])
(note 851 850 852 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 852 851 853 150 (set (reg:SI 286 [ <retval> ])
        (reg:SI 143 [ D.8759 ])) -1
     (nil))
(jump_insn 853 852 854 150 (set (pc)
        (label_ref 884)) -1
     (nil)
 -> 884)
(barrier 854 853 855)
(code_label 855 854 856 151 57 "" [1 uses])
(note 856 855 858 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 858 856 859 151 (parallel [
            (set (reg:DI 400 [ D.8758 ])
                (plus:DI (reg/v:DI 255 [ resultvar ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) open_catalog.c:242 -1
     (nil))
(insn 859 858 860 151 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 400 [ D.8758 ])
            (const_int -3 [0xfffffffffffffffd]))) open_catalog.c:242 -1
     (nil))
(jump_insn 860 859 864 151 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 857)
            (pc))) open_catalog.c:242 -1
     (int_list:REG_BR_PROB 166 (nil))
 -> 857)
(note 864 860 862 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(jump_insn 862 864 863 152 (set (pc)
        (label_ref 861)) open_catalog.c:242 -1
     (nil)
 -> 861)
(barrier 863 862 865)
(code_label 865 863 866 153 62 "" [1 uses])
(note 866 865 867 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 867 866 868 153 (set (reg:SI 401)
        (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                (const_int 4 [0x4])) [5 _430->plane_size+0 S4 A32])) ../sysdeps/x86/bits/byteswap.h:47 -1
     (nil))
(insn 868 867 869 153 (set (reg:SI 263 [ D.8767 ])
        (bswap:SI (reg:SI 401))) ../sysdeps/x86/bits/byteswap.h:47 -1
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (const_int 4 [0x4])) [5 _430->plane_size+0 S4 A32]))
        (nil)))
(insn 869 868 870 153 (set (reg:DI 200 [ D.8758 ])
        (zero_extend:DI (reg:SI 263 [ D.8767 ]))) open_catalog.c:281 -1
     (nil))
(insn 870 869 871 153 (set (mem:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 8 [0x8])) [3 catalog_326(D)->plane_size+0 S8 A64])
        (reg:DI 200 [ D.8758 ])) open_catalog.c:281 -1
     (nil))
(insn 871 870 872 153 (set (reg:SI 402)
        (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                (const_int 8 [0x8])) [5 _430->plane_depth+0 S4 A32])) ../sysdeps/x86/bits/byteswap.h:47 -1
     (nil))
(insn 872 871 873 153 (set (reg:SI 261 [ D.8767 ])
        (bswap:SI (reg:SI 402))) ../sysdeps/x86/bits/byteswap.h:47 -1
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (const_int 8 [0x8])) [5 _430->plane_depth+0 S4 A32]))
        (nil)))
(insn 873 872 875 153 (set (reg:DI 145 [ D.8760 ])
        (zero_extend:DI (reg:SI 261 [ D.8767 ]))) open_catalog.c:282 -1
     (nil))
(jump_insn 875 873 876 153 (set (pc)
        (label_ref 874)) -1
     (nil)
 -> 874)
(barrier 876 875 877)
(code_label 877 876 878 154 61 "" [1 uses])
(note 878 877 879 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 154 (set (reg:DI 200 [ D.8758 ])
        (zero_extend:DI (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (const_int 4 [0x4])) [5 _430->plane_size+0 S4 A32]))) open_catalog.c:281 -1
     (nil))
(insn 880 879 881 154 (set (mem:DI (plus:DI (reg/v/f:DI 290 [ catalog ])
                (const_int 8 [0x8])) [3 catalog_326(D)->plane_size+0 S8 A64])
        (reg:DI 200 [ D.8758 ])) open_catalog.c:281 -1
     (nil))
(insn 881 880 882 154 (set (reg:DI 145 [ D.8760 ])
        (zero_extend:DI (mem:SI (plus:DI (reg/f:DI 284 [ D.8765 ])
                    (const_int 8 [0x8])) [5 _430->plane_depth+0 S4 A32]))) open_catalog.c:282 -1
     (nil))
(jump_insn 882 881 883 154 (set (pc)
        (label_ref 874)) open_catalog.c:282 -1
     (nil)
 -> 874)
(barrier 883 882 884)
(code_label 884 883 887 155 1 "" [1 uses])
(note 887 884 885 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 885 887 886 155 (set (reg/i:SI 0 ax)
        (reg:SI 286 [ <retval> ])) open_catalog.c:335 -1
     (nil))
(insn 886 885 0 155 (use (reg/i:SI 0 ax)) open_catalog.c:335 -1
     (nil))
