
;; Function labellen (labellen, funcdef_no=62, decl_uid=8629, cgraph_uid=71, symbol_order=75)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 12
Edge 4->9 redirected to 13
Edge 5->7 redirected to 14


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 51 from 9 to 13.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Removing jump 37.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 95 [ lp ])
        (reg:DI 5 di [ lp ])) ns_name.c:950 -1
     (nil))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 3 10 2 (set (reg/v:QI 88 [ l ])
        (mem:QI (reg/v/f:DI 95 [ lp ]) [0 *lp_3(D)+0 S1 A8])) ns_name.c:952 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:QI 89 [ D.9561 ])
                (and:QI (reg/v:QI 88 [ l ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.9561 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:954 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 46)
            (pc))) ns_name.c:954 612 {*jcc_1}
     (int_list:REG_BR_PROB 159 (nil))
 -> 46)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.9561 ])
            (const_int 64 [0x40]))) ns_name.c:959 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ns_name.c:959 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 31)
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:QI 88 [ l ])
            (const_int 65 [0x41]))) ns_name.c:960 -1
     (nil))
(jump_insn 18 17 19 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) ns_name.c:960 612 {*jcc_1}
     (int_list:REG_BR_PROB 968 (nil))
 -> 50)
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg/v:SI 91 [ bitlen ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 95 [ lp ])
                    (const_int 1 [0x1])) [0 MEM[(const u_char *)lp_3(D) + 1B]+0 S1 A8]))) ns_name.c:961 -1
     (nil))
(insn 21 20 22 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 91 [ bitlen ])
            (const_int 0 [0]))) ns_name.c:961 -1
     (nil))
(jump_insn 22 21 23 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) ns_name.c:961 612 {*jcc_1}
     (int_list:REG_BR_PROB 6100 (nil))
 -> 54)
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (parallel [
            (set (reg:SI 96 [ D.9560 ])
                (plus:SI (reg/v:SI 91 [ bitlen ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 25 24 26 7 (parallel [
            (set (reg:SI 97 [ D.9560 ])
                (ashiftrt:SI (reg:SI 96 [ D.9560 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 26 25 51 7 (parallel [
            (set (reg:SI 87 [ D.9560 ])
                (plus:SI (reg:SI 97 [ D.9560 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 51 26 52 7 (set (pc)
        (label_ref:DI 34)) 654 {jump}
     (nil)
 -> 34)
(barrier 52 51 54)
(code_label 54 52 53 8 7 "" [1 uses])
(note 53 54 4 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 4 53 29 8 (set (reg:SI 87 [ D.9560 ])
        (const_int 33 [0x21])) ns_name.c:961 -1
     (nil))
(jump_insn 29 4 30 8 (set (pc)
        (label_ref 34)) -1
     (nil)
 -> 34)
(barrier 30 29 31)
(code_label 31 30 32 10 3 "" [1 uses])
(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 43 10 (set (reg:SI 87 [ D.9560 ])
        (zero_extend:SI (reg/v:QI 88 [ l ]))) ns_name.c:967 -1
     (nil))
(jump_insn 43 33 44 10 (set (pc)
        (label_ref 34)) ns_name.c:967 -1
     (nil)
 -> 34)
(barrier 44 43 46)
(code_label 46 44 45 11 5 "" [1 uses])
(note 45 46 6 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 6 45 47 11 (set (reg:SI 87 [ D.9560 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:956 -1
     (nil))
(jump_insn 47 6 48 11 (set (pc)
        (label_ref 34)) -1
     (nil)
 -> 34)
(barrier 48 47 50)
(code_label 50 48 49 12 6 "" [1 uses])
(note 49 50 5 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 5 49 34 12 (set (reg:SI 87 [ D.9560 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:956 -1
     (nil))
(code_label 34 5 35 13 2 "" [4 uses])
(note 35 34 36 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 40 13 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.9560 ])) -1
     (nil))
(insn 40 36 41 13 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) ns_name.c:968 -1
     (nil))
(insn 41 40 0 13 (use (reg/i:SI 0 ax)) ns_name.c:968 -1
     (nil))

;; Function ns_name_ntop (*__GI_ns_name_ntop, funcdef_no=47, decl_uid=3512, cgraph_uid=47, symbol_order=51)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55
Edge 5->8 redirected to 64
Edge 15->18 redirected to 65
Edge 16->18 redirected to 66
Edge 55->25 redirected to 68


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 23->24 to 5 failed.
Redirecting jump 172 from 60 to 5.
Edge 27->24 redirected to 5
Forwarding edge 29->30 to 32 failed.
Edge 32->24 redirected to 5
Edge 35->24 redirected to 5
Edge 37->24 redirected to 5
Edge 38->60 redirected to 5
Forwarding edge 42->43 to 63 failed.
Edge 58->24 redirected to 5
Forwarding edge 58->59 to 65 failed.
Forwarding edge 58->59 to 65 failed.
deleting block 60
Forwarding edge 61->62 to 44 failed.
Forwarding edge 63->64 to 47 failed.


try_optimize_cfg iteration 2

Forwarding edge 23->24 to 5 failed.
Deleted label in block 24.
Forwarding edge 29->30 to 32 failed.
Forwarding edge 42->43 to 63 failed.
Forwarding edge 58->59 to 65 failed.
Forwarding edge 61->62 to 44 failed.
Forwarding edge 63->64 to 47 failed.


;;
;; Full RTL generated for this function:
;;
(note 69 0 94 NOTE_INSN_DELETED)
(note 94 69 70 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 70 94 71 2 (set (reg/v/f:DI 244 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:86 -1
     (nil))
(insn 71 70 72 2 (set (reg/v/f:DI 245 [ dst ])
        (reg:DI 4 si [ dst ])) ns_name.c:86 -1
     (nil))
(insn 72 71 73 2 (set (reg/v:DI 246 [ dstsiz ])
        (reg:DI 1 dx [ dstsiz ])) ns_name.c:86 -1
     (nil))
(note 73 72 96 2 NOTE_INSN_FUNCTION_BEG)
(insn 96 73 89 2 (parallel [
            (set (reg/v/f:DI 160 [ eom ])
                (plus:DI (reg/v/f:DI 245 [ dst ])
                    (reg/v:DI 246 [ dstsiz ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:95 -1
     (nil))
(insn 89 96 90 2 (set (reg/v/f:DI 198 [ cp ])
        (reg/v/f:DI 244 [ src ])) ns_name.c:93 -1
     (nil))
(insn 90 89 97 2 (set (reg/v/f:DI 156 [ dst ])
        (reg/v/f:DI 245 [ dst ])) ns_name.c:97 -1
     (nil))
(jump_insn 97 90 98 2 (set (pc)
        (label_ref 384)) ns_name.c:97 -1
     (nil)
 -> 384)
(barrier 98 97 388)
(code_label 388 98 99 4 34 "" [1 uses])
(note 99 388 100 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 4 (parallel [
            (set (reg:QI 180 [ D.9592 ])
                (and:QI (reg:QI 162 [ D.9592 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 101 100 102 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.9592 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:98 -1
     (nil))
(jump_insn 102 101 113 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) ns_name.c:98 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 108)
(code_label 113 102 103 5 16 "" [15 uses])
(note 103 113 104 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 5 (set (reg:DI 247)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:100 -1
     (nil))
(insn 105 104 92 5 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 247)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:100 -1
     (nil))
(insn 92 105 106 5 (set (reg:SI 157 [ D.9589 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:101 -1
     (nil))
(jump_insn 106 92 107 5 (set (pc)
        (label_ref 409)) ns_name.c:101 -1
     (nil)
 -> 409)
(barrier 107 106 108)
(code_label 108 107 109 6 13 "" [1 uses])
(note 109 108 110 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 156 [ dst ])
            (reg/v/f:DI 245 [ dst ]))) ns_name.c:103 -1
     (nil))
(jump_insn 111 110 112 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 469)
            (pc))) ns_name.c:103 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 469)
(note 112 111 114 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 114 112 115 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 156 [ dst ])
            (reg/v/f:DI 160 [ eom ]))) ns_name.c:104 -1
     (nil))
(jump_insn 115 114 116 7 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:104 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 113)
(note 116 115 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 8 (parallel [
            (set (reg/v/f:DI 155 [ dst ])
                (plus:DI (reg/v/f:DI 156 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:108 -1
     (nil))
(insn 118 117 466 8 (set (mem:QI (reg/v/f:DI 156 [ dst ]) [0 *dst_4+0 S1 A8])
        (const_int 46 [0x2e])) ns_name.c:108 -1
     (nil))
(jump_insn 466 118 467 8 (set (pc)
        (label_ref 119)) -1
     (nil)
 -> 119)
(barrier 467 466 469)
(code_label 469 467 468 9 43 "" [1 uses])
(note 468 469 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 74 468 119 9 (set (reg/v/f:DI 155 [ dst ])
        (reg/v/f:DI 245 [ dst ])) -1
     (nil))
(code_label 119 74 120 10 15 "" [1 uses])
(note 120 119 121 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 10 (set (reg:DI 5 di)
        (reg/v/f:DI 198 [ cp ])) ns_name.c:110 -1
     (nil))
(call_insn/i 122 121 123 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 123 122 124 10 (set (reg/v:SI 164 [ l ])
        (reg:SI 0 ax)) ns_name.c:110 -1
     (nil))
(insn 124 123 125 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 164 [ l ])
            (const_int 0 [0]))) ns_name.c:110 -1
     (nil))
(jump_insn 125 124 126 10 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:110 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 113)
(note 126 125 127 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 11 (set (reg:DI 248 [ D.9590 ])
        (sign_extend:DI (reg/v:SI 164 [ l ]))) ns_name.c:114 -1
     (nil))
(insn 128 127 129 11 (parallel [
            (set (reg:DI 249 [ D.9593 ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (reg:DI 248 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:114 -1
     (nil))
(insn 129 128 130 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg:DI 249 [ D.9593 ]))) ns_name.c:114 -1
     (nil))
(jump_insn 130 129 131 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:114 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 113)
(note 131 130 132 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.9592 ])
            (const_int 64 [0x40]))) ns_name.c:118 -1
     (nil))
(jump_insn 133 132 134 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 141)
            (pc))) ns_name.c:118 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 141)
(note 134 133 135 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 13 (parallel [
            (set (reg/v/f:DI 169 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:97 -1
     (nil))
(insn 136 135 137 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 164 [ l ])
            (const_int 0 [0]))) ns_name.c:134 -1
     (nil))
(jump_insn 137 136 140 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 273)
            (pc))) ns_name.c:134 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 273)
(note 140 137 87 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 87 140 138 14 (set (reg/v/f:DI 198 [ cp ])
        (reg/v/f:DI 169 [ cp ])) ns_name.c:134 -1
     (nil))
(jump_insn 138 87 139 14 (set (pc)
        (label_ref 382)) ns_name.c:134 -1
     (nil)
 -> 382)
(barrier 139 138 141)
(code_label 141 139 142 15 17 "" [1 uses])
(note 142 141 143 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ n ])
            (const_int 65 [0x41]))) ns_name.c:121 -1
     (nil))
(jump_insn 144 143 145 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 150)
            (pc))) ns_name.c:121 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 150)
(note 145 144 146 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 16 (set (reg:DI 250)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:123 -1
     (nil))
(insn 147 146 93 16 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 250)) [2 errno+0 S4 A32])
        (const_int 22 [0x16])) ns_name.c:123 -1
     (nil))
(insn 93 147 148 16 (set (reg:SI 157 [ D.9589 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:124 -1
     (nil))
(jump_insn 148 93 149 16 (set (pc)
        (label_ref 409)) ns_name.c:124 -1
     (nil)
 -> 409)
(barrier 149 148 150)
(code_label 150 149 151 17 20 "" [1 uses])
(note 151 150 152 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 17 (set (reg/v:SI 201 [ b ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 1 [0x1])) [0 MEM[(const unsigned char *)cp_157 + 1B]+0 S1 A8]))) ns_name.c:801 -1
     (nil))
(insn 153 152 154 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 201 [ b ])
            (const_int 0 [0]))) ns_name.c:801 -1
     (nil))
(jump_insn 154 153 155 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 414)
            (pc))) ns_name.c:801 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 414)
(note 155 154 156 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 18 (parallel [
            (set (reg:SI 251 [ D.9589 ])
                (plus:SI (reg/v:SI 201 [ b ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:803 -1
     (nil))
(insn 157 156 158 18 (parallel [
            (set (reg/v:SI 203 [ plen ])
                (ashiftrt:SI (reg:SI 251 [ D.9589 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:803 -1
     (nil))
(insn 158 157 159 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 201 [ b ])
            (const_int 99 [0x63]))) ns_name.c:804 -1
     (nil))
(jump_insn 159 158 160 18 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 473)
            (pc))) ns_name.c:804 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 473)
(note 160 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 201 [ b ])
            (const_int 9 [0x9]))) ns_name.c:804 -1
     (nil))
(jump_insn 162 161 163 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 477)
            (pc))) ns_name.c:804 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 477)
(note 163 162 77 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 77 163 470 20 (set (reg:SI 205 [ D.9591 ])
        (const_int 7 [0x7])) ns_name.c:804 -1
     (nil))
(jump_insn 470 77 471 20 (set (pc)
        (label_ref 164)) -1
     (nil)
 -> 164)
(barrier 471 470 473)
(code_label 473 471 472 21 44 "" [1 uses])
(note 472 473 75 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 75 472 474 21 (set (reg:SI 205 [ D.9591 ])
        (const_int 9 [0x9])) ns_name.c:804 -1
     (nil))
(jump_insn 474 75 475 21 (set (pc)
        (label_ref 164)) -1
     (nil)
 -> 164)
(barrier 475 474 477)
(code_label 477 475 476 22 45 "" [1 uses])
(note 476 477 76 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 76 476 164 22 (set (reg:SI 205 [ D.9591 ])
        (const_int 8 [0x8])) ns_name.c:804 -1
     (nil))
(code_label 164 76 165 23 22 "" [2 uses])
(note 165 164 166 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 23 (parallel [
            (set (reg:SI 252 [ D.9591 ])
                (plus:SI (reg/v:SI 203 [ plen ])
                    (reg:SI 205 [ D.9591 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:805 -1
     (nil))
(insn 167 166 168 23 (set (reg:DI 253 [ D.9590 ])
        (zero_extend:DI (reg:SI 252 [ D.9591 ]))) ns_name.c:805 -1
     (nil))
(insn 168 167 169 23 (parallel [
            (set (reg:DI 254 [ D.9597 ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (reg:DI 253 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:805 -1
     (nil))
(insn 169 168 170 23 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg:DI 254 [ D.9597 ]))) ns_name.c:805 -1
     (nil))
(jump_insn 170 169 171 23 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) ns_name.c:805 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 174)
(note 171 170 172 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 172 171 173 24 (set (pc)
        (label_ref:DI 113)) ns_name.c:805 654 {jump}
     (nil)
 -> 113)
(barrier 173 172 174)
(code_label 174 173 175 25 23 "" [1 uses])
(note 175 174 176 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 25 (parallel [
            (set (reg/v/f:DI 198 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:808 -1
     (nil))
(insn 177 176 178 25 (set (mem:SI (reg/v/f:DI 155 [ dst ]) [0 MEM[(void *)dst_1]+0 S4 A8])
        (const_int 7887708 [0x785b5c])) ns_name.c:809 -1
     (nil))
(insn 178 177 179 25 (parallel [
            (set (reg/v/f:DI 213 [ dn ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:812 -1
     (nil))
(insn 179 178 180 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 201 [ b ])
            (const_int 7 [0x7]))) ns_name.c:813 -1
     (nil))
(jump_insn 180 179 450 25 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 453)
            (pc))) ns_name.c:813 -1
     (int_list:REG_BR_PROB 902 (nil))
 -> 453)
(code_label 450 180 181 26 40 "" [1 uses])
(note 181 450 79 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 79 181 198 26 (set (reg/v:SI 214 [ b ])
        (reg/v:SI 201 [ b ])) ns_name.c:802 -1
     (nil))
(code_label 198 79 182 27 27 "" [1 uses])
(note 182 198 183 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 27 (set (reg:SI 255 [ D.9589 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 198 [ cp ]) [0 MEM[base: cp_92, offset: 0B]+0 S1 A8]))) ns_name.c:814 -1
     (nil))
(insn 184 183 185 27 (set (reg:SI 1 dx)
        (reg:SI 255 [ D.9589 ])) ns_name.c:814 -1
     (nil))
(insn 185 184 186 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b85d3217990 *.LC1>)) ns_name.c:814 -1
     (nil))
(insn 186 185 187 27 (set (reg:DI 5 di)
        (reg/v/f:DI 213 [ dn ])) ns_name.c:814 -1
     (nil))
(insn 187 186 188 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_name.c:814 -1
     (nil))
(call_insn 188 187 189 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_name.c:814 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 189 188 191 27 (set (reg/v:SI 211 [ i ])
        (reg:SI 0 ax)) ns_name.c:814 -1
     (nil))
(insn 191 189 192 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 211 [ i ])
            (const_int 0 [0]))) ns_name.c:815 -1
     (nil))
(jump_insn 192 191 193 27 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:815 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 113)
(note 193 192 194 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 28 (set (reg:DI 256 [ D.9590 ])
        (sign_extend:DI (reg/v:SI 211 [ i ]))) ns_name.c:817 -1
     (nil))
(insn 195 194 196 28 (parallel [
            (set (reg/v/f:DI 213 [ dn ])
                (plus:DI (reg/v/f:DI 213 [ dn ])
                    (reg:DI 256 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:817 -1
     (nil))
(insn 196 195 197 28 (parallel [
            (set (reg/v:SI 214 [ b ])
                (plus:SI (reg/v:SI 214 [ b ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:813 -1
     (nil))
(insn 197 196 199 28 (parallel [
            (set (reg/v/f:DI 198 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:813 -1
     (nil))
(insn 199 197 200 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 214 [ b ])
            (const_int 7 [0x7]))) ns_name.c:813 -1
     (nil))
(jump_insn 200 199 201 28 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) ns_name.c:813 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 198)
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 214 [ b ])
            (const_int 4 [0x4]))) ns_name.c:819 -1
     (nil))
(jump_insn 203 202 478 29 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) ns_name.c:819 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 225)
(note 478 203 479 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 479 478 480 30 (set (pc)
        (label_ref 455)) -1
     (nil)
 -> 455)
(barrier 480 479 482)
(code_label 482 480 481 31 46 "" [1 uses])
(note 481 482 80 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 80 481 455 31 (set (reg/v:SI 214 [ b ])
        (reg/v:SI 201 [ b ])) ns_name.c:819 -1
     (nil))
(code_label 455 80 204 32 41 "" [1 uses])
(note 204 455 205 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 32 (parallel [
            (set (reg/v/f:DI 215 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:820 -1
     (nil))
(insn 206 205 207 32 (set (reg:SI 258)
        (const_int 8 [0x8])) ns_name.c:821 -1
     (nil))
(insn 207 206 208 32 (parallel [
            (set (reg:SI 257 [ D.9589 ])
                (minus:SI (reg:SI 258)
                    (reg/v:SI 214 [ b ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:821 -1
     (nil))
(insn 208 207 209 32 (set (reg:SI 260)
        (const_int 255 [0xff])) ns_name.c:821 -1
     (nil))
(insn 209 208 210 32 (parallel [
            (set (reg:SI 259 [ D.9589 ])
                (ashift:SI (reg:SI 260)
                    (subreg:QI (reg:SI 257 [ D.9589 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:821 -1
     (nil))
(insn 210 209 211 32 (set (reg:SI 261 [ D.9589 ])
        (sign_extend:SI (mem:QI (reg/v/f:DI 198 [ cp ]) [0 MEM[(const unsigned char *)cp_51]+0 S1 A8]))) ns_name.c:821 -1
     (nil))
(insn 211 210 212 32 (parallel [
            (set (reg:SI 262 [ D.9589 ])
                (and:SI (reg:SI 259 [ D.9589 ])
                    (reg:SI 261 [ D.9589 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:821 -1
     (nil))
(insn 212 211 213 32 (set (reg:SI 1 dx)
        (reg:SI 262 [ D.9589 ])) ns_name.c:821 -1
     (nil))
(insn 213 212 214 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b85d3217990 *.LC1>)) ns_name.c:821 -1
     (nil))
(insn 214 213 215 32 (set (reg:DI 5 di)
        (reg/v/f:DI 213 [ dn ])) ns_name.c:821 -1
     (nil))
(insn 215 214 216 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_name.c:821 -1
     (nil))
(call_insn 216 215 217 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_name.c:821 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 217 216 218 32 (set (reg/v:SI 222 [ i ])
        (reg:SI 0 ax)) ns_name.c:821 -1
     (nil))
(insn 218 217 219 32 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 222 [ i ])
            (const_int 0 [0]))) ns_name.c:822 -1
     (nil))
(jump_insn 219 218 220 32 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:822 612 {*jcc_1}
     (int_list:REG_BR_PROB 152 (nil))
 -> 113)
(note 220 219 221 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 33 (set (reg:DI 263 [ D.9590 ])
        (sign_extend:DI (reg/v:SI 222 [ i ]))) ns_name.c:824 -1
     (nil))
(insn 222 221 82 33 (parallel [
            (set (reg/v/f:DI 213 [ dn ])
                (plus:DI (reg/v/f:DI 213 [ dn ])
                    (reg:DI 263 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:824 -1
     (nil))
(insn 82 222 223 33 (set (reg/v/f:DI 198 [ cp ])
        (reg/v/f:DI 215 [ cp ])) ns_name.c:820 -1
     (nil))
(jump_insn 223 82 224 33 (set (pc)
        (label_ref 251)) ns_name.c:824 -1
     (nil)
 -> 251)
(barrier 224 223 225)
(code_label 225 224 226 34 28 "" [1 uses])
(note 226 225 227 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 214 [ b ])
            (const_int 0 [0]))) ns_name.c:825 -1
     (nil))
(jump_insn 228 227 458 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 251)
            (pc))) ns_name.c:825 -1
     (int_list:REG_BR_PROB 5211 (nil))
 -> 251)
(code_label 458 228 229 35 42 "" [1 uses])
(note 229 458 230 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 35 (parallel [
            (set (reg/v/f:DI 224 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:826 -1
     (nil))
(insn 231 230 232 35 (set (reg:QI 265)
        (mem:QI (reg/v/f:DI 198 [ cp ]) [0 MEM[(const unsigned char *)cp_36]+0 S1 A8])) ns_name.c:827 -1
     (nil))
(insn 232 231 233 35 (parallel [
            (set (reg:QI 264 [ D.9598 ])
                (ashiftrt:QI (reg:QI 265)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:827 -1
     (expr_list:REG_EQUAL (ashiftrt:QI (mem:QI (reg/v/f:DI 198 [ cp ]) [0 MEM[(const unsigned char *)cp_36]+0 S1 A8])
            (const_int 4 [0x4]))
        (nil)))
(insn 233 232 234 35 (parallel [
            (set (reg:QI 266 [ D.9598 ])
                (and:QI (reg:QI 264 [ D.9598 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:827 -1
     (nil))
(insn 234 233 235 35 (set (reg:SI 267 [ D.9589 ])
        (sign_extend:SI (reg:QI 266 [ D.9598 ]))) ns_name.c:827 -1
     (nil))
(insn 235 234 236 35 (set (reg:SI 269)
        (const_int 4 [0x4])) ns_name.c:827 -1
     (nil))
(insn 236 235 237 35 (parallel [
            (set (reg:SI 268 [ D.9589 ])
                (minus:SI (reg:SI 269)
                    (reg/v:SI 214 [ b ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:827 -1
     (nil))
(insn 237 236 238 35 (set (reg:SI 271)
        (const_int 15 [0xf])) ns_name.c:827 -1
     (nil))
(insn 238 237 239 35 (parallel [
            (set (reg:SI 270 [ D.9589 ])
                (ashift:SI (reg:SI 271)
                    (subreg:QI (reg:SI 268 [ D.9589 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:827 -1
     (nil))
(insn 239 238 240 35 (parallel [
            (set (reg:SI 272 [ D.9589 ])
                (and:SI (reg:SI 267 [ D.9589 ])
                    (reg:SI 270 [ D.9589 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:827 -1
     (nil))
(insn 240 239 241 35 (set (reg:SI 1 dx)
        (reg:SI 272 [ D.9589 ])) ns_name.c:827 -1
     (nil))
(insn 241 240 242 35 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b85d3217a20 *.LC2>)) ns_name.c:827 -1
     (nil))
(insn 242 241 243 35 (set (reg:DI 5 di)
        (reg/v/f:DI 213 [ dn ])) ns_name.c:827 -1
     (nil))
(insn 243 242 244 35 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_name.c:827 -1
     (nil))
(call_insn 244 243 245 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_name.c:827 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 245 244 246 35 (set (reg/v:SI 233 [ i ])
        (reg:SI 0 ax)) ns_name.c:827 -1
     (nil))
(insn 246 245 247 35 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 233 [ i ])
            (const_int 0 [0]))) ns_name.c:829 -1
     (nil))
(jump_insn 247 246 248 35 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:829 612 {*jcc_1}
     (int_list:REG_BR_PROB 152 (nil))
 -> 113)
(note 248 247 249 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 36 (set (reg:DI 273 [ D.9590 ])
        (sign_extend:DI (reg/v:SI 233 [ i ]))) ns_name.c:831 -1
     (nil))
(insn 250 249 83 36 (parallel [
            (set (reg/v/f:DI 213 [ dn ])
                (plus:DI (reg/v/f:DI 213 [ dn ])
                    (reg:DI 273 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:831 -1
     (nil))
(insn 83 250 251 36 (set (reg/v/f:DI 198 [ cp ])
        (reg/v/f:DI 224 [ cp ])) ns_name.c:826 -1
     (nil))
(code_label 251 83 252 37 29 "" [2 uses])
(note 252 251 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 37 (set (reg:SI 1 dx)
        (reg/v:SI 201 [ b ])) ns_name.c:833 -1
     (nil))
(insn 254 253 255 37 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2b85d3217ab0 *.LC3>)) ns_name.c:833 -1
     (nil))
(insn 255 254 256 37 (set (reg:DI 5 di)
        (reg/v/f:DI 213 [ dn ])) ns_name.c:833 -1
     (nil))
(insn 256 255 257 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_name.c:833 -1
     (nil))
(call_insn 257 256 258 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_name.c:833 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b85d2be1af8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 258 257 259 37 (set (reg/v:SI 235 [ i ])
        (reg:SI 0 ax)) ns_name.c:833 -1
     (nil))
(insn 259 258 260 37 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 235 [ i ])
            (const_int 0 [0]))) ns_name.c:834 -1
     (nil))
(jump_insn 260 259 261 37 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:834 612 {*jcc_1}
     (int_list:REG_BR_PROB 152 (nil))
 -> 113)
(note 261 260 262 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 38 (set (reg:DI 274 [ D.9590 ])
        (sign_extend:DI (reg/v:SI 235 [ i ]))) ns_name.c:839 -1
     (nil))
(insn 263 262 264 38 (parallel [
            (set (reg:DI 275 [ dn ])
                (plus:DI (reg/v/f:DI 213 [ dn ])
                    (reg:DI 274 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:839 -1
     (nil))
(insn 264 263 265 38 (parallel [
            (set (reg:DI 276 [ D.9595 ])
                (minus:DI (reg:DI 275 [ dn ])
                    (reg/v/f:DI 155 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:839 -1
     (nil))
(insn 265 264 266 38 (set (reg:SI 241 [ D.9589 ])
        (subreg:SI (reg:DI 276 [ D.9595 ]) 0)) ns_name.c:839 -1
     (nil))
(insn 266 265 267 38 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 241 [ D.9589 ])
            (const_int 0 [0]))) ns_name.c:126 -1
     (nil))
(jump_insn 267 266 268 38 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:126 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 113)
(note 268 267 269 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 39 (set (reg:DI 277 [ D.9590 ])
        (sign_extend:DI (reg:SI 241 [ D.9589 ]))) ns_name.c:131 -1
     (nil))
(insn 270 269 271 39 (parallel [
            (set (reg/v/f:DI 155 [ dst ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (reg:DI 277 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:131 -1
     (nil))
(jump_insn 271 270 272 39 (set (pc)
        (label_ref 382)) ns_name.c:132 -1
     (nil)
 -> 382)
(barrier 272 271 273)
(code_label 273 272 274 40 18 "" [1 uses])
(note 274 273 275 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 275 274 276 40 (parallel [
            (set (reg:SI 278 [ D.9591 ])
                (plus:SI (reg/v:SI 164 [ l ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 276 275 277 40 (set (reg:DI 279 [ D.9590 ])
        (zero_extend:DI (reg:SI 278 [ D.9591 ]))) -1
     (nil))
(insn 277 276 278 40 (parallel [
            (set (reg:DI 280 [ D.9590 ])
                (plus:DI (reg:DI 279 [ D.9590 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 278 277 379 40 (parallel [
            (set (reg/v/f:DI 198 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (reg:DI 280 [ D.9590 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 379 278 279 41 33 "" [1 uses])
(note 279 379 280 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 41 (parallel [
            (set (reg/v/f:DI 169 [ cp ])
                (plus:DI (reg/v/f:DI 169 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:135 -1
     (nil))
(insn 281 280 282 41 (set (reg/v:QI 170 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 169 [ cp ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: cp_42, offset: -1B]+0 S1 A8])) ns_name.c:135 -1
     (nil))
(insn 282 281 283 41 (set (reg:SI 175 [ D.9591 ])
        (zero_extend:SI (reg/v:QI 170 [ c ]))) -1
     (nil))
(insn 283 282 284 41 (parallel [
            (set (reg:SI 171 [ D.9591 ])
                (plus:SI (reg:SI 175 [ D.9591 ])
                    (const_int -34 [0xffffffffffffffde])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 284 283 285 41 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 171 [ D.9591 ])
            (const_int 58 [0x3a]))) -1
     (nil))
(jump_insn 285 284 286 41 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 435)
            (pc))) -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 435)
(note 286 285 287 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 42 (set (reg:DI 282)
        (const_int 1 [0x1])) -1
     (nil))
(insn 288 287 289 42 (parallel [
            (set (reg:DI 281 [ D.9596 ])
                (ashift:DI (reg:DI 282)
                    (subreg:QI (reg:SI 171 [ D.9591 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 289 288 290 42 (set (reg:DI 284)
        (const_int 288230377259012293 [0x4000000420010c5])) -1
     (nil))
(insn 290 289 291 42 (parallel [
            (set (reg:DI 283 [ D.9596 ])
                (and:DI (reg:DI 281 [ D.9596 ])
                    (reg:DI 284)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 291 290 292 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 283 [ D.9596 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 292 291 295 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 426)
            (pc))) -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 426)
(note 295 292 293 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(jump_insn 293 295 294 43 (set (pc)
        (label_ref 435)) -1
     (nil)
 -> 435)
(barrier 294 293 431)
(code_label 431 294 296 44 37 "" [1 uses])
(note 296 431 297 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 44 (set (mem:QI (reg/v/f:DI 155 [ dst ]) [0 *dst_179+0 S1 A8])
        (const_int 92 [0x5c])) ns_name.c:141 -1
     (nil))
(insn 298 297 299 44 (parallel [
            (set (reg/v/f:DI 173 [ dst ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:142 -1
     (nil))
(insn 299 298 84 44 (set (mem:QI (plus:DI (reg/v/f:DI 155 [ dst ])
                (const_int 1 [0x1])) [0 MEM[(char *)dst_179 + 1B]+0 S1 A8])
        (reg/v:QI 170 [ c ])) ns_name.c:142 -1
     (nil))
(insn 84 299 300 44 (set (reg/v/f:DI 155 [ dst ])
        (reg/v/f:DI 173 [ dst ])) ns_name.c:142 -1
     (nil))
(jump_insn 300 84 301 44 (set (pc)
        (label_ref 377)) -1
     (nil)
 -> 377)
(barrier 301 300 437)
(code_label 437 301 302 45 38 "" [1 uses])
(note 302 437 303 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 45 (parallel [
            (set (reg:DI 285 [ D.9593 ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:144 -1
     (nil))
(insn 304 303 305 45 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg:DI 285 [ D.9593 ]))) ns_name.c:144 -1
     (nil))
(jump_insn 305 304 306 45 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:144 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 113)
(note 306 305 307 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 46 (set (mem:QI (reg/v/f:DI 155 [ dst ]) [0 *dst_179+0 S1 A8])
        (const_int 92 [0x5c])) ns_name.c:148 -1
     (nil))
(insn 308 307 309 46 (set (reg/f:DI 286)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:149 -1
     (nil))
(insn 309 308 310 46 (set (reg:HI 288)
        (zero_extend:HI (reg/v:QI 170 [ c ]))) ns_name.c:149 -1
     (nil))
(insn 310 309 311 46 (set (reg:HI 289)
        (reg:HI 288)) ns_name.c:149 -1
     (nil))
(insn 311 310 312 46 (parallel [
            (set (reg:HI 290)
                (ashift:HI (reg:HI 289)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (nil))
(insn 312 311 313 46 (parallel [
            (set (reg:HI 291)
                (plus:HI (reg:HI 290)
                    (reg:HI 288)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 288)
            (const_int 5 [0x5]))
        (nil)))
(insn 313 312 314 46 (parallel [
            (set (reg:HI 292)
                (ashift:HI (reg:HI 291)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (nil))
(insn 314 313 315 46 (parallel [
            (set (reg:HI 293)
                (plus:HI (reg:HI 292)
                    (reg:HI 288)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 288)
            (const_int 41 [0x29]))
        (nil)))
(insn 315 314 316 46 (parallel [
            (set (reg:HI 294)
                (lshiftrt:HI (reg:HI 293)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (nil))
(insn 316 315 317 46 (parallel [
            (set (reg:QI 287 [ D.9592 ])
                (lshiftrt:QI (subreg:QI (reg:HI 294) 0)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:149 -1
     (expr_list:REG_EQUAL (udiv:QI (reg/v:QI 170 [ c ])
            (const_int 100 [0x64]))
        (nil)))
(insn 317 316 318 46 (set (reg:SI 295 [ D.9589 ])
        (zero_extend:SI (reg:QI 287 [ D.9592 ]))) ns_name.c:149 -1
     (nil))
(insn 318 317 319 46 (set (reg:DI 296)
        (sign_extend:DI (reg:SI 295 [ D.9589 ]))) ns_name.c:149 -1
     (nil))
(insn 319 318 320 46 (set (reg:QI 297)
        (mem/u/j:QI (plus:DI (reg/f:DI 286)
                (reg:DI 296)) [0 digits S1 A8])) ns_name.c:149 -1
     (nil))
(insn 320 319 321 46 (set (mem:QI (plus:DI (reg/v/f:DI 155 [ dst ])
                (const_int 1 [0x1])) [0 MEM[(char *)dst_179 + 1B]+0 S1 A8])
        (reg:QI 297)) ns_name.c:149 -1
     (nil))
(insn 321 320 322 46 (set (reg/f:DI 298)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:150 -1
     (nil))
(insn 322 321 323 46 (set (reg:HI 300)
        (zero_extend:HI (reg/v:QI 170 [ c ]))) ns_name.c:150 -1
     (nil))
(insn 323 322 324 46 (set (reg:HI 301)
        (reg:HI 300)) ns_name.c:150 -1
     (nil))
(insn 324 323 325 46 (parallel [
            (set (reg:HI 302)
                (ashift:HI (reg:HI 301)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 325 324 326 46 (parallel [
            (set (reg:HI 303)
                (plus:HI (reg:HI 302)
                    (reg:HI 300)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 300)
            (const_int 5 [0x5]))
        (nil)))
(insn 326 325 327 46 (parallel [
            (set (reg:HI 304)
                (ashift:HI (reg:HI 303)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 327 326 328 46 (parallel [
            (set (reg:HI 305)
                (plus:HI (reg:HI 304)
                    (reg:HI 300)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 300)
            (const_int 41 [0x29]))
        (nil)))
(insn 328 327 329 46 (parallel [
            (set (reg:HI 306)
                (lshiftrt:HI (reg:HI 305)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 329 328 330 46 (parallel [
            (set (reg:QI 299)
                (lshiftrt:QI (subreg:QI (reg:HI 306) 0)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (udiv:QI (reg/v:QI 170 [ c ])
            (const_int 100 [0x64]))
        (nil)))
(insn 330 329 331 46 (set (reg:QI 308)
        (const_int 100 [0x64])) ns_name.c:150 -1
     (nil))
(insn 331 330 332 46 (parallel [
            (set (reg:QI 307)
                (mult:QI (reg:QI 299)
                    (reg:QI 308)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 332 331 333 46 (parallel [
            (set (reg:QI 309 [ D.9592 ])
                (minus:QI (reg/v:QI 170 [ c ])
                    (reg:QI 307)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 333 332 334 46 (set (reg:HI 311)
        (zero_extend:HI (reg:QI 309 [ D.9592 ]))) ns_name.c:150 -1
     (nil))
(insn 334 333 335 46 (set (reg:HI 312)
        (reg:HI 311)) ns_name.c:150 -1
     (nil))
(insn 335 334 336 46 (parallel [
            (set (reg:HI 313)
                (ashift:HI (reg:HI 312)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 336 335 337 46 (parallel [
            (set (reg:HI 314)
                (plus:HI (reg:HI 313)
                    (reg:HI 311)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 311)
            (const_int 5 [0x5]))
        (nil)))
(insn 337 336 338 46 (parallel [
            (set (reg:HI 315)
                (ashift:HI (reg:HI 314)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 338 337 339 46 (parallel [
            (set (reg:HI 316)
                (plus:HI (reg:HI 315)
                    (reg:HI 311)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 311)
            (const_int 41 [0x29]))
        (nil)))
(insn 339 338 340 46 (parallel [
            (set (reg:HI 317)
                (ashift:HI (reg:HI 316)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 340 339 341 46 (parallel [
            (set (reg:HI 318)
                (plus:HI (reg:HI 316)
                    (reg:HI 317)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 311)
            (const_int 205 [0xcd]))
        (nil)))
(insn 341 340 342 46 (parallel [
            (set (reg:HI 319)
                (lshiftrt:HI (reg:HI 318)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (nil))
(insn 342 341 343 46 (parallel [
            (set (reg:QI 310 [ D.9592 ])
                (lshiftrt:QI (subreg:QI (reg:HI 319) 0)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:150 -1
     (expr_list:REG_EQUAL (udiv:QI (reg:QI 309 [ D.9592 ])
            (const_int 10 [0xa]))
        (nil)))
(insn 343 342 344 46 (set (reg:SI 320 [ D.9589 ])
        (zero_extend:SI (reg:QI 310 [ D.9592 ]))) ns_name.c:150 -1
     (nil))
(insn 344 343 345 46 (set (reg:DI 321)
        (sign_extend:DI (reg:SI 320 [ D.9589 ]))) ns_name.c:150 -1
     (nil))
(insn 345 344 346 46 (set (reg:QI 322)
        (mem/u/j:QI (plus:DI (reg/f:DI 298)
                (reg:DI 321)) [0 digits S1 A8])) ns_name.c:150 -1
     (nil))
(insn 346 345 347 46 (set (mem:QI (plus:DI (reg/v/f:DI 155 [ dst ])
                (const_int 2 [0x2])) [0 MEM[(char *)dst_179 + 2B]+0 S1 A8])
        (reg:QI 322)) ns_name.c:150 -1
     (nil))
(insn 347 346 348 46 (parallel [
            (set (reg/v/f:DI 185 [ dst ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 348 347 349 46 (set (reg/f:DI 323)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:151 -1
     (nil))
(insn 349 348 350 46 (set (reg:HI 325)
        (zero_extend:HI (reg/v:QI 170 [ c ]))) ns_name.c:151 -1
     (nil))
(insn 350 349 351 46 (set (reg:HI 326)
        (reg:HI 325)) ns_name.c:151 -1
     (nil))
(insn 351 350 352 46 (parallel [
            (set (reg:HI 327)
                (ashift:HI (reg:HI 326)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 352 351 353 46 (parallel [
            (set (reg:HI 328)
                (plus:HI (reg:HI 327)
                    (reg:HI 325)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 325)
            (const_int 5 [0x5]))
        (nil)))
(insn 353 352 354 46 (parallel [
            (set (reg:HI 329)
                (ashift:HI (reg:HI 328)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 354 353 355 46 (parallel [
            (set (reg:HI 330)
                (plus:HI (reg:HI 329)
                    (reg:HI 325)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 325)
            (const_int 41 [0x29]))
        (nil)))
(insn 355 354 356 46 (parallel [
            (set (reg:HI 331)
                (ashift:HI (reg:HI 330)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 356 355 357 46 (parallel [
            (set (reg:HI 332)
                (plus:HI (reg:HI 330)
                    (reg:HI 331)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (expr_list:REG_EQUAL (mult:HI (reg:HI 325)
            (const_int 205 [0xcd]))
        (nil)))
(insn 357 356 358 46 (parallel [
            (set (reg:HI 333)
                (lshiftrt:HI (reg:HI 332)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 358 357 359 46 (parallel [
            (set (reg:QI 324)
                (lshiftrt:QI (subreg:QI (reg:HI 333) 0)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (expr_list:REG_EQUAL (udiv:QI (reg/v:QI 170 [ c ])
            (const_int 10 [0xa]))
        (nil)))
(insn 359 358 360 46 (set (reg:QI 334)
        (reg:QI 324)) ns_name.c:151 -1
     (nil))
(insn 360 359 361 46 (parallel [
            (set (reg:QI 335)
                (ashift:QI (reg:QI 334)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 361 360 362 46 (parallel [
            (set (reg:QI 336)
                (plus:QI (reg:QI 335)
                    (reg:QI 324)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (expr_list:REG_EQUAL (mult:QI (reg:QI 324)
            (const_int 5 [0x5]))
        (nil)))
(insn 362 361 363 46 (parallel [
            (set (reg:QI 337)
                (ashift:QI (reg:QI 336)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 363 362 364 46 (set (reg:QI 336)
        (reg:QI 337)) ns_name.c:151 -1
     (expr_list:REG_EQUAL (mult:QI (reg:QI 324)
            (const_int 10 [0xa]))
        (nil)))
(insn 364 363 365 46 (parallel [
            (set (reg:QI 338 [ D.9592 ])
                (minus:QI (reg/v:QI 170 [ c ])
                    (reg:QI 336)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:151 -1
     (nil))
(insn 365 364 366 46 (set (reg:SI 339 [ D.9589 ])
        (zero_extend:SI (reg:QI 338 [ D.9592 ]))) ns_name.c:151 -1
     (nil))
(insn 366 365 367 46 (set (reg:DI 340)
        (sign_extend:DI (reg:SI 339 [ D.9589 ]))) ns_name.c:151 -1
     (nil))
(insn 367 366 368 46 (set (reg:QI 341)
        (mem/u/j:QI (plus:DI (reg/f:DI 323)
                (reg:DI 340)) [0 digits S1 A8])) ns_name.c:151 -1
     (nil))
(insn 368 367 85 46 (set (mem:QI (plus:DI (reg/v/f:DI 155 [ dst ])
                (const_int 3 [0x3])) [0 MEM[(char *)dst_179 + 3B]+0 S1 A8])
        (reg:QI 341)) ns_name.c:151 -1
     (nil))
(insn 85 368 369 46 (set (reg/v/f:DI 155 [ dst ])
        (reg/v/f:DI 185 [ dst ])) ns_name.c:151 -1
     (nil))
(jump_insn 369 85 370 46 (set (pc)
        (label_ref 377)) -1
     (nil)
 -> 377)
(barrier 370 369 441)
(code_label 441 370 371 47 39 "" [1 uses])
(note 371 441 372 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 47 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg/v/f:DI 155 [ dst ]))) ns_name.c:153 -1
     (nil))
(jump_insn 373 372 374 47 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:153 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 113)
(note 374 373 375 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 375 374 376 48 (parallel [
            (set (reg/v/f:DI 189 [ dst ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:157 -1
     (nil))
(insn 376 375 86 48 (set (mem:QI (reg/v/f:DI 155 [ dst ]) [0 *dst_179+0 S1 A8])
        (reg/v:QI 170 [ c ])) ns_name.c:157 -1
     (nil))
(insn 86 376 377 48 (set (reg/v/f:DI 155 [ dst ])
        (reg/v/f:DI 189 [ dst ])) ns_name.c:157 -1
     (nil))
(code_label 377 86 378 49 32 "" [2 uses])
(note 378 377 380 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 380 378 381 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 198 [ cp ])
            (reg/v/f:DI 169 [ cp ]))) ns_name.c:134 -1
     (nil))
(jump_insn 381 380 382 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 379)
            (pc))) ns_name.c:134 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 379)
(code_label 382 381 383 50 19 "" [2 uses])
(note 383 382 88 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 88 383 384 50 (set (reg/v/f:DI 156 [ dst ])
        (reg/v/f:DI 155 [ dst ])) ns_name.c:134 -1
     (nil))
(code_label 384 88 385 51 12 "" [1 uses])
(note 385 384 386 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 51 (set (reg:QI 162 [ D.9592 ])
        (mem:QI (reg/v/f:DI 198 [ cp ]) [0 *cp_157+0 S1 A8])) ns_name.c:97 -1
     (nil))
(insn 387 386 389 51 (set (reg/v:SI 163 [ n ])
        (zero_extend:SI (reg:QI 162 [ D.9592 ]))) ns_name.c:97 -1
     (nil))
(insn 389 387 390 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 163 [ n ])
            (const_int 0 [0]))) ns_name.c:97 -1
     (nil))
(jump_insn 390 389 391 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) ns_name.c:97 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 388)
(note 391 390 392 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 392 391 393 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 156 [ dst ])
            (reg/v/f:DI 245 [ dst ]))) ns_name.c:161 -1
     (nil))
(jump_insn 393 392 394 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) ns_name.c:161 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 400)
(note 394 393 395 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 53 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 156 [ dst ])
            (reg/v/f:DI 160 [ eom ]))) ns_name.c:162 -1
     (nil))
(jump_insn 396 395 397 53 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:162 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 113)
(note 397 396 398 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 398 397 399 54 (parallel [
            (set (reg/v/f:DI 191 [ dst ])
                (plus:DI (reg/v/f:DI 156 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:166 -1
     (nil))
(insn 399 398 91 54 (set (mem:QI (reg/v/f:DI 156 [ dst ]) [0 *dst_4+0 S1 A8])
        (const_int 46 [0x2e])) ns_name.c:166 -1
     (nil))
(insn 91 399 400 54 (set (reg/v/f:DI 156 [ dst ])
        (reg/v/f:DI 191 [ dst ])) ns_name.c:166 -1
     (nil))
(code_label 400 91 401 55 35 "" [1 uses])
(note 401 400 402 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 403 55 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 156 [ dst ])
            (reg/v/f:DI 160 [ eom ]))) ns_name.c:168 -1
     (nil))
(jump_insn 403 402 404 55 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:168 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 113)
(note 404 403 405 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 405 404 406 56 (set (mem:QI (reg/v/f:DI 156 [ dst ]) [0 *dst_5+0 S1 A8])
        (const_int 0 [0])) ns_name.c:172 -1
     (nil))
(insn 406 405 407 56 (parallel [
            (set (reg:DI 342 [ dn ])
                (plus:DI (reg/v/f:DI 156 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:173 -1
     (nil))
(insn 407 406 408 56 (parallel [
            (set (reg:DI 343 [ D.9595 ])
                (minus:DI (reg:DI 342 [ dn ])
                    (reg/v/f:DI 245 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:173 -1
     (nil))
(insn 408 407 409 56 (set (reg:SI 157 [ D.9589 ])
        (subreg:SI (reg:DI 343 [ D.9595 ]) 0)) ns_name.c:173 -1
     (nil))
(code_label 409 408 410 57 14 "" [2 uses])
(note 410 409 411 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 411 410 412 57 (set (reg:SI 243 [ <retval> ])
        (reg:SI 157 [ D.9589 ])) -1
     (nil))
(jump_insn 412 411 413 57 (set (pc)
        (label_ref 462)) -1
     (nil)
 -> 462)
(barrier 413 412 414)
(code_label 414 413 415 58 21 "" [1 uses])
(note 415 414 416 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 58 (parallel [
            (set (reg:DI 345 [ D.9597 ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 73 [0x49])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:805 -1
     (nil))
(insn 417 416 418 58 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg:DI 345 [ D.9597 ]))) ns_name.c:805 -1
     (nil))
(jump_insn 418 417 421 58 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 113)
            (pc))) ns_name.c:805 612 {*jcc_1}
     (int_list:REG_BR_PROB 926 (nil))
 -> 113)
(note 421 418 419 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(jump_insn 419 421 420 59 (set (pc)
        (label_ref 445)) ns_name.c:805 -1
     (nil)
 -> 445)
(barrier 420 419 426)
(code_label 426 420 427 61 31 "" [1 uses])
(note 427 426 428 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 61 (parallel [
            (set (reg:DI 346 [ D.9593 ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:137 -1
     (nil))
(insn 429 428 430 61 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 160 [ eom ])
            (reg:DI 346 [ D.9593 ]))) ns_name.c:137 -1
     (nil))
(jump_insn 430 429 434 61 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:137 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 113)
(note 434 430 432 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(jump_insn 432 434 433 62 (set (pc)
        (label_ref 431)) -1
     (nil)
 -> 431)
(barrier 433 432 435)
(code_label 435 433 436 63 30 "" [2 uses])
(note 436 435 438 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 438 436 439 63 (parallel [
            (set (reg:SI 347 [ D.9591 ])
                (plus:SI (reg:SI 175 [ D.9591 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:143 -1
     (nil))
(insn 439 438 440 63 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 347 [ D.9591 ])
            (const_int 93 [0x5d]))) ns_name.c:143 -1
     (nil))
(jump_insn 440 439 444 63 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 437)
            (pc))) ns_name.c:143 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 437)
(note 444 440 442 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 442 444 443 64 (set (pc)
        (label_ref 441)) -1
     (nil)
 -> 441)
(barrier 443 442 445)
(code_label 445 443 446 65 36 "" [1 uses])
(note 446 445 447 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 447 446 448 65 (parallel [
            (set (reg/v/f:DI 198 [ cp ])
                (plus:DI (reg/v/f:DI 198 [ cp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:808 -1
     (nil))
(insn 448 447 449 65 (set (mem:SI (reg/v/f:DI 155 [ dst ]) [0 MEM[(void *)dst_1]+0 S4 A8])
        (const_int 7887708 [0x785b5c])) ns_name.c:809 -1
     (nil))
(insn 449 448 78 65 (parallel [
            (set (reg/v/f:DI 213 [ dn ])
                (plus:DI (reg/v/f:DI 155 [ dst ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:812 -1
     (nil))
(insn 78 449 451 65 (set (reg/v:SI 201 [ b ])
        (const_int 256 [0x100])) ns_name.c:802 -1
     (nil))
(jump_insn 451 78 452 65 (set (pc)
        (label_ref 450)) ns_name.c:812 -1
     (nil)
 -> 450)
(barrier 452 451 453)
(code_label 453 452 454 66 25 "" [1 uses])
(note 454 453 456 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 456 454 457 66 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 201 [ b ])
            (const_int 4 [0x4]))) ns_name.c:819 -1
     (nil))
(jump_insn 457 456 461 66 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 482)
            (pc))) ns_name.c:819 612 {*jcc_1}
     (int_list:REG_BR_PROB 2901 (nil))
 -> 482)
(note 461 457 81 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 81 461 459 67 (set (reg/v:SI 214 [ b ])
        (reg/v:SI 201 [ b ])) ns_name.c:819 -1
     (nil))
(jump_insn 459 81 460 67 (set (pc)
        (label_ref 458)) ns_name.c:819 -1
     (nil)
 -> 458)
(barrier 460 459 462)
(code_label 462 460 465 68 11 "" [1 uses])
(note 465 462 463 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 463 465 464 68 (set (reg/i:SI 0 ax)
        (reg:SI 243 [ <retval> ])) ns_name.c:174 -1
     (nil))
(insn 464 463 0 68 (use (reg/i:SI 0 ax)) ns_name.c:174 -1
     (nil))

;; Function ns_name_pton (*__GI_ns_name_pton, funcdef_no=48, decl_uid=3516, cgraph_uid=50, symbol_order=54)

Partition 0: size 8 align 8
	end_blen

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73
Edge 12->29 redirected to 81
Edge 13->17 redirected to 82
Edge 23->29 redirected to 83
Edge 32->35 redirected to 85
Edge 35->37 redirected to 86
Purged edges from bb 90
Purged non-fallthru edges from bb 92
Purged non-fallthru edges from bb 94
Predictions for insn 466 bb 80
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 15->16 to 28 failed.
Edge 24->26 redirected to 27
Forwarding edge 25->26 to 27 failed.
Deleted label in block 26.
Edge 39->41 redirected to 42
Forwarding edge 40->41 to 42 failed.
Deleted label in block 41.
Forwarding edge 48->49 to 51 failed.
Forwarding edge 63->64 to 79 failed.
Deleted label in block 84.


try_optimize_cfg iteration 2

Forwarding edge 15->16 to 28 failed.
Forwarding edge 25->26 to 27 failed.
Forwarding edge 40->41 to 42 failed.
Forwarding edge 48->49 to 51 failed.
Forwarding edge 63->64 to 79 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 44 NOTE_INSN_DELETED)
(note 44 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 44 3 2 (set (reg/v/f:DI 219 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:193 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 220 [ dst ])
        (reg:DI 4 si [ dst ])) ns_name.c:193 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 221 [ dstsiz ])
        (reg:DI 1 dx [ dstsiz ])) ns_name.c:193 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 222)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:193 -1
     (nil))
(insn 7 6 46 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.9647+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:193 -1
     (nil))
(insn 46 7 47 2 (parallel [
            (set (reg/v/f:DI 95 [ eom ])
                (plus:DI (reg/v/f:DI 220 [ dst ])
                    (reg/v:DI 221 [ dstsiz ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:200 -1
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg/v/f:DI 92 [ bp ])
                (plus:DI (reg/v/f:DI 220 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:201 -1
     (nil))
(insn 48 47 35 2 (set (reg:QI 96 [ D.9636 ])
        (mem:QI (reg/v/f:DI 219 [ src ]) [0 *src_23(D)+0 S1 A8])) -1
     (nil))
(insn 35 48 36 2 (set (reg/v/f:DI 87 [ label ])
        (reg/v/f:DI 220 [ dst ])) ns_name.c:201 -1
     (nil))
(insn 36 35 49 2 (set (reg/v:SI 90 [ escaped ])
        (const_int 0 [0])) ns_name.c:198 -1
     (nil))
(jump_insn 49 36 50 2 (set (pc)
        (label_ref 395)) ns_name.c:203 -1
     (nil)
 -> 395)
(barrier 50 49 399)
(code_label 399 50 51 4 101 "" [1 uses])
(note 51 399 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ escaped ])
            (const_int 0 [0]))) ns_name.c:204 -1
     (nil))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 326)
            (pc))) ns_name.c:204 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 326)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ c ])
            (const_int 91 [0x5b]))) ns_name.c:205 -1
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) ns_name.c:205 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 269)
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:SI 4 si)
        (const_int 93 [0x5d])) ns_name.c:206 -1
     (nil))
(insn 59 58 60 6 (set (reg:DI 5 di)
        (reg/v/f:DI 97 [ src ])) ns_name.c:206 -1
     (nil))
(call_insn/i 60 59 61 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) ns_name.c:206 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 61 60 62 6 (set (reg/v/f:DI 137 [ cp ])
        (reg:DI 0 ax)) ns_name.c:206 -1
     (nil))
(insn 62 61 63 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 137 [ cp ])
            (const_int 0 [0]))) ns_name.c:206 -1
     (nil))
(jump_insn 63 62 262 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) ns_name.c:206 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 69)
(code_label 262 63 64 7 93 "" [1 uses])
(note 64 262 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 7 (set (reg:DI 223)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:207 -1
     (nil))
(insn 66 65 37 7 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 223)) [2 errno+0 S4 A32])
        (const_int 22 [0x16])) ns_name.c:207 -1
     (nil))
(insn 37 66 67 7 (set (reg:SI 91 [ D.9635 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:208 -1
     (nil))
(jump_insn 67 37 68 7 (set (pc)
        (label_ref 429)) ns_name.c:208 -1
     (nil)
 -> 429)
(barrier 68 67 69)
(code_label 69 68 70 8 73 "" [1 uses])
(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 8 (parallel [
            (set (reg/f:DI 138 [ D.9641 ])
                (plus:DI (reg/v/f:DI 137 [ cp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:210 -1
     (nil))
(insn 72 71 73 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 end_blen+0 S8 A64])
        (const_int 0 [0])) ns_name.c:851 -1
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg:DI 224 [ D.9637 ])
                (minus:DI (reg/f:DI 138 [ D.9641 ])
                    (reg/v/f:DI 97 [ src ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:857 -1
     (nil))
(insn 74 73 75 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 224 [ D.9637 ])
            (const_int 1 [0x1]))) ns_name.c:857 -1
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:857 -1
     (int_list:REG_BR_PROB 4289 (nil))
 -> 434)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)src_27 + 1B]+0 S1 A8])
            (const_int 120 [0x78]))) ns_name.c:861 -1
     (nil))
(jump_insn 78 77 79 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:861 -1
     (int_list:REG_BR_PROB 8392 (nil))
 -> 434)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 80 79 81 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b85d30d0870 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ns_name.c:863 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b85d30d0870 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 81 80 82 10 (set (reg/f:DI 159 [ D.9642 ])
        (reg:DI 0 ax)) ns_name.c:863 -1
     (nil))
(insn 82 81 83 10 (set (reg:QI 123 [ D.9636 ])
        (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                (const_int 2 [0x2])) [0 MEM[(const char *)src_27 + 2B]+0 S1 A8])) ns_name.c:863 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 225 [ D.9644 ])
        (sign_extend:DI (reg:QI 123 [ D.9636 ]))) ns_name.c:863 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 226 [ D.9644 ])
        (zero_extend:DI (subreg:QI (reg:DI 225 [ D.9644 ]) 0))) ns_name.c:863 -1
     (nil))
(insn 85 84 86 10 (set (reg/f:DI 227)
        (mem/f:DI (reg/f:DI 159 [ D.9642 ]) [1 *_149+0 S8 A64])) ns_name.c:863 -1
     (nil))
(insn 86 85 87 10 (set (reg:HI 229)
        (mem:HI (plus:DI (mult:DI (reg:DI 226 [ D.9644 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 227)) [3 *_155+0 S2 A16])) ns_name.c:863 -1
     (nil))
(insn 87 86 88 10 (parallel [
            (set (reg:HI 228 [ D.9645 ])
                (and:HI (reg:HI 229)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:863 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 226 [ D.9644 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 227)) [3 *_155+0 S2 A16])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 88 87 89 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 228 [ D.9645 ])
            (const_int 0 [0]))) ns_name.c:863 -1
     (nil))
(jump_insn 89 88 90 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:863 -1
     (int_list:REG_BR_PROB 6700 (nil))
 -> 434)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 11 (parallel [
            (set (reg/v/f:DI 157 [ src ])
                (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:861 -1
     (nil))
(insn 92 91 93 11 (parallel [
            (set (reg/v/f:DI 93 [ bp ])
                (plus:DI (reg/v/f:DI 92 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:866 -1
     (nil))
(insn 93 92 94 11 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 93 [ bp ]))) ns_name.c:866 -1
     (nil))
(insn 94 93 95 11 (set (reg:QI 231 [ D.9640 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(insn 95 94 96 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 231 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(jump_insn 96 95 494 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) ns_name.c:866 -1
     (int_list:REG_BR_PROB 100 (nil))
 -> 448)
(note 494 96 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 97 494 98 12 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 138 [ D.9641 ])
            (reg/v/f:DI 157 [ src ]))) ns_name.c:866 -1
     (nil))
(insn 98 97 99 12 (set (reg:QI 233 [ D.9640 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(insn 99 98 100 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 233 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(jump_insn 100 99 101 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) ns_name.c:866 -1
     (int_list:REG_BR_PROB 101 (nil))
 -> 448)
(note 101 100 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 101 9 13 (set (reg/v:SI 209 [ blen ])
        (const_int 0 [0])) ns_name.c:866 -1
     (nil))
(insn 9 8 10 13 (set (reg/v:SI 89 [ value ])
        (const_int 0 [0])) ns_name.c:866 -1
     (nil))
(insn 10 9 11 13 (set (reg/v:SI 94 [ count ])
        (const_int 0 [0])) ns_name.c:866 -1
     (nil))
(insn 11 10 12 13 (set (reg/v/f:DI 208 [ src ])
        (const_int 0 [0])) ns_name.c:866 -1
     (nil))
(insn 12 11 226 13 (set (reg/v:SI 153 [ afterslash ])
        (const_int 0 [0])) ns_name.c:866 -1
     (nil))
(code_label 226 12 102 14 90 "" [1 uses])
(note 102 226 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.9636 ])
            (const_int 47 [0x2f]))) ns_name.c:867 -1
     (nil))
(jump_insn 104 103 495 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 475)
            (pc))) ns_name.c:867 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 475)
(note 495 104 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 495 106 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.9636 ])
            (const_int 93 [0x5d]))) ns_name.c:867 -1
     (nil))
(jump_insn 106 105 496 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) ns_name.c:867 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 109)
(note 496 106 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(jump_insn 107 496 108 16 (set (pc)
        (label_ref 151)) ns_name.c:867 -1
     (nil)
 -> 151)
(barrier 108 107 109)
(code_label 109 108 110 17 79 "" [1 uses])
(note 110 109 111 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ afterslash ])
            (const_int 0 [0]))) ns_name.c:869 -1
     (nil))
(jump_insn 112 111 113 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 479)
            (pc))) ns_name.c:869 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 479)
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 208 [ src ])
            (const_int 0 [0]))) ns_name.c:870 -1
     (nil))
(jump_insn 115 114 116 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:870 -1
     (int_list:REG_BR_PROB 4673 (nil))
 -> 434)
(note 116 115 117 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 19 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:872 -1
     (nil))
(insn 118 117 119 19 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) ns_name.c:872 -1
     (nil))
(insn 119 118 120 19 (set (reg:DI 4 si)
        (reg:DI 234)) ns_name.c:872 -1
     (nil))
(insn 120 119 121 19 (set (reg:DI 5 di)
        (reg/v/f:DI 208 [ src ])) ns_name.c:872 -1
     (nil))
(call_insn 121 120 122 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b85d2dfc288 strtol>) [0 strtol S1 A8])
            (const_int 0 [0]))) ns_name.c:872 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strtol") [flags 0x41]  <function_decl 0x2b85d2dfc288 strtol>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 122 121 123 19 (set (reg:DI 167 [ D.9637 ])
        (reg:DI 0 ax)) ns_name.c:872 -1
     (nil))
(insn 123 122 124 19 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 end_blen+0 S8 A64])) ns_name.c:873 -1
     (nil))
(insn 124 123 125 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 235) [0 *_166+0 S1 A8])
            (const_int 93 [0x5d]))) ns_name.c:873 -1
     (nil))
(jump_insn 125 124 126 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:873 -1
     (int_list:REG_BR_PROB 8392 (nil))
 -> 434)
(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 476 20 (set (reg/v:SI 168 [ blen ])
        (subreg:SI (reg:DI 167 [ D.9637 ]) 0)) ns_name.c:872 -1
     (nil))
(jump_insn 476 127 477 20 (set (pc)
        (label_ref 128)) -1
     (nil)
 -> 128)
(barrier 477 476 479)
(code_label 479 477 478 21 107 "" [1 uses])
(note 478 479 13 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 13 478 128 21 (set (reg/v:SI 168 [ blen ])
        (const_int 0 [0])) ns_name.c:852 -1
     (nil))
(code_label 128 13 129 22 80 "" [1 uses])
(note 129 128 130 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ count ])
            (const_int 0 [0]))) ns_name.c:876 -1
     (nil))
(jump_insn 131 130 132 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) ns_name.c:876 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 136)
(note 132 131 133 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 23 (parallel [
            (set (reg/v/f:DI 171 [ bp ])
                (plus:DI (reg/v/f:DI 93 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:877 -1
     (nil))
(insn 134 133 135 23 (parallel [
            (set (reg:SI 236 [ D.9635 ])
                (ashift:SI (reg/v:SI 89 [ value ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:877 -1
     (nil))
(insn 135 134 14 23 (set (mem:QI (reg/v/f:DI 93 [ bp ]) [0 MEM[(unsigned char *)bp_12]+0 S1 A8])
        (subreg:QI (reg:SI 236 [ D.9635 ]) 0)) ns_name.c:877 -1
     (nil))
(insn 14 135 136 23 (set (reg/v/f:DI 93 [ bp ])
        (reg/v/f:DI 171 [ bp ])) ns_name.c:877 -1
     (nil))
(code_label 136 14 137 24 81 "" [1 uses])
(note 137 136 138 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 24 (parallel [
            (set (reg/v/f:DI 157 [ src ])
                (plus:DI (reg/v/f:DI 157 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:878 -1
     (nil))
(insn 139 138 140 24 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 138 [ D.9641 ])
            (reg/v/f:DI 157 [ src ]))) ns_name.c:913 -1
     (nil))
(insn 140 139 141 24 (set (reg:QI 238 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 141 140 142 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 238 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 142 141 497 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 211)
            (pc))) ns_name.c:913 612 {*jcc_1}
     (int_list:REG_BR_PROB 3350 (nil))
 -> 211)
(note 497 142 143 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 143 497 144 25 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 93 [ bp ]))) ns_name.c:913 -1
     (nil))
(insn 144 143 145 25 (set (reg:QI 240 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 145 144 146 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 240 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 146 145 498 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) ns_name.c:913 -1
     (int_list:REG_BR_PROB 4962 (nil))
 -> 229)
(note 498 146 211 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(code_label 211 498 148 27 88 "" [5 uses])
(note 148 211 43 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 43 148 149 27 (set (reg:SI 215 [ D.9635 ])
        (const_int 90 [0x5a])) ns_name.c:914 -1
     (nil))
(jump_insn 149 43 150 27 (set (pc)
        (label_ref 436)) ns_name.c:913 -1
     (nil)
 -> 436)
(barrier 150 149 151)
(code_label 151 150 152 28 77 "" [1 uses])
(note 152 151 153 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 153 [ afterslash ])
            (const_int 0 [0]))) ns_name.c:884 -1
     (nil))
(jump_insn 154 153 155 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) ns_name.c:884 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 172)
(note 155 154 156 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 29 (set (reg:DI 241 [ D.9644 ])
        (sign_extend:DI (reg:QI 123 [ D.9636 ]))) ns_name.c:885 -1
     (nil))
(insn 157 156 158 29 (set (reg:DI 242 [ D.9644 ])
        (zero_extend:DI (subreg:QI (reg:DI 241 [ D.9644 ]) 0))) ns_name.c:885 -1
     (nil))
(insn 158 157 159 29 (set (reg/f:DI 243)
        (mem/f:DI (reg/f:DI 159 [ D.9642 ]) [1 *_149+0 S8 A64])) ns_name.c:885 -1
     (nil))
(insn 159 158 160 29 (set (reg:HI 245)
        (mem:HI (plus:DI (mult:DI (reg:DI 242 [ D.9644 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243)) [3 *_179+0 S2 A16])) ns_name.c:885 -1
     (nil))
(insn 160 159 161 29 (parallel [
            (set (reg:HI 244 [ D.9645 ])
                (and:HI (reg:HI 245)
                    (const_int 2048 [0x800])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:885 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 242 [ D.9644 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243)) [3 *_179+0 S2 A16])
            (const_int 2048 [0x800]))
        (nil)))
(insn 161 160 162 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 244 [ D.9645 ])
            (const_int 0 [0]))) ns_name.c:885 -1
     (nil))
(jump_insn 162 161 163 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:885 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 434)
(note 163 162 164 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 208 [ src ])
            (const_int 0 [0]))) ns_name.c:887 -1
     (nil))
(jump_insn 165 164 166 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 483)
            (pc))) ns_name.c:887 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 483)
(note 166 165 167 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 123 [ D.9636 ])
            (const_int 48 [0x30]))) ns_name.c:889 -1
     (nil))
(jump_insn 168 167 171 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:889 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 434)
(note 171 168 17 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 17 171 18 32 (set (reg/v/f:DI 208 [ src ])
        (reg/v/f:DI 157 [ src ])) ns_name.c:889 -1
     (nil))
(insn 18 17 169 32 (set (reg/v:SI 153 [ afterslash ])
        (const_int 1 [0x1])) ns_name.c:889 -1
     (nil))
(jump_insn 169 18 170 32 (set (pc)
        (label_ref 198)) ns_name.c:889 -1
     (nil)
 -> 198)
(barrier 170 169 172)
(code_label 172 170 173 33 85 "" [1 uses])
(note 173 172 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 33 (set (reg:DI 246 [ D.9644 ])
        (sign_extend:DI (reg:QI 123 [ D.9636 ]))) ns_name.c:896 -1
     (nil))
(insn 175 174 176 33 (set (reg:DI 247 [ D.9644 ])
        (zero_extend:DI (subreg:QI (reg:DI 246 [ D.9644 ]) 0))) ns_name.c:896 -1
     (nil))
(insn 176 175 177 33 (set (reg/f:DI 248)
        (mem/f:DI (reg/f:DI 159 [ D.9642 ]) [1 *_149+0 S8 A64])) ns_name.c:896 -1
     (nil))
(insn 177 176 178 33 (set (reg:HI 250)
        (mem:HI (plus:DI (mult:DI (reg:DI 247 [ D.9644 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 248)) [3 *_186+0 S2 A16])) ns_name.c:896 -1
     (nil))
(insn 178 177 179 33 (parallel [
            (set (reg:HI 249 [ D.9645 ])
                (and:HI (reg:HI 250)
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:896 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 247 [ D.9644 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 248)) [3 *_186+0 S2 A16])
            (const_int 4096 [0x1000]))
        (nil)))
(insn 179 178 180 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 249 [ D.9645 ])
            (const_int 0 [0]))) ns_name.c:896 -1
     (nil))
(jump_insn 180 179 181 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:896 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 434)
(note 181 180 182 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 34 (parallel [
            (set (reg/v:SI 189 [ value ])
                (ashift:SI (reg/v:SI 89 [ value ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:898 -1
     (nil))
(insn 183 182 184 34 (set (reg/f:DI 251)
        (symbol_ref:DI ("digitvalue") [flags 0x2]  <var_decl 0x2b85d30657e0 digitvalue>)) ns_name.c:899 -1
     (nil))
(insn 184 183 185 34 (set (reg:SI 252 [ D.9635 ])
        (sign_extend:SI (reg:QI 123 [ D.9636 ]))) ns_name.c:899 -1
     (nil))
(insn 185 184 186 34 (set (reg:DI 253)
        (sign_extend:DI (reg:SI 252 [ D.9635 ]))) ns_name.c:899 -1
     (nil))
(insn 186 185 187 34 (set (reg:SI 254 [ D.9635 ])
        (sign_extend:SI (mem/u/j:QI (plus:DI (reg/f:DI 251)
                    (reg:DI 253)) [0 digitvalue S1 A8]))) ns_name.c:899 -1
     (nil))
(insn 187 186 188 34 (parallel [
            (set (reg/v:SI 89 [ value ])
                (plus:SI (reg:SI 254 [ D.9635 ])
                    (reg/v:SI 189 [ value ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:899 -1
     (nil))
(insn 188 187 189 34 (parallel [
            (set (reg/v:SI 94 [ count ])
                (plus:SI (reg/v:SI 94 [ count ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:900 -1
     (nil))
(insn 189 188 190 34 (parallel [
            (set (reg/v:SI 209 [ blen ])
                (plus:SI (reg/v:SI 209 [ blen ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:901 -1
     (nil))
(insn 190 189 191 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 209 [ blen ])
            (const_int 256 [0x100]))) ns_name.c:902 -1
     (nil))
(jump_insn 191 190 192 34 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:902 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 434)
(note 192 191 193 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 94 [ count ])
            (const_int 8 [0x8]))) ns_name.c:904 -1
     (nil))
(jump_insn 194 193 195 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) ns_name.c:904 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 198)
(note 195 194 196 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 36 (parallel [
            (set (reg/v/f:DI 193 [ bp ])
                (plus:DI (reg/v/f:DI 93 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:905 -1
     (nil))
(insn 197 196 19 36 (set (mem:QI (reg/v/f:DI 93 [ bp ]) [0 MEM[(unsigned char *)bp_12]+0 S1 A8])
        (subreg:QI (reg/v:SI 89 [ value ]) 0)) ns_name.c:905 -1
     (nil))
(insn 19 197 20 36 (set (reg/v/f:DI 93 [ bp ])
        (reg/v/f:DI 193 [ bp ])) ns_name.c:905 -1
     (nil))
(insn 20 19 472 36 (set (reg/v:SI 94 [ count ])
        (const_int 0 [0])) ns_name.c:906 -1
     (nil))
(jump_insn 472 20 473 36 (set (pc)
        (label_ref 198)) -1
     (nil)
 -> 198)
(barrier 473 472 475)
(code_label 475 473 474 37 106 "" [1 uses])
(note 474 475 15 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 15 474 480 37 (set (reg/v:SI 153 [ afterslash ])
        (const_int 1 [0x1])) ns_name.c:881 -1
     (nil))
(jump_insn 480 15 481 37 (set (pc)
        (label_ref 198)) -1
     (nil)
 -> 198)
(barrier 481 480 483)
(code_label 483 481 482 38 108 "" [1 uses])
(note 482 483 16 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 16 482 198 38 (set (reg/v:SI 153 [ afterslash ])
        (const_int 1 [0x1])) ns_name.c:887 -1
     (nil))
(code_label 198 16 199 39 78 "" [4 uses])
(note 199 198 200 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 200 199 201 39 (parallel [
            (set (reg/v/f:DI 157 [ src ])
                (plus:DI (reg/v/f:DI 157 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:866 -1
     (nil))
(insn 201 200 202 39 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 138 [ D.9641 ])
            (reg/v/f:DI 157 [ src ]))) ns_name.c:866 -1
     (nil))
(insn 202 201 203 39 (set (reg:QI 256 [ D.9640 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(insn 203 202 204 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 256 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(jump_insn 204 203 499 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 506)
            (pc))) ns_name.c:866 612 {*jcc_1}
     (int_list:REG_BR_PROB 100 (nil))
 -> 506)
(note 499 204 205 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 205 499 206 40 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 93 [ bp ]))) ns_name.c:866 -1
     (nil))
(insn 206 205 207 40 (set (reg:QI 258 [ D.9640 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(insn 207 206 208 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 258 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:866 -1
     (nil))
(jump_insn 208 207 500 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) ns_name.c:866 -1
     (int_list:REG_BR_PROB 9899 (nil))
 -> 223)
(note 500 208 506 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(code_label 506 500 210 42 111 "" [1 uses])
(note 210 506 212 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 212 210 213 42 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 138 [ D.9641 ])
            (reg/v/f:DI 157 [ src ]))) ns_name.c:913 -1
     (nil))
(insn 213 212 214 42 (set (reg:QI 260 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 214 213 215 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 260 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 215 214 501 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) ns_name.c:913 -1
     (int_list:REG_BR_PROB 3350 (nil))
 -> 211)
(note 501 215 216 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 216 501 217 43 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 93 [ bp ]))) ns_name.c:913 -1
     (nil))
(insn 217 216 218 43 (set (reg:QI 262 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 218 217 219 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 262 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 219 218 222 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) ns_name.c:913 -1
     (int_list:REG_BR_PROB 5038 (nil))
 -> 211)
(note 222 219 22 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 22 222 220 44 (set (reg/v:SI 168 [ blen ])
        (reg/v:SI 209 [ blen ])) ns_name.c:913 -1
     (nil))
(jump_insn 220 22 221 44 (set (pc)
        (label_ref 246)) ns_name.c:913 -1
     (nil)
 -> 246)
(barrier 221 220 223)
(code_label 223 221 224 45 86 "" [1 uses])
(note 224 223 225 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 227 45 (set (reg:QI 123 [ D.9636 ])
        (mem:QI (reg/v/f:DI 157 [ src ]) [0 MEM[base: src_199, offset: 0B]+0 S1 A8])) -1
     (nil))
(jump_insn 227 225 228 45 (set (pc)
        (label_ref 226)) -1
     (nil)
 -> 226)
(barrier 228 227 229)
(code_label 229 228 230 46 82 "" [1 uses])
(note 230 229 231 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 46 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 168 [ blen ])
            (const_int 0 [0]))) ns_name.c:924 -1
     (nil))
(jump_insn 232 231 233 46 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 488)
            (pc))) ns_name.c:924 612 {*jcc_1}
     (int_list:REG_BR_PROB 1821 (nil))
 -> 488)
(note 233 232 234 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 47 (parallel [
            (set (reg:SI 263 [ D.9635 ])
                (plus:SI (reg/v:SI 168 [ blen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:927 -1
     (nil))
(insn 235 234 236 47 (parallel [
            (set (reg:SI 264 [ D.9635 ])
                (and:SI (reg:SI 263 [ D.9635 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:927 -1
     (nil))
(insn 236 235 237 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 264 [ D.9635 ])
            (reg/v:SI 209 [ blen ]))) ns_name.c:927 -1
     (nil))
(jump_insn 237 236 238 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:927 -1
     (int_list:REG_BR_PROB 8392 (nil))
 -> 434)
(note 238 237 239 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 48 (parallel [
            (set (reg:SI 265 [ traillen ])
                (minus:SI (reg/v:SI 209 [ blen ])
                    (reg/v:SI 168 [ blen ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:930 -1
     (nil))
(insn 240 239 241 48 (set (reg:SI 267)
        (const_int 8 [0x8])) ns_name.c:930 -1
     (nil))
(insn 241 240 242 48 (parallel [
            (set (reg:SI 266 [ D.9635 ])
                (minus:SI (reg:SI 267)
                    (reg:SI 265 [ traillen ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:930 -1
     (nil))
(insn 242 241 243 48 (parallel [
            (set (reg:SI 268 [ D.9635 ])
                (ashift:SI (reg/v:SI 89 [ value ])
                    (subreg:QI (reg:SI 266 [ D.9635 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:930 -1
     (nil))
(insn 243 242 244 48 (set (reg:SI 269 [ D.9635 ])
        (zero_extend:SI (subreg:QI (reg:SI 268 [ D.9635 ]) 0))) ns_name.c:930 -1
     (nil))
(insn 244 243 245 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 269 [ D.9635 ])
            (const_int 0 [0]))) ns_name.c:930 -1
     (nil))
(jump_insn 245 244 484 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 434)
            (pc))) ns_name.c:930 -1
     (int_list:REG_BR_PROB 6700 (nil))
 -> 434)
(note 484 245 485 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(jump_insn 485 484 486 49 (set (pc)
        (label_ref 246)) -1
     (nil)
 -> 246)
(barrier 486 485 488)
(code_label 488 486 487 50 109 "" [1 uses])
(note 487 488 21 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 21 487 246 50 (set (reg/v:SI 168 [ blen ])
        (reg/v:SI 209 [ blen ])) ns_name.c:924 -1
     (nil))
(code_label 246 21 247 51 89 "" [2 uses])
(note 247 246 248 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 168 [ blen ])
            (const_int 256 [0x100]))) ns_name.c:935 -1
     (nil))
(jump_insn 249 248 458 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 492)
            (pc))) ns_name.c:935 612 {*jcc_1}
     (int_list:REG_BR_PROB 3238 (nil))
 -> 492)
(code_label 458 249 250 52 104 "" [1 uses])
(note 250 458 251 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 489 52 (set (reg:QI 172 [ D.9639 ])
        (subreg:QI (reg/v:SI 168 [ blen ]) 0)) -1
     (nil))
(jump_insn 489 251 490 52 (set (pc)
        (label_ref 252)) -1
     (nil)
 -> 252)
(barrier 490 489 492)
(code_label 492 490 491 53 110 "" [1 uses])
(note 491 492 24 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 24 491 252 53 (set (reg:QI 172 [ D.9639 ])
        (const_int 0 [0])) ns_name.c:935 -1
     (nil))
(code_label 252 24 253 54 91 "" [1 uses])
(note 253 252 254 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 54 (set (mem:QI (reg/v/f:DI 87 [ label ]) [0 MEM[(unsigned char *)label_46]+0 S1 A8])
        (const_int 65 [0x41])) ns_name.c:939 -1
     (nil))
(insn 255 254 256 54 (set (mem:QI (reg/v/f:DI 92 [ bp ]) [0 MEM[(unsigned char *)bp_111]+0 S1 A8])
        (reg:QI 172 [ D.9639 ])) ns_name.c:940 -1
     (nil))
(insn 256 255 257 54 (parallel [
            (set (reg/v/f:DI 92 [ bp ])
                (plus:DI (reg/v/f:DI 93 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:217 -1
     (nil))
(insn 257 256 258 54 (parallel [
            (set (reg/v/f:DI 219 [ src ])
                (plus:DI (reg/v/f:DI 157 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:218 -1
     (nil))
(insn 258 257 259 54 (set (reg/v:SI 141 [ c ])
        (sign_extend:SI (mem:QI (reg/v/f:DI 157 [ src ]) [0 *src_243+0 S1 A8]))) ns_name.c:218 -1
     (nil))
(insn 259 258 260 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 141 [ c ])
            (const_int 0 [0]))) ns_name.c:218 -1
     (nil))
(jump_insn 260 259 261 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 442)
            (pc))) ns_name.c:218 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 442)
(note 261 260 263 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 263 261 264 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 141 [ c ])
            (const_int 46 [0x2e]))) ns_name.c:220 -1
     (nil))
(jump_insn 264 263 265 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) ns_name.c:220 -1
     (int_list:REG_BR_PROB 968 (nil))
 -> 262)
(note 265 264 266 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 25 56 (set (reg:QI 96 [ D.9636 ])
        (mem:QI (plus:DI (reg/v/f:DI 157 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_243 + 1B]+0 S1 A8])) -1
     (nil))
(insn 25 266 26 56 (set (reg/v/f:DI 87 [ label ])
        (reg/v/f:DI 93 [ bp ])) ns_name.c:220 -1
     (nil))
(insn 26 25 267 56 (set (reg/v:SI 90 [ escaped ])
        (const_int 0 [0])) ns_name.c:216 -1
     (nil))
(jump_insn 267 26 268 56 (set (pc)
        (label_ref 393)) -1
     (nil)
 -> 393)
(barrier 268 267 269)
(code_label 269 268 270 57 72 "" [1 uses])
(note 270 269 271 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 57 (set (reg:SI 4 si)
        (reg/v:SI 88 [ c ])) ns_name.c:226 -1
     (nil))
(insn 272 271 273 57 (set (reg:DI 5 di)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:226 -1
     (nil))
(call_insn/i 273 272 274 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) ns_name.c:226 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 274 273 275 57 (set (reg/v/f:DI 115 [ cp ])
        (reg:DI 0 ax)) ns_name.c:226 -1
     (nil))
(insn 275 274 276 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 115 [ cp ])
            (const_int 0 [0]))) ns_name.c:226 -1
     (nil))
(jump_insn 276 275 277 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) ns_name.c:226 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 385)
(note 277 276 278 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 58 (set (reg:DI 117 [ D.9637 ])
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:227 -1
     (nil))
(insn 279 278 280 58 (parallel [
            (set (reg:DI 270 [ D.9637 ])
                (minus:DI (reg/v/f:DI 115 [ cp ])
                    (reg:DI 117 [ D.9637 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:227 -1
     (nil))
(insn 280 279 281 58 (parallel [
            (set (reg:SI 120 [ D.9638 ])
                (mult:SI (subreg:SI (reg:DI 270 [ D.9637 ]) 0)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:227 -1
     (nil))
(insn 281 280 282 58 (set (reg/v:SI 122 [ c ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)src_27 + 1B]+0 S1 A8]))) ns_name.c:228 -1
     (nil))
(insn 282 281 283 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 122 [ c ])
            (const_int 0 [0]))) ns_name.c:228 -1
     (nil))
(jump_insn 283 282 284 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:228 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 284 283 285 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 59 (set (reg:SI 4 si)
        (reg/v:SI 122 [ c ])) ns_name.c:229 -1
     (nil))
(insn 286 285 287 59 (set (reg:DI 5 di)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:229 -1
     (nil))
(call_insn/i 287 286 288 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) ns_name.c:229 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 288 287 289 59 (set (reg/v/f:DI 124 [ cp ])
        (reg:DI 0 ax)) ns_name.c:229 -1
     (nil))
(insn 289 288 290 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ cp ])
            (const_int 0 [0]))) ns_name.c:228 -1
     (nil))
(jump_insn 290 289 291 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 297)
            (pc))) ns_name.c:228 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 297)
(code_label 291 290 292 60 96 "" [15 uses])
(note 292 291 293 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 60 (set (reg:DI 271)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:230 -1
     (nil))
(insn 294 293 40 60 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 271)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:230 -1
     (nil))
(insn 40 294 295 60 (set (reg:SI 91 [ D.9635 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:231 -1
     (nil))
(jump_insn 295 40 296 60 (set (pc)
        (label_ref 429)) ns_name.c:231 -1
     (nil)
 -> 429)
(barrier 296 295 297)
(code_label 297 296 298 61 97 "" [1 uses])
(note 298 297 299 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 299 298 300 61 (parallel [
            (set (reg:DI 272 [ D.9637 ])
                (minus:DI (reg/v/f:DI 124 [ cp ])
                    (reg:DI 117 [ D.9637 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:233 -1
     (nil))
(insn 300 299 301 61 (set (reg:SI 273)
        (subreg:SI (reg:DI 272 [ D.9637 ]) 0)) ns_name.c:233 -1
     (nil))
(insn 301 300 302 61 (set (reg:SI 274)
        (reg:SI 273)) ns_name.c:233 -1
     (nil))
(insn 302 301 303 61 (parallel [
            (set (reg:SI 275)
                (ashift:SI (reg:SI 274)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:233 -1
     (nil))
(insn 303 302 304 61 (parallel [
            (set (reg:SI 276 [ D.9638 ])
                (plus:SI (reg:SI 275)
                    (reg:SI 273)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:233 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 273)
            (const_int 5 [0x5]))
        (nil)))
(insn 304 303 305 61 (parallel [
            (set (reg:SI 277)
                (ashift:SI (reg:SI 276 [ D.9638 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:233 -1
     (nil))
(insn 305 304 306 61 (set (reg:SI 276 [ D.9638 ])
        (reg:SI 277)) ns_name.c:233 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 273)
            (const_int 10 [0xa]))
        (nil)))
(insn 306 305 307 61 (parallel [
            (set (reg:SI 129 [ D.9638 ])
                (plus:SI (reg:SI 276 [ D.9638 ])
                    (reg:SI 120 [ D.9638 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:233 -1
     (nil))
(insn 307 306 308 61 (parallel [
            (set (reg/v/f:DI 97 [ src ])
                (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:234 -1
     (nil))
(insn 308 307 309 61 (set (reg/v:SI 131 [ c ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 2 [0x2])) [0 MEM[(const char *)src_27 + 2B]+0 S1 A8]))) ns_name.c:234 -1
     (nil))
(insn 309 308 310 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 131 [ c ])
            (const_int 0 [0]))) ns_name.c:234 -1
     (nil))
(jump_insn 310 309 311 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:234 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 311 310 312 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 62 (set (reg:SI 4 si)
        (reg/v:SI 131 [ c ])) ns_name.c:235 -1
     (nil))
(insn 313 312 314 62 (set (reg:DI 5 di)
        (symbol_ref:DI ("digits") [flags 0x2]  <var_decl 0x2b85d3065750 digits>)) ns_name.c:235 -1
     (nil))
(call_insn/i 314 313 315 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) ns_name.c:235 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b85d2bd5d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 315 314 316 62 (set (reg/v/f:DI 132 [ cp ])
        (reg:DI 0 ax)) ns_name.c:235 -1
     (nil))
(insn 316 315 317 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 132 [ cp ])
            (const_int 0 [0]))) ns_name.c:234 -1
     (nil))
(jump_insn 317 316 318 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:234 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 318 317 319 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 63 (parallel [
            (set (reg:DI 278 [ D.9637 ])
                (minus:DI (reg/v/f:DI 132 [ cp ])
                    (reg:DI 117 [ D.9637 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:239 -1
     (nil))
(insn 320 319 321 63 (parallel [
            (set (reg/v:SI 88 [ c ])
                (plus:SI (reg:SI 129 [ D.9638 ])
                    (subreg:SI (reg:DI 278 [ D.9637 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:239 -1
     (nil))
(insn 321 320 322 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 88 [ c ])
            (const_int 255 [0xff]))) ns_name.c:240 -1
     (nil))
(jump_insn 322 321 325 63 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:240 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 325 322 323 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 323 325 324 64 (set (pc)
        (label_ref 385)) -1
     (nil)
 -> 385)
(barrier 324 323 326)
(code_label 326 324 327 65 71 "" [1 uses])
(note 327 326 328 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ c ])
            (const_int 92 [0x5c]))) ns_name.c:247 -1
     (nil))
(jump_insn 329 328 330 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 334)
            (pc))) ns_name.c:247 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 334)
(note 330 329 331 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 27 66 (set (reg:QI 96 [ D.9636 ])
        (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_27 + 1B]+0 S1 A8])) -1
     (nil))
(insn 27 331 28 66 (set (reg/v/f:DI 219 [ src ])
        (reg/v/f:DI 97 [ src ])) ns_name.c:203 -1
     (nil))
(insn 28 27 332 66 (set (reg/v:SI 90 [ escaped ])
        (const_int 1 [0x1])) ns_name.c:248 -1
     (nil))
(jump_insn 332 28 333 66 (set (pc)
        (label_ref 393)) -1
     (nil)
 -> 393)
(barrier 333 332 334)
(code_label 334 333 335 67 98 "" [1 uses])
(note 335 334 336 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ c ])
            (const_int 46 [0x2e]))) ns_name.c:250 -1
     (nil))
(jump_insn 337 336 338 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 385)
            (pc))) ns_name.c:250 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 385)
(note 338 337 339 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 68 (set (reg:DI 98 [ D.9637 ])
        (reg/v/f:DI 92 [ bp ])) ns_name.c:251 -1
     (nil))
(insn 340 339 341 68 (parallel [
            (set (reg:DI 279 [ D.9637 ])
                (minus:DI (reg:DI 98 [ D.9637 ])
                    (reg/v/f:DI 87 [ label ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:251 -1
     (nil))
(insn 341 340 342 68 (parallel [
            (set (reg:SI 102 [ D.9638 ])
                (plus:SI (subreg:SI (reg:DI 279 [ D.9637 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:251 -1
     (nil))
(insn 342 341 343 68 (set (reg/v:SI 103 [ c ])
        (reg:SI 102 [ D.9638 ])) ns_name.c:251 -1
     (nil))
(insn 343 342 344 68 (parallel [
            (set (reg:SI 280 [ D.9635 ])
                (and:SI (reg/v:SI 103 [ c ])
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:252 -1
     (nil))
(insn 344 343 345 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 280 [ D.9635 ])
            (const_int 0 [0]))) ns_name.c:252 -1
     (nil))
(jump_insn 345 344 346 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:252 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 346 345 347 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 69 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 87 [ label ]))) ns_name.c:256 -1
     (nil))
(jump_insn 348 347 349 69 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:256 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 349 348 350 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 70 (set (mem:QI (reg/v/f:DI 87 [ label ]) [0 *label_46+0 S1 A8])
        (subreg:QI (reg:SI 102 [ D.9638 ]) 0)) ns_name.c:260 -1
     (nil))
(insn 351 350 352 70 (set (reg:QI 96 [ D.9636 ])
        (mem:QI (plus:DI (reg/v/f:DI 219 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_27 + 1B]+0 S1 A8])) ns_name.c:262 -1
     (nil))
(insn 352 351 353 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.9636 ])
            (const_int 0 [0]))) ns_name.c:262 -1
     (nil))
(jump_insn 353 352 354 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 371)
            (pc))) ns_name.c:262 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 371)
(note 354 353 355 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ c ])
            (const_int 0 [0]))) ns_name.c:263 -1
     (nil))
(jump_insn 356 355 357 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 363)
            (pc))) ns_name.c:263 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 363)
(note 357 356 358 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 72 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 92 [ bp ]))) ns_name.c:264 -1
     (nil))
(jump_insn 359 358 360 72 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:264 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 360 359 361 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 73 (set (mem:QI (reg/v/f:DI 92 [ bp ]) [0 *bp_111+0 S1 A8])
        (const_int 0 [0])) ns_name.c:268 -1
     (nil))
(insn 362 361 363 73 (parallel [
            (set (reg:DI 98 [ D.9637 ])
                (plus:DI (reg/v/f:DI 92 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 363 362 364 74 100 "" [1 uses])
(note 364 363 365 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 74 (parallel [
            (set (reg:DI 281 [ D.9637 ])
                (minus:DI (reg:DI 98 [ D.9637 ])
                    (reg/v/f:DI 220 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:270 -1
     (nil))
(insn 366 365 367 74 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 281 [ D.9637 ])
            (const_int 255 [0xff]))) ns_name.c:270 -1
     (nil))
(jump_insn 367 366 370 74 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:270 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 370 367 41 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 41 370 368 75 (set (reg:SI 91 [ D.9635 ])
        (const_int 1 [0x1])) ns_name.c:274 -1
     (nil))
(jump_insn 368 41 369 75 (set (pc)
        (label_ref 429)) -1
     (nil)
 -> 429)
(barrier 369 368 371)
(code_label 371 369 372 76 99 "" [1 uses])
(note 372 371 373 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ c ])
            (const_int 0 [0]))) ns_name.c:276 -1
     (nil))
(insn 374 373 375 76 (set (reg:QI 283 [ D.9640 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ns_name.c:276 -1
     (nil))
(insn 375 374 376 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 283 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:276 -1
     (nil))
(jump_insn 376 375 502 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:276 -1
     (int_list:REG_BR_PROB 79 (nil))
 -> 291)
(note 502 376 377 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 377 502 378 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ D.9636 ])
            (const_int 46 [0x2e]))) ns_name.c:276 -1
     (nil))
(insn 378 377 379 77 (set (reg:QI 285 [ D.9640 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ns_name.c:276 -1
     (nil))
(insn 379 378 380 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 285 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:276 -1
     (nil))
(jump_insn 380 379 381 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:276 -1
     (int_list:REG_BR_PROB 80 (nil))
 -> 291)
(note 381 380 382 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 32 78 (parallel [
            (set (reg/v/f:DI 106 [ bp ])
                (plus:DI (reg/v/f:DI 92 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:280 -1
     (nil))
(insn 32 382 33 78 (set (reg/v/f:DI 87 [ label ])
        (reg/v/f:DI 92 [ bp ])) ns_name.c:281 -1
     (nil))
(insn 33 32 34 78 (set (reg/v/f:DI 92 [ bp ])
        (reg/v/f:DI 106 [ bp ])) ns_name.c:280 -1
     (nil))
(insn 34 33 383 78 (set (reg/v/f:DI 219 [ src ])
        (reg/v/f:DI 97 [ src ])) ns_name.c:203 -1
     (nil))
(jump_insn 383 34 384 78 (set (pc)
        (label_ref 393)) ns_name.c:281 -1
     (nil)
 -> 393)
(barrier 384 383 385)
(code_label 385 384 386 79 95 "" [3 uses])
(note 386 385 387 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 388 79 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 92 [ bp ]))) ns_name.c:283 -1
     (nil))
(jump_insn 388 387 389 79 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:283 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 291)
(note 389 388 390 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 80 (parallel [
            (set (reg/v/f:DI 113 [ bp ])
                (plus:DI (reg/v/f:DI 92 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:287 -1
     (nil))
(insn 391 390 392 80 (set (mem:QI (reg/v/f:DI 92 [ bp ]) [0 *bp_111+0 S1 A8])
        (subreg:QI (reg/v:SI 88 [ c ]) 0)) ns_name.c:287 -1
     (nil))
(insn 392 391 29 80 (set (reg:QI 96 [ D.9636 ])
        (mem:QI (reg/v/f:DI 97 [ src ]) [0 *src_141+0 S1 A8])) -1
     (nil))
(insn 29 392 30 80 (set (reg/v/f:DI 92 [ bp ])
        (reg/v/f:DI 113 [ bp ])) ns_name.c:287 -1
     (nil))
(insn 30 29 31 80 (set (reg/v/f:DI 219 [ src ])
        (reg/v/f:DI 97 [ src ])) ns_name.c:287 -1
     (nil))
(insn 31 30 393 80 (set (reg/v:SI 90 [ escaped ])
        (const_int 0 [0])) ns_name.c:287 -1
     (nil))
(code_label 393 31 394 81 94 "" [3 uses])
(note 394 393 395 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(code_label 395 394 396 82 70 "" [1 uses])
(note 396 395 397 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 82 (parallel [
            (set (reg/v/f:DI 97 [ src ])
                (plus:DI (reg/v/f:DI 219 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:203 -1
     (nil))
(insn 398 397 400 82 (set (reg/v:SI 88 [ c ])
        (sign_extend:SI (reg:QI 96 [ D.9636 ]))) ns_name.c:203 -1
     (nil))
(insn 400 398 401 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ c ])
            (const_int 0 [0]))) ns_name.c:203 -1
     (nil))
(jump_insn 401 400 402 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 399)
            (pc))) ns_name.c:203 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 399)
(note 402 401 403 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 83 (set (reg:DI 142 [ D.9637 ])
        (reg/v/f:DI 92 [ bp ])) ns_name.c:289 -1
     (nil))
(insn 404 403 405 83 (parallel [
            (set (reg:DI 286 [ D.9637 ])
                (minus:DI (reg:DI 142 [ D.9637 ])
                    (reg/v/f:DI 87 [ label ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:289 -1
     (nil))
(insn 405 404 406 83 (parallel [
            (set (reg:SI 146 [ D.9638 ])
                (plus:SI (subreg:SI (reg:DI 286 [ D.9637 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:289 -1
     (nil))
(insn 406 405 407 83 (set (reg/v:SI 147 [ c ])
        (reg:SI 146 [ D.9638 ])) ns_name.c:289 -1
     (nil))
(insn 407 406 408 83 (parallel [
            (set (reg:SI 287 [ D.9635 ])
                (and:SI (reg/v:SI 147 [ c ])
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:290 -1
     (nil))
(insn 408 407 409 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 287 [ D.9635 ])
            (const_int 0 [0]))) ns_name.c:290 -1
     (nil))
(jump_insn 409 408 411 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:290 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 411 409 410 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(note 410 411 412 84 ("done") NOTE_INSN_DELETED_LABEL 102)
(insn 412 410 413 84 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 87 [ label ]))) ns_name.c:295 -1
     (nil))
(jump_insn 413 412 414 84 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:295 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 414 413 415 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 415 414 416 85 (set (mem:QI (reg/v/f:DI 87 [ label ]) [0 *label_46+0 S1 A8])
        (subreg:QI (reg:SI 146 [ D.9638 ]) 0)) ns_name.c:299 -1
     (nil))
(insn 416 415 417 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 147 [ c ])
            (const_int 0 [0]))) ns_name.c:300 -1
     (nil))
(jump_insn 417 416 418 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 424)
            (pc))) ns_name.c:300 -1
     (int_list:REG_BR_PROB 4325 (nil))
 -> 424)
(note 418 417 419 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 86 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 92 [ bp ]))) ns_name.c:301 -1
     (nil))
(jump_insn 420 419 421 86 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:301 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 421 420 422 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 423 87 (set (mem:QI (reg/v/f:DI 92 [ bp ]) [0 *bp_111+0 S1 A8])
        (const_int 0 [0])) ns_name.c:305 -1
     (nil))
(insn 423 422 424 87 (parallel [
            (set (reg:DI 142 [ D.9637 ])
                (plus:DI (reg/v/f:DI 92 [ bp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 424 423 425 88 103 "" [2 uses])
(note 425 424 426 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 88 (parallel [
            (set (reg:DI 288 [ D.9637 ])
                (minus:DI (reg:DI 142 [ D.9637 ])
                    (reg/v/f:DI 220 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:307 -1
     (nil))
(insn 427 426 428 88 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 288 [ D.9637 ])
            (const_int 255 [0xff]))) ns_name.c:307 -1
     (nil))
(jump_insn 428 427 493 88 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_name.c:307 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 291)
(note 493 428 39 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 39 493 429 89 (set (reg:SI 91 [ D.9635 ])
        (const_int 0 [0])) ns_name.c:311 -1
     (nil))
(code_label 429 39 430 90 74 "" [4 uses])
(note 430 429 431 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 90 (set (reg:SI 218 [ <retval> ])
        (reg:SI 91 [ D.9635 ])) -1
     (nil))
(jump_insn 432 431 433 90 (set (pc)
        (label_ref 462)) -1
     (nil)
 -> 462)
(barrier 433 432 434)
(code_label 434 433 435 91 75 "" [11 uses])
(note 435 434 42 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 42 435 436 91 (set (reg:SI 215 [ D.9635 ])
        (const_int 22 [0x16])) ns_name.c:858 -1
     (nil))
(code_label 436 42 437 92 84 "" [1 uses])
(note 437 436 438 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 92 (set (reg:DI 290)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:213 -1
     (nil))
(insn 439 438 38 92 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 290)) [2 errno+0 S4 A32])
        (reg:SI 215 [ D.9635 ])) ns_name.c:213 -1
     (nil))
(insn 38 439 440 92 (set (reg:SI 91 [ D.9635 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:214 -1
     (nil))
(jump_insn 440 38 441 92 (set (pc)
        (label_ref 429)) ns_name.c:214 -1
     (nil)
 -> 429)
(barrier 441 440 442)
(code_label 442 441 443 93 92 "" [1 uses])
(note 443 442 444 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 93 (set (mem:QI (reg/v/f:DI 93 [ bp ]) [0 *bp_261+0 S1 A8])
        (const_int 0 [0])) ns_name.c:299 -1
     (nil))
(insn 445 444 446 93 (set (reg:DI 142 [ D.9637 ])
        (reg/v/f:DI 92 [ bp ])) -1
     (nil))
(jump_insn 446 445 447 93 (set (pc)
        (label_ref 424)) -1
     (nil)
 -> 424)
(barrier 447 446 448)
(code_label 448 447 449 94 76 "" [2 uses])
(note 449 448 450 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 94 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 95 [ eom ])
            (reg/v/f:DI 93 [ bp ]))) ns_name.c:913 -1
     (nil))
(insn 451 450 452 94 (set (reg:QI 292 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 452 451 453 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 292 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 453 452 503 94 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) ns_name.c:913 -1
     (int_list:REG_BR_PROB 3350 (nil))
 -> 211)
(note 503 453 454 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 454 503 455 95 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 138 [ D.9641 ])
            (reg/v/f:DI 157 [ src ]))) ns_name.c:913 -1
     (nil))
(insn 455 454 456 95 (set (reg:QI 294 [ D.9640 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(insn 456 455 457 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 294 [ D.9640 ])
            (const_int 0 [0]))) ns_name.c:913 -1
     (nil))
(jump_insn 457 456 461 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) ns_name.c:913 -1
     (int_list:REG_BR_PROB 5038 (nil))
 -> 211)
(note 461 457 23 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 23 461 459 96 (set (reg/v:SI 168 [ blen ])
        (const_int 0 [0])) ns_name.c:852 -1
     (nil))
(jump_insn 459 23 460 96 (set (pc)
        (label_ref 458)) ns_name.c:913 -1
     (nil)
 -> 458)
(barrier 460 459 462)
(code_label 462 460 471 97 69 "" [1 uses])
(note 471 462 463 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 463 471 464 97 (set (reg/i:SI 0 ax)
        (reg:SI 218 [ <retval> ])) ns_name.c:312 -1
     (nil))
(insn 464 463 465 97 (set (reg/f:DI 295)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:312 -1
     (nil))
(insn 465 464 466 97 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.9647+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ns_name.c:312 -1
     (nil))
(jump_insn 466 465 504 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) ns_name.c:312 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 469)
(note 504 466 467 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(call_insn 467 504 468 98 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ns_name.c:312 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 468 467 469)
(code_label 469 468 505 99 105 "" [1 uses])
(note 505 469 470 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 470 505 0 99 (use (reg/i:SI 0 ax)) ns_name.c:312 -1
     (nil))

;; Function ns_name_ntol (ns_name_ntol, funcdef_no=49, decl_uid=3508, cgraph_uid=52, symbol_order=56)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 8->15 redirected to 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 122.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 21 0 31 NOTE_INSN_DELETED)
(note 31 21 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 22 31 23 2 (set (reg/v/f:DI 149 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:327 -1
     (nil))
(insn 23 22 24 2 (set (reg/v/f:DI 150 [ dst ])
        (reg:DI 4 si [ dst ])) ns_name.c:327 -1
     (nil))
(insn 24 23 25 2 (set (reg/v:DI 151 [ dstsiz ])
        (reg:DI 1 dx [ dstsiz ])) ns_name.c:327 -1
     (nil))
(note 25 24 33 2 NOTE_INSN_FUNCTION_BEG)
(insn 33 25 34 2 (parallel [
            (set (reg/v/f:DI 111 [ eom ])
                (plus:DI (reg/v/f:DI 150 [ dst ])
                    (reg/v:DI 151 [ dstsiz ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:336 -1
     (nil))
(insn 34 33 35 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 150 [ dst ])
            (reg/v/f:DI 111 [ eom ]))) ns_name.c:338 -1
     (nil))
(jump_insn 35 34 36 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ns_name.c:338 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 39)
(note 36 35 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 36 37 4 (set (reg/v/f:DI 108 [ dst ])
        (reg/v/f:DI 150 [ dst ])) -1
     (nil))
(jump_insn 37 26 38 4 (set (pc)
        (label_ref 107)) -1
     (nil)
 -> 107)
(barrier 38 37 39)
(code_label 39 38 40 5 169 "" [4 uses])
(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 5 (set (reg:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:339 -1
     (nil))
(insn 42 41 30 5 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 152)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:339 -1
     (nil))
(insn 30 42 43 5 (set (reg:SI 110 [ D.9664 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:340 -1
     (nil))
(jump_insn 43 30 44 5 (set (pc)
        (label_ref 119)) ns_name.c:340 -1
     (nil)
 -> 119)
(barrier 44 43 111)
(code_label 111 44 45 6 176 "" [1 uses])
(note 45 111 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (parallel [
            (set (reg:QI 153 [ D.9666 ])
                (and:QI (reg:QI 114 [ D.9666 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:343 -1
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ D.9666 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:343 -1
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ns_name.c:343 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 39)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (parallel [
            (set (reg/v/f:DI 115 [ dst ])
                (plus:DI (reg/v/f:DI 108 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:348 -1
     (nil))
(insn 51 50 52 7 (set (mem:QI (reg/v/f:DI 108 [ dst ]) [0 *dst_5+0 S1 A8])
        (reg:QI 114 [ D.9666 ])) ns_name.c:348 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 5 di)
        (reg/v/f:DI 149 [ src ])) ns_name.c:349 -1
     (nil))
(call_insn/i 53 52 54 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:349 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 7 (set (reg/v:SI 116 [ l ])
        (reg:SI 0 ax)) ns_name.c:349 -1
     (nil))
(insn 55 54 56 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 116 [ l ])
            (const_int 0 [0]))) ns_name.c:349 -1
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ns_name.c:349 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 39)
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg:DI 154 [ D.9667 ])
        (sign_extend:DI (reg/v:SI 116 [ l ]))) ns_name.c:353 -1
     (nil))
(insn 59 58 60 8 (parallel [
            (set (reg:DI 155 [ D.9668 ])
                (plus:DI (reg/v/f:DI 115 [ dst ])
                    (reg:DI 154 [ D.9667 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:353 -1
     (nil))
(insn 60 59 61 8 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 111 [ eom ])
            (reg:DI 155 [ D.9668 ]))) ns_name.c:353 -1
     (nil))
(jump_insn 61 60 62 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) ns_name.c:353 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 39)
(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ l ])
            (const_int 0 [0]))) ns_name.c:357 -1
     (nil))
(jump_insn 64 63 65 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) ns_name.c:357 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 131)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 66 65 67 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b85d30d0870 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b85d30d0870 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 67 66 68 10 (set (reg/f:DI 107 [ D.9663 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 68 67 69 10 (parallel [
            (set (reg:DI 109 [ ivtmp.151 ])
                (plus:DI (reg/v/f:DI 108 [ dst ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:SI 156 [ D.9673 ])
                (plus:SI (reg/v:SI 116 [ l ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 70 69 71 10 (set (reg:DI 157 [ D.9667 ])
        (zero_extend:DI (reg:SI 156 [ D.9673 ]))) -1
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:DI 158 [ D.9667 ])
                (plus:DI (reg:DI 157 [ D.9667 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 72 71 27 10 (parallel [
            (set (reg/f:DI 147 [ D.9675 ])
                (plus:DI (reg/v/f:DI 149 [ src ])
                    (reg:DI 158 [ D.9667 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 27 72 96 10 (set (reg/v/f:DI 119 [ src ])
        (reg/v/f:DI 113 [ src ])) ns_name.c:357 -1
     (nil))
(code_label 96 27 73 11 175 "" [1 uses])
(note 73 96 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (parallel [
            (set (reg/v/f:DI 119 [ src ])
                (plus:DI (reg/v/f:DI 119 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:358 -1
     (nil))
(insn 75 74 76 11 (set (reg/v:QI 120 [ c ])
        (mem:QI (plus:DI (reg/v/f:DI 119 [ src ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: src_32, offset: -1B]+0 S1 A8])) ns_name.c:358 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 123 [ D.9670 ])
        (zero_extend:DI (reg/v:QI 120 [ c ]))) ns_name.c:359 -1
     (nil))
(insn 77 76 78 11 (set (reg/f:DI 159)
        (mem/f:DI (reg/f:DI 107 [ D.9663 ]) [1 *_1+0 S8 A64])) ns_name.c:359 -1
     (nil))
(insn 78 77 79 11 (set (reg:HI 161)
        (mem:HI (plus:DI (mult:DI (reg:DI 123 [ D.9670 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 159)) [3 *_38+0 S2 A16])) ns_name.c:359 -1
     (nil))
(insn 79 78 80 11 (parallel [
            (set (reg:HI 160 [ D.9665 ])
                (and:HI (reg:HI 161)
                    (const_int 256 [0x100])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:359 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 123 [ D.9670 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 159)) [3 *_38+0 S2 A16])
            (const_int 256 [0x100]))
        (nil)))
(insn 80 79 81 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 160 [ D.9665 ])
            (const_int 0 [0]))) ns_name.c:359 -1
     (nil))
(jump_insn 81 80 82 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) ns_name.c:359 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 90)
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 83 82 84 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_tolower_loc") [flags 0x41]  <function_decl 0x2b85d30d0948 __ctype_tolower_loc>) [0 __ctype_tolower_loc S1 A8])
            (const_int 0 [0]))) ns_name.c:360 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_tolower_loc") [flags 0x41]  <function_decl 0x2b85d30d0948 __ctype_tolower_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 84 83 85 12 (set (reg/f:DI 129 [ D.9671 ])
        (reg:DI 0 ax)) ns_name.c:360 -1
     (nil))
(insn 85 84 86 12 (set (reg/f:DI 162)
        (mem/f:DI (reg/f:DI 129 [ D.9671 ]) [1 *_42+0 S8 A64])) ns_name.c:360 -1
     (nil))
(insn 86 85 87 12 (set (reg:SI 163)
        (mem:SI (plus:DI (mult:DI (reg:DI 123 [ D.9670 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 162)) [2 *_45+0 S4 A32])) ns_name.c:360 -1
     (nil))
(insn 87 86 88 12 (set (mem:QI (plus:DI (reg:DI 109 [ ivtmp.151 ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: dst_41, offset: -1B]+0 S1 A8])
        (subreg:QI (reg:SI 163) 0)) ns_name.c:360 -1
     (nil))
(jump_insn 88 87 89 12 (set (pc)
        (label_ref 93)) -1
     (nil)
 -> 93)
(barrier 89 88 90)
(code_label 90 89 91 13 173 "" [1 uses])
(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 13 (set (mem:QI (plus:DI (reg:DI 109 [ ivtmp.151 ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: dst_49, offset: -1B]+0 S1 A8])
        (reg/v:QI 120 [ c ])) ns_name.c:362 -1
     (nil))
(code_label 93 92 94 14 174 "" [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 97 14 (parallel [
            (set (reg:DI 109 [ ivtmp.151 ])
                (plus:DI (reg:DI 109 [ ivtmp.151 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 97 95 98 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 119 [ src ])
            (reg/f:DI 147 [ D.9675 ]))) ns_name.c:357 -1
     (nil))
(jump_insn 98 97 99 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) ns_name.c:357 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 96)
(note 99 98 100 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 15 (parallel [
            (set (reg:SI 164 [ D.9664 ])
                (plus:SI (reg/v:SI 116 [ l ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 101 100 102 15 (set (reg:DI 165 [ D.9667 ])
        (sign_extend:DI (reg:SI 164 [ D.9664 ]))) -1
     (nil))
(insn 102 101 103 15 (parallel [
            (set (reg:DI 145 [ D.9667 ])
                (plus:DI (reg:DI 165 [ D.9667 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 103 102 104 15 (parallel [
            (set (reg/v/f:DI 108 [ dst ])
                (plus:DI (reg/v/f:DI 115 [ dst ])
                    (reg:DI 145 [ D.9667 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 104 103 128 15 (parallel [
            (set (reg/v/f:DI 149 [ src ])
                (plus:DI (reg/v/f:DI 113 [ src ])
                    (reg:DI 145 [ D.9667 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 128 104 129 15 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 129 128 131)
(code_label 131 129 130 16 177 "" [1 uses])
(note 130 131 28 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 28 130 29 16 (set (reg/v/f:DI 108 [ dst ])
        (reg/v/f:DI 115 [ dst ])) ns_name.c:357 -1
     (nil))
(insn 29 28 105 16 (set (reg/v/f:DI 149 [ src ])
        (reg/v/f:DI 113 [ src ])) ns_name.c:357 -1
     (nil))
(code_label 105 29 106 17 172 "" [1 uses])
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(code_label 107 106 108 18 170 "" [1 uses])
(note 108 107 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 18 (parallel [
            (set (reg/v/f:DI 113 [ src ])
                (plus:DI (reg/v/f:DI 149 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:342 -1
     (nil))
(insn 110 109 112 18 (set (reg:QI 114 [ D.9666 ])
        (mem:QI (reg/v/f:DI 149 [ src ]) [0 *src_2+0 S1 A8])) ns_name.c:342 -1
     (nil))
(insn 112 110 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 114 [ D.9666 ])
            (const_int 0 [0]))) ns_name.c:342 -1
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) ns_name.c:342 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 111)
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (mem:QI (reg/v/f:DI 108 [ dst ]) [0 *dst_5+0 S1 A8])
        (const_int 0 [0])) ns_name.c:365 -1
     (nil))
(insn 116 115 117 19 (parallel [
            (set (reg:DI 166 [ dn ])
                (plus:DI (reg/v/f:DI 108 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:366 -1
     (nil))
(insn 117 116 118 19 (parallel [
            (set (reg:DI 167 [ D.9674 ])
                (minus:DI (reg:DI 166 [ dn ])
                    (reg/v/f:DI 150 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:366 -1
     (nil))
(insn 118 117 119 19 (set (reg:SI 110 [ D.9664 ])
        (subreg:SI (reg:DI 167 [ D.9674 ]) 0)) ns_name.c:366 -1
     (nil))
(code_label 119 118 120 20 171 "" [1 uses])
(note 120 119 121 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 125 20 (set (reg:SI 148 [ <retval> ])
        (reg:SI 110 [ D.9664 ])) -1
     (nil))
(insn 125 121 126 20 (set (reg/i:SI 0 ax)
        (reg:SI 148 [ <retval> ])) ns_name.c:367 -1
     (nil))
(insn 126 125 0 20 (use (reg/i:SI 0 ax)) ns_name.c:367 -1
     (nil))

;; Function ns_name_unpack (*__GI_ns_name_unpack, funcdef_no=50, decl_uid=3522, cgraph_uid=53, symbol_order=57)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20
Edge 18->20 redirected to 24
Purged edges from bb 28


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 22 failed.
Forwarding edge 20->21 to 23 failed.
Removing jump 140.
Merging block 29 into block 28...
Merged blocks 28 and 29.
Merged 28 and 29 without moving.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 22 failed.
Forwarding edge 20->21 to 23 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 15 NOTE_INSN_DELETED)
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 15 3 2 (set (reg/v/f:DI 128 [ msg ])
        (reg:DI 5 di [ msg ])) ns_name.c:378 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 129 [ eom ])
        (reg:DI 4 si [ eom ])) ns_name.c:378 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 130 [ src ])
        (reg:DI 1 dx [ src ])) ns_name.c:378 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 131 [ dst ])
        (reg:DI 2 cx [ dst ])) ns_name.c:378 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 132 [ dstsiz ])
        (reg:DI 37 r8 [ dstsiz ])) ns_name.c:378 -1
     (nil))
(note 7 6 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 7 18 2 (parallel [
            (set (reg/v/f:DI 93 [ dstlim ])
                (plus:DI (reg/v/f:DI 131 [ dst ])
                    (reg/v:DI 132 [ dstsiz ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:387 -1
     (nil))
(insn 18 17 19 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 130 [ src ])
            (reg/v/f:DI 128 [ msg ]))) ns_name.c:388 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 134 [ D.9680 ])
        (ltu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:388 -1
     (nil))
(insn 20 19 21 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.9680 ])
            (const_int 0 [0]))) ns_name.c:388 -1
     (nil))
(jump_insn 21 20 150 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:388 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 150 21 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 150 23 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 130 [ src ])
            (reg/v/f:DI 129 [ eom ]))) ns_name.c:388 -1
     (nil))
(insn 23 22 24 4 (set (reg:QI 136 [ D.9680 ])
        (geu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:388 -1
     (nil))
(insn 24 23 25 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ D.9680 ])
            (const_int 0 [0]))) ns_name.c:388 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:388 -1
     (int_list:REG_BR_PROB 204 (nil))
 -> 29)
(note 26 25 8 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 8 26 9 5 (set (reg/v/f:DI 87 [ src ])
        (reg/v/f:DI 130 [ src ])) -1
     (nil))
(insn 9 8 10 5 (set (reg/v:SI 89 [ checked ])
        (const_int 0 [0])) -1
     (nil))
(insn 10 9 27 5 (set (reg/v:SI 88 [ len ])
        (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(jump_insn 27 10 28 5 (set (pc)
        (label_ref 123)) -1
     (nil)
 -> 123)
(barrier 28 27 29)
(code_label 29 28 30 6 187 "" [9 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 137)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:389 -1
     (nil))
(insn 32 31 11 6 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 137)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:389 -1
     (nil))
(insn 11 32 33 6 (set (reg:SI 90 [ D.9678 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:390 -1
     (nil))
(jump_insn 33 11 34 6 (set (pc)
        (label_ref 137)) ns_name.c:390 -1
     (nil)
 -> 137)
(barrier 34 33 127)
(code_label 127 34 35 7 195 "" [1 uses])
(note 35 127 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (reg:QI 138 [ D.9679 ])
                (and:QI (reg:QI 98 [ D.9679 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:395 -1
     (nil))
(insn 37 36 38 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.9679 ])
            (const_int 64 [0x40]))) ns_name.c:395 -1
     (nil))
(jump_insn 38 37 151 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ns_name.c:395 -1
     (int_list:REG_BR_PROB 1666 (nil))
 -> 45)
(note 151 38 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 151 40 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.9679 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:395 -1
     (nil))
(jump_insn 40 39 152 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) ns_name.c:395 -1
     (int_list:REG_BR_PROB 4000 (nil))
 -> 79)
(note 152 40 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 152 42 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 138 [ D.9679 ])
            (const_int 0 [0]))) ns_name.c:395 -1
     (nil))
(jump_insn 42 41 153 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ns_name.c:395 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 45)
(note 153 42 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 43 153 44 10 (set (pc)
        (label_ref 115)) ns_name.c:395 -1
     (nil)
 -> 115)
(barrier 44 43 45)
(code_label 45 44 46 11 191 "" [2 uses])
(note 46 45 47 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 11 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ src ])) ns_name.c:399 -1
     (nil))
(call_insn/i 48 47 49 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:399 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 11 (set (reg/v:SI 117 [ l ])
        (reg:SI 0 ax)) ns_name.c:399 -1
     (nil))
(insn 50 49 51 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 117 [ l ])
            (const_int 0 [0]))) ns_name.c:399 -1
     (nil))
(jump_insn 51 50 52 11 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:399 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 52 51 53 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 12 (set (reg:DI 118 [ D.9683 ])
        (sign_extend:DI (reg/v:SI 117 [ l ]))) ns_name.c:403 -1
     (nil))
(insn 54 53 55 12 (parallel [
            (set (reg:DI 139 [ D.9683 ])
                (plus:DI (reg:DI 118 [ D.9683 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:403 -1
     (nil))
(insn 55 54 56 12 (parallel [
            (set (reg:DI 140 [ D.9684 ])
                (plus:DI (reg/v/f:DI 131 [ dst ])
                    (reg:DI 139 [ D.9683 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:403 -1
     (nil))
(insn 56 55 57 12 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 93 [ dstlim ])
            (reg:DI 140 [ D.9684 ]))) ns_name.c:403 -1
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:403 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 13 (parallel [
            (set (reg/v/f:DI 87 [ src ])
                (plus:DI (reg/v/f:DI 97 [ srcp ])
                    (reg:DI 118 [ D.9683 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:403 -1
     (nil))
(insn 60 59 61 13 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 129 [ eom ])
            (reg/v/f:DI 87 [ src ]))) ns_name.c:403 -1
     (nil))
(jump_insn 61 60 62 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:403 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 14 (parallel [
            (set (reg:SI 141 [ D.9678 ])
                (plus:SI (reg/v:SI 117 [ l ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:407 -1
     (nil))
(insn 64 63 65 14 (parallel [
            (set (reg/v:SI 89 [ checked ])
                (plus:SI (reg/v:SI 89 [ checked ])
                    (reg:SI 141 [ D.9678 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:407 -1
     (nil))
(insn 65 64 66 14 (parallel [
            (set (reg/v/f:DI 122 [ dstp ])
                (plus:DI (reg/v/f:DI 131 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:408 -1
     (nil))
(insn 66 65 67 14 (set (mem:QI (reg/v/f:DI 131 [ dst ]) [0 *dst_2+0 S1 A8])
        (reg:QI 98 [ D.9679 ])) ns_name.c:408 -1
     (nil))
(insn 67 66 68 14 (set (reg:DI 142)
        (reg/v/f:DI 122 [ dstp ])) ns_name.c:409 -1
     (nil))
(insn 68 67 69 14 (set (reg:DI 143)
        (reg/v/f:DI 97 [ srcp ])) ns_name.c:409 -1
     (nil))
(insn 69 68 70 14 (set (reg:DI 144)
        (reg:DI 118 [ D.9683 ])) ns_name.c:409 -1
     (nil))
(insn 70 69 71 14 (set (reg:DI 1 dx)
        (reg:DI 144)) ns_name.c:409 -1
     (nil))
(insn 71 70 72 14 (set (reg:DI 4 si)
        (reg:DI 143)) ns_name.c:409 -1
     (nil))
(insn 72 71 73 14 (set (reg:DI 5 di)
        (reg:DI 142)) ns_name.c:409 -1
     (nil))
(call_insn 73 72 74 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b85d314d360 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) ns_name.c:409 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b85d314d360 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 74 73 75 14 (set (reg:DI 145)
        (reg:DI 0 ax)) ns_name.c:409 -1
     (nil))
(insn 75 74 76 14 (set (reg:DI 146)
        (reg:DI 145)) ns_name.c:409 -1
     (nil))
(insn 76 75 77 14 (parallel [
            (set (reg/v/f:DI 131 [ dst ])
                (plus:DI (reg/v/f:DI 122 [ dstp ])
                    (reg:DI 118 [ D.9683 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:410 -1
     (nil))
(jump_insn 77 76 78 14 (set (pc)
        (label_ref 121)) ns_name.c:412 -1
     (nil)
 -> 121)
(barrier 78 77 79)
(code_label 79 78 80 15 192 "" [1 uses])
(note 80 79 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 15 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 129 [ eom ])
            (reg/v/f:DI 97 [ srcp ]))) ns_name.c:415 -1
     (nil))
(jump_insn 82 81 83 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:415 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 83 82 84 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 16 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 88 [ len ])
            (const_int 0 [0]))) ns_name.c:419 -1
     (nil))
(jump_insn 85 84 86 16 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) ns_name.c:419 -1
     (int_list:REG_BR_PROB 7300 (nil))
 -> 89)
(note 86 85 87 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 17 (parallel [
            (set (reg:DI 147 [ D.9681 ])
                (minus:DI (reg/v/f:DI 97 [ srcp ])
                    (reg/v/f:DI 130 [ src ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:420 -1
     (nil))
(insn 88 87 89 17 (parallel [
            (set (reg/v:SI 88 [ len ])
                (plus:SI (subreg:SI (reg:DI 147 [ D.9681 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:420 -1
     (nil))
(code_label 89 88 90 18 194 "" [1 uses])
(note 90 89 91 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 18 (parallel [
            (set (reg:QI 148 [ D.9679 ])
                (and:QI (reg:QI 98 [ D.9679 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:421 -1
     (nil))
(insn 92 91 93 18 (set (reg:SI 149 [ D.9678 ])
        (zero_extend:SI (reg:QI 148 [ D.9679 ]))) ns_name.c:421 -1
     (nil))
(insn 93 92 94 18 (parallel [
            (set (reg:SI 150 [ D.9678 ])
                (ashift:SI (reg:SI 149 [ D.9678 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:421 -1
     (nil))
(insn 94 93 95 18 (set (reg:SI 151 [ D.9678 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 87 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const u_char *)src_1 + 1B]+0 S1 A8]))) ns_name.c:421 -1
     (nil))
(insn 95 94 96 18 (parallel [
            (set (reg:SI 152 [ D.9678 ])
                (ior:SI (reg:SI 150 [ D.9678 ])
                    (reg:SI 151 [ D.9678 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:421 -1
     (nil))
(insn 96 95 97 18 (set (reg:DI 109 [ D.9683 ])
        (sign_extend:DI (reg:SI 152 [ D.9678 ]))) ns_name.c:421 -1
     (nil))
(insn 97 96 98 18 (parallel [
            (set (reg/v/f:DI 87 [ src ])
                (plus:DI (reg/v/f:DI 128 [ msg ])
                    (reg:DI 109 [ D.9683 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:421 -1
     (nil))
(insn 98 97 99 18 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 128 [ msg ])
            (reg/v/f:DI 87 [ src ]))) ns_name.c:422 -1
     (nil))
(insn 99 98 100 18 (set (reg:QI 154 [ D.9680 ])
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:422 -1
     (nil))
(insn 100 99 101 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.9680 ])
            (const_int 0 [0]))) ns_name.c:422 -1
     (nil))
(jump_insn 101 100 154 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:422 -1
     (int_list:REG_BR_PROB 100 (nil))
 -> 29)
(note 154 101 102 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 102 154 103 19 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 129 [ eom ])
            (reg/v/f:DI 87 [ src ]))) ns_name.c:422 -1
     (nil))
(insn 103 102 104 19 (set (reg:QI 156 [ D.9680 ])
        (leu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_name.c:422 -1
     (nil))
(insn 104 103 105 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 156 [ D.9680 ])
            (const_int 0 [0]))) ns_name.c:422 -1
     (nil))
(jump_insn 105 104 106 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:422 -1
     (int_list:REG_BR_PROB 101 (nil))
 -> 29)
(note 106 105 107 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 20 (parallel [
            (set (reg/v:SI 89 [ checked ])
                (plus:SI (reg/v:SI 89 [ checked ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:426 -1
     (nil))
(insn 108 107 109 20 (set (reg:DI 157 [ D.9681 ])
        (sign_extend:DI (reg/v:SI 89 [ checked ]))) ns_name.c:432 -1
     (nil))
(insn 109 108 110 20 (parallel [
            (set (reg:DI 158 [ D.9681 ])
                (minus:DI (reg/v/f:DI 129 [ eom ])
                    (reg/v/f:DI 128 [ msg ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:432 -1
     (nil))
(insn 110 109 111 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 157 [ D.9681 ])
            (reg:DI 158 [ D.9681 ]))) ns_name.c:432 -1
     (nil))
(jump_insn 111 110 114 20 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:432 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 29)
(note 114 111 112 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 112 114 113 21 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
(barrier 113 112 115)
(code_label 115 113 116 22 190 "" [1 uses])
(note 116 115 117 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 22 (set (reg:DI 159)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:439 -1
     (nil))
(insn 118 117 14 22 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 159)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:439 -1
     (nil))
(insn 14 118 119 22 (set (reg:SI 90 [ D.9678 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:440 -1
     (nil))
(jump_insn 119 14 120 22 (set (pc)
        (label_ref 137)) ns_name.c:440 -1
     (nil)
 -> 137)
(barrier 120 119 121)
(code_label 121 120 122 23 193 "" [2 uses])
(note 122 121 123 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(code_label 123 122 124 24 188 "" [1 uses])
(note 124 123 125 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 24 (parallel [
            (set (reg/v/f:DI 97 [ srcp ])
                (plus:DI (reg/v/f:DI 87 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:393 -1
     (nil))
(insn 126 125 128 24 (set (reg:QI 98 [ D.9679 ])
        (mem:QI (reg/v/f:DI 87 [ src ]) [0 *src_1+0 S1 A8])) ns_name.c:393 -1
     (nil))
(insn 128 126 129 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.9679 ])
            (const_int 0 [0]))) ns_name.c:393 -1
     (nil))
(jump_insn 129 128 130 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) ns_name.c:393 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 127)
(note 130 129 131 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 25 (set (mem:QI (reg/v/f:DI 131 [ dst ]) [0 *dst_2+0 S1 A8])
        (const_int 0 [0])) ns_name.c:443 -1
     (nil))
(insn 132 131 133 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 88 [ len ])
            (const_int 0 [0]))) ns_name.c:444 -1
     (nil))
(jump_insn 133 132 134 25 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) ns_name.c:444 612 {*jcc_1}
     (int_list:REG_BR_PROB 6335 (nil))
 -> 149)
(note 134 133 135 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 26 (parallel [
            (set (reg:DI 160 [ D.9681 ])
                (minus:DI (reg/v/f:DI 97 [ srcp ])
                    (reg/v/f:DI 130 [ src ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:445 -1
     (nil))
(insn 136 135 13 26 (set (reg/v:SI 126 [ len ])
        (subreg:SI (reg:DI 160 [ D.9681 ]) 0)) ns_name.c:445 -1
     (nil))
(insn 13 136 146 26 (set (reg:SI 90 [ D.9678 ])
        (reg/v:SI 126 [ len ])) ns_name.c:445 -1
     (nil))
(jump_insn 146 13 147 26 (set (pc)
        (label_ref 137)) -1
     (nil)
 -> 137)
(barrier 147 146 149)
(code_label 149 147 148 27 196 "" [1 uses])
(note 148 149 12 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 12 148 137 27 (set (reg:SI 90 [ D.9678 ])
        (reg/v:SI 88 [ len ])) -1
     (nil))
(code_label 137 12 138 28 189 "" [3 uses])
(note 138 137 139 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 143 28 (set (reg:SI 127 [ <retval> ])
        (reg:SI 90 [ D.9678 ])) -1
     (nil))
(insn 143 139 144 28 (set (reg/i:SI 0 ax)
        (reg:SI 127 [ <retval> ])) ns_name.c:447 -1
     (nil))
(insn 144 143 0 28 (use (reg/i:SI 0 ax)) ns_name.c:447 -1
     (nil))

;; Function ns_name_pack (*__GI_ns_name_pack, funcdef_no=51, decl_uid=3528, cgraph_uid=56, symbol_order=60)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58
Edge 2->7 redirected to 67
Edge 3->7 redirected to 68
Edge 4->7 redirected to 69
Edge 23->31 redirected to 71
Edge 31->36 redirected to 72
Edge 54->15 redirected to 73
Purged edges from bb 76


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 12 failed.
Forwarding edge 27->28 to 57 failed.
Forwarding edge 30->31 to 48 failed.
Forwarding edge 40->41 to 43 failed.
Forwarding edge 45->46 to 74 failed.
Forwarding edge 53->54 to 57 failed.
Forwarding edge 67->68 to 14 failed.
Forwarding edge 74->75 to 66 failed.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 12 failed.
Forwarding edge 27->28 to 57 failed.
Forwarding edge 30->31 to 48 failed.
Forwarding edge 40->41 to 43 failed.
Forwarding edge 45->46 to 74 failed.
Forwarding edge 53->54 to 57 failed.
Forwarding edge 67->68 to 14 failed.
Forwarding edge 74->75 to 66 failed.


;;
;; Full RTL generated for this function:
;;
(note 55 0 83 NOTE_INSN_DELETED)
(note 83 55 56 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 56 83 57 2 (set (reg/v/f:DI 231 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:473 -1
     (nil))
(insn 57 56 58 2 (set (reg/v/f:DI 232 [ dst ])
        (reg:DI 4 si [ dst ])) ns_name.c:473 -1
     (nil))
(insn 58 57 59 2 (set (reg/v:SI 233 [ dstsiz ])
        (reg:SI 1 dx [ dstsiz ])) ns_name.c:473 -1
     (nil))
(insn 59 58 60 2 (set (reg/v/f:DI 234 [ dnptrs ])
        (reg:DI 2 cx [ dnptrs ])) ns_name.c:473 -1
     (nil))
(insn 60 59 61 2 (set (reg/v/f:DI 235 [ lastdnptr ])
        (reg:DI 37 r8 [ lastdnptr ])) ns_name.c:473 -1
     (nil))
(note 61 60 85 2 NOTE_INSN_FUNCTION_BEG)
(insn 85 61 86 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 234 [ dnptrs ])
            (const_int 0 [0]))) ns_name.c:483 -1
     (nil))
(jump_insn 86 85 87 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) ns_name.c:483 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 405)
(note 87 86 88 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 4 (parallel [
            (set (reg/v/f:DI 141 [ dnptrs ])
                (plus:DI (reg/v/f:DI 234 [ dnptrs ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:484 -1
     (nil))
(insn 89 88 90 4 (set (reg/v/f:DI 144 [ msg ])
        (mem/f:DI (reg/v/f:DI 234 [ dnptrs ]) [1 *dnptrs_29(D)+0 S8 A64])) ns_name.c:484 -1
     (nil))
(insn 90 89 91 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 144 [ msg ])
            (const_int 0 [0]))) ns_name.c:484 -1
     (nil))
(jump_insn 91 90 92 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 409)
            (pc))) ns_name.c:484 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 409)
(note 92 91 93 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/v/f:DI 234 [ dnptrs ])
                    (const_int 8 [0x8])) [1 MEM[(const u_char * *)dnptrs_29(D) + 8B]+0 S8 A64])
            (const_int 0 [0]))) ns_name.c:485 -1
     (nil))
(jump_insn 94 93 95 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 413)
            (pc))) ns_name.c:485 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 413)
(note 95 94 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 95 98 6 (set (reg/v/f:DI 234 [ dnptrs ])
        (reg/v/f:DI 141 [ dnptrs ])) ns_name.c:485 -1
     (nil))
(code_label 98 62 96 7 209 "" [1 uses])
(note 96 98 97 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 7 (parallel [
            (set (reg/v/f:DI 234 [ dnptrs ])
                (plus:DI (reg/v/f:DI 234 [ dnptrs ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:485 -1
     (nil))
(insn 99 97 100 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 234 [ dnptrs ]) [1 MEM[base: dnptrs_36, offset: 0B]+0 S8 A64])
            (const_int 0 [0]))) ns_name.c:485 -1
     (nil))
(jump_insn 100 99 401 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) ns_name.c:485 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 98)
(note 401 100 402 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 402 401 403 8 (set (pc)
        (label_ref 101)) -1
     (nil)
 -> 101)
(barrier 403 402 405)
(code_label 405 403 404 9 239 "" [1 uses])
(note 404 405 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 63 404 64 9 (set (reg/v/f:DI 141 [ dnptrs ])
        (reg/v/f:DI 234 [ dnptrs ])) -1
     (nil))
(insn 64 63 406 9 (set (reg/v/f:DI 144 [ msg ])
        (const_int 0 [0])) ns_name.c:490 -1
     (nil))
(jump_insn 406 64 407 9 (set (pc)
        (label_ref 101)) -1
     (nil)
 -> 101)
(barrier 407 406 409)
(code_label 409 407 408 10 240 "" [1 uses])
(note 408 409 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 408 410 10 (set (reg/v/f:DI 234 [ dnptrs ])
        (const_int 0 [0])) ns_name.c:482 -1
     (nil))
(jump_insn 410 65 411 10 (set (pc)
        (label_ref 101)) -1
     (nil)
 -> 101)
(barrier 411 410 413)
(code_label 413 411 412 11 241 "" [1 uses])
(note 412 413 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 66 412 101 11 (set (reg/v/f:DI 234 [ dnptrs ])
        (reg/v/f:DI 141 [ dnptrs ])) ns_name.c:485 -1
     (nil))
(code_label 101 66 102 12 208 "" [3 uses])
(note 102 101 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 102 68 12 (set (reg/v/f:DI 145 [ src ])
        (reg/v/f:DI 231 [ src ])) ns_name.c:479 -1
     (nil))
(insn 68 67 136 12 (set (reg/v:SI 146 [ l ])
        (const_int 0 [0])) ns_name.c:493 -1
     (nil))
(code_label 136 68 103 13 214 "" [1 uses])
(note 103 136 104 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 13 (set (reg:QI 156 [ D.9726 ])
        (mem:QI (reg/v/f:DI 145 [ src ]) [0 *src_9+0 S1 A8])) ns_name.c:497 -1
     (nil))
(insn 105 104 106 13 (parallel [
            (set (reg:QI 236 [ D.9726 ])
                (and:QI (reg:QI 156 [ D.9726 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:498 -1
     (nil))
(insn 106 105 107 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 236 [ D.9726 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:498 -1
     (nil))
(jump_insn 107 106 129 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) ns_name.c:498 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 113)
(code_label 129 107 108 14 213 "" [3 uses])
(note 108 129 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 14 (set (reg:DI 237)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:499 -1
     (nil))
(insn 110 109 81 14 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 237)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:499 -1
     (nil))
(insn 81 110 111 14 (set (reg:SI 148 [ D.9724 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:500 -1
     (nil))
(jump_insn 111 81 112 14 (set (pc)
        (label_ref 384)) ns_name.c:500 -1
     (nil)
 -> 384)
(barrier 112 111 113)
(code_label 113 112 114 15 210 "" [1 uses])
(note 114 113 115 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 15 (set (reg:DI 5 di)
        (reg/v/f:DI 145 [ src ])) ns_name.c:502 -1
     (nil))
(call_insn/i 116 115 117 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:502 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 117 116 118 15 (set (reg/v:SI 158 [ l0 ])
        (reg:SI 0 ax)) ns_name.c:502 -1
     (nil))
(insn 118 117 119 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 158 [ l0 ])
            (const_int 0 [0]))) ns_name.c:502 -1
     (nil))
(jump_insn 119 118 120 15 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) ns_name.c:502 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 125)
(note 120 119 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 16 (set (reg:DI 238)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:503 -1
     (nil))
(insn 122 121 82 16 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 238)) [2 errno+0 S4 A32])
        (const_int 22 [0x16])) ns_name.c:503 -1
     (nil))
(insn 82 122 123 16 (set (reg:SI 148 [ D.9724 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:504 -1
     (nil))
(jump_insn 123 82 124 16 (set (pc)
        (label_ref 384)) ns_name.c:504 -1
     (nil)
 -> 384)
(barrier 124 123 125)
(code_label 125 124 126 17 212 "" [1 uses])
(note 126 125 127 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 17 (parallel [
            (set (reg:SI 239 [ D.9724 ])
                (plus:SI (reg/v:SI 158 [ l0 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:506 -1
     (nil))
(insn 128 127 130 17 (parallel [
            (set (reg/v:SI 146 [ l ])
                (plus:SI (reg/v:SI 146 [ l ])
                    (reg:SI 239 [ D.9724 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:506 -1
     (nil))
(insn 130 128 131 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 146 [ l ])
            (const_int 255 [0xff]))) ns_name.c:507 -1
     (nil))
(jump_insn 131 130 132 17 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) ns_name.c:507 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 129)
(note 132 131 133 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 18 (set (reg:DI 240 [ D.9725 ])
        (sign_extend:DI (reg/v:SI 158 [ l0 ]))) ns_name.c:511 -1
     (nil))
(insn 134 133 135 18 (parallel [
            (set (reg:DI 241 [ D.9725 ])
                (plus:DI (reg:DI 240 [ D.9725 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:511 -1
     (nil))
(insn 135 134 137 18 (parallel [
            (set (reg/v/f:DI 145 [ src ])
                (plus:DI (reg/v/f:DI 145 [ src ])
                    (reg:DI 241 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:511 -1
     (nil))
(insn 137 135 138 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 156 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:512 -1
     (nil))
(jump_insn 138 137 139 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) ns_name.c:512 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 136)
(note 139 138 140 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 141 19 (set (reg:DI 242 [ D.9725 ])
        (sign_extend:DI (reg/v:SI 233 [ dstsiz ]))) ns_name.c:481 -1
     (nil))
(insn 141 140 142 19 (parallel [
            (set (reg/v/f:DI 153 [ eob ])
                (plus:DI (reg/v/f:DI 232 [ dst ])
                    (reg:DI 242 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:481 -1
     (nil))
(insn 142 141 143 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 144 [ msg ])
            (const_int 0 [0]))) -1
     (nil))
(insn 143 142 144 19 (set (reg:QI 243)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 144 143 69 19 (set (reg:QI 227 [ D.9728 ])
        (reg:QI 243)) -1
     (nil))
(insn 69 144 70 19 (set (reg/v/f:DI 143 [ dnptrs ])
        (reg/v/f:DI 234 [ dnptrs ])) ns_name.c:481 -1
     (nil))
(insn 70 69 71 19 (set (reg/v/f:DI 142 [ dst ])
        (reg/v/f:DI 232 [ dst ])) ns_name.c:481 -1
     (nil))
(insn 71 70 421 19 (set (reg/v:SI 147 [ first ])
        (const_int 1 [0x1])) ns_name.c:481 -1
     (nil))
(jump_insn 421 71 422 19 (set (pc)
        (label_ref 375)) -1
     (nil)
 -> 375)
(barrier 422 421 424)
(code_label 424 422 423 20 244 "" [1 uses])
(note 423 424 72 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 72 423 375 20 (set (reg/v/f:DI 142 [ dst ])
        (reg/v/f:DI 168 [ dst ])) -1
     (nil))
(code_label 375 72 145 21 237 "" [1 uses])
(note 145 375 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg:QI 162 [ D.9726 ])
        (mem:QI (reg/v/f:DI 231 [ src ]) [0 *src_10+0 S1 A8])) ns_name.c:518 -1
     (nil))
(insn 147 146 148 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 162 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:519 -1
     (nil))
(insn 148 147 149 21 (set (reg:QI 245 [ D.9728 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) ns_name.c:519 -1
     (nil))
(insn 149 148 150 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 245 [ D.9728 ])
            (const_int 0 [0]))) ns_name.c:519 -1
     (nil))
(jump_insn 150 149 425 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) ns_name.c:519 -1
     (int_list:REG_BR_PROB 3550 (nil))
 -> 339)
(note 425 150 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 425 152 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 227 [ D.9728 ])
            (const_int 0 [0]))) ns_name.c:519 -1
     (nil))
(jump_insn 152 151 153 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) ns_name.c:519 -1
     (int_list:REG_BR_PROB 5504 (nil))
 -> 339)
(note 153 152 154 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 23 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 141 [ dnptrs ])
            (reg/v/f:DI 234 [ dnptrs ]))) ns_name.c:745 -1
     (nil))
(jump_insn 155 154 156 23 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 298)
            (pc))) ns_name.c:745 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 298)
(note 156 155 73 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 73 156 295 24 (set (reg/v/f:DI 222 [ dnptrs ])
        (reg/v/f:DI 141 [ dnptrs ])) ns_name.c:745 -1
     (nil))
(code_label 295 73 157 25 232 "" [1 uses])
(note 157 295 158 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 25 (set (reg/v/f:DI 218 [ cp ])
        (mem/f:DI (reg/v/f:DI 222 [ dnptrs ]) [1 MEM[base: dnptrs_179, offset: 0B]+0 S8 A64])) ns_name.c:746 -1
     (nil))
(insn 159 158 160 25 (set (reg:QI 215 [ D.9726 ])
        (mem:QI (reg/v/f:DI 218 [ cp ]) [0 *cp_92+0 S1 A8])) ns_name.c:753 -1
     (nil))
(insn 160 159 161 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 215 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:753 -1
     (nil))
(jump_insn 161 160 162 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 292)
(note 162 161 163 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 26 (parallel [
            (set (reg:QI 246 [ D.9726 ])
                (and:QI (reg:QI 215 [ D.9726 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:753 -1
     (nil))
(insn 164 163 165 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 246 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:753 -1
     (nil))
(jump_insn 165 164 166 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 292)
(note 166 165 167 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 27 (set (reg:DI 226 [ D.9730 ])
        (reg/v/f:DI 144 [ msg ])) ns_name.c:754 -1
     (nil))
(insn 168 167 169 27 (parallel [
            (set (reg:DI 228 [ D.9730 ])
                (minus:DI (reg/v/f:DI 218 [ cp ])
                    (reg:DI 226 [ D.9730 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:754 -1
     (nil))
(insn 169 168 170 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 228 [ D.9730 ])
            (const_int 16383 [0x3fff]))) ns_name.c:753 -1
     (nil))
(jump_insn 170 169 173 27 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 286)
(note 173 170 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 171 173 172 28 (set (pc)
        (label_ref 292)) ns_name.c:753 -1
     (nil)
 -> 292)
(barrier 172 171 264)
(code_label 264 172 174 29 230 "" [2 uses])
(note 174 264 175 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 29 (parallel [
            (set (reg:QI 247 [ D.9726 ])
                (and:QI (reg:QI 151 [ D.9726 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:761 -1
     (nil))
(insn 176 175 177 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 247 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:761 -1
     (nil))
(jump_insn 177 176 426 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) ns_name.c:761 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 182)
(note 426 177 178 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 178 426 179 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 247 [ D.9726 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:761 -1
     (nil))
(jump_insn 179 178 427 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) ns_name.c:761 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 244)
(note 427 179 180 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(jump_insn 180 427 181 31 (set (pc)
        (label_ref 255)) ns_name.c:761 -1
     (nil)
 -> 255)
(barrier 181 180 182)
(code_label 182 181 183 32 220 "" [1 uses])
(note 183 182 184 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 32 (set (reg:DI 5 di)
        (reg/v/f:DI 194 [ cp ])) ns_name.c:763 -1
     (nil))
(call_insn/i 185 184 186 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:763 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 186 185 187 32 (set (reg:SI 190 [ D.9724 ])
        (reg:SI 0 ax)) ns_name.c:763 -1
     (nil))
(insn 187 186 188 32 (set (reg/v:SI 191 [ n ])
        (reg:SI 190 [ D.9724 ])) ns_name.c:763 -1
     (nil))
(insn 188 187 189 32 (parallel [
            (set (reg/v/f:DI 195 [ src ])
                (plus:DI (reg/v/f:DI 154 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:764 -1
     (nil))
(insn 189 188 190 32 (set (reg:SI 248 [ D.9734 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 154 [ src ]) [0 *src_30+0 S1 A8]))) ns_name.c:764 -1
     (nil))
(insn 190 189 191 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 191 [ n ])
            (reg:SI 248 [ D.9734 ]))) ns_name.c:764 -1
     (nil))
(jump_insn 191 190 192 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) ns_name.c:764 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 267)
(note 192 191 193 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 33 (parallel [
            (set (reg/v/f:DI 200 [ cp ])
                (plus:DI (reg/v/f:DI 194 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:757 -1
     (nil))
(insn 194 193 195 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 191 [ n ])
            (const_int 0 [0]))) ns_name.c:767 -1
     (nil))
(jump_insn 195 194 196 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 418)
            (pc))) ns_name.c:767 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 418)
(note 196 195 197 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 34 (parallel [
            (set (reg:SI 249 [ D.9734 ])
                (plus:SI (reg/v:SI 191 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 198 197 199 34 (set (reg:DI 250 [ D.9725 ])
        (zero_extend:DI (reg:SI 249 [ D.9734 ]))) -1
     (nil))
(insn 199 198 200 34 (parallel [
            (set (reg:DI 251 [ D.9725 ])
                (plus:DI (reg:DI 250 [ D.9725 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 200 199 227 34 (parallel [
            (set (reg/v/f:DI 194 [ cp ])
                (plus:DI (reg/v/f:DI 194 [ cp ])
                    (reg:DI 251 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 227 200 201 35 226 "" [1 uses])
(note 201 227 202 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 35 (parallel [
            (set (reg/v/f:DI 195 [ src ])
                (plus:DI (reg/v/f:DI 195 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:768 -1
     (nil))
(insn 203 202 204 35 (set (reg:QI 196 [ D.9726 ])
        (mem:QI (plus:DI (reg/v/f:DI 195 [ src ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: src_103, offset: -1B]+0 S1 A8])) ns_name.c:768 -1
     (nil))
(insn 204 203 205 35 (set (reg:SI 197 [ D.9724 ])
        (zero_extend:SI (reg:QI 196 [ D.9726 ]))) ns_name.c:768 -1
     (nil))
(insn 205 204 206 35 (set (reg:SI 252 [ D.9735 ])
        (zero_extend:SI (reg:QI 196 [ D.9726 ]))) ns_name.c:721 -1
     (nil))
(insn 206 205 207 35 (parallel [
            (set (reg:SI 253 [ D.9735 ])
                (plus:SI (reg:SI 252 [ D.9735 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:721 -1
     (nil))
(insn 207 206 208 35 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 253 [ D.9735 ])
            (const_int 25 [0x19]))) ns_name.c:721 -1
     (nil))
(jump_insn 208 207 209 35 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 211)
            (pc))) ns_name.c:721 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 211)
(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 36 (parallel [
            (set (reg:SI 197 [ D.9724 ])
                (plus:SI (reg:SI 197 [ D.9724 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:722 -1
     (nil))
(code_label 211 210 212 37 224 "" [1 uses])
(note 212 211 213 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 37 (parallel [
            (set (reg/v/f:DI 200 [ cp ])
                (plus:DI (reg/v/f:DI 200 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:769 -1
     (nil))
(insn 214 213 215 37 (set (reg:QI 201 [ D.9726 ])
        (mem:QI (plus:DI (reg/v/f:DI 200 [ cp ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: cp_110, offset: -1B]+0 S1 A8])) ns_name.c:769 -1
     (nil))
(insn 215 214 216 37 (set (reg:SI 202 [ D.9724 ])
        (zero_extend:SI (reg:QI 201 [ D.9726 ]))) ns_name.c:769 -1
     (nil))
(insn 216 215 217 37 (set (reg:SI 254 [ D.9735 ])
        (zero_extend:SI (reg:QI 201 [ D.9726 ]))) ns_name.c:721 -1
     (nil))
(insn 217 216 218 37 (parallel [
            (set (reg:SI 255 [ D.9735 ])
                (plus:SI (reg:SI 254 [ D.9735 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:721 -1
     (nil))
(insn 218 217 219 37 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 255 [ D.9735 ])
            (const_int 25 [0x19]))) ns_name.c:721 -1
     (nil))
(jump_insn 219 218 220 37 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 222)
            (pc))) ns_name.c:721 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 222)
(note 220 219 221 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 38 (parallel [
            (set (reg:SI 202 [ D.9724 ])
                (plus:SI (reg:SI 202 [ D.9724 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:722 -1
     (nil))
(code_label 222 221 223 39 225 "" [1 uses])
(note 223 222 224 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 202 [ D.9724 ])
            (reg:SI 197 [ D.9724 ]))) ns_name.c:768 -1
     (nil))
(jump_insn 225 224 226 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) ns_name.c:768 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 267)
(note 226 225 228 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 228 226 229 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 200 [ cp ])
            (reg/v/f:DI 194 [ cp ]))) ns_name.c:767 -1
     (nil))
(jump_insn 229 228 414 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) ns_name.c:767 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 227)
(note 414 229 415 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(jump_insn 415 414 416 41 (set (pc)
        (label_ref 230)) -1
     (nil)
 -> 230)
(barrier 416 415 418)
(code_label 418 416 417 42 242 "" [1 uses])
(note 417 418 77 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 77 417 230 42 (set (reg/v/f:DI 194 [ cp ])
        (reg/v/f:DI 200 [ cp ])) ns_name.c:767 -1
     (nil))
(code_label 230 77 231 43 223 "" [1 uses])
(note 231 230 232 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 195 [ src ]) [0 *src_195+0 S1 A8])
            (const_int 0 [0]))) ns_name.c:772 -1
     (nil))
(jump_insn 233 232 234 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 420)
            (pc))) ns_name.c:772 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 420)
(note 234 233 235 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 194 [ cp ]) [0 *cp_190+0 S1 A8])
            (const_int 0 [0]))) ns_name.c:772 -1
     (nil))
(jump_insn 236 235 237 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) ns_name.c:772 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 267)
(note 237 236 238 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 45 (set (reg:SI 207 [ D.9724 ])
        (subreg:SI (reg:DI 228 [ D.9730 ]) 0)) ns_name.c:773 -1
     (nil))
(insn 239 238 240 45 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 207 [ D.9724 ])
            (const_int 0 [0]))) ns_name.c:522 -1
     (nil))
(jump_insn 240 239 243 45 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 304)
            (pc))) ns_name.c:522 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 304)
(note 243 240 241 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 241 243 242 46 (set (pc)
        (label_ref 389)) -1
     (nil)
 -> 389)
(barrier 242 241 244)
(code_label 244 242 245 47 221 "" [1 uses])
(note 245 244 246 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 47 (parallel [
            (set (reg:QI 256 [ D.9726 ])
                (and:QI (reg:QI 151 [ D.9726 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:778 -1
     (nil))
(insn 247 246 248 47 (set (reg:SI 257 [ D.9734 ])
        (zero_extend:SI (reg:QI 256 [ D.9726 ]))) ns_name.c:778 -1
     (nil))
(insn 248 247 249 47 (parallel [
            (set (reg:SI 258 [ D.9734 ])
                (ashift:SI (reg:SI 257 [ D.9734 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:778 -1
     (nil))
(insn 249 248 250 47 (set (reg:SI 259 [ D.9734 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 194 [ cp ])
                    (const_int 1 [0x1])) [0 MEM[(const u_char *)cp_102 + 1B]+0 S1 A8]))) ns_name.c:778 -1
     (nil))
(insn 250 249 251 47 (parallel [
            (set (reg:SI 260 [ D.9734 ])
                (ior:SI (reg:SI 258 [ D.9734 ])
                    (reg:SI 259 [ D.9734 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:778 -1
     (nil))
(insn 251 250 252 47 (set (reg:DI 214 [ D.9725 ])
        (zero_extend:DI (reg:SI 260 [ D.9734 ]))) ns_name.c:778 -1
     (nil))
(insn 252 251 253 47 (parallel [
            (set (reg/v/f:DI 194 [ cp ])
                (plus:DI (reg/v/f:DI 144 [ msg ])
                    (reg:DI 214 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:778 -1
     (nil))
(jump_insn 253 252 254 47 (set (pc)
        (label_ref 261)) ns_name.c:778 -1
     (nil)
 -> 261)
(barrier 254 253 255)
(code_label 255 254 256 48 219 "" [1 uses])
(note 256 255 257 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 257 256 258 48 (set (reg:DI 261)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:782 -1
     (nil))
(insn 258 257 259 48 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 261)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:782 -1
     (nil))
(jump_insn 259 258 260 48 (set (pc)
        (label_ref 389)) ns_name.c:782 -1
     (nil)
 -> 389)
(barrier 260 259 420)
(code_label 420 260 419 49 243 "" [1 uses])
(note 419 420 78 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 78 419 261 49 (set (reg/v/f:DI 154 [ src ])
        (reg/v/f:DI 195 [ src ])) ns_name.c:772 -1
     (nil))
(code_label 261 78 262 50 227 "" [1 uses])
(note 262 261 263 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 265 50 (set (reg:QI 151 [ D.9726 ])
        (mem:QI (reg/v/f:DI 194 [ cp ]) [0 *cp_148+0 S1 A8])) -1
     (nil))
(insn 265 263 266 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 151 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:757 -1
     (nil))
(jump_insn 266 265 267 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) ns_name.c:757 -1
     (int_list:REG_BR_PROB 9509 (nil))
 -> 264)
(code_label 267 266 268 51 222 ("next") [3 uses])
(note 268 267 269 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 51 (set (reg:DI 262 [ D.9725 ])
        (zero_extend:DI (reg:QI 215 [ D.9726 ]))) ns_name.c:787 -1
     (nil))
(insn 270 269 271 51 (parallel [
            (set (reg:DI 263 [ D.9725 ])
                (plus:DI (reg:DI 262 [ D.9725 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:787 -1
     (nil))
(insn 271 270 272 51 (parallel [
            (set (reg/v/f:DI 218 [ cp ])
                (plus:DI (reg/v/f:DI 218 [ cp ])
                    (reg:DI 263 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:787 -1
     (nil))
(insn 272 271 273 51 (set (reg:QI 215 [ D.9726 ])
        (mem:QI (reg/v/f:DI 218 [ cp ]) [0 *cp_138+0 S1 A8])) ns_name.c:753 -1
     (nil))
(insn 273 272 274 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 215 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:753 -1
     (nil))
(jump_insn 274 273 275 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 292)
(note 275 274 276 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 52 (parallel [
            (set (reg:QI 264 [ D.9726 ])
                (and:QI (reg:QI 215 [ D.9726 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:753 -1
     (nil))
(insn 277 276 278 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 264 [ D.9726 ])
            (const_int 0 [0]))) ns_name.c:753 -1
     (nil))
(jump_insn 278 277 279 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 292)
(note 279 278 280 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 53 (parallel [
            (set (reg:DI 228 [ D.9730 ])
                (minus:DI (reg/v/f:DI 218 [ cp ])
                    (reg:DI 226 [ D.9730 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:754 -1
     (nil))
(insn 281 280 282 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 228 [ D.9730 ])
            (const_int 16383 [0x3fff]))) ns_name.c:753 -1
     (nil))
(jump_insn 282 281 285 53 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) ns_name.c:753 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 288)
(note 285 282 283 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 283 285 284 54 (set (pc)
        (label_ref 292)) ns_name.c:753 -1
     (nil)
 -> 292)
(barrier 284 283 286)
(code_label 286 284 287 55 218 "" [1 uses])
(note 287 286 288 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(code_label 288 287 289 56 231 "" [1 uses])
(note 289 288 74 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 74 289 75 56 (set (reg:QI 151 [ D.9726 ])
        (reg:QI 215 [ D.9726 ])) ns_name.c:745 -1
     (nil))
(insn 75 74 76 56 (set (reg/v/f:DI 154 [ src ])
        (reg/v/f:DI 231 [ src ])) ns_name.c:745 -1
     (nil))
(insn 76 75 290 56 (set (reg/v/f:DI 194 [ cp ])
        (reg/v/f:DI 218 [ cp ])) ns_name.c:745 -1
     (nil))
(jump_insn 290 76 291 56 (set (pc)
        (label_ref 264)) ns_name.c:753 -1
     (nil)
 -> 264)
(barrier 291 290 292)
(code_label 292 291 293 57 217 "" [6 uses])
(note 293 292 294 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 294 293 296 57 (parallel [
            (set (reg/v/f:DI 222 [ dnptrs ])
                (plus:DI (reg/v/f:DI 222 [ dnptrs ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:745 -1
     (nil))
(insn 296 294 297 57 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 234 [ dnptrs ])
            (reg/v/f:DI 222 [ dnptrs ]))) ns_name.c:745 -1
     (nil))
(jump_insn 297 296 298 57 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 295)
            (pc))) ns_name.c:745 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 295)
(code_label 298 297 299 58 216 "" [1 uses])
(note 299 298 300 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 58 (set (reg:DI 265)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:790 -1
     (nil))
(insn 301 300 302 58 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 265)) [2 errno+0 S4 A32])
        (const_int 2 [0x2])) ns_name.c:790 -1
     (nil))
(jump_insn 302 301 303 58 (set (pc)
        (label_ref 389)) ns_name.c:790 -1
     (nil)
 -> 389)
(barrier 303 302 304)
(code_label 304 303 305 59 228 "" [1 uses])
(note 305 304 306 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 59 (parallel [
            (set (reg:DI 266 [ D.9732 ])
                (plus:DI (reg/v/f:DI 142 [ dst ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:523 -1
     (nil))
(insn 307 306 308 59 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 153 [ eob ])
            (reg:DI 266 [ D.9732 ]))) ns_name.c:523 -1
     (nil))
(jump_insn 308 307 345 59 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) ns_name.c:523 -1
     (int_list:REG_BR_PROB 9600 (nil))
 -> 313)
(code_label 345 308 309 60 235 "" [1 uses])
(note 309 345 310 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 60 (set (mem/f:DI (reg/v/f:DI 234 [ dnptrs ]) [1 *dnptrs_4+0 S8 A64])
        (const_int 0 [0])) ns_name.c:555 -1
     (nil))
(jump_insn 311 310 312 60 (set (pc)
        (label_ref 129)) ns_name.c:555 -1
     (nil)
 -> 129)
(barrier 312 311 313)
(code_label 313 312 314 61 233 "" [1 uses])
(note 314 313 315 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 61 (parallel [
            (set (reg:SI 267 [ D.9724 ])
                (ashiftrt:SI (reg:SI 207 [ D.9724 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:526 -1
     (nil))
(insn 316 315 317 61 (parallel [
            (set (reg:QI 268)
                (ior:QI (subreg:QI (reg:SI 267 [ D.9724 ]) 0)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:526 -1
     (nil))
(insn 317 316 318 61 (set (mem:QI (reg/v/f:DI 142 [ dst ]) [0 *dst_2+0 S1 A8])
        (reg:QI 268)) ns_name.c:526 -1
     (nil))
(insn 318 317 319 61 (set (mem:QI (plus:DI (reg/v/f:DI 142 [ dst ])
                (const_int 1 [0x1])) [0 MEM[(u_char *)dst_2 + 1B]+0 S1 A8])
        (subreg:QI (reg:DI 228 [ D.9730 ]) 0)) ns_name.c:527 -1
     (nil))
(insn 319 318 320 61 (parallel [
            (set (reg:DI 269 [ dstp ])
                (plus:DI (reg/v/f:DI 142 [ dst ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:527 -1
     (nil))
(insn 320 319 321 61 (parallel [
            (set (reg:DI 270 [ D.9730 ])
                (minus:DI (reg:DI 269 [ dstp ])
                    (reg/v/f:DI 232 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:528 -1
     (nil))
(insn 321 320 322 61 (set (reg:SI 148 [ D.9724 ])
        (subreg:SI (reg:DI 270 [ D.9730 ]) 0)) ns_name.c:528 -1
     (nil))
(jump_insn 322 321 323 61 (set (pc)
        (label_ref 384)) ns_name.c:528 -1
     (nil)
 -> 384)
(barrier 323 322 391)
(code_label 391 323 324 62 238 "" [1 uses])
(note 324 391 325 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 62 (parallel [
            (set (reg:DI 271 [ D.9731 ])
                (plus:DI (reg/v/f:DI 235 [ lastdnptr ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:531 -1
     (nil))
(insn 326 325 327 62 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 143 [ dnptrs ])
            (reg:DI 271 [ D.9731 ]))) ns_name.c:531 -1
     (nil))
(jump_insn 327 326 328 62 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) ns_name.c:531 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 339)
(note 328 327 329 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 63 (parallel [
            (set (reg:DI 272 [ D.9730 ])
                (minus:DI (reg/v/f:DI 142 [ dst ])
                    (reg/v/f:DI 144 [ msg ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:531 -1
     (nil))
(insn 330 329 331 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 272 [ D.9730 ])
            (const_int 16383 [0x3fff]))) ns_name.c:531 -1
     (nil))
(jump_insn 331 330 332 63 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) ns_name.c:531 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 339)
(note 332 331 333 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 333 332 334 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 147 [ first ])
            (const_int 0 [0]))) ns_name.c:532 -1
     (nil))
(jump_insn 334 333 335 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) ns_name.c:532 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 339)
(note 335 334 336 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 65 (parallel [
            (set (reg/v/f:DI 178 [ dnptrs ])
                (plus:DI (reg/v/f:DI 143 [ dnptrs ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:533 -1
     (nil))
(insn 337 336 338 65 (set (mem/f:DI (reg/v/f:DI 143 [ dnptrs ]) [1 *dnptrs_5+0 S8 A64])
        (reg/v/f:DI 142 [ dst ])) ns_name.c:533 -1
     (nil))
(insn 338 337 79 65 (set (mem/f:DI (plus:DI (reg/v/f:DI 143 [ dnptrs ])
                (const_int 8 [0x8])) [1 MEM[(const u_char * *)dnptrs_5 + 8B]+0 S8 A64])
        (const_int 0 [0])) ns_name.c:534 -1
     (nil))
(insn 79 338 80 65 (set (reg/v/f:DI 143 [ dnptrs ])
        (reg/v/f:DI 178 [ dnptrs ])) ns_name.c:533 -1
     (nil))
(insn 80 79 339 65 (set (reg/v:SI 147 [ first ])
        (const_int 0 [0])) ns_name.c:535 -1
     (nil))
(code_label 339 80 340 66 215 "" [6 uses])
(note 340 339 341 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 66 (parallel [
            (set (reg:QI 273 [ D.9726 ])
                (and:QI (reg:QI 162 [ D.9726 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:539 -1
     (nil))
(insn 342 341 343 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 273 [ D.9726 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:539 -1
     (nil))
(jump_insn 343 342 359 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 351)
            (pc))) ns_name.c:539 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 351)
(code_label 359 343 344 67 236 "" [2 uses])
(note 344 359 346 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 346 344 347 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 144 [ msg ])
            (const_int 0 [0]))) ns_name.c:554 -1
     (nil))
(jump_insn 347 346 350 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 345)
            (pc))) ns_name.c:554 -1
     (int_list:REG_BR_PROB 8980 (nil))
 -> 345)
(note 350 347 348 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(jump_insn 348 350 349 68 (set (pc)
        (label_ref 129)) -1
     (nil)
 -> 129)
(barrier 349 348 351)
(code_label 351 349 352 69 234 "" [1 uses])
(note 352 351 353 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 69 (set (reg:DI 5 di)
        (reg/v/f:DI 231 [ src ])) ns_name.c:543 -1
     (nil))
(call_insn/i 354 353 355 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:543 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 355 354 356 69 (set (reg/v:SI 165 [ n ])
        (reg:SI 0 ax)) ns_name.c:543 -1
     (nil))
(insn 356 355 357 69 (set (reg:DI 274 [ D.9725 ])
        (sign_extend:DI (reg/v:SI 165 [ n ]))) ns_name.c:544 -1
     (nil))
(insn 357 356 358 69 (parallel [
            (set (reg:DI 167 [ D.9725 ])
                (plus:DI (reg:DI 274 [ D.9725 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:544 -1
     (nil))
(insn 358 357 360 69 (parallel [
            (set (reg/v/f:DI 168 [ dst ])
                (plus:DI (reg/v/f:DI 142 [ dst ])
                    (reg:DI 167 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:544 -1
     (nil))
(insn 360 358 361 69 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 153 [ eob ])
            (reg/v/f:DI 168 [ dst ]))) ns_name.c:544 -1
     (nil))
(jump_insn 361 360 362 69 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) ns_name.c:544 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 359)
(note 362 361 363 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 70 (parallel [
            (set (reg:SI 275 [ D.9724 ])
                (plus:SI (reg/v:SI 165 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:547 -1
     (nil))
(insn 364 363 365 70 (set (reg:DI 276 [ D.9729 ])
        (sign_extend:DI (reg:SI 275 [ D.9724 ]))) ns_name.c:547 -1
     (nil))
(insn 365 364 366 70 (set (reg:DI 277)
        (reg/v/f:DI 142 [ dst ])) ns_name.c:547 -1
     (nil))
(insn 366 365 367 70 (set (reg:DI 278)
        (reg/v/f:DI 231 [ src ])) ns_name.c:547 -1
     (nil))
(insn 367 366 368 70 (set (reg:DI 279)
        (reg:DI 276 [ D.9729 ])) ns_name.c:547 -1
     (nil))
(insn 368 367 369 70 (set (reg:DI 1 dx)
        (reg:DI 279)) ns_name.c:547 -1
     (nil))
(insn 369 368 370 70 (set (reg:DI 4 si)
        (reg:DI 278)) ns_name.c:547 -1
     (nil))
(insn 370 369 371 70 (set (reg:DI 5 di)
        (reg:DI 277)) ns_name.c:547 -1
     (nil))
(call_insn 371 370 372 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b85d314d360 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) ns_name.c:547 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b85d314d360 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 372 371 373 70 (set (reg:DI 280)
        (reg:DI 0 ax)) ns_name.c:547 -1
     (nil))
(insn 373 372 374 70 (set (reg:DI 281)
        (reg:DI 280)) ns_name.c:547 -1
     (nil))
(insn 374 373 376 70 (parallel [
            (set (reg/v/f:DI 231 [ src ])
                (plus:DI (reg/v/f:DI 231 [ src ])
                    (reg:DI 167 [ D.9725 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:548 -1
     (nil))
(insn 376 374 377 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 165 [ n ])
            (const_int 0 [0]))) ns_name.c:550 -1
     (nil))
(jump_insn 377 376 378 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 424)
            (pc))) ns_name.c:550 612 {*jcc_1}
     (int_list:REG_BR_PROB 9775 (nil))
 -> 424)
(note 378 377 379 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 71 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 153 [ eob ])
            (reg/v/f:DI 168 [ dst ]))) ns_name.c:552 -1
     (nil))
(jump_insn 380 379 381 71 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 359)
            (pc))) ns_name.c:552 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 359)
(note 381 380 382 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 382 381 383 72 (parallel [
            (set (reg:DI 282 [ D.9730 ])
                (minus:DI (reg/v/f:DI 168 [ dst ])
                    (reg/v/f:DI 232 [ dst ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:559 -1
     (nil))
(insn 383 382 384 72 (set (reg:SI 148 [ D.9724 ])
        (subreg:SI (reg:DI 282 [ D.9730 ]) 0)) ns_name.c:559 -1
     (nil))
(code_label 384 383 385 73 211 "" [3 uses])
(note 385 384 386 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 73 (set (reg:SI 230 [ <retval> ])
        (reg:SI 148 [ D.9724 ])) -1
     (nil))
(jump_insn 387 386 388 73 (set (pc)
        (label_ref 397)) -1
     (nil)
 -> 397)
(barrier 388 387 389)
(code_label 389 388 390 74 229 "" [3 uses])
(note 390 389 392 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 392 390 393 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 235 [ lastdnptr ])
            (const_int 0 [0]))) ns_name.c:531 -1
     (nil))
(jump_insn 393 392 396 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 391)
            (pc))) ns_name.c:531 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 391)
(note 396 393 394 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(jump_insn 394 396 395 75 (set (pc)
        (label_ref 339)) -1
     (nil)
 -> 339)
(barrier 395 394 397)
(code_label 397 395 400 76 207 "" [1 uses])
(note 400 397 398 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 398 400 399 76 (set (reg/i:SI 0 ax)
        (reg:SI 230 [ <retval> ])) ns_name.c:560 -1
     (nil))
(insn 399 398 0 76 (use (reg/i:SI 0 ax)) ns_name.c:560 -1
     (nil))

;; Function ns_name_uncompress (*__GI_ns_name_uncompress, funcdef_no=52, decl_uid=3534, cgraph_uid=58, symbol_order=62)

Partition 0: size 255 align 16
	tmp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Predictions for insn 47 bb 7
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 41.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 12 NOTE_INSN_DELETED)
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 91 [ msg ])
        (reg:DI 5 di [ msg ])) ns_name.c:575 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ eom ])
        (reg:DI 4 si [ eom ])) ns_name.c:575 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 93 [ src ])
        (reg:DI 1 dx [ src ])) ns_name.c:575 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 94 [ dst ])
        (reg:DI 2 cx [ dst ])) ns_name.c:575 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 95 [ dstsiz ])
        (reg:DI 37 r8 [ dstsiz ])) ns_name.c:575 -1
     (nil))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 9 2 (set (reg/f:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:575 -1
     (nil))
(insn 9 8 14 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.9742+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:575 -1
     (nil))
(insn 14 9 15 2 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:579 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 37 r8)
        (const_int 255 [0xff])) ns_name.c:579 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 2 cx)
        (reg:DI 97)) ns_name.c:579 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 93 [ src ])) ns_name.c:579 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ eom ])) ns_name.c:579 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ msg ])) ns_name.c:579 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_unpack") [flags 0x3]  <function_decl 0x2b85d2d95948 ns_name_unpack>) [0 ns_name_unpack S1 A8])
            (const_int 0 [0]))) ns_name.c:579 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_unpack") [flags 0x3]  <function_decl 0x2b85d2d95948 ns_name_unpack>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 21 20 22 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 0 ax)) ns_name.c:579 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ n ])
            (const_int -1 [0xffffffffffffffff]))) ns_name.c:579 -1
     (nil))
(jump_insn 23 22 35 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) ns_name.c:579 -1
     (int_list:REG_BR_PROB 9618 (nil))
 -> 27)
(code_label 35 23 24 4 288 "" [1 uses])
(note 24 35 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 24 25 4 (set (reg:SI 87 [ D.9741 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:580 -1
     (nil))
(jump_insn 25 10 26 4 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
(barrier 26 25 27)
(code_label 27 26 28 5 286 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:581 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 1 dx)
        (reg/v:DI 95 [ dstsiz ])) ns_name.c:581 -1
     (nil))
(insn 31 30 32 5 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ dst ])) ns_name.c:581 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg:DI 98)) ns_name.c:581 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_ntop") [flags 0x3]  <function_decl 0x2b85d2d95798 ns_name_ntop>) [0 ns_name_ntop S1 A8])
            (const_int 0 [0]))) ns_name.c:581 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_ntop") [flags 0x3]  <function_decl 0x2b85d2d95798 ns_name_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 34 33 36 5 (set (reg:SI 89 [ D.9741 ])
        (reg:SI 0 ax)) ns_name.c:581 -1
     (nil))
(insn 36 34 37 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.9741 ])
            (const_int -1 [0xffffffffffffffff]))) ns_name.c:581 -1
     (nil))
(jump_insn 37 36 53 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) ns_name.c:581 -1
     (int_list:REG_BR_PROB 159 (nil))
 -> 35)
(note 53 37 11 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 11 53 38 6 (set (reg:SI 87 [ D.9741 ])
        (reg/v:SI 88 [ n ])) -1
     (nil))
(code_label 38 11 39 7 287 "" [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 44 7 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9741 ])) -1
     (nil))
(insn 44 40 45 7 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) ns_name.c:584 -1
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 100)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:584 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.9742+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ns_name.c:584 -1
     (nil))
(jump_insn 47 46 54 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) ns_name.c:584 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 50)
(note 54 47 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 48 54 49 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ns_name.c:584 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 49 48 50)
(code_label 50 49 55 10 289 "" [1 uses])
(note 55 50 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 55 0 10 (use (reg/i:SI 0 ax)) ns_name.c:584 -1
     (nil))

;; Function ns_name_compress (*__GI_ns_name_compress, funcdef_no=53, decl_uid=3540, cgraph_uid=60, symbol_order=64)

Partition 0: size 255 align 16
	tmp

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Predictions for insn 38 bb 6
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 32.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 90 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:605 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ dst ])
        (reg:DI 4 si [ dst ])) ns_name.c:605 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 92 [ dstsiz ])
        (reg:DI 1 dx [ dstsiz ])) ns_name.c:605 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ dnptrs ])
        (reg:DI 2 cx [ dnptrs ])) ns_name.c:605 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 94 [ lastdnptr ])
        (reg:DI 37 r8 [ lastdnptr ])) ns_name.c:605 -1
     (nil))
(note 7 6 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 7 9 2 (set (reg/f:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:605 -1
     (nil))
(insn 9 8 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.9746+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:605 -1
     (nil))
(insn 12 9 13 2 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:608 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 255 [0xff])) ns_name.c:608 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 96)) ns_name.c:608 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ src ])) ns_name.c:608 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_pton") [flags 0x3]  <function_decl 0x2b85d2d95870 ns_name_pton>) [0 ns_name_pton S1 A8])
            (const_int 0 [0]))) ns_name.c:608 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_pton") [flags 0x3]  <function_decl 0x2b85d2d95870 ns_name_pton>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 17 16 18 2 (set (reg:SI 87 [ D.9745 ])
        (reg:SI 0 ax)) ns_name.c:608 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9745 ])
            (const_int -1 [0xffffffffffffffff]))) ns_name.c:608 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) ns_name.c:608 -1
     (int_list:REG_BR_PROB 382 (nil))
 -> 29)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (parallel [
            (set (reg:DI 97)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:610 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 37 r8)
        (reg/v/f:DI 94 [ lastdnptr ])) ns_name.c:610 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 2 cx)
        (reg/v/f:DI 93 [ dnptrs ])) ns_name.c:610 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 1 dx)
        (subreg:SI (reg/v:DI 92 [ dstsiz ]) 0)) ns_name.c:610 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ dst ])) ns_name.c:610 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 97)) ns_name.c:610 -1
     (nil))
(call_insn 27 26 28 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_pack") [flags 0x3]  <function_decl 0x2b85d2d95a20 ns_name_pack>) [0 ns_name_pack S1 A8])
            (const_int 0 [0]))) ns_name.c:610 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_pack") [flags 0x3]  <function_decl 0x2b85d2d95a20 ns_name_pack>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 28 27 29 4 (set (reg:SI 87 [ D.9745 ])
        (reg:SI 0 ax)) ns_name.c:610 -1
     (nil))
(code_label 29 28 30 5 296 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 35 5 (set (reg:SI 89 [ <retval> ])
        (reg:SI 87 [ D.9745 ])) -1
     (nil))
(insn 35 31 36 5 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) ns_name.c:611 -1
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b85d3294900 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [4  S8 A8])) ns_name.c:611 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.9746+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ns_name.c:611 -1
     (nil))
(jump_insn 38 37 44 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) ns_name.c:611 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 41)
(note 44 38 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 39 44 40 7 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ns_name.c:611 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b85d314d438 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 40 39 41)
(code_label 41 40 45 8 297 "" [1 uses])
(note 45 41 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 45 0 8 (use (reg/i:SI 0 ax)) ns_name.c:611 -1
     (nil))

;; Function ns_name_rollback (ns_name_rollback, funcdef_no=54, decl_uid=3547, cgraph_uid=62, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->12 redirected to 13
Edge 4->12 redirected to 13
Forwarding edge 5->6 to 9 failed.
Redirecting jump 26 from 12 to 13.
Edge 10->12 redirected to 13
Forwarding edge 11->12 to 13 failed.
Deleted label in block 12.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.
Forwarding edge 11->12 to 13 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 89 [ src ])
        (reg:DI 5 di [ src ])) ns_name.c:621 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ dnptrs ])
        (reg:DI 4 si [ dnptrs ])) ns_name.c:621 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ lastdnptr ])
        (reg:DI 1 dx [ lastdnptr ])) ns_name.c:621 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 90 [ dnptrs ])
            (reg/v/f:DI 91 [ lastdnptr ]))) ns_name.c:622 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) ns_name.c:622 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 42)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 88 [ D.9754 ])
        (mem/f:DI (reg/v/f:DI 90 [ dnptrs ]) [1 *dnptrs_3(D)+0 S8 A64])) ns_name.c:622 -1
     (nil))
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.9754 ])
            (const_int 0 [0]))) ns_name.c:622 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) ns_name.c:622 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 42)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ src ])
            (reg/f:DI 88 [ D.9754 ]))) ns_name.c:623 -1
     (nil))
(jump_insn 16 15 19 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) ns_name.c:623 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 23)
(note 19 16 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 17 19 18 6 (set (pc)
        (label_ref 28)) ns_name.c:623 -1
     (nil)
 -> 28)
(barrier 18 17 37)
(code_label 37 18 20 7 308 "" [1 uses])
(note 20 37 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 87 [ D.9754 ])
            (reg/v/f:DI 89 [ src ]))) ns_name.c:623 -1
     (nil))
(jump_insn 22 21 23 7 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) ns_name.c:623 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 30)
(code_label 23 22 24 8 305 "" [1 uses])
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 8 (set (mem/f:DI (reg/v/f:DI 90 [ dnptrs ]) [1 *dnptrs_12+0 S8 A64])
        (const_int 0 [0])) ns_name.c:624 -1
     (nil))
(jump_insn 26 25 27 8 (set (pc)
        (label_ref:DI 42)) ns_name.c:625 654 {jump}
     (nil)
 -> 42)
(barrier 27 26 28)
(code_label 28 27 29 9 306 "" [1 uses])
(note 29 28 30 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 30 29 31 10 307 "" [1 uses])
(note 31 30 32 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 10 (parallel [
            (set (reg/v/f:DI 90 [ dnptrs ])
                (plus:DI (reg/v/f:DI 90 [ dnptrs ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:627 -1
     (nil))
(insn 33 32 34 10 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 91 [ lastdnptr ])
            (reg/v/f:DI 90 [ dnptrs ]))) ns_name.c:622 -1
     (nil))
(jump_insn 34 33 35 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) ns_name.c:622 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 42)
(note 35 34 36 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 38 11 (set (reg/f:DI 87 [ D.9754 ])
        (mem/f:DI (reg/v/f:DI 90 [ dnptrs ]) [1 MEM[base: dnptrs_8, offset: 0B]+0 S8 A64])) ns_name.c:622 -1
     (nil))
(insn 38 36 39 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.9754 ])
            (const_int 0 [0]))) ns_name.c:622 -1
     (nil))
(jump_insn 39 38 41 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ns_name.c:622 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 37)
(note 41 39 42 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 42 41 43 13 303 "" [4 uses])
(note 43 42 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

;; Function ns_name_skip (*__GI_ns_name_skip, funcdef_no=55, decl_uid=3543, cgraph_uid=63, symbol_order=67)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Edge 3->14 redirected to 20
Purged edges from bb 23


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 15 failed.
Removing jump 86.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 96 [ ptrptr ])
        (reg:DI 5 di [ ptrptr ])) ns_name.c:639 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ eom ])
        (reg:DI 4 si [ eom ])) ns_name.c:639 -1
     (nil))
(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 4 13 2 (set (reg/v/f:DI 89 [ cp ])
        (mem/f:DI (reg/v/f:DI 96 [ ptrptr ]) [1 *ptrptr_7(D)+0 S8 A64])) ns_name.c:644 -1
     (nil))
(insn 13 12 14 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ cp ])
            (reg/v/f:DI 97 [ eom ]))) ns_name.c:645 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ns_name.c:645 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 76)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/v/f:DI 90 [ cp ])
                (plus:DI (reg/v/f:DI 89 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:645 -1
     (nil))
(insn 17 16 18 4 (set (reg:QI 88 [ D.9758 ])
        (mem:QI (reg/v/f:DI 89 [ cp ]) [0 *cp_8+0 S1 A8])) ns_name.c:645 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.9758 ])
            (const_int 0 [0]))) ns_name.c:645 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 96)
            (pc))) ns_name.c:645 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 96)
(note 20 19 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 73 20 21 6 323 "" [1 uses])
(note 21 73 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 6 (parallel [
            (set (reg:QI 98 [ D.9758 ])
                (and:QI (reg:QI 88 [ D.9758 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:647 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.9758 ])
            (const_int 64 [0x40]))) ns_name.c:647 -1
     (nil))
(jump_insn 24 23 97 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) ns_name.c:647 -1
     (int_list:REG_BR_PROB 2500 (nil))
 -> 37)
(note 97 24 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 97 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.9758 ])
            (const_int -64 [0xffffffffffffffc0]))) ns_name.c:647 -1
     (nil))
(jump_insn 26 25 98 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) ns_name.c:647 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 55)
(note 98 26 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 98 28 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.9758 ])
            (const_int 0 [0]))) ns_name.c:647 -1
     (nil))
(jump_insn 28 27 99 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) ns_name.c:647 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 31)
(note 99 28 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 29 99 30 9 (set (pc)
        (label_ref 60)) ns_name.c:647 -1
     (nil)
 -> 60)
(barrier 30 29 31)
(code_label 31 30 32 10 319 "" [1 uses])
(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 10 (set (reg:DI 99 [ D.9759 ])
        (zero_extend:DI (reg:QI 88 [ D.9758 ]))) ns_name.c:649 -1
     (nil))
(insn 34 33 35 10 (parallel [
            (set (reg/v/f:DI 89 [ cp ])
                (plus:DI (reg/v/f:DI 90 [ cp ])
                    (reg:DI 99 [ D.9759 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:649 -1
     (nil))
(jump_insn 35 34 36 10 (set (pc)
        (label_ref 66)) ns_name.c:650 -1
     (nil)
 -> 66)
(barrier 36 35 37)
(code_label 37 36 38 11 317 "" [1 uses])
(note 38 37 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 11 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ cp ])) ns_name.c:652 -1
     (nil))
(call_insn/i 40 39 41 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>) [0 labellen S1 A8])
            (const_int 0 [0]))) ns_name.c:652 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("labellen") [flags 0x3]  <function_decl 0x2b85d30e2a20 labellen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 11 (set (reg/v:SI 92 [ l ])
        (reg:SI 0 ax)) ns_name.c:652 -1
     (nil))
(insn 42 41 43 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 92 [ l ])
            (const_int 0 [0]))) ns_name.c:652 -1
     (nil))
(jump_insn 43 42 78 11 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ns_name.c:652 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 49)
(code_label 78 43 44 12 324 "" [1 uses])
(note 44 78 45 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 12 (set (reg:DI 100)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:653 -1
     (nil))
(insn 46 45 7 12 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 100)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:653 -1
     (nil))
(insn 7 46 47 12 (set (reg:SI 87 [ D.9757 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:654 -1
     (nil))
(jump_insn 47 7 48 12 (set (pc)
        (label_ref 83)) ns_name.c:654 -1
     (nil)
 -> 83)
(barrier 48 47 49)
(code_label 49 48 50 13 321 "" [1 uses])
(note 50 49 51 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 13 (set (reg:DI 101 [ D.9759 ])
        (sign_extend:DI (reg/v:SI 92 [ l ]))) ns_name.c:656 -1
     (nil))
(insn 52 51 53 13 (parallel [
            (set (reg/v/f:DI 89 [ cp ])
                (plus:DI (reg/v/f:DI 90 [ cp ])
                    (reg:DI 101 [ D.9759 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:656 -1
     (nil))
(jump_insn 53 52 54 13 (set (pc)
        (label_ref 66)) ns_name.c:657 -1
     (nil)
 -> 66)
(barrier 54 53 55)
(code_label 55 54 56 14 318 "" [1 uses])
(note 56 55 57 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 14 (parallel [
            (set (reg/v/f:DI 89 [ cp ])
                (plus:DI (reg/v/f:DI 89 [ cp ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:659 -1
     (nil))
(jump_insn 58 57 59 14 (set (pc)
        (label_ref 76)) ns_name.c:665 -1
     (nil)
 -> 76)
(barrier 59 58 60)
(code_label 60 59 61 15 316 "" [1 uses])
(note 61 60 62 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 15 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b85d2f476c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [4  S8 A8])) ns_name.c:662 -1
     (nil))
(insn 63 62 8 15 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 102)) [2 errno+0 S4 A32])
        (const_int 90 [0x5a])) ns_name.c:662 -1
     (nil))
(insn 8 63 64 15 (set (reg:SI 87 [ D.9757 ])
        (const_int -1 [0xffffffffffffffff])) ns_name.c:663 -1
     (nil))
(jump_insn 64 8 65 15 (set (pc)
        (label_ref 83)) ns_name.c:663 -1
     (nil)
 -> 83)
(barrier 65 64 66)
(code_label 66 65 67 16 320 "" [2 uses])
(note 67 66 68 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 16 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 97 [ eom ])
            (reg/v/f:DI 89 [ cp ]))) ns_name.c:645 -1
     (nil))
(jump_insn 69 68 70 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ns_name.c:645 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 76)
(note 70 69 71 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 17 (parallel [
            (set (reg/v/f:DI 90 [ cp ])
                (plus:DI (reg/v/f:DI 89 [ cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_name.c:645 -1
     (nil))
(insn 72 71 74 17 (set (reg:QI 88 [ D.9758 ])
        (mem:QI (reg/v/f:DI 89 [ cp ]) [0 *cp_10+0 S1 A8])) ns_name.c:645 -1
     (nil))
(insn 74 72 75 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.9758 ])
            (const_int 0 [0]))) ns_name.c:645 -1
     (nil))
(jump_insn 75 74 92 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) ns_name.c:645 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 73)
(note 92 75 5 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 5 92 93 18 (set (reg/v/f:DI 89 [ cp ])
        (reg/v/f:DI 90 [ cp ])) ns_name.c:645 -1
     (nil))
(jump_insn 93 5 94 18 (set (pc)
        (label_ref 76)) -1
     (nil)
 -> 76)
(barrier 94 93 96)
(code_label 96 94 95 19 325 "" [1 uses])
(note 95 96 6 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 6 95 76 19 (set (reg/v/f:DI 89 [ cp ])
        (reg/v/f:DI 90 [ cp ])) ns_name.c:645 -1
     (nil))
(code_label 76 6 77 20 315 "" [4 uses])
(note 77 76 79 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 79 77 80 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 89 [ cp ])
            (reg/v/f:DI 97 [ eom ]))) ns_name.c:667 -1
     (nil))
(jump_insn 80 79 81 20 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) ns_name.c:667 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 78)
(note 81 80 82 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 9 21 (set (mem/f:DI (reg/v/f:DI 96 [ ptrptr ]) [1 *ptrptr_7(D)+0 S8 A64])
        (reg/v/f:DI 89 [ cp ])) ns_name.c:671 -1
     (nil))
(insn 9 82 83 21 (set (reg:SI 87 [ D.9757 ])
        (const_int 0 [0])) ns_name.c:672 -1
     (nil))
(code_label 83 9 84 22 322 "" [2 uses])
(note 84 83 85 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 89 22 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.9757 ])) -1
     (nil))
(insn 89 85 90 22 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) ns_name.c:673 -1
     (nil))
(insn 90 89 0 22 (use (reg/i:SI 0 ax)) ns_name.c:673 -1
     (nil))
