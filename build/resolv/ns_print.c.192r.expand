
;; Function prune_origin (prune_origin, funcdef_no=49, decl_uid=8696, cgraph_uid=51, symbol_order=53)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Edge 9->13 redirected to 23
Edge 10->12 redirected to 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 10 failed.
Forwarding edge 6->7 to 20 failed.
Forwarding edge 12->13 to 17 failed.
Forwarding edge 17->18 to 20 failed.
Removing jump 85.
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 10 failed.
Forwarding edge 6->7 to 20 failed.
Forwarding edge 12->13 to 17 failed.
Forwarding edge 17->18 to 20 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 103 [ name ])
        (reg:DI 5 di [ name ])) ns_print.c:740 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 104 [ origin ])
        (reg:DI 4 si [ origin ])) ns_print.c:740 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 8 2 (set (reg:QI 90 [ D.9778 ])
        (mem:QI (reg/v/f:DI 103 [ name ]) [0 *name_8(D)+0 S1 A8])) -1
     (nil))
(insn 8 11 12 2 (set (reg/v/f:DI 88 [ name ])
        (reg/v/f:DI 103 [ name ])) ns_print.c:743 -1
     (nil))
(jump_insn 12 8 13 2 (set (pc)
        (label_ref 75)) ns_print.c:743 -1
     (nil)
 -> 75)
(barrier 13 12 77)
(code_label 77 13 14 4 11 "" [1 uses])
(note 14 77 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ origin ])
            (const_int 0 [0]))) ns_print.c:744 -1
     (nil))
(jump_insn 16 15 19 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) ns_print.c:744 -1
     (int_list:REG_BR_PROB 6983 (nil))
 -> 27)
(note 19 16 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 17 19 18 5 (set (pc)
        (label_ref 44)) -1
     (nil)
 -> 44)
(barrier 18 17 33)
(code_label 33 18 20 6 6 "" [1 uses])
(note 20 33 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (set (reg:QI 90 [ D.9778 ])
        (mem:QI (reg/v/f:DI 88 [ name ]) [0 *name_3+0 S1 A8])) ns_print.c:746 -1
     (nil))
(insn 22 21 23 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 0 [0]))) ns_print.c:746 -1
     (nil))
(jump_insn 23 22 26 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) ns_print.c:746 -1
     (int_list:REG_BR_PROB 9564 (nil))
 -> 44)
(note 26 23 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 24 26 25 7 (set (pc)
        (label_ref 73)) ns_print.c:746 -1
     (nil)
 -> 73)
(barrier 25 24 27)
(code_label 27 25 28 8 3 "" [1 uses])
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ origin ])) ns_print.c:744 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ name ])) ns_print.c:744 -1
     (nil))
(call_insn 31 30 32 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_samename") [flags 0x43]  <function_decl 0x2b5d795da948 ns_samename>) [0 ns_samename S1 A8])
            (const_int 0 [0]))) ns_print.c:744 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_samename") [flags 0x43]  <function_decl 0x2b5d795da948 ns_samename>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 34 8 (set (reg:SI 92 [ D.9779 ])
        (reg:SI 0 ax)) ns_print.c:744 -1
     (nil))
(insn 34 32 35 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.9779 ])
            (const_int 1 [0x1]))) ns_print.c:744 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) ns_print.c:744 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 33)
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (parallel [
            (set (reg:DI 105 [ D.9780 ])
                (minus:DI (reg/v/f:DI 88 [ name ])
                    (reg/v/f:DI 103 [ name ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:745 -1
     (nil))
(insn 38 37 39 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 88 [ name ])
            (reg/v/f:DI 103 [ name ]))) ns_print.c:745 -1
     (nil))
(insn 39 38 40 9 (set (reg:QI 107)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) ns_print.c:745 -1
     (nil))
(insn 40 39 41 9 (set (reg:DI 106 [ D.9781 ])
        (zero_extend:DI (reg:QI 107))) ns_print.c:745 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:DI 89 [ D.9777 ])
                (minus:DI (reg:DI 105 [ D.9780 ])
                    (reg:DI 106 [ D.9781 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:745 -1
     (nil))
(jump_insn 42 41 43 9 (set (pc)
        (label_ref 82)) ns_print.c:745 -1
     (nil)
 -> 82)
(barrier 43 42 44)
(code_label 44 43 45 10 4 "" [2 uses])
(note 45 44 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(code_label 70 45 46 11 10 "" [1 uses])
(note 46 70 47 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 92 [0x5c]))) ns_print.c:747 -1
     (nil))
(jump_insn 48 47 49 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) ns_print.c:747 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 57)
(note 49 48 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 12 (parallel [
            (set (reg/v/f:DI 87 [ name ])
                (plus:DI (reg/v/f:DI 88 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:748 -1
     (nil))
(insn 51 50 52 12 (set (reg:QI 90 [ D.9778 ])
        (mem:QI (plus:DI (reg/v/f:DI 88 [ name ])
                (const_int 1 [0x1])) [0 MEM[(const char *)name_36 + 1B]+0 S1 A8])) ns_print.c:750 -1
     (nil))
(insn 52 51 53 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 0 [0]))) ns_print.c:750 -1
     (nil))
(jump_insn 53 52 56 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) ns_print.c:750 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 95)
(note 56 53 54 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 54 56 55 13 (set (pc)
        (label_ref 66)) -1
     (nil)
 -> 66)
(barrier 55 54 57)
(code_label 57 55 58 14 8 "" [1 uses])
(note 58 57 59 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 46 [0x2e]))) ns_print.c:752 -1
     (nil))
(jump_insn 60 59 61 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) ns_print.c:752 612 {*jcc_1}
     (int_list:REG_BR_PROB 9700 (nil))
 -> 97)
(note 61 60 62 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 15 (parallel [
            (set (reg/v/f:DI 91 [ name ])
                (plus:DI (reg/v/f:DI 88 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:753 -1
     (nil))
(insn 63 62 7 15 (set (reg:QI 90 [ D.9778 ])
        (mem:QI (plus:DI (reg/v/f:DI 88 [ name ])
                (const_int 1 [0x1])) [0 MEM[(const char *)name_36 + 1B]+0 S1 A8])) -1
     (nil))
(insn 7 63 64 15 (set (reg/v/f:DI 88 [ name ])
        (reg/v/f:DI 91 [ name ])) ns_print.c:753 -1
     (nil))
(jump_insn 64 7 65 15 (set (pc)
        (label_ref 73)) ns_print.c:754 -1
     (nil)
 -> 73)
(barrier 65 64 97)
(code_label 97 65 96 16 13 "" [1 uses])
(note 96 97 5 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 5 96 66 16 (set (reg/v/f:DI 87 [ name ])
        (reg/v/f:DI 88 [ name ])) -1
     (nil))
(code_label 66 5 67 17 9 "" [1 uses])
(note 67 66 68 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 17 (parallel [
            (set (reg/v/f:DI 88 [ name ])
                (plus:DI (reg/v/f:DI 87 [ name ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:756 -1
     (nil))
(insn 69 68 71 17 (set (reg:QI 90 [ D.9778 ])
        (mem:QI (plus:DI (reg/v/f:DI 87 [ name ])
                (const_int 1 [0x1])) [0 MEM[(const char *)name_1 + 1B]+0 S1 A8])) ns_print.c:746 -1
     (nil))
(insn 71 69 72 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 0 [0]))) ns_print.c:746 -1
     (nil))
(jump_insn 72 71 91 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ns_print.c:746 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 70)
(note 91 72 92 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 92 91 93 18 (set (pc)
        (label_ref 73)) -1
     (nil)
 -> 73)
(barrier 93 92 95)
(code_label 95 93 94 19 12 "" [1 uses])
(note 94 95 6 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 6 94 73 19 (set (reg/v/f:DI 88 [ name ])
        (reg/v/f:DI 87 [ name ])) ns_print.c:748 -1
     (nil))
(code_label 73 6 74 20 5 "" [3 uses])
(note 74 73 75 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(code_label 75 74 76 21 2 "" [1 uses])
(note 76 75 78 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 78 76 79 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.9778 ])
            (const_int 0 [0]))) ns_print.c:743 -1
     (nil))
(jump_insn 79 78 80 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) ns_print.c:743 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 77)
(note 80 79 81 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 22 (parallel [
            (set (reg:DI 89 [ D.9777 ])
                (minus:DI (reg/v/f:DI 88 [ name ])
                    (reg/v/f:DI 103 [ name ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:759 -1
     (nil))
(code_label 82 81 83 23 7 "" [1 uses])
(note 83 82 84 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 88 23 (set (reg:DI 102 [ <retval> ])
        (reg:DI 89 [ D.9777 ])) -1
     (nil))
(insn 88 84 89 23 (set (reg/i:DI 0 ax)
        (reg:DI 102 [ <retval> ])) ns_print.c:760 -1
     (nil))
(insn 89 88 0 23 (use (reg/i:DI 0 ax)) ns_print.c:760 -1
     (nil))

;; Function addlen.part.0 (addlen.part.0, funcdef_no=58, decl_uid=9715, cgraph_uid=58, symbol_order=85) (unlikely executed)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("__PRETTY_FUNCTION__.8925") [flags 0x2]  <var_decl 0x2b5d79979360 __PRETTY_FUNCTION__>)) ns_print.c:853 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 1 dx)
        (const_int 853 [0x355])) ns_print.c:853 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b5d79a9c120 *.LC1>)) ns_print.c:853 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2b5d79a9c1b0 *.LC2>)) ns_print.c:853 -1
     (nil))
(call_insn 9 8 10 2 (call (mem:QI (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2b5d7962f870 __assert_fail>) [0 __assert_fail S1 A8])
        (const_int 0 [0])) ns_print.c:853 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__assert_fail") [flags 0x41]  <function_decl 0x2b5d7962f870 __assert_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 10 9 0)

;; Function addstr (addstr, funcdef_no=53, decl_uid=8717, cgraph_uid=55, symbol_order=57)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 47.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 95 [ src ])
        (reg:DI 5 di [ src ])) ns_print.c:859 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 96 [ len ])
        (reg:DI 4 si [ len ])) ns_print.c:859 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ buf ])
        (reg:DI 1 dx [ buf ])) ns_print.c:859 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 98 [ buflen ])
        (reg:DI 2 cx [ buflen ])) ns_print.c:859 -1
     (nil))
(note 6 5 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 6 12 2 (set (reg:CC 17 flags)
        (compare:CC (mem:DI (reg/v/f:DI 98 [ buflen ]) [2 *buflen_4(D)+0 S8 A64])
            (reg/v:DI 96 [ len ]))) ns_print.c:860 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) ns_print.c:860 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 18)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b5d797896c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [8  S8 A8])) ns_print.c:861 -1
     (nil))
(insn 15 14 7 4 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 99)) [3 errno+0 S4 A32])
        (const_int 28 [0x1c])) ns_print.c:861 -1
     (nil))
(insn 7 15 16 4 (set (reg:SI 87 [ D.9788 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:862 -1
     (nil))
(jump_insn 16 7 17 4 (set (pc)
        (label_ref 44)) ns_print.c:862 -1
     (nil)
 -> 44)
(barrier 17 16 18)
(code_label 18 17 19 5 24 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg/f:DI 100)
        (mem/f:DI (reg/v/f:DI 97 [ buf ]) [1 *buf_8(D)+0 S8 A64])) ns_print.c:864 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 101)
        (reg/f:DI 100)) ns_print.c:864 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 102)
        (reg/v/f:DI 95 [ src ])) ns_print.c:864 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 103)
        (reg/v:DI 96 [ len ])) ns_print.c:864 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 1 dx)
        (reg:DI 103)) ns_print.c:864 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 4 si)
        (reg:DI 102)) ns_print.c:864 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (reg:DI 101)) ns_print.c:864 -1
     (nil))
(call_insn 27 26 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b5d79a4b000 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) ns_print.c:864 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2b5d79a4b000 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 28 27 29 5 (set (reg:DI 104)
        (reg:DI 0 ax)) ns_print.c:864 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 105)
        (reg:DI 104)) ns_print.c:864 -1
     (nil))
(insn 30 29 31 5 (set (reg:DI 90 [ D.9789 ])
        (mem:DI (reg/v/f:DI 98 [ buflen ]) [2 *buflen_4(D)+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 31 30 32 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 96 [ len ])
            (reg:DI 90 [ D.9789 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 36)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn/c/i 34 33 35 6 (call (mem:QI (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>) [0 addlen.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 35 34 36)
(code_label 36 35 37 7 26 "" [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:DI 106)
        (mem/f:DI (reg/v/f:DI 97 [ buf ]) [1 *buf_8(D)+0 S8 A64])) ns_print.c:854 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg/f:DI 92 [ D.9790 ])
                (plus:DI (reg/v:DI 96 [ len ])
                    (reg/f:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 97 [ buf ]) [1 *buf_8(D)+0 S8 A64])
            (reg/v:DI 96 [ len ]))
        (nil)))
(insn 40 39 41 7 (set (mem/f:DI (reg/v/f:DI 97 [ buf ]) [1 *buf_8(D)+0 S8 A64])
        (reg/f:DI 92 [ D.9790 ])) ns_print.c:854 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:DI 107)
                (minus:DI (reg:DI 90 [ D.9789 ])
                    (reg/v:DI 96 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 42 41 43 7 (set (mem:DI (reg/v/f:DI 98 [ buflen ]) [2 *buflen_4(D)+0 S8 A64])
        (reg:DI 107)) ns_print.c:855 -1
     (nil))
(insn 43 42 8 7 (set (mem:QI (reg/f:DI 92 [ D.9790 ]) [0 *_16+0 S1 A8])
        (const_int 0 [0])) ns_print.c:866 -1
     (nil))
(insn 8 43 44 7 (set (reg:SI 87 [ D.9788 ])
        (const_int 0 [0])) ns_print.c:867 -1
     (nil))
(code_label 44 8 45 8 25 "" [1 uses])
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 50 8 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.9788 ])) -1
     (nil))
(insn 50 46 51 8 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) ns_print.c:868 -1
     (nil))
(insn 51 50 0 8 (use (reg/i:SI 0 ax)) ns_print.c:868 -1
     (nil))

;; Function charstr (charstr, funcdef_no=50, decl_uid=8701, cgraph_uid=52, symbol_order=54)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14
Edge 3->11 redirected to 20
Edge 4->11 redirected to 21
Edge 5->11 redirected to 22


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 13 failed.
Forwarding edge 11->12 to 9 failed.
Forwarding edge 13->14 to 18 failed.
Removing jump 146.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 13 failed.
Forwarding edge 11->12 to 9 failed.
Forwarding edge 13->14 to 18 failed.


;;
;; Full RTL generated for this function:
;;
(note 40 0 50 NOTE_INSN_DELETED)
(note 50 40 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 41 50 42 2 (set (reg/v/f:DI 150 [ rdata ])
        (reg:DI 5 di [ rdata ])) ns_print.c:774 -1
     (nil))
(insn 42 41 43 2 (set (reg/v/f:DI 151 [ edata ])
        (reg:DI 4 si [ edata ])) ns_print.c:774 -1
     (nil))
(insn 43 42 44 2 (set (reg/v/f:DI 152 [ buf ])
        (reg:DI 1 dx [ buf ])) ns_print.c:774 -1
     (nil))
(insn 44 43 45 2 (set (reg/v/f:DI 153 [ buflen ])
        (reg:DI 2 cx [ buflen ])) ns_print.c:774 -1
     (nil))
(note 45 44 52 2 NOTE_INSN_FUNCTION_BEG)
(insn 52 45 53 2 (set (reg/v:DI 131 [ save_buflen ])
        (mem:DI (reg/v/f:DI 153 [ buflen ]) [2 *buflen_12(D)+0 S8 A64])) ns_print.c:776 -1
     (nil))
(insn 53 52 54 2 (set (reg/v/f:DI 132 [ save_buf ])
        (mem/f:DI (reg/v/f:DI 152 [ buf ]) [1 *buf_14(D)+0 S8 A64])) ns_print.c:777 -1
     (nil))
(insn 54 53 55 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 153 [ buflen ])) ns_print.c:779 -1
     (nil))
(insn 55 54 56 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 152 [ buf ])) ns_print.c:779 -1
     (nil))
(insn 56 55 57 2 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:779 -1
     (nil))
(insn 57 56 58 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b5d79aac990 *.LC5>)) ns_print.c:779 -1
     (nil))
(call_insn 58 57 59 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:779 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 59 58 60 2 (set (reg:SI 133 [ D.9808 ])
        (reg:SI 0 ax)) ns_print.c:779 -1
     (nil))
(insn 60 59 61 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 133 [ D.9808 ])
            (const_int 0 [0]))) ns_print.c:779 -1
     (nil))
(jump_insn 61 60 62 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ns_print.c:779 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 137)
(note 62 61 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 150 [ rdata ])
            (reg/v/f:DI 151 [ edata ]))) ns_print.c:781 -1
     (nil))
(jump_insn 64 63 65 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) ns_print.c:781 612 {*jcc_1}
     (int_list:REG_BR_PROB 2900 (nil))
 -> 156)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 5 (set (reg:QI 134 [ D.9810 ])
        (mem:QI (reg/v/f:DI 150 [ rdata ]) [0 *rdata_10(D)+0 S1 A8])) ns_print.c:782 -1
     (nil))
(insn 67 66 68 5 (set (reg:DI 154 [ D.9807 ])
        (zero_extend:DI (reg:QI 134 [ D.9810 ]))) ns_print.c:784 -1
     (nil))
(insn 68 67 69 5 (parallel [
            (set (reg:DI 155 [ D.9807 ])
                (plus:DI (reg:DI 154 [ D.9807 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:784 -1
     (nil))
(insn 69 68 70 5 (parallel [
            (set (reg:DI 156 [ D.9811 ])
                (plus:DI (reg/v/f:DI 150 [ rdata ])
                    (reg:DI 155 [ D.9807 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:784 -1
     (nil))
(insn 70 69 71 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 151 [ edata ])
            (reg:DI 156 [ D.9811 ]))) ns_print.c:784 -1
     (nil))
(jump_insn 71 70 72 5 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) ns_print.c:784 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 160)
(note 72 71 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 6 (parallel [
            (set (reg/v/f:DI 143 [ rdata ])
                (plus:DI (reg/v/f:DI 150 [ rdata ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:785 -1
     (nil))
(insn 74 73 75 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.9810 ])
            (const_int 0 [0]))) ns_print.c:786 -1
     (nil))
(jump_insn 75 74 76 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 164)
            (pc))) ns_print.c:786 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 164)
(note 76 75 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 7 (set (reg:SI 157 [ D.9809 ])
        (zero_extend:SI (reg:QI 134 [ D.9810 ]))) -1
     (nil))
(insn 78 77 79 7 (parallel [
            (set (reg:SI 158 [ D.9809 ])
                (plus:SI (reg:SI 157 [ D.9809 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 79 78 80 7 (set (reg:DI 159 [ D.9807 ])
        (zero_extend:DI (reg:SI 158 [ D.9809 ]))) -1
     (nil))
(insn 80 79 81 7 (parallel [
            (set (reg:DI 160 [ D.9807 ])
                (plus:DI (reg:DI 159 [ D.9807 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 81 80 119 7 (parallel [
            (set (reg/v/f:DI 127 [ rdata ])
                (plus:DI (reg/v/f:DI 150 [ rdata ])
                    (reg:DI 160 [ D.9807 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 119 81 82 8 36 "" [1 uses])
(note 82 119 83 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 8 (set (reg:SI 161 [ D.9808 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 143 [ rdata ]) [0 MEM[base: rdata_46, offset: 0B]+0 S1 A8]))) ns_print.c:787 -1
     (nil))
(insn 84 83 85 8 (set (reg:SI 4 si)
        (reg:SI 161 [ D.9808 ])) ns_print.c:787 -1
     (nil))
(insn 85 84 86 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2b5d79aaca20 *.LC6>)) ns_print.c:787 -1
     (nil))
(call_insn/i 86 85 87 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b5d79411d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) ns_print.c:787 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b5d79411d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 87 86 88 8 (set (reg/f:DI 140 [ D.9812 ])
        (reg:DI 0 ax)) ns_print.c:787 -1
     (nil))
(insn 88 87 89 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 140 [ D.9812 ])
            (const_int 0 [0]))) ns_print.c:787 -1
     (nil))
(jump_insn 89 88 112 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) ns_print.c:787 -1
     (int_list:REG_BR_PROB 8501 (nil))
 -> 102)
(code_label 112 89 90 9 35 "" [1 uses])
(note 90 112 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 153 [ buflen ])) ns_print.c:790 -1
     (nil))
(insn 92 91 93 9 (set (reg:DI 1 dx)
        (reg/v/f:DI 152 [ buf ])) ns_print.c:790 -1
     (nil))
(insn 93 92 94 9 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:790 -1
     (nil))
(insn 94 93 95 9 (set (reg:DI 5 di)
        (reg/v/f:DI 143 [ rdata ])) ns_print.c:790 -1
     (nil))
(call_insn 95 94 96 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:790 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 96 95 97 9 (set (reg:SI 142 [ D.9808 ])
        (reg:SI 0 ax)) ns_print.c:790 -1
     (nil))
(insn 97 96 98 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 142 [ D.9808 ])
            (const_int 0 [0]))) ns_print.c:790 -1
     (nil))
(jump_insn 98 97 101 9 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ns_print.c:790 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 137)
(note 101 98 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 99 101 100 10 (set (pc)
        (label_ref 116)) -1
     (nil)
 -> 116)
(barrier 100 99 102)
(code_label 102 100 103 11 33 "" [1 uses])
(note 103 102 104 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 11 (set (reg:DI 2 cx)
        (reg/v/f:DI 153 [ buflen ])) ns_print.c:788 -1
     (nil))
(insn 105 104 106 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 152 [ buf ])) ns_print.c:788 -1
     (nil))
(insn 106 105 107 11 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:788 -1
     (nil))
(insn 107 106 108 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2b5d79aacab0 *.LC7>)) ns_print.c:788 -1
     (nil))
(call_insn 108 107 109 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:788 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 109 108 110 11 (set (reg:SI 141 [ D.9808 ])
        (reg:SI 0 ax)) ns_print.c:788 -1
     (nil))
(insn 110 109 111 11 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 141 [ D.9808 ])
            (const_int 0 [0]))) ns_print.c:788 -1
     (nil))
(jump_insn 111 110 115 11 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ns_print.c:788 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 137)
(note 115 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 113 115 114 12 (set (pc)
        (label_ref 112)) -1
     (nil)
 -> 112)
(barrier 114 113 116)
(code_label 116 114 117 13 34 "" [1 uses])
(note 117 116 118 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 120 13 (parallel [
            (set (reg/v/f:DI 143 [ rdata ])
                (plus:DI (reg/v/f:DI 143 [ rdata ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:793 -1
     (nil))
(insn 120 118 121 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 143 [ rdata ])
            (reg/v/f:DI 127 [ rdata ]))) ns_print.c:786 -1
     (nil))
(jump_insn 121 120 152 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) ns_print.c:786 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 119)
(note 152 121 153 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 153 152 154 14 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 154 153 156)
(code_label 156 154 155 15 38 "" [1 uses])
(note 155 156 48 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 48 155 157 15 (set (reg/v/f:DI 127 [ rdata ])
        (reg/v/f:DI 150 [ rdata ])) -1
     (nil))
(jump_insn 157 48 158 15 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 158 157 160)
(code_label 160 158 159 16 39 "" [1 uses])
(note 159 160 46 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 46 159 161 16 (set (reg/v/f:DI 127 [ rdata ])
        (reg/v/f:DI 150 [ rdata ])) -1
     (nil))
(jump_insn 161 46 162 16 (set (pc)
        (label_ref 122)) -1
     (nil)
 -> 122)
(barrier 162 161 164)
(code_label 164 162 163 17 40 "" [1 uses])
(note 163 164 47 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 47 163 122 17 (set (reg/v/f:DI 127 [ rdata ])
        (reg/v/f:DI 143 [ rdata ])) ns_print.c:785 -1
     (nil))
(code_label 122 47 123 18 32 "" [3 uses])
(note 123 122 124 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 153 [ buflen ])) ns_print.c:797 -1
     (nil))
(insn 125 124 126 18 (set (reg:DI 1 dx)
        (reg/v/f:DI 152 [ buf ])) ns_print.c:797 -1
     (nil))
(insn 126 125 127 18 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:797 -1
     (nil))
(insn 127 126 128 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2b5d79aac990 *.LC5>)) ns_print.c:797 -1
     (nil))
(call_insn 128 127 129 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:797 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 129 128 130 18 (set (reg:SI 144 [ D.9808 ])
        (reg:SI 0 ax)) ns_print.c:797 -1
     (nil))
(insn 130 129 131 18 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 144 [ D.9808 ])
            (const_int 0 [0]))) ns_print.c:797 -1
     (nil))
(jump_insn 131 130 132 18 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) ns_print.c:797 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 137)
(note 132 131 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 19 (parallel [
            (set (reg:DI 162 [ D.9813 ])
                (minus:DI (reg/v/f:DI 127 [ rdata ])
                    (reg/v/f:DI 150 [ rdata ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:799 -1
     (nil))
(insn 134 133 135 19 (set (reg:SI 128 [ D.9808 ])
        (subreg:SI (reg:DI 162 [ D.9813 ]) 0)) ns_print.c:799 -1
     (nil))
(jump_insn 135 134 136 19 (set (pc)
        (label_ref 143)) ns_print.c:799 -1
     (nil)
 -> 143)
(barrier 136 135 137)
(code_label 137 136 138 20 31 "" [4 uses])
(note 138 137 139 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 20 (set (reg:DI 163)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b5d797896c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [8  S8 A8])) ns_print.c:801 -1
     (nil))
(insn 140 139 141 20 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 163)) [3 errno+0 S4 A32])
        (const_int 28 [0x1c])) ns_print.c:801 -1
     (nil))
(insn 141 140 142 20 (set (mem/f:DI (reg/v/f:DI 152 [ buf ]) [1 *buf_14(D)+0 S8 A64])
        (reg/v/f:DI 132 [ save_buf ])) ns_print.c:802 -1
     (nil))
(insn 142 141 49 20 (set (mem:DI (reg/v/f:DI 153 [ buflen ]) [2 *buflen_12(D)+0 S8 A64])
        (reg/v:DI 131 [ save_buflen ])) ns_print.c:803 -1
     (nil))
(insn 49 142 143 20 (set (reg:SI 128 [ D.9808 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:804 -1
     (nil))
(code_label 143 49 144 21 37 "" [1 uses])
(note 144 143 145 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 149 21 (set (reg:SI 149 [ <retval> ])
        (reg:SI 128 [ D.9808 ])) -1
     (nil))
(insn 149 145 150 21 (set (reg/i:SI 0 ax)
        (reg:SI 149 [ <retval> ])) ns_print.c:805 -1
     (nil))
(insn 150 149 0 21 (use (reg/i:SI 0 ax)) ns_print.c:805 -1
     (nil))

;; Function addname (addname, funcdef_no=51, decl_uid=8708, cgraph_uid=53, symbol_order=55)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19
Edge 9->15 redirected to 22
Edge 10->15 redirected to 23
Edge 11->15 redirected to 24
Edge 12->15 redirected to 25


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 110.
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 15 NOTE_INSN_DELETED)
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 15 3 2 (set (reg/v/f:DI 121 [ msg ])
        (reg:DI 5 di [ msg ])) ns_print.c:811 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 122 [ msglen ])
        (reg:DI 4 si [ msglen ])) ns_print.c:811 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 123 [ pp ])
        (reg:DI 1 dx [ pp ])) ns_print.c:811 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 124 [ origin ])
        (reg:DI 2 cx [ origin ])) ns_print.c:811 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 125 [ buf ])
        (reg:DI 37 r8 [ buf ])) ns_print.c:811 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 126 [ buflen ])
        (reg:DI 38 r9 [ buflen ])) ns_print.c:811 -1
     (nil))
(note 8 7 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 8 18 2 (set (reg/v:DI 89 [ save_buflen ])
        (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64])) ns_print.c:812 -1
     (nil))
(insn 18 17 19 2 (set (reg/v/f:DI 90 [ save_buf ])
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:813 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 127 [ D.9821 ])
                (plus:DI (reg/v/f:DI 121 [ msg ])
                    (reg/v:DI 122 [ msglen ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:816 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 37 r8)
        (subreg:SI (reg/v:DI 89 [ save_buflen ]) 0)) ns_print.c:816 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 90 [ save_buf ])) ns_print.c:816 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (mem/f:DI (reg/v/f:DI 123 [ pp ]) [1 *pp_12(D)+0 S8 A64])) ns_print.c:816 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (reg:DI 127 [ D.9821 ])) ns_print.c:816 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg/v/f:DI 121 [ msg ])) ns_print.c:816 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dn_expand") [flags 0x43]  <function_decl 0x2b5d798f6948 __dn_expand>) [0 __dn_expand S1 A8])
            (const_int 0 [0]))) ns_print.c:816 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dn_expand") [flags 0x43]  <function_decl 0x2b5d798f6948 __dn_expand>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (nil)))))))
(insn 26 25 27 2 (set (reg/v:SI 94 [ n ])
        (reg:SI 0 ax)) ns_print.c:816 -1
     (nil))
(insn 27 26 28 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 94 [ n ])
            (const_int 0 [0]))) ns_print.c:817 -1
     (nil))
(jump_insn 28 27 29 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) ns_print.c:817 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 101)
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg:DI 4 si)
        (reg/v/f:DI 124 [ origin ])) ns_print.c:819 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:819 -1
     (nil))
(call_insn 32 31 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("prune_origin") [flags 0x3]  <function_decl 0x2b5d79924bd0 prune_origin>) [0 prune_origin S1 A8])
            (const_int 0 [0]))) ns_print.c:819 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("prune_origin") [flags 0x3]  <function_decl 0x2b5d79924bd0 prune_origin>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 33 32 34 4 (set (reg/v:DI 96 [ newlen ])
        (reg:DI 0 ax)) ns_print.c:819 -1
     (nil))
(insn 34 33 35 4 (set (reg/f:DI 97 [ D.9822 ])
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:820 -1
     (nil))
(insn 35 34 36 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 97 [ D.9822 ]) [0 *_23+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:820 -1
     (nil))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) ns_print.c:820 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 70)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 96 [ newlen ])
            (const_int 0 [0]))) ns_print.c:822 -1
     (nil))
(jump_insn 39 38 40 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) ns_print.c:822 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 49)
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg:CC 17 flags)
        (compare:CC (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64])
            (const_int 1 [0x1]))) ns_print.c:824 -1
     (nil))
(jump_insn 42 41 43 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) ns_print.c:824 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 101)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (mem:QI (reg/f:DI 97 [ D.9822 ]) [0 *_23+0 S1 A8])
        (const_int 64 [0x40])) ns_print.c:826 -1
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 100 [ D.9822 ])
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:827 -1
     (nil))
(insn 46 45 9 7 (set (mem:QI (plus:DI (reg/f:DI 100 [ D.9822 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_30 + 1B]+0 S1 A8])
        (const_int 0 [0])) ns_print.c:827 -1
     (nil))
(insn 9 46 47 7 (set (reg/v:DI 87 [ newlen ])
        (const_int 1 [0x1])) ns_print.c:826 -1
     (nil))
(jump_insn 47 9 48 7 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
(barrier 48 47 49)
(code_label 49 48 50 8 47 "" [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ origin ])
            (const_int 0 [0]))) ns_print.c:829 -1
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ns_print.c:829 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 66)
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:QI 101 [ D.9823 ])
        (mem:QI (reg/v/f:DI 124 [ origin ]) [0 *origin_20(D)+0 S1 A8])) ns_print.c:829 -1
     (nil))
(insn 55 54 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.9823 ])
            (const_int 0 [0]))) ns_print.c:829 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ns_print.c:829 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 66)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 101 [ D.9823 ])
            (const_int 46 [0x2e]))) ns_print.c:829 -1
     (nil))
(jump_insn 59 58 60 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) ns_print.c:829 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 119)
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 124 [ origin ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)origin_20(D) + 1B]+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:830 -1
     (nil))
(jump_insn 62 61 63 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) ns_print.c:830 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 123)
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 97 [ D.9822 ])
                    (reg/v:DI 96 [ newlen ])) [0 *_35+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:830 -1
     (nil))
(jump_insn 65 64 66 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 127)
            (pc))) ns_print.c:830 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 127)
(code_label 66 65 67 13 49 "" [2 uses])
(note 67 66 68 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/f:DI 97 [ D.9822 ])
                        (reg/v:DI 96 [ newlen ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_38+0 S1 A8])
            (const_int 46 [0x2e]))) ns_print.c:831 -1
     (nil))
(jump_insn 69 68 70 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) ns_print.c:831 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 131)
(code_label 70 69 71 14 46 ("root") [1 uses])
(note 71 70 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 14 (parallel [
            (set (reg:DI 128 [ D.9824 ])
                (plus:DI (reg/v:DI 96 [ newlen ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:834 -1
     (nil))
(insn 73 72 74 14 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 128 [ D.9824 ])
            (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64]))) ns_print.c:834 -1
     (nil))
(jump_insn 74 73 75 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 101)
            (pc))) ns_print.c:834 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 101)
(note 75 74 76 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 15 (parallel [
            (set (reg/v:DI 87 [ newlen ])
                (plus:DI (reg/v:DI 96 [ newlen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:836 -1
     (nil))
(insn 77 76 78 15 (set (mem:QI (plus:DI (reg/f:DI 97 [ D.9822 ])
                (reg/v:DI 96 [ newlen ])) [0 *_43+0 S1 A8])
        (const_int 46 [0x2e])) ns_print.c:836 -1
     (nil))
(insn 78 77 79 15 (set (reg/f:DI 129)
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:837 -1
     (nil))
(insn 79 78 116 15 (set (mem:QI (plus:DI (reg/f:DI 129)
                (reg/v:DI 87 [ newlen ])) [0 *_46+0 S1 A8])
        (const_int 0 [0])) ns_print.c:837 -1
     (nil))
(jump_insn 116 79 117 15 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
(barrier 117 116 119)
(code_label 119 117 118 16 52 "" [1 uses])
(note 118 119 10 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 10 118 120 16 (set (reg/v:DI 87 [ newlen ])
        (reg/v:DI 96 [ newlen ])) -1
     (nil))
(jump_insn 120 10 121 16 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
(barrier 121 120 123)
(code_label 123 121 122 17 53 "" [1 uses])
(note 122 123 11 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 11 122 124 17 (set (reg/v:DI 87 [ newlen ])
        (reg/v:DI 96 [ newlen ])) -1
     (nil))
(jump_insn 124 11 125 17 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
(barrier 125 124 127)
(code_label 127 125 126 18 54 "" [1 uses])
(note 126 127 12 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 12 126 128 18 (set (reg/v:DI 87 [ newlen ])
        (reg/v:DI 96 [ newlen ])) -1
     (nil))
(jump_insn 128 12 129 18 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
(barrier 129 128 131)
(code_label 131 129 130 19 55 "" [1 uses])
(note 130 131 13 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 13 130 80 19 (set (reg/v:DI 87 [ newlen ])
        (reg/v:DI 96 [ newlen ])) -1
     (nil))
(code_label 80 13 81 20 48 "" [5 uses])
(note 81 80 82 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 20 (set (reg:DI 130 [ D.9825 ])
        (sign_extend:DI (reg/v:SI 94 [ n ]))) ns_print.c:840 -1
     (nil))
(insn 83 82 84 20 (parallel [
            (set (mem/f:DI (reg/v/f:DI 123 [ pp ]) [1 *pp_12(D)+0 S8 A64])
                (plus:DI (mem/f:DI (reg/v/f:DI 123 [ pp ]) [1 *pp_12(D)+0 S8 A64])
                    (reg:DI 130 [ D.9825 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:840 -1
     (nil))
(insn 84 83 85 20 (set (reg:DI 116 [ D.9824 ])
        (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 85 84 86 20 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 87 [ newlen ])
            (reg:DI 116 [ D.9824 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 86 85 87 20 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 90)
(note 87 86 88 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn/c/i 88 87 89 21 (call (mem:QI (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>) [0 addlen.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 89 88 90)
(code_label 90 89 91 22 50 "" [1 uses])
(note 91 90 92 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 22 (set (reg/f:DI 131)
        (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])) ns_print.c:854 -1
     (nil))
(insn 93 92 94 22 (parallel [
            (set (reg/f:DI 118 [ D.9822 ])
                (plus:DI (reg/v:DI 87 [ newlen ])
                    (reg/f:DI 131)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])
            (reg/v:DI 87 [ newlen ]))
        (nil)))
(insn 94 93 95 22 (set (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])
        (reg/f:DI 118 [ D.9822 ])) ns_print.c:854 -1
     (nil))
(insn 95 94 96 22 (parallel [
            (set (reg:DI 132)
                (minus:DI (reg:DI 116 [ D.9824 ])
                    (reg/v:DI 87 [ newlen ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 96 95 97 22 (set (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64])
        (reg:DI 132)) ns_print.c:855 -1
     (nil))
(insn 97 96 98 22 (set (mem:QI (reg/f:DI 118 [ D.9822 ]) [0 *_60+0 S1 A8])
        (const_int 0 [0])) ns_print.c:842 -1
     (nil))
(insn 98 97 99 22 (set (reg:SI 88 [ D.9820 ])
        (subreg:SI (reg/v:DI 87 [ newlen ]) 0)) ns_print.c:843 -1
     (nil))
(jump_insn 99 98 100 22 (set (pc)
        (label_ref 107)) ns_print.c:843 -1
     (nil)
 -> 107)
(barrier 100 99 101)
(code_label 101 100 102 23 45 "" [3 uses])
(note 102 101 103 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 23 (set (reg:DI 133)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2b5d797896c0 errno>)
                    ] UNSPEC_GOTNTPOFF)) [8  S8 A8])) ns_print.c:845 -1
     (nil))
(insn 104 103 105 23 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 133)) [3 errno+0 S4 A32])
        (const_int 28 [0x1c])) ns_print.c:845 -1
     (nil))
(insn 105 104 106 23 (set (mem/f:DI (reg/v/f:DI 125 [ buf ]) [1 *buf_9(D)+0 S8 A64])
        (reg/v/f:DI 90 [ save_buf ])) ns_print.c:846 -1
     (nil))
(insn 106 105 14 23 (set (mem:DI (reg/v/f:DI 126 [ buflen ]) [2 *buflen_7(D)+0 S8 A64])
        (reg/v:DI 89 [ save_buflen ])) ns_print.c:847 -1
     (nil))
(insn 14 106 107 23 (set (reg:SI 88 [ D.9820 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:848 -1
     (nil))
(code_label 107 14 108 24 51 "" [1 uses])
(note 108 107 109 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 113 24 (set (reg:SI 120 [ <retval> ])
        (reg:SI 88 [ D.9820 ])) -1
     (nil))
(insn 113 109 114 24 (set (reg/i:SI 0 ax)
        (reg:SI 120 [ <retval> ])) ns_print.c:849 -1
     (nil))
(insn 114 113 0 24 (use (reg/i:SI 0 ax)) ns_print.c:849 -1
     (nil))

;; Function addtab (addtab, funcdef_no=54, decl_uid=8723, cgraph_uid=56, symbol_order=58)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12
Edge 4->12 redirected to 17


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 14 failed.
Forwarding edge 12->13 to 8 failed.
Removing jump 78.
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 14 failed.
Forwarding edge 12->13 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 2 0 13 NOTE_INSN_DELETED)
(note 13 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 13 4 2 (set (reg/v:DI 99 [ len ])
        (reg:DI 5 di [ len ])) ns_print.c:871 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 100 [ target ])
        (reg:DI 4 si [ target ])) ns_print.c:871 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 101 [ spaced ])
        (reg:SI 1 dx [ spaced ])) ns_print.c:871 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 102 [ buf ])
        (reg:DI 2 cx [ buf ])) ns_print.c:871 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 103 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) ns_print.c:871 -1
     (nil))
(note 8 7 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 8 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 101 [ spaced ])
            (const_int 0 [0]))) ns_print.c:876 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) ns_print.c:876 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 21)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (parallel [
            (set (reg:DI 104 [ D.9843 ])
                (plus:DI (reg/v:DI 100 [ target ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:876 -1
     (nil))
(insn 19 18 20 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 104 [ D.9843 ])
            (reg/v:DI 99 [ len ]))) ns_print.c:876 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) ns_print.c:876 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 34)
(code_label 21 20 22 5 66 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:DI 2 cx)
        (reg/v/f:DI 103 [ buflen ])) ns_print.c:877 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 1 dx)
        (reg/v/f:DI 102 [ buf ])) ns_print.c:877 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:877 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2b5d79ae03f0 *.LC10>)) ns_print.c:877 -1
     (nil))
(call_insn 27 26 28 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:877 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 28 27 29 5 (set (reg:SI 97 [ D.9842 ])
        (reg:SI 0 ax)) ns_print.c:877 -1
     (nil))
(insn 29 28 30 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 97 [ D.9842 ])
            (const_int 0 [0]))) ns_print.c:877 -1
     (nil))
(jump_insn 30 29 33 5 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 87)
            (pc))) ns_print.c:877 612 {*jcc_1}
     (int_list:REG_BR_PROB 152 (nil))
 -> 87)
(note 33 30 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 31 33 32 6 (set (pc)
        (label_ref 73)) ns_print.c:877 -1
     (nil)
 -> 73)
(barrier 32 31 34)
(code_label 34 32 35 7 67 "" [1 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (reg:DI 105 [ D.9843 ])
                (minus:DI (reg/v:DI 100 [ target ])
                    (reg/v:DI 99 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:880 -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg:DI 106 [ D.9843 ])
                (plus:DI (reg:DI 105 [ D.9843 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:880 -1
     (nil))
(insn 38 37 39 7 (parallel [
            (set (reg:DI 107 [ D.9843 ])
                (lshiftrt:DI (reg:DI 106 [ D.9843 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:880 -1
     (nil))
(insn 39 38 40 7 (set (reg/v:SI 89 [ t ])
        (subreg:SI (reg:DI 107 [ D.9843 ]) 0)) ns_print.c:880 -1
     (nil))
(insn 40 39 41 7 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 89 [ t ])
            (const_int 0 [0]))) ns_print.c:880 -1
     (nil))
(jump_insn 41 40 69 7 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) ns_print.c:880 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 45)
(code_label 69 41 42 8 73 "" [1 uses])
(note 42 69 11 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 11 42 43 8 (set (reg:SI 88 [ D.9842 ])
        (const_int 0 [0])) ns_print.c:886 -1
     (nil))
(jump_insn 43 11 44 8 (set (pc)
        (label_ref 75)) ns_print.c:880 -1
     (nil)
 -> 75)
(barrier 44 43 45)
(code_label 45 44 46 9 70 "" [1 uses])
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg/v:DI 90 [ save_buflen ])
        (mem:DI (reg/v/f:DI 103 [ buflen ]) [2 *buflen_6(D)+0 S8 A64])) ns_print.c:872 -1
     (nil))
(insn 48 47 66 9 (set (reg/v/f:DI 91 [ save_buf ])
        (mem/f:DI (reg/v/f:DI 102 [ buf ]) [1 *buf_8(D)+0 S8 A64])) ns_print.c:873 -1
     (nil))
(code_label 66 48 49 10 72 "" [1 uses])
(note 49 66 50 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 103 [ buflen ])) ns_print.c:881 -1
     (nil))
(insn 51 50 52 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 102 [ buf ])) ns_print.c:881 -1
     (nil))
(insn 52 51 53 10 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:881 -1
     (nil))
(insn 53 52 54 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2b5d79ae0480 *.LC11>)) ns_print.c:881 -1
     (nil))
(call_insn 54 53 55 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:881 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 55 54 56 10 (set (reg:SI 96 [ D.9842 ])
        (reg:SI 0 ax)) ns_print.c:881 -1
     (nil))
(insn 56 55 57 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 96 [ D.9842 ])
            (const_int 0 [0]))) ns_print.c:881 -1
     (nil))
(jump_insn 57 56 58 10 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) ns_print.c:881 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 63)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (mem:DI (reg/v/f:DI 103 [ buflen ]) [2 *buflen_6(D)+0 S8 A64])
        (reg/v:DI 90 [ save_buflen ])) ns_print.c:882 -1
     (nil))
(insn 60 59 10 11 (set (mem/f:DI (reg/v/f:DI 102 [ buf ]) [1 *buf_8(D)+0 S8 A64])
        (reg/v/f:DI 91 [ save_buf ])) ns_print.c:883 -1
     (nil))
(insn 10 60 61 11 (set (reg:SI 88 [ D.9842 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:884 -1
     (nil))
(jump_insn 61 10 62 11 (set (pc)
        (label_ref 75)) ns_print.c:884 -1
     (nil)
 -> 75)
(barrier 62 61 63)
(code_label 63 62 64 12 71 "" [1 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 67 12 (parallel [
            (set (reg/v:SI 89 [ t ])
                (plus:SI (reg/v:SI 89 [ t ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:880 -1
     (nil))
(insn 67 65 68 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ t ])
            (const_int -1 [0xffffffffffffffff]))) ns_print.c:880 -1
     (nil))
(jump_insn 68 67 72 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) ns_print.c:880 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 66)
(note 72 68 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 70 72 71 13 (set (pc)
        (label_ref 69)) -1
     (nil)
 -> 69)
(barrier 71 70 73)
(code_label 73 71 74 14 69 "" [1 uses])
(note 74 73 9 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 9 74 84 14 (set (reg:SI 88 [ D.9842 ])
        (const_int 1 [0x1])) ns_print.c:878 -1
     (nil))
(jump_insn 84 9 85 14 (set (pc)
        (label_ref 75)) -1
     (nil)
 -> 75)
(barrier 85 84 87)
(code_label 87 85 86 15 74 "" [1 uses])
(note 86 87 12 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 12 86 75 15 (set (reg:SI 88 [ D.9842 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:877 -1
     (nil))
(code_label 75 12 76 16 68 "" [3 uses])
(note 76 75 77 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 81 16 (set (reg:SI 98 [ <retval> ])
        (reg:SI 88 [ D.9842 ])) -1
     (nil))
(insn 81 77 82 16 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) ns_print.c:889 -1
     (nil))
(insn 82 81 0 16 (use (reg/i:SI 0 ax)) ns_print.c:889 -1
     (nil))

;; Function ns_sprintrrf (*__GI_ns_sprintrrf, funcdef_no=48, decl_uid=3494, cgraph_uid=49, symbol_order=51)

Partition 7: size 10928 align 16
	base64_key	errbuf	t	t	t	t	base64_cert	base64_key
Partition 0: size 100 align 16
	tmp
Partition 9: size 40 align 16
	tmp
Partition 10: size 16 align 16
	a

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84

;; Generating RTL for gimple basic block 85

;; Generating RTL for gimple basic block 86

;; Generating RTL for gimple basic block 87

;; Generating RTL for gimple basic block 88

;; Generating RTL for gimple basic block 89

;; Generating RTL for gimple basic block 90

;; Generating RTL for gimple basic block 91

;; Generating RTL for gimple basic block 92

;; Generating RTL for gimple basic block 93

;; Generating RTL for gimple basic block 94

;; Generating RTL for gimple basic block 95

;; Generating RTL for gimple basic block 96

;; Generating RTL for gimple basic block 97

;; Generating RTL for gimple basic block 98

;; Generating RTL for gimple basic block 99

;; Generating RTL for gimple basic block 100

;; Generating RTL for gimple basic block 101

;; Generating RTL for gimple basic block 102

;; Generating RTL for gimple basic block 103

;; Generating RTL for gimple basic block 104

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; Generating RTL for gimple basic block 107

;; Generating RTL for gimple basic block 108

;; Generating RTL for gimple basic block 109

;; Generating RTL for gimple basic block 110

;; Generating RTL for gimple basic block 111

;; Generating RTL for gimple basic block 112

;; Generating RTL for gimple basic block 113

;; Generating RTL for gimple basic block 114

;; Generating RTL for gimple basic block 115

;; Generating RTL for gimple basic block 116

;; Generating RTL for gimple basic block 117

;; Generating RTL for gimple basic block 118

;; Generating RTL for gimple basic block 119

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; Generating RTL for gimple basic block 122

;; Generating RTL for gimple basic block 123

;; Generating RTL for gimple basic block 124

;; Generating RTL for gimple basic block 125

;; Generating RTL for gimple basic block 126

;; Generating RTL for gimple basic block 127

;; Generating RTL for gimple basic block 128

;; Generating RTL for gimple basic block 129

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; Generating RTL for gimple basic block 132

;; Generating RTL for gimple basic block 133

;; Generating RTL for gimple basic block 134

;; Generating RTL for gimple basic block 135

;; Generating RTL for gimple basic block 136

;; Generating RTL for gimple basic block 137

;; Generating RTL for gimple basic block 138

;; Generating RTL for gimple basic block 139

;; Generating RTL for gimple basic block 140

;; Generating RTL for gimple basic block 141

;; Generating RTL for gimple basic block 142

;; Generating RTL for gimple basic block 143

;; Generating RTL for gimple basic block 144

;; Generating RTL for gimple basic block 145

;; Generating RTL for gimple basic block 146

;; Generating RTL for gimple basic block 147

;; Generating RTL for gimple basic block 148

;; Generating RTL for gimple basic block 149

;; Generating RTL for gimple basic block 150

;; Generating RTL for gimple basic block 151

;; Generating RTL for gimple basic block 152

;; Generating RTL for gimple basic block 153

;; Generating RTL for gimple basic block 154

;; Generating RTL for gimple basic block 155

;; Generating RTL for gimple basic block 156

;; Generating RTL for gimple basic block 157

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; Generating RTL for gimple basic block 160

;; Generating RTL for gimple basic block 161

;; Generating RTL for gimple basic block 162

;; Generating RTL for gimple basic block 163

;; Generating RTL for gimple basic block 164

;; Generating RTL for gimple basic block 165

;; Generating RTL for gimple basic block 166

;; Generating RTL for gimple basic block 167

;; Generating RTL for gimple basic block 168

;; Generating RTL for gimple basic block 169

;; Generating RTL for gimple basic block 170

;; Generating RTL for gimple basic block 171

;; Generating RTL for gimple basic block 172

;; Generating RTL for gimple basic block 173

;; Generating RTL for gimple basic block 174

;; Generating RTL for gimple basic block 175

;; Generating RTL for gimple basic block 176

;; Generating RTL for gimple basic block 177

;; Generating RTL for gimple basic block 178

;; Generating RTL for gimple basic block 179

;; Generating RTL for gimple basic block 180

;; Generating RTL for gimple basic block 181

;; Generating RTL for gimple basic block 182

;; Generating RTL for gimple basic block 183

;; Generating RTL for gimple basic block 184

;; Generating RTL for gimple basic block 185

;; Generating RTL for gimple basic block 186

;; Generating RTL for gimple basic block 187

;; Generating RTL for gimple basic block 188

;; Generating RTL for gimple basic block 189

;; Generating RTL for gimple basic block 190

;; Generating RTL for gimple basic block 191

;; Generating RTL for gimple basic block 192

;; Generating RTL for gimple basic block 193

;; Generating RTL for gimple basic block 194

;; Generating RTL for gimple basic block 195

;; Generating RTL for gimple basic block 196

;; Generating RTL for gimple basic block 197

;; Generating RTL for gimple basic block 198

;; Generating RTL for gimple basic block 199

;; Generating RTL for gimple basic block 200

;; Generating RTL for gimple basic block 201

;; Generating RTL for gimple basic block 202

;; Generating RTL for gimple basic block 203

;; Generating RTL for gimple basic block 204

;; Generating RTL for gimple basic block 205

;; Generating RTL for gimple basic block 206

;; Generating RTL for gimple basic block 207

;; Generating RTL for gimple basic block 208

;; Generating RTL for gimple basic block 209

;; Generating RTL for gimple basic block 210

;; Generating RTL for gimple basic block 211

;; Generating RTL for gimple basic block 212

;; Generating RTL for gimple basic block 213

;; Generating RTL for gimple basic block 214

;; Generating RTL for gimple basic block 215

;; Generating RTL for gimple basic block 216

;; Generating RTL for gimple basic block 217

;; Generating RTL for gimple basic block 218

;; Generating RTL for gimple basic block 219

;; Generating RTL for gimple basic block 220

;; Generating RTL for gimple basic block 221

;; Generating RTL for gimple basic block 222

;; Generating RTL for gimple basic block 223

;; Generating RTL for gimple basic block 224

;; Generating RTL for gimple basic block 225

;; Generating RTL for gimple basic block 226

;; Generating RTL for gimple basic block 227

;; Generating RTL for gimple basic block 228

;; Generating RTL for gimple basic block 229

;; Generating RTL for gimple basic block 230

;; Generating RTL for gimple basic block 231

;; Generating RTL for gimple basic block 232

;; Generating RTL for gimple basic block 233

;; Generating RTL for gimple basic block 234

;; Generating RTL for gimple basic block 235

;; Generating RTL for gimple basic block 236

;; Generating RTL for gimple basic block 237

;; Generating RTL for gimple basic block 238

;; Generating RTL for gimple basic block 239

;; Generating RTL for gimple basic block 240

;; Generating RTL for gimple basic block 241

;; Generating RTL for gimple basic block 242

;; Generating RTL for gimple basic block 243

;; Generating RTL for gimple basic block 244

;; Generating RTL for gimple basic block 245

;; Generating RTL for gimple basic block 246

;; Generating RTL for gimple basic block 247

;; Generating RTL for gimple basic block 248

;; Generating RTL for gimple basic block 249

;; Generating RTL for gimple basic block 250

;; Generating RTL for gimple basic block 251

;; Generating RTL for gimple basic block 252

;; Generating RTL for gimple basic block 253

;; Generating RTL for gimple basic block 254

;; Generating RTL for gimple basic block 255

;; Generating RTL for gimple basic block 256

;; Generating RTL for gimple basic block 257

;; Generating RTL for gimple basic block 258

;; Generating RTL for gimple basic block 259

;; Generating RTL for gimple basic block 260

;; Generating RTL for gimple basic block 261

;; Generating RTL for gimple basic block 262

;; Generating RTL for gimple basic block 263

;; Generating RTL for gimple basic block 264

;; Generating RTL for gimple basic block 265

;; Generating RTL for gimple basic block 266

;; Generating RTL for gimple basic block 267

;; Generating RTL for gimple basic block 268

;; Generating RTL for gimple basic block 269

;; Generating RTL for gimple basic block 270

;; Generating RTL for gimple basic block 271

;; Generating RTL for gimple basic block 272

;; Generating RTL for gimple basic block 273

;; Generating RTL for gimple basic block 274

;; Generating RTL for gimple basic block 275

;; Generating RTL for gimple basic block 276

;; Generating RTL for gimple basic block 277

;; Generating RTL for gimple basic block 278

;; Generating RTL for gimple basic block 279

;; Generating RTL for gimple basic block 280
Edge 46->254 redirected to 305
Edge 149->160 redirected to 307
Edge 152->160 redirected to 308
Edge 153->160 redirected to 309
Edge 154->158 redirected to 311
Edge 254->256 redirected to 314
Edge 260->263 redirected to 316
Edge 269->272 redirected to 317
Edge 270->272 redirected to 318
Edge 277->164 redirected to 319
Edge 278->187 redirected to 320
Edge 279->214 redirected to 321
Predictions for insn 1124 bb 323
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 1202 bb 326
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 2631 bb 238
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 2649 bb 331
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 3056 bb 304
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 22 failed.
Forwarding edge 12->13 to 6 failed.
Forwarding edge 20->21 to 23 failed.
Forwarding edge 34->35 to 297 failed.
Merging block 106 into block 105...
Merged blocks 105 and 106.
Merged 105 and 106 without moving.
Merging block 116 into block 115...
Merged blocks 115 and 116.
Merged 115 and 116 without moving.
Forwarding edge 130->131 to 134 failed.
Forwarding edge 137->138 to 141 failed.
Forwarding edge 172->173 to 175 failed.
Forwarding edge 192->193 to 199 failed.
Forwarding edge 194->195 to 192 failed.
Forwarding edge 211->212 to 335 failed.
Forwarding edge 220->221 to 225 failed.
Forwarding edge 231->232 to 235 failed.
Forwarding edge 233->234 to 231 failed.
Forwarding edge 240->241 to 256 failed.
Forwarding edge 253->254 to 256 failed.
Edge 276->278 redirected to 284
Merging block 278 into block 277...
Merged blocks 277 and 278.
Merged 277 and 278 without moving.
Merging block 283 into block 282...
Merged blocks 282 and 283.
Merged 282 and 283 without moving.
Edge 285->293 redirected to 298
Redirecting jump 2757 from 293 to 298.
deleting block 293
Forwarding edge 310->311 to 313 failed.
Forwarding edge 314->315 to 339 failed.
Forwarding edge 319->320 to 316 failed.
Forwarding edge 330->331 to 306 failed.
Forwarding edge 333->334 to 192 failed.
Forwarding edge 335->336 to 225 failed.
Forwarding edge 337->338 to 256 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 22 failed.
Forwarding edge 12->13 to 6 failed.
Forwarding edge 20->21 to 23 failed.
Forwarding edge 34->35 to 297 failed.
Forwarding edge 130->131 to 134 failed.
Forwarding edge 137->138 to 141 failed.
Forwarding edge 172->173 to 175 failed.
Forwarding edge 192->193 to 199 failed.
Forwarding edge 194->195 to 192 failed.
Forwarding edge 211->212 to 335 failed.
Forwarding edge 220->221 to 225 failed.
Forwarding edge 231->232 to 235 failed.
Forwarding edge 233->234 to 231 failed.
Forwarding edge 240->241 to 256 failed.
Forwarding edge 253->254 to 256 failed.
Forwarding edge 310->311 to 313 failed.
Forwarding edge 314->315 to 339 failed.
Forwarding edge 319->320 to 316 failed.
Forwarding edge 330->331 to 306 failed.
Forwarding edge 333->334 to 192 failed.
Forwarding edge 335->336 to 225 failed.
Forwarding edge 337->338 to 256 failed.


;;
;; Full RTL generated for this function:
;;
(note 134 0 217 NOTE_INSN_DELETED)
(note 217 134 135 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 135 217 136 2 (set (reg/v/f:DI 828 [ msg ])
        (reg:DI 5 di [ msg ])) ns_print.c:95 -1
     (nil))
(insn 136 135 137 2 (set (reg/v:DI 829 [ msglen ])
        (reg:DI 4 si [ msglen ])) ns_print.c:95 -1
     (nil))
(insn 137 136 138 2 (set (reg/v/f:DI 830 [ name ])
        (reg:DI 1 dx [ name ])) ns_print.c:95 -1
     (nil))
(insn 138 137 139 2 (set (reg/v:SI 831 [ class ])
        (reg:SI 2 cx [ class ])) ns_print.c:95 -1
     (nil))
(insn 139 138 140 2 (set (reg/v:SI 832 [ type ])
        (reg:SI 37 r8 [ type ])) ns_print.c:95 -1
     (nil))
(insn 140 139 143 2 (set (reg/v:DI 833 [ ttl ])
        (reg:DI 38 r9 [ ttl ])) ns_print.c:95 -1
     (nil))
(insn 143 140 144 2 (set (reg/v:DI 835 [ rdlen ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [2 rdlen+0 S8 A64])) ns_print.c:95 -1
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [2 rdlen+0 S8 A64])
        (nil)))
(insn 144 143 145 2 (set (reg/v/f:DI 836 [ name_ctx ])
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [1 name_ctx+0 S8 A64])) ns_print.c:95 -1
     (nil))
(insn 145 144 141 2 (set (reg/v/f:DI 837 [ origin ])
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 24 [0x18])) [1 origin+0 S8 A64])) ns_print.c:95 -1
     (nil))
(insn 141 145 142 2 (set (reg/f:DI 834)
        (mem/f/c:DI (reg/f:DI 81 virtual-incoming-args) [1 rdata+0 S8 A64])) ns_print.c:95 -1
     (nil))
(insn 142 141 146 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 834)) ns_print.c:95 -1
     (nil))
(insn 146 142 147 2 (set (reg/f:DI 838)
        (mem/f/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 32 [0x20])) [1 buf+0 S8 A64])) ns_print.c:95 -1
     (nil))
(insn 147 146 148 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
        (reg/f:DI 838)) ns_print.c:95 -1
     (nil))
(note 148 147 149 2 NOTE_INSN_FUNCTION_BEG)
(insn 149 148 150 2 (set (reg/f:DI 839)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b5d79b72f30 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) ns_print.c:95 -1
     (nil))
(insn 150 149 219 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.9961+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:95 -1
     (nil))
(insn 219 150 220 2 (set (reg/v/f:DI 223 [ obuf ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:96 -1
     (nil))
(insn 220 219 221 2 (set (reg/f:DI 844)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:97 -1
     (nil))
(insn 221 220 222 2 (parallel [
            (set (reg/v/f:DI 225 [ edata ])
                (plus:DI (reg/v:DI 835 [ rdlen ])
                    (reg/f:DI 844)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:97 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (reg/v:DI 835 [ rdlen ]))
        (nil)))
(insn 222 221 223 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 836 [ name_ctx ])
            (const_int 0 [0]))) ns_print.c:108 -1
     (nil))
(jump_insn 223 222 224 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) ns_print.c:108 -1
     (int_list:REG_BR_PROB 1499 (nil))
 -> 249)
(note 224 223 225 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 4 (set (reg:DI 4 si)
        (reg/v/f:DI 830 [ name ])) ns_print.c:108 -1
     (nil))
(insn 226 225 227 4 (set (reg:DI 5 di)
        (reg/v/f:DI 836 [ name_ctx ])) ns_print.c:108 -1
     (nil))
(call_insn 227 226 228 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_samename") [flags 0x43]  <function_decl 0x2b5d795da948 ns_samename>) [0 ns_samename S1 A8])
            (const_int 0 [0]))) ns_print.c:108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_samename") [flags 0x43]  <function_decl 0x2b5d795da948 ns_samename>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 228 227 229 4 (set (reg:SI 226 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:108 -1
     (nil))
(insn 229 228 230 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 226 [ D.9943 ])
            (const_int 1 [0x1]))) ns_print.c:108 -1
     (nil))
(jump_insn 230 229 231 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) ns_print.c:108 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 249)
(note 231 230 232 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 5 (parallel [
            (set (reg:DI 845)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:109 -1
     (nil))
(insn 233 232 234 5 (parallel [
            (set (reg:DI 846)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:109 -1
     (nil))
(insn 234 233 235 5 (set (reg:DI 2 cx)
        (reg:DI 845)) ns_print.c:109 -1
     (nil))
(insn 235 234 236 5 (set (reg:DI 1 dx)
        (reg:DI 846)) ns_print.c:109 -1
     (nil))
(insn 236 235 237 5 (set (reg:DI 4 si)
        (const_int 3 [0x3])) ns_print.c:109 -1
     (nil))
(insn 237 236 238 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x2b5d79ba1240 *.LC18>)) ns_print.c:109 -1
     (nil))
(call_insn 238 237 239 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 239 238 240 5 (set (reg:SI 227 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:109 -1
     (nil))
(insn 240 239 241 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 227 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:109 -1
     (nil))
(jump_insn 241 240 287 5 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:109 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(code_label 287 241 242 6 85 "" [1 uses])
(note 242 287 151 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 151 242 243 6 (set (reg/v:SI 208 [ spaced ])
        (const_int 0 [0])) ns_print.c:98 -1
     (nil))
(jump_insn 243 151 244 6 (set (pc)
        (label_ref 345)) -1
     (nil)
 -> 345)
(barrier 244 243 245)
(code_label 245 244 246 7 79 "" [68 uses])
(note 246 245 208 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 208 246 247 7 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:109 -1
     (nil))
(jump_insn 247 208 248 7 (set (pc)
        (label_ref 3017)) -1
     (nil)
 -> 3017)
(barrier 248 247 249)
(code_label 249 248 250 8 78 "" [2 uses])
(note 250 249 251 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 8 (set (reg:DI 4 si)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:111 -1
     (nil))
(insn 252 251 253 8 (set (reg:DI 5 di)
        (reg/v/f:DI 830 [ name ])) ns_print.c:111 -1
     (nil))
(call_insn 253 252 254 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("prune_origin") [flags 0x3]  <function_decl 0x2b5d79924bd0 prune_origin>) [0 prune_origin S1 A8])
            (const_int 0 [0]))) ns_print.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("prune_origin") [flags 0x3]  <function_decl 0x2b5d79924bd0 prune_origin>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 254 253 255 8 (set (reg:DI 228 [ D.9951 ])
        (reg:DI 0 ax)) ns_print.c:111 -1
     (nil))
(insn 255 254 256 8 (set (reg/v:SI 229 [ len ])
        (subreg:SI (reg:DI 228 [ D.9951 ]) 0)) ns_print.c:111 -1
     (nil))
(insn 256 255 257 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 830 [ name ]) [0 *name_71(D)+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:112 -1
     (nil))
(jump_insn 257 256 322 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) ns_print.c:112 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 272)
(code_label 322 257 258 9 88 "" [1 uses])
(note 258 322 259 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 9 (parallel [
            (set (reg:DI 847)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:123 -1
     (nil))
(insn 260 259 261 9 (parallel [
            (set (reg:DI 848)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:123 -1
     (nil))
(insn 261 260 262 9 (set (reg:DI 2 cx)
        (reg:DI 847)) ns_print.c:123 -1
     (nil))
(insn 262 261 263 9 (set (reg:DI 1 dx)
        (reg:DI 848)) ns_print.c:123 -1
     (nil))
(insn 263 262 264 9 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:123 -1
     (nil))
(insn 264 263 265 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b5d79ba12d0 *.LC19>)) ns_print.c:123 -1
     (nil))
(call_insn 265 264 266 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 266 265 267 9 (set (reg:SI 241 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:123 -1
     (nil))
(insn 267 266 268 9 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 241 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:123 -1
     (nil))
(jump_insn 268 267 271 9 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:123 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 271 268 269 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 269 271 270 10 (set (pc)
        (label_ref 328)) -1
     (nil)
 -> 328)
(barrier 270 269 272)
(code_label 272 270 273 11 82 "" [1 uses])
(note 273 272 274 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 229 [ len ])
            (const_int 0 [0]))) ns_print.c:114 -1
     (nil))
(jump_insn 275 274 276 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) ns_print.c:114 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 291)
(note 276 275 277 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 12 (parallel [
            (set (reg:DI 849)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:115 -1
     (nil))
(insn 278 277 279 12 (parallel [
            (set (reg:DI 850)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:115 -1
     (nil))
(insn 279 278 280 12 (set (reg:DI 2 cx)
        (reg:DI 849)) ns_print.c:115 -1
     (nil))
(insn 280 279 281 12 (set (reg:DI 1 dx)
        (reg:DI 850)) ns_print.c:115 -1
     (nil))
(insn 281 280 282 12 (set (reg:DI 4 si)
        (const_int 4 [0x4])) ns_print.c:115 -1
     (nil))
(insn 282 281 283 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x2b5d79ba1360 *.LC20>)) ns_print.c:115 -1
     (nil))
(call_insn 283 282 284 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 284 283 285 12 (set (reg:SI 231 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:115 -1
     (nil))
(insn 285 284 286 12 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 231 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:115 -1
     (nil))
(jump_insn 286 285 290 12 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:115 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 290 286 288 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 288 290 289 13 (set (pc)
        (label_ref 287)) -1
     (nil)
 -> 287)
(barrier 289 288 291)
(code_label 291 289 292 14 84 "" [1 uses])
(note 292 291 293 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 14 (set (reg:DI 826 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 229 [ len ]))) ns_print.c:117 -1
     (nil))
(insn 294 293 295 14 (parallel [
            (set (reg:DI 851)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:117 -1
     (nil))
(insn 295 294 296 14 (parallel [
            (set (reg:DI 852)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:117 -1
     (nil))
(insn 296 295 297 14 (set (reg:DI 2 cx)
        (reg:DI 851)) ns_print.c:117 -1
     (nil))
(insn 297 296 298 14 (set (reg:DI 1 dx)
        (reg:DI 852)) ns_print.c:117 -1
     (nil))
(insn 298 297 299 14 (set (reg:DI 4 si)
        (reg:DI 826 [ D.9951 ])) ns_print.c:117 -1
     (nil))
(insn 299 298 300 14 (set (reg:DI 5 di)
        (reg/v/f:DI 830 [ name ])) ns_print.c:117 -1
     (nil))
(call_insn 300 299 301 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:117 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 301 300 302 14 (set (reg:SI 232 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:117 -1
     (nil))
(insn 302 301 303 14 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 232 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:117 -1
     (nil))
(jump_insn 303 302 304 14 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:117 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 304 303 305 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 837 [ origin ])
            (const_int 0 [0]))) ns_print.c:119 -1
     (nil))
(jump_insn 306 305 307 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) ns_print.c:119 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 320)
(note 307 306 308 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 16 (set (reg:QI 233 [ D.9945 ])
        (mem:QI (reg/v/f:DI 837 [ origin ]) [0 *origin_76(D)+0 S1 A8])) ns_print.c:119 -1
     (nil))
(insn 309 308 310 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 233 [ D.9945 ])
            (const_int 0 [0]))) ns_print.c:119 -1
     (nil))
(jump_insn 310 309 311 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) ns_print.c:119 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 320)
(note 311 310 312 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 233 [ D.9945 ])
            (const_int 46 [0x2e]))) ns_print.c:119 -1
     (nil))
(jump_insn 313 312 314 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) ns_print.c:119 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 332)
(note 314 313 315 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 837 [ origin ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)origin_76(D) + 1B]+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:120 -1
     (nil))
(jump_insn 316 315 317 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) ns_print.c:120 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 332)
(note 317 316 318 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 830 [ name ])
                    (reg:DI 826 [ D.9951 ])) [0 *_90+0 S1 A8])
            (const_int 0 [0]))) ns_print.c:120 -1
     (nil))
(jump_insn 319 318 320 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) ns_print.c:120 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 332)
(code_label 320 319 321 20 86 "" [2 uses])
(note 321 320 323 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 323 321 324 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 830 [ name ])
                        (reg:DI 826 [ D.9951 ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_94+0 S1 A8])
            (const_int 46 [0x2e]))) ns_print.c:121 -1
     (nil))
(jump_insn 324 323 327 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 322)
            (pc))) ns_print.c:121 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 322)
(note 327 324 325 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 325 327 326 21 (set (pc)
        (label_ref 332)) -1
     (nil)
 -> 332)
(barrier 326 325 328)
(code_label 328 326 329 22 83 "" [1 uses])
(note 329 328 330 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 22 (parallel [
            (set (reg:SI 853 [ len ])
                (plus:SI (reg/v:SI 229 [ len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 331 330 332 22 (set (reg:DI 826 [ D.9951 ])
        (sign_extend:DI (reg:SI 853 [ len ]))) -1
     (nil))
(code_label 332 331 333 23 87 "" [4 uses])
(note 333 332 334 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 23 (parallel [
            (set (reg:DI 854)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:126 -1
     (nil))
(insn 335 334 336 23 (parallel [
            (set (reg:DI 855)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:126 -1
     (nil))
(insn 336 335 337 23 (set (reg:DI 37 r8)
        (reg:DI 854)) ns_print.c:126 -1
     (nil))
(insn 337 336 338 23 (set (reg:DI 2 cx)
        (reg:DI 855)) ns_print.c:126 -1
     (nil))
(insn 338 337 339 23 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:126 -1
     (nil))
(insn 339 338 340 23 (set (reg:DI 4 si)
        (const_int 24 [0x18])) ns_print.c:126 -1
     (nil))
(insn 340 339 341 23 (set (reg:DI 5 di)
        (reg:DI 826 [ D.9951 ])) ns_print.c:126 -1
     (nil))
(call_insn 341 340 342 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:126 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 342 341 343 23 (set (reg/v:SI 208 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:126 -1
     (nil))
(insn 343 342 344 23 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 208 [ spaced ])
            (const_int 0 [0]))) ns_print.c:126 -1
     (nil))
(jump_insn 344 343 345 23 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:126 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(code_label 345 344 346 24 80 "" [1 uses])
(note 346 345 347 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 24 (set (reg:DI 856)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:133 -1
     (nil))
(insn 348 347 349 24 (set (reg:DI 857)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:133 -1
     (nil))
(insn 349 348 350 24 (set (reg:DI 1 dx)
        (reg:DI 856)) ns_print.c:133 -1
     (nil))
(insn 350 349 351 24 (set (reg:DI 4 si)
        (reg:DI 857)) ns_print.c:133 -1
     (nil))
(insn 351 350 352 24 (set (reg:DI 5 di)
        (reg/v:DI 833 [ ttl ])) ns_print.c:133 -1
     (nil))
(call_insn 352 351 353 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>) [0 ns_format_ttl S1 A8])
            (const_int 0 [0]))) ns_print.c:133 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 353 352 354 24 (set (reg/v:SI 245 [ x ])
        (reg:SI 0 ax)) ns_print.c:133 -1
     (nil))
(insn 354 353 355 24 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 245 [ x ])
            (const_int 0 [0]))) ns_print.c:133 -1
     (nil))
(jump_insn 355 354 356 24 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:133 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 356 355 357 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 25 (set (reg:DI 246 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 245 [ x ]))) ns_print.c:134 -1
     (nil))
(insn 358 357 359 25 (set (reg:DI 440 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 359 358 360 25 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 246 [ D.9951 ])
            (reg:DI 440 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 360 359 441 25 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 364)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 364)
(code_label 441 360 361 26 116 "" [9 uses])
(note 361 441 362 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(call_insn/c/i 362 361 363 26 (call (mem:QI (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>) [0 addlen.part.0 S1 A8])
        (const_int 0 [0])) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addlen.part.0") [flags 0x3]  <function_decl 0x2b5d799ffe58 addlen.part.0>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 363 362 364)
(code_label 364 363 365 27 89 "" [1 uses])
(note 365 364 366 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 27 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                    (reg:DI 246 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 367 366 368 27 (parallel [
            (set (reg:DI 858)
                (minus:DI (reg:DI 440 [ D.9951 ])
                    (reg:DI 246 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 368 367 369 27 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 858)) ns_print.c:855 -1
     (nil))
(insn 369 368 370 27 (set (reg:SI 5 di)
        (reg/v:SI 832 [ type ])) ns_print.c:135 -1
     (nil))
(call_insn 370 369 371 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>) [0 __p_type S1 A8])
            (const_int 0 [0]))) ns_print.c:135 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 371 370 372 27 (set (reg/f:DI 249 [ D.9953 ])
        (reg:DI 0 ax)) ns_print.c:135 -1
     (nil))
(insn 372 371 373 27 (set (reg:SI 5 di)
        (reg/v:SI 831 [ class ])) ns_print.c:135 -1
     (nil))
(call_insn 373 372 374 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_class") [flags 0x43]  <function_decl 0x2b5d798f0e58 __p_class>) [0 __p_class S1 A8])
            (const_int 0 [0]))) ns_print.c:135 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_class") [flags 0x43]  <function_decl 0x2b5d798f0e58 __p_class>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 374 373 375 27 (set (reg/f:DI 251 [ D.9953 ])
        (reg:DI 0 ax)) ns_print.c:135 -1
     (nil))
(insn 375 374 376 27 (parallel [
            (set (reg:DI 859)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:135 -1
     (nil))
(insn 376 375 377 27 (set (reg:DI 2 cx)
        (reg/f:DI 249 [ D.9953 ])) ns_print.c:135 -1
     (nil))
(insn 377 376 378 27 (set (reg:DI 1 dx)
        (reg/f:DI 251 [ D.9953 ])) ns_print.c:135 -1
     (nil))
(insn 378 377 379 27 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2b5d79ba13f0 *.LC21>)) ns_print.c:135 -1
     (nil))
(insn 379 378 380 27 (set (reg:DI 5 di)
        (reg:DI 859)) ns_print.c:135 -1
     (nil))
(insn 380 379 381 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:135 -1
     (nil))
(call_insn 381 380 382 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:135 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 382 381 383 27 (set (reg/v:SI 252 [ len ])
        (reg:SI 0 ax)) ns_print.c:135 -1
     (nil))
(insn 383 382 384 27 (parallel [
            (set (reg:DI 860)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:136 -1
     (nil))
(insn 384 383 385 27 (parallel [
            (set (reg:DI 861)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:136 -1
     (nil))
(insn 385 384 386 27 (set (reg:DI 862 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 252 [ len ]))) ns_print.c:136 -1
     (nil))
(insn 386 385 387 27 (parallel [
            (set (reg:DI 863)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:136 -1
     (nil))
(insn 387 386 388 27 (set (reg:DI 2 cx)
        (reg:DI 860)) ns_print.c:136 -1
     (nil))
(insn 388 387 389 27 (set (reg:DI 1 dx)
        (reg:DI 861)) ns_print.c:136 -1
     (nil))
(insn 389 388 390 27 (set (reg:DI 4 si)
        (reg:DI 862 [ D.9951 ])) ns_print.c:136 -1
     (nil))
(insn 390 389 391 27 (set (reg:DI 5 di)
        (reg:DI 863)) ns_print.c:136 -1
     (nil))
(call_insn 391 390 392 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 392 391 393 27 (set (reg:SI 254 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:136 -1
     (nil))
(insn 393 392 394 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 254 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:136 -1
     (nil))
(jump_insn 394 393 395 27 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:136 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 395 394 396 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 28 (parallel [
            (set (reg:DI 864)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:137 -1
     (nil))
(insn 397 396 398 28 (parallel [
            (set (reg:DI 865)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:137 -1
     (nil))
(insn 398 397 399 28 (parallel [
            (set (reg:SI 866 [ D.9943 ])
                (plus:SI (reg/v:SI 245 [ x ])
                    (reg/v:SI 252 [ len ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:137 -1
     (nil))
(insn 399 398 400 28 (set (reg:DI 867 [ D.9951 ])
        (sign_extend:DI (reg:SI 866 [ D.9943 ]))) ns_print.c:137 -1
     (nil))
(insn 400 399 401 28 (set (reg:DI 37 r8)
        (reg:DI 864)) ns_print.c:137 -1
     (nil))
(insn 401 400 402 28 (set (reg:DI 2 cx)
        (reg:DI 865)) ns_print.c:137 -1
     (nil))
(insn 402 401 403 28 (set (reg:SI 1 dx)
        (reg/v:SI 208 [ spaced ])) ns_print.c:137 -1
     (nil))
(insn 403 402 404 28 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:137 -1
     (nil))
(insn 404 403 405 28 (set (reg:DI 5 di)
        (reg:DI 867 [ D.9951 ])) ns_print.c:137 -1
     (nil))
(call_insn 405 404 406 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:137 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 406 405 407 28 (set (reg/v:SI 257 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:137 -1
     (nil))
(insn 407 406 408 28 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 257 [ spaced ])
            (const_int 0 [0]))) ns_print.c:137 -1
     (nil))
(jump_insn 408 407 409 28 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:137 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 409 408 410 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 29 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 832 [ type ])
            (const_int 250 [0xfa]))) ns_print.c:142 -1
     (nil))
(jump_insn 411 410 3113 29 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2801)
            (pc))) ns_print.c:142 -1
     (int_list:REG_BR_PROB 208 (nil))
 -> 2801)
(note 3113 411 412 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 412 3113 413 30 (set (reg:DI 868)
        (zero_extend:DI (reg/v:SI 832 [ type ]))) ns_print.c:142 -1
     (nil))
(insn 413 412 414 30 (set (reg/f:DI 869)
        (label_ref:DI 419)) ns_print.c:142 -1
     (insn_list:REG_LABEL_OPERAND 419 (nil)))
(insn 414 413 415 30 (set (reg:SI 870)
        (mem/u/c:SI (plus:DI (ashift:DI (reg:DI 868)
                    (const_int 2 [0x2]))
                (reg/f:DI 869)) [0  S4 A8])) ns_print.c:142 -1
     (nil))
(insn 415 414 416 30 (set (reg:DI 871)
        (sign_extend:DI (reg:SI 870))) ns_print.c:142 -1
     (nil))
(insn 416 415 417 30 (set (reg:DI 873)
        (label_ref:DI 419)) ns_print.c:142 -1
     (insn_list:REG_LABEL_OPERAND 419 (nil)))
(insn 417 416 418 30 (parallel [
            (set (reg:DI 872)
                (plus:DI (reg:DI 871)
                    (reg:DI 873)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:142 -1
     (nil))
(jump_insn 418 417 419 30 (parallel [
            (set (pc)
                (reg:DI 872))
            (use (label_ref 419))
        ]) ns_print.c:142 -1
     (nil)
 -> 419)
(code_label 419 418 420 92 "" [3 uses])
(jump_table_data 420 419 421 (addr_diff_vec:SI (label_ref:DI 419)
         [
            (label_ref:DI 2801)
            (label_ref:DI 422)
            (label_ref:DI 448)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 448)
            (label_ref:DI 542)
            (label_ref:DI 448)
            (label_ref:DI 448)
            (label_ref:DI 448)
            (label_ref:DI 2801)
            (label_ref:DI 1504)
            (label_ref:DI 448)
            (label_ref:DI 466)
            (label_ref:DI 1460)
            (label_ref:DI 900)
            (label_ref:DI 1095)
            (label_ref:DI 1460)
            (label_ref:DI 900)
            (label_ref:DI 1031)
            (label_ref:DI 466)
            (label_ref:DI 900)
            (label_ref:DI 1107)
            (label_ref:DI 2801)
            (label_ref:DI 1872)
            (label_ref:DI 1641)
            (label_ref:DI 953)
            (label_ref:DI 2801)
            (label_ref:DI 1155)
            (label_ref:DI 1186)
            (label_ref:DI 2136)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 1385)
            (label_ref:DI 2801)
            (label_ref:DI 1233)
            (label_ref:DI 2801)
            (label_ref:DI 2221)
            (label_ref:DI 2576)
            (label_ref:DI 448)
            (label_ref:DI 2801)
            (label_ref:DI 2776)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2801)
            (label_ref:DI 2386)
            (label_ref:DI 2511)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 421 420 422)
(code_label 422 421 423 31 91 "" [1 uses])
(note 423 422 424 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 835 [ rdlen ])
            (const_int 4 [0x4]))) ns_print.c:144 -1
     (nil))
(jump_insn 425 424 426 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2823)
            (pc))) ns_print.c:144 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 2823)
(note 426 425 427 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 427 426 428 32 (set (reg:DI 874)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:146 -1
     (nil))
(insn 428 427 429 32 (set (reg:DI 875)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:146 -1
     (nil))
(insn 429 428 430 32 (set (reg:DI 876)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:146 -1
     (nil))
(insn 430 429 431 32 (set (reg:SI 2 cx)
        (subreg:SI (reg:DI 874) 0)) ns_print.c:146 -1
     (nil))
(insn 431 430 432 32 (set (reg:DI 1 dx)
        (reg:DI 875)) ns_print.c:146 -1
     (nil))
(insn 432 431 433 32 (set (reg:DI 4 si)
        (reg:DI 876)) ns_print.c:146 -1
     (nil))
(insn 433 432 434 32 (set (reg:SI 5 di)
        (const_int 2 [0x2])) ns_print.c:146 -1
     (nil))
(call_insn 434 433 435 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>) [0 inet_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:146 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 435 434 436 32 (set (reg/f:DI 656 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:147 -1
     (nil))
(insn 436 435 437 32 (set (reg:DI 5 di)
        (reg/f:DI 656 [ D.9944 ])) ns_print.c:147 -1
     (nil))
(call_insn/i 437 436 438 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ns_print.c:147 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 438 437 439 32 (set (reg:DI 878)
        (reg:DI 0 ax)) ns_print.c:147 -1
     (nil))
(insn 439 438 440 32 (set (reg:DI 879)
        (reg:DI 878)) ns_print.c:147 -1
     (nil))
(insn 440 439 442 32 (set (reg:DI 657 [ D.9951 ])
        (reg:DI 879)) ns_print.c:147 -1
     (nil))
(insn 442 440 443 32 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])) [2 buflen+0 S8 A64])
            (reg:DI 657 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 443 442 444 32 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 444 443 445 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 33 (parallel [
            (set (reg/f:DI 735 [ D.9944 ])
                (plus:DI (reg/f:DI 656 [ D.9944 ])
                    (reg:DI 657 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(jump_insn 446 445 447 33 (set (pc)
        (label_ref 2817)) ns_print.c:854 -1
     (nil)
 -> 2817)
(barrier 447 446 448)
(code_label 448 447 449 34 93 "" [7 uses])
(note 449 448 450 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 34 (parallel [
            (set (reg:DI 880)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:157 -1
     (nil))
(insn 451 450 452 34 (parallel [
            (set (reg:DI 881)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:157 -1
     (nil))
(insn 452 451 453 34 (parallel [
            (set (reg:DI 882)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:157 -1
     (nil))
(insn 453 452 454 34 (set (reg:DI 38 r9)
        (reg:DI 880)) ns_print.c:157 -1
     (nil))
(insn 454 453 455 34 (set (reg:DI 37 r8)
        (reg:DI 881)) ns_print.c:157 -1
     (nil))
(insn 455 454 456 34 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:157 -1
     (nil))
(insn 456 455 457 34 (set (reg:DI 1 dx)
        (reg:DI 882)) ns_print.c:157 -1
     (nil))
(insn 457 456 458 34 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:157 -1
     (nil))
(insn 458 457 459 34 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:157 -1
     (nil))
(call_insn 459 458 460 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:157 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 460 459 461 34 (set (reg:SI 258 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:157 -1
     (nil))
(insn 461 460 462 34 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 258 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:157 -1
     (nil))
(jump_insn 462 461 465 34 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:157 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 465 462 463 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 463 465 464 35 (set (pc)
        (label_ref 2814)) -1
     (nil)
 -> 2814)
(barrier 464 463 466)
(code_label 466 464 467 36 96 "" [2 uses])
(note 467 466 468 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 36 (parallel [
            (set (reg:DI 883)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:163 -1
     (nil))
(insn 469 468 470 36 (parallel [
            (set (reg:DI 884)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:163 -1
     (nil))
(insn 470 469 471 36 (set (reg:DI 885)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:163 -1
     (nil))
(insn 471 470 472 36 (set (reg:DI 2 cx)
        (reg:DI 883)) ns_print.c:163 -1
     (nil))
(insn 472 471 473 36 (set (reg:DI 1 dx)
        (reg:DI 884)) ns_print.c:163 -1
     (nil))
(insn 473 472 474 36 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:163 -1
     (nil))
(insn 474 473 475 36 (set (reg:DI 5 di)
        (reg:DI 885)) ns_print.c:163 -1
     (nil))
(call_insn 475 474 476 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 476 475 477 36 (set (reg/v:SI 260 [ len ])
        (reg:SI 0 ax)) ns_print.c:163 -1
     (nil))
(insn 477 476 478 36 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 260 [ len ])
            (const_int 0 [0]))) ns_print.c:163 -1
     (nil))
(jump_insn 478 477 479 36 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:163 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 479 478 480 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 260 [ len ])
            (const_int 0 [0]))) ns_print.c:164 -1
     (nil))
(jump_insn 481 480 482 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) ns_print.c:164 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 487)
(note 482 481 483 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 38 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 484 483 179 38 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 179 484 485 38 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 485 179 486 38 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 486 485 487)
(code_label 487 486 488 39 119 "" [1 uses])
(note 488 487 489 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 39 (set (reg:DI 886 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 260 [ len ]))) ns_print.c:166 -1
     (nil))
(insn 490 489 491 39 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (reg:DI 886 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:166 -1
     (nil))
(insn 491 490 492 39 (parallel [
            (set (reg:DI 887)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:167 -1
     (nil))
(insn 492 491 493 39 (parallel [
            (set (reg:DI 888)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:167 -1
     (nil))
(insn 493 492 494 39 (set (reg:DI 2 cx)
        (reg:DI 887)) ns_print.c:167 -1
     (nil))
(insn 494 493 495 39 (set (reg:DI 1 dx)
        (reg:DI 888)) ns_print.c:167 -1
     (nil))
(insn 495 494 496 39 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:167 -1
     (nil))
(insn 496 495 497 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:167 -1
     (nil))
(call_insn 497 496 498 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 498 497 499 39 (set (reg:SI 264 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:167 -1
     (nil))
(insn 499 498 500 39 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 264 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:167 -1
     (nil))
(jump_insn 500 499 501 39 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:167 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 501 500 502 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 832 [ type ])
            (const_int 20 [0x14]))) ns_print.c:171 -1
     (nil))
(jump_insn 503 502 504 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) ns_print.c:171 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 508)
(note 504 503 505 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 41 (set (reg/f:DI 265 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(jump_insn 506 505 507 41 (set (pc)
        (label_ref 517)) -1
     (nil)
 -> 517)
(barrier 507 506 508)
(code_label 508 507 509 42 121 "" [1 uses])
(note 509 508 510 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 42 (set (reg/f:DI 265 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:171 -1
     (nil))
(insn 511 510 512 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 265 [ D.9950 ]))) ns_print.c:171 -1
     (nil))
(jump_insn 512 511 513 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 517)
            (pc))) ns_print.c:171 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 517)
(note 513 512 514 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 514 513 515 43 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 515 514 516 43 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 516 515 517)
(code_label 517 516 518 44 122 "" [2 uses])
(note 518 517 519 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 519 518 520 44 (parallel [
            (set (reg:DI 889)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:174 -1
     (nil))
(insn 520 519 521 44 (parallel [
            (set (reg:DI 890)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:174 -1
     (nil))
(insn 521 520 522 44 (set (reg:DI 2 cx)
        (reg:DI 889)) ns_print.c:174 -1
     (nil))
(insn 522 521 523 44 (set (reg:DI 1 dx)
        (reg:DI 890)) ns_print.c:174 -1
     (nil))
(insn 523 522 524 44 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:174 -1
     (nil))
(insn 524 523 525 44 (set (reg:DI 5 di)
        (reg/f:DI 265 [ D.9950 ])) ns_print.c:174 -1
     (nil))
(call_insn 525 524 526 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:174 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 526 525 527 44 (set (reg/v:SI 266 [ len ])
        (reg:SI 0 ax)) ns_print.c:174 -1
     (nil))
(insn 527 526 528 44 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 266 [ len ])
            (const_int 0 [0]))) ns_print.c:174 -1
     (nil))
(jump_insn 528 527 529 44 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:174 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 529 528 530 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 266 [ len ])
            (const_int 0 [0]))) ns_print.c:175 -1
     (nil))
(jump_insn 531 530 532 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 536)
            (pc))) ns_print.c:175 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 536)
(note 532 531 533 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 533 532 534 46 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 534 533 535 46 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 535 534 536)
(code_label 536 535 537 47 123 "" [1 uses])
(note 537 536 538 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 538 537 539 47 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 539 538 194 47 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 194 539 540 47 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 540 194 541 47 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 541 540 542)
(code_label 542 541 543 48 94 "" [1 uses])
(note 543 542 544 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 48 (parallel [
            (set (reg:DI 891)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:184 -1
     (nil))
(insn 545 544 546 48 (parallel [
            (set (reg:DI 892)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:184 -1
     (nil))
(insn 546 545 547 48 (parallel [
            (set (reg:DI 893)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:184 -1
     (nil))
(insn 547 546 548 48 (set (reg:DI 38 r9)
        (reg:DI 891)) ns_print.c:184 -1
     (nil))
(insn 548 547 549 48 (set (reg:DI 37 r8)
        (reg:DI 892)) ns_print.c:184 -1
     (nil))
(insn 549 548 550 48 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:184 -1
     (nil))
(insn 550 549 551 48 (set (reg:DI 1 dx)
        (reg:DI 893)) ns_print.c:184 -1
     (nil))
(insn 551 550 552 48 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:184 -1
     (nil))
(insn 552 551 553 48 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:184 -1
     (nil))
(call_insn 553 552 554 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:184 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 554 553 555 48 (set (reg:SI 267 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:184 -1
     (nil))
(insn 555 554 556 48 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 267 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:184 -1
     (nil))
(jump_insn 556 555 557 48 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:184 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 557 556 558 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 558 557 559 49 (parallel [
            (set (reg:DI 894)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:185 -1
     (nil))
(insn 559 558 560 49 (parallel [
            (set (reg:DI 895)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:185 -1
     (nil))
(insn 560 559 561 49 (set (reg:DI 2 cx)
        (reg:DI 894)) ns_print.c:185 -1
     (nil))
(insn 561 560 562 49 (set (reg:DI 1 dx)
        (reg:DI 895)) ns_print.c:185 -1
     (nil))
(insn 562 561 563 49 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:185 -1
     (nil))
(insn 563 562 564 49 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:185 -1
     (nil))
(call_insn 564 563 565 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 565 564 566 49 (set (reg:SI 268 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:185 -1
     (nil))
(insn 566 565 567 49 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 268 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:185 -1
     (nil))
(jump_insn 567 566 568 49 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:185 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 568 567 569 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 569 568 570 50 (parallel [
            (set (reg:DI 896)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:188 -1
     (nil))
(insn 570 569 571 50 (parallel [
            (set (reg:DI 897)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:188 -1
     (nil))
(insn 571 570 572 50 (parallel [
            (set (reg:DI 898)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:188 -1
     (nil))
(insn 572 571 573 50 (set (reg:DI 38 r9)
        (reg:DI 896)) ns_print.c:188 -1
     (nil))
(insn 573 572 574 50 (set (reg:DI 37 r8)
        (reg:DI 897)) ns_print.c:188 -1
     (nil))
(insn 574 573 575 50 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:188 -1
     (nil))
(insn 575 574 576 50 (set (reg:DI 1 dx)
        (reg:DI 898)) ns_print.c:188 -1
     (nil))
(insn 576 575 577 50 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:188 -1
     (nil))
(insn 577 576 578 50 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:188 -1
     (nil))
(call_insn 578 577 579 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:188 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 579 578 580 50 (set (reg:SI 269 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:188 -1
     (nil))
(insn 580 579 581 50 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 269 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:188 -1
     (nil))
(jump_insn 581 580 582 50 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:188 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 582 581 583 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 51 (parallel [
            (set (reg:DI 899)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:189 -1
     (nil))
(insn 584 583 585 51 (parallel [
            (set (reg:DI 900)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:189 -1
     (nil))
(insn 585 584 586 51 (set (reg:DI 2 cx)
        (reg:DI 899)) ns_print.c:189 -1
     (nil))
(insn 586 585 587 51 (set (reg:DI 1 dx)
        (reg:DI 900)) ns_print.c:189 -1
     (nil))
(insn 587 586 588 51 (set (reg:DI 4 si)
        (const_int 3 [0x3])) ns_print.c:189 -1
     (nil))
(insn 588 587 589 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x2b5d79ba1480 *.LC22>)) ns_print.c:189 -1
     (nil))
(call_insn 589 588 590 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 590 589 591 51 (set (reg:SI 270 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:189 -1
     (nil))
(insn 591 590 592 51 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 270 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:189 -1
     (nil))
(jump_insn 592 591 593 51 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:189 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 593 592 594 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 594 593 595 52 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) ns_print.c:192 -1
     (nil))
(insn 595 594 596 52 (set (reg/f:DI 272 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:192 -1
     (nil))
(insn 596 595 597 52 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 272 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:192 -1
     (nil))
(insn 597 596 598 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 274 [ D.9954 ])
            (const_int 20 [0x14]))) ns_print.c:192 -1
     (nil))
(jump_insn 598 597 599 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3065)
            (pc))) ns_print.c:192 612 {*jcc_1}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 3065)
(note 599 598 600 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 53 (set (reg:DI 5 di)
        (reg/f:DI 272 [ D.9950 ])) ns_print.c:196 -1
     (nil))
(call_insn 601 600 602 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:196 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 602 601 603 53 (set (reg/v:DI 275 [ t ])
        (reg:DI 0 ax)) ns_print.c:196 -1
     (nil))
(insn 603 602 604 53 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:196 -1
     (nil))
(insn 604 603 605 53 (parallel [
            (set (reg:DI 901)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:197 -1
     (nil))
(insn 605 604 606 53 (parallel [
            (set (reg:DI 902)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:197 -1
     (nil))
(insn 606 605 607 53 (set (reg:DI 2 cx)
        (reg:DI 901)) ns_print.c:197 -1
     (nil))
(insn 607 606 608 53 (set (reg:DI 1 dx)
        (reg:DI 902)) ns_print.c:197 -1
     (nil))
(insn 608 607 609 53 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:197 -1
     (nil))
(insn 609 608 610 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b5d79ba1510 *.LC23>)) ns_print.c:197 -1
     (nil))
(call_insn 610 609 611 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:197 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 611 610 612 53 (set (reg:SI 278 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:197 -1
     (nil))
(insn 612 611 613 53 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 278 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:197 -1
     (nil))
(jump_insn 613 612 614 53 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:197 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 614 613 615 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 616 54 (parallel [
            (set (reg:DI 903)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:198 -1
     (nil))
(insn 616 615 617 54 (set (reg:DI 1 dx)
        (reg/v:DI 275 [ t ])) ns_print.c:198 -1
     (nil))
(insn 617 616 618 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2b5d79ba15a0 *.LC24>)) ns_print.c:198 -1
     (nil))
(insn 618 617 619 54 (set (reg:DI 5 di)
        (reg:DI 903)) ns_print.c:198 -1
     (nil))
(insn 619 618 620 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:198 -1
     (nil))
(call_insn 620 619 621 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:198 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 621 620 622 54 (set (reg/v:SI 279 [ len ])
        (reg:SI 0 ax)) ns_print.c:198 -1
     (nil))
(insn 622 621 623 54 (set (reg:DI 280 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 279 [ len ]))) ns_print.c:199 -1
     (nil))
(insn 623 622 624 54 (parallel [
            (set (reg:DI 904)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:199 -1
     (nil))
(insn 624 623 625 54 (parallel [
            (set (reg:DI 905)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:199 -1
     (nil))
(insn 625 624 626 54 (parallel [
            (set (reg:DI 906)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:199 -1
     (nil))
(insn 626 625 627 54 (set (reg:DI 2 cx)
        (reg:DI 904)) ns_print.c:199 -1
     (nil))
(insn 627 626 628 54 (set (reg:DI 1 dx)
        (reg:DI 905)) ns_print.c:199 -1
     (nil))
(insn 628 627 629 54 (set (reg:DI 4 si)
        (reg:DI 280 [ D.9951 ])) ns_print.c:199 -1
     (nil))
(insn 629 628 630 54 (set (reg:DI 5 di)
        (reg:DI 906)) ns_print.c:199 -1
     (nil))
(call_insn 630 629 631 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:199 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 631 630 632 54 (set (reg:SI 281 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:199 -1
     (nil))
(insn 632 631 633 54 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 281 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:199 -1
     (nil))
(jump_insn 633 632 634 54 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:199 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 634 633 635 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 55 (parallel [
            (set (reg:DI 907)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:200 -1
     (nil))
(insn 636 635 637 55 (parallel [
            (set (reg:DI 908)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:200 -1
     (nil))
(insn 637 636 638 55 (set (reg:DI 37 r8)
        (reg:DI 907)) ns_print.c:200 -1
     (nil))
(insn 638 637 639 55 (set (reg:DI 2 cx)
        (reg:DI 908)) ns_print.c:200 -1
     (nil))
(insn 639 638 640 55 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:200 -1
     (nil))
(insn 640 639 641 55 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:200 -1
     (nil))
(insn 641 640 642 55 (set (reg:DI 5 di)
        (reg:DI 280 [ D.9951 ])) ns_print.c:200 -1
     (nil))
(call_insn 642 641 643 55 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 643 642 644 55 (set (reg/v:SI 282 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:200 -1
     (nil))
(insn 644 643 645 55 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 282 [ spaced ])
            (const_int 0 [0]))) ns_print.c:200 -1
     (nil))
(jump_insn 645 644 646 55 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:200 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 646 645 647 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 647 646 648 56 (parallel [
            (set (reg:DI 909)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:201 -1
     (nil))
(insn 648 647 649 56 (parallel [
            (set (reg:DI 910)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:201 -1
     (nil))
(insn 649 648 650 56 (set (reg:DI 2 cx)
        (reg:DI 909)) ns_print.c:201 -1
     (nil))
(insn 650 649 651 56 (set (reg:DI 1 dx)
        (reg:DI 910)) ns_print.c:201 -1
     (nil))
(insn 651 650 652 56 (set (reg:DI 4 si)
        (const_int 9 [0x9])) ns_print.c:201 -1
     (nil))
(insn 652 651 653 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2b5d79ba1630 *.LC25>)) ns_print.c:201 -1
     (nil))
(call_insn 653 652 654 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:201 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 654 653 655 56 (set (reg:SI 283 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:201 -1
     (nil))
(insn 655 654 656 56 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 283 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:201 -1
     (nil))
(jump_insn 656 655 657 56 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:201 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 657 656 658 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 57 (set (reg:DI 911)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:205 -1
     (nil))
(insn 659 658 660 57 (set (reg:DI 5 di)
        (reg:DI 911)) ns_print.c:205 -1
     (nil))
(call_insn 660 659 661 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:205 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 661 660 662 57 (set (reg/v:DI 285 [ t ])
        (reg:DI 0 ax)) ns_print.c:205 -1
     (nil))
(insn 662 661 663 57 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:205 -1
     (nil))
(insn 663 662 664 57 (parallel [
            (set (reg:DI 912)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:206 -1
     (nil))
(insn 664 663 665 57 (parallel [
            (set (reg:DI 913)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:206 -1
     (nil))
(insn 665 664 666 57 (set (reg:DI 2 cx)
        (reg:DI 912)) ns_print.c:206 -1
     (nil))
(insn 666 665 667 57 (set (reg:DI 1 dx)
        (reg:DI 913)) ns_print.c:206 -1
     (nil))
(insn 667 666 668 57 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:206 -1
     (nil))
(insn 668 667 669 57 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b5d79ba1510 *.LC23>)) ns_print.c:206 -1
     (nil))
(call_insn 669 668 670 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:206 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 670 669 671 57 (set (reg:SI 288 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:206 -1
     (nil))
(insn 671 670 672 57 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 288 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:206 -1
     (nil))
(jump_insn 672 671 673 57 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:206 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 673 672 674 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 58 (set (reg:DI 914)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:207 -1
     (nil))
(insn 675 674 676 58 (set (reg:DI 915)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:207 -1
     (nil))
(insn 676 675 677 58 (set (reg:DI 1 dx)
        (reg:DI 914)) ns_print.c:207 -1
     (nil))
(insn 677 676 678 58 (set (reg:DI 4 si)
        (reg:DI 915)) ns_print.c:207 -1
     (nil))
(insn 678 677 679 58 (set (reg:DI 5 di)
        (reg/v:DI 285 [ t ])) ns_print.c:207 -1
     (nil))
(call_insn 679 678 680 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>) [0 ns_format_ttl S1 A8])
            (const_int 0 [0]))) ns_print.c:207 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 680 679 681 58 (set (reg/v:SI 291 [ len ])
        (reg:SI 0 ax)) ns_print.c:207 -1
     (nil))
(insn 681 680 682 58 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 291 [ len ])
            (const_int 0 [0]))) ns_print.c:207 -1
     (nil))
(jump_insn 682 681 683 58 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:207 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 683 682 684 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 684 683 685 59 (set (reg:DI 292 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 291 [ len ]))) ns_print.c:208 -1
     (nil))
(insn 685 684 686 59 (set (reg:DI 658 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 686 685 687 59 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 292 [ D.9951 ])
            (reg:DI 658 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 687 686 688 59 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 688 687 689 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 60 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                    (reg:DI 292 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 690 689 691 60 (parallel [
            (set (reg:DI 916)
                (minus:DI (reg:DI 658 [ D.9951 ])
                    (reg:DI 292 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 691 690 692 60 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 916)) ns_print.c:855 -1
     (nil))
(insn 692 691 693 60 (parallel [
            (set (reg:DI 917)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:209 -1
     (nil))
(insn 693 692 694 60 (parallel [
            (set (reg:DI 918)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:209 -1
     (nil))
(insn 694 693 695 60 (set (reg:DI 37 r8)
        (reg:DI 917)) ns_print.c:209 -1
     (nil))
(insn 695 694 696 60 (set (reg:DI 2 cx)
        (reg:DI 918)) ns_print.c:209 -1
     (nil))
(insn 696 695 697 60 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:209 -1
     (nil))
(insn 697 696 698 60 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:209 -1
     (nil))
(insn 698 697 699 60 (set (reg:DI 5 di)
        (reg:DI 292 [ D.9951 ])) ns_print.c:209 -1
     (nil))
(call_insn 699 698 700 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 700 699 701 60 (set (reg/v:SI 294 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:209 -1
     (nil))
(insn 701 700 702 60 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 294 [ spaced ])
            (const_int 0 [0]))) ns_print.c:209 -1
     (nil))
(jump_insn 702 701 703 60 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:209 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 703 702 704 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 704 703 705 61 (parallel [
            (set (reg:DI 919)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:210 -1
     (nil))
(insn 705 704 706 61 (parallel [
            (set (reg:DI 920)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:210 -1
     (nil))
(insn 706 705 707 61 (set (reg:DI 2 cx)
        (reg:DI 919)) ns_print.c:210 -1
     (nil))
(insn 707 706 708 61 (set (reg:DI 1 dx)
        (reg:DI 920)) ns_print.c:210 -1
     (nil))
(insn 708 707 709 61 (set (reg:DI 4 si)
        (const_int 10 [0xa])) ns_print.c:210 -1
     (nil))
(insn 709 708 710 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2b5d79ba16c0 *.LC26>)) ns_print.c:210 -1
     (nil))
(call_insn 710 709 711 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:210 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 711 710 712 61 (set (reg:SI 295 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:210 -1
     (nil))
(insn 712 711 713 61 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 295 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:210 -1
     (nil))
(jump_insn 713 712 714 61 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:210 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 714 713 715 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 62 (set (reg:DI 921)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:214 -1
     (nil))
(insn 716 715 717 62 (set (reg:DI 5 di)
        (reg:DI 921)) ns_print.c:214 -1
     (nil))
(call_insn 717 716 718 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:214 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 718 717 719 62 (set (reg/v:DI 297 [ t ])
        (reg:DI 0 ax)) ns_print.c:214 -1
     (nil))
(insn 719 718 720 62 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:214 -1
     (nil))
(insn 720 719 721 62 (parallel [
            (set (reg:DI 922)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:215 -1
     (nil))
(insn 721 720 722 62 (parallel [
            (set (reg:DI 923)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:215 -1
     (nil))
(insn 722 721 723 62 (set (reg:DI 2 cx)
        (reg:DI 922)) ns_print.c:215 -1
     (nil))
(insn 723 722 724 62 (set (reg:DI 1 dx)
        (reg:DI 923)) ns_print.c:215 -1
     (nil))
(insn 724 723 725 62 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:215 -1
     (nil))
(insn 725 724 726 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b5d79ba1510 *.LC23>)) ns_print.c:215 -1
     (nil))
(call_insn 726 725 727 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:215 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 727 726 728 62 (set (reg:SI 300 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:215 -1
     (nil))
(insn 728 727 729 62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 300 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:215 -1
     (nil))
(jump_insn 729 728 730 62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:215 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 730 729 731 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 731 730 732 63 (set (reg:DI 924)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:216 -1
     (nil))
(insn 732 731 733 63 (set (reg:DI 925)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:216 -1
     (nil))
(insn 733 732 734 63 (set (reg:DI 1 dx)
        (reg:DI 924)) ns_print.c:216 -1
     (nil))
(insn 734 733 735 63 (set (reg:DI 4 si)
        (reg:DI 925)) ns_print.c:216 -1
     (nil))
(insn 735 734 736 63 (set (reg:DI 5 di)
        (reg/v:DI 297 [ t ])) ns_print.c:216 -1
     (nil))
(call_insn 736 735 737 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>) [0 ns_format_ttl S1 A8])
            (const_int 0 [0]))) ns_print.c:216 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 737 736 738 63 (set (reg/v:SI 303 [ len ])
        (reg:SI 0 ax)) ns_print.c:216 -1
     (nil))
(insn 738 737 739 63 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 303 [ len ])
            (const_int 0 [0]))) ns_print.c:216 -1
     (nil))
(jump_insn 739 738 740 63 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:216 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 740 739 741 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 741 740 742 64 (set (reg:DI 304 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 303 [ len ]))) ns_print.c:217 -1
     (nil))
(insn 742 741 743 64 (set (reg:DI 293 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 743 742 744 64 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 293 [ D.9951 ])
            (reg:DI 304 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 744 743 745 64 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 745 744 746 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 65 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                    (reg:DI 304 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 747 746 748 65 (parallel [
            (set (reg:DI 926)
                (minus:DI (reg:DI 293 [ D.9951 ])
                    (reg:DI 304 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 748 747 749 65 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 926)) ns_print.c:855 -1
     (nil))
(insn 749 748 750 65 (parallel [
            (set (reg:DI 927)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:218 -1
     (nil))
(insn 750 749 751 65 (parallel [
            (set (reg:DI 928)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:218 -1
     (nil))
(insn 751 750 752 65 (set (reg:DI 37 r8)
        (reg:DI 927)) ns_print.c:218 -1
     (nil))
(insn 752 751 753 65 (set (reg:DI 2 cx)
        (reg:DI 928)) ns_print.c:218 -1
     (nil))
(insn 753 752 754 65 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:218 -1
     (nil))
(insn 754 753 755 65 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:218 -1
     (nil))
(insn 755 754 756 65 (set (reg:DI 5 di)
        (reg:DI 304 [ D.9951 ])) ns_print.c:218 -1
     (nil))
(call_insn 756 755 757 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:218 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 757 756 758 65 (set (reg/v:SI 306 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:218 -1
     (nil))
(insn 758 757 759 65 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 306 [ spaced ])
            (const_int 0 [0]))) ns_print.c:218 -1
     (nil))
(jump_insn 759 758 760 65 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:218 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 760 759 761 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 761 760 762 66 (parallel [
            (set (reg:DI 929)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:219 -1
     (nil))
(insn 762 761 763 66 (parallel [
            (set (reg:DI 930)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:219 -1
     (nil))
(insn 763 762 764 66 (set (reg:DI 2 cx)
        (reg:DI 929)) ns_print.c:219 -1
     (nil))
(insn 764 763 765 66 (set (reg:DI 1 dx)
        (reg:DI 930)) ns_print.c:219 -1
     (nil))
(insn 765 764 766 66 (set (reg:DI 4 si)
        (const_int 8 [0x8])) ns_print.c:219 -1
     (nil))
(insn 766 765 767 66 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2b5d79ba1750 *.LC27>)) ns_print.c:219 -1
     (nil))
(call_insn 767 766 768 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:219 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 768 767 769 66 (set (reg:SI 307 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:219 -1
     (nil))
(insn 769 768 770 66 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 307 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:219 -1
     (nil))
(jump_insn 770 769 771 66 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:219 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 771 770 772 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 67 (set (reg:DI 931)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:223 -1
     (nil))
(insn 773 772 774 67 (set (reg:DI 5 di)
        (reg:DI 931)) ns_print.c:223 -1
     (nil))
(call_insn 774 773 775 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:223 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 775 774 776 67 (set (reg/v:DI 309 [ t ])
        (reg:DI 0 ax)) ns_print.c:223 -1
     (nil))
(insn 776 775 777 67 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:223 -1
     (nil))
(insn 777 776 778 67 (parallel [
            (set (reg:DI 932)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:224 -1
     (nil))
(insn 778 777 779 67 (parallel [
            (set (reg:DI 933)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:224 -1
     (nil))
(insn 779 778 780 67 (set (reg:DI 2 cx)
        (reg:DI 932)) ns_print.c:224 -1
     (nil))
(insn 780 779 781 67 (set (reg:DI 1 dx)
        (reg:DI 933)) ns_print.c:224 -1
     (nil))
(insn 781 780 782 67 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:224 -1
     (nil))
(insn 782 781 783 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b5d79ba1510 *.LC23>)) ns_print.c:224 -1
     (nil))
(call_insn 783 782 784 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:224 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 784 783 785 67 (set (reg:SI 312 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:224 -1
     (nil))
(insn 785 784 786 67 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 312 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:224 -1
     (nil))
(jump_insn 786 785 787 67 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:224 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 787 786 788 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 788 787 789 68 (set (reg:DI 934)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:225 -1
     (nil))
(insn 789 788 790 68 (set (reg:DI 935)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:225 -1
     (nil))
(insn 790 789 791 68 (set (reg:DI 1 dx)
        (reg:DI 934)) ns_print.c:225 -1
     (nil))
(insn 791 790 792 68 (set (reg:DI 4 si)
        (reg:DI 935)) ns_print.c:225 -1
     (nil))
(insn 792 791 793 68 (set (reg:DI 5 di)
        (reg/v:DI 309 [ t ])) ns_print.c:225 -1
     (nil))
(call_insn 793 792 794 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>) [0 ns_format_ttl S1 A8])
            (const_int 0 [0]))) ns_print.c:225 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 794 793 795 68 (set (reg/v:SI 315 [ len ])
        (reg:SI 0 ax)) ns_print.c:225 -1
     (nil))
(insn 795 794 796 68 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 315 [ len ])
            (const_int 0 [0]))) ns_print.c:225 -1
     (nil))
(jump_insn 796 795 797 68 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:225 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 797 796 798 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 69 (set (reg:DI 316 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 315 [ len ]))) ns_print.c:226 -1
     (nil))
(insn 799 798 800 69 (set (reg:DI 305 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 800 799 801 69 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 305 [ D.9951 ])
            (reg:DI 316 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 801 800 802 69 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 802 801 803 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 804 70 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                    (reg:DI 316 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 804 803 805 70 (parallel [
            (set (reg:DI 936)
                (minus:DI (reg:DI 305 [ D.9951 ])
                    (reg:DI 316 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 805 804 806 70 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 936)) ns_print.c:855 -1
     (nil))
(insn 806 805 807 70 (parallel [
            (set (reg:DI 937)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:227 -1
     (nil))
(insn 807 806 808 70 (parallel [
            (set (reg:DI 938)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:227 -1
     (nil))
(insn 808 807 809 70 (set (reg:DI 37 r8)
        (reg:DI 937)) ns_print.c:227 -1
     (nil))
(insn 809 808 810 70 (set (reg:DI 2 cx)
        (reg:DI 938)) ns_print.c:227 -1
     (nil))
(insn 810 809 811 70 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:227 -1
     (nil))
(insn 811 810 812 70 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:227 -1
     (nil))
(insn 812 811 813 70 (set (reg:DI 5 di)
        (reg:DI 316 [ D.9951 ])) ns_print.c:227 -1
     (nil))
(call_insn 813 812 814 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:227 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 814 813 815 70 (set (reg/v:SI 318 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:227 -1
     (nil))
(insn 815 814 816 70 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 318 [ spaced ])
            (const_int 0 [0]))) ns_print.c:227 -1
     (nil))
(jump_insn 816 815 817 70 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:227 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 817 816 818 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 71 (parallel [
            (set (reg:DI 939)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:228 -1
     (nil))
(insn 819 818 820 71 (parallel [
            (set (reg:DI 940)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:228 -1
     (nil))
(insn 820 819 821 71 (set (reg:DI 2 cx)
        (reg:DI 939)) ns_print.c:228 -1
     (nil))
(insn 821 820 822 71 (set (reg:DI 1 dx)
        (reg:DI 940)) ns_print.c:228 -1
     (nil))
(insn 822 821 823 71 (set (reg:DI 4 si)
        (const_int 9 [0x9])) ns_print.c:228 -1
     (nil))
(insn 823 822 824 71 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x2b5d79ba17e0 *.LC28>)) ns_print.c:228 -1
     (nil))
(call_insn 824 823 825 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:228 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 825 824 826 71 (set (reg:SI 319 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:228 -1
     (nil))
(insn 826 825 827 71 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 319 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:228 -1
     (nil))
(jump_insn 827 826 828 71 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:228 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 828 827 829 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 829 828 830 72 (set (reg:DI 941)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:232 -1
     (nil))
(insn 830 829 831 72 (set (reg:DI 5 di)
        (reg:DI 941)) ns_print.c:232 -1
     (nil))
(call_insn 831 830 832 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:232 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 832 831 833 72 (set (reg/v:DI 321 [ t ])
        (reg:DI 0 ax)) ns_print.c:232 -1
     (nil))
(insn 833 832 834 72 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:232 -1
     (nil))
(insn 834 833 835 72 (parallel [
            (set (reg:DI 942)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:233 -1
     (nil))
(insn 835 834 836 72 (parallel [
            (set (reg:DI 943)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:233 -1
     (nil))
(insn 836 835 837 72 (set (reg:DI 2 cx)
        (reg:DI 942)) ns_print.c:233 -1
     (nil))
(insn 837 836 838 72 (set (reg:DI 1 dx)
        (reg:DI 943)) ns_print.c:233 -1
     (nil))
(insn 838 837 839 72 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:233 -1
     (nil))
(insn 839 838 840 72 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x2b5d79ba1510 *.LC23>)) ns_print.c:233 -1
     (nil))
(call_insn 840 839 841 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:233 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 841 840 842 72 (set (reg:SI 324 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:233 -1
     (nil))
(insn 842 841 843 72 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 324 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:233 -1
     (nil))
(jump_insn 843 842 844 72 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:233 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 844 843 845 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 73 (set (reg:DI 944)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:234 -1
     (nil))
(insn 846 845 847 73 (set (reg:DI 945)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:234 -1
     (nil))
(insn 847 846 848 73 (set (reg:DI 1 dx)
        (reg:DI 944)) ns_print.c:234 -1
     (nil))
(insn 848 847 849 73 (set (reg:DI 4 si)
        (reg:DI 945)) ns_print.c:234 -1
     (nil))
(insn 849 848 850 73 (set (reg:DI 5 di)
        (reg/v:DI 321 [ t ])) ns_print.c:234 -1
     (nil))
(call_insn 850 849 851 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>) [0 ns_format_ttl S1 A8])
            (const_int 0 [0]))) ns_print.c:234 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_format_ttl") [flags 0x43]  <function_decl 0x2b5d795d1438 ns_format_ttl>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 851 850 852 73 (set (reg/v:SI 327 [ len ])
        (reg:SI 0 ax)) ns_print.c:234 -1
     (nil))
(insn 852 851 853 73 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 327 [ len ])
            (const_int 0 [0]))) ns_print.c:234 -1
     (nil))
(jump_insn 853 852 854 73 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:234 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 854 853 855 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 855 854 856 74 (set (reg:DI 328 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 327 [ len ]))) ns_print.c:235 -1
     (nil))
(insn 856 855 857 74 (set (reg:DI 317 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 857 856 858 74 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 317 [ D.9951 ])
            (reg:DI 328 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 858 857 859 74 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 859 858 860 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 860 859 861 75 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
                    (reg:DI 328 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 861 860 862 75 (parallel [
            (set (reg:DI 946)
                (minus:DI (reg:DI 317 [ D.9951 ])
                    (reg:DI 328 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 862 861 863 75 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 946)) ns_print.c:855 -1
     (nil))
(insn 863 862 864 75 (parallel [
            (set (reg:DI 947)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:236 -1
     (nil))
(insn 864 863 865 75 (parallel [
            (set (reg:DI 948)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:236 -1
     (nil))
(insn 865 864 866 75 (set (reg:DI 2 cx)
        (reg:DI 947)) ns_print.c:236 -1
     (nil))
(insn 866 865 867 75 (set (reg:DI 1 dx)
        (reg:DI 948)) ns_print.c:236 -1
     (nil))
(insn 867 866 868 75 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:236 -1
     (nil))
(insn 868 867 869 75 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2b5d79ba1870 *.LC29>)) ns_print.c:236 -1
     (nil))
(call_insn 869 868 870 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:236 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 870 869 871 75 (set (reg:SI 330 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:236 -1
     (nil))
(insn 871 870 872 75 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 330 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:236 -1
     (nil))
(jump_insn 872 871 873 75 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:236 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 873 872 874 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 875 76 (parallel [
            (set (reg:DI 949)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:237 -1
     (nil))
(insn 875 874 876 76 (parallel [
            (set (reg:DI 950)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:237 -1
     (nil))
(insn 876 875 877 76 (set (reg:DI 37 r8)
        (reg:DI 949)) ns_print.c:237 -1
     (nil))
(insn 877 876 878 76 (set (reg:DI 2 cx)
        (reg:DI 950)) ns_print.c:237 -1
     (nil))
(insn 878 877 879 76 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:237 -1
     (nil))
(insn 879 878 880 76 (set (reg:DI 4 si)
        (const_int 16 [0x10])) ns_print.c:237 -1
     (nil))
(insn 880 879 881 76 (set (reg:DI 5 di)
        (reg:DI 328 [ D.9951 ])) ns_print.c:237 -1
     (nil))
(call_insn 881 880 882 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:237 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 882 881 883 76 (set (reg/v:SI 331 [ spaced ])
        (reg:SI 0 ax)) ns_print.c:237 -1
     (nil))
(insn 883 882 884 76 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 331 [ spaced ])
            (const_int 0 [0]))) ns_print.c:237 -1
     (nil))
(jump_insn 884 883 885 76 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:237 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 885 884 886 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 886 885 887 77 (parallel [
            (set (reg:DI 951)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:238 -1
     (nil))
(insn 887 886 888 77 (parallel [
            (set (reg:DI 952)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:238 -1
     (nil))
(insn 888 887 889 77 (set (reg:DI 2 cx)
        (reg:DI 951)) ns_print.c:238 -1
     (nil))
(insn 889 888 890 77 (set (reg:DI 1 dx)
        (reg:DI 952)) ns_print.c:238 -1
     (nil))
(insn 890 889 891 77 (set (reg:DI 4 si)
        (const_int 10 [0xa])) ns_print.c:238 -1
     (nil))
(insn 891 890 892 77 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x2b5d79ba1900 *.LC30>)) ns_print.c:238 -1
     (nil))
(call_insn 892 891 893 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:238 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 893 892 894 77 (set (reg:SI 332 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:238 -1
     (nil))
(insn 894 893 895 77 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 332 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:238 -1
     (nil))
(jump_insn 895 894 896 77 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:238 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 896 895 897 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 897 896 898 78 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 898 897 899 78 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 899 898 900)
(code_label 900 899 901 79 98 "" [3 uses])
(note 901 900 902 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 902 901 903 79 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 1 [0x1]))) ns_print.c:248 -1
     (nil))
(jump_insn 903 902 904 79 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 909)
            (pc))) ns_print.c:248 -1
     (int_list:REG_BR_PROB 5248 (nil))
 -> 909)
(note 904 903 905 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 906 80 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 906 905 192 80 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 192 906 907 80 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 907 192 908 80 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 908 907 909)
(code_label 909 908 910 81 124 "" [1 uses])
(note 910 909 911 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 81 (set (reg:DI 953)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:252 -1
     (nil))
(insn 912 911 913 81 (set (reg:DI 5 di)
        (reg:DI 953)) ns_print.c:252 -1
     (nil))
(call_insn 913 912 914 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:252 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 914 913 915 81 (set (reg/v:SI 334 [ t ])
        (reg:SI 0 ax)) ns_print.c:252 -1
     (nil))
(insn 915 914 916 81 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:253 -1
     (nil))
(insn 916 915 917 81 (parallel [
            (set (reg:DI 954)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:254 -1
     (nil))
(insn 917 916 918 81 (set (reg:SI 1 dx)
        (reg/v:SI 334 [ t ])) ns_print.c:254 -1
     (nil))
(insn 918 917 919 81 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x2b5d79ba1990 *.LC31>)) ns_print.c:254 -1
     (nil))
(insn 919 918 920 81 (set (reg:DI 5 di)
        (reg:DI 954)) ns_print.c:254 -1
     (nil))
(insn 920 919 921 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:254 -1
     (nil))
(call_insn 921 920 922 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 922 921 923 81 (set (reg/v:SI 337 [ len ])
        (reg:SI 0 ax)) ns_print.c:254 -1
     (nil))
(insn 923 922 924 81 (parallel [
            (set (reg:DI 955)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:255 -1
     (nil))
(insn 924 923 925 81 (parallel [
            (set (reg:DI 956)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:255 -1
     (nil))
(insn 925 924 926 81 (set (reg:DI 957 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 337 [ len ]))) ns_print.c:255 -1
     (nil))
(insn 926 925 927 81 (parallel [
            (set (reg:DI 958)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:255 -1
     (nil))
(insn 927 926 928 81 (set (reg:DI 2 cx)
        (reg:DI 955)) ns_print.c:255 -1
     (nil))
(insn 928 927 929 81 (set (reg:DI 1 dx)
        (reg:DI 956)) ns_print.c:255 -1
     (nil))
(insn 929 928 930 81 (set (reg:DI 4 si)
        (reg:DI 957 [ D.9951 ])) ns_print.c:255 -1
     (nil))
(insn 930 929 931 81 (set (reg:DI 5 di)
        (reg:DI 958)) ns_print.c:255 -1
     (nil))
(call_insn 931 930 932 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:255 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 932 931 933 81 (set (reg:SI 339 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:255 -1
     (nil))
(insn 933 932 934 81 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 339 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:255 -1
     (nil))
(jump_insn 934 933 935 81 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:255 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 935 934 936 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 82 (parallel [
            (set (reg:DI 959)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:258 -1
     (nil))
(insn 937 936 938 82 (parallel [
            (set (reg:DI 960)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:258 -1
     (nil))
(insn 938 937 939 82 (parallel [
            (set (reg:DI 961)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:258 -1
     (nil))
(insn 939 938 940 82 (set (reg:DI 38 r9)
        (reg:DI 959)) ns_print.c:258 -1
     (nil))
(insn 940 939 941 82 (set (reg:DI 37 r8)
        (reg:DI 960)) ns_print.c:258 -1
     (nil))
(insn 941 940 942 82 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:258 -1
     (nil))
(insn 942 941 943 82 (set (reg:DI 1 dx)
        (reg:DI 961)) ns_print.c:258 -1
     (nil))
(insn 943 942 944 82 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:258 -1
     (nil))
(insn 944 943 945 82 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:258 -1
     (nil))
(call_insn 945 944 946 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:258 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 946 945 947 82 (set (reg:SI 340 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:258 -1
     (nil))
(insn 947 946 948 82 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 340 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:258 -1
     (nil))
(jump_insn 948 947 949 82 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:258 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 949 948 950 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 951 83 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 951 950 952 83 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 952 951 953)
(code_label 953 952 954 84 104 "" [1 uses])
(note 954 953 955 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 84 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 1 [0x1]))) ns_print.c:266 -1
     (nil))
(jump_insn 956 955 957 84 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 962)
            (pc))) ns_print.c:266 -1
     (int_list:REG_BR_PROB 5248 (nil))
 -> 962)
(note 957 956 958 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 958 957 959 85 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 959 958 191 85 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 191 959 960 85 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 960 191 961 85 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 961 960 962)
(code_label 962 961 963 86 125 "" [1 uses])
(note 963 962 964 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 86 (set (reg:DI 962)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:270 -1
     (nil))
(insn 965 964 966 86 (set (reg:DI 5 di)
        (reg:DI 962)) ns_print.c:270 -1
     (nil))
(call_insn 966 965 967 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:270 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 967 966 968 86 (set (reg/v:SI 342 [ t ])
        (reg:SI 0 ax)) ns_print.c:270 -1
     (nil))
(insn 968 967 969 86 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:271 -1
     (nil))
(insn 969 968 970 86 (parallel [
            (set (reg:DI 963)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:272 -1
     (nil))
(insn 970 969 971 86 (set (reg:SI 1 dx)
        (reg/v:SI 342 [ t ])) ns_print.c:272 -1
     (nil))
(insn 971 970 972 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x2b5d79ba1990 *.LC31>)) ns_print.c:272 -1
     (nil))
(insn 972 971 973 86 (set (reg:DI 5 di)
        (reg:DI 963)) ns_print.c:272 -1
     (nil))
(insn 973 972 974 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:272 -1
     (nil))
(call_insn 974 973 975 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:272 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 975 974 976 86 (set (reg/v:SI 345 [ len ])
        (reg:SI 0 ax)) ns_print.c:272 -1
     (nil))
(insn 976 975 977 86 (parallel [
            (set (reg:DI 964)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:273 -1
     (nil))
(insn 977 976 978 86 (parallel [
            (set (reg:DI 965)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:273 -1
     (nil))
(insn 978 977 979 86 (set (reg:DI 966 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 345 [ len ]))) ns_print.c:273 -1
     (nil))
(insn 979 978 980 86 (parallel [
            (set (reg:DI 967)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:273 -1
     (nil))
(insn 980 979 981 86 (set (reg:DI 2 cx)
        (reg:DI 964)) ns_print.c:273 -1
     (nil))
(insn 981 980 982 86 (set (reg:DI 1 dx)
        (reg:DI 965)) ns_print.c:273 -1
     (nil))
(insn 982 981 983 86 (set (reg:DI 4 si)
        (reg:DI 966 [ D.9951 ])) ns_print.c:273 -1
     (nil))
(insn 983 982 984 86 (set (reg:DI 5 di)
        (reg:DI 967)) ns_print.c:273 -1
     (nil))
(call_insn 984 983 985 86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:273 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 985 984 986 86 (set (reg:SI 347 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:273 -1
     (nil))
(insn 986 985 987 86 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 347 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:273 -1
     (nil))
(jump_insn 987 986 988 86 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:273 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 988 987 989 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 989 988 990 87 (parallel [
            (set (reg:DI 968)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:276 -1
     (nil))
(insn 990 989 991 87 (parallel [
            (set (reg:DI 969)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:276 -1
     (nil))
(insn 991 990 992 87 (parallel [
            (set (reg:DI 970)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:276 -1
     (nil))
(insn 992 991 993 87 (set (reg:DI 38 r9)
        (reg:DI 968)) ns_print.c:276 -1
     (nil))
(insn 993 992 994 87 (set (reg:DI 37 r8)
        (reg:DI 969)) ns_print.c:276 -1
     (nil))
(insn 994 993 995 87 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:276 -1
     (nil))
(insn 995 994 996 87 (set (reg:DI 1 dx)
        (reg:DI 970)) ns_print.c:276 -1
     (nil))
(insn 996 995 997 87 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:276 -1
     (nil))
(insn 997 996 998 87 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:276 -1
     (nil))
(call_insn 998 997 999 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:276 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 999 998 1000 87 (set (reg:SI 348 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:276 -1
     (nil))
(insn 1000 999 1001 87 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 348 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:276 -1
     (nil))
(jump_insn 1001 1000 1002 87 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:276 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 1002 1001 1003 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1003 1002 1004 88 (parallel [
            (set (reg:DI 971)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:277 -1
     (nil))
(insn 1004 1003 1005 88 (parallel [
            (set (reg:DI 972)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:277 -1
     (nil))
(insn 1005 1004 1006 88 (set (reg:DI 2 cx)
        (reg:DI 971)) ns_print.c:277 -1
     (nil))
(insn 1006 1005 1007 88 (set (reg:DI 1 dx)
        (reg:DI 972)) ns_print.c:277 -1
     (nil))
(insn 1007 1006 1008 88 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:277 -1
     (nil))
(insn 1008 1007 1009 88 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:277 -1
     (nil))
(call_insn 1009 1008 1010 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:277 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1010 1009 1011 88 (set (reg:SI 349 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:277 -1
     (nil))
(insn 1011 1010 1012 88 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 349 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:277 -1
     (nil))
(jump_insn 1012 1011 1013 88 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:277 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 1013 1012 1014 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1014 1013 1015 89 (parallel [
            (set (reg:DI 973)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:280 -1
     (nil))
(insn 1015 1014 1016 89 (parallel [
            (set (reg:DI 974)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:280 -1
     (nil))
(insn 1016 1015 1017 89 (parallel [
            (set (reg:DI 975)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:280 -1
     (nil))
(insn 1017 1016 1018 89 (set (reg:DI 38 r9)
        (reg:DI 973)) ns_print.c:280 -1
     (nil))
(insn 1018 1017 1019 89 (set (reg:DI 37 r8)
        (reg:DI 974)) ns_print.c:280 -1
     (nil))
(insn 1019 1018 1020 89 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:280 -1
     (nil))
(insn 1020 1019 1021 89 (set (reg:DI 1 dx)
        (reg:DI 975)) ns_print.c:280 -1
     (nil))
(insn 1021 1020 1022 89 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:280 -1
     (nil))
(insn 1022 1021 1023 89 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:280 -1
     (nil))
(call_insn 1023 1022 1024 89 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:280 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1024 1023 1025 89 (set (reg:SI 350 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:280 -1
     (nil))
(insn 1025 1024 1026 89 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 350 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:280 -1
     (nil))
(jump_insn 1026 1025 1027 89 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:280 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 1027 1026 1028 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1028 1027 1029 90 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1029 1028 1030 90 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1030 1029 1031)
(code_label 1031 1030 1032 91 100 "" [1 uses])
(note 1032 1031 1033 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1034 91 (parallel [
            (set (reg:DI 976)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:286 -1
     (nil))
(insn 1034 1033 1035 91 (parallel [
            (set (reg:DI 977)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:286 -1
     (nil))
(insn 1035 1034 1036 91 (set (reg:DI 978)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:286 -1
     (nil))
(insn 1036 1035 1037 91 (set (reg:DI 2 cx)
        (reg:DI 976)) ns_print.c:286 -1
     (nil))
(insn 1037 1036 1038 91 (set (reg:DI 1 dx)
        (reg:DI 977)) ns_print.c:286 -1
     (nil))
(insn 1038 1037 1039 91 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:286 -1
     (nil))
(insn 1039 1038 1040 91 (set (reg:DI 5 di)
        (reg:DI 978)) ns_print.c:286 -1
     (nil))
(call_insn 1040 1039 1041 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:286 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1041 1040 1042 91 (set (reg/v:SI 352 [ len ])
        (reg:SI 0 ax)) ns_print.c:286 -1
     (nil))
(insn 1042 1041 1043 91 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 352 [ len ])
            (const_int 0 [0]))) ns_print.c:286 -1
     (nil))
(jump_insn 1043 1042 1044 91 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:286 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 1044 1043 1045 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1045 1044 1046 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 352 [ len ])
            (const_int 0 [0]))) ns_print.c:287 -1
     (nil))
(jump_insn 1046 1045 1047 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1051)
            (pc))) ns_print.c:287 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1051)
(note 1047 1046 1048 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 93 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1049 1048 1050 93 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1050 1049 1051)
(code_label 1051 1050 1052 94 126 "" [1 uses])
(note 1052 1051 1053 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1053 1052 1054 94 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1054 1053 190 94 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 190 1054 1055 94 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1055 190 1056 94 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1056 1055 1100)
(code_label 1100 1056 1057 95 129 "" [1 uses])
(note 1057 1100 1058 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 95 (parallel [
            (set (reg:DI 979)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:294 -1
     (nil))
(insn 1059 1058 1060 95 (parallel [
            (set (reg:DI 980)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:294 -1
     (nil))
(insn 1060 1059 1061 95 (set (reg:DI 2 cx)
        (reg:DI 979)) ns_print.c:294 -1
     (nil))
(insn 1061 1060 1062 95 (set (reg:DI 1 dx)
        (reg:DI 980)) ns_print.c:294 -1
     (nil))
(insn 1062 1061 1063 95 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:294 -1
     (nil))
(insn 1063 1062 1064 95 (set (reg:DI 5 di)
        (reg/f:DI 356 [ D.9950 ])) ns_print.c:294 -1
     (nil))
(call_insn 1064 1063 1065 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:294 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1065 1064 1066 95 (set (reg/v:SI 353 [ len ])
        (reg:SI 0 ax)) ns_print.c:294 -1
     (nil))
(insn 1066 1065 1067 95 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 353 [ len ])
            (const_int 0 [0]))) ns_print.c:294 -1
     (nil))
(jump_insn 1067 1066 1068 95 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:294 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 245)
(note 1068 1067 1069 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 353 [ len ])
            (const_int 0 [0]))) ns_print.c:295 -1
     (nil))
(jump_insn 1070 1069 1071 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1076)
            (pc))) ns_print.c:295 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 1076)
(note 1071 1070 1072 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1072 1071 1073 97 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1073 1072 189 97 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 189 1073 1074 97 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1074 189 1075 97 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1075 1074 1076)
(code_label 1076 1075 1077 98 127 "" [1 uses])
(note 1077 1076 1078 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1078 1077 1079 98 (set (reg:DI 981 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 353 [ len ]))) ns_print.c:297 -1
     (nil))
(insn 1079 1078 1080 98 (set (reg/f:DI 982)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:297 -1
     (nil))
(insn 1080 1079 1081 98 (parallel [
            (set (reg/f:DI 356 [ D.9950 ])
                (plus:DI (reg:DI 981 [ D.9949 ])
                    (reg/f:DI 982)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:297 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (reg:DI 981 [ D.9949 ]))
        (nil)))
(insn 1081 1080 1082 98 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 356 [ D.9950 ])) ns_print.c:297 -1
     (nil))
(insn 1082 1081 1083 98 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 356 [ D.9950 ]))) ns_print.c:298 -1
     (nil))
(jump_insn 1083 1082 1084 98 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1098)
            (pc))) ns_print.c:298 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 1098)
(note 1084 1083 1085 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 99 (parallel [
            (set (reg:DI 983)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:299 -1
     (nil))
(insn 1086 1085 1087 99 (parallel [
            (set (reg:DI 984)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:299 -1
     (nil))
(insn 1087 1086 1088 99 (set (reg:DI 2 cx)
        (reg:DI 983)) ns_print.c:299 -1
     (nil))
(insn 1088 1087 1089 99 (set (reg:DI 1 dx)
        (reg:DI 984)) ns_print.c:299 -1
     (nil))
(insn 1089 1088 1090 99 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:299 -1
     (nil))
(insn 1090 1089 1091 99 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:299 -1
     (nil))
(call_insn 1091 1090 1092 99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:299 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1092 1091 1093 99 (set (reg:SI 357 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:299 -1
     (nil))
(insn 1093 1092 1094 99 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 357 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:299 -1
     (nil))
(jump_insn 1094 1093 1095 99 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:299 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 245)
(code_label 1095 1094 1096 100 99 "" [1 uses])
(note 1096 1095 1097 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1097 1096 1098 100 (set (reg/f:DI 356 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(code_label 1098 1097 1099 101 128 "" [1 uses])
(note 1099 1098 1101 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1101 1099 1102 101 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 356 [ D.9950 ]))) ns_print.c:293 -1
     (nil))
(jump_insn 1102 1101 1103 101 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1100)
            (pc))) ns_print.c:293 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 1100)
(note 1103 1102 1104 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 102 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1105 1104 1106 102 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1106 1105 1107)
(code_label 1107 1106 1108 103 101 "" [1 uses])
(note 1108 1107 1109 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1109 1108 1110 103 (parallel [
            (set (reg:DI 985)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:306 -1
     (nil))
(insn 1110 1109 1111 103 (set (reg:DI 986)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:306 -1
     (nil))
(insn 1111 1110 1112 103 (set (reg:DI 1 dx)
        (reg:DI 985)) ns_print.c:306 -1
     (nil))
(insn 1112 1111 1113 103 (set (reg:DI 4 si)
        (reg:DI 986)) ns_print.c:306 -1
     (nil))
(insn 1113 1112 1114 103 (set (reg:SI 5 di)
        (subreg:SI (reg/v:DI 835 [ rdlen ]) 0)) ns_print.c:306 -1
     (nil))
(call_insn 1114 1113 1135 103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_nsap_ntoa") [flags 0x41]  <function_decl 0x2b5d7962f438 inet_nsap_ntoa>) [0 inet_nsap_ntoa S1 A8])
            (const_int 0 [0]))) ns_print.c:306 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inet_nsap_ntoa") [flags 0x41]  <function_decl 0x2b5d7962f438 inet_nsap_ntoa>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1135 1114 1115 103 (parallel [
            (set (reg:DI 987)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1115 1135 1116 103 (set (reg:DI 360 [ D.9951 ])
        (reg:DI 987)) ns_print.c:307 -1
     (nil))
(code_label 1116 1115 3114 104 130 "" [1 uses])
(note 3114 1116 1117 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1117 3114 1118 104 (set (reg:SI 990)
        (mem:SI (reg:DI 360 [ D.9951 ]) [0  S4 A8])) ns_print.c:307 -1
     (nil))
(insn 1118 1117 1119 104 (parallel [
            (set (reg:DI 360 [ D.9951 ])
                (plus:DI (reg:DI 360 [ D.9951 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1119 1118 1120 104 (parallel [
            (set (reg:SI 989)
                (plus:SI (reg:SI 990)
                    (const_int -16843009 [0xfffffffffefefeff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1120 1119 1121 104 (set (reg:SI 990)
        (not:SI (reg:SI 990))) ns_print.c:307 -1
     (nil))
(insn 1121 1120 1122 104 (parallel [
            (set (reg:SI 989)
                (and:SI (reg:SI 989)
                    (reg:SI 990)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1122 1121 1123 104 (parallel [
            (set (reg:SI 989)
                (and:SI (reg:SI 989)
                    (const_int -2139062144 [0xffffffff80808080])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1123 1122 1124 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 989)
            (const_int 0 [0]))) ns_print.c:307 -1
     (nil))
(jump_insn 1124 1123 3115 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1116)
            (pc))) ns_print.c:307 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1116)
(note 3115 1124 1125 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1125 3115 1126 105 (set (reg:SI 991)
        (reg:SI 989)) ns_print.c:307 -1
     (nil))
(insn 1126 1125 1127 105 (parallel [
            (set (reg:SI 991)
                (lshiftrt:SI (reg:SI 991)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1127 1126 1128 105 (set (reg:CCNO 17 flags)
        (compare:CCNO (and:SI (reg:SI 989)
                (const_int 32896 [0x8080]))
            (const_int 0 [0]))) ns_print.c:307 -1
     (nil))
(insn 1128 1127 1129 105 (set (reg:SI 989)
        (if_then_else:SI (eq (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (reg:SI 991)
            (reg:SI 989))) ns_print.c:307 -1
     (nil))
(insn 1129 1128 1130 105 (set:SI (reg:DI 992)
        (plus:DI (reg:DI 360 [ D.9951 ])
            (const_int 2 [0x2]))) ns_print.c:307 -1
     (nil))
(insn 1130 1129 1131 105 (set (reg:DI 360 [ D.9951 ])
        (if_then_else:DI (eq (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (reg:DI 992)
            (reg:DI 360 [ D.9951 ]))) ns_print.c:307 -1
     (nil))
(insn 1131 1130 1132 105 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:QI (subreg:QI (reg:SI 989) 0)
                        (subreg:QI (reg:SI 989) 0))
                    (subreg:QI (reg:SI 989) 0)))
            (clobber (scratch:QI))
        ]) ns_print.c:307 -1
     (nil))
(insn 1132 1131 1134 105 (parallel [
            (set (reg:DI 360 [ D.9951 ])
                (minus:DI (minus:DI (reg:DI 360 [ D.9951 ])
                        (ltu:DI (reg:CC 17 flags)
                            (const_int 0 [0])))
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1134 1132 1136 105 (parallel [
            (set (reg:DI 360 [ D.9951 ])
                (minus:DI (reg:DI 360 [ D.9951 ])
                    (reg:DI 987)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1136 1134 1137 105 (parallel [
            (set (reg:DI 993)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1137 1136 1138 105 (parallel [
            (set (reg:DI 994)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1138 1137 1139 105 (parallel [
            (set (reg:DI 995)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:307 -1
     (nil))
(insn 1139 1138 1140 105 (set (reg:DI 2 cx)
        (reg:DI 993)) ns_print.c:307 -1
     (nil))
(insn 1140 1139 1141 105 (set (reg:DI 1 dx)
        (reg:DI 994)) ns_print.c:307 -1
     (nil))
(insn 1141 1140 1142 105 (set (reg:DI 4 si)
        (reg:DI 360 [ D.9951 ])) ns_print.c:307 -1
     (nil))
(insn 1142 1141 1143 105 (set (reg:DI 5 di)
        (reg:DI 995)) ns_print.c:307 -1
     (nil))
(call_insn 1143 1142 1144 105 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:307 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1144 1143 1145 105 (set (reg:SI 361 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:307 -1
     (nil))
(insn 1145 1144 1146 105 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 361 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:307 -1
     (nil))
(jump_insn 1146 1145 1147 105 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1150)
            (pc))) ns_print.c:307 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 1150)
(note 1147 1146 209 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 209 1147 1148 107 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:307 -1
     (nil))
(jump_insn 1148 209 1149 107 (set (pc)
        (label_ref 3017)) ns_print.c:307 -1
     (nil)
 -> 3017)
(barrier 1149 1148 1150)
(code_label 1150 1149 1151 108 132 "" [1 uses])
(note 1151 1150 1152 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1152 1151 1153 108 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1153 1152 1154 108 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1154 1153 1155)
(code_label 1155 1154 1156 109 105 "" [1 uses])
(note 1156 1155 1157 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1157 1156 1158 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 835 [ rdlen ])
            (const_int 16 [0x10]))) ns_print.c:312 -1
     (nil))
(jump_insn 1158 1157 1159 109 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1164)
            (pc))) ns_print.c:312 -1
     (int_list:REG_BR_PROB 1371 (nil))
 -> 1164)
(note 1159 1158 1160 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 110 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1161 1160 188 110 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 188 1161 1162 110 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1162 188 1163 110 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1163 1162 1164)
(code_label 1164 1163 1165 111 133 "" [1 uses])
(note 1165 1164 1166 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1165 1167 111 (set (reg:DI 996)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:314 -1
     (nil))
(insn 1167 1166 1168 111 (set (reg:DI 997)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:314 -1
     (nil))
(insn 1168 1167 1169 111 (set (reg:DI 998)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:314 -1
     (nil))
(insn 1169 1168 1170 111 (set (reg:SI 2 cx)
        (subreg:SI (reg:DI 996) 0)) ns_print.c:314 -1
     (nil))
(insn 1170 1169 1171 111 (set (reg:DI 1 dx)
        (reg:DI 997)) ns_print.c:314 -1
     (nil))
(insn 1171 1170 1172 111 (set (reg:DI 4 si)
        (reg:DI 998)) ns_print.c:314 -1
     (nil))
(insn 1172 1171 1173 111 (set (reg:SI 5 di)
        (const_int 10 [0xa])) ns_print.c:314 -1
     (nil))
(call_insn 1173 1172 1174 111 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>) [0 inet_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:314 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1174 1173 1175 111 (set (reg/f:DI 663 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:315 -1
     (nil))
(insn 1175 1174 1176 111 (set (reg:DI 5 di)
        (reg/f:DI 663 [ D.9944 ])) ns_print.c:315 -1
     (nil))
(call_insn/i 1176 1175 1177 111 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ns_print.c:315 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1177 1176 1178 111 (set (reg:DI 1000)
        (reg:DI 0 ax)) ns_print.c:315 -1
     (nil))
(insn 1178 1177 1179 111 (set (reg:DI 1001)
        (reg:DI 1000)) ns_print.c:315 -1
     (nil))
(insn 1179 1178 1180 111 (set (reg:DI 664 [ D.9951 ])
        (reg:DI 1001)) ns_print.c:315 -1
     (nil))
(insn 1180 1179 1181 111 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])) [2 buflen+0 S8 A64])
            (reg:DI 664 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 1181 1180 1182 111 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 1182 1181 1183 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1183 1182 1184 112 (parallel [
            (set (reg/f:DI 735 [ D.9944 ])
                (plus:DI (reg/f:DI 663 [ D.9944 ])
                    (reg:DI 664 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(jump_insn 1184 1183 1185 112 (set (pc)
        (label_ref 2817)) ns_print.c:854 -1
     (nil)
 -> 2817)
(barrier 1185 1184 1186)
(code_label 1186 1185 1187 113 106 "" [1 uses])
(note 1187 1186 1188 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1188 1187 1189 113 (parallel [
            (set (reg:DI 1002)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:322 -1
     (nil))
(insn 1189 1188 1190 113 (set (reg:DI 1003)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:322 -1
     (nil))
(insn 1190 1189 1191 113 (set (reg:DI 4 si)
        (reg:DI 1002)) ns_print.c:322 -1
     (nil))
(insn 1191 1190 1192 113 (set (reg:DI 5 di)
        (reg:DI 1003)) ns_print.c:322 -1
     (nil))
(call_insn 1192 1191 1213 113 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___loc_ntoa") [flags 0x43]  <function_decl 0x2b5d798f0af8 __loc_ntoa>) [0 __loc_ntoa S1 A8])
            (const_int 0 [0]))) ns_print.c:322 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___loc_ntoa") [flags 0x43]  <function_decl 0x2b5d798f0af8 __loc_ntoa>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1213 1192 1193 113 (parallel [
            (set (reg:DI 1004)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1193 1213 1194 113 (set (reg:DI 363 [ D.9951 ])
        (reg:DI 1004)) ns_print.c:323 -1
     (nil))
(code_label 1194 1193 3117 114 134 "" [1 uses])
(note 3117 1194 1195 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1195 3117 1196 114 (set (reg:SI 1007)
        (mem:SI (reg:DI 363 [ D.9951 ]) [0  S4 A8])) ns_print.c:323 -1
     (nil))
(insn 1196 1195 1197 114 (parallel [
            (set (reg:DI 363 [ D.9951 ])
                (plus:DI (reg:DI 363 [ D.9951 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1197 1196 1198 114 (parallel [
            (set (reg:SI 1006)
                (plus:SI (reg:SI 1007)
                    (const_int -16843009 [0xfffffffffefefeff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1198 1197 1199 114 (set (reg:SI 1007)
        (not:SI (reg:SI 1007))) ns_print.c:323 -1
     (nil))
(insn 1199 1198 1200 114 (parallel [
            (set (reg:SI 1006)
                (and:SI (reg:SI 1006)
                    (reg:SI 1007)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1200 1199 1201 114 (parallel [
            (set (reg:SI 1006)
                (and:SI (reg:SI 1006)
                    (const_int -2139062144 [0xffffffff80808080])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1201 1200 1202 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1006)
            (const_int 0 [0]))) ns_print.c:323 -1
     (nil))
(jump_insn 1202 1201 3118 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1194)
            (pc))) ns_print.c:323 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1194)
(note 3118 1202 1203 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1203 3118 1204 115 (set (reg:SI 1008)
        (reg:SI 1006)) ns_print.c:323 -1
     (nil))
(insn 1204 1203 1205 115 (parallel [
            (set (reg:SI 1008)
                (lshiftrt:SI (reg:SI 1008)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1205 1204 1206 115 (set (reg:CCNO 17 flags)
        (compare:CCNO (and:SI (reg:SI 1006)
                (const_int 32896 [0x8080]))
            (const_int 0 [0]))) ns_print.c:323 -1
     (nil))
(insn 1206 1205 1207 115 (set (reg:SI 1006)
        (if_then_else:SI (eq (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (reg:SI 1008)
            (reg:SI 1006))) ns_print.c:323 -1
     (nil))
(insn 1207 1206 1208 115 (set:SI (reg:DI 1009)
        (plus:DI (reg:DI 363 [ D.9951 ])
            (const_int 2 [0x2]))) ns_print.c:323 -1
     (nil))
(insn 1208 1207 1209 115 (set (reg:DI 363 [ D.9951 ])
        (if_then_else:DI (eq (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (reg:DI 1009)
            (reg:DI 363 [ D.9951 ]))) ns_print.c:323 -1
     (nil))
(insn 1209 1208 1210 115 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:QI (subreg:QI (reg:SI 1006) 0)
                        (subreg:QI (reg:SI 1006) 0))
                    (subreg:QI (reg:SI 1006) 0)))
            (clobber (scratch:QI))
        ]) ns_print.c:323 -1
     (nil))
(insn 1210 1209 1212 115 (parallel [
            (set (reg:DI 363 [ D.9951 ])
                (minus:DI (minus:DI (reg:DI 363 [ D.9951 ])
                        (ltu:DI (reg:CC 17 flags)
                            (const_int 0 [0])))
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1212 1210 1214 115 (parallel [
            (set (reg:DI 363 [ D.9951 ])
                (minus:DI (reg:DI 363 [ D.9951 ])
                    (reg:DI 1004)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1214 1212 1215 115 (parallel [
            (set (reg:DI 1010)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1215 1214 1216 115 (parallel [
            (set (reg:DI 1011)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1216 1215 1217 115 (parallel [
            (set (reg:DI 1012)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:323 -1
     (nil))
(insn 1217 1216 1218 115 (set (reg:DI 2 cx)
        (reg:DI 1010)) ns_print.c:323 -1
     (nil))
(insn 1218 1217 1219 115 (set (reg:DI 1 dx)
        (reg:DI 1011)) ns_print.c:323 -1
     (nil))
(insn 1219 1218 1220 115 (set (reg:DI 4 si)
        (reg:DI 363 [ D.9951 ])) ns_print.c:323 -1
     (nil))
(insn 1220 1219 1221 115 (set (reg:DI 5 di)
        (reg:DI 1012)) ns_print.c:323 -1
     (nil))
(call_insn 1221 1220 1222 115 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:323 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1222 1221 1223 115 (set (reg:SI 364 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:323 -1
     (nil))
(insn 1223 1222 1224 115 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 364 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:323 -1
     (nil))
(jump_insn 1224 1223 1225 115 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1228)
            (pc))) ns_print.c:323 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 1228)
(note 1225 1224 214 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 214 1225 1226 117 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:323 -1
     (nil))
(jump_insn 1226 214 1227 117 (set (pc)
        (label_ref 3017)) ns_print.c:323 -1
     (nil)
 -> 3017)
(barrier 1227 1226 1228)
(code_label 1228 1227 1229 118 136 "" [1 uses])
(note 1229 1228 1230 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1230 1229 1231 118 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1231 1230 1232 118 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1232 1231 1233)
(code_label 1233 1232 1234 119 109 "" [1 uses])
(note 1234 1233 1235 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1235 1234 1236 119 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 3 [0x3]))) ns_print.c:331 -1
     (nil))
(jump_insn 1236 1235 1237 119 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) ns_print.c:331 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1370)
(note 1237 1236 1238 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1238 1237 1239 120 (set (reg:DI 1013)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:335 -1
     (nil))
(insn 1239 1238 1240 120 (set (reg:DI 5 di)
        (reg:DI 1013)) ns_print.c:335 -1
     (nil))
(call_insn 1240 1239 1241 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:335 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1241 1240 1242 120 (set (reg/v:SI 366 [ order ])
        (reg:SI 0 ax)) ns_print.c:335 -1
     (nil))
(insn 1242 1241 1243 120 (set (reg/f:DI 1014)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:335 -1
     (nil))
(insn 1243 1242 1244 120 (parallel [
            (set (reg/f:DI 368 [ D.9950 ])
                (plus:DI (reg/f:DI 1014)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:335 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 1244 1243 1245 120 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 368 [ D.9950 ])) ns_print.c:335 -1
     (nil))
(insn 1245 1244 1246 120 (set (reg:DI 5 di)
        (reg/f:DI 368 [ D.9950 ])) ns_print.c:336 -1
     (nil))
(call_insn 1246 1245 1247 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:336 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1247 1246 1248 120 (set (reg/v:SI 369 [ preference ])
        (reg:SI 0 ax)) ns_print.c:336 -1
     (nil))
(insn 1248 1247 1249 120 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:336 -1
     (nil))
(insn 1249 1248 1250 120 (parallel [
            (set (reg:DI 1015)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:337 -1
     (nil))
(insn 1250 1249 1251 120 (set (reg:SI 2 cx)
        (reg/v:SI 369 [ preference ])) ns_print.c:337 -1
     (nil))
(insn 1251 1250 1252 120 (set (reg:SI 1 dx)
        (reg/v:SI 366 [ order ])) ns_print.c:337 -1
     (nil))
(insn 1252 1251 1253 120 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x2b5d79ba1a20 *.LC32>)) ns_print.c:337 -1
     (nil))
(insn 1253 1252 1254 120 (set (reg:DI 5 di)
        (reg:DI 1015)) ns_print.c:337 -1
     (nil))
(insn 1254 1253 1255 120 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:337 -1
     (nil))
(call_insn 1255 1254 1256 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:337 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 1256 1255 1257 120 (set (reg/v:SI 372 [ len ])
        (reg:SI 0 ax)) ns_print.c:337 -1
     (nil))
(insn 1257 1256 1258 120 (parallel [
            (set (reg:DI 1016)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:338 -1
     (nil))
(insn 1258 1257 1259 120 (parallel [
            (set (reg:DI 1017)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:338 -1
     (nil))
(insn 1259 1258 1260 120 (set (reg:DI 1018 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 372 [ len ]))) ns_print.c:338 -1
     (nil))
(insn 1260 1259 1261 120 (parallel [
            (set (reg:DI 1019)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:338 -1
     (nil))
(insn 1261 1260 1262 120 (set (reg:DI 2 cx)
        (reg:DI 1016)) ns_print.c:338 -1
     (nil))
(insn 1262 1261 1263 120 (set (reg:DI 1 dx)
        (reg:DI 1017)) ns_print.c:338 -1
     (nil))
(insn 1263 1262 1264 120 (set (reg:DI 4 si)
        (reg:DI 1018 [ D.9951 ])) ns_print.c:338 -1
     (nil))
(insn 1264 1263 1265 120 (set (reg:DI 5 di)
        (reg:DI 1019)) ns_print.c:338 -1
     (nil))
(call_insn 1265 1264 1266 120 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:338 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1266 1265 1267 120 (set (reg:SI 374 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:338 -1
     (nil))
(insn 1267 1266 1268 120 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 374 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:338 -1
     (nil))
(jump_insn 1268 1267 1269 120 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:338 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1376)
(note 1269 1268 1270 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1270 1269 1271 121 (parallel [
            (set (reg:DI 1020)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:341 -1
     (nil))
(insn 1271 1270 1272 121 (parallel [
            (set (reg:DI 1021)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:341 -1
     (nil))
(insn 1272 1271 1273 121 (set (reg:DI 1022)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:341 -1
     (nil))
(insn 1273 1272 1274 121 (set (reg:DI 2 cx)
        (reg:DI 1020)) ns_print.c:341 -1
     (nil))
(insn 1274 1273 1275 121 (set (reg:DI 1 dx)
        (reg:DI 1021)) ns_print.c:341 -1
     (nil))
(insn 1275 1274 1276 121 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:341 -1
     (nil))
(insn 1276 1275 1277 121 (set (reg:DI 5 di)
        (reg:DI 1022)) ns_print.c:341 -1
     (nil))
(call_insn 1277 1276 1278 121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:341 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1278 1277 1279 121 (set (reg/v:SI 376 [ len ])
        (reg:SI 0 ax)) ns_print.c:341 -1
     (nil))
(insn 1279 1278 1280 121 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 376 [ len ])
            (const_int 0 [0]))) ns_print.c:341 -1
     (nil))
(jump_insn 1280 1279 1281 121 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:341 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1376)
(note 1281 1280 1282 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1282 1281 1283 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 376 [ len ])
            (const_int 0 [0]))) ns_print.c:342 -1
     (nil))
(jump_insn 1283 1282 1284 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) ns_print.c:342 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1370)
(note 1284 1283 1285 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 123 (set (reg:DI 1023 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 376 [ len ]))) ns_print.c:344 -1
     (nil))
(insn 1286 1285 1287 123 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (reg:DI 1023 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:344 -1
     (nil))
(insn 1287 1286 1288 123 (parallel [
            (set (reg:DI 1024)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:345 -1
     (nil))
(insn 1288 1287 1289 123 (parallel [
            (set (reg:DI 1025)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:345 -1
     (nil))
(insn 1289 1288 1290 123 (set (reg:DI 2 cx)
        (reg:DI 1024)) ns_print.c:345 -1
     (nil))
(insn 1290 1289 1291 123 (set (reg:DI 1 dx)
        (reg:DI 1025)) ns_print.c:345 -1
     (nil))
(insn 1291 1290 1292 123 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:345 -1
     (nil))
(insn 1292 1291 1293 123 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:345 -1
     (nil))
(call_insn 1293 1292 1294 123 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:345 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1294 1293 1295 123 (set (reg:SI 380 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:345 -1
     (nil))
(insn 1295 1294 1296 123 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 380 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:345 -1
     (nil))
(jump_insn 1296 1295 1297 123 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:345 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1376)
(note 1297 1296 1298 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1298 1297 1299 124 (parallel [
            (set (reg:DI 1026)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:348 -1
     (nil))
(insn 1299 1298 1300 124 (parallel [
            (set (reg:DI 1027)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:348 -1
     (nil))
(insn 1300 1299 1301 124 (set (reg:DI 1028)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:348 -1
     (nil))
(insn 1301 1300 1302 124 (set (reg:DI 2 cx)
        (reg:DI 1026)) ns_print.c:348 -1
     (nil))
(insn 1302 1301 1303 124 (set (reg:DI 1 dx)
        (reg:DI 1027)) ns_print.c:348 -1
     (nil))
(insn 1303 1302 1304 124 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:348 -1
     (nil))
(insn 1304 1303 1305 124 (set (reg:DI 5 di)
        (reg:DI 1028)) ns_print.c:348 -1
     (nil))
(call_insn 1305 1304 1306 124 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:348 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1306 1305 1307 124 (set (reg/v:SI 382 [ len ])
        (reg:SI 0 ax)) ns_print.c:348 -1
     (nil))
(insn 1307 1306 1308 124 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 382 [ len ])
            (const_int 0 [0]))) ns_print.c:348 -1
     (nil))
(jump_insn 1308 1307 1309 124 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:348 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1376)
(note 1309 1308 1310 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1310 1309 1311 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 382 [ len ])
            (const_int 0 [0]))) ns_print.c:349 -1
     (nil))
(jump_insn 1311 1310 1312 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) ns_print.c:349 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1370)
(note 1312 1311 1313 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1313 1312 1314 126 (set (reg:DI 1029 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 382 [ len ]))) ns_print.c:351 -1
     (nil))
(insn 1314 1313 1315 126 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (reg:DI 1029 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:351 -1
     (nil))
(insn 1315 1314 1316 126 (parallel [
            (set (reg:DI 1030)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:352 -1
     (nil))
(insn 1316 1315 1317 126 (parallel [
            (set (reg:DI 1031)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:352 -1
     (nil))
(insn 1317 1316 1318 126 (set (reg:DI 2 cx)
        (reg:DI 1030)) ns_print.c:352 -1
     (nil))
(insn 1318 1317 1319 126 (set (reg:DI 1 dx)
        (reg:DI 1031)) ns_print.c:352 -1
     (nil))
(insn 1319 1318 1320 126 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:352 -1
     (nil))
(insn 1320 1319 1321 126 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:352 -1
     (nil))
(call_insn 1321 1320 1322 126 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:352 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1322 1321 1323 126 (set (reg:SI 386 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:352 -1
     (nil))
(insn 1323 1322 1324 126 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 386 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:352 -1
     (nil))
(jump_insn 1324 1323 1325 126 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:352 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1376)
(note 1325 1324 1326 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1325 1327 127 (parallel [
            (set (reg:DI 1032)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:355 -1
     (nil))
(insn 1327 1326 1328 127 (parallel [
            (set (reg:DI 1033)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:355 -1
     (nil))
(insn 1328 1327 1329 127 (set (reg:DI 1034)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:355 -1
     (nil))
(insn 1329 1328 1330 127 (set (reg:DI 2 cx)
        (reg:DI 1032)) ns_print.c:355 -1
     (nil))
(insn 1330 1329 1331 127 (set (reg:DI 1 dx)
        (reg:DI 1033)) ns_print.c:355 -1
     (nil))
(insn 1331 1330 1332 127 (set (reg:DI 4 si)
        (reg/v/f:DI 225 [ edata ])) ns_print.c:355 -1
     (nil))
(insn 1332 1331 1333 127 (set (reg:DI 5 di)
        (reg:DI 1034)) ns_print.c:355 -1
     (nil))
(call_insn 1333 1332 1334 127 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>) [0 charstr S1 A8])
            (const_int 0 [0]))) ns_print.c:355 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("charstr") [flags 0x3]  <function_decl 0x2b5d79924ca8 charstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1334 1333 1335 127 (set (reg/v:SI 388 [ len ])
        (reg:SI 0 ax)) ns_print.c:355 -1
     (nil))
(insn 1335 1334 1336 127 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 388 [ len ])
            (const_int 0 [0]))) ns_print.c:355 -1
     (nil))
(jump_insn 1336 1335 1337 127 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:355 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1376)
(note 1337 1336 1338 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1338 1337 1339 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 388 [ len ])
            (const_int 0 [0]))) ns_print.c:358 -1
     (nil))
(jump_insn 1339 1338 1340 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1370)
            (pc))) ns_print.c:358 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1370)
(note 1340 1339 1341 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1341 1340 1342 129 (set (reg:DI 1035 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 388 [ len ]))) ns_print.c:360 -1
     (nil))
(insn 1342 1341 1343 129 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (reg:DI 1035 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:360 -1
     (nil))
(insn 1343 1342 1344 129 (parallel [
            (set (reg:DI 1036)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:361 -1
     (nil))
(insn 1344 1343 1345 129 (parallel [
            (set (reg:DI 1037)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:361 -1
     (nil))
(insn 1345 1344 1346 129 (set (reg:DI 2 cx)
        (reg:DI 1036)) ns_print.c:361 -1
     (nil))
(insn 1346 1345 1347 129 (set (reg:DI 1 dx)
        (reg:DI 1037)) ns_print.c:361 -1
     (nil))
(insn 1347 1346 1348 129 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:361 -1
     (nil))
(insn 1348 1347 1349 129 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:361 -1
     (nil))
(call_insn 1349 1348 1350 129 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:361 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1350 1349 1351 129 (set (reg:SI 392 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:361 -1
     (nil))
(insn 1351 1350 1352 129 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 392 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:361 -1
     (nil))
(jump_insn 1352 1351 1353 129 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:361 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1376)
(note 1353 1352 1354 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1354 1353 1355 130 (parallel [
            (set (reg:DI 1038)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:364 -1
     (nil))
(insn 1355 1354 1356 130 (parallel [
            (set (reg:DI 1039)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:364 -1
     (nil))
(insn 1356 1355 1357 130 (parallel [
            (set (reg:DI 1040)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:364 -1
     (nil))
(insn 1357 1356 1358 130 (set (reg:DI 38 r9)
        (reg:DI 1038)) ns_print.c:364 -1
     (nil))
(insn 1358 1357 1359 130 (set (reg:DI 37 r8)
        (reg:DI 1039)) ns_print.c:364 -1
     (nil))
(insn 1359 1358 1360 130 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:364 -1
     (nil))
(insn 1360 1359 1361 130 (set (reg:DI 1 dx)
        (reg:DI 1040)) ns_print.c:364 -1
     (nil))
(insn 1361 1360 1362 130 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:364 -1
     (nil))
(insn 1362 1361 1363 130 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:364 -1
     (nil))
(call_insn 1363 1362 1364 130 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1364 1363 1365 130 (set (reg:SI 393 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:364 -1
     (nil))
(insn 1365 1364 1366 130 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 393 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:364 -1
     (nil))
(jump_insn 1366 1365 1369 130 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1376)
            (pc))) ns_print.c:364 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1376)
(note 1369 1366 1367 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1367 1369 1368 131 (set (pc)
        (label_ref 1380)) -1
     (nil)
 -> 1380)
(barrier 1368 1367 1370)
(code_label 1370 1368 1371 132 137 "" [4 uses])
(note 1371 1370 1372 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1372 1371 1373 132 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1373 1372 187 132 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 187 1373 1374 132 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1374 187 1375 132 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1375 1374 1376)
(code_label 1376 1375 1377 133 138 "" [8 uses])
(note 1377 1376 213 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 213 1377 1378 133 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:338 -1
     (nil))
(jump_insn 1378 213 1379 133 (set (pc)
        (label_ref 3017)) ns_print.c:338 -1
     (nil)
 -> 3017)
(barrier 1379 1378 1380)
(code_label 1380 1379 1381 134 139 "" [1 uses])
(note 1381 1380 1382 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1382 1381 1383 134 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1383 1382 1384 134 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1384 1383 1385)
(code_label 1385 1384 1386 135 108 "" [1 uses])
(note 1386 1385 1387 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1387 1386 1388 135 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 5 [0x5]))) ns_print.c:372 -1
     (nil))
(jump_insn 1388 1387 1389 135 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1445)
            (pc))) ns_print.c:372 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1445)
(note 1389 1388 1390 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1390 1389 1391 136 (set (reg:DI 1041)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:376 -1
     (nil))
(insn 1391 1390 1392 136 (set (reg:DI 5 di)
        (reg:DI 1041)) ns_print.c:376 -1
     (nil))
(call_insn 1392 1391 1393 136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:376 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1393 1392 1394 136 (set (reg/v:SI 395 [ priority ])
        (reg:SI 0 ax)) ns_print.c:376 -1
     (nil))
(insn 1394 1393 1395 136 (set (reg/f:DI 1042)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:376 -1
     (nil))
(insn 1395 1394 1396 136 (parallel [
            (set (reg/f:DI 397 [ D.9950 ])
                (plus:DI (reg/f:DI 1042)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:376 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 1396 1395 1397 136 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 397 [ D.9950 ])) ns_print.c:376 -1
     (nil))
(insn 1397 1396 1398 136 (set (reg:DI 5 di)
        (reg/f:DI 397 [ D.9950 ])) ns_print.c:377 -1
     (nil))
(call_insn 1398 1397 1399 136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:377 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1399 1398 1400 136 (set (reg/v:SI 398 [ weight ])
        (reg:SI 0 ax)) ns_print.c:377 -1
     (nil))
(insn 1400 1399 1401 136 (set (reg/f:DI 1043)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:377 -1
     (nil))
(insn 1401 1400 1402 136 (parallel [
            (set (reg/f:DI 400 [ D.9950 ])
                (plus:DI (reg/f:DI 1043)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:377 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 1402 1401 1403 136 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 400 [ D.9950 ])) ns_print.c:377 -1
     (nil))
(insn 1403 1402 1404 136 (set (reg:DI 5 di)
        (reg/f:DI 400 [ D.9950 ])) ns_print.c:378 -1
     (nil))
(call_insn 1404 1403 1405 136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:378 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1405 1404 1406 136 (set (reg/v:SI 401 [ port ])
        (reg:SI 0 ax)) ns_print.c:378 -1
     (nil))
(insn 1406 1405 1407 136 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:378 -1
     (nil))
(insn 1407 1406 1408 136 (parallel [
            (set (reg:DI 1044)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:379 -1
     (nil))
(insn 1408 1407 1409 136 (set (reg:SI 37 r8)
        (reg/v:SI 401 [ port ])) ns_print.c:379 -1
     (nil))
(insn 1409 1408 1410 136 (set (reg:SI 2 cx)
        (reg/v:SI 398 [ weight ])) ns_print.c:379 -1
     (nil))
(insn 1410 1409 1411 136 (set (reg:SI 1 dx)
        (reg/v:SI 395 [ priority ])) ns_print.c:379 -1
     (nil))
(insn 1411 1410 1412 136 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x2b5d79ba1ab0 *.LC33>)) ns_print.c:379 -1
     (nil))
(insn 1412 1411 1413 136 (set (reg:DI 5 di)
        (reg:DI 1044)) ns_print.c:379 -1
     (nil))
(insn 1413 1412 1414 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:379 -1
     (nil))
(call_insn 1414 1413 1415 136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:379 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 1415 1414 1416 136 (set (reg/v:SI 404 [ len ])
        (reg:SI 0 ax)) ns_print.c:379 -1
     (nil))
(insn 1416 1415 1417 136 (parallel [
            (set (reg:DI 1045)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:380 -1
     (nil))
(insn 1417 1416 1418 136 (parallel [
            (set (reg:DI 1046)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:380 -1
     (nil))
(insn 1418 1417 1419 136 (set (reg:DI 1047 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 404 [ len ]))) ns_print.c:380 -1
     (nil))
(insn 1419 1418 1420 136 (parallel [
            (set (reg:DI 1048)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:380 -1
     (nil))
(insn 1420 1419 1421 136 (set (reg:DI 2 cx)
        (reg:DI 1045)) ns_print.c:380 -1
     (nil))
(insn 1421 1420 1422 136 (set (reg:DI 1 dx)
        (reg:DI 1046)) ns_print.c:380 -1
     (nil))
(insn 1422 1421 1423 136 (set (reg:DI 4 si)
        (reg:DI 1047 [ D.9951 ])) ns_print.c:380 -1
     (nil))
(insn 1423 1422 1424 136 (set (reg:DI 5 di)
        (reg:DI 1048)) ns_print.c:380 -1
     (nil))
(call_insn 1424 1423 1425 136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:380 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1425 1424 1426 136 (set (reg:SI 406 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:380 -1
     (nil))
(insn 1426 1425 1427 136 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 406 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:380 -1
     (nil))
(jump_insn 1427 1426 1428 136 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1451)
            (pc))) ns_print.c:380 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1451)
(note 1428 1427 1429 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1429 1428 1430 137 (parallel [
            (set (reg:DI 1049)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:383 -1
     (nil))
(insn 1430 1429 1431 137 (parallel [
            (set (reg:DI 1050)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:383 -1
     (nil))
(insn 1431 1430 1432 137 (parallel [
            (set (reg:DI 1051)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:383 -1
     (nil))
(insn 1432 1431 1433 137 (set (reg:DI 38 r9)
        (reg:DI 1049)) ns_print.c:383 -1
     (nil))
(insn 1433 1432 1434 137 (set (reg:DI 37 r8)
        (reg:DI 1050)) ns_print.c:383 -1
     (nil))
(insn 1434 1433 1435 137 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:383 -1
     (nil))
(insn 1435 1434 1436 137 (set (reg:DI 1 dx)
        (reg:DI 1051)) ns_print.c:383 -1
     (nil))
(insn 1436 1435 1437 137 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:383 -1
     (nil))
(insn 1437 1436 1438 137 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:383 -1
     (nil))
(call_insn 1438 1437 1439 137 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:383 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1439 1438 1440 137 (set (reg:SI 407 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:383 -1
     (nil))
(insn 1440 1439 1441 137 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 407 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:383 -1
     (nil))
(jump_insn 1441 1440 1444 137 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1451)
            (pc))) ns_print.c:383 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1451)
(note 1444 1441 1442 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1442 1444 1443 138 (set (pc)
        (label_ref 1455)) -1
     (nil)
 -> 1455)
(barrier 1443 1442 1445)
(code_label 1445 1443 1446 139 140 "" [1 uses])
(note 1446 1445 1447 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1447 1446 1448 139 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1448 1447 186 139 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 186 1448 1449 139 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1449 186 1450 139 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1450 1449 1451)
(code_label 1451 1450 1452 140 141 "" [2 uses])
(note 1452 1451 210 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 210 1452 1453 140 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:380 -1
     (nil))
(jump_insn 1453 210 1454 140 (set (pc)
        (label_ref 3017)) ns_print.c:380 -1
     (nil)
 -> 3017)
(barrier 1454 1453 1455)
(code_label 1455 1454 1456 141 142 "" [1 uses])
(note 1456 1455 1457 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1457 1456 1458 141 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1458 1457 1459 141 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1459 1458 1460)
(code_label 1460 1459 1461 142 97 "" [2 uses])
(note 1461 1460 1462 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 1463 142 (parallel [
            (set (reg:DI 1052)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:390 -1
     (nil))
(insn 1463 1462 1464 142 (parallel [
            (set (reg:DI 1053)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:390 -1
     (nil))
(insn 1464 1463 1465 142 (parallel [
            (set (reg:DI 1054)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:390 -1
     (nil))
(insn 1465 1464 1466 142 (set (reg:DI 38 r9)
        (reg:DI 1052)) ns_print.c:390 -1
     (nil))
(insn 1466 1465 1467 142 (set (reg:DI 37 r8)
        (reg:DI 1053)) ns_print.c:390 -1
     (nil))
(insn 1467 1466 1468 142 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:390 -1
     (nil))
(insn 1468 1467 1469 142 (set (reg:DI 1 dx)
        (reg:DI 1054)) ns_print.c:390 -1
     (nil))
(insn 1469 1468 1470 142 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:390 -1
     (nil))
(insn 1470 1469 1471 142 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:390 -1
     (nil))
(call_insn 1471 1470 1472 142 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:390 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1472 1471 1473 142 (set (reg:SI 408 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:390 -1
     (nil))
(insn 1473 1472 1474 142 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 408 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:390 -1
     (nil))
(jump_insn 1474 1473 1475 142 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:390 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 1475 1474 1476 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1476 1475 1477 143 (parallel [
            (set (reg:DI 1055)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:391 -1
     (nil))
(insn 1477 1476 1478 143 (parallel [
            (set (reg:DI 1056)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:391 -1
     (nil))
(insn 1478 1477 1479 143 (set (reg:DI 2 cx)
        (reg:DI 1055)) ns_print.c:391 -1
     (nil))
(insn 1479 1478 1480 143 (set (reg:DI 1 dx)
        (reg:DI 1056)) ns_print.c:391 -1
     (nil))
(insn 1480 1479 1481 143 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:391 -1
     (nil))
(insn 1481 1480 1482 143 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:391 -1
     (nil))
(call_insn 1482 1481 1483 143 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:391 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1483 1482 1484 143 (set (reg:SI 409 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:391 -1
     (nil))
(insn 1484 1483 1485 143 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 409 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:391 -1
     (nil))
(jump_insn 1485 1484 1486 143 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:391 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 1486 1485 1487 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1487 1486 1488 144 (parallel [
            (set (reg:DI 1057)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:394 -1
     (nil))
(insn 1488 1487 1489 144 (parallel [
            (set (reg:DI 1058)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:394 -1
     (nil))
(insn 1489 1488 1490 144 (parallel [
            (set (reg:DI 1059)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:394 -1
     (nil))
(insn 1490 1489 1491 144 (set (reg:DI 38 r9)
        (reg:DI 1057)) ns_print.c:394 -1
     (nil))
(insn 1491 1490 1492 144 (set (reg:DI 37 r8)
        (reg:DI 1058)) ns_print.c:394 -1
     (nil))
(insn 1492 1491 1493 144 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:394 -1
     (nil))
(insn 1493 1492 1494 144 (set (reg:DI 1 dx)
        (reg:DI 1059)) ns_print.c:394 -1
     (nil))
(insn 1494 1493 1495 144 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:394 -1
     (nil))
(insn 1495 1494 1496 144 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:394 -1
     (nil))
(call_insn 1496 1495 1497 144 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:394 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 1497 1496 1498 144 (set (reg:SI 410 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:394 -1
     (nil))
(insn 1498 1497 1499 144 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 410 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:394 -1
     (nil))
(jump_insn 1499 1498 1500 144 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:394 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 1500 1499 1501 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1501 1500 1502 145 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1502 1501 1503 145 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1503 1502 1504)
(code_label 1504 1503 1505 146 95 "" [1 uses])
(note 1505 1504 1506 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1506 1505 1507 146 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 4 [0x4]))) ns_print.c:401 -1
     (nil))
(jump_insn 1507 1506 1508 146 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1513)
            (pc))) ns_print.c:401 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1513)
(note 1508 1507 1509 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1509 1508 1510 147 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 1510 1509 185 147 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 185 1510 1511 147 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1511 185 1512 147 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1512 1511 1513)
(code_label 1513 1512 1514 148 143 "" [1 uses])
(note 1514 1513 1515 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1515 1514 1516 148 (set (reg:DI 1060)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:405 -1
     (nil))
(insn 1516 1515 1517 148 (set (reg:DI 1061)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:405 -1
     (nil))
(insn 1517 1516 1518 148 (set (reg:DI 1062)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:405 -1
     (nil))
(insn 1518 1517 1519 148 (set (reg:SI 2 cx)
        (subreg:SI (reg:DI 1060) 0)) ns_print.c:405 -1
     (nil))
(insn 1519 1518 1520 148 (set (reg:DI 1 dx)
        (reg:DI 1061)) ns_print.c:405 -1
     (nil))
(insn 1520 1519 1521 148 (set (reg:DI 4 si)
        (reg:DI 1062)) ns_print.c:405 -1
     (nil))
(insn 1521 1520 1522 148 (set (reg:SI 5 di)
        (const_int 2 [0x2])) ns_print.c:405 -1
     (nil))
(call_insn 1522 1521 1523 148 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>) [0 inet_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:405 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 1523 1522 1524 148 (set (reg/f:DI 415 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:406 -1
     (nil))
(insn 1524 1523 1525 148 (set (reg:DI 5 di)
        (reg/f:DI 415 [ D.9944 ])) ns_print.c:406 -1
     (nil))
(call_insn/i 1525 1524 1526 148 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ns_print.c:406 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1526 1525 1527 148 (set (reg:DI 1064)
        (reg:DI 0 ax)) ns_print.c:406 -1
     (nil))
(insn 1527 1526 1528 148 (set (reg:DI 1065)
        (reg:DI 1064)) ns_print.c:406 -1
     (nil))
(insn 1528 1527 1529 148 (set (reg:DI 416 [ D.9951 ])
        (reg:DI 1065)) ns_print.c:406 -1
     (nil))
(insn 1529 1528 1530 148 (set (reg:DI 665 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 1530 1529 1531 148 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 416 [ D.9951 ])
            (reg:DI 665 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 1531 1530 1532 148 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 1532 1531 1533 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1533 1532 1534 149 (parallel [
            (set (reg:DI 1066)
                (plus:DI (reg/f:DI 415 [ D.9944 ])
                    (reg:DI 416 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 1534 1533 1535 149 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
        (reg:DI 1066)) ns_print.c:854 -1
     (nil))
(insn 1535 1534 1536 149 (parallel [
            (set (reg:DI 1067)
                (minus:DI (reg:DI 665 [ D.9951 ])
                    (reg:DI 416 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 1536 1535 1537 149 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 1067)) ns_print.c:855 -1
     (nil))
(insn 1537 1536 1538 149 (set (reg/f:DI 418 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:407 -1
     (nil))
(insn 1538 1537 1539 149 (parallel [
            (set (reg:DI 1068)
                (plus:DI (reg/f:DI 418 [ D.9950 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:407 -1
     (nil))
(insn 1539 1538 1540 149 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1068)) ns_print.c:407 -1
     (nil))
(insn 1540 1539 1541 149 (set (reg:SI 1069 [ D.9943 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 418 [ D.9950 ])
                    (const_int 4 [0x4])) [0 MEM[(const u_char *)_399 + 4B]+0 S1 A8]))) ns_print.c:410 -1
     (nil))
(insn 1541 1540 1542 149 (parallel [
            (set (reg:DI 1070)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:410 -1
     (nil))
(insn 1542 1541 1543 149 (set (reg:SI 1 dx)
        (reg:SI 1069 [ D.9943 ])) ns_print.c:410 -1
     (nil))
(insn 1543 1542 1544 149 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x2b5d79ba1b40 *.LC34>)) ns_print.c:410 -1
     (nil))
(insn 1544 1543 1545 149 (set (reg:DI 5 di)
        (reg:DI 1070)) ns_print.c:410 -1
     (nil))
(insn 1545 1544 1546 149 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:410 -1
     (nil))
(call_insn 1546 1545 1547 149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:410 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 1547 1546 1548 149 (set (reg/v:SI 422 [ len ])
        (reg:SI 0 ax)) ns_print.c:410 -1
     (nil))
(insn 1548 1547 1549 149 (parallel [
            (set (reg:DI 1071)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:411 -1
     (nil))
(insn 1549 1548 1550 149 (parallel [
            (set (reg:DI 1072)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:411 -1
     (nil))
(insn 1550 1549 1551 149 (set (reg:DI 1073 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 422 [ len ]))) ns_print.c:411 -1
     (nil))
(insn 1551 1550 1552 149 (parallel [
            (set (reg:DI 1074)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:411 -1
     (nil))
(insn 1552 1551 1553 149 (set (reg:DI 2 cx)
        (reg:DI 1071)) ns_print.c:411 -1
     (nil))
(insn 1553 1552 1554 149 (set (reg:DI 1 dx)
        (reg:DI 1072)) ns_print.c:411 -1
     (nil))
(insn 1554 1553 1555 149 (set (reg:DI 4 si)
        (reg:DI 1073 [ D.9951 ])) ns_print.c:411 -1
     (nil))
(insn 1555 1554 1556 149 (set (reg:DI 5 di)
        (reg:DI 1074)) ns_print.c:411 -1
     (nil))
(call_insn 1556 1555 1557 149 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:411 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1557 1556 1558 149 (set (reg:SI 424 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:411 -1
     (nil))
(insn 1558 1557 1559 149 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 424 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:411 -1
     (nil))
(jump_insn 1559 1558 1560 149 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:411 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 1560 1559 1561 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1561 1560 1562 150 (set (reg/f:DI 1075)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:412 -1
     (nil))
(insn 1562 1561 1563 150 (parallel [
            (set (reg/f:DI 426 [ D.9950 ])
                (plus:DI (reg/f:DI 1075)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:412 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 1563 1562 153 150 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 426 [ D.9950 ])) ns_print.c:412 -1
     (nil))
(insn 153 1563 154 150 (set (reg/v:SI 212 [ lcnt ])
        (const_int 0 [0])) ns_print.c:416 -1
     (nil))
(insn 154 153 1564 150 (set (reg/v:SI 211 [ n ])
        (const_int 0 [0])) ns_print.c:415 -1
     (nil))
(jump_insn 1564 154 1565 150 (set (pc)
        (label_ref 1621)) ns_print.c:417 -1
     (nil)
 -> 1621)
(barrier 1565 1564 1623)
(code_label 1623 1565 1566 151 148 "" [1 uses])
(note 1566 1623 1567 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1567 1566 1568 151 (parallel [
            (set (reg:DI 1076)
                (plus:DI (reg/f:DI 426 [ D.9950 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:418 -1
     (nil))
(insn 1568 1567 1569 151 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1076)) ns_print.c:418 -1
     (nil))
(insn 1569 1568 1615 151 (set (reg/v:SI 213 [ c ])
        (zero_extend:SI (mem:QI (reg/f:DI 426 [ D.9950 ]) [0 *_1282+0 S1 A8]))) ns_print.c:418 -1
     (nil))
(code_label 1615 1569 1570 152 147 "" [1 uses])
(note 1570 1615 1571 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1571 1570 1572 152 (parallel [
            (set (reg:SI 1077 [ D.9955 ])
                (and:SI (reg/v:SI 213 [ c ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:420 -1
     (nil))
(insn 1572 1571 1573 152 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1077 [ D.9955 ])
            (const_int 0 [0]))) ns_print.c:420 -1
     (nil))
(jump_insn 1573 1572 1574 152 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1611)
            (pc))) ns_print.c:420 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1611)
(note 1574 1573 1575 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1575 1574 1576 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 212 [ lcnt ])
            (const_int 0 [0]))) ns_print.c:421 -1
     (nil))
(jump_insn 1576 1575 1577 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1588)
            (pc))) ns_print.c:421 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1588)
(note 1577 1576 1578 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1578 1577 1579 154 (parallel [
            (set (reg:DI 1078)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:422 -1
     (nil))
(insn 1579 1578 1580 154 (parallel [
            (set (reg:DI 1079)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:422 -1
     (nil))
(insn 1580 1579 1581 154 (set (reg:DI 2 cx)
        (reg:DI 1078)) ns_print.c:422 -1
     (nil))
(insn 1581 1580 1582 154 (set (reg:DI 1 dx)
        (reg:DI 1079)) ns_print.c:422 -1
     (nil))
(insn 1582 1581 1583 154 (set (reg:DI 4 si)
        (const_int 5 [0x5])) ns_print.c:422 -1
     (nil))
(insn 1583 1582 1584 154 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x2b5d79ba1bd0 *.LC35>)) ns_print.c:422 -1
     (nil))
(call_insn 1584 1583 1585 154 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:422 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1585 1584 1586 154 (set (reg:SI 434 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:422 -1
     (nil))
(insn 1586 1585 1587 154 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 434 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:422 -1
     (nil))
(jump_insn 1587 1586 3066 154 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:422 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 245)
(note 3066 1587 152 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 152 3066 1588 155 (set (reg/v:SI 212 [ lcnt ])
        (const_int 10 [0xa])) ns_print.c:424 -1
     (nil))
(code_label 1588 152 1589 156 146 "" [1 uses])
(note 1589 1588 1590 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1590 1589 1591 156 (parallel [
            (set (reg:DI 1080)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:427 -1
     (nil))
(insn 1591 1590 1592 156 (set (reg:SI 1 dx)
        (reg/v:SI 211 [ n ])) ns_print.c:427 -1
     (nil))
(insn 1592 1591 1593 156 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x2b5d79ba1c60 *.LC36>)) ns_print.c:427 -1
     (nil))
(insn 1593 1592 1594 156 (set (reg:DI 5 di)
        (reg:DI 1080)) ns_print.c:427 -1
     (nil))
(insn 1594 1593 1595 156 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:427 -1
     (nil))
(call_insn 1595 1594 1596 156 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:427 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 1596 1595 1597 156 (set (reg/v:SI 431 [ len ])
        (reg:SI 0 ax)) ns_print.c:427 -1
     (nil))
(insn 1597 1596 1598 156 (parallel [
            (set (reg:DI 1081)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:428 -1
     (nil))
(insn 1598 1597 1599 156 (parallel [
            (set (reg:DI 1082)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:428 -1
     (nil))
(insn 1599 1598 1600 156 (set (reg:DI 1083 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 431 [ len ]))) ns_print.c:428 -1
     (nil))
(insn 1600 1599 1601 156 (parallel [
            (set (reg:DI 1084)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:428 -1
     (nil))
(insn 1601 1600 1602 156 (set (reg:DI 2 cx)
        (reg:DI 1081)) ns_print.c:428 -1
     (nil))
(insn 1602 1601 1603 156 (set (reg:DI 1 dx)
        (reg:DI 1082)) ns_print.c:428 -1
     (nil))
(insn 1603 1602 1604 156 (set (reg:DI 4 si)
        (reg:DI 1083 [ D.9951 ])) ns_print.c:428 -1
     (nil))
(insn 1604 1603 1605 156 (set (reg:DI 5 di)
        (reg:DI 1084)) ns_print.c:428 -1
     (nil))
(call_insn 1605 1604 1606 156 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:428 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1606 1605 1607 156 (set (reg:SI 433 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:428 -1
     (nil))
(insn 1607 1606 1608 156 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 433 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:428 -1
     (nil))
(jump_insn 1608 1607 1609 156 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:428 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 245)
(note 1609 1608 1610 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1610 1609 1611 157 (parallel [
            (set (reg/v:SI 212 [ lcnt ])
                (plus:SI (reg/v:SI 212 [ lcnt ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:429 -1
     (nil))
(code_label 1611 1610 1612 158 145 "" [1 uses])
(note 1612 1611 1613 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1613 1612 1614 158 (parallel [
            (set (reg/v:SI 213 [ c ])
                (ashift:SI (reg/v:SI 213 [ c ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:431 -1
     (nil))
(insn 1614 1613 1616 158 (parallel [
            (set (reg/v:SI 211 [ n ])
                (plus:SI (reg/v:SI 211 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:432 -1
     (nil))
(insn 1616 1614 1617 158 (parallel [
            (set (reg:SI 1085 [ D.9943 ])
                (and:SI (reg/v:SI 211 [ n ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:432 -1
     (nil))
(insn 1617 1616 1618 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1085 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:432 -1
     (nil))
(jump_insn 1618 1617 1619 158 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1615)
            (pc))) ns_print.c:432 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1615)
(note 1619 1618 1620 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1620 1619 1621 159 (set (reg/f:DI 426 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(code_label 1621 1620 1622 160 144 "" [1 uses])
(note 1622 1621 1624 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1624 1622 1625 160 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 426 [ D.9950 ]))) ns_print.c:417 -1
     (nil))
(jump_insn 1625 1624 1626 160 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1623)
            (pc))) ns_print.c:417 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 1623)
(note 1626 1625 1627 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1627 1626 1628 161 (parallel [
            (set (reg:DI 1086)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:434 -1
     (nil))
(insn 1628 1627 1629 161 (parallel [
            (set (reg:DI 1087)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:434 -1
     (nil))
(insn 1629 1628 1630 161 (set (reg:DI 2 cx)
        (reg:DI 1086)) ns_print.c:434 -1
     (nil))
(insn 1630 1629 1631 161 (set (reg:DI 1 dx)
        (reg:DI 1087)) ns_print.c:434 -1
     (nil))
(insn 1631 1630 1632 161 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:434 -1
     (nil))
(insn 1632 1631 1633 161 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x2b5d79ba1cf0 *.LC37>)) ns_print.c:434 -1
     (nil))
(call_insn 1633 1632 1634 161 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:434 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1634 1633 1635 161 (set (reg:SI 435 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:434 -1
     (nil))
(insn 1635 1634 1636 161 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 435 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:434 -1
     (nil))
(jump_insn 1636 1635 1637 161 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:434 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 1637 1636 1638 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1638 1637 1639 162 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1639 1638 1640 162 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1640 1639 1641)
(code_label 1641 1640 1642 163 103 "" [1 uses])
(note 1642 1641 1643 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1643 1642 1644 163 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 3 [0x3]))) ns_print.c:445 -1
     (nil))
(jump_insn 1644 1643 1645 163 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1855)
            (pc))) ns_print.c:445 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1855)
(note 1645 1644 1646 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1646 1645 1647 164 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) ns_print.c:449 -1
     (nil))
(insn 1647 1646 1648 164 (set (reg/v/f:DI 436 [ key ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:449 -1
     (nil))
(insn 1648 1647 1649 164 (parallel [
            (set (reg:DI 438 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/v/f:DI 436 [ key ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:449 -1
     (nil))
(insn 1649 1648 1650 164 (set (reg/v:SI 439 [ size ])
        (subreg:SI (reg:DI 438 [ D.9954 ]) 0)) ns_print.c:449 -1
     (nil))
(insn 1650 1649 1651 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 436 [ key ])
            (const_int 0 [0]))) ns_print.c:951 -1
     (nil))
(jump_insn 1651 1650 1652 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3070)
            (pc))) ns_print.c:951 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 3070)
(note 1652 1651 1653 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1653 1652 1654 165 (set (reg:QI 739 [ D.9956 ])
        (mem:QI (plus:DI (reg/v/f:DI 436 [ key ])
                (const_int 3 [0x3])) [0 MEM[(const u_char *)key_432 + 3B]+0 S1 A8])) ns_print.c:955 -1
     (nil))
(insn 1654 1653 1655 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 739 [ D.9956 ])
            (const_int 1 [0x1]))) ns_print.c:955 -1
     (nil))
(jump_insn 1655 1654 1656 165 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1663)
            (pc))) ns_print.c:955 -1
     (int_list:REG_BR_PROB 8009 (nil))
 -> 1663)
(note 1656 1655 1657 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1657 1656 1658 166 (set (reg:DI 1088 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 439 [ size ]))) -1
     (nil))
(insn 1658 1657 1659 166 (set (reg:HI 1090)
        (mem:HI (plus:DI (plus:DI (reg/v/f:DI 436 [ key ])
                    (reg:DI 1088 [ D.9949 ]))
                (const_int -3 [0xfffffffffffffffd])) [0 MEM[(const u_char *)_937]+0 S2 A8])) -1
     (nil))
(insn 1659 1658 1660 166 (parallel [
            (set (reg:HI 1089 [ a ])
                (rotate:HI (reg:HI 1090)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (rotate:HI (mem:HI (plus:DI (plus:DI (reg/v/f:DI 436 [ key ])
                        (reg:DI 1088 [ D.9949 ]))
                    (const_int -3 [0xfffffffffffffffd])) [0 MEM[(const u_char *)_937]+0 S2 A8])
            (const_int 8 [0x8]))
        (nil)))
(insn 1660 1659 1661 166 (set (reg:SI 770 [ D.9955 ])
        (zero_extend:SI (reg:HI 1089 [ a ]))) -1
     (nil))
(jump_insn 1661 1660 1662 166 (set (pc)
        (label_ref 1710)) -1
     (nil)
 -> 1710)
(barrier 1662 1661 1663)
(code_label 1663 1662 1664 167 151 "" [1 uses])
(note 1664 1663 1665 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1665 1664 1666 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 739 [ D.9956 ])
            (const_int -99 [0xffffffffffffff9d]))) ns_print.c:958 -1
     (nil))
(jump_insn 1666 1665 1667 167 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3074)
            (pc))) ns_print.c:958 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 3074)
(note 1667 1666 1668 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1668 1667 1669 168 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 439 [ size ])
            (const_int 0 [0]))) ns_print.c:907 -1
     (nil))
(jump_insn 1669 1668 1670 168 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3078)
            (pc))) ns_print.c:907 612 {*jcc_1}
     (int_list:REG_BR_PROB 6700 (nil))
 -> 3078)
(note 1670 1669 1671 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1671 1670 1672 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 439 [ size ])
            (const_int 1 [0x1]))) ns_print.c:910 -1
     (nil))
(jump_insn 1672 1671 1673 169 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3083)
            (pc))) ns_print.c:910 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 3083)
(note 1673 1672 1674 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1674 1673 1675 170 (parallel [
            (set (reg:SI 1091 [ D.9947 ])
                (plus:SI (subreg:SI (reg:DI 438 [ D.9954 ]) 0)
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1675 1674 1676 170 (parallel [
            (set (reg:SI 461 [ D.9947 ])
                (lshiftrt:SI (reg:SI 1091 [ D.9947 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1676 1675 1677 170 (set (reg:DI 1092 [ D.9949 ])
        (zero_extend:DI (reg:SI 461 [ D.9947 ]))) -1
     (nil))
(insn 1677 1676 1678 170 (parallel [
            (set (reg:DI 1093 [ D.9949 ])
                (plus:DI (reg:DI 1092 [ D.9949 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1678 1677 1679 170 (parallel [
            (set (reg:DI 1094 [ D.9949 ])
                (ashift:DI (reg:DI 1093 [ D.9949 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1679 1678 155 170 (parallel [
            (set (reg/v/f:DI 736 [ key ])
                (plus:DI (reg/v/f:DI 436 [ key ])
                    (reg:DI 1094 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 155 1679 156 170 (set (reg/v/f:DI 755 [ key ])
        (reg/v/f:DI 436 [ key ])) ns_print.c:910 -1
     (nil))
(insn 156 155 1687 170 (set (reg/v:SI 753 [ ac ])
        (const_int 0 [0])) ns_print.c:910 -1
     (nil))
(code_label 1687 156 1680 171 153 "" [1 uses])
(note 1680 1687 1681 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 1681 1680 1682 171 (set (reg:SI 1095 [ D.9943 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 755 [ key ]) [0 MEM[base: key_1061, offset: 0B]+0 S1 A8]))) ns_print.c:911 -1
     (nil))
(insn 1682 1681 1683 171 (parallel [
            (set (reg:SI 1096 [ D.9943 ])
                (ashift:SI (reg:SI 1095 [ D.9943 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:911 -1
     (nil))
(insn 1683 1682 1684 171 (set (reg:SI 1097 [ D.9943 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 755 [ key ])
                    (const_int 1 [0x1])) [0 MEM[base: key_1061, offset: 1B]+0 S1 A8]))) ns_print.c:911 -1
     (nil))
(insn 1684 1683 1685 171 (parallel [
            (set (reg:SI 1098 [ D.9943 ])
                (plus:SI (reg:SI 1096 [ D.9943 ])
                    (reg:SI 1097 [ D.9943 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:911 -1
     (nil))
(insn 1685 1684 1686 171 (parallel [
            (set (reg/v:SI 753 [ ac ])
                (plus:SI (reg/v:SI 753 [ ac ])
                    (reg:SI 1098 [ D.9943 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:911 -1
     (nil))
(insn 1686 1685 1688 171 (parallel [
            (set (reg/v/f:DI 755 [ key ])
                (plus:DI (reg/v/f:DI 755 [ key ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:910 -1
     (nil))
(insn 1688 1686 1689 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 755 [ key ])
            (reg/v/f:DI 736 [ key ]))) ns_print.c:910 -1
     (nil))
(jump_insn 1689 1688 1690 171 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1687)
            (pc))) ns_print.c:910 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 1687)
(note 1690 1689 1691 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1691 1690 1692 172 (parallel [
            (set (reg:SI 210 [ D.9943 ])
                (plus:SI (reg/v:SI 439 [ size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1692 1691 1693 172 (set (reg:SI 1099)
        (const_int 0 [0])) ns_print.c:913 -1
     (nil))
(insn 1693 1692 1694 172 (parallel [
            (set (reg:SI 1100 [ D.9943 ])
                (minus:SI (reg:SI 1099)
                    (reg:SI 461 [ D.9947 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:913 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 461 [ D.9947 ])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1694 1693 1695 172 (parallel [
            (set (reg:SI 1101)
                (ashift:SI (reg:SI 1100 [ D.9943 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:913 -1
     (nil))
(insn 1695 1694 1696 172 (set (reg:SI 1100 [ D.9943 ])
        (reg:SI 1101)) ns_print.c:913 -1
     (expr_list:REG_EQUAL (mult:SI (reg:SI 461 [ D.9947 ])
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))
(insn 1696 1695 1697 172 (parallel [
            (set (reg:SI 1102 [ size ])
                (plus:SI (reg:SI 1100 [ D.9943 ])
                    (reg:SI 210 [ D.9943 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:913 -1
     (nil))
(insn 1697 1696 1698 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1102 [ size ])
            (const_int 1 [0x1]))) ns_print.c:913 -1
     (nil))
(jump_insn 1698 1697 3079 172 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1704)
            (pc))) ns_print.c:913 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1704)
(note 3079 1698 3080 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3080 3079 3081 173 (set (pc)
        (label_ref 1699)) -1
     (nil)
 -> 1699)
(barrier 3081 3080 3083)
(code_label 3083 3081 3082 174 218 "" [1 uses])
(note 3082 3083 157 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 157 3082 158 174 (set (reg/v/f:DI 736 [ key ])
        (reg/v/f:DI 436 [ key ])) ns_print.c:910 -1
     (nil))
(insn 158 157 1699 174 (set (reg/v:SI 753 [ ac ])
        (const_int 0 [0])) ns_print.c:910 -1
     (nil))
(code_label 1699 158 1700 175 152 "" [1 uses])
(note 1700 1699 1701 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 1701 1700 1702 175 (set (reg:SI 1103 [ D.9943 ])
        (zero_extend:SI (mem:QI (reg/v/f:DI 736 [ key ]) [0 *key_902+0 S1 A8]))) ns_print.c:914 -1
     (nil))
(insn 1702 1701 1703 175 (parallel [
            (set (reg:SI 1104 [ D.9943 ])
                (ashift:SI (reg:SI 1103 [ D.9943 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:914 -1
     (nil))
(insn 1703 1702 1704 175 (parallel [
            (set (reg/v:SI 753 [ ac ])
                (plus:SI (reg/v:SI 753 [ ac ])
                    (reg:SI 1104 [ D.9943 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:914 -1
     (nil))
(code_label 1704 1703 1705 176 154 "" [1 uses])
(note 1705 1704 1706 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 1706 1705 1707 176 (parallel [
            (set (reg:SI 760 [ D.9955 ])
                (lshiftrt:SI (reg/v:SI 753 [ ac ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:915 -1
     (nil))
(insn 1707 1706 1708 176 (parallel [
            (set (reg/v:SI 761 [ ac ])
                (plus:SI (reg/v:SI 753 [ ac ])
                    (reg:SI 760 [ D.9955 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:915 -1
     (nil))
(insn 1708 1707 1709 176 (set (reg:HI 762 [ D.9952 ])
        (subreg:HI (reg/v:SI 761 [ ac ]) 0)) ns_print.c:917 -1
     (nil))
(insn 1709 1708 3067 176 (set (reg:SI 770 [ D.9955 ])
        (zero_extend:SI (subreg:HI (reg/v:SI 761 [ ac ]) 0))) -1
     (nil))
(jump_insn 3067 1709 3068 176 (set (pc)
        (label_ref 1710)) -1
     (nil)
 -> 1710)
(barrier 3068 3067 3070)
(code_label 3070 3068 3069 177 215 "" [1 uses])
(note 3069 3070 161 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 161 3069 3071 177 (set (reg:SI 770 [ D.9955 ])
        (const_int 0 [0])) ns_print.c:951 -1
     (nil))
(jump_insn 3071 161 3072 177 (set (pc)
        (label_ref 1710)) -1
     (nil)
 -> 1710)
(barrier 3072 3071 3074)
(code_label 3074 3072 3073 178 216 "" [1 uses])
(note 3073 3074 159 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 159 3073 3075 178 (set (reg:SI 770 [ D.9955 ])
        (const_int 0 [0])) ns_print.c:958 -1
     (nil))
(jump_insn 3075 159 3076 178 (set (pc)
        (label_ref 1710)) -1
     (nil)
 -> 1710)
(barrier 3076 3075 3078)
(code_label 3078 3076 3077 179 217 "" [1 uses])
(note 3077 3078 160 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 160 3077 1710 179 (set (reg:SI 770 [ D.9955 ])
        (const_int 65535 [0xffff])) ns_print.c:907 -1
     (nil))
(code_label 1710 160 1711 180 150 "" [4 uses])
(note 1711 1710 1712 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1712 1711 1713 180 (set (reg:DI 5 di)
        (reg/v/f:DI 436 [ key ])) ns_print.c:450 -1
     (nil))
(call_insn 1713 1712 1714 180 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:450 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1714 1713 1715 180 (set (reg/v:SI 441 [ keyflags ])
        (reg:SI 0 ax)) ns_print.c:450 -1
     (nil))
(insn 1715 1714 1716 180 (set (reg/f:DI 442 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:450 -1
     (nil))
(insn 1716 1715 1717 180 (parallel [
            (set (reg:DI 1105)
                (plus:DI (reg/f:DI 442 [ D.9950 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:451 -1
     (nil))
(insn 1717 1716 1718 180 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1105)) ns_print.c:451 -1
     (nil))
(insn 1718 1717 1719 180 (set (reg/v:SI 445 [ protocol ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 442 [ D.9950 ])
                    (const_int 2 [0x2])) [0 MEM[(const u_char *)_441 + 2B]+0 S1 A8]))) ns_print.c:451 -1
     (nil))
(insn 1719 1718 1720 180 (parallel [
            (set (reg:DI 1106)
                (plus:DI (reg/f:DI 442 [ D.9950 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:452 -1
     (nil))
(insn 1720 1719 1721 180 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1106)) ns_print.c:452 -1
     (nil))
(insn 1721 1720 1722 180 (set (reg:SI 1107 [ algorithm ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 442 [ D.9950 ])
                    (const_int 3 [0x3])) [0 MEM[(const u_char *)_441 + 3B]+0 S1 A8]))) ns_print.c:453 -1
     (nil))
(insn 1722 1721 1723 180 (parallel [
            (set (reg:DI 1108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:453 -1
     (nil))
(insn 1723 1722 1724 180 (set (reg:SI 37 r8)
        (reg:SI 1107 [ algorithm ])) ns_print.c:453 -1
     (nil))
(insn 1724 1723 1725 180 (set (reg:SI 2 cx)
        (reg/v:SI 445 [ protocol ])) ns_print.c:453 -1
     (nil))
(insn 1725 1724 1726 180 (set (reg:SI 1 dx)
        (reg/v:SI 441 [ keyflags ])) ns_print.c:453 -1
     (nil))
(insn 1726 1725 1727 180 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x2b5d79ba1d80 *.LC38>)) ns_print.c:453 -1
     (nil))
(insn 1727 1726 1728 180 (set (reg:DI 5 di)
        (reg:DI 1108)) ns_print.c:453 -1
     (nil))
(insn 1728 1727 1729 180 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:453 -1
     (nil))
(call_insn 1729 1728 1730 180 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:453 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 1730 1729 1731 180 (set (reg/v:SI 449 [ len ])
        (reg:SI 0 ax)) ns_print.c:453 -1
     (nil))
(insn 1731 1730 1732 180 (parallel [
            (set (reg:DI 1109)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:455 -1
     (nil))
(insn 1732 1731 1733 180 (parallel [
            (set (reg:DI 1110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:455 -1
     (nil))
(insn 1733 1732 1734 180 (set (reg:DI 1111 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 449 [ len ]))) ns_print.c:455 -1
     (nil))
(insn 1734 1733 1735 180 (parallel [
            (set (reg:DI 1112)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:455 -1
     (nil))
(insn 1735 1734 1736 180 (set (reg:DI 2 cx)
        (reg:DI 1109)) ns_print.c:455 -1
     (nil))
(insn 1736 1735 1737 180 (set (reg:DI 1 dx)
        (reg:DI 1110)) ns_print.c:455 -1
     (nil))
(insn 1737 1736 1738 180 (set (reg:DI 4 si)
        (reg:DI 1111 [ D.9951 ])) ns_print.c:455 -1
     (nil))
(insn 1738 1737 1739 180 (set (reg:DI 5 di)
        (reg:DI 1112)) ns_print.c:455 -1
     (nil))
(call_insn 1739 1738 1740 180 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:455 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1740 1739 1741 180 (set (reg:SI 451 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:455 -1
     (nil))
(insn 1741 1740 1742 180 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 451 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:455 -1
     (nil))
(jump_insn 1742 1741 1743 180 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:455 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 1863)
(note 1743 1742 1744 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 1744 1743 1745 181 (set (reg/f:DI 452 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:458 -1
     (nil))
(insn 1745 1744 1746 181 (parallel [
            (set (reg:DI 1113)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:458 -1
     (nil))
(insn 1746 1745 1747 181 (parallel [
            (set (reg:DI 1114 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 452 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:458 -1
     (nil))
(insn 1747 1746 1748 181 (set (reg:DI 2 cx)
        (const_int 10928 [0x2ab0])) ns_print.c:458 -1
     (nil))
(insn 1748 1747 1749 181 (set (reg:DI 1 dx)
        (reg:DI 1113)) ns_print.c:458 -1
     (nil))
(insn 1749 1748 1750 181 (set (reg:DI 4 si)
        (reg:DI 1114 [ D.9954 ])) ns_print.c:458 -1
     (nil))
(insn 1750 1749 1751 181 (set (reg:DI 5 di)
        (reg/f:DI 452 [ D.9950 ])) ns_print.c:458 -1
     (nil))
(call_insn 1751 1750 1752 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>) [0 __b64_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:458 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1752 1751 1753 181 (set (reg/v:SI 456 [ len ])
        (reg:SI 0 ax)) ns_print.c:458 -1
     (nil))
(insn 1753 1752 1754 181 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 456 [ len ])
            (const_int 0 [0]))) ns_print.c:460 -1
     (nil))
(jump_insn 1754 1753 1755 181 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1858)
            (pc))) ns_print.c:460 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 1858)
(note 1755 1754 1756 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 1756 1755 1757 182 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 456 [ len ])
            (const_int 15 [0xf]))) ns_print.c:462 -1
     (nil))
(jump_insn 1757 1756 1758 182 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3022)
            (pc))) ns_print.c:462 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 3022)
(note 1758 1757 1759 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 1759 1758 1760 183 (parallel [
            (set (reg:DI 1115)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:463 -1
     (nil))
(insn 1760 1759 1761 183 (parallel [
            (set (reg:DI 1116)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:463 -1
     (nil))
(insn 1761 1760 1762 183 (set (reg:DI 2 cx)
        (reg:DI 1115)) ns_print.c:463 -1
     (nil))
(insn 1762 1761 1763 183 (set (reg:DI 1 dx)
        (reg:DI 1116)) ns_print.c:463 -1
     (nil))
(insn 1763 1762 1764 183 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:463 -1
     (nil))
(insn 1764 1763 1765 183 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b5d79ba1120 *.LC16>)) ns_print.c:463 -1
     (nil))
(call_insn 1765 1764 1766 183 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:463 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1766 1765 1767 183 (set (reg:SI 457 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:463 -1
     (nil))
(insn 1767 1766 1768 183 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 457 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:463 -1
     (nil))
(jump_insn 1768 1767 3084 183 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:463 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1863)
(note 3084 1768 164 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 164 3084 165 184 (set (reg:DI 824 [ D.9951 ])
        (const_int 3 [0x3])) -1
     (nil))
(insn 165 164 3103 184 (set (reg/v/f:DI 768 [ leader ])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b5d79ba1000 *.LC14>)) ns_print.c:464 -1
     (nil))
(jump_insn 3103 165 3104 184 (set (pc)
        (label_ref 3024)) -1
     (nil)
 -> 3024)
(barrier 3104 3103 3106)
(code_label 3106 3104 3105 185 223 "" [1 uses])
(note 3105 3106 162 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 162 3105 163 185 (set (reg:DI 824 [ D.9951 ])
        (const_int 1 [0x1])) ns_print.c:468 -1
     (nil))
(insn 163 162 3024 185 (set (reg/v/f:DI 768 [ leader ])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:467 -1
     (nil))
(code_label 3024 163 1769 186 211 "" [1 uses])
(note 1769 3024 166 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 166 1769 1809 186 (set (reg:DI 524 [ ivtmp.127 ])
        (const_int 0 [0])) ns_print.c:464 -1
     (nil))
(code_label 1809 166 1770 187 159 "" [1 uses])
(note 1770 1809 1771 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 1771 1770 1772 187 (parallel [
            (set (reg:DI 1117)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:469 -1
     (nil))
(insn 1772 1771 1773 187 (parallel [
            (set (reg:DI 1118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:469 -1
     (nil))
(insn 1773 1772 1774 187 (set (reg:DI 2 cx)
        (reg:DI 1117)) ns_print.c:469 -1
     (nil))
(insn 1774 1773 1775 187 (set (reg:DI 1 dx)
        (reg:DI 1118)) ns_print.c:469 -1
     (nil))
(insn 1775 1774 1776 187 (set (reg:DI 4 si)
        (reg:DI 824 [ D.9951 ])) ns_print.c:469 -1
     (nil))
(insn 1776 1775 1777 187 (set (reg:DI 5 di)
        (reg/v/f:DI 768 [ leader ])) ns_print.c:469 -1
     (nil))
(call_insn 1777 1776 1778 187 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:469 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1778 1777 1779 187 (set (reg:SI 458 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:469 -1
     (nil))
(insn 1779 1778 1780 187 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 458 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:469 -1
     (nil))
(jump_insn 1780 1779 1781 187 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:469 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1863)
(note 1781 1780 1782 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1782 1781 1783 188 (parallel [
            (set (reg:DI 1119)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:470 -1
     (nil))
(insn 1783 1782 1784 188 (parallel [
            (set (reg:DI 1120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:470 -1
     (nil))
(insn 1784 1783 1786 188 (parallel [
            (set (reg:SI 1121 [ D.9947 ])
                (minus:SI (reg/v:SI 456 [ len ])
                    (subreg:SI (reg:DI 524 [ ivtmp.127 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:470 -1
     (nil))
(insn 1786 1784 1785 188 (set (reg:SI 1122)
        (const_int 48 [0x30])) ns_print.c:470 -1
     (nil))
(insn 1785 1786 1787 188 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1121 [ D.9947 ])
            (const_int 48 [0x30]))) ns_print.c:470 -1
     (nil))
(insn 1787 1785 1788 188 (set (reg:SI 1121 [ D.9947 ])
        (if_then_else:SI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1121 [ D.9947 ])
            (reg:SI 1122))) ns_print.c:470 -1
     (nil))
(insn 1788 1787 1789 188 (set (reg:DI 1123 [ D.9951 ])
        (sign_extend:DI (reg:SI 1121 [ D.9947 ]))) ns_print.c:470 -1
     (nil))
(insn 1789 1788 1790 188 (parallel [
            (set (reg:DI 1124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:470 -1
     (nil))
(insn 1790 1789 1791 188 (parallel [
            (set (reg:DI 1125 [ D.9953 ])
                (plus:DI (reg:DI 1124)
                    (reg:DI 524 [ ivtmp.127 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:470 -1
     (nil))
(insn 1791 1790 1792 188 (set (reg:DI 2 cx)
        (reg:DI 1119)) ns_print.c:470 -1
     (nil))
(insn 1792 1791 1793 188 (set (reg:DI 1 dx)
        (reg:DI 1120)) ns_print.c:470 -1
     (nil))
(insn 1793 1792 1794 188 (set (reg:DI 4 si)
        (reg:DI 1123 [ D.9951 ])) ns_print.c:470 -1
     (nil))
(insn 1794 1793 1795 188 (set (reg:DI 5 di)
        (reg:DI 1125 [ D.9953 ])) ns_print.c:470 -1
     (nil))
(call_insn 1795 1794 1796 188 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:470 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1796 1795 1797 188 (set (reg:SI 463 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:470 -1
     (nil))
(insn 1797 1796 1798 188 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 463 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:470 -1
     (nil))
(jump_insn 1798 1797 1799 188 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:470 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1863)
(note 1799 1798 1800 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 1800 1799 1801 189 (parallel [
            (set (reg:DI 524 [ ivtmp.127 ])
                (plus:DI (reg:DI 524 [ ivtmp.127 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 1801 1800 1802 189 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 456 [ len ])
            (subreg:SI (reg:DI 524 [ ivtmp.127 ]) 0))) ns_print.c:468 -1
     (nil))
(jump_insn 1802 1801 1803 189 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1812)
            (pc))) ns_print.c:468 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 1812)
(note 1803 1802 1804 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 1804 1803 1805 190 (set (reg:DI 5 di)
        (reg/v/f:DI 768 [ leader ])) -1
     (nil))
(call_insn/i 1805 1804 1806 190 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1806 1805 1807 190 (set (reg:DI 1127)
        (reg:DI 0 ax)) -1
     (nil))
(insn 1807 1806 1808 190 (set (reg:DI 1128)
        (reg:DI 1127)) -1
     (nil))
(insn 1808 1807 1810 190 (set (reg:DI 824 [ D.9951 ])
        (reg:DI 1128)) -1
     (nil))
(jump_insn 1810 1808 1811 190 (set (pc)
        (label_ref 1809)) -1
     (nil)
 -> 1809)
(barrier 1811 1810 1812)
(code_label 1812 1811 1813 191 158 "" [1 uses])
(note 1813 1812 1814 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 1814 1813 1815 191 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 456 [ len ])
            (const_int 15 [0xf]))) ns_print.c:473 -1
     (nil))
(jump_insn 1815 1814 1851 191 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1839)
            (pc))) ns_print.c:473 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1839)
(code_label 1851 1815 1816 192 162 "" [2 uses])
(note 1816 1851 1817 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1817 1816 1818 192 (parallel [
            (set (reg:DI 1129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:475 -1
     (nil))
(insn 1818 1817 1819 192 (set (reg:SI 1 dx)
        (reg:SI 770 [ D.9955 ])) ns_print.c:475 -1
     (nil))
(insn 1819 1818 1820 192 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x2b5d79ba1e10 *.LC39>)) ns_print.c:475 -1
     (nil))
(insn 1820 1819 1821 192 (set (reg:DI 5 di)
        (reg:DI 1129)) ns_print.c:475 -1
     (nil))
(insn 1821 1820 1822 192 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:475 -1
     (nil))
(call_insn 1822 1821 1823 192 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:475 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 1823 1822 1824 192 (set (reg/v:SI 466 [ n ])
        (reg:SI 0 ax)) ns_print.c:475 -1
     (nil))
(insn 1824 1823 1825 192 (parallel [
            (set (reg:DI 1130)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:476 -1
     (nil))
(insn 1825 1824 1826 192 (parallel [
            (set (reg:DI 1131)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:476 -1
     (nil))
(insn 1826 1825 1827 192 (set (reg:DI 1132 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 466 [ n ]))) ns_print.c:476 -1
     (nil))
(insn 1827 1826 1828 192 (parallel [
            (set (reg:DI 1133)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:476 -1
     (nil))
(insn 1828 1827 1829 192 (set (reg:DI 2 cx)
        (reg:DI 1130)) ns_print.c:476 -1
     (nil))
(insn 1829 1828 1830 192 (set (reg:DI 1 dx)
        (reg:DI 1131)) ns_print.c:476 -1
     (nil))
(insn 1830 1829 1831 192 (set (reg:DI 4 si)
        (reg:DI 1132 [ D.9951 ])) ns_print.c:476 -1
     (nil))
(insn 1831 1830 1832 192 (set (reg:DI 5 di)
        (reg:DI 1133)) ns_print.c:476 -1
     (nil))
(call_insn 1832 1831 1833 192 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:476 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1833 1832 1834 192 (set (reg:SI 468 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:476 -1
     (nil))
(insn 1834 1833 1835 192 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 468 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:476 -1
     (nil))
(jump_insn 1835 1834 1838 192 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:476 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1863)
(note 1838 1835 1836 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1836 1838 1837 193 (set (pc)
        (label_ref 1867)) -1
     (nil)
 -> 1867)
(barrier 1837 1836 1839)
(code_label 1839 1837 1840 194 160 "" [1 uses])
(note 1840 1839 1841 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 1841 1840 1842 194 (parallel [
            (set (reg:DI 1134)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:474 -1
     (nil))
(insn 1842 1841 1843 194 (parallel [
            (set (reg:DI 1135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:474 -1
     (nil))
(insn 1843 1842 1844 194 (set (reg:DI 2 cx)
        (reg:DI 1134)) ns_print.c:474 -1
     (nil))
(insn 1844 1843 1845 194 (set (reg:DI 1 dx)
        (reg:DI 1135)) ns_print.c:474 -1
     (nil))
(insn 1845 1844 1846 194 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:474 -1
     (nil))
(insn 1846 1845 1847 194 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2b5d79ba1870 *.LC29>)) ns_print.c:474 -1
     (nil))
(call_insn 1847 1846 1848 194 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:474 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1848 1847 1849 194 (set (reg:SI 465 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:474 -1
     (nil))
(insn 1849 1848 1850 194 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 465 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:474 -1
     (nil))
(jump_insn 1850 1849 1854 194 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1863)
            (pc))) ns_print.c:474 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 1863)
(note 1854 1850 1852 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1852 1854 1853 195 (set (pc)
        (label_ref 1851)) -1
     (nil)
 -> 1851)
(barrier 1853 1852 1855)
(code_label 1855 1853 1856 196 149 "" [1 uses])
(note 1856 1855 1857 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 1857 1856 1858 196 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(code_label 1858 1857 1859 197 156 "" [1 uses])
(note 1859 1858 1860 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 1860 1859 184 197 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 184 1860 1861 197 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 1861 184 1862 197 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 1862 1861 1863)
(code_label 1863 1862 1864 198 155 "" [6 uses])
(note 1864 1863 212 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 212 1864 1865 198 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:455 -1
     (nil))
(jump_insn 1865 212 1866 198 (set (pc)
        (label_ref 3017)) ns_print.c:455 -1
     (nil)
 -> 3017)
(barrier 1866 1865 1867)
(code_label 1867 1866 1868 199 161 "" [1 uses])
(note 1868 1867 1869 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 1869 1868 1870 199 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 1870 1869 1871 199 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 1871 1870 1872)
(code_label 1872 1871 1873 200 102 "" [1 uses])
(note 1873 1872 1874 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 1874 1873 1875 200 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 835 [ rdlen ])
            (const_int 21 [0x15]))) ns_print.c:488 -1
     (nil))
(jump_insn 1875 1874 1876 200 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2119)
            (pc))) ns_print.c:488 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2119)
(note 1876 1875 1877 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 1877 1876 1878 201 (set (reg:DI 1136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:492 -1
     (nil))
(insn 1878 1877 1879 201 (set (reg:DI 5 di)
        (reg:DI 1136)) ns_print.c:492 -1
     (nil))
(call_insn 1879 1878 1880 201 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:492 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1880 1879 1881 201 (set (reg/v:SI 470 [ type ])
        (reg:SI 0 ax)) ns_print.c:492 -1
     (nil))
(insn 1881 1880 1882 201 (set (reg/f:DI 471 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:492 -1
     (nil))
(insn 1882 1881 1883 201 (parallel [
            (set (reg:DI 1137)
                (plus:DI (reg/f:DI 471 [ D.9950 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:493 -1
     (nil))
(insn 1883 1882 1884 201 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1137)) ns_print.c:493 -1
     (nil))
(insn 1884 1883 1885 201 (set (reg/v:SI 474 [ algorithm ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 471 [ D.9950 ])
                    (const_int 2 [0x2])) [0 MEM[(const u_char *)_489 + 2B]+0 S1 A8]))) ns_print.c:493 -1
     (nil))
(insn 1885 1884 1886 201 (parallel [
            (set (reg/f:DI 475 [ D.9950 ])
                (plus:DI (reg/f:DI 471 [ D.9950 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:494 -1
     (nil))
(insn 1886 1885 1887 201 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 475 [ D.9950 ])) ns_print.c:494 -1
     (nil))
(insn 1887 1886 1888 201 (set (reg/v:SI 477 [ labels ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 471 [ D.9950 ])
                    (const_int 3 [0x3])) [0 MEM[(const u_char *)_489 + 3B]+0 S1 A8]))) ns_print.c:494 -1
     (nil))
(insn 1888 1887 1889 201 (set (reg:DI 5 di)
        (reg/f:DI 475 [ D.9950 ])) ns_print.c:495 -1
     (nil))
(call_insn 1889 1888 1890 201 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:495 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1890 1889 1891 201 (set (reg/v:DI 478 [ t ])
        (reg:DI 0 ax)) ns_print.c:495 -1
     (nil))
(insn 1891 1890 1892 201 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:495 -1
     (nil))
(insn 1892 1891 1893 201 (set (reg:SI 5 di)
        (reg/v:SI 470 [ type ])) ns_print.c:496 -1
     (nil))
(call_insn 1893 1892 1894 201 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>) [0 __p_type S1 A8])
            (const_int 0 [0]))) ns_print.c:496 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 1894 1893 1895 201 (set (reg/f:DI 482 [ D.9953 ])
        (reg:DI 0 ax)) ns_print.c:496 -1
     (nil))
(insn 1895 1894 1896 201 (parallel [
            (set (reg:DI 1138)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:496 -1
     (nil))
(insn 1896 1895 1897 201 (set (reg:DI 38 r9)
        (reg/v:DI 478 [ t ])) ns_print.c:496 -1
     (nil))
(insn 1897 1896 1898 201 (set (reg:SI 37 r8)
        (reg/v:SI 477 [ labels ])) ns_print.c:496 -1
     (nil))
(insn 1898 1897 1899 201 (set (reg:SI 2 cx)
        (reg/v:SI 474 [ algorithm ])) ns_print.c:496 -1
     (nil))
(insn 1899 1898 1900 201 (set (reg:DI 1 dx)
        (reg/f:DI 482 [ D.9953 ])) ns_print.c:496 -1
     (nil))
(insn 1900 1899 1901 201 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x2b5d79ba1ea0 *.LC40>)) ns_print.c:496 -1
     (nil))
(insn 1901 1900 1902 201 (set (reg:DI 5 di)
        (reg:DI 1138)) ns_print.c:496 -1
     (nil))
(insn 1902 1901 1903 201 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:496 -1
     (nil))
(call_insn 1903 1902 1904 201 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:496 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1904 1903 1905 201 (set (reg/v:SI 483 [ len ])
        (reg:SI 0 ax)) ns_print.c:496 -1
     (nil))
(insn 1905 1904 1906 201 (parallel [
            (set (reg:DI 1139)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:498 -1
     (nil))
(insn 1906 1905 1907 201 (parallel [
            (set (reg:DI 1140)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:498 -1
     (nil))
(insn 1907 1906 1908 201 (set (reg:DI 1141 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 483 [ len ]))) ns_print.c:498 -1
     (nil))
(insn 1908 1907 1909 201 (parallel [
            (set (reg:DI 1142)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:498 -1
     (nil))
(insn 1909 1908 1910 201 (set (reg:DI 2 cx)
        (reg:DI 1139)) ns_print.c:498 -1
     (nil))
(insn 1910 1909 1911 201 (set (reg:DI 1 dx)
        (reg:DI 1140)) ns_print.c:498 -1
     (nil))
(insn 1911 1910 1912 201 (set (reg:DI 4 si)
        (reg:DI 1141 [ D.9951 ])) ns_print.c:498 -1
     (nil))
(insn 1912 1911 1913 201 (set (reg:DI 5 di)
        (reg:DI 1142)) ns_print.c:498 -1
     (nil))
(call_insn 1913 1912 1914 201 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:498 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1914 1913 1915 201 (set (reg:SI 485 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:498 -1
     (nil))
(insn 1915 1914 1916 201 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 485 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:498 -1
     (nil))
(jump_insn 1916 1915 1917 201 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:498 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2127)
(note 1917 1916 1918 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 1918 1917 1919 202 (set (reg:DI 5 di)
        (reg/v/f:DI 830 [ name ])) ns_print.c:499 -1
     (nil))
(call_insn 1919 1918 1920 202 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___dn_count_labels") [flags 0x43]  <function_decl 0x2b5d798f6798 __dn_count_labels>) [0 __dn_count_labels S1 A8])
            (const_int 0 [0]))) ns_print.c:499 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___dn_count_labels") [flags 0x43]  <function_decl 0x2b5d798f6798 __dn_count_labels>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1920 1919 1921 202 (set (reg:SI 486 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:499 -1
     (nil))
(insn 1921 1920 1922 202 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 477 [ labels ])
            (reg:SI 486 [ D.9943 ]))) ns_print.c:499 -1
     (nil))
(jump_insn 1922 1921 1923 202 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1927)
            (pc))) ns_print.c:499 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1927)
(note 1923 1922 1924 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 1924 1923 1925 203 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(jump_insn 1925 1924 1926 203 (set (pc)
        (label_ref 2122)) -1
     (nil)
 -> 2122)
(barrier 1926 1925 1927)
(code_label 1927 1926 1928 204 165 "" [1 uses])
(note 1928 1927 1929 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 1929 1928 1930 204 (set (reg:DI 1143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:503 -1
     (nil))
(insn 1930 1929 1931 204 (set (reg:DI 5 di)
        (reg:DI 1143)) ns_print.c:503 -1
     (nil))
(call_insn 1931 1930 1932 204 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:503 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1932 1931 1933 204 (set (reg/v:DI 489 [ t ])
        (reg:DI 0 ax)) ns_print.c:503 -1
     (nil))
(insn 1933 1932 1934 204 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:503 -1
     (nil))
(insn 1934 1933 1935 204 (set (reg:DI 5 di)
        (reg/v:DI 489 [ t ])) ns_print.c:504 -1
     (nil))
(call_insn 1935 1934 1936 204 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>) [0 __p_secstodate S1 A8])
            (const_int 0 [0]))) ns_print.c:504 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1936 1935 1937 204 (set (reg/f:DI 492 [ D.9944 ])
        (reg:DI 0 ax)) ns_print.c:504 -1
     (nil))
(insn 1937 1936 1938 204 (parallel [
            (set (reg:DI 1144)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:504 -1
     (nil))
(insn 1938 1937 1939 204 (set (reg:DI 1 dx)
        (reg/f:DI 492 [ D.9944 ])) ns_print.c:504 -1
     (nil))
(insn 1939 1938 1940 204 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x2b5d79ba1f30 *.LC41>)) ns_print.c:504 -1
     (nil))
(insn 1940 1939 1941 204 (set (reg:DI 5 di)
        (reg:DI 1144)) ns_print.c:504 -1
     (nil))
(insn 1941 1940 1942 204 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:504 -1
     (nil))
(call_insn 1942 1941 1943 204 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:504 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 1943 1942 1944 204 (set (reg/v:SI 493 [ len ])
        (reg:SI 0 ax)) ns_print.c:504 -1
     (nil))
(insn 1944 1943 1945 204 (parallel [
            (set (reg:DI 1145)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:505 -1
     (nil))
(insn 1945 1944 1946 204 (parallel [
            (set (reg:DI 1146)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:505 -1
     (nil))
(insn 1946 1945 1947 204 (set (reg:DI 1147 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 493 [ len ]))) ns_print.c:505 -1
     (nil))
(insn 1947 1946 1948 204 (parallel [
            (set (reg:DI 1148)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:505 -1
     (nil))
(insn 1948 1947 1949 204 (set (reg:DI 2 cx)
        (reg:DI 1145)) ns_print.c:505 -1
     (nil))
(insn 1949 1948 1950 204 (set (reg:DI 1 dx)
        (reg:DI 1146)) ns_print.c:505 -1
     (nil))
(insn 1950 1949 1951 204 (set (reg:DI 4 si)
        (reg:DI 1147 [ D.9951 ])) ns_print.c:505 -1
     (nil))
(insn 1951 1950 1952 204 (set (reg:DI 5 di)
        (reg:DI 1148)) ns_print.c:505 -1
     (nil))
(call_insn 1952 1951 1953 204 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:505 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1953 1952 1954 204 (set (reg:SI 495 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:505 -1
     (nil))
(insn 1954 1953 1955 204 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 495 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:505 -1
     (nil))
(jump_insn 1955 1954 1956 204 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:505 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2127)
(note 1956 1955 1957 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 1957 1956 1958 205 (set (reg:DI 1149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:508 -1
     (nil))
(insn 1958 1957 1959 205 (set (reg:DI 5 di)
        (reg:DI 1149)) ns_print.c:508 -1
     (nil))
(call_insn 1959 1958 1960 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:508 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1960 1959 1961 205 (set (reg/v:DI 497 [ t ])
        (reg:DI 0 ax)) ns_print.c:508 -1
     (nil))
(insn 1961 1960 1962 205 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:508 -1
     (nil))
(insn 1962 1961 1963 205 (set (reg:DI 5 di)
        (reg/v:DI 497 [ t ])) ns_print.c:509 -1
     (nil))
(call_insn 1963 1962 1964 205 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>) [0 __p_secstodate S1 A8])
            (const_int 0 [0]))) ns_print.c:509 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1964 1963 1965 205 (set (reg/f:DI 500 [ D.9944 ])
        (reg:DI 0 ax)) ns_print.c:509 -1
     (nil))
(insn 1965 1964 1966 205 (parallel [
            (set (reg:DI 1150)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:509 -1
     (nil))
(insn 1966 1965 1967 205 (set (reg:DI 1 dx)
        (reg/f:DI 500 [ D.9944 ])) ns_print.c:509 -1
     (nil))
(insn 1967 1966 1968 205 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x2b5d79ba1f30 *.LC41>)) ns_print.c:509 -1
     (nil))
(insn 1968 1967 1969 205 (set (reg:DI 5 di)
        (reg:DI 1150)) ns_print.c:509 -1
     (nil))
(insn 1969 1968 1970 205 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:509 -1
     (nil))
(call_insn 1970 1969 1971 205 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:509 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 1971 1970 1972 205 (set (reg/v:SI 501 [ len ])
        (reg:SI 0 ax)) ns_print.c:509 -1
     (nil))
(insn 1972 1971 1973 205 (parallel [
            (set (reg:DI 1151)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:510 -1
     (nil))
(insn 1973 1972 1974 205 (parallel [
            (set (reg:DI 1152)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:510 -1
     (nil))
(insn 1974 1973 1975 205 (set (reg:DI 1153 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 501 [ len ]))) ns_print.c:510 -1
     (nil))
(insn 1975 1974 1976 205 (parallel [
            (set (reg:DI 1154)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:510 -1
     (nil))
(insn 1976 1975 1977 205 (set (reg:DI 2 cx)
        (reg:DI 1151)) ns_print.c:510 -1
     (nil))
(insn 1977 1976 1978 205 (set (reg:DI 1 dx)
        (reg:DI 1152)) ns_print.c:510 -1
     (nil))
(insn 1978 1977 1979 205 (set (reg:DI 4 si)
        (reg:DI 1153 [ D.9951 ])) ns_print.c:510 -1
     (nil))
(insn 1979 1978 1980 205 (set (reg:DI 5 di)
        (reg:DI 1154)) ns_print.c:510 -1
     (nil))
(call_insn 1980 1979 1981 205 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:510 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1981 1980 1982 205 (set (reg:SI 503 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:510 -1
     (nil))
(insn 1982 1981 1983 205 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 503 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:510 -1
     (nil))
(jump_insn 1983 1982 1984 205 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:510 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2127)
(note 1984 1983 1985 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 1985 1984 1986 206 (set (reg:DI 1155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:513 -1
     (nil))
(insn 1986 1985 1987 206 (set (reg:DI 5 di)
        (reg:DI 1155)) ns_print.c:513 -1
     (nil))
(call_insn 1987 1986 1988 206 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:513 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1988 1987 1989 206 (set (reg/v:SI 505 [ footprint ])
        (reg:SI 0 ax)) ns_print.c:513 -1
     (nil))
(insn 1989 1988 1990 206 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:513 -1
     (nil))
(insn 1990 1989 1991 206 (parallel [
            (set (reg:DI 1156)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:514 -1
     (nil))
(insn 1991 1990 1992 206 (set (reg:SI 1 dx)
        (reg/v:SI 505 [ footprint ])) ns_print.c:514 -1
     (nil))
(insn 1992 1991 1993 206 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x2b5d79ba1990 *.LC31>)) ns_print.c:514 -1
     (nil))
(insn 1993 1992 1994 206 (set (reg:DI 5 di)
        (reg:DI 1156)) ns_print.c:514 -1
     (nil))
(insn 1994 1993 1995 206 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:514 -1
     (nil))
(call_insn 1995 1994 1996 206 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:514 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 1996 1995 1997 206 (set (reg/v:SI 508 [ len ])
        (reg:SI 0 ax)) ns_print.c:514 -1
     (nil))
(insn 1997 1996 1998 206 (parallel [
            (set (reg:DI 1157)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:515 -1
     (nil))
(insn 1998 1997 1999 206 (parallel [
            (set (reg:DI 1158)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:515 -1
     (nil))
(insn 1999 1998 2000 206 (set (reg:DI 1159 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 508 [ len ]))) ns_print.c:515 -1
     (nil))
(insn 2000 1999 2001 206 (parallel [
            (set (reg:DI 1160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:515 -1
     (nil))
(insn 2001 2000 2002 206 (set (reg:DI 2 cx)
        (reg:DI 1157)) ns_print.c:515 -1
     (nil))
(insn 2002 2001 2003 206 (set (reg:DI 1 dx)
        (reg:DI 1158)) ns_print.c:515 -1
     (nil))
(insn 2003 2002 2004 206 (set (reg:DI 4 si)
        (reg:DI 1159 [ D.9951 ])) ns_print.c:515 -1
     (nil))
(insn 2004 2003 2005 206 (set (reg:DI 5 di)
        (reg:DI 1160)) ns_print.c:515 -1
     (nil))
(call_insn 2005 2004 2006 206 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:515 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2006 2005 2007 206 (set (reg:SI 510 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:515 -1
     (nil))
(insn 2007 2006 2008 206 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 510 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:515 -1
     (nil))
(jump_insn 2008 2007 2009 206 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:515 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2127)
(note 2009 2008 2010 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 2010 2009 2011 207 (parallel [
            (set (reg:DI 1161)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:518 -1
     (nil))
(insn 2011 2010 2012 207 (parallel [
            (set (reg:DI 1162)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:518 -1
     (nil))
(insn 2012 2011 2013 207 (parallel [
            (set (reg:DI 1163)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:518 -1
     (nil))
(insn 2013 2012 2014 207 (set (reg:DI 38 r9)
        (reg:DI 1161)) ns_print.c:518 -1
     (nil))
(insn 2014 2013 2015 207 (set (reg:DI 37 r8)
        (reg:DI 1162)) ns_print.c:518 -1
     (nil))
(insn 2015 2014 2016 207 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:518 -1
     (nil))
(insn 2016 2015 2017 207 (set (reg:DI 1 dx)
        (reg:DI 1163)) ns_print.c:518 -1
     (nil))
(insn 2017 2016 2018 207 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:518 -1
     (nil))
(insn 2018 2017 2019 207 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:518 -1
     (nil))
(call_insn 2019 2018 2020 207 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:518 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2020 2019 2021 207 (set (reg:SI 511 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:518 -1
     (nil))
(insn 2021 2020 2022 207 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 511 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:518 -1
     (nil))
(jump_insn 2022 2021 2023 207 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:518 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2127)
(note 2023 2022 2024 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 2024 2023 2025 208 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) ns_print.c:521 -1
     (nil))
(insn 2025 2024 2026 208 (set (reg/f:DI 512 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:521 -1
     (nil))
(insn 2026 2025 2027 208 (parallel [
            (set (reg:DI 1164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:521 -1
     (nil))
(insn 2027 2026 2028 208 (parallel [
            (set (reg:DI 1165 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 512 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:521 -1
     (nil))
(insn 2028 2027 2029 208 (set (reg:DI 2 cx)
        (const_int 10928 [0x2ab0])) ns_print.c:521 -1
     (nil))
(insn 2029 2028 2030 208 (set (reg:DI 1 dx)
        (reg:DI 1164)) ns_print.c:521 -1
     (nil))
(insn 2030 2029 2031 208 (set (reg:DI 4 si)
        (reg:DI 1165 [ D.9954 ])) ns_print.c:521 -1
     (nil))
(insn 2031 2030 2032 208 (set (reg:DI 5 di)
        (reg/f:DI 512 [ D.9950 ])) ns_print.c:521 -1
     (nil))
(call_insn 2032 2031 2033 208 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>) [0 __b64_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:521 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2033 2032 2034 208 (set (reg/v:SI 516 [ len ])
        (reg:SI 0 ax)) ns_print.c:521 -1
     (nil))
(insn 2034 2033 2035 208 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 516 [ len ])
            (const_int 15 [0xf]))) ns_print.c:523 -1
     (nil))
(jump_insn 2035 2034 2036 208 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2050)
            (pc))) ns_print.c:523 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2050)
(note 2036 2035 2037 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 2037 2036 2038 209 (parallel [
            (set (reg:DI 1166)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:524 -1
     (nil))
(insn 2038 2037 2039 209 (parallel [
            (set (reg:DI 1167)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:524 -1
     (nil))
(insn 2039 2038 2040 209 (set (reg:DI 2 cx)
        (reg:DI 1166)) ns_print.c:524 -1
     (nil))
(insn 2040 2039 2041 209 (set (reg:DI 1 dx)
        (reg:DI 1167)) ns_print.c:524 -1
     (nil))
(insn 2041 2040 2042 209 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:524 -1
     (nil))
(insn 2042 2041 2043 209 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b5d79ba1120 *.LC16>)) ns_print.c:524 -1
     (nil))
(call_insn 2043 2042 2044 209 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:524 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2044 2043 2045 209 (set (reg:SI 517 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:524 -1
     (nil))
(insn 2045 2044 2046 209 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 517 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:524 -1
     (nil))
(jump_insn 2046 2045 2049 209 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:524 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2127)
(note 2049 2046 169 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 169 2049 170 210 (set (reg:DI 823 [ D.9951 ])
        (const_int 3 [0x3])) -1
     (nil))
(insn 170 169 2047 210 (set (reg/v/f:DI 767 [ leader ])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b5d79ba1000 *.LC14>)) ns_print.c:525 -1
     (nil))
(jump_insn 2047 170 2048 210 (set (pc)
        (label_ref 2057)) -1
     (nil)
 -> 2057)
(barrier 2048 2047 2050)
(code_label 2050 2048 2051 211 167 "" [1 uses])
(note 2051 2050 2052 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 2052 2051 2053 211 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 516 [ len ])
            (const_int 0 [0]))) ns_print.c:529 -1
     (nil))
(jump_insn 2053 2052 2056 211 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2122)
            (pc))) ns_print.c:529 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2122)
(note 2056 2053 2054 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2054 2056 2055 212 (set (pc)
        (label_ref 3030)) -1
     (nil)
 -> 3030)
(barrier 2055 2054 3108)
(code_label 3108 2055 3107 213 224 "" [1 uses])
(note 3107 3108 167 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 167 3107 168 213 (set (reg:DI 823 [ D.9951 ])
        (const_int 1 [0x1])) ns_print.c:531 -1
     (nil))
(insn 168 167 2057 213 (set (reg/v/f:DI 767 [ leader ])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:528 -1
     (nil))
(code_label 2057 168 2058 214 168 "" [1 uses])
(note 2058 2057 171 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 171 2058 2098 214 (set (reg:DI 685 [ ivtmp.111 ])
        (const_int 0 [0])) ns_print.c:525 -1
     (nil))
(code_label 2098 171 2059 215 171 "" [1 uses])
(note 2059 2098 2060 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 2060 2059 2061 215 (parallel [
            (set (reg:DI 1168)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:532 -1
     (nil))
(insn 2061 2060 2062 215 (parallel [
            (set (reg:DI 1169)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:532 -1
     (nil))
(insn 2062 2061 2063 215 (set (reg:DI 2 cx)
        (reg:DI 1168)) ns_print.c:532 -1
     (nil))
(insn 2063 2062 2064 215 (set (reg:DI 1 dx)
        (reg:DI 1169)) ns_print.c:532 -1
     (nil))
(insn 2064 2063 2065 215 (set (reg:DI 4 si)
        (reg:DI 823 [ D.9951 ])) ns_print.c:532 -1
     (nil))
(insn 2065 2064 2066 215 (set (reg:DI 5 di)
        (reg/v/f:DI 767 [ leader ])) ns_print.c:532 -1
     (nil))
(call_insn 2066 2065 2067 215 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:532 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2067 2066 2068 215 (set (reg:SI 518 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:532 -1
     (nil))
(insn 2068 2067 2069 215 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 518 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:532 -1
     (nil))
(jump_insn 2069 2068 2070 215 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:532 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2127)
(note 2070 2069 2071 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 2071 2070 2072 216 (parallel [
            (set (reg:DI 1170)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:533 -1
     (nil))
(insn 2072 2071 2073 216 (parallel [
            (set (reg:DI 1171)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:533 -1
     (nil))
(insn 2073 2072 2075 216 (parallel [
            (set (reg:SI 1172 [ D.9947 ])
                (minus:SI (reg/v:SI 516 [ len ])
                    (subreg:SI (reg:DI 685 [ ivtmp.111 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:533 -1
     (nil))
(insn 2075 2073 2074 216 (set (reg:SI 1173)
        (const_int 48 [0x30])) ns_print.c:533 -1
     (nil))
(insn 2074 2075 2076 216 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1172 [ D.9947 ])
            (const_int 48 [0x30]))) ns_print.c:533 -1
     (nil))
(insn 2076 2074 2077 216 (set (reg:SI 1172 [ D.9947 ])
        (if_then_else:SI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1172 [ D.9947 ])
            (reg:SI 1173))) ns_print.c:533 -1
     (nil))
(insn 2077 2076 2078 216 (set (reg:DI 1174 [ D.9951 ])
        (sign_extend:DI (reg:SI 1172 [ D.9947 ]))) ns_print.c:533 -1
     (nil))
(insn 2078 2077 2079 216 (parallel [
            (set (reg:DI 1175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:533 -1
     (nil))
(insn 2079 2078 2080 216 (parallel [
            (set (reg:DI 1176 [ D.9953 ])
                (plus:DI (reg:DI 1175)
                    (reg:DI 685 [ ivtmp.111 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:533 -1
     (nil))
(insn 2080 2079 2081 216 (set (reg:DI 2 cx)
        (reg:DI 1170)) ns_print.c:533 -1
     (nil))
(insn 2081 2080 2082 216 (set (reg:DI 1 dx)
        (reg:DI 1171)) ns_print.c:533 -1
     (nil))
(insn 2082 2081 2083 216 (set (reg:DI 4 si)
        (reg:DI 1174 [ D.9951 ])) ns_print.c:533 -1
     (nil))
(insn 2083 2082 2084 216 (set (reg:DI 5 di)
        (reg:DI 1176 [ D.9953 ])) ns_print.c:533 -1
     (nil))
(call_insn 2084 2083 2085 216 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:533 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2085 2084 2086 216 (set (reg:SI 523 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:533 -1
     (nil))
(insn 2086 2085 2087 216 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 523 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:533 -1
     (nil))
(jump_insn 2087 2086 2088 216 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:533 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2127)
(note 2088 2087 2089 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 2089 2088 2090 217 (parallel [
            (set (reg:DI 685 [ ivtmp.111 ])
                (plus:DI (reg:DI 685 [ ivtmp.111 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2090 2089 2091 217 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 516 [ len ])
            (subreg:SI (reg:DI 685 [ ivtmp.111 ]) 0))) ns_print.c:531 -1
     (nil))
(jump_insn 2091 2090 2092 217 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2101)
            (pc))) ns_print.c:531 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2101)
(note 2092 2091 2093 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 2093 2092 2094 218 (set (reg:DI 5 di)
        (reg/v/f:DI 767 [ leader ])) -1
     (nil))
(call_insn/i 2094 2093 2095 218 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2095 2094 2096 218 (set (reg:DI 1178)
        (reg:DI 0 ax)) -1
     (nil))
(insn 2096 2095 2097 218 (set (reg:DI 1179)
        (reg:DI 1178)) -1
     (nil))
(insn 2097 2096 2099 218 (set (reg:DI 823 [ D.9951 ])
        (reg:DI 1179)) -1
     (nil))
(jump_insn 2099 2097 2100 218 (set (pc)
        (label_ref 2098)) -1
     (nil)
 -> 2098)
(barrier 2100 2099 2101)
(code_label 2101 2100 2102 219 170 "" [1 uses])
(note 2102 2101 2103 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 2103 2102 2104 219 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 516 [ len ])
            (const_int 15 [0xf]))) ns_print.c:536 -1
     (nil))
(jump_insn 2104 2103 2105 219 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2131)
            (pc))) ns_print.c:536 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2131)
(note 2105 2104 2106 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 2106 2105 2107 220 (parallel [
            (set (reg:DI 1180)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:537 -1
     (nil))
(insn 2107 2106 2108 220 (parallel [
            (set (reg:DI 1181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:537 -1
     (nil))
(insn 2108 2107 2109 220 (set (reg:DI 2 cx)
        (reg:DI 1180)) ns_print.c:537 -1
     (nil))
(insn 2109 2108 2110 220 (set (reg:DI 1 dx)
        (reg:DI 1181)) ns_print.c:537 -1
     (nil))
(insn 2110 2109 2111 220 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:537 -1
     (nil))
(insn 2111 2110 2112 220 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2b5d79ba1870 *.LC29>)) ns_print.c:537 -1
     (nil))
(call_insn 2112 2111 2113 220 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:537 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2113 2112 2114 220 (set (reg:SI 525 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:537 -1
     (nil))
(insn 2114 2113 2115 220 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 525 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:537 -1
     (nil))
(jump_insn 2115 2114 2118 220 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2127)
            (pc))) ns_print.c:537 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2127)
(note 2118 2115 2116 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2116 2118 2117 221 (set (pc)
        (label_ref 2131)) -1
     (nil)
 -> 2131)
(barrier 2117 2116 2119)
(code_label 2119 2117 2120 222 163 "" [1 uses])
(note 2120 2119 2121 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 2121 2120 2122 222 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(code_label 2122 2121 2123 223 166 "" [2 uses])
(note 2123 2122 2124 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 2124 2123 183 223 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 183 2124 2125 223 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 2125 183 2126 223 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 2126 2125 2127)
(code_label 2127 2126 2128 224 164 "" [9 uses])
(note 2128 2127 211 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 211 2128 2129 224 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:498 -1
     (nil))
(jump_insn 2129 211 2130 224 (set (pc)
        (label_ref 3017)) ns_print.c:498 -1
     (nil)
 -> 3017)
(barrier 2130 2129 2131)
(code_label 2131 2130 2132 225 172 "" [3 uses])
(note 2132 2131 2133 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 2133 2132 2134 225 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2134 2133 2135 225 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2135 2134 2136)
(code_label 2136 2135 2137 226 107 "" [1 uses])
(note 2137 2136 2138 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 2138 2137 2139 226 (parallel [
            (set (reg:DI 1182)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:545 -1
     (nil))
(insn 2139 2138 2140 226 (parallel [
            (set (reg:DI 1183)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:545 -1
     (nil))
(insn 2140 2139 2141 226 (parallel [
            (set (reg:DI 1184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:545 -1
     (nil))
(insn 2141 2140 2142 226 (set (reg:DI 38 r9)
        (reg:DI 1182)) ns_print.c:545 -1
     (nil))
(insn 2142 2141 2143 226 (set (reg:DI 37 r8)
        (reg:DI 1183)) ns_print.c:545 -1
     (nil))
(insn 2143 2142 2144 226 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:545 -1
     (nil))
(insn 2144 2143 2145 226 (set (reg:DI 1 dx)
        (reg:DI 1184)) ns_print.c:545 -1
     (nil))
(insn 2145 2144 2146 226 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:545 -1
     (nil))
(insn 2146 2145 2147 226 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:545 -1
     (nil))
(call_insn 2147 2146 2148 226 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:545 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2148 2147 2149 226 (set (reg:SI 526 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:545 -1
     (nil))
(insn 2149 2148 2150 226 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 526 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:545 -1
     (nil))
(jump_insn 2150 2149 2151 226 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:545 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 2151 2150 2152 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 2152 2151 2153 227 (set (reg/f:DI 528 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:548 -1
     (nil))
(insn 2153 2152 2154 227 (parallel [
            (set (reg:DI 1185 [ D.9954 ])
                (minus:DI (reg/v/f:DI 225 [ edata ])
                    (reg/f:DI 528 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:549 -1
     (nil))
(insn 2154 2153 2155 227 (parallel [
            (set (reg:SI 769 [ D.9943 ])
                (ashift:SI (subreg:SI (reg:DI 1185 [ D.9954 ]) 0)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:549 -1
     (nil))
(insn 2155 2154 2156 227 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 769 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:549 -1
     (nil))
(jump_insn 2156 2155 2157 227 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2160)
            (pc))) ns_print.c:549 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 2160)
(note 2157 2156 172 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 172 2157 2158 228 (set (reg/v:SI 540 [ c ])
        (const_int 0 [0])) ns_print.c:549 -1
     (nil))
(jump_insn 2158 172 2159 228 (set (pc)
        (label_ref 2165)) ns_print.c:549 -1
     (nil)
 -> 2165)
(barrier 2159 2158 2160)
(code_label 2160 2159 2161 229 173 "" [1 uses])
(note 2161 2160 2162 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 2162 2161 2163 229 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2163 2162 2164 229 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2164 2163 2165)
(code_label 2165 2164 2166 230 174 "" [2 uses])
(note 2166 2165 2167 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 2167 2166 2168 230 (parallel [
            (set (reg:SI 1186 [ D.9943 ])
                (ashiftrt:SI (reg/v:SI 540 [ c ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:550 -1
     (nil))
(insn 2168 2167 2169 230 (set (reg:DI 1187 [ D.9949 ])
        (sign_extend:DI (reg:SI 1186 [ D.9943 ]))) ns_print.c:550 -1
     (nil))
(insn 2169 2168 2170 230 (set (reg:SI 1188 [ D.9943 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 528 [ D.9950 ])
                    (reg:DI 1187 [ D.9949 ])) [0 *_591+0 S1 A8]))) ns_print.c:550 -1
     (nil))
(insn 2170 2169 2171 230 (parallel [
            (set (reg:SI 1189 [ D.9943 ])
                (and:SI (reg/v:SI 540 [ c ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:550 -1
     (nil))
(insn 2171 2170 2172 230 (set (reg:SI 1191)
        (const_int 128 [0x80])) ns_print.c:550 -1
     (nil))
(insn 2172 2171 2173 230 (parallel [
            (set (reg:SI 1190 [ D.9943 ])
                (ashiftrt:SI (reg:SI 1191)
                    (subreg:QI (reg:SI 1189 [ D.9943 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:550 -1
     (nil))
(insn 2173 2172 2174 230 (parallel [
            (set (reg:SI 1192 [ D.9943 ])
                (and:SI (reg:SI 1188 [ D.9943 ])
                    (reg:SI 1190 [ D.9943 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:550 -1
     (nil))
(insn 2174 2173 2175 230 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1192 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:550 -1
     (nil))
(jump_insn 2175 2174 2207 230 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2183)
            (pc))) ns_print.c:550 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 2183)
(code_label 2207 2175 2176 231 178 "" [1 uses])
(note 2176 2207 2177 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 2177 2176 2178 231 (parallel [
            (set (reg/v:SI 540 [ c ])
                (plus:SI (reg/v:SI 540 [ c ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:549 -1
     (nil))
(insn 2178 2177 2179 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 540 [ c ])
            (reg:SI 769 [ D.9943 ]))) ns_print.c:549 -1
     (nil))
(jump_insn 2179 2178 2182 231 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2216)
            (pc))) ns_print.c:549 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 2216)
(note 2182 2179 2180 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2180 2182 2181 232 (set (pc)
        (label_ref 2211)) -1
     (nil)
 -> 2211)
(barrier 2181 2180 2183)
(code_label 2183 2181 2184 233 175 "" [1 uses])
(note 2184 2183 2185 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 2185 2184 2186 233 (set (reg:SI 5 di)
        (reg/v:SI 540 [ c ])) ns_print.c:551 -1
     (nil))
(call_insn 2186 2185 2187 233 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>) [0 __p_type S1 A8])
            (const_int 0 [0]))) ns_print.c:551 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_type") [flags 0x43]  <function_decl 0x2b5d798f60d8 __p_type>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 2187 2186 2188 233 (set (reg/f:DI 541 [ D.9953 ])
        (reg:DI 0 ax)) ns_print.c:551 -1
     (nil))
(insn 2188 2187 2189 233 (parallel [
            (set (reg:DI 1193)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:551 -1
     (nil))
(insn 2189 2188 2190 233 (set (reg:DI 1 dx)
        (reg/f:DI 541 [ D.9953 ])) ns_print.c:551 -1
     (nil))
(insn 2190 2189 2191 233 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x2b5d79bf7000 *.LC42>)) ns_print.c:551 -1
     (nil))
(insn 2191 2190 2192 233 (set (reg:DI 5 di)
        (reg:DI 1193)) ns_print.c:551 -1
     (nil))
(insn 2192 2191 2193 233 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:551 -1
     (nil))
(call_insn 2193 2192 2194 233 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:551 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2194 2193 2195 233 (set (reg/v:SI 542 [ len ])
        (reg:SI 0 ax)) ns_print.c:551 -1
     (nil))
(insn 2195 2194 2196 233 (parallel [
            (set (reg:DI 1194)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:552 -1
     (nil))
(insn 2196 2195 2197 233 (parallel [
            (set (reg:DI 1195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:552 -1
     (nil))
(insn 2197 2196 2198 233 (set (reg:DI 1196 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 542 [ len ]))) ns_print.c:552 -1
     (nil))
(insn 2198 2197 2199 233 (parallel [
            (set (reg:DI 1197)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:552 -1
     (nil))
(insn 2199 2198 2200 233 (set (reg:DI 2 cx)
        (reg:DI 1194)) ns_print.c:552 -1
     (nil))
(insn 2200 2199 2201 233 (set (reg:DI 1 dx)
        (reg:DI 1195)) ns_print.c:552 -1
     (nil))
(insn 2201 2200 2202 233 (set (reg:DI 4 si)
        (reg:DI 1196 [ D.9951 ])) ns_print.c:552 -1
     (nil))
(insn 2202 2201 2203 233 (set (reg:DI 5 di)
        (reg:DI 1197)) ns_print.c:552 -1
     (nil))
(call_insn 2203 2202 2204 233 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:552 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2204 2203 2205 233 (set (reg:SI 544 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:552 -1
     (nil))
(insn 2205 2204 2206 233 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 544 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:552 -1
     (nil))
(jump_insn 2206 2205 2210 233 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:552 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 245)
(note 2210 2206 2208 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2208 2210 2209 234 (set (pc)
        (label_ref 2207)) -1
     (nil)
 -> 2207)
(barrier 2209 2208 2211)
(code_label 2211 2209 2212 235 177 "" [1 uses])
(note 2212 2211 2213 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 2213 2212 2214 235 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2214 2213 2215 235 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2215 2214 2216)
(code_label 2216 2215 2217 236 176 "" [1 uses])
(note 2217 2216 2218 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 2218 2217 2219 236 (set (reg/f:DI 528 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(jump_insn 2219 2218 2220 236 (set (pc)
        (label_ref 2165)) -1
     (nil)
 -> 2165)
(barrier 2220 2219 2221)
(code_label 2221 2220 2222 237 110 "" [1 uses])
(note 2222 2221 2223 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 2223 2222 2224 237 (set (reg:DI 1198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:564 -1
     (nil))
(insn 2224 2223 2225 237 (set (reg:DI 5 di)
        (reg:DI 1198)) ns_print.c:564 -1
     (nil))
(call_insn 2225 2224 2226 237 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:564 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2226 2225 2227 237 (set (reg/v:SI 546 [ c_type ])
        (reg:SI 0 ax)) ns_print.c:564 -1
     (nil))
(insn 2227 2226 2228 237 (set (reg/f:DI 1199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:564 -1
     (nil))
(insn 2228 2227 2229 237 (parallel [
            (set (reg/f:DI 548 [ D.9950 ])
                (plus:DI (reg/f:DI 1199)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:564 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 2229 2228 2230 237 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 548 [ D.9950 ])) ns_print.c:564 -1
     (nil))
(insn 2230 2229 2231 237 (set (reg:DI 5 di)
        (reg/f:DI 548 [ D.9950 ])) ns_print.c:565 -1
     (nil))
(call_insn 2231 2230 2232 237 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:565 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2232 2231 2233 237 (set (reg/v:SI 549 [ key_tag ])
        (reg:SI 0 ax)) ns_print.c:565 -1
     (nil))
(insn 2233 2232 2234 237 (set (reg/f:DI 550 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:565 -1
     (nil))
(insn 2234 2233 2235 237 (parallel [
            (set (reg:DI 1200)
                (plus:DI (reg/f:DI 550 [ D.9950 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:566 -1
     (nil))
(insn 2235 2234 2236 237 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg:DI 1200)) ns_print.c:566 -1
     (nil))
(insn 2236 2235 2237 237 (set (reg:SI 1201 [ alg ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 550 [ D.9950 ])
                    (const_int 2 [0x2])) [0 MEM[(const u_char *)_613 + 2B]+0 S1 A8]))) ns_print.c:568 -1
     (nil))
(insn 2237 2236 2238 237 (parallel [
            (set (reg:DI 1202)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11104 [0xffffffffffffd4a0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:568 -1
     (nil))
(insn 2238 2237 2239 237 (set (reg:SI 37 r8)
        (reg:SI 1201 [ alg ])) ns_print.c:568 -1
     (nil))
(insn 2239 2238 2240 237 (set (reg:SI 2 cx)
        (reg/v:SI 549 [ key_tag ])) ns_print.c:568 -1
     (nil))
(insn 2240 2239 2241 237 (set (reg:SI 1 dx)
        (reg/v:SI 546 [ c_type ])) ns_print.c:568 -1
     (nil))
(insn 2241 2240 2242 237 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x2b5d79bf7090 *.LC43>)) ns_print.c:568 -1
     (nil))
(insn 2242 2241 2243 237 (set (reg:DI 5 di)
        (reg:DI 1202)) ns_print.c:568 -1
     (nil))
(insn 2243 2242 2244 237 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:568 -1
     (nil))
(call_insn 2244 2243 2245 237 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:568 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 2245 2244 2246 237 (set (reg/v:SI 555 [ len ])
        (reg:SI 0 ax)) ns_print.c:568 -1
     (nil))
(insn 2246 2245 2247 237 (parallel [
            (set (reg:DI 1203)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:569 -1
     (nil))
(insn 2247 2246 2248 237 (parallel [
            (set (reg:DI 1204)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:569 -1
     (nil))
(insn 2248 2247 2249 237 (set (reg:DI 1205 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 555 [ len ]))) ns_print.c:569 -1
     (nil))
(insn 2249 2248 2250 237 (parallel [
            (set (reg:DI 1206)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11104 [0xffffffffffffd4a0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:569 -1
     (nil))
(insn 2250 2249 2251 237 (set (reg:DI 2 cx)
        (reg:DI 1203)) ns_print.c:569 -1
     (nil))
(insn 2251 2250 2252 237 (set (reg:DI 1 dx)
        (reg:DI 1204)) ns_print.c:569 -1
     (nil))
(insn 2252 2251 2253 237 (set (reg:DI 4 si)
        (reg:DI 1205 [ D.9951 ])) ns_print.c:569 -1
     (nil))
(insn 2253 2252 2254 237 (set (reg:DI 5 di)
        (reg:DI 1206)) ns_print.c:569 -1
     (nil))
(call_insn 2254 2253 2255 237 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:569 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2255 2254 2256 237 (set (reg:SI 557 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:569 -1
     (nil))
(insn 2256 2255 2257 237 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 557 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:569 -1
     (nil))
(jump_insn 2257 2256 2283 237 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2261)
            (pc))) ns_print.c:569 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 2261)
(code_label 2283 2257 2258 238 181 "" [5 uses])
(note 2258 2283 216 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 216 2258 2259 238 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:569 -1
     (nil))
(jump_insn 2259 216 2260 238 (set (pc)
        (label_ref 3017)) ns_print.c:569 -1
     (nil)
 -> 3017)
(barrier 2260 2259 2261)
(code_label 2261 2260 2262 239 179 "" [1 uses])
(note 2262 2261 2263 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 2263 2262 2264 239 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) ns_print.c:570 -1
     (nil))
(insn 2264 2263 2265 239 (set (reg/f:DI 558 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:570 -1
     (nil))
(insn 2265 2264 2266 239 (parallel [
            (set (reg:DI 560 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 558 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (nil))
(insn 2266 2265 2267 239 (parallel [
            (set (reg:DI 1207 [ D.9954 ])
                (ashift:DI (reg:DI 560 [ D.9954 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (nil))
(insn 2267 2266 2268 239 (set (reg:DI 1210)
        (const_int 6148914691236517206 [0x5555555555555556])) ns_print.c:570 -1
     (nil))
(insn 2268 2267 2269 239 (parallel [
            (set (reg:DI 1209)
                (truncate:DI (lshiftrt:TI (mult:TI (sign_extend:TI (reg:DI 1207 [ D.9954 ]))
                            (sign_extend:TI (reg:DI 1210)))
                        (const_int 64 [0x40]))))
            (clobber (scratch:DI))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (nil))
(insn 2269 2268 2270 239 (parallel [
            (set (reg:DI 1211)
                (ashiftrt:DI (reg:DI 1207 [ D.9954 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (nil))
(insn 2270 2269 2271 239 (parallel [
            (set (reg:DI 1208 [ D.9954 ])
                (minus:DI (reg:DI 1209)
                    (reg:DI 1211)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (expr_list:REG_EQUAL (div:DI (reg:DI 1207 [ D.9954 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 2271 2270 2272 239 (parallel [
            (set (reg/v:SI 564 [ siz ])
                (plus:SI (subreg:SI (reg:DI 1208 [ D.9954 ]) 0)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:570 -1
     (nil))
(insn 2272 2271 2273 239 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 564 [ siz ])
            (const_int 6144 [0x1800]))) ns_print.c:571 -1
     (nil))
(jump_insn 2273 2272 2274 239 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2289)
            (pc))) ns_print.c:571 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2289)
(note 2274 2273 2275 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 2275 2274 2276 240 (parallel [
            (set (reg:DI 1212)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:573 -1
     (nil))
(insn 2276 2275 2277 240 (parallel [
            (set (reg:DI 1213)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:573 -1
     (nil))
(insn 2277 2276 2278 240 (set (reg:DI 2 cx)
        (reg:DI 1212)) ns_print.c:573 -1
     (nil))
(insn 2278 2277 2279 240 (set (reg:DI 1 dx)
        (reg:DI 1213)) ns_print.c:573 -1
     (nil))
(insn 2279 2278 2280 240 (set (reg:DI 4 si)
        (const_int 24 [0x18])) ns_print.c:573 -1
     (nil))
(insn 2280 2279 2281 240 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x2b5d79bf7120 *.LC44>)) ns_print.c:573 -1
     (nil))
(call_insn 2281 2280 2282 240 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:573 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2282 2281 2284 240 (set (reg:SI 565 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:573 -1
     (nil))
(insn 2284 2282 2285 240 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 565 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:573 -1
     (nil))
(jump_insn 2285 2284 2288 240 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2283)
            (pc))) ns_print.c:573 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2283)
(note 2288 2285 2286 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2286 2288 2287 241 (set (pc)
        (label_ref 2381)) -1
     (nil)
 -> 2381)
(barrier 2287 2286 2289)
(code_label 2289 2287 2290 242 180 "" [1 uses])
(note 2290 2289 2291 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 2291 2290 2292 242 (set (reg:DI 1214 [ D.9951 ])
        (zero_extend:DI (reg/v:SI 564 [ siz ]))) ns_print.c:576 -1
     (nil))
(insn 2292 2291 2293 242 (parallel [
            (set (reg:DI 1215)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:576 -1
     (nil))
(insn 2293 2292 2294 242 (set (reg:DI 2 cx)
        (reg:DI 1214 [ D.9951 ])) ns_print.c:576 -1
     (nil))
(insn 2294 2293 2295 242 (set (reg:DI 1 dx)
        (reg:DI 1215)) ns_print.c:576 -1
     (nil))
(insn 2295 2294 2296 242 (set (reg:DI 4 si)
        (reg:DI 560 [ D.9954 ])) ns_print.c:576 -1
     (nil))
(insn 2296 2295 2297 242 (set (reg:DI 5 di)
        (reg/f:DI 558 [ D.9950 ])) ns_print.c:576 -1
     (nil))
(call_insn 2297 2296 2298 242 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>) [0 __b64_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:576 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___b64_ntop") [flags 0x43]  <function_decl 0x2b5d798f0870 __b64_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2298 2297 2299 242 (set (reg/v:SI 568 [ len ])
        (reg:SI 0 ax)) ns_print.c:576 -1
     (nil))
(insn 2299 2298 2300 242 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 568 [ len ])
            (const_int 0 [0]))) ns_print.c:578 -1
     (nil))
(jump_insn 2300 2299 2301 242 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2376)
            (pc))) ns_print.c:578 -1
     (int_list:REG_BR_PROB 2700 (nil))
 -> 2376)
(note 2301 2300 2302 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 2302 2301 2303 243 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 568 [ len ])
            (const_int 15 [0xf]))) ns_print.c:580 -1
     (nil))
(jump_insn 2303 2302 2304 243 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3037)
            (pc))) ns_print.c:580 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 3037)
(note 2304 2303 2305 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 2305 2304 2306 244 (parallel [
            (set (reg:DI 1216)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:581 -1
     (nil))
(insn 2306 2305 2307 244 (parallel [
            (set (reg:DI 1217)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:581 -1
     (nil))
(insn 2307 2306 2308 244 (set (reg:DI 2 cx)
        (reg:DI 1216)) ns_print.c:581 -1
     (nil))
(insn 2308 2307 2309 244 (set (reg:DI 1 dx)
        (reg:DI 1217)) ns_print.c:581 -1
     (nil))
(insn 2309 2308 2310 244 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:581 -1
     (nil))
(insn 2310 2309 2311 244 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b5d79ba1120 *.LC16>)) ns_print.c:581 -1
     (nil))
(call_insn 2311 2310 2312 244 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:581 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2312 2311 2313 244 (set (reg:SI 569 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:581 -1
     (nil))
(insn 2313 2312 2314 244 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 569 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:581 -1
     (nil))
(jump_insn 2314 2313 3085 244 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2283)
            (pc))) ns_print.c:581 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2283)
(note 3085 2314 175 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 175 3085 176 245 (set (reg:DI 821 [ D.9951 ])
        (const_int 3 [0x3])) -1
     (nil))
(insn 176 175 3109 245 (set (reg/v/f:DI 764 [ leader ])
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2b5d79ba1000 *.LC14>)) ns_print.c:582 -1
     (nil))
(jump_insn 3109 176 3110 245 (set (pc)
        (label_ref 3039)) -1
     (nil)
 -> 3039)
(barrier 3110 3109 3112)
(code_label 3112 3110 3111 246 225 "" [1 uses])
(note 3111 3112 173 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 173 3111 174 246 (set (reg:DI 821 [ D.9951 ])
        (const_int 1 [0x1])) ns_print.c:588 -1
     (nil))
(insn 174 173 3039 246 (set (reg/v/f:DI 764 [ leader ])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:586 -1
     (nil))
(code_label 3039 174 2315 247 212 "" [1 uses])
(note 2315 3039 177 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 177 2315 2355 247 (set (reg:DI 754 [ ivtmp.158 ])
        (const_int 0 [0])) ns_print.c:582 -1
     (nil))
(code_label 2355 177 2316 248 186 "" [1 uses])
(note 2316 2355 2317 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 2317 2316 2318 248 (parallel [
            (set (reg:DI 1218)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:589 -1
     (nil))
(insn 2318 2317 2319 248 (parallel [
            (set (reg:DI 1219)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:589 -1
     (nil))
(insn 2319 2318 2320 248 (set (reg:DI 2 cx)
        (reg:DI 1218)) ns_print.c:589 -1
     (nil))
(insn 2320 2319 2321 248 (set (reg:DI 1 dx)
        (reg:DI 1219)) ns_print.c:589 -1
     (nil))
(insn 2321 2320 2322 248 (set (reg:DI 4 si)
        (reg:DI 821 [ D.9951 ])) ns_print.c:589 -1
     (nil))
(insn 2322 2321 2323 248 (set (reg:DI 5 di)
        (reg/v/f:DI 764 [ leader ])) ns_print.c:589 -1
     (nil))
(call_insn 2323 2322 2324 248 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:589 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2324 2323 2325 248 (set (reg:SI 570 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:589 -1
     (nil))
(insn 2325 2324 2326 248 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 570 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:589 -1
     (nil))
(jump_insn 2326 2325 2327 248 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2283)
            (pc))) ns_print.c:589 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2283)
(note 2327 2326 2328 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 2328 2327 2329 249 (parallel [
            (set (reg:DI 1220)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:591 -1
     (nil))
(insn 2329 2328 2330 249 (parallel [
            (set (reg:DI 1221)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:591 -1
     (nil))
(insn 2330 2329 2332 249 (parallel [
            (set (reg:SI 1222 [ D.9947 ])
                (minus:SI (reg/v:SI 568 [ len ])
                    (subreg:SI (reg:DI 754 [ ivtmp.158 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:591 -1
     (nil))
(insn 2332 2330 2331 249 (set (reg:SI 1223)
        (const_int 48 [0x30])) ns_print.c:591 -1
     (nil))
(insn 2331 2332 2333 249 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1222 [ D.9947 ])
            (const_int 48 [0x30]))) ns_print.c:591 -1
     (nil))
(insn 2333 2331 2334 249 (set (reg:SI 1222 [ D.9947 ])
        (if_then_else:SI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 1222 [ D.9947 ])
            (reg:SI 1223))) ns_print.c:591 -1
     (nil))
(insn 2334 2333 2335 249 (set (reg:DI 1224 [ D.9951 ])
        (sign_extend:DI (reg:SI 1222 [ D.9947 ]))) ns_print.c:591 -1
     (nil))
(insn 2335 2334 2336 249 (parallel [
            (set (reg:DI 1225)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:591 -1
     (nil))
(insn 2336 2335 2337 249 (parallel [
            (set (reg:DI 1226 [ D.9953 ])
                (plus:DI (reg:DI 1225)
                    (reg:DI 754 [ ivtmp.158 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:591 -1
     (nil))
(insn 2337 2336 2338 249 (set (reg:DI 2 cx)
        (reg:DI 1220)) ns_print.c:591 -1
     (nil))
(insn 2338 2337 2339 249 (set (reg:DI 1 dx)
        (reg:DI 1221)) ns_print.c:591 -1
     (nil))
(insn 2339 2338 2340 249 (set (reg:DI 4 si)
        (reg:DI 1224 [ D.9951 ])) ns_print.c:591 -1
     (nil))
(insn 2340 2339 2341 249 (set (reg:DI 5 di)
        (reg:DI 1226 [ D.9953 ])) ns_print.c:591 -1
     (nil))
(call_insn 2341 2340 2342 249 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:591 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2342 2341 2343 249 (set (reg:SI 574 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:591 -1
     (nil))
(insn 2343 2342 2344 249 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 574 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:591 -1
     (nil))
(jump_insn 2344 2343 2345 249 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2283)
            (pc))) ns_print.c:591 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2283)
(note 2345 2344 2346 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 2346 2345 2347 250 (parallel [
            (set (reg:DI 754 [ ivtmp.158 ])
                (plus:DI (reg:DI 754 [ ivtmp.158 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2347 2346 2348 250 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 568 [ len ])
            (subreg:SI (reg:DI 754 [ ivtmp.158 ]) 0))) ns_print.c:588 -1
     (nil))
(jump_insn 2348 2347 2349 250 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2358)
            (pc))) ns_print.c:588 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 2358)
(note 2349 2348 2350 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 2350 2349 2351 251 (set (reg:DI 5 di)
        (reg/v/f:DI 764 [ leader ])) -1
     (nil))
(call_insn/i 2351 2350 2352 251 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2352 2351 2353 251 (set (reg:DI 1228)
        (reg:DI 0 ax)) -1
     (nil))
(insn 2353 2352 2354 251 (set (reg:DI 1229)
        (reg:DI 1228)) -1
     (nil))
(insn 2354 2353 2356 251 (set (reg:DI 821 [ D.9951 ])
        (reg:DI 1229)) -1
     (nil))
(jump_insn 2356 2354 2357 251 (set (pc)
        (label_ref 2355)) -1
     (nil)
 -> 2355)
(barrier 2357 2356 2358)
(code_label 2358 2357 2359 252 185 "" [1 uses])
(note 2359 2358 2360 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 2360 2359 2361 252 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 568 [ len ])
            (const_int 15 [0xf]))) ns_print.c:594 -1
     (nil))
(jump_insn 2361 2360 2362 252 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2381)
            (pc))) ns_print.c:594 -1
     (int_list:REG_BR_PROB 6915 (nil))
 -> 2381)
(note 2362 2361 2363 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 2363 2362 2364 253 (parallel [
            (set (reg:DI 1230)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:595 -1
     (nil))
(insn 2364 2363 2365 253 (parallel [
            (set (reg:DI 1231)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:595 -1
     (nil))
(insn 2365 2364 2366 253 (set (reg:DI 2 cx)
        (reg:DI 1230)) ns_print.c:595 -1
     (nil))
(insn 2366 2365 2367 253 (set (reg:DI 1 dx)
        (reg:DI 1231)) ns_print.c:595 -1
     (nil))
(insn 2367 2366 2368 253 (set (reg:DI 4 si)
        (const_int 2 [0x2])) ns_print.c:595 -1
     (nil))
(insn 2368 2367 2369 253 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2b5d79ba1870 *.LC29>)) ns_print.c:595 -1
     (nil))
(call_insn 2369 2368 2370 253 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:595 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2370 2369 2371 253 (set (reg:SI 575 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:595 -1
     (nil))
(insn 2371 2370 2372 253 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 575 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:595 -1
     (nil))
(jump_insn 2372 2371 2375 253 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2283)
            (pc))) ns_print.c:595 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2283)
(note 2375 2372 2373 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2373 2375 2374 254 (set (pc)
        (label_ref 2381)) -1
     (nil)
 -> 2381)
(barrier 2374 2373 2376)
(code_label 2376 2374 2377 255 183 "" [1 uses])
(note 2377 2376 2378 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 2378 2377 182 255 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 182 2378 2379 255 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 2379 182 2380 255 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 2380 2379 2381)
(code_label 2381 2380 2382 256 182 "" [4 uses])
(note 2382 2381 2383 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 2383 2382 2384 256 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2384 2383 2385 256 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2385 2384 2386)
(code_label 2386 2385 2387 257 113 "" [1 uses])
(note 2387 2386 2388 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 2388 2387 2389 257 (parallel [
            (set (reg:DI 1232)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:606 -1
     (nil))
(insn 2389 2388 2390 257 (parallel [
            (set (reg:DI 1233)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:606 -1
     (nil))
(insn 2390 2389 2391 257 (parallel [
            (set (reg:DI 1234)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:606 -1
     (nil))
(insn 2391 2390 2392 257 (set (reg:DI 38 r9)
        (reg:DI 1232)) ns_print.c:606 -1
     (nil))
(insn 2392 2391 2393 257 (set (reg:DI 37 r8)
        (reg:DI 1233)) ns_print.c:606 -1
     (nil))
(insn 2393 2392 2394 257 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:606 -1
     (nil))
(insn 2394 2393 2395 257 (set (reg:DI 1 dx)
        (reg:DI 1234)) ns_print.c:606 -1
     (nil))
(insn 2395 2394 2396 257 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:606 -1
     (nil))
(insn 2396 2395 2397 257 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:606 -1
     (nil))
(call_insn 2397 2396 2398 257 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:606 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2398 2397 2399 257 (set (reg:SI 576 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:606 -1
     (nil))
(insn 2399 2398 2400 257 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 576 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:606 -1
     (nil))
(jump_insn 2400 2399 2401 257 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:606 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2401 2400 2402 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 2402 2401 2403 258 (parallel [
            (set (reg:DI 1235)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:607 -1
     (nil))
(insn 2403 2402 2404 258 (parallel [
            (set (reg:DI 1236)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:607 -1
     (nil))
(insn 2404 2403 2405 258 (set (reg:DI 2 cx)
        (reg:DI 1235)) ns_print.c:607 -1
     (nil))
(insn 2405 2404 2406 258 (set (reg:DI 1 dx)
        (reg:DI 1236)) ns_print.c:607 -1
     (nil))
(insn 2406 2405 2407 258 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:607 -1
     (nil))
(insn 2407 2406 2408 258 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:607 -1
     (nil))
(call_insn 2408 2407 2409 258 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:607 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2409 2408 2410 258 (set (reg:SI 577 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:607 -1
     (nil))
(insn 2410 2409 2411 258 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 577 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:607 -1
     (nil))
(jump_insn 2411 2410 2412 258 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:607 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2412 2411 2413 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 2413 2412 2414 259 (set (reg:DI 1237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:610 -1
     (nil))
(insn 2414 2413 2415 259 (set (reg:DI 5 di)
        (reg:DI 1237)) ns_print.c:610 -1
     (nil))
(call_insn 2415 2414 2416 259 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:610 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2416 2415 2417 259 (set (reg/v:DI 579 [ t ])
        (reg:DI 0 ax)) ns_print.c:610 -1
     (nil))
(insn 2417 2416 2418 259 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:610 -1
     (nil))
(insn 2418 2417 2419 259 (set (reg:DI 5 di)
        (reg/v:DI 579 [ t ])) ns_print.c:611 -1
     (nil))
(call_insn 2419 2418 2420 259 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>) [0 __p_secstodate S1 A8])
            (const_int 0 [0]))) ns_print.c:611 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2420 2419 2421 259 (set (reg/f:DI 582 [ D.9944 ])
        (reg:DI 0 ax)) ns_print.c:611 -1
     (nil))
(insn 2421 2420 2422 259 (parallel [
            (set (reg:DI 1238)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:611 -1
     (nil))
(insn 2422 2421 2423 259 (set (reg:DI 1 dx)
        (reg/f:DI 582 [ D.9944 ])) ns_print.c:611 -1
     (nil))
(insn 2423 2422 2424 259 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x2b5d79ba1f30 *.LC41>)) ns_print.c:611 -1
     (nil))
(insn 2424 2423 2425 259 (set (reg:DI 5 di)
        (reg:DI 1238)) ns_print.c:611 -1
     (nil))
(insn 2425 2424 2426 259 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:611 -1
     (nil))
(call_insn 2426 2425 2427 259 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:611 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2427 2426 2428 259 (set (reg/v:SI 583 [ len ])
        (reg:SI 0 ax)) ns_print.c:611 -1
     (nil))
(insn 2428 2427 2429 259 (parallel [
            (set (reg:DI 1239)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:612 -1
     (nil))
(insn 2429 2428 2430 259 (parallel [
            (set (reg:DI 1240)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:612 -1
     (nil))
(insn 2430 2429 2431 259 (set (reg:DI 1241 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 583 [ len ]))) ns_print.c:612 -1
     (nil))
(insn 2431 2430 2432 259 (parallel [
            (set (reg:DI 1242)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:612 -1
     (nil))
(insn 2432 2431 2433 259 (set (reg:DI 2 cx)
        (reg:DI 1239)) ns_print.c:612 -1
     (nil))
(insn 2433 2432 2434 259 (set (reg:DI 1 dx)
        (reg:DI 1240)) ns_print.c:612 -1
     (nil))
(insn 2434 2433 2435 259 (set (reg:DI 4 si)
        (reg:DI 1241 [ D.9951 ])) ns_print.c:612 -1
     (nil))
(insn 2435 2434 2436 259 (set (reg:DI 5 di)
        (reg:DI 1242)) ns_print.c:612 -1
     (nil))
(call_insn 2436 2435 2437 259 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:612 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2437 2436 2438 259 (set (reg:SI 585 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:612 -1
     (nil))
(insn 2438 2437 2439 259 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 585 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:612 -1
     (nil))
(jump_insn 2439 2438 2440 259 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:612 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2440 2439 2441 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 2441 2440 2442 260 (set (reg:DI 1243)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:615 -1
     (nil))
(insn 2442 2441 2443 260 (set (reg:DI 5 di)
        (reg:DI 1243)) ns_print.c:615 -1
     (nil))
(call_insn 2443 2442 2444 260 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) ns_print.c:615 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b5d795b3ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2444 2443 2445 260 (set (reg/v:DI 587 [ t ])
        (reg:DI 0 ax)) ns_print.c:615 -1
     (nil))
(insn 2445 2444 2446 260 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:615 -1
     (nil))
(insn 2446 2445 2447 260 (set (reg:DI 5 di)
        (reg/v:DI 587 [ t ])) ns_print.c:616 -1
     (nil))
(call_insn 2447 2446 2448 260 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>) [0 __p_secstodate S1 A8])
            (const_int 0 [0]))) ns_print.c:616 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___p_secstodate") [flags 0x43]  <function_decl 0x2b5d798f66c0 __p_secstodate>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2448 2447 2449 260 (set (reg/f:DI 590 [ D.9944 ])
        (reg:DI 0 ax)) ns_print.c:616 -1
     (nil))
(insn 2449 2448 2450 260 (parallel [
            (set (reg:DI 1244)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:616 -1
     (nil))
(insn 2450 2449 2451 260 (set (reg:DI 1 dx)
        (reg/f:DI 590 [ D.9944 ])) ns_print.c:616 -1
     (nil))
(insn 2451 2450 2452 260 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x2b5d79ba1f30 *.LC41>)) ns_print.c:616 -1
     (nil))
(insn 2452 2451 2453 260 (set (reg:DI 5 di)
        (reg:DI 1244)) ns_print.c:616 -1
     (nil))
(insn 2453 2452 2454 260 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:616 -1
     (nil))
(call_insn 2454 2453 2455 260 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:616 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2455 2454 2456 260 (set (reg/v:SI 591 [ len ])
        (reg:SI 0 ax)) ns_print.c:616 -1
     (nil))
(insn 2456 2455 2457 260 (parallel [
            (set (reg:DI 1245)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:617 -1
     (nil))
(insn 2457 2456 2458 260 (parallel [
            (set (reg:DI 1246)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:617 -1
     (nil))
(insn 2458 2457 2459 260 (set (reg:DI 1247 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 591 [ len ]))) ns_print.c:617 -1
     (nil))
(insn 2459 2458 2460 260 (parallel [
            (set (reg:DI 1248)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:617 -1
     (nil))
(insn 2460 2459 2461 260 (set (reg:DI 2 cx)
        (reg:DI 1245)) ns_print.c:617 -1
     (nil))
(insn 2461 2460 2462 260 (set (reg:DI 1 dx)
        (reg:DI 1246)) ns_print.c:617 -1
     (nil))
(insn 2462 2461 2463 260 (set (reg:DI 4 si)
        (reg:DI 1247 [ D.9951 ])) ns_print.c:617 -1
     (nil))
(insn 2463 2462 2464 260 (set (reg:DI 5 di)
        (reg:DI 1248)) ns_print.c:617 -1
     (nil))
(call_insn 2464 2463 2465 260 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:617 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2465 2464 2466 260 (set (reg:SI 593 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:617 -1
     (nil))
(insn 2466 2465 2467 260 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 593 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:617 -1
     (nil))
(jump_insn 2467 2466 2468 260 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:617 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2468 2467 2469 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 2469 2468 2470 261 (set (reg:DI 1249)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:621 -1
     (nil))
(insn 2470 2469 2471 261 (set (reg:DI 5 di)
        (reg:DI 1249)) ns_print.c:621 -1
     (nil))
(call_insn 2471 2470 2472 261 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:621 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2472 2471 2473 261 (set (reg:SI 595 [ D.9955 ])
        (reg:SI 0 ax)) ns_print.c:621 -1
     (nil))
(insn 2473 2472 2474 261 (set (reg/f:DI 1250)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:621 -1
     (nil))
(insn 2474 2473 2475 261 (parallel [
            (set (reg/f:DI 598 [ D.9950 ])
                (plus:DI (reg/f:DI 1250)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:621 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 2475 2474 2476 261 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 598 [ D.9950 ])) ns_print.c:621 -1
     (nil))
(insn 2476 2475 2477 261 (set (reg:DI 5 di)
        (reg/f:DI 598 [ D.9950 ])) ns_print.c:622 -1
     (nil))
(call_insn 2477 2476 2478 261 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:622 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2478 2477 2479 261 (set (reg:SI 599 [ D.9955 ])
        (reg:SI 0 ax)) ns_print.c:622 -1
     (nil))
(insn 2479 2478 2480 261 (set (reg/f:DI 1251)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:622 -1
     (nil))
(insn 2480 2479 2481 261 (parallel [
            (set (reg/f:DI 602 [ D.9950 ])
                (plus:DI (reg/f:DI 1251)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:622 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 2481 2480 2482 261 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 602 [ D.9950 ])) ns_print.c:622 -1
     (nil))
(insn 2482 2481 2483 261 (set (reg:DI 5 di)
        (reg/f:DI 602 [ D.9950 ])) ns_print.c:623 -1
     (nil))
(call_insn 2483 2482 2484 261 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:623 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2484 2483 2485 261 (set (reg:SI 603 [ D.9955 ])
        (reg:SI 0 ax)) ns_print.c:623 -1
     (nil))
(insn 2485 2484 2486 261 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:623 -1
     (nil))
(insn 2486 2485 2487 261 (parallel [
            (set (reg:DI 1252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:624 -1
     (nil))
(insn 2487 2486 2488 261 (set (reg:SI 37 r8)
        (reg:SI 603 [ D.9955 ])) ns_print.c:624 -1
     (nil))
(insn 2488 2487 2489 261 (set (reg:SI 2 cx)
        (reg:SI 599 [ D.9955 ])) ns_print.c:624 -1
     (nil))
(insn 2489 2488 2490 261 (set (reg:SI 1 dx)
        (reg:SI 595 [ D.9955 ])) ns_print.c:624 -1
     (nil))
(insn 2490 2489 2491 261 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x2b5d79ba1ab0 *.LC33>)) ns_print.c:624 -1
     (nil))
(insn 2491 2490 2492 261 (set (reg:DI 5 di)
        (reg:DI 1252)) ns_print.c:624 -1
     (nil))
(insn 2492 2491 2493 261 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:624 -1
     (nil))
(call_insn 2493 2492 2494 261 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:624 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 2494 2493 2495 261 (set (reg/v:SI 607 [ len ])
        (reg:SI 0 ax)) ns_print.c:624 -1
     (nil))
(insn 2495 2494 2496 261 (parallel [
            (set (reg:DI 1253)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:625 -1
     (nil))
(insn 2496 2495 2497 261 (parallel [
            (set (reg:DI 1254)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:625 -1
     (nil))
(insn 2497 2496 2498 261 (set (reg:DI 1255 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 607 [ len ]))) ns_print.c:625 -1
     (nil))
(insn 2498 2497 2499 261 (parallel [
            (set (reg:DI 1256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:625 -1
     (nil))
(insn 2499 2498 2500 261 (set (reg:DI 2 cx)
        (reg:DI 1253)) ns_print.c:625 -1
     (nil))
(insn 2500 2499 2501 261 (set (reg:DI 1 dx)
        (reg:DI 1254)) ns_print.c:625 -1
     (nil))
(insn 2501 2500 2502 261 (set (reg:DI 4 si)
        (reg:DI 1255 [ D.9951 ])) ns_print.c:625 -1
     (nil))
(insn 2502 2501 2503 261 (set (reg:DI 5 di)
        (reg:DI 1256)) ns_print.c:625 -1
     (nil))
(call_insn 2503 2502 2504 261 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:625 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2504 2503 2505 261 (set (reg:SI 609 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:625 -1
     (nil))
(insn 2505 2504 2506 261 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 609 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:625 -1
     (nil))
(jump_insn 2506 2505 2507 261 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:625 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 2507 2506 2508 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 2508 2507 2509 262 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2509 2508 2510 262 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2510 2509 2511)
(code_label 2511 2510 2512 263 114 "" [1 uses])
(note 2512 2511 2513 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 2513 2512 2514 263 (parallel [
            (set (reg:DI 1257)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:635 -1
     (nil))
(insn 2514 2513 2515 263 (parallel [
            (set (reg:DI 1258)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:635 -1
     (nil))
(insn 2515 2514 2516 263 (parallel [
            (set (reg:DI 1259)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:635 -1
     (nil))
(insn 2516 2515 2517 263 (set (reg:DI 38 r9)
        (reg:DI 1257)) ns_print.c:635 -1
     (nil))
(insn 2517 2516 2518 263 (set (reg:DI 37 r8)
        (reg:DI 1258)) ns_print.c:635 -1
     (nil))
(insn 2518 2517 2519 263 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:635 -1
     (nil))
(insn 2519 2518 2520 263 (set (reg:DI 1 dx)
        (reg:DI 1259)) ns_print.c:635 -1
     (nil))
(insn 2520 2519 2521 263 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:635 -1
     (nil))
(insn 2521 2520 2522 263 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:635 -1
     (nil))
(call_insn 2522 2521 2523 263 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:635 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2523 2522 2524 263 (set (reg/v:SI 610 [ len ])
        (reg:SI 0 ax)) ns_print.c:635 -1
     (nil))
(insn 2524 2523 2525 263 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 610 [ len ])
            (const_int 0 [0]))) ns_print.c:635 -1
     (nil))
(jump_insn 2525 2524 2526 263 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:635 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2526 2525 2527 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 2527 2526 2528 264 (parallel [
            (set (reg:DI 1260)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:636 -1
     (nil))
(insn 2528 2527 2529 264 (parallel [
            (set (reg:DI 1261)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:636 -1
     (nil))
(insn 2529 2528 2530 264 (set (reg:DI 2 cx)
        (reg:DI 1260)) ns_print.c:636 -1
     (nil))
(insn 2530 2529 2531 264 (set (reg:DI 1 dx)
        (reg:DI 1261)) ns_print.c:636 -1
     (nil))
(insn 2531 2530 2532 264 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:636 -1
     (nil))
(insn 2532 2531 2533 264 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:636 -1
     (nil))
(call_insn 2533 2532 2534 264 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:636 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2534 2533 2535 264 (set (reg:SI 611 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:636 -1
     (nil))
(insn 2535 2534 2536 264 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 611 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:636 -1
     (nil))
(jump_insn 2536 2535 2537 264 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:636 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 245)
(note 2537 2536 2538 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 2538 2537 2539 265 (set (reg/f:DI 1262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:637 -1
     (nil))
(insn 2539 2538 2540 265 (parallel [
            (set (reg/f:DI 613 [ D.9950 ])
                (plus:DI (reg/f:DI 1262)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:637 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 8 [0x8]))
        (nil)))
(insn 2540 2539 2541 265 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 613 [ D.9950 ])) ns_print.c:637 -1
     (nil))
(insn 2541 2540 2542 265 (set (reg:DI 5 di)
        (reg/f:DI 613 [ D.9950 ])) ns_print.c:638 -1
     (nil))
(call_insn 2542 2541 2543 265 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:638 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2543 2542 2544 265 (set (reg:SI 614 [ D.9955 ])
        (reg:SI 0 ax)) ns_print.c:638 -1
     (nil))
(insn 2544 2543 2545 265 (set (reg:DI 1263 [ D.9949 ])
        (sign_extend:DI (reg:SI 614 [ D.9955 ]))) ns_print.c:639 -1
     (nil))
(insn 2545 2544 2546 265 (parallel [
            (set (reg:DI 1264 [ D.9949 ])
                (plus:DI (reg:DI 1263 [ D.9949 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:639 -1
     (nil))
(insn 2546 2545 2547 265 (set (reg/f:DI 1265)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:639 -1
     (nil))
(insn 2547 2546 2548 265 (parallel [
            (set (reg/f:DI 618 [ D.9950 ])
                (plus:DI (reg:DI 1264 [ D.9949 ])
                    (reg/f:DI 1265)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:639 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (reg:DI 1264 [ D.9949 ]))
        (nil)))
(insn 2548 2547 2549 265 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 618 [ D.9950 ])) ns_print.c:639 -1
     (nil))
(insn 2549 2548 2550 265 (set (reg:DI 5 di)
        (reg/f:DI 618 [ D.9950 ])) ns_print.c:640 -1
     (nil))
(call_insn 2550 2549 2551 265 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:640 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2551 2550 2552 265 (set (reg/f:DI 1266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:640 -1
     (nil))
(insn 2552 2551 2553 265 (parallel [
            (set (reg/f:DI 620 [ D.9950 ])
                (plus:DI (reg/f:DI 1266)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:640 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 2553 2552 2554 265 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 620 [ D.9950 ])) ns_print.c:640 -1
     (nil))
(insn 2554 2553 2555 265 (set (reg:DI 5 di)
        (reg/f:DI 620 [ D.9950 ])) ns_print.c:641 -1
     (nil))
(call_insn 2555 2554 2556 265 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) ns_print.c:641 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b5d795b3bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2556 2555 2557 265 (set (reg:SI 621 [ D.9955 ])
        (reg:SI 0 ax)) ns_print.c:641 -1
     (nil))
(insn 2557 2556 2558 265 (set (reg:DI 1267)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:641 -1
     (nil))
(insn 2558 2557 2559 265 (set (reg:SI 1 dx)
        (reg:SI 621 [ D.9955 ])) ns_print.c:641 -1
     (nil))
(insn 2559 2558 2560 265 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x2b5d79bf71b0 *.LC45>)) ns_print.c:641 -1
     (nil))
(insn 2560 2559 2561 265 (set (reg:DI 5 di)
        (reg:DI 1267)) ns_print.c:641 -1
     (nil))
(insn 2561 2560 2562 265 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:641 -1
     (nil))
(call_insn 2562 2561 2563 265 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:641 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 2563 2562 2564 265 (parallel [
            (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:642 -1
     (nil))
(insn 2564 2563 2565 265 (set (reg/f:DI 625 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:643 -1
     (nil))
(insn 2565 2564 2566 265 (set (reg:DI 5 di)
        (reg/f:DI 625 [ D.9944 ])) ns_print.c:643 -1
     (nil))
(call_insn/i 2566 2565 2567 265 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ns_print.c:643 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2567 2566 2568 265 (set (reg:DI 1269)
        (reg:DI 0 ax)) ns_print.c:643 -1
     (nil))
(insn 2568 2567 2569 265 (set (reg:DI 1270)
        (reg:DI 1269)) ns_print.c:643 -1
     (nil))
(insn 2569 2568 2570 265 (set (reg:DI 626 [ D.9951 ])
        (reg:DI 1270)) ns_print.c:643 -1
     (nil))
(insn 2570 2569 2571 265 (set (reg:CC 17 flags)
        (compare:CC (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])) [2 buflen+0 S8 A64])
            (reg:DI 626 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 2571 2570 2572 265 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 2572 2571 2573 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 2573 2572 2574 266 (parallel [
            (set (reg/f:DI 735 [ D.9944 ])
                (plus:DI (reg/f:DI 625 [ D.9944 ])
                    (reg:DI 626 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(jump_insn 2574 2573 2575 266 (set (pc)
        (label_ref 2817)) ns_print.c:854 -1
     (nil)
 -> 2817)
(barrier 2575 2574 2576)
(code_label 2576 2575 2577 267 111 "" [1 uses])
(note 2577 2576 2578 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 2578 2577 2579 267 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 835 [ rdlen ])
            (const_int 0 [0]))) ns_print.c:652 -1
     (nil))
(jump_insn 2579 2578 2580 267 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2759)
            (pc))) ns_print.c:652 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2759)
(note 2580 2579 2581 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 2581 2580 2582 268 (set (reg/f:DI 1271)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:653 -1
     (nil))
(insn 2582 2581 2583 268 (set (reg:SI 1272 [ D.9943 ])
        (zero_extend:SI (mem:QI (reg/f:DI 1271) [0 *_744+0 S1 A8]))) ns_print.c:653 -1
     (nil))
(insn 2583 2582 2584 268 (parallel [
            (set (reg:DI 1273)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:653 -1
     (nil))
(insn 2584 2583 2585 268 (set (reg:SI 1 dx)
        (reg:SI 1272 [ D.9943 ])) ns_print.c:653 -1
     (nil))
(insn 2585 2584 2586 268 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x2b5d79ba1c60 *.LC36>)) ns_print.c:653 -1
     (nil))
(insn 2586 2585 2587 268 (set (reg:DI 5 di)
        (reg:DI 1273)) ns_print.c:653 -1
     (nil))
(insn 2587 2586 2588 268 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:653 -1
     (nil))
(call_insn 2588 2587 2589 268 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:653 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 2589 2588 2590 268 (set (reg/v:SI 631 [ len ])
        (reg:SI 0 ax)) ns_print.c:653 -1
     (nil))
(insn 2590 2589 2591 268 (parallel [
            (set (reg:DI 1274)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:654 -1
     (nil))
(insn 2591 2590 2592 268 (parallel [
            (set (reg:DI 1275)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:654 -1
     (nil))
(insn 2592 2591 2593 268 (set (reg:DI 1276 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 631 [ len ]))) ns_print.c:654 -1
     (nil))
(insn 2593 2592 2594 268 (parallel [
            (set (reg:DI 1277)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:654 -1
     (nil))
(insn 2594 2593 2595 268 (set (reg:DI 2 cx)
        (reg:DI 1274)) ns_print.c:654 -1
     (nil))
(insn 2595 2594 2596 268 (set (reg:DI 1 dx)
        (reg:DI 1275)) ns_print.c:654 -1
     (nil))
(insn 2596 2595 2597 268 (set (reg:DI 4 si)
        (reg:DI 1276 [ D.9951 ])) ns_print.c:654 -1
     (nil))
(insn 2597 2596 2598 268 (set (reg:DI 5 di)
        (reg:DI 1277)) ns_print.c:654 -1
     (nil))
(call_insn 2598 2597 2599 268 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:654 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2599 2598 2600 268 (set (reg:SI 633 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:654 -1
     (nil))
(insn 2600 2599 2601 268 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 633 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:654 -1
     (nil))
(jump_insn 2601 2600 2602 268 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2768)
            (pc))) ns_print.c:654 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2768)
(note 2602 2601 2603 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 2603 2602 2604 269 (set (reg/f:DI 820 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:655 -1
     (nil))
(insn 2604 2603 2605 269 (set (reg/v:SI 635 [ pbit ])
        (zero_extend:SI (mem:QI (reg/f:DI 820 [ D.9950 ]) [0 *_752+0 S1 A8]))) ns_print.c:655 -1
     (nil))
(insn 2605 2604 2606 269 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 635 [ pbit ])
            (const_int 128 [0x80]))) ns_print.c:656 -1
     (nil))
(jump_insn 2606 2605 2607 269 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2762)
            (pc))) ns_print.c:656 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2762)
(note 2607 2606 2608 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 2608 2607 2609 270 (parallel [
            (set (reg/f:DI 820 [ D.9950 ])
                (plus:DI (reg/f:DI 820 [ D.9950 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:658 -1
     (nil))
(insn 2609 2608 2610 270 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 820 [ D.9950 ])) ns_print.c:658 -1
     (nil))
(insn 2610 2609 2611 270 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 635 [ pbit ])
            (const_int 128 [0x80]))) ns_print.c:661 -1
     (nil))
(jump_insn 2611 2610 2612 270 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2726)
            (pc))) ns_print.c:661 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2726)
(note 2612 2611 2613 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 2613 2612 2614 271 (parallel [
            (set (reg/v:SI 636 [ pbyte ])
                (ashiftrt:SI (reg/v:SI 635 [ pbit ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:657 -1
     (nil))
(insn 2614 2613 2615 271 (set (reg:DI 637 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 636 [ pbyte ]))) ns_print.c:662 -1
     (nil))
(insn 2615 2614 2616 271 (parallel [
            (set (reg:DI 1278 [ D.9950 ])
                (plus:DI (reg/f:DI 820 [ D.9950 ])
                    (reg:DI 637 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:662 -1
     (nil))
(insn 2616 2615 2617 271 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg:DI 1278 [ D.9950 ]))) ns_print.c:662 -1
     (nil))
(jump_insn 2617 2616 2618 271 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2762)
            (pc))) ns_print.c:662 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2762)
(note 2618 2617 2619 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 2619 2618 2620 272 (parallel [
            (set (reg:DI 1279)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11120 [0xffffffffffffd490])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:663 -1
     (nil))
(insn 2620 2619 2621 272 (set (mem/c:DI (reg:DI 1279) [0 MEM[(void *)&a]+0 S8 A128])
        (const_int 0 [0])) ns_print.c:663 -1
     (nil))
(insn 2621 2620 2622 272 (set (mem/c:DI (plus:DI (reg:DI 1279)
                (const_int 8 [0x8])) [0 MEM[(void *)&a]+8 S8 A64])
        (const_int 0 [0])) ns_print.c:663 -1
     (nil))
(insn 2622 2621 2623 272 (set (reg:DI 1280)
        (const_int 16 [0x10])) ns_print.c:664 -1
     (nil))
(insn 2623 2622 2624 272 (parallel [
            (set (reg:DI 639 [ D.9951 ])
                (minus:DI (reg:DI 1280)
                    (reg:DI 637 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2624 2623 2625 272 (parallel [
            (set (reg:DI 1281)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11120 [0xffffffffffffd490])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2625 2624 2626 272 (set (reg:DI 1282)
        (sign_extend:DI (reg/v:SI 636 [ pbyte ]))) ns_print.c:664 -1
     (nil))
(insn 2626 2625 2627 272 (parallel [
            (set (reg:DI 1283)
                (plus:DI (reg:DI 1281)
                    (reg:DI 1282)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2627 2626 2628 272 (set (reg:SI 1284)
        (subreg:SI (reg:DI 639 [ D.9951 ]) 0)) ns_print.c:664 -1
     (nil))
(insn 2628 2627 2629 272 (set (reg/f:DI 1285)
        (reg:DI 1283)) ns_print.c:664 -1
     (nil))
(insn 2629 2628 2630 272 (set (reg/f:DI 1286)
        (reg/f:DI 820 [ D.9950 ])) ns_print.c:664 -1
     (nil))
(insn 2630 2629 2631 272 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1284)
            (const_int 8 [0x8]))) ns_print.c:664 -1
     (nil))
(jump_insn 2631 2630 3120 272 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2666)
            (pc))) ns_print.c:664 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2666)
(note 3120 2631 2632 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 2632 3120 2633 273 (parallel [
            (set (reg:SI 1287)
                (and:SI (reg:SI 1284)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2633 2632 2634 273 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1287)
            (const_int 0 [0]))) ns_print.c:664 -1
     (nil))
(jump_insn 2634 2633 3121 273 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2647)
            (pc))) ns_print.c:664 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 2647)
(note 3121 2634 2635 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 2635 3121 2636 274 (set (reg:SI 1288)
        (mem:SI (reg/f:DI 1286) [0  S4 A8])) ns_print.c:664 -1
     (nil))
(insn 2636 2635 2637 274 (set (mem/c:SI (reg/f:DI 1285) [0  S4 A8])
        (reg:SI 1288)) ns_print.c:664 -1
     (nil))
(insn 2637 2636 2638 274 (set (reg:DI 1289)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2638 2637 2639 274 (parallel [
            (set (reg:DI 1290)
                (plus:DI (reg/f:DI 1285)
                    (reg:DI 1289)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2639 2638 2640 274 (parallel [
            (set (reg/f:DI 1291)
                (plus:DI (reg:DI 1290)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2640 2639 2641 274 (set (reg:DI 1292)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2641 2640 2642 274 (parallel [
            (set (reg:DI 1293)
                (plus:DI (reg/f:DI 1286)
                    (reg:DI 1292)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2642 2641 2643 274 (parallel [
            (set (reg/f:DI 1294)
                (plus:DI (reg:DI 1293)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2643 2642 2644 274 (set (reg:SI 1295)
        (mem:SI (plus:DI (reg/f:DI 1294)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])) ns_print.c:664 -1
     (nil))
(insn 2644 2643 2645 274 (set (mem/c:SI (plus:DI (reg/f:DI 1291)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
        (reg:SI 1295)) ns_print.c:664 -1
     (nil))
(jump_insn 2645 2644 2646 274 (set (pc)
        (label_ref 2698)) ns_print.c:664 -1
     (nil)
 -> 2698)
(barrier 2646 2645 2647)
(code_label 2647 2646 3122 275 193 "" [1 uses])
(note 3122 2647 2648 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 2648 3122 2649 275 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1284)
            (const_int 0 [0]))) ns_print.c:664 -1
     (nil))
(jump_insn 2649 2648 3123 275 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2698)
            (pc))) ns_print.c:664 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2698)
(note 3123 2649 2650 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 2650 3123 2651 276 (set (reg:QI 1296)
        (mem:QI (reg/f:DI 1286) [0  S1 A8])) ns_print.c:664 -1
     (nil))
(insn 2651 2650 2652 276 (set (mem/c:QI (reg/f:DI 1285) [0  S1 A8])
        (reg:QI 1296)) ns_print.c:664 -1
     (nil))
(insn 2652 2651 2653 276 (parallel [
            (set (reg:SI 1297)
                (and:SI (reg:SI 1284)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2653 2652 2654 276 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1297)
            (const_int 0 [0]))) ns_print.c:664 -1
     (nil))
(jump_insn 2654 2653 3124 276 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2698)
            (pc))) ns_print.c:664 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 2698)
(note 3124 2654 2655 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 2655 3124 2656 277 (set (reg:DI 1299)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2656 2655 2657 277 (set (reg:DI 1298)
        (reg:DI 1299)) ns_print.c:664 -1
     (nil))
(insn 2657 2656 2658 277 (parallel [
            (set (reg/f:DI 1300)
                (plus:DI (reg/f:DI 1285)
                    (reg:DI 1298)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2658 2657 2659 277 (set (reg:DI 1302)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2659 2658 2660 277 (set (reg:DI 1301)
        (reg:DI 1302)) ns_print.c:664 -1
     (nil))
(insn 2660 2659 2661 277 (parallel [
            (set (reg/f:DI 1303)
                (plus:DI (reg/f:DI 1286)
                    (reg:DI 1301)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2661 2660 2662 277 (set (reg:HI 1304)
        (mem:HI (plus:DI (reg/f:DI 1303)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) ns_print.c:664 -1
     (nil))
(insn 2662 2661 2664 277 (set (mem/c:HI (plus:DI (reg/f:DI 1300)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 1304)) ns_print.c:664 -1
     (nil))
(jump_insn 2664 2662 2665 277 (set (pc)
        (label_ref 2698)) ns_print.c:664 -1
     (nil)
 -> 2698)
(barrier 2665 2664 2666)
(code_label 2666 2665 3126 279 191 "" [1 uses])
(note 3126 2666 2667 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 2667 3126 2668 279 (set (reg:DI 1305)
        (mem:DI (reg/f:DI 1286) [0  S8 A8])) ns_print.c:664 -1
     (nil))
(insn 2668 2667 2669 279 (set (mem/c:DI (reg/f:DI 1285) [0  S8 A8])
        (reg:DI 1305)) ns_print.c:664 -1
     (nil))
(insn 2669 2668 2670 279 (set (reg:DI 1306)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2670 2669 2671 279 (parallel [
            (set (reg:DI 1307)
                (plus:DI (reg/f:DI 1285)
                    (reg:DI 1306)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2671 2670 2672 279 (parallel [
            (set (reg/f:DI 1308)
                (plus:DI (reg:DI 1307)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2672 2671 2673 279 (set (reg:DI 1309)
        (zero_extend:DI (reg:SI 1284))) ns_print.c:664 -1
     (nil))
(insn 2673 2672 2674 279 (parallel [
            (set (reg:DI 1310)
                (plus:DI (reg/f:DI 1286)
                    (reg:DI 1309)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2674 2673 2675 279 (parallel [
            (set (reg/f:DI 1311)
                (plus:DI (reg:DI 1310)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2675 2674 2676 279 (set (reg:DI 1312)
        (mem:DI (plus:DI (reg/f:DI 1311)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) ns_print.c:664 -1
     (nil))
(insn 2676 2675 2677 279 (set (mem/c:DI (plus:DI (reg/f:DI 1308)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 1312)) ns_print.c:664 -1
     (nil))
(insn 2677 2676 2678 279 (parallel [
            (set (reg/f:DI 1313)
                (plus:DI (reg/f:DI 1285)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2678 2677 2679 279 (parallel [
            (set (reg/f:DI 1313)
                (and:DI (reg/f:DI 1313)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2679 2678 2680 279 (parallel [
            (set (reg/f:DI 1285)
                (minus:DI (reg/f:DI 1285)
                    (reg/f:DI 1313)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2680 2679 2681 279 (parallel [
            (set (reg/f:DI 1286)
                (minus:DI (reg/f:DI 1286)
                    (reg/f:DI 1285)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2681 2680 2682 279 (parallel [
            (set (reg:SI 1284)
                (plus:SI (reg:SI 1284)
                    (subreg:SI (reg/f:DI 1285) 0)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2682 2681 2683 279 (parallel [
            (set (reg:SI 1284)
                (and:SI (reg:SI 1284)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2683 2682 2684 279 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1284)
            (const_int 8 [0x8]))) ns_print.c:664 -1
     (nil))
(jump_insn 2684 2683 3127 279 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2698)
            (pc))) ns_print.c:664 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 2698)
(note 3127 2684 2685 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 2685 3127 2686 280 (parallel [
            (set (reg:SI 1315)
                (and:SI (reg:SI 1284)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2686 2685 2687 280 (set (reg:SI 1314)
        (const_int 0 [0])) ns_print.c:664 -1
     (nil))
(code_label 2687 2686 3128 281 195 "" [1 uses])
(note 3128 2687 2688 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 2688 3128 2689 281 (set (reg:DI 1316)
        (zero_extend:DI (reg:SI 1314))) ns_print.c:664 -1
     (nil))
(insn 2689 2688 2690 281 (set (reg:DI 1317)
        (mem:DI (plus:DI (reg/f:DI 1286)
                (reg:DI 1316)) [0  S8 A8])) ns_print.c:664 -1
     (nil))
(insn 2690 2689 2691 281 (set (mem/c:DI (plus:DI (reg/f:DI 1313)
                (reg:DI 1316)) [0  S8 A64])
        (reg:DI 1317)) ns_print.c:664 -1
     (nil))
(insn 2691 2690 2692 281 (parallel [
            (set (reg:SI 1314)
                (plus:SI (reg:SI 1314)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2692 2691 2693 281 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1314)
            (reg:SI 1315))) ns_print.c:664 -1
     (nil))
(jump_insn 2693 2692 3129 281 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2687)
            (pc))) ns_print.c:664 -1
     (int_list:REG_BR_PROB 8000 (nil))
 -> 2687)
(note 3129 2693 2694 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 2694 3129 2695 282 (set (reg:DI 1318)
        (zero_extend:DI (reg:SI 1314))) ns_print.c:664 -1
     (nil))
(insn 2695 2694 2696 282 (parallel [
            (set (reg/f:DI 1313)
                (plus:DI (reg/f:DI 1313)
                    (reg:DI 1318)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(insn 2696 2695 2698 282 (parallel [
            (set (reg/f:DI 1286)
                (plus:DI (reg/f:DI 1286)
                    (reg:DI 1318)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:664 -1
     (nil))
(code_label 2698 2696 3131 284 192 "" [5 uses])
(note 3131 2698 2699 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 2699 3131 2700 284 (set (reg:DI 1319)
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:665 -1
     (nil))
(insn 2700 2699 2701 284 (set (reg:DI 1320)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:665 -1
     (nil))
(insn 2701 2700 2702 284 (parallel [
            (set (reg:DI 1321)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11120 [0xffffffffffffd490])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:665 -1
     (nil))
(insn 2702 2701 2703 284 (set (reg:SI 2 cx)
        (subreg:SI (reg:DI 1319) 0)) ns_print.c:665 -1
     (nil))
(insn 2703 2702 2704 284 (set (reg:DI 1 dx)
        (reg:DI 1320)) ns_print.c:665 -1
     (nil))
(insn 2704 2703 2705 284 (set (reg:DI 4 si)
        (reg:DI 1321)) ns_print.c:665 -1
     (nil))
(insn 2705 2704 2706 284 (set (reg:SI 5 di)
        (const_int 10 [0xa])) ns_print.c:665 -1
     (nil))
(call_insn 2706 2705 2707 284 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>) [0 inet_ntop S1 A8])
            (const_int 0 [0]))) ns_print.c:665 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("inet_ntop") [flags 0x41]  <function_decl 0x2b5d79627d80 inet_ntop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 2707 2706 2708 284 (set (reg/f:DI 644 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:666 -1
     (nil))
(insn 2708 2707 2709 284 (set (reg:DI 5 di)
        (reg/f:DI 644 [ D.9944 ])) ns_print.c:666 -1
     (nil))
(call_insn/i 2709 2708 2710 284 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ns_print.c:666 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2b5d79414948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 2710 2709 2711 284 (set (reg:DI 1323)
        (reg:DI 0 ax)) ns_print.c:666 -1
     (nil))
(insn 2711 2710 2712 284 (set (reg:DI 1324)
        (reg:DI 1323)) ns_print.c:666 -1
     (nil))
(insn 2712 2711 2713 284 (set (reg:DI 645 [ D.9951 ])
        (reg:DI 1324)) ns_print.c:666 -1
     (nil))
(insn 2713 2712 2714 284 (set (reg:DI 627 [ D.9951 ])
        (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])) ns_print.c:853 -1
     (nil))
(insn 2714 2713 2715 284 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 627 [ D.9951 ])
            (reg:DI 645 [ D.9951 ]))) ns_print.c:853 -1
     (nil))
(jump_insn 2715 2714 2716 284 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 441)
            (pc))) ns_print.c:853 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 441)
(note 2716 2715 2717 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 2717 2716 2718 285 (parallel [
            (set (reg/f:DI 735 [ D.9944 ])
                (plus:DI (reg/f:DI 644 [ D.9944 ])
                    (reg:DI 645 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:854 -1
     (nil))
(insn 2718 2717 2719 285 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
        (reg/f:DI 735 [ D.9944 ])) ns_print.c:854 -1
     (nil))
(insn 2719 2718 2720 285 (parallel [
            (set (reg:DI 1325)
                (minus:DI (reg:DI 627 [ D.9951 ])
                    (reg:DI 645 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:855 -1
     (nil))
(insn 2720 2719 2721 285 (set (mem/c:DI (plus:DI (reg/f:DI 81 virtual-incoming-args)
                (const_int 40 [0x28])) [2 buflen+0 S8 A64])
        (reg:DI 1325)) ns_print.c:855 -1
     (nil))
(insn 2721 2720 2722 285 (set (reg/f:DI 1326)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:667 -1
     (nil))
(insn 2722 2721 2723 285 (parallel [
            (set (reg/f:DI 820 [ D.9950 ])
                (plus:DI (reg:DI 639 [ D.9951 ])
                    (reg/f:DI 1326)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:667 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (reg:DI 639 [ D.9951 ]))
        (nil)))
(insn 2723 2722 2724 285 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 820 [ D.9950 ])) ns_print.c:667 -1
     (nil))
(insn 2724 2723 2725 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 635 [ pbit ])
            (const_int 0 [0]))) ns_print.c:671 -1
     (nil))
(jump_insn 2725 2724 2726 285 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2817)
            (pc))) ns_print.c:671 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 2817)
(code_label 2726 2725 2727 286 190 "" [1 uses])
(note 2727 2726 2728 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 2728 2727 2729 286 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 820 [ D.9950 ]))) ns_print.c:673 -1
     (nil))
(jump_insn 2729 2728 2730 286 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2762)
            (pc))) ns_print.c:673 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 2762)
(note 2730 2729 2731 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 2731 2730 2732 287 (parallel [
            (set (reg:DI 1327)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:674 -1
     (nil))
(insn 2732 2731 2733 287 (parallel [
            (set (reg:DI 1328)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:674 -1
     (nil))
(insn 2733 2732 2734 287 (set (reg:DI 2 cx)
        (reg:DI 1327)) ns_print.c:674 -1
     (nil))
(insn 2734 2733 2735 287 (set (reg:DI 1 dx)
        (reg:DI 1328)) ns_print.c:674 -1
     (nil))
(insn 2735 2734 2736 287 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:674 -1
     (nil))
(insn 2736 2735 2737 287 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2b5d79b723f0 *.LC13>)) ns_print.c:674 -1
     (nil))
(call_insn 2737 2736 2738 287 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:674 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2738 2737 2739 287 (set (reg:SI 647 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:674 -1
     (nil))
(insn 2739 2738 2740 287 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 647 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:674 -1
     (nil))
(jump_insn 2740 2739 2741 287 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2768)
            (pc))) ns_print.c:674 -1
     (int_list:REG_BR_PROB 364 (nil))
 -> 2768)
(note 2741 2740 2742 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 2742 2741 2743 288 (parallel [
            (set (reg:DI 1329)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:675 -1
     (nil))
(insn 2743 2742 2744 288 (parallel [
            (set (reg:DI 1330)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:675 -1
     (nil))
(insn 2744 2743 2745 288 (parallel [
            (set (reg:DI 1331)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:675 -1
     (nil))
(insn 2745 2744 2746 288 (set (reg:DI 38 r9)
        (reg:DI 1329)) ns_print.c:675 -1
     (nil))
(insn 2746 2745 2747 288 (set (reg:DI 37 r8)
        (reg:DI 1330)) ns_print.c:675 -1
     (nil))
(insn 2747 2746 2748 288 (set (reg:DI 2 cx)
        (reg/v/f:DI 837 [ origin ])) ns_print.c:675 -1
     (nil))
(insn 2748 2747 2749 288 (set (reg:DI 1 dx)
        (reg:DI 1331)) ns_print.c:675 -1
     (nil))
(insn 2749 2748 2750 288 (set (reg:DI 4 si)
        (reg/v:DI 829 [ msglen ])) ns_print.c:675 -1
     (nil))
(insn 2750 2749 2751 288 (set (reg:DI 5 di)
        (reg/v/f:DI 828 [ msg ])) ns_print.c:675 -1
     (nil))
(call_insn 2751 2750 2752 288 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>) [0 addname S1 A8])
            (const_int 0 [0]))) ns_print.c:675 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addname") [flags 0x3]  <function_decl 0x2b5d79924d80 addname>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 2752 2751 2753 288 (set (reg:SI 648 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:675 -1
     (nil))
(insn 2753 2752 2754 288 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 648 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:675 -1
     (nil))
(jump_insn 2754 2753 2755 288 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2768)
            (pc))) ns_print.c:675 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 2768)
(note 2755 2754 2756 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 2756 2755 2757 289 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2757 2756 2758 289 (set (pc)
        (label_ref:DI 2817)) 654 {jump}
     (nil)
 -> 2817)
(barrier 2758 2757 2759)
(code_label 2759 2758 2760 290 187 "" [1 uses])
(note 2760 2759 2761 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 2761 2760 2762 290 (set (reg/f:DI 820 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(code_label 2762 2761 2763 291 189 "" [3 uses])
(note 2763 2762 2764 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 2764 2763 2765 291 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 2765 2764 181 291 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 820 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 181 2765 2766 291 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 2766 181 2767 291 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 2767 2766 2768)
(code_label 2768 2767 2769 292 188 "" [3 uses])
(note 2769 2768 215 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 215 2769 2770 292 (set (reg:SI 214 [ D.9943 ])
        (const_int -1 [0xffffffffffffffff])) ns_print.c:654 -1
     (nil))
(jump_insn 2770 215 2771 292 (set (pc)
        (label_ref 3017)) ns_print.c:654 -1
     (nil)
 -> 3017)
(barrier 2771 2770 2776)
(code_label 2776 2771 2777 294 112 "" [1 uses])
(note 2777 2776 2778 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 2778 2777 2779 294 (parallel [
            (set (reg:DI 1332)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:681 -1
     (nil))
(insn 2779 2778 2780 294 (set (reg:SI 1 dx)
        (reg/v:SI 831 [ class ])) ns_print.c:681 -1
     (nil))
(insn 2780 2779 2781 294 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x2b5d79bf7240 *.LC46>)) ns_print.c:681 -1
     (nil))
(insn 2781 2780 2782 294 (set (reg:DI 5 di)
        (reg:DI 1332)) ns_print.c:681 -1
     (nil))
(insn 2782 2781 2783 294 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:681 -1
     (nil))
(call_insn 2783 2782 2784 294 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:681 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 2784 2783 2785 294 (set (reg/v:SI 649 [ len ])
        (reg:SI 0 ax)) ns_print.c:681 -1
     (nil))
(insn 2785 2784 2786 294 (parallel [
            (set (reg:DI 1333)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:682 -1
     (nil))
(insn 2786 2785 2787 294 (parallel [
            (set (reg:DI 1334)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:682 -1
     (nil))
(insn 2787 2786 2788 294 (set (reg:DI 1335 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 649 [ len ]))) ns_print.c:682 -1
     (nil))
(insn 2788 2787 2789 294 (parallel [
            (set (reg:DI 1336)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:682 -1
     (nil))
(insn 2789 2788 2790 294 (set (reg:DI 2 cx)
        (reg:DI 1333)) ns_print.c:682 -1
     (nil))
(insn 2790 2789 2791 294 (set (reg:DI 1 dx)
        (reg:DI 1334)) ns_print.c:682 -1
     (nil))
(insn 2791 2790 2792 294 (set (reg:DI 4 si)
        (reg:DI 1335 [ D.9951 ])) ns_print.c:682 -1
     (nil))
(insn 2792 2791 2793 294 (set (reg:DI 5 di)
        (reg:DI 1336)) ns_print.c:682 -1
     (nil))
(call_insn 2793 2792 2794 294 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:682 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2794 2793 2795 294 (set (reg:SI 651 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:682 -1
     (nil))
(insn 2795 2794 2796 294 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 651 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:682 -1
     (nil))
(jump_insn 2796 2795 2797 294 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:682 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 2797 2796 2798 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 2798 2797 2799 295 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(jump_insn 2799 2798 2800 295 (set (pc)
        (label_ref 2817)) -1
     (nil)
 -> 2817)
(barrier 2800 2799 2801)
(code_label 2801 2800 2802 296 90 "" [219 uses])
(note 2802 2801 2803 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 2803 2802 2804 296 (parallel [
            (set (reg:DI 1337)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:687 -1
     (nil))
(insn 2804 2803 2805 296 (set (reg:SI 2 cx)
        (reg/v:SI 832 [ type ])) ns_print.c:687 -1
     (nil))
(insn 2805 2804 2806 296 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x2b5d79bf72d0 *.LC47>)) ns_print.c:687 -1
     (nil))
(insn 2806 2805 2807 296 (set (reg:DI 4 si)
        (const_int 40 [0x28])) ns_print.c:687 -1
     (nil))
(insn 2807 2806 2808 296 (set (reg:DI 5 di)
        (reg:DI 1337)) ns_print.c:687 -1
     (nil))
(insn 2808 2807 2809 296 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:687 -1
     (nil))
(call_insn 2809 2808 2810 296 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b5d7941d948 snprintf>) [0 __builtin_snprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:687 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("snprintf") [flags 0x41]  <function_decl 0x2b5d7941d948 snprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 2810 2809 2811 296 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 2811 2810 178 296 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 178 2811 2812 296 (parallel [
            (set (reg/v/f:DI 209 [ comment ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -10944 [0xffffffffffffd540])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:688 -1
     (nil))
(jump_insn 2812 178 2813 296 (set (pc)
        (label_ref 2827)) ns_print.c:689 -1
     (nil)
 -> 2827)
(barrier 2813 2812 2814)
(code_label 2814 2813 2815 297 118 "" [1 uses])
(note 2815 2814 2816 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 2816 2815 2817 297 (set (reg/f:DI 735 [ D.9944 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) -1
     (nil))
(code_label 2817 2816 2818 298 117 "" [25 uses])
(note 2818 2817 2819 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 2819 2818 2820 298 (parallel [
            (set (reg:DI 1338 [ D.9954 ])
                (minus:DI (reg/f:DI 735 [ D.9944 ])
                    (reg/v/f:DI 223 [ obuf ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:691 -1
     (nil))
(insn 2820 2819 2821 298 (set (reg:SI 214 [ D.9943 ])
        (subreg:SI (reg:DI 1338 [ D.9954 ]) 0)) ns_print.c:691 -1
     (nil))
(jump_insn 2821 2820 2822 298 (set (pc)
        (label_ref 3017)) ns_print.c:691 -1
     (nil)
 -> 3017)
(barrier 2822 2821 2823)
(code_label 2823 2822 2824 299 115 "" [1 uses])
(note 2824 2823 2825 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 2825 2824 2826 299 (set (reg:DI 271 [ D.9954 ])
        (reg/v/f:DI 225 [ edata ])) -1
     (nil))
(insn 2826 2825 180 299 (parallel [
            (set (reg:DI 274 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 180 2826 3062 299 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(jump_insn 3062 180 3063 299 (set (pc)
        (label_ref 2827)) -1
     (nil)
 -> 2827)
(barrier 3063 3062 3065)
(code_label 3065 3063 3064 300 214 "" [1 uses])
(note 3064 3065 193 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 193 3064 2827 300 (set (reg/v/f:DI 209 [ comment ])
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2b5d79ba1090 *.LC15>)) ns_print.c:693 -1
     (nil))
(code_label 2827 193 2828 301 120 ("hexify") [16 uses])
(note 2828 2827 2829 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 2829 2828 2830 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 835 [ rdlen ])
            (const_int 0 [0]))) ns_print.c:698 -1
     (nil))
(jump_insn 2830 2829 2831 301 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3089)
            (pc))) ns_print.c:698 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3089)
(note 2831 2830 195 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 195 2831 3086 302 (set (reg/f:DI 215 [ D.9944 ])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x2b5d79ba1120 *.LC16>)) ns_print.c:698 -1
     (nil))
(jump_insn 3086 195 3087 302 (set (pc)
        (label_ref 2832)) -1
     (nil)
 -> 2832)
(barrier 3087 3086 3089)
(code_label 3089 3087 3088 303 219 "" [1 uses])
(note 3088 3089 196 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 196 3088 2832 303 (set (reg/f:DI 215 [ D.9944 ])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x2b5d79ba11b0 *.LC17>)) ns_print.c:698 -1
     (nil))
(code_label 2832 196 2833 304 198 "" [1 uses])
(note 2833 2832 2834 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 2834 2833 2835 304 (parallel [
            (set (reg:DI 1339)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:698 -1
     (nil))
(insn 2835 2834 2836 304 (set (reg:DI 37 r8)
        (reg/v/f:DI 209 [ comment ])) ns_print.c:698 -1
     (nil))
(insn 2836 2835 2837 304 (set (reg:DI 2 cx)
        (reg/f:DI 215 [ D.9944 ])) ns_print.c:698 -1
     (nil))
(insn 2837 2836 2838 304 (set (reg:SI 1 dx)
        (subreg:SI (reg:DI 274 [ D.9954 ]) 0)) ns_print.c:698 -1
     (nil))
(insn 2838 2837 2839 304 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x2b5d79bf7360 *.LC48>)) ns_print.c:698 -1
     (nil))
(insn 2839 2838 2840 304 (set (reg:DI 5 di)
        (reg:DI 1339)) ns_print.c:698 -1
     (nil))
(insn 2840 2839 2841 304 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:698 -1
     (nil))
(call_insn 2841 2840 2842 304 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:698 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2842 2841 2843 304 (set (reg/v:SI 670 [ len ])
        (reg:SI 0 ax)) ns_print.c:698 -1
     (nil))
(insn 2843 2842 2844 304 (parallel [
            (set (reg:DI 1340)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:700 -1
     (nil))
(insn 2844 2843 2845 304 (parallel [
            (set (reg:DI 1341)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:700 -1
     (nil))
(insn 2845 2844 2846 304 (set (reg:DI 1342 [ D.9951 ])
        (sign_extend:DI (reg/v:SI 670 [ len ]))) ns_print.c:700 -1
     (nil))
(insn 2846 2845 2847 304 (parallel [
            (set (reg:DI 1343)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:700 -1
     (nil))
(insn 2847 2846 2848 304 (set (reg:DI 2 cx)
        (reg:DI 1340)) ns_print.c:700 -1
     (nil))
(insn 2848 2847 2849 304 (set (reg:DI 1 dx)
        (reg:DI 1341)) ns_print.c:700 -1
     (nil))
(insn 2849 2848 2850 304 (set (reg:DI 4 si)
        (reg:DI 1342 [ D.9951 ])) ns_print.c:700 -1
     (nil))
(insn 2850 2849 2851 304 (set (reg:DI 5 di)
        (reg:DI 1343)) ns_print.c:700 -1
     (nil))
(call_insn 2851 2850 2852 304 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:700 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2852 2851 2853 304 (set (reg:SI 672 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:700 -1
     (nil))
(insn 2853 2852 2854 304 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 672 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:700 -1
     (nil))
(jump_insn 2854 2853 2855 304 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:700 -1
     (int_list:REG_BR_PROB 152 (nil))
 -> 245)
(note 2855 2854 2856 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 2856 2855 2857 305 (set (reg/f:DI 713 [ D.9950 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:701 -1
     (nil))
(insn 2857 2856 2858 305 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 713 [ D.9950 ]))) ns_print.c:701 -1
     (nil))
(jump_insn 2858 2857 3013 305 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 2865)
            (pc))) ns_print.c:701 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 2865)
(code_label 3013 2858 2859 306 210 "" [1 uses])
(note 2859 3013 2860 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 2860 2859 2861 306 (set (reg/f:DI 1345)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])) ns_print.c:722 -1
     (nil))
(insn 2861 2860 2862 306 (parallel [
            (set (reg:DI 1344 [ D.9954 ])
                (minus:DI (reg/f:DI 1345)
                    (reg/v/f:DI 223 [ obuf ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:722 -1
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])) [1 buf+0 S8 A64])
            (reg/v/f:DI 223 [ obuf ]))
        (nil)))
(insn 2862 2861 2863 306 (set (reg:SI 214 [ D.9943 ])
        (subreg:SI (reg:DI 1344 [ D.9954 ]) 0)) ns_print.c:722 -1
     (nil))
(jump_insn 2863 2862 2864 306 (set (pc)
        (label_ref 3017)) ns_print.c:722 -1
     (nil)
 -> 3017)
(barrier 2864 2863 2865)
(code_label 2865 2864 2866 307 199 "" [1 uses])
(note 2866 2865 2867 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 2867 2866 3010 307 (parallel [
            (set (reg:DI 818 [ D.9954 ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 3010 2867 2868 308 209 "" [1 uses])
(note 2868 3010 2869 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 2869 2868 2870 308 (parallel [
            (set (reg:DI 1346)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:703 -1
     (nil))
(insn 2870 2869 2871 308 (set (mem/c:HI (reg:DI 1346) [0 MEM[(void *)&tmp]+0 S2 A128])
        (const_int 2314 [0x90a])) ns_print.c:703 -1
     (nil))
(insn 2871 2870 2872 308 (set (mem/c:QI (plus:DI (reg:DI 1346)
                (const_int 2 [0x2])) [0 MEM[(void *)&tmp]+2 S1 A16])
        (const_int 0 [0])) ns_print.c:703 -1
     (nil))
(insn 2872 2871 2874 308 (parallel [
            (set (reg:DI 675 [ D.9954 ])
                (minus:DI (reg:DI 271 [ D.9954 ])
                    (reg/f:DI 713 [ D.9950 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:705 -1
     (nil))
(insn 2874 2872 2873 308 (set (reg:DI 1347)
        (const_int 16 [0x10])) ns_print.c:705 -1
     (nil))
(insn 2873 2874 2875 308 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 675 [ D.9954 ])
            (const_int 16 [0x10]))) ns_print.c:705 -1
     (nil))
(insn 2875 2873 2876 308 (set (reg:DI 675 [ D.9954 ])
        (if_then_else:DI (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:DI 675 [ D.9954 ])
            (reg:DI 1347))) ns_print.c:705 -1
     (nil))
(insn 2876 2875 2877 308 (set (reg/v:SI 676 [ n ])
        (subreg:SI (reg:DI 675 [ D.9954 ]) 0)) ns_print.c:705 -1
     (nil))
(insn 2877 2876 2878 308 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 676 [ n ])
            (const_int 0 [0]))) ns_print.c:706 -1
     (nil))
(jump_insn 2878 2877 2879 308 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3094)
            (pc))) ns_print.c:706 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 3094)
(note 2879 2878 197 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 197 2879 198 309 (set (reg:DI 695 [ ivtmp.91 ])
        (const_int 0 [0])) ns_print.c:706 -1
     (nil))
(insn 198 197 199 309 (parallel [
            (set (reg:DI 840)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:706 -1
     (nil))
(insn 199 198 2892 309 (parallel [
            (set (reg/v/f:DI 684 [ p ])
                (plus:DI (reg:DI 840)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:706 -1
     (nil))
(code_label 2892 199 2880 310 201 "" [1 uses])
(note 2880 2892 2881 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 2881 2880 2882 310 (set (reg/f:DI 1348)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:707 -1
     (nil))
(insn 2882 2881 2883 310 (set (reg:SI 1349 [ D.9943 ])
        (zero_extend:SI (mem:QI (plus:DI (reg/f:DI 1348)
                    (reg:DI 695 [ ivtmp.91 ])) [0 *_827+0 S1 A8]))) ns_print.c:707 -1
     (nil))
(insn 2883 2882 2884 310 (set (reg:SI 1 dx)
        (reg:SI 1349 [ D.9943 ])) ns_print.c:707 -1
     (nil))
(insn 2884 2883 2885 310 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x2b5d79bf73f0 *.LC49>)) ns_print.c:707 -1
     (nil))
(insn 2885 2884 2886 310 (set (reg:DI 5 di)
        (reg/v/f:DI 684 [ p ])) ns_print.c:707 -1
     (nil))
(insn 2886 2885 2887 310 (set (reg:QI 0 ax)
        (const_int 0 [0])) ns_print.c:707 -1
     (nil))
(call_insn 2887 2886 2888 310 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>) [0 __builtin_sprintf S1 A8])
            (const_int 0 [0]))) ns_print.c:707 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x2b5d7941daf8 sprintf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 2888 2887 2889 310 (set (reg:SI 682 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:707 -1
     (nil))
(insn 2889 2888 2890 310 (set (reg:DI 1350 [ D.9951 ])
        (sign_extend:DI (reg:SI 682 [ D.9943 ]))) ns_print.c:707 -1
     (nil))
(insn 2890 2889 2891 310 (parallel [
            (set (reg/v/f:DI 684 [ p ])
                (plus:DI (reg/v/f:DI 684 [ p ])
                    (reg:DI 1350 [ D.9951 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:707 -1
     (nil))
(insn 2891 2890 2893 310 (parallel [
            (set (reg:DI 695 [ ivtmp.91 ])
                (plus:DI (reg:DI 695 [ ivtmp.91 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2893 2891 2894 310 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 676 [ n ])
            (subreg:SI (reg:DI 695 [ ivtmp.91 ]) 0))) ns_print.c:706 -1
     (nil))
(jump_insn 2894 2893 3090 310 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2892)
            (pc))) ns_print.c:706 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2892)
(note 3090 2894 3091 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3091 3090 3092 311 (set (pc)
        (label_ref 2895)) -1
     (nil)
 -> 2895)
(barrier 3092 3091 3094)
(code_label 3094 3092 3093 312 220 "" [1 uses])
(note 3093 3094 200 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 200 3093 201 312 (parallel [
            (set (reg:DI 841)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:703 -1
     (nil))
(insn 201 200 2895 312 (parallel [
            (set (reg/v/f:DI 684 [ p ])
                (plus:DI (reg:DI 841)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:703 -1
     (nil))
(code_label 2895 201 2896 313 200 "" [1 uses])
(note 2896 2895 2897 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 2897 2896 2898 313 (parallel [
            (set (reg:DI 687 [ D.9954 ])
                (minus:DI (reg/v/f:DI 684 [ p ])
                    (reg:DI 818 [ D.9954 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:708 -1
     (nil))
(insn 2898 2897 2899 313 (parallel [
            (set (reg:DI 1351)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:708 -1
     (nil))
(insn 2899 2898 2900 313 (parallel [
            (set (reg:DI 1352)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:708 -1
     (nil))
(insn 2900 2899 2901 313 (parallel [
            (set (reg:DI 1353)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:708 -1
     (nil))
(insn 2901 2900 2902 313 (set (reg:DI 2 cx)
        (reg:DI 1351)) ns_print.c:708 -1
     (nil))
(insn 2902 2901 2903 313 (set (reg:DI 1 dx)
        (reg:DI 1352)) ns_print.c:708 -1
     (nil))
(insn 2903 2902 2904 313 (set (reg:DI 4 si)
        (reg:DI 687 [ D.9954 ])) ns_print.c:708 -1
     (nil))
(insn 2904 2903 2905 313 (set (reg:DI 5 di)
        (reg:DI 1353)) ns_print.c:708 -1
     (nil))
(call_insn 2905 2904 2906 313 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:708 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2906 2905 2907 313 (set (reg:SI 689 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:708 -1
     (nil))
(insn 2907 2906 2908 313 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 689 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:708 -1
     (nil))
(jump_insn 2908 2907 2909 313 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:708 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 245)
(note 2909 2908 2910 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 2910 2909 2911 314 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 676 [ n ])
            (const_int 15 [0xf]))) ns_print.c:709 -1
     (nil))
(jump_insn 2911 2910 2914 314 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2924)
            (pc))) ns_print.c:709 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 2924)
(note 2914 2911 2912 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2912 2914 2913 315 (set (pc)
        (label_ref 3045)) -1
     (nil)
 -> 3045)
(barrier 2913 2912 2949)
(code_label 2949 2913 2915 316 206 "" [1 uses])
(note 2915 2949 2916 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 2916 2915 2917 316 (parallel [
            (set (reg:DI 1354)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:714 -1
     (nil))
(insn 2917 2916 2918 316 (set (mem/c:HI (reg:DI 1354) [0 MEM[(void *)&tmp]+0 S2 A128])
        (const_int 8251 [0x203b])) ns_print.c:714 -1
     (nil))
(insn 2918 2917 2919 316 (set (mem/c:QI (plus:DI (reg:DI 1354)
                (const_int 2 [0x2])) [0 MEM[(void *)&tmp]+2 S1 A16])
        (const_int 0 [0])) ns_print.c:714 -1
     (nil))
(insn 2919 2918 2920 316 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 676 [ n ])
            (const_int 0 [0]))) ns_print.c:715 -1
     (nil))
(jump_insn 2920 2919 2923 316 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2953)
            (pc))) ns_print.c:715 -1
     (int_list:REG_BR_PROB 8164 (nil))
 -> 2953)
(note 2923 2920 206 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 206 2923 207 317 (parallel [
            (set (reg:DI 843)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:714 -1
     (nil))
(insn 207 206 2921 317 (parallel [
            (set (reg/v/f:DI 219 [ p ])
                (plus:DI (reg:DI 843)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:714 -1
     (nil))
(jump_insn 2921 207 2922 317 (set (pc)
        (label_ref 2991)) ns_print.c:715 -1
     (nil)
 -> 2991)
(barrier 2922 2921 2924)
(code_label 2924 2922 2925 318 202 "" [1 uses])
(note 2925 2924 2926 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 2926 2925 2927 318 (parallel [
            (set (reg:DI 1355)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:710 -1
     (nil))
(insn 2927 2926 2928 318 (parallel [
            (set (reg:DI 1356)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:710 -1
     (nil))
(insn 2928 2927 2929 318 (set (reg:DI 2 cx)
        (reg:DI 1355)) ns_print.c:710 -1
     (nil))
(insn 2929 2928 2930 318 (set (reg:DI 1 dx)
        (reg:DI 1356)) ns_print.c:710 -1
     (nil))
(insn 2930 2929 2931 318 (set (reg:DI 4 si)
        (const_int 1 [0x1])) ns_print.c:710 -1
     (nil))
(insn 2931 2930 2932 318 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x2b5d79ba1cf0 *.LC37>)) ns_print.c:710 -1
     (nil))
(call_insn 2932 2931 2933 318 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:710 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 2933 2932 2934 318 (set (reg:SI 690 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:710 -1
     (nil))
(insn 2934 2933 2935 318 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 690 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:710 -1
     (nil))
(jump_insn 2935 2934 2936 318 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:710 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 245)
(note 2936 2935 2937 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 2937 2936 2938 319 (parallel [
            (set (reg:DI 1357)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:711 -1
     (nil))
(insn 2938 2937 2939 319 (parallel [
            (set (reg:DI 1358)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:711 -1
     (nil))
(insn 2939 2938 2940 319 (parallel [
            (set (reg:DI 1359 [ D.9954 ])
                (plus:DI (reg:DI 687 [ D.9954 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:711 -1
     (nil))
(insn 2940 2939 2941 319 (set (reg:DI 37 r8)
        (reg:DI 1357)) ns_print.c:711 -1
     (nil))
(insn 2941 2940 2942 319 (set (reg:DI 2 cx)
        (reg:DI 1358)) ns_print.c:711 -1
     (nil))
(insn 2942 2941 2943 319 (set (reg:SI 1 dx)
        (const_int 0 [0])) ns_print.c:711 -1
     (nil))
(insn 2943 2942 2944 319 (set (reg:DI 4 si)
        (const_int 48 [0x30])) ns_print.c:711 -1
     (nil))
(insn 2944 2943 2945 319 (set (reg:DI 5 di)
        (reg:DI 1359 [ D.9954 ])) ns_print.c:711 -1
     (nil))
(call_insn 2945 2944 2946 319 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>) [0 addtab S1 A8])
            (const_int 0 [0]))) ns_print.c:711 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addtab") [flags 0x3]  <function_decl 0x2b5d7992d0d8 addtab>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 2946 2945 2947 319 (set (reg:SI 693 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:711 -1
     (nil))
(insn 2947 2946 2948 319 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 693 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:711 -1
     (nil))
(jump_insn 2948 2947 2952 319 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:711 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 245)
(note 2952 2948 2950 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(jump_insn 2950 2952 2951 320 (set (pc)
        (label_ref 2949)) -1
     (nil)
 -> 2949)
(barrier 2951 2950 2953)
(code_label 2953 2951 2954 321 204 "" [2 uses])
(note 2954 2953 2955 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 2955 2954 2956 321 (set (reg:DI 822 [ ivtmp.88 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) -1
     (nil))
(insn 2956 2955 2957 321 (parallel [
            (set (reg:SI 1360 [ D.9947 ])
                (plus:SI (subreg:SI (reg:DI 675 [ D.9954 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2957 2956 2958 321 (set (reg:DI 222 [ D.9949 ])
        (zero_extend:DI (reg:SI 1360 [ D.9947 ]))) -1
     (nil))
(insn 2958 2957 2959 321 (parallel [
            (set (reg:DI 1361)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2959 2958 2960 321 (parallel [
            (set (reg:DI 1362 [ D.9949 ])
                (plus:DI (reg:DI 222 [ D.9949 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2960 2959 202 321 (parallel [
            (set (reg/f:DI 217 [ D.9946 ])
                (plus:DI (reg:DI 1361)
                    (reg:DI 1362 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 202 2960 203 321 (parallel [
            (set (reg:DI 842)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:703 -1
     (nil))
(insn 203 202 2983 321 (parallel [
            (set (reg/v/f:DI 694 [ p ])
                (plus:DI (reg:DI 842)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:703 -1
     (nil))
(code_label 2983 203 2961 322 208 "" [1 uses])
(note 2961 2983 2962 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 2962 2961 2963 322 (parallel [
            (set (reg/v/f:DI 694 [ p ])
                (plus:DI (reg/v/f:DI 694 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:716 -1
     (nil))
(insn 2963 2962 2964 322 (set (reg:QI 697 [ D.9956 ])
        (mem:QI (reg:DI 822 [ ivtmp.88 ]) [0 MEM[base: _51, offset: 0B]+0 S1 A8])) ns_print.c:716 -1
     (nil))
(insn 2964 2963 2965 322 (set (reg:SI 1363 [ D.9943 ])
        (zero_extend:SI (reg:QI 697 [ D.9956 ]))) ns_print.c:716 -1
     (nil))
(insn 2965 2964 2966 322 (parallel [
            (set (reg:SI 1364 [ D.9943 ])
                (and:SI (reg:SI 1363 [ D.9943 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:716 -1
     (nil))
(insn 2966 2965 2967 322 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1364 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:716 -1
     (nil))
(jump_insn 2967 2966 2968 322 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3098)
            (pc))) ns_print.c:716 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3098)
(note 2968 2967 2969 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 2969 2968 2970 323 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b5d79911360 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) ns_print.c:716 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b5d79911360 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 2970 2969 2971 323 (set (reg/f:DI 700 [ D.9958 ])
        (reg:DI 0 ax)) ns_print.c:716 -1
     (nil))
(insn 2971 2970 2972 323 (set (reg:DI 1365 [ D.9951 ])
        (zero_extend:DI (reg:QI 697 [ D.9956 ]))) ns_print.c:716 -1
     (nil))
(insn 2972 2971 2973 323 (set (reg/f:DI 1366)
        (mem/f:DI (reg/f:DI 700 [ D.9958 ]) [1 *_855+0 S8 A64])) ns_print.c:716 -1
     (nil))
(insn 2973 2972 2974 323 (set (reg:HI 1368)
        (mem:HI (plus:DI (mult:DI (reg:DI 1365 [ D.9951 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 1366)) [4 *_859+0 S2 A16])) ns_print.c:716 -1
     (nil))
(insn 2974 2973 2975 323 (parallel [
            (set (reg:HI 1367 [ D.9952 ])
                (and:HI (reg:HI 1368)
                    (const_int 16384 [0x4000])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:716 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 1365 [ D.9951 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 1366)) [4 *_859+0 S2 A16])
            (const_int 16384 [0x4000]))
        (nil)))
(insn 2975 2974 2976 323 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1367 [ D.9952 ])
            (const_int 0 [0]))) ns_print.c:716 -1
     (nil))
(jump_insn 2976 2975 2977 323 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3102)
            (pc))) ns_print.c:716 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 3102)
(note 2977 2976 2978 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 2978 2977 3095 324 (set (reg:QI 216 [ D.9945 ])
        (reg:QI 697 [ D.9956 ])) ns_print.c:716 -1
     (nil))
(jump_insn 3095 2978 3096 324 (set (pc)
        (label_ref 2979)) ns_print.c:716 -1
     (nil)
 -> 2979)
(barrier 3096 3095 3098)
(code_label 3098 3096 3097 325 221 "" [1 uses])
(note 3097 3098 205 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 205 3097 3099 325 (set (reg:QI 216 [ D.9945 ])
        (const_int 46 [0x2e])) ns_print.c:716 -1
     (nil))
(jump_insn 3099 205 3100 325 (set (pc)
        (label_ref 2979)) -1
     (nil)
 -> 2979)
(barrier 3100 3099 3102)
(code_label 3102 3100 3101 326 222 "" [1 uses])
(note 3101 3102 204 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 204 3101 2979 326 (set (reg:QI 216 [ D.9945 ])
        (const_int 46 [0x2e])) ns_print.c:716 -1
     (nil))
(code_label 2979 204 2980 327 207 "" [2 uses])
(note 2980 2979 2981 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 2981 2980 2982 327 (set (mem:QI (plus:DI (reg/v/f:DI 694 [ p ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: p_848, offset: -1B]+0 S1 A8])
        (reg:QI 216 [ D.9945 ])) ns_print.c:716 -1
     (nil))
(insn 2982 2981 2984 327 (parallel [
            (set (reg:DI 822 [ ivtmp.88 ])
                (plus:DI (reg:DI 822 [ ivtmp.88 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2984 2982 2985 327 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 217 [ D.9946 ])
            (reg/v/f:DI 694 [ p ]))) ns_print.c:715 -1
     (nil))
(jump_insn 2985 2984 2986 327 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2983)
            (pc))) ns_print.c:715 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 2983)
(note 2986 2985 2987 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 2987 2986 2988 328 (parallel [
            (set (reg:DI 1369)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2988 2987 2989 328 (parallel [
            (set (reg:DI 1370)
                (plus:DI (reg:DI 1369)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2989 2988 2990 328 (parallel [
            (set (reg:DI 1371 [ D.9949 ])
                (plus:DI (reg:DI 222 [ D.9949 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 2990 2989 2991 328 (parallel [
            (set (reg/v/f:DI 219 [ p ])
                (plus:DI (reg:DI 1370)
                    (reg:DI 1371 [ D.9949 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 2991 2990 2992 329 205 "" [1 uses])
(note 2992 2991 2993 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 2993 2992 2994 329 (parallel [
            (set (reg:DI 1372)
                (plus:DI (reg/f:DI 81 virtual-incoming-args)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:719 -1
     (nil))
(insn 2994 2993 2995 329 (parallel [
            (set (reg:DI 1373)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11136 [0xffffffffffffd480])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:719 -1
     (nil))
(insn 2995 2994 2996 329 (parallel [
            (set (reg:DI 1374 [ D.9954 ])
                (minus:DI (reg/v/f:DI 219 [ p ])
                    (reg:DI 818 [ D.9954 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:719 -1
     (nil))
(insn 2996 2995 2997 329 (parallel [
            (set (reg:DI 1375)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:719 -1
     (nil))
(insn 2997 2996 2998 329 (set (reg:DI 2 cx)
        (reg:DI 1372)) ns_print.c:719 -1
     (nil))
(insn 2998 2997 2999 329 (set (reg:DI 1 dx)
        (reg:DI 1373)) ns_print.c:719 -1
     (nil))
(insn 2999 2998 3000 329 (set (reg:DI 4 si)
        (reg:DI 1374 [ D.9954 ])) ns_print.c:719 -1
     (nil))
(insn 3000 2999 3001 329 (set (reg:DI 5 di)
        (reg:DI 1375)) ns_print.c:719 -1
     (nil))
(call_insn 3001 3000 3002 329 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>) [0 addstr S1 A8])
            (const_int 0 [0]))) ns_print.c:719 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("addstr") [flags 0x3]  <function_decl 0x2b5d7992d000 addstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 3002 3001 3003 329 (set (reg:SI 710 [ D.9943 ])
        (reg:SI 0 ax)) ns_print.c:719 -1
     (nil))
(insn 3003 3002 3004 329 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 710 [ D.9943 ])
            (const_int 0 [0]))) ns_print.c:719 -1
     (nil))
(jump_insn 3004 3003 3005 329 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) ns_print.c:719 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 245)
(note 3005 3004 3006 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 3006 3005 3007 330 (set (reg:DI 1376 [ D.9949 ])
        (sign_extend:DI (reg/v:SI 676 [ n ]))) ns_print.c:720 -1
     (nil))
(insn 3007 3006 3008 330 (set (reg/f:DI 1377)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])) ns_print.c:720 -1
     (nil))
(insn 3008 3007 3009 330 (parallel [
            (set (reg/f:DI 713 [ D.9950 ])
                (plus:DI (reg:DI 1376 [ D.9949 ])
                    (reg/f:DI 1377)))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:720 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
            (reg:DI 1376 [ D.9949 ]))
        (nil)))
(insn 3009 3008 3011 330 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -11128 [0xffffffffffffd488])) [1 rdata+0 S8 A64])
        (reg/f:DI 713 [ D.9950 ])) ns_print.c:720 -1
     (nil))
(insn 3011 3009 3012 330 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 225 [ edata ])
            (reg/f:DI 713 [ D.9950 ]))) ns_print.c:701 -1
     (nil))
(jump_insn 3012 3011 3016 330 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 3010)
            (pc))) ns_print.c:701 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 3010)
(note 3016 3012 3014 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3014 3016 3015 331 (set (pc)
        (label_ref 3013)) -1
     (nil)
 -> 3013)
(barrier 3015 3014 3017)
(code_label 3017 3015 3018 332 81 "" [11 uses])
(note 3018 3017 3019 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 3019 3018 3020 332 (set (reg:SI 827 [ <retval> ])
        (reg:SI 214 [ D.9943 ])) -1
     (nil))
(jump_insn 3020 3019 3021 332 (set (pc)
        (label_ref 3052)) -1
     (nil)
 -> 3052)
(barrier 3021 3020 3022)
(code_label 3022 3021 3023 333 157 "" [1 uses])
(note 3023 3022 3025 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 3025 3023 3026 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 456 [ len ])
            (const_int 0 [0]))) ns_print.c:468 -1
     (nil))
(jump_insn 3026 3025 3029 333 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3106)
            (pc))) ns_print.c:468 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 3106)
(note 3029 3026 3027 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3027 3029 3028 334 (set (pc)
        (label_ref 1851)) ns_print.c:468 -1
     (nil)
 -> 1851)
(barrier 3028 3027 3030)
(code_label 3030 3028 3031 335 169 "" [1 uses])
(note 3031 3030 3032 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 3032 3031 3033 335 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 516 [ len ])
            (const_int 0 [0]))) ns_print.c:531 -1
     (nil))
(jump_insn 3033 3032 3036 335 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3108)
            (pc))) ns_print.c:531 612 {*jcc_1}
     (int_list:REG_BR_PROB 9700 (nil))
 -> 3108)
(note 3036 3033 3034 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3034 3036 3035 336 (set (pc)
        (label_ref 2131)) ns_print.c:531 -1
     (nil)
 -> 2131)
(barrier 3035 3034 3037)
(code_label 3037 3035 3038 337 184 "" [1 uses])
(note 3038 3037 3040 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 3040 3038 3041 337 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 568 [ len ])
            (const_int 0 [0]))) ns_print.c:588 -1
     (nil))
(jump_insn 3041 3040 3044 337 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3112)
            (pc))) ns_print.c:588 612 {*jcc_1}
     (int_list:REG_BR_PROB 9577 (nil))
 -> 3112)
(note 3044 3041 3042 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(jump_insn 3042 3044 3043 338 (set (pc)
        (label_ref 2381)) ns_print.c:588 -1
     (nil)
 -> 2381)
(barrier 3043 3042 3045)
(code_label 3045 3043 3046 339 203 "" [1 uses])
(note 3046 3045 3047 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 3047 3046 3048 339 (parallel [
            (set (reg:DI 1379)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -11056 [0xffffffffffffd4d0])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:714 -1
     (nil))
(insn 3048 3047 3049 339 (set (mem/c:HI (reg:DI 1379) [0 MEM[(void *)&tmp]+0 S2 A128])
        (const_int 8251 [0x203b])) ns_print.c:714 -1
     (nil))
(insn 3049 3048 3050 339 (set (mem/c:QI (plus:DI (reg:DI 1379)
                (const_int 2 [0x2])) [0 MEM[(void *)&tmp]+2 S1 A16])
        (const_int 0 [0])) ns_print.c:714 -1
     (nil))
(jump_insn 3050 3049 3051 339 (set (pc)
        (label_ref 2953)) ns_print.c:714 -1
     (nil)
 -> 2953)
(barrier 3051 3050 3052)
(code_label 3052 3051 3061 340 77 "" [1 uses])
(note 3061 3052 3053 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 3053 3061 3054 340 (set (reg/i:SI 0 ax)
        (reg:SI 827 [ <retval> ])) ns_print.c:724 -1
     (nil))
(insn 3054 3053 3055 340 (set (reg/f:DI 1380)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x2b5d79b72f30 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [8  S8 A8])) ns_print.c:724 -1
     (nil))
(insn 3055 3054 3056 340 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.9961+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ns_print.c:724 -1
     (nil))
(jump_insn 3056 3055 3132 340 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3059)
            (pc))) ns_print.c:724 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 3059)
(note 3132 3056 3057 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(call_insn 3057 3132 3058 341 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b5d79a4bd80 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ns_print.c:724 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x2b5d79a4bd80 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 3058 3057 3059)
(code_label 3059 3058 3133 342 213 "" [1 uses])
(note 3133 3059 3060 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 3060 3133 0 342 (use (reg/i:SI 0 ax)) ns_print.c:724 -1
     (nil))

;; Function ns_sprintrr (*__GI_ns_sprintrr, funcdef_no=47, decl_uid=3481, cgraph_uid=47, symbol_order=49)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 42.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 106 [ handle ])
        (reg:DI 5 di [ handle ])) ns_print.c:72 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 107 [ rr ])
        (reg:DI 4 si [ rr ])) ns_print.c:72 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 108 [ name_ctx ])
        (reg:DI 1 dx [ name_ctx ])) ns_print.c:72 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 109 [ origin ])
        (reg:DI 2 cx [ origin ])) ns_print.c:72 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 110 [ buf ])
        (reg:DI 37 r8 [ buf ])) ns_print.c:72 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:DI 111 [ buflen ])
        (reg:DI 38 r9 [ buflen ])) ns_print.c:72 -1
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:DI 89 [ D.10006 ])
        (zero_extend:DI (mem:HI (plus:DI (reg/v/f:DI 107 [ rr ])
                    (const_int 1036 [0x40c])) [4 rr_3(D)->rdlength+0 S2 A32]))) ns_print.c:75 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 90 [ D.10007 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 107 [ rr ])
                (const_int 1040 [0x410])) [1 rr_3(D)->rdata+0 S8 A64])) ns_print.c:75 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 92 [ D.10006 ])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 107 [ rr ])
                    (const_int 1032 [0x408])) [3 rr_3(D)->ttl+0 S4 A64]))) ns_print.c:75 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 94 [ D.10009 ])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 107 [ rr ])
                    (const_int 1026 [0x402])) [4 rr_3(D)->type+0 S2 A16]))) ns_print.c:75 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 96 [ D.10010 ])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 107 [ rr ])
                    (const_int 1028 [0x404])) [4 rr_3(D)->rr_class+0 S2 A32]))) ns_print.c:75 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (reg/v/f:DI 107 [ rr ]) [0 rr_3(D)->name+0 S1 A64])
            (const_int 0 [0]))) ns_print.c:75 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) ns_print.c:75 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 51)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 48 4 (set (reg/f:DI 87 [ D.10004 ])
        (reg/v/f:DI 107 [ rr ])) ns_print.c:75 -1
     (nil))
(jump_insn 48 20 49 4 (set (pc)
        (label_ref 21)) -1
     (nil)
 -> 21)
(barrier 49 48 51)
(code_label 51 49 50 5 332 "" [1 uses])
(note 50 51 9 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 9 50 21 5 (set (reg/f:DI 87 [ D.10004 ])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x2b5d79ba12d0 *.LC19>)) ns_print.c:75 -1
     (nil))
(code_label 21 9 22 6 331 "" [1 uses])
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg/f:DI 100 [ D.10007 ])
        (mem/f:DI (reg/v/f:DI 106 [ handle ]) [1 handle_15(D)->_msg+0 S8 A64])) ns_print.c:75 -1
     (nil))
(insn 24 23 25 6 (set (reg/f:DI 113)
        (mem/f:DI (plus:DI (reg/v/f:DI 106 [ handle ])
                (const_int 8 [0x8])) [1 handle_15(D)->_eom+0 S8 A64])) ns_print.c:75 -1
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:DI 112 [ D.10012 ])
                (minus:DI (reg/f:DI 113)
                    (reg/f:DI 100 [ D.10007 ])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:75 -1
     (expr_list:REG_EQUAL (minus:DI (mem/f:DI (plus:DI (reg/v/f:DI 106 [ handle ])
                    (const_int 8 [0x8])) [1 handle_15(D)->_eom+0 S8 A64])
            (reg/f:DI 100 [ D.10007 ]))
        (nil)))
(insn 26 25 27 6 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v:DI 111 [ buflen ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 27 26 28 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v/f:DI 110 [ buf ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 28 27 29 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v/f:DI 109 [ origin ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 29 28 30 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/v/f:DI 108 [ name_ctx ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 30 29 31 6 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg:DI 89 [ D.10006 ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 31 30 32 6 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A64])
        (reg/f:DI 90 [ D.10007 ])) ns_print.c:75 -1
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 32 31 33 6 (set (reg:DI 38 r9)
        (reg:DI 92 [ D.10006 ])) ns_print.c:75 -1
     (nil))
(insn 33 32 34 6 (set (reg:SI 37 r8)
        (reg:SI 94 [ D.10009 ])) ns_print.c:75 -1
     (nil))
(insn 34 33 35 6 (set (reg:SI 2 cx)
        (reg:SI 96 [ D.10010 ])) ns_print.c:75 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.10004 ])) ns_print.c:75 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 4 si)
        (reg:DI 112 [ D.10012 ])) ns_print.c:75 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.10007 ])) ns_print.c:75 -1
     (nil))
(call_insn 38 37 39 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_sprintrrf") [flags 0x3]  <function_decl 0x2b5d795d1360 ns_sprintrrf>) [0 ns_sprintrrf S1 A8])
            (const_int 48 [0x30]))) ns_print.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_sprintrrf") [flags 0x3]  <function_decl 0x2b5d795d1360 ns_sprintrrf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 39 38 40 6 (set (reg/v:SI 104 [ n ])
        (reg:SI 0 ax)) ns_print.c:75 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 105 [ <retval> ])
        (reg/v:SI 104 [ n ])) ns_print.c:79 -1
     (nil))
(insn 41 40 45 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) ns_print.c:79 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 45 41 46 6 (set (reg/i:SI 0 ax)
        (reg:SI 105 [ <retval> ])) ns_print.c:80 -1
     (nil))
(insn 46 45 0 6 (use (reg/i:SI 0 ax)) ns_print.c:80 -1
     (nil))
