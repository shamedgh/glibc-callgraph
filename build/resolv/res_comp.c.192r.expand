
;; Function __dn_expand (*__GI___dn_expand, funcdef_no=27, decl_uid=5221, cgraph_uid=27, symbol_order=29)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 28.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 91 [ msg ])
        (reg:DI 5 di [ msg ])) res_comp.c:87 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ eom ])
        (reg:DI 4 si [ eom ])) res_comp.c:87 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 93 [ src ])
        (reg:DI 1 dx [ src ])) res_comp.c:87 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 94 [ dst ])
        (reg:DI 2 cx [ dst ])) res_comp.c:87 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 95 [ dstsiz ])
        (reg:SI 37 r8 [ dstsiz ])) res_comp.c:87 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 96 [ D.6553 ])
        (sign_extend:DI (reg/v:SI 95 [ dstsiz ]))) res_comp.c:88 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 37 r8)
        (reg:DI 96 [ D.6553 ])) res_comp.c:88 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 94 [ dst ])) res_comp.c:88 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 93 [ src ])) res_comp.c:88 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ eom ])) res_comp.c:88 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ msg ])) res_comp.c:88 -1
     (nil))
(call_insn 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_uncompress") [flags 0x43]  <function_decl 0x2b8274843af8 ns_name_uncompress>) [0 ns_name_uncompress S1 A8])
            (const_int 0 [0]))) res_comp.c:88 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_uncompress") [flags 0x43]  <function_decl 0x2b8274843af8 ns_name_uncompress>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 17 16 18 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 0 ax)) res_comp.c:88 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 88 [ n ])
            (const_int 0 [0]))) res_comp.c:90 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) res_comp.c:90 -1
     (int_list:REG_BR_PROB 1912 (nil))
 -> 25)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 94 [ dst ]) [0 *dst_8(D)+0 S1 A8])
            (const_int 46 [0x2e]))) res_comp.c:90 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) res_comp.c:90 -1
     (int_list:REG_BR_PROB 6218 (nil))
 -> 25)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem:QI (reg/v/f:DI 94 [ dst ]) [0 *dst_8(D)+0 S1 A8])
        (const_int 0 [0])) res_comp.c:91 -1
     (nil))
(code_label 25 24 26 6 2 "" [2 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 31 6 (set (reg:SI 90 [ <retval> ])
        (reg/v:SI 88 [ n ])) res_comp.c:92 -1
     (nil))
(insn 31 27 32 6 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) res_comp.c:93 -1
     (nil))
(insn 32 31 0 6 (use (reg/i:SI 0 ax)) res_comp.c:93 -1
     (nil))

;; Function __dn_comp (*__GI___dn_comp, funcdef_no=28, decl_uid=5215, cgraph_uid=29, symbol_order=31)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 90 [ src ])
        (reg:DI 5 di [ src ])) res_comp.c:104 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ dst ])
        (reg:DI 4 si [ dst ])) res_comp.c:104 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 92 [ dstsiz ])
        (reg:SI 1 dx [ dstsiz ])) res_comp.c:104 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ dnptrs ])
        (reg:DI 2 cx [ dnptrs ])) res_comp.c:104 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 94 [ lastdnptr ])
        (reg:DI 37 r8 [ lastdnptr ])) res_comp.c:104 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 95 [ D.6557 ])
        (sign_extend:DI (reg/v:SI 92 [ dstsiz ]))) res_comp.c:105 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 37 r8)
        (reg/v/f:DI 94 [ lastdnptr ])) res_comp.c:105 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 93 [ dnptrs ])) res_comp.c:105 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (reg:DI 95 [ D.6557 ])) res_comp.c:105 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ dst ])) res_comp.c:105 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ src ])) res_comp.c:105 -1
     (nil))
(call_insn/j 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_compress") [flags 0x43]  <function_decl 0x2b8274843bd0 ns_name_compress>) [0 ns_name_compress S1 A8])
            (const_int 0 [0]))) res_comp.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_compress") [flags 0x43]  <function_decl 0x2b8274843bd0 ns_name_compress>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(barrier 17 16 0)

;; Function __dn_skipname (*__GI___dn_skipname, funcdef_no=29, decl_uid=5170, cgraph_uid=31, symbol_order=33)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 22.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ptr+0 S8 A64])
        (reg:DI 5 di [ ptr ])) res_comp.c:115 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ eom ])
        (reg:DI 4 si [ eom ])) res_comp.c:115 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/v/f:DI 88 [ saveptr ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ptr+0 S8 A64])) res_comp.c:116 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:118 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ eom ])) res_comp.c:118 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 95)) res_comp.c:118 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_name_skip") [flags 0x43]  <function_decl 0x2b8274843ca8 ns_name_skip>) [0 ns_name_skip S1 A8])
            (const_int 0 [0]))) res_comp.c:118 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_name_skip") [flags 0x43]  <function_decl 0x2b8274843ca8 ns_name_skip>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:SI 87 [ D.6561 ])
        (reg:SI 0 ax)) res_comp.c:118 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.6561 ])
            (const_int -1 [0xffffffffffffffff]))) res_comp.c:118 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) res_comp.c:118 -1
     (int_list:REG_BR_PROB 159 (nil))
 -> 19)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 ptr+0 S8 A64])) res_comp.c:120 -1
     (nil))
(insn 17 16 18 4 (parallel [
            (set (reg:DI 96 [ D.6563 ])
                (minus:DI (reg/f:DI 97)
                    (reg/v/f:DI 88 [ saveptr ])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:120 -1
     (expr_list:REG_EQUAL (minus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 ptr+0 S8 A64])
            (reg/v/f:DI 88 [ saveptr ]))
        (nil)))
(insn 18 17 19 4 (set (reg:SI 87 [ D.6561 ])
        (subreg:SI (reg:DI 96 [ D.6563 ]) 0)) res_comp.c:120 -1
     (nil))
(code_label 19 18 20 5 8 "" [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 25 5 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.6561 ])) -1
     (nil))
(insn 25 21 26 5 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) res_comp.c:121 -1
     (nil))
(insn 26 25 0 5 (use (reg/i:SI 0 ax)) res_comp.c:121 -1
     (nil))

;; Function __res_hnok (*__GI___res_hnok, funcdef_no=30, decl_uid=5134, cgraph_uid=33, symbol_order=35)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 2->15 redirected to 21
Edge 4->14 redirected to 23
Edge 6->14 redirected to 24
Edge 7->15 redirected to 25
Edge 9->14 redirected to 26
Edge 10->15 redirected to 27
Edge 11->14 redirected to 28
Edge 12->15 redirected to 29
Edge 13->15 redirected to 30
Purged non-fallthru edges from bb 32


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 10->12 redirected to 13
Forwarding edge 11->12 to 13 failed.
Deleted label in block 12.
Removing jump 120.
Merging block 32 into block 31...
Merged blocks 31 and 32.
Merged 31 and 32 without moving.


try_optimize_cfg iteration 2

Forwarding edge 11->12 to 13 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 40 NOTE_INSN_DELETED)
(note 40 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 40 25 2 (set (reg/v/f:DI 137 [ dn ])
        (reg:DI 5 di [ dn ])) res_comp.c:149 -1
     (nil))
(note 25 24 42 2 NOTE_INSN_FUNCTION_BEG)
(insn 42 25 43 2 (parallel [
            (set (reg/v/f:DI 114 [ dn ])
                (plus:DI (reg/v/f:DI 137 [ dn ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:150 -1
     (nil))
(insn 43 42 44 2 (set (reg/v:SI 116 [ pch ])
        (sign_extend:SI (mem:QI (reg/v/f:DI 137 [ dn ]) [0 *dn_5(D)+0 S1 A8]))) res_comp.c:150 -1
     (nil))
(insn 44 43 45 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ pch ])
            (const_int 0 [0]))) res_comp.c:152 -1
     (nil))
(jump_insn 45 44 46 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 130)
            (pc))) res_comp.c:152 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 130)
(note 46 45 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 46 114 4 (set (reg/v:SI 117 [ pch ])
        (const_int 46 [0x2e])) res_comp.c:152 -1
     (nil))
(code_label 114 26 47 5 19 "" [1 uses])
(note 47 114 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (parallel [
            (set (reg/v/f:DI 114 [ dn ])
                (plus:DI (reg/v/f:DI 114 [ dn ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:153 -1
     (nil))
(insn 49 48 50 5 (set (reg/v:SI 119 [ pch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 114 [ dn ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: dn_12, offset: -1B]+0 S1 A8]))) res_comp.c:153 -1
     (nil))
(insn 50 49 51 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 116 [ pch ])
            (const_int 46 [0x2e]))) res_comp.c:155 -1
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 135)
            (pc))) res_comp.c:155 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 135)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 117 [ pch ])
            (const_int 46 [0x2e]))) res_comp.c:157 -1
     (nil))
(jump_insn 54 53 55 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) res_comp.c:157 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 68)
(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 7 (set (reg:SI 126 [ D.6572 ])
        (reg/v:SI 116 [ pch ])) res_comp.c:158 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:SI 138 [ D.6572 ])
                (and:SI (reg:SI 126 [ D.6572 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:158 -1
     (nil))
(insn 58 57 59 7 (parallel [
            (set (reg:SI 139 [ D.6572 ])
                (plus:SI (reg:SI 138 [ D.6572 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:158 -1
     (nil))
(insn 59 58 60 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 139 [ D.6572 ])
            (const_int 25 [0x19]))) res_comp.c:158 -1
     (nil))
(jump_insn 60 59 61 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) res_comp.c:158 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 139)
(note 61 60 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 8 (parallel [
            (set (reg:SI 140 [ D.6572 ])
                (plus:SI (reg:SI 126 [ D.6572 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:158 -1
     (nil))
(insn 63 62 64 8 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 140 [ D.6572 ])
            (const_int 9 [0x9]))) res_comp.c:158 -1
     (nil))
(jump_insn 64 63 67 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 143)
            (pc))) res_comp.c:158 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 143)
(note 67 64 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 67 65 9 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 65 29 66 9 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 66 65 68)
(code_label 68 66 69 10 16 "" [1 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ pch ])
            (const_int 46 [0x2e]))) res_comp.c:160 -1
     (nil))
(insn 71 70 72 10 (set (reg:QI 142 [ D.6575 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) res_comp.c:160 -1
     (nil))
(insn 72 71 73 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.6575 ])
            (const_int 0 [0]))) res_comp.c:160 -1
     (nil))
(jump_insn 73 72 164 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 166)
            (pc))) res_comp.c:160 612 {*jcc_1}
     (int_list:REG_BR_PROB 2500 (nil))
 -> 166)
(note 164 73 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 164 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ pch ])
            (const_int 0 [0]))) res_comp.c:160 -1
     (nil))
(insn 75 74 76 11 (set (reg:QI 144 [ D.6575 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) res_comp.c:160 -1
     (nil))
(insn 76 75 77 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 144 [ D.6575 ])
            (const_int 0 [0]))) res_comp.c:160 -1
     (nil))
(jump_insn 77 76 165 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) res_comp.c:160 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 92)
(note 165 77 166 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 166 165 79 13 29 "" [1 uses])
(note 79 166 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 13 (set (reg:SI 123 [ D.6572 ])
        (reg/v:SI 116 [ pch ])) res_comp.c:161 -1
     (nil))
(insn 81 80 82 13 (parallel [
            (set (reg:SI 145 [ D.6572 ])
                (and:SI (reg:SI 123 [ D.6572 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:161 -1
     (nil))
(insn 82 81 83 13 (parallel [
            (set (reg:SI 146 [ D.6572 ])
                (plus:SI (reg:SI 145 [ D.6572 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:161 -1
     (nil))
(insn 83 82 84 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 146 [ D.6572 ])
            (const_int 25 [0x19]))) res_comp.c:161 -1
     (nil))
(jump_insn 84 83 85 13 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 147)
            (pc))) res_comp.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 147)
(note 85 84 86 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 14 (parallel [
            (set (reg:SI 147 [ D.6572 ])
                (plus:SI (reg:SI 123 [ D.6572 ])
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:161 -1
     (nil))
(insn 87 86 88 14 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 147 [ D.6572 ])
            (const_int 9 [0x9]))) res_comp.c:161 -1
     (nil))
(jump_insn 88 87 91 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) res_comp.c:161 612 {*jcc_1}
     (int_list:REG_BR_PROB 225 (nil))
 -> 151)
(note 91 88 28 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 28 91 89 15 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 89 28 90 15 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 90 89 92)
(code_label 92 90 93 16 17 "" [1 uses])
(note 93 92 94 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 16 (set (reg:SI 109 [ D.6572 ])
        (reg/v:SI 116 [ pch ])) res_comp.c:164 -1
     (nil))
(insn 95 94 96 16 (parallel [
            (set (reg:SI 148 [ D.6572 ])
                (and:SI (reg:SI 109 [ D.6572 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 96 95 97 16 (parallel [
            (set (reg:SI 149 [ D.6572 ])
                (plus:SI (reg:SI 148 [ D.6572 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 97 96 98 16 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 149 [ D.6572 ])
            (const_int 25 [0x19]))) res_comp.c:164 -1
     (nil))
(jump_insn 98 97 99 16 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 155)
            (pc))) res_comp.c:164 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 155)
(note 99 98 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 17 (parallel [
            (set (reg:SI 113 [ D.6572 ])
                (plus:SI (reg:SI 109 [ D.6572 ])
                    (const_int -45 [0xffffffffffffffd3])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 101 100 102 17 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 113 [ D.6572 ])
            (const_int 50 [0x32]))) res_comp.c:164 -1
     (nil))
(jump_insn 102 101 103 17 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 159)
            (pc))) res_comp.c:164 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 159)
(note 103 102 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 18 (set (reg:DI 151)
        (const_int 1125899906850809 [0x4000000001ff9])) res_comp.c:164 -1
     (nil))
(insn 105 104 106 18 (parallel [
            (set (reg:DI 150 [ D.6576 ])
                (lshiftrt:DI (reg:DI 151)
                    (subreg:QI (reg:SI 113 [ D.6572 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 106 105 107 18 (parallel [
            (set (reg:DI 152 [ D.6576 ])
                (and:DI (reg:DI 150 [ D.6576 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 107 106 108 18 (parallel [
            (set (reg:DI 153 [ D.6576 ])
                (xor:DI (reg:DI 152 [ D.6576 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 108 107 109 18 (parallel [
            (set (reg:QI 154 [ D.6575 ])
                (and:QI (subreg:QI (reg:DI 153 [ D.6576 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:164 -1
     (nil))
(insn 109 108 110 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 154 [ D.6575 ])
            (const_int 0 [0]))) res_comp.c:164 -1
     (nil))
(jump_insn 110 109 131 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 163)
            (pc))) res_comp.c:164 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 163)
(note 131 110 32 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 32 131 132 19 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 132 32 133 19 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 133 132 135)
(code_label 135 133 134 20 21 "" [1 uses])
(note 134 135 27 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 27 134 136 20 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 136 27 137 20 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 137 136 139)
(code_label 139 137 138 21 22 "" [1 uses])
(note 138 139 31 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 31 138 144 21 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 144 31 145 21 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 145 144 147)
(code_label 147 145 146 22 24 "" [1 uses])
(note 146 147 30 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 30 146 152 22 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(jump_insn 152 30 153 22 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 153 152 155)
(code_label 155 153 154 23 26 "" [1 uses])
(note 154 155 33 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 33 154 111 23 (set (reg/v:SI 117 [ pch ])
        (reg/v:SI 116 [ pch ])) -1
     (nil))
(code_label 111 33 112 24 15 "" [6 uses])
(note 112 111 113 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 115 24 (set (reg/v:SI 116 [ pch ])
        (reg/v:SI 119 [ pch ])) -1
     (nil))
(insn 115 113 116 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 119 [ pch ])
            (const_int 0 [0]))) res_comp.c:152 -1
     (nil))
(jump_insn 116 115 126 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) res_comp.c:152 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 114)
(note 126 116 35 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 35 126 127 25 (set (reg:SI 112 [ D.6573 ])
        (const_int 1 [0x1])) res_comp.c:169 -1
     (nil))
(jump_insn 127 35 128 25 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 128 127 130)
(code_label 130 128 129 26 20 "" [1 uses])
(note 129 130 36 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 36 129 140 26 (set (reg:SI 112 [ D.6573 ])
        (const_int 1 [0x1])) res_comp.c:169 -1
     (nil))
(jump_insn 140 36 141 26 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 141 140 143)
(code_label 143 141 142 27 23 "" [1 uses])
(note 142 143 37 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 37 142 148 27 (set (reg:SI 112 [ D.6573 ])
        (const_int 0 [0])) res_comp.c:159 -1
     (nil))
(jump_insn 148 37 149 27 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 149 148 151)
(code_label 151 149 150 28 25 "" [1 uses])
(note 150 151 34 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 34 150 156 28 (set (reg:SI 112 [ D.6573 ])
        (const_int 0 [0])) res_comp.c:159 -1
     (nil))
(jump_insn 156 34 157 28 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 157 156 159)
(code_label 159 157 158 29 27 "" [1 uses])
(note 158 159 39 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 39 158 160 29 (set (reg:SI 112 [ D.6573 ])
        (const_int 0 [0])) res_comp.c:159 -1
     (nil))
(jump_insn 160 39 161 29 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
(barrier 161 160 163)
(code_label 163 161 162 30 28 "" [1 uses])
(note 162 163 38 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 38 162 117 30 (set (reg:SI 112 [ D.6573 ])
        (const_int 0 [0])) res_comp.c:159 -1
     (nil))
(code_label 117 38 118 31 14 "" [5 uses])
(note 118 117 119 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 123 31 (set (reg:SI 136 [ <retval> ])
        (reg:SI 112 [ D.6573 ])) -1
     (nil))
(insn 123 119 124 31 (set (reg/i:SI 0 ax)
        (reg:SI 136 [ <retval> ])) res_comp.c:170 -1
     (nil))
(insn 124 123 0 31 (use (reg/i:SI 0 ax)) res_comp.c:170 -1
     (nil))

;; Function __res_ownok (__res_ownok, funcdef_no=31, decl_uid=5136, cgraph_uid=35, symbol_order=37)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 32.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 92 [ dn ])
        (reg:DI 5 di [ dn ])) res_comp.c:178 -1
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 92 [ dn ]) [0 *dn_3(D)+0 S1 A8])
            (const_int 42 [0x2a]))) res_comp.c:179 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) res_comp.c:179 -1
     (int_list:REG_BR_PROB 5123 (nil))
 -> 23)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:QI 89 [ D.6580 ])
        (mem:QI (plus:DI (reg/v/f:DI 92 [ dn ])
                (const_int 1 [0x1])) [0 MEM[(const char *)dn_3(D) + 1B]+0 S1 A8])) res_comp.c:180 -1
     (nil))
(insn 11 10 12 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.6580 ])
            (const_int 46 [0x2e]))) res_comp.c:180 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) res_comp.c:180 -1
     (int_list:REG_BR_PROB 9078 (nil))
 -> 19)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (parallel [
            (set (reg:DI 93 [ D.6581 ])
                (plus:DI (reg/v/f:DI 92 [ dn ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:181 -1
     (nil))
(insn 15 14 16 5 (set (reg:DI 5 di)
        (reg:DI 93 [ D.6581 ])) res_comp.c:181 -1
     (nil))
(call_insn/j/c/i 16 15 17 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>) [0 __res_hnok S1 A8])
            (const_int 0 [0]))) res_comp.c:181 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 17 16 19)
(code_label 19 17 20 6 37 "" [1 uses])
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.6580 ])
            (const_int 0 [0]))) res_comp.c:182 -1
     (nil))
(jump_insn 22 21 23 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) res_comp.c:182 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 29)
(code_label 23 22 24 7 36 "" [1 uses])
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ dn ])) res_comp.c:185 -1
     (nil))
(call_insn/j/c/i 26 25 27 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>) [0 __res_hnok S1 A8])
            (const_int 0 [0]))) res_comp.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 27 26 29)
(code_label 29 27 30 8 38 "" [1 uses])
(note 30 29 4 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 4 30 31 8 (set (reg:SI 87 [ D.6579 ])
        (const_int 1 [0x1])) res_comp.c:183 -1
     (nil))
(insn 31 4 35 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.6579 ])) -1
     (nil))
(insn 35 31 36 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) res_comp.c:186 -1
     (nil))
(insn 36 35 0 8 (use (reg/i:SI 0 ax)) res_comp.c:186 -1
     (nil))

;; Function __res_mailok (__res_mailok, funcdef_no=32, decl_uid=5138, cgraph_uid=36, symbol_order=38)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->8 redirected to 15
Edge 3->8 redirected to 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 103 [ dn ])
        (reg:DI 5 di [ dn ])) res_comp.c:193 -1
     (nil))
(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 11 2 (set (reg:QI 90 [ D.6592 ])
        (mem:QI (reg/v/f:DI 103 [ dn ]) [0 *dn_6(D)+0 S1 A8])) res_comp.c:197 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 90 [ D.6592 ])
            (const_int 0 [0]))) res_comp.c:197 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) res_comp.c:197 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 69)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg/v/f:DI 97 [ dn ])
                (plus:DI (reg/v/f:DI 103 [ dn ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:201 -1
     (nil))
(insn 15 14 16 4 (set (reg/v:SI 95 [ ch ])
        (sign_extend:SI (reg:QI 90 [ D.6592 ]))) res_comp.c:201 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:QI 104 [ D.6589 ])
                (plus:QI (reg:QI 90 [ D.6592 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:201 -1
     (nil))
(insn 17 16 18 4 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 104 [ D.6589 ])
            (const_int 93 [0x5d]))) res_comp.c:201 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 73)
            (pc))) res_comp.c:201 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 73)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ ch ])
            (const_int 46 [0x2e]))) res_comp.c:204 -1
     (nil))
(jump_insn 21 20 24 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) res_comp.c:204 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 55)
(note 24 21 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 24 22 6 (set (reg/v:SI 100 [ escaped ])
        (const_int 0 [0])) res_comp.c:204 -1
     (nil))
(jump_insn 22 4 23 6 (set (pc)
        (label_ref 33)) res_comp.c:204 -1
     (nil)
 -> 33)
(barrier 23 22 46)
(code_label 46 23 25 7 46 "" [1 uses])
(note 25 46 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ ch ])
            (const_int 46 [0x2e]))) res_comp.c:204 -1
     (nil))
(insn 27 26 28 7 (set (reg:QI 106 [ D.6591 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) res_comp.c:204 -1
     (nil))
(insn 28 27 29 7 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 106 [ D.6591 ])
            (reg:QI 101 [ D.6591 ]))) res_comp.c:204 -1
     (nil))
(jump_insn 29 28 32 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) res_comp.c:204 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 55)
(note 32 29 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 30 32 31 8 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
(barrier 31 30 33)
(code_label 33 31 34 9 44 "" [1 uses])
(note 34 33 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(code_label 35 34 36 10 45 "" [1 uses])
(note 36 35 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 10 (parallel [
            (set (reg:SI 107 [ D.6590 ])
                (xor:SI (reg/v:SI 100 [ escaped ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:208 -1
     (nil))
(insn 38 37 39 10 (parallel [
            (set (reg:QI 108 [ D.6591 ])
                (and:QI (subreg:QI (reg:SI 107 [ D.6590 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:208 -1
     (nil))
(insn 39 38 40 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ ch ])
            (const_int 92 [0x5c]))) res_comp.c:208 -1
     (nil))
(insn 40 39 41 10 (set (reg:QI 110 [ D.6591 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) res_comp.c:208 -1
     (nil))
(insn 41 40 42 10 (parallel [
            (set (reg:QI 101 [ D.6591 ])
                (and:QI (reg:QI 108 [ D.6591 ])
                    (reg:QI 110 [ D.6591 ])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:208 -1
     (nil))
(insn 42 41 43 10 (set (reg/v:SI 100 [ escaped ])
        (zero_extend:SI (reg:QI 101 [ D.6591 ]))) res_comp.c:209 -1
     (nil))
(insn 43 42 44 10 (parallel [
            (set (reg/v/f:DI 97 [ dn ])
                (plus:DI (reg/v/f:DI 97 [ dn ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:201 -1
     (nil))
(insn 44 43 45 10 (set (reg:QI 93 [ D.6592 ])
        (mem:QI (plus:DI (reg/v/f:DI 97 [ dn ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: dn_10, offset: -1B]+0 S1 A8])) res_comp.c:201 -1
     (nil))
(insn 45 44 47 10 (set (reg/v:SI 95 [ ch ])
        (sign_extend:SI (reg:QI 93 [ D.6592 ]))) res_comp.c:201 -1
     (nil))
(insn 47 45 48 10 (parallel [
            (set (reg:QI 111 [ D.6589 ])
                (plus:QI (reg:QI 93 [ D.6592 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:201 -1
     (nil))
(insn 48 47 49 10 (set (reg:CC 17 flags)
        (compare:CC (reg:QI 111 [ D.6589 ])
            (const_int 93 [0x5d]))) res_comp.c:201 -1
     (nil))
(jump_insn 49 48 65 10 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) res_comp.c:201 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 46)
(note 65 49 6 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 6 65 66 11 (set (reg:SI 88 [ D.6590 ])
        (const_int 0 [0])) res_comp.c:213 -1
     (nil))
(jump_insn 66 6 67 11 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
(barrier 67 66 69)
(code_label 69 67 68 12 47 "" [1 uses])
(note 68 69 5 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 5 68 70 12 (set (reg:SI 88 [ D.6590 ])
        (const_int 1 [0x1])) res_comp.c:198 -1
     (nil))
(jump_insn 70 5 71 12 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
(barrier 71 70 73)
(code_label 73 71 72 13 48 "" [1 uses])
(note 72 73 7 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 7 72 50 13 (set (reg:SI 88 [ D.6590 ])
        (const_int 0 [0])) res_comp.c:213 -1
     (nil))
(code_label 50 7 51 14 42 "" [2 uses])
(note 51 50 52 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 14 (set (reg:SI 102 [ <retval> ])
        (reg:SI 88 [ D.6590 ])) -1
     (nil))
(jump_insn 53 52 54 14 (set (pc)
        (label_ref 61)) -1
     (nil)
 -> 61)
(barrier 54 53 55)
(code_label 55 54 56 15 43 "" [2 uses])
(note 56 55 57 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 15 (set (reg:DI 5 di)
        (reg/v/f:DI 97 [ dn ])) res_comp.c:212 -1
     (nil))
(call_insn/j/c/i 58 57 59 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>) [0 __res_hnok S1 A8])
            (const_int 0 [0]))) res_comp.c:212 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___res_hnok") [flags 0x3]  <function_decl 0x2b8274978000 __res_hnok>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 59 58 61)
(code_label 61 59 64 16 41 "" [1 uses])
(note 64 61 62 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 62 64 63 16 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) res_comp.c:214 -1
     (nil))
(insn 63 62 0 16 (use (reg/i:SI 0 ax)) res_comp.c:214 -1
     (nil))

;; Function __res_dnok (*__GI___res_dnok, funcdef_no=33, decl_uid=5140, cgraph_uid=37, symbol_order=39)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5
Edge 3->5 redirected to 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 25.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 92 [ dn ])
        (reg:DI 5 di [ dn ])) res_comp.c:221 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 8 3 9 2 (set (pc)
        (label_ref 15)) res_comp.c:224 -1
     (nil)
 -> 15)
(barrier 9 8 19)
(code_label 19 9 10 4 56 "" [1 uses])
(note 10 19 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 93 [ D.6601 ])
        (sign_extend:SI (reg:QI 88 [ D.6600 ]))) res_comp.c:225 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (reg:SI 94 [ D.6601 ])
                (plus:SI (reg:SI 93 [ D.6601 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:225 -1
     (nil))
(insn 13 12 14 4 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 94 [ D.6601 ])
            (const_int 93 [0x5d]))) res_comp.c:225 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) res_comp.c:225 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 35)
(code_label 15 14 16 5 54 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (parallel [
            (set (reg/v/f:DI 92 [ dn ])
                (plus:DI (reg/v/f:DI 92 [ dn ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) res_comp.c:224 -1
     (nil))
(insn 18 17 20 5 (set (reg:QI 88 [ D.6600 ])
        (mem:QI (plus:DI (reg/v/f:DI 92 [ dn ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: dn_4, offset: -1B]+0 S1 A8])) res_comp.c:224 -1
     (nil))
(insn 20 18 21 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 88 [ D.6600 ])
            (const_int 0 [0]))) res_comp.c:224 -1
     (nil))
(jump_insn 21 20 31 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) res_comp.c:224 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 19)
(note 31 21 5 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 5 31 32 6 (set (reg:SI 87 [ D.6599 ])
        (const_int 1 [0x1])) res_comp.c:227 -1
     (nil))
(jump_insn 32 5 33 6 (set (pc)
        (label_ref 22)) -1
     (nil)
 -> 22)
(barrier 33 32 35)
(code_label 35 33 34 7 57 "" [1 uses])
(note 34 35 4 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 4 34 22 7 (set (reg:SI 87 [ D.6599 ])
        (const_int 0 [0])) res_comp.c:226 -1
     (nil))
(code_label 22 4 23 8 55 "" [1 uses])
(note 23 22 24 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 8 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.6599 ])) -1
     (nil))
(insn 28 24 29 8 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) res_comp.c:228 -1
     (nil))
(insn 29 28 0 8 (use (reg/i:SI 0 ax)) res_comp.c:228 -1
     (nil))

;; Function __putlong (*__GI___putlong, funcdef_no=34, decl_uid=5173, cgraph_uid=39, symbol_order=41)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v:SI 88 [ src ])
        (reg:SI 5 di [ src ])) res_comp.c:240 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ dst ])
        (reg:DI 4 si [ dst ])) res_comp.c:240 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 90 [ D.6604 ])
        (zero_extend:DI (reg/v:SI 88 [ src ]))) res_comp.c:240 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 89 [ dst ])) res_comp.c:240 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 90 [ D.6604 ])) res_comp.c:240 -1
     (nil))
(call_insn/j 10 9 11 2 (call (mem:QI (symbol_ref:DI ("*__GI_ns_put32") [flags 0x43]  <function_decl 0x2b8274826e58 ns_put32>) [0 ns_put32 S1 A8])
        (const_int 0 [0])) res_comp.c:240 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_put32") [flags 0x43]  <function_decl 0x2b8274826e58 ns_put32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 11 10 0)

;; Function __putshort (*__GI___putshort, funcdef_no=35, decl_uid=5176, cgraph_uid=41, symbol_order=43)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 89)
        (reg:SI 5 di [ src ])) res_comp.c:242 -1
     (nil))
(insn 4 2 3 2 (set (reg/v/f:DI 90 [ dst ])
        (reg:DI 4 si [ dst ])) res_comp.c:242 -1
     (nil))
(insn 3 4 5 2 (set (reg/v:HI 88 [ src ])
        (subreg:HI (reg:SI 89) 0)) res_comp.c:242 -1
     (nil))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 91 [ D.6607 ])
        (zero_extend:SI (reg/v:HI 88 [ src ]))) res_comp.c:242 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ dst ])) res_comp.c:242 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 91 [ D.6607 ])) res_comp.c:242 -1
     (nil))
(call_insn/j 11 10 12 2 (call (mem:QI (symbol_ref:DI ("*__GI_ns_put16") [flags 0x43]  <function_decl 0x2b8274826d80 ns_put16>) [0 ns_put16 S1 A8])
        (const_int 0 [0])) res_comp.c:242 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_put16") [flags 0x43]  <function_decl 0x2b8274826d80 ns_put16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 12 11 0)

;; Function _getlong (_getlong, funcdef_no=36, decl_uid=5321, cgraph_uid=43, symbol_order=45)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 11.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ src ])
        (reg:DI 5 di [ src ])) res_comp.c:244 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ src ])) res_comp.c:244 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b8274826ca8 ns_get32>) [0 ns_get32 S1 A8])
            (const_int 0 [0]))) res_comp.c:244 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get32") [flags 0x43]  <function_decl 0x2b8274826ca8 ns_get32>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 87 [ D.6611 ])
        (reg:DI 0 ax)) res_comp.c:244 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 91 [ D.6612 ])
        (subreg:SI (reg:DI 87 [ D.6611 ]) 0)) res_comp.c:244 -1
     (nil))
(insn 10 9 14 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 91 [ D.6612 ])) res_comp.c:244 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) res_comp.c:244 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) res_comp.c:244 -1
     (nil))

;; Function _getshort (_getshort, funcdef_no=37, decl_uid=5323, cgraph_uid=44, symbol_order=46)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 11.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ src ])
        (reg:DI 5 di [ src ])) res_comp.c:245 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ src ])) res_comp.c:245 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b8274826bd0 ns_get16>) [0 ns_get16 S1 A8])
            (const_int 0 [0]))) res_comp.c:245 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_ns_get16") [flags 0x43]  <function_decl 0x2b8274826bd0 ns_get16>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:SI 87 [ D.6615 ])
        (reg:SI 0 ax)) res_comp.c:245 -1
     (nil))
(insn 9 8 10 2 (set (reg:HI 91 [ D.6616 ])
        (subreg:HI (reg:SI 87 [ D.6615 ]) 0)) res_comp.c:245 -1
     (nil))
(insn 10 9 14 2 (set (reg:HI 89 [ <retval> ])
        (reg:HI 91 [ D.6616 ])) res_comp.c:245 -1
     (nil))
(insn 14 10 15 2 (set (reg/i:HI 0 ax)
        (reg:HI 89 [ <retval> ])) res_comp.c:245 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:HI 0 ax)) res_comp.c:245 -1
     (nil))
