
;; Function __b64_ntop (*__GI___b64_ntop, funcdef_no=45, decl_uid=5210, cgraph_uid=45, symbol_order=48)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 2->8 redirected to 23
Edge 9->11 redirected to 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 12 failed.
Removing jump 173.
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 36 NOTE_INSN_DELETED)
(note 36 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 36 25 2 (set (reg/v/f:DI 168 [ src ])
        (reg:DI 5 di [ src ])) base64.c:127 -1
     (nil))
(insn 25 24 26 2 (set (reg/v:DI 169 [ srclength ])
        (reg:DI 4 si [ srclength ])) base64.c:127 -1
     (nil))
(insn 26 25 27 2 (set (reg/v/f:DI 170 [ target ])
        (reg:DI 1 dx [ target ])) base64.c:127 -1
     (nil))
(insn 27 26 28 2 (set (reg/v:DI 171 [ targsize ])
        (reg:DI 2 cx [ targsize ])) base64.c:127 -1
     (nil))
(note 28 27 38 2 NOTE_INSN_FUNCTION_BEG)
(insn 38 28 39 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 169 [ srclength ])
            (const_int 2 [0x2]))) base64.c:133 -1
     (nil))
(jump_insn 39 38 40 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 183)
            (pc))) base64.c:133 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 183)
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 4 (set (reg:QI 139 [ D.7006 ])
        (mem:QI (reg/v/f:DI 168 [ src ]) [0 *src_14(D)+0 S1 A8])) base64.c:134 -1
     (nil))
(insn 42 41 43 4 (set (reg:QI 164 [ D.7006 ])
        (mem:QI (plus:DI (reg/v/f:DI 168 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const u_char *)src_14(D) + 1B]+0 S1 A8])) base64.c:135 -1
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg/v/f:DI 162 [ src ])
                (plus:DI (reg/v/f:DI 168 [ src ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:136 -1
     (nil))
(insn 44 43 45 4 (set (reg:QI 136 [ D.7006 ])
        (mem:QI (plus:DI (reg/v/f:DI 168 [ src ])
                (const_int 2 [0x2])) [0 MEM[(const u_char *)src_14(D) + 2B]+0 S1 A8])) base64.c:136 -1
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg/v:DI 169 [ srclength ])
                (plus:DI (reg/v:DI 169 [ srclength ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:137 -1
     (nil))
(insn 46 45 47 4 (parallel [
            (set (reg:QI 110 [ D.7006 ])
                (lshiftrt:QI (reg:QI 139 [ D.7006 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:139 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:QI 172 [ D.7006 ])
                (and:QI (reg:QI 139 [ D.7006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg:QI 173 [ D.7006 ])
                (ashift:QI (reg:QI 172 [ D.7006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 49 48 50 4 (parallel [
            (set (reg:QI 174 [ D.7006 ])
                (lshiftrt:QI (reg:QI 164 [ D.7006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg:QI 113 [ D.7006 ])
                (plus:QI (reg:QI 173 [ D.7006 ])
                    (reg:QI 174 [ D.7006 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 51 50 52 4 (parallel [
            (set (reg:QI 175 [ D.7006 ])
                (and:QI (reg:QI 164 [ D.7006 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 52 51 53 4 (parallel [
            (set (reg:QI 176 [ D.7006 ])
                (ashift:QI (reg:QI 175 [ D.7006 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg:QI 177 [ D.7006 ])
                (lshiftrt:QI (reg:QI 136 [ D.7006 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 54 53 55 4 (parallel [
            (set (reg:QI 138 [ D.7006 ])
                (plus:QI (reg:QI 176 [ D.7006 ])
                    (reg:QI 177 [ D.7006 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 55 54 56 4 (parallel [
            (set (reg:QI 125 [ D.7006 ])
                (and:QI (reg:QI 136 [ D.7006 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:142 -1
     (nil))
(insn 56 55 57 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 171 [ targsize ])
            (const_int 3 [0x3]))) base64.c:148 -1
     (nil))
(jump_insn 57 56 78 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) base64.c:148 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 84)
(code_label 78 57 58 5 5 "" [3 uses])
(note 58 78 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 58 59 5 (set (reg:SI 114 [ D.7007 ])
        (const_int -1 [0xffffffffffffffff])) base64.c:149 -1
     (nil))
(jump_insn 59 35 60 5 (set (pc)
        (label_ref 170)) base64.c:148 -1
     (nil)
 -> 170)
(barrier 60 59 108)
(code_label 108 60 61 6 7 "" [1 uses])
(note 61 108 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 6 (set (reg:QI 115 [ D.7006 ])
        (mem:QI (reg/v/f:DI 162 [ src ]) [0 MEM[base: src_113, offset: 0B]+0 S1 A8])) base64.c:134 -1
     (nil))
(insn 63 62 64 6 (set (reg:QI 116 [ D.7006 ])
        (mem:QI (plus:DI (reg/v/f:DI 162 [ src ])
                (const_int 1 [0x1])) [0 MEM[base: src_113, offset: 1B]+0 S1 A8])) base64.c:135 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/v/f:DI 162 [ src ])
                (plus:DI (reg/v/f:DI 162 [ src ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 65 64 66 6 (set (reg:QI 117 [ D.7006 ])
        (mem:QI (plus:DI (reg/v/f:DI 162 [ src ])
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: src_117, offset: -1B]+0 S1 A8])) base64.c:136 -1
     (nil))
(insn 66 65 67 6 (parallel [
            (set (reg/v:DI 169 [ srclength ])
                (plus:DI (reg/v:DI 169 [ srclength ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:137 -1
     (nil))
(insn 67 66 68 6 (parallel [
            (set (reg:QI 110 [ D.7006 ])
                (lshiftrt:QI (reg:QI 115 [ D.7006 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:139 -1
     (nil))
(insn 68 67 69 6 (parallel [
            (set (reg:QI 178 [ D.7006 ])
                (and:QI (reg:QI 115 [ D.7006 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 69 68 70 6 (parallel [
            (set (reg:QI 179 [ D.7006 ])
                (ashift:QI (reg:QI 178 [ D.7006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg:QI 180 [ D.7006 ])
                (lshiftrt:QI (reg:QI 116 [ D.7006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg:QI 113 [ D.7006 ])
                (plus:QI (reg:QI 179 [ D.7006 ])
                    (reg:QI 180 [ D.7006 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:140 -1
     (nil))
(insn 72 71 73 6 (parallel [
            (set (reg:QI 181 [ D.7006 ])
                (and:QI (reg:QI 116 [ D.7006 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 73 72 74 6 (parallel [
            (set (reg:QI 182 [ D.7006 ])
                (ashift:QI (reg:QI 181 [ D.7006 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 74 73 75 6 (parallel [
            (set (reg:QI 183 [ D.7006 ])
                (lshiftrt:QI (reg:QI 117 [ D.7006 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:QI 138 [ D.7006 ])
                (plus:QI (reg:QI 182 [ D.7006 ])
                    (reg:QI 183 [ D.7006 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:141 -1
     (nil))
(insn 76 75 77 6 (parallel [
            (set (reg:QI 125 [ D.7006 ])
                (and:QI (reg:QI 117 [ D.7006 ])
                    (const_int 63 [0x3f])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:142 -1
     (nil))
(insn 77 76 79 6 (parallel [
            (set (reg/v:DI 124 [ datalength ])
                (plus:DI (reg/v:DI 124 [ datalength ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:148 -1
     (nil))
(insn 79 77 80 6 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 124 [ datalength ])
            (reg/v:DI 171 [ targsize ]))) base64.c:148 -1
     (nil))
(jump_insn 80 79 83 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) base64.c:148 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 78)
(note 83 80 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 81 83 82 7 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 82 81 84)
(code_label 84 82 85 8 3 "" [1 uses])
(note 85 84 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 85 86 8 (set (reg/v:DI 124 [ datalength ])
        (const_int 4 [0x4])) base64.c:148 -1
     (nil))
(code_label 86 29 87 9 6 "" [1 uses])
(note 87 86 88 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 9 (set (reg/f:DI 184)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:150 -1
     (nil))
(insn 89 88 90 9 (set (reg:SI 185 [ D.7007 ])
        (zero_extend:SI (reg:QI 110 [ D.7006 ]))) base64.c:150 -1
     (nil))
(insn 90 89 91 9 (set (reg:DI 186)
        (sign_extend:DI (reg:SI 185 [ D.7007 ]))) base64.c:150 -1
     (nil))
(insn 91 90 92 9 (set (reg:QI 187)
        (mem/u/j:QI (plus:DI (reg/f:DI 184)
                (reg:DI 186)) [0 Base64 S1 A8])) base64.c:150 -1
     (nil))
(insn 92 91 93 9 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 170 [ target ])
                    (reg/v:DI 124 [ datalength ]))
                (const_int -4 [0xfffffffffffffffc])) [0 MEM[base: target_35(D), index: datalength_123, offset: -4B]+0 S1 A8])
        (reg:QI 187)) base64.c:150 -1
     (nil))
(insn 93 92 94 9 (set (reg/f:DI 188)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:151 -1
     (nil))
(insn 94 93 95 9 (set (reg:SI 189 [ D.7007 ])
        (zero_extend:SI (reg:QI 113 [ D.7006 ]))) base64.c:151 -1
     (nil))
(insn 95 94 96 9 (set (reg:DI 190)
        (sign_extend:DI (reg:SI 189 [ D.7007 ]))) base64.c:151 -1
     (nil))
(insn 96 95 97 9 (set (reg:QI 191)
        (mem/u/j:QI (plus:DI (reg/f:DI 188)
                (reg:DI 190)) [0 Base64 S1 A8])) base64.c:151 -1
     (nil))
(insn 97 96 98 9 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 170 [ target ])
                    (reg/v:DI 124 [ datalength ]))
                (const_int -3 [0xfffffffffffffffd])) [0 MEM[base: target_35(D), index: datalength_123, offset: -3B]+0 S1 A8])
        (reg:QI 191)) base64.c:151 -1
     (nil))
(insn 98 97 99 9 (set (reg/f:DI 192)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:152 -1
     (nil))
(insn 99 98 100 9 (set (reg:SI 193 [ D.7007 ])
        (zero_extend:SI (reg:QI 138 [ D.7006 ]))) base64.c:152 -1
     (nil))
(insn 100 99 101 9 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 193 [ D.7007 ]))) base64.c:152 -1
     (nil))
(insn 101 100 102 9 (set (reg:QI 195)
        (mem/u/j:QI (plus:DI (reg/f:DI 192)
                (reg:DI 194)) [0 Base64 S1 A8])) base64.c:152 -1
     (nil))
(insn 102 101 103 9 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 170 [ target ])
                    (reg/v:DI 124 [ datalength ]))
                (const_int -2 [0xfffffffffffffffe])) [0 MEM[base: target_35(D), index: datalength_123, offset: -2B]+0 S1 A8])
        (reg:QI 195)) base64.c:152 -1
     (nil))
(insn 103 102 104 9 (set (reg/f:DI 196)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:153 -1
     (nil))
(insn 104 103 105 9 (set (reg:SI 197 [ D.7007 ])
        (zero_extend:SI (reg:QI 125 [ D.7006 ]))) base64.c:153 -1
     (nil))
(insn 105 104 106 9 (set (reg:DI 198)
        (sign_extend:DI (reg:SI 197 [ D.7007 ]))) base64.c:153 -1
     (nil))
(insn 106 105 107 9 (set (reg:QI 199)
        (mem/u/j:QI (plus:DI (reg/f:DI 196)
                (reg:DI 198)) [0 Base64 S1 A8])) base64.c:153 -1
     (nil))
(insn 107 106 109 9 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 170 [ target ])
                    (reg/v:DI 124 [ datalength ]))
                (const_int -1 [0xffffffffffffffff])) [0 MEM[base: target_35(D), index: datalength_123, offset: -1B]+0 S1 A8])
        (reg:QI 199)) base64.c:153 -1
     (nil))
(insn 109 107 110 9 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 169 [ srclength ])
            (const_int 2 [0x2]))) base64.c:133 -1
     (nil))
(jump_insn 110 109 179 9 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) base64.c:133 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 108)
(note 179 110 180 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 180 179 181 10 (set (pc)
        (label_ref 111)) -1
     (nil)
 -> 111)
(barrier 181 180 183)
(code_label 183 181 182 11 12 "" [1 uses])
(note 182 183 30 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 30 182 31 11 (set (reg/v/f:DI 162 [ src ])
        (reg/v/f:DI 168 [ src ])) base64.c:133 -1
     (nil))
(insn 31 30 111 11 (set (reg/v:DI 124 [ datalength ])
        (const_int 0 [0])) base64.c:128 -1
     (nil))
(code_label 111 31 112 12 2 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ srclength ])
            (const_int 0 [0]))) base64.c:157 -1
     (nil))
(jump_insn 114 113 115 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) base64.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 163)
(note 115 114 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 13 (set (reg:QI 161 [ input$0 ])
        (mem:QI (reg/v/f:DI 162 [ src ]) [0 *src_106+0 S1 A8])) base64.c:161 -1
     (nil))
(insn 117 116 118 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ srclength ])
            (const_int 2 [0x2]))) base64.c:160 -1
     (nil))
(jump_insn 118 117 119 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 187)
            (pc))) base64.c:160 612 {*jcc_1}
     (int_list:REG_BR_PROB 3333 (nil))
 -> 187)
(note 119 118 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 14 (set (reg:QI 163 [ input$1 ])
        (mem:QI (plus:DI (reg/v/f:DI 162 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const u_char *)src_106 + 1B]+0 S1 A8])) base64.c:161 -1
     (nil))
(insn 121 120 122 14 (parallel [
            (set (reg:QI 109 [ D.7006 ])
                (lshiftrt:QI (reg:QI 163 [ input$1 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg:QI 200 [ D.7006 ])
                (and:QI (reg:QI 163 [ input$1 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 123 122 184 14 (parallel [
            (set (reg:QI 166 [ D.7006 ])
                (ashift:QI (reg:QI 200 [ D.7006 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 184 123 185 14 (set (pc)
        (label_ref 124)) -1
     (nil)
 -> 124)
(barrier 185 184 187)
(code_label 187 185 186 15 13 "" [1 uses])
(note 186 187 32 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 32 186 33 15 (set (reg:QI 166 [ D.7006 ])
        (const_int 0 [0])) base64.c:160 -1
     (nil))
(insn 33 32 124 15 (set (reg:QI 109 [ D.7006 ])
        (const_int 0 [0])) base64.c:160 -1
     (nil))
(code_label 124 33 125 16 9 "" [1 uses])
(note 125 124 126 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 126 125 127 16 (parallel [
            (set (reg:QI 142 [ D.7006 ])
                (lshiftrt:QI (reg:QI 161 [ input$0 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:163 -1
     (nil))
(insn 127 126 128 16 (parallel [
            (set (reg:QI 201 [ D.7006 ])
                (and:QI (reg:QI 161 [ input$0 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:164 -1
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg:QI 202 [ D.7006 ])
                (ashift:QI (reg:QI 201 [ D.7006 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:164 -1
     (nil))
(insn 129 128 130 16 (parallel [
            (set (reg:QI 145 [ D.7006 ])
                (plus:QI (reg:QI 202 [ D.7006 ])
                    (reg:QI 109 [ D.7006 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:164 -1
     (nil))
(insn 130 129 131 16 (parallel [
            (set (reg/v:DI 146 [ datalength ])
                (plus:DI (reg/v:DI 124 [ datalength ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:170 -1
     (nil))
(insn 131 130 132 16 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 171 [ targsize ])
            (reg/v:DI 146 [ datalength ]))) base64.c:170 -1
     (nil))
(jump_insn 132 131 133 16 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) base64.c:170 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 78)
(note 133 132 134 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 17 (set (reg/f:DI 203)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:172 -1
     (nil))
(insn 135 134 136 17 (set (reg:SI 204 [ D.7007 ])
        (zero_extend:SI (reg:QI 142 [ D.7006 ]))) base64.c:172 -1
     (nil))
(insn 136 135 137 17 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 204 [ D.7007 ]))) base64.c:172 -1
     (nil))
(insn 137 136 138 17 (set (reg:QI 206)
        (mem/u/j:QI (plus:DI (reg/f:DI 203)
                (reg:DI 205)) [0 Base64 S1 A8])) base64.c:172 -1
     (nil))
(insn 138 137 139 17 (set (mem:QI (plus:DI (reg/v/f:DI 170 [ target ])
                (reg/v:DI 124 [ datalength ])) [0 *_79+0 S1 A8])
        (reg:QI 206)) base64.c:172 -1
     (nil))
(insn 139 138 140 17 (parallel [
            (set (reg/v:DI 151 [ datalength ])
                (plus:DI (reg/v:DI 124 [ datalength ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:173 -1
     (nil))
(insn 140 139 141 17 (set (reg/f:DI 207)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:173 -1
     (nil))
(insn 141 140 142 17 (set (reg:SI 208 [ D.7007 ])
        (zero_extend:SI (reg:QI 145 [ D.7006 ]))) base64.c:173 -1
     (nil))
(insn 142 141 143 17 (set (reg:DI 209)
        (sign_extend:DI (reg:SI 208 [ D.7007 ]))) base64.c:173 -1
     (nil))
(insn 143 142 144 17 (set (reg:QI 210)
        (mem/u/j:QI (plus:DI (reg/f:DI 207)
                (reg:DI 209)) [0 Base64 S1 A8])) base64.c:173 -1
     (nil))
(insn 144 143 145 17 (set (mem:QI (plus:DI (plus:DI (reg/v/f:DI 170 [ target ])
                    (reg/v:DI 124 [ datalength ]))
                (const_int 1 [0x1])) [0 *_84+0 S1 A8])
        (reg:QI 210)) base64.c:173 -1
     (nil))
(insn 145 144 146 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 169 [ srclength ])
            (const_int 1 [0x1]))) base64.c:174 -1
     (nil))
(jump_insn 146 145 147 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) base64.c:174 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 152)
(note 147 146 148 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 18 (parallel [
            (set (reg/v:DI 112 [ datalength ])
                (plus:DI (reg/v:DI 124 [ datalength ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:175 -1
     (nil))
(insn 149 148 150 18 (set (mem:QI (plus:DI (reg/v/f:DI 170 [ target ])
                (reg/v:DI 151 [ datalength ])) [0 *_89+0 S1 A8])
        (const_int 61 [0x3d])) base64.c:175 -1
     (nil))
(jump_insn 150 149 151 18 (set (pc)
        (label_ref 160)) -1
     (nil)
 -> 160)
(barrier 151 150 152)
(code_label 152 151 153 19 10 "" [1 uses])
(note 153 152 154 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 19 (parallel [
            (set (reg/v:DI 112 [ datalength ])
                (plus:DI (reg/v:DI 124 [ datalength ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:177 -1
     (nil))
(insn 155 154 156 19 (set (reg/f:DI 211)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:177 -1
     (nil))
(insn 156 155 157 19 (set (reg:SI 212 [ D.7007 ])
        (zero_extend:SI (reg:QI 166 [ D.7006 ]))) base64.c:177 -1
     (nil))
(insn 157 156 158 19 (set (reg:DI 213)
        (sign_extend:DI (reg:SI 212 [ D.7007 ]))) base64.c:177 -1
     (nil))
(insn 158 157 159 19 (set (reg:QI 214)
        (mem/u/j:QI (plus:DI (reg/f:DI 211)
                (reg:DI 213)) [0 Base64 S1 A32])) base64.c:177 -1
     (nil))
(insn 159 158 160 19 (set (mem:QI (plus:DI (reg/v/f:DI 170 [ target ])
                (reg/v:DI 151 [ datalength ])) [0 *_92+0 S1 A8])
        (reg:QI 214)) base64.c:177 -1
     (nil))
(code_label 160 159 161 20 11 "" [1 uses])
(note 161 160 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 34 20 (set (mem:QI (plus:DI (reg/v/f:DI 170 [ target ])
                (reg/v:DI 112 [ datalength ])) [0 *_96+0 S1 A8])
        (const_int 61 [0x3d])) base64.c:178 -1
     (nil))
(insn 34 162 163 20 (set (reg/v:DI 124 [ datalength ])
        (reg/v:DI 146 [ datalength ])) base64.c:178 -1
     (nil))
(code_label 163 34 164 21 8 "" [1 uses])
(note 164 163 165 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 21 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 124 [ datalength ])
            (reg/v:DI 171 [ targsize ]))) base64.c:180 -1
     (nil))
(jump_insn 166 165 167 21 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) base64.c:180 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 78)
(note 167 166 168 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 22 (set (mem:QI (plus:DI (reg/v/f:DI 170 [ target ])
                (reg/v:DI 124 [ datalength ])) [0 *_101+0 S1 A8])
        (const_int 0 [0])) base64.c:182 -1
     (nil))
(insn 169 168 170 22 (set (reg:SI 114 [ D.7007 ])
        (subreg:SI (reg/v:DI 124 [ datalength ]) 0)) base64.c:183 -1
     (nil))
(code_label 170 169 171 23 4 "" [1 uses])
(note 171 170 172 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 176 23 (set (reg:SI 167 [ <retval> ])
        (reg:SI 114 [ D.7007 ])) -1
     (nil))
(insn 176 172 177 23 (set (reg/i:SI 0 ax)
        (reg:SI 167 [ <retval> ])) base64.c:184 -1
     (nil))
(insn 177 176 0 23 (use (reg/i:SI 0 ax)) base64.c:184 -1
     (nil))

;; Function __b64_pton (__b64_pton, funcdef_no=46, decl_uid=5214, cgraph_uid=47, symbol_order=50)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68

;; Generating RTL for gimple basic block 69

;; Generating RTL for gimple basic block 70

;; Generating RTL for gimple basic block 71

;; Generating RTL for gimple basic block 72

;; Generating RTL for gimple basic block 73

;; Generating RTL for gimple basic block 74

;; Generating RTL for gimple basic block 75

;; Generating RTL for gimple basic block 76

;; Generating RTL for gimple basic block 77

;; Generating RTL for gimple basic block 78

;; Generating RTL for gimple basic block 79

;; Generating RTL for gimple basic block 80

;; Generating RTL for gimple basic block 81

;; Generating RTL for gimple basic block 82

;; Generating RTL for gimple basic block 83

;; Generating RTL for gimple basic block 84
Edge 11->23 redirected to 107
Edge 15->18 redirected to 109
Edge 45->61 redirected to 110
Edge 48->61 redirected to 111
Edge 51->61 redirected to 112
Edge 54->61 redirected to 113
Edge 58->61 redirected to 114
Edge 76->75 redirected to 115
Edge 76->77 redirected to 116
Purged edges from bb 122
Purged edges from bb 128
deleting block 126


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 6->7 to 18 failed.
Forwarding edge 8->9 to 36 failed.
Forwarding edge 10->11 to 34 failed.
Forwarding edge 12->13 to 25 failed.
Forwarding edge 14->15 to 42 failed.
Forwarding edge 16->17 to 31 failed.
Forwarding edge 20->21 to 47 failed.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 27->28 to 122 failed.
Redirecting jump 136 from 121 to 122.
Forwarding edge 34->35 to 122 failed.
Redirecting jump 165 from 121 to 122.
Forwarding edge 39->40 to 122 failed.
Redirecting jump 193 from 121 to 122.
Forwarding edge 45->46 to 109 failed.
Edge 49->121 redirected to 122
Forwarding edge 50->51 to 31 failed.
Edge 52->121 redirected to 122
Edge 54->121 redirected to 122
Forwarding edge 55->56 to 34 failed.
Edge 58->121 redirected to 122
Forwarding edge 59->60 to 25 failed.
Forwarding edge 63->64 to 42 failed.
Forwarding edge 67->68 to 36 failed.
Edge 69->125 redirected to 122
Forwarding edge 71->72 to 16 failed.
Edge 73->125 redirected to 122
Forwarding edge 75->76 to 10 failed.
Forwarding edge 79->80 to 12 failed.
Edge 81->125 redirected to 122
Edge 85->125 redirected to 122
Forwarding edge 96->97 to 109 failed.
Forwarding edge 99->100 to 122 failed.
Forwarding edge 114->115 to 110 failed.
Forwarding edge 116->117 to 109 failed.
deleting block 121
deleting block 125


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 18 failed.
Forwarding edge 8->9 to 36 failed.
Forwarding edge 10->11 to 34 failed.
Forwarding edge 12->13 to 25 failed.
Forwarding edge 14->15 to 42 failed.
Forwarding edge 16->17 to 31 failed.
Forwarding edge 20->21 to 47 failed.
Forwarding edge 23->24 to 47 failed.
Forwarding edge 27->28 to 122 failed.
Forwarding edge 34->35 to 122 failed.
Forwarding edge 39->40 to 122 failed.
Forwarding edge 45->46 to 109 failed.
Forwarding edge 50->51 to 31 failed.
Forwarding edge 55->56 to 34 failed.
Forwarding edge 59->60 to 25 failed.
Forwarding edge 63->64 to 42 failed.
Forwarding edge 67->68 to 36 failed.
Forwarding edge 71->72 to 16 failed.
Forwarding edge 75->76 to 10 failed.
Forwarding edge 79->80 to 12 failed.
Forwarding edge 96->97 to 109 failed.
Forwarding edge 99->100 to 122 failed.
Forwarding edge 114->115 to 110 failed.
Forwarding edge 116->117 to 109 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 25 NOTE_INSN_DELETED)
(note 25 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 25 3 2 (set (reg/v/f:DI 254 [ src ])
        (reg:DI 5 di [ src ])) base64.c:195 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 255 [ target ])
        (reg:DI 4 si [ target ])) base64.c:195 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 256 [ targsize ])
        (reg:DI 1 dx [ targsize ])) base64.c:195 -1
     (nil))
(note 5 4 18 2 NOTE_INSN_FUNCTION_BEG)
(insn 18 5 19 2 (set (reg/v:SI 87 [ state ])
        (const_int 0 [0])) base64.c:199 -1
     (nil))
(insn 19 18 27 2 (set (reg/v:SI 145 [ tarindex ])
        (const_int 0 [0])) base64.c:200 -1
     (nil))
(jump_insn 27 19 28 2 (set (pc)
        (label_ref 441)) base64.c:202 -1
     (nil)
 -> 441)
(barrier 28 27 446)
(code_label 446 28 29 4 59 "" [1 uses])
(note 29 446 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 30 29 31 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b4da7463000 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) base64.c:203 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2b4da7463000 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 31 30 32 4 (set (reg/f:DI 91 [ D.7049 ])
        (reg:DI 0 ax)) base64.c:203 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 257 [ D.7051 ])
        (sign_extend:DI (reg:QI 89 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 258)
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 34 33 35 4 (set (reg:HI 260)
        (mem:HI (plus:DI (mult:DI (reg:DI 257 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 258)) [2 *_25+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 35 34 36 4 (parallel [
            (set (reg:HI 259 [ D.7052 ])
                (and:HI (reg:HI 260)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 257 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 258)) [2 *_25+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 259 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 439)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 439)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 510)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:SI 4 si)
        (reg/v:SI 90 [ ch ])) base64.c:209 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 44 43 45 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 45 44 46 6 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 46 45 47 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 47 46 50 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 50 47 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 48 50 49 7 (set (pc)
        (label_ref 101)) -1
     (nil)
 -> 101)
(barrier 49 48 431)
(code_label 431 49 51 8 57 "" [1 uses])
(note 51 431 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (set (reg:SI 4 si)
        (reg/v:SI 243 [ ch ])) base64.c:209 -1
     (nil))
(insn 53 52 54 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 54 53 55 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 55 54 56 8 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 56 55 57 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 57 56 60 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 60 57 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 58 60 59 9 (set (pc)
        (label_ref 168)) base64.c:210 -1
     (nil)
 -> 168)
(barrier 59 58 371)
(code_label 371 59 61 10 53 "" [1 uses])
(note 61 371 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:SI 4 si)
        (reg/v:SI 219 [ ch ])) base64.c:209 -1
     (nil))
(insn 63 62 64 10 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 64 63 65 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 65 64 66 10 (set (reg/v/f:DI 193 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 66 65 67 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 193 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 67 66 70 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 70 67 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 68 70 69 11 (set (pc)
        (label_ref 157)) base64.c:210 -1
     (nil)
 -> 157)
(barrier 69 68 391)
(code_label 391 69 71 12 54 "" [1 uses])
(note 71 391 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:SI 4 si)
        (reg/v:SI 226 [ ch ])) base64.c:209 -1
     (nil))
(insn 73 72 74 12 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 74 73 75 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 75 74 76 12 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 76 75 77 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 77 76 80 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 80 77 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 78 80 79 13 (set (pc)
        (label_ref 118)) base64.c:210 -1
     (nil)
 -> 118)
(barrier 79 78 409)
(code_label 409 79 81 14 55 "" [1 uses])
(note 81 409 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 14 (set (reg:SI 4 si)
        (reg/v:SI 236 [ ch ])) base64.c:209 -1
     (nil))
(insn 83 82 84 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 84 83 85 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 85 84 86 14 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 86 85 87 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 87 86 90 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 90 87 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 88 90 89 15 (set (pc)
        (label_ref 196)) base64.c:210 -1
     (nil)
 -> 196)
(barrier 89 88 351)
(code_label 351 89 91 16 52 "" [1 uses])
(note 91 351 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (set (reg:SI 4 si)
        (reg/v:SI 202 [ ch ])) base64.c:209 -1
     (nil))
(insn 93 92 94 16 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 94 93 95 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 95 94 96 16 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 96 95 97 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 97 96 100 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 100 97 98 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 98 100 99 17 (set (pc)
        (label_ref 143)) base64.c:210 -1
     (nil)
 -> 143)
(barrier 99 98 101)
(code_label 101 99 102 18 25 "" [1 uses])
(note 102 101 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 1 [0x1]))) base64.c:213 -1
     (nil))
(jump_insn 104 103 598 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) base64.c:213 -1
     (int_list:REG_BR_PROB 2000 (nil))
 -> 139)
(note 598 104 105 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 105 598 106 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ state ])
            (const_int 1 [0x1]))) base64.c:213 -1
     (nil))
(jump_insn 106 105 599 19 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) base64.c:213 -1
     (int_list:REG_BR_PROB 6250 (nil))
 -> 111)
(note 599 106 107 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 107 599 108 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 0 [0]))) base64.c:213 -1
     (nil))
(jump_insn 108 107 600 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) base64.c:213 -1
     (int_list:REG_BR_PROB 6667 (nil))
 -> 118)
(note 600 108 109 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 109 600 110 21 (set (pc)
        (label_ref 220)) base64.c:213 -1
     (nil)
 -> 220)
(barrier 110 109 111)
(code_label 111 110 601 22 33 "" [1 uses])
(note 601 111 112 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 112 601 113 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 2 [0x2]))) base64.c:213 -1
     (nil))
(jump_insn 113 112 602 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) base64.c:213 -1
     (int_list:REG_BR_PROB 4000 (nil))
 -> 168)
(note 602 113 114 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 114 602 115 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 3 [0x3]))) base64.c:213 -1
     (nil))
(jump_insn 115 114 603 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 568)
            (pc))) base64.c:213 612 {*jcc_1}
     (int_list:REG_BR_PROB 6667 (nil))
 -> 568)
(note 603 115 116 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 116 603 117 24 (set (pc)
        (label_ref 220)) base64.c:213 -1
     (nil)
 -> 220)
(barrier 117 116 118)
(code_label 118 117 119 25 28 "" [3 uses])
(note 119 118 120 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 255 [ target ])
            (const_int 0 [0]))) base64.c:215 -1
     (nil))
(jump_insn 121 120 122 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 245)
            (pc))) base64.c:215 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 245)
(note 122 121 123 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 26 (set (reg:DI 98 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 145 [ tarindex ]))) base64.c:216 -1
     (nil))
(insn 124 123 125 26 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.7051 ])
            (reg/v:DI 256 [ targsize ]))) base64.c:216 -1
     (nil))
(jump_insn 125 124 126 26 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:216 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 126 125 127 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 27 (set (reg:DI 262)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:218 -1
     (nil))
(insn 128 127 129 27 (parallel [
            (set (reg:DI 261 [ D.7054 ])
                (minus:DI (reg/v/f:DI 215 [ pos ])
                    (reg:DI 262)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:218 -1
     (nil))
(insn 129 128 130 27 (parallel [
            (set (reg:QI 263)
                (ashift:QI (subreg:QI (reg:DI 261 [ D.7054 ]) 0)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:218 -1
     (nil))
(insn 130 129 131 27 (set (mem:QI (plus:DI (reg/v/f:DI 255 [ target ])
                (reg:DI 98 [ D.7051 ])) [0 *_36+0 S1 A8])
        (reg:QI 263)) base64.c:218 -1
     (nil))
(insn 131 130 132 27 (parallel [
            (set (reg/v/f:DI 192 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 132 131 133 27 (set (reg:QI 168 [ D.7048 ])
        (mem:QI (reg/v/f:DI 216 [ src ]) [0 *src_270+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 133 132 134 27 (set (reg/v:SI 175 [ ch ])
        (sign_extend:SI (reg:QI 168 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 134 133 135 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 175 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 135 134 138 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 224)
(note 138 135 136 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 136 138 137 28 (set (pc)
        (label_ref:DI 539)) base64.c:202 654 {jump}
     (nil)
 -> 539)
(barrier 137 136 139)
(code_label 139 137 140 29 32 "" [1 uses])
(note 140 139 141 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 255 [ target ])
            (const_int 0 [0]))) base64.c:223 -1
     (nil))
(jump_insn 142 141 569 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 573)
            (pc))) base64.c:223 612 {*jcc_1}
     (int_list:REG_BR_PROB 10000 (nil))
 -> 573)
(note 569 142 6 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 6 569 143 30 (set (reg/v/f:DI 192 [ src ])
        (reg/v/f:DI 216 [ src ])) -1
     (nil))
(code_label 143 6 144 31 30 "" [2 uses])
(note 144 143 145 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 31 (set (reg:DI 105 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 145 [ tarindex ]))) base64.c:224 -1
     (nil))
(insn 146 145 147 31 (parallel [
            (set (reg:DI 106 [ D.7051 ])
                (plus:DI (reg:DI 105 [ D.7051 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:224 -1
     (nil))
(insn 147 146 148 31 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 256 [ targsize ])
            (reg:DI 106 [ D.7051 ]))) base64.c:224 -1
     (nil))
(jump_insn 148 147 149 31 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:224 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 149 148 150 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 32 (parallel [
            (set (reg/f:DI 107 [ D.7053 ])
                (plus:DI (reg/v/f:DI 255 [ target ])
                    (reg:DI 105 [ D.7051 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:226 -1
     (nil))
(insn 151 150 152 32 (set (reg:DI 264)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:226 -1
     (nil))
(insn 152 151 153 32 (parallel [
            (set (reg:DI 112 [ D.7054 ])
                (minus:DI (reg/v/f:DI 215 [ pos ])
                    (reg:DI 264)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:226 -1
     (nil))
(insn 153 152 154 32 (parallel [
            (set (reg:DI 265 [ D.7054 ])
                (ashiftrt:DI (reg:DI 112 [ D.7054 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:226 -1
     (nil))
(insn 154 153 155 32 (parallel [
            (set (mem:QI (reg/f:DI 107 [ D.7053 ]) [0 *_47+0 S1 A8])
                (ior:QI (mem:QI (reg/f:DI 107 [ D.7053 ]) [0 *_47+0 S1 A8])
                    (subreg:QI (reg:DI 265 [ D.7054 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:226 -1
     (nil))
(insn 155 154 156 32 (parallel [
            (set (reg:DI 266 [ D.7054 ])
                (ashift:DI (reg:DI 112 [ D.7054 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:227 -1
     (nil))
(insn 156 155 570 32 (set (mem:QI (plus:DI (reg/v/f:DI 255 [ target ])
                (reg:DI 106 [ D.7051 ])) [0 *_60+0 S1 A8])
        (subreg:QI (reg:DI 266 [ D.7054 ]) 0)) base64.c:227 -1
     (nil))
(jump_insn 570 156 571 32 (set (pc)
        (label_ref 157)) -1
     (nil)
 -> 157)
(barrier 571 570 573)
(code_label 573 571 572 33 67 "" [1 uses])
(note 572 573 7 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 7 572 157 33 (set (reg/v/f:DI 192 [ src ])
        (reg/v/f:DI 216 [ src ])) -1
     (nil))
(code_label 157 7 158 34 27 "" [3 uses])
(note 158 157 159 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 34 (parallel [
            (set (reg/v:SI 145 [ tarindex ])
                (plus:SI (reg/v:SI 145 [ tarindex ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:230 -1
     (nil))
(insn 160 159 161 34 (parallel [
            (set (reg/v/f:DI 216 [ src ])
                (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 161 160 162 34 (set (reg:QI 204 [ D.7048 ])
        (mem:QI (reg/v/f:DI 192 [ src ]) [0 *src_395+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 162 161 163 34 (set (reg/v:SI 205 [ ch ])
        (sign_extend:SI (reg:QI 204 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 163 162 164 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 205 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 164 163 167 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 314)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 314)
(note 167 164 165 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(jump_insn 165 167 166 35 (set (pc)
        (label_ref:DI 539)) base64.c:202 654 {jump}
     (nil)
 -> 539)
(barrier 166 165 168)
(code_label 168 166 169 36 26 "" [3 uses])
(note 169 168 170 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 255 [ target ])
            (const_int 0 [0]))) base64.c:234 -1
     (nil))
(jump_insn 171 170 172 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) base64.c:234 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 185)
(note 172 171 173 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 37 (set (reg:DI 120 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 145 [ tarindex ]))) base64.c:235 -1
     (nil))
(insn 174 173 175 37 (parallel [
            (set (reg:DI 121 [ D.7051 ])
                (plus:DI (reg:DI 120 [ D.7051 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:235 -1
     (nil))
(insn 175 174 176 37 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 256 [ targsize ])
            (reg:DI 121 [ D.7051 ]))) base64.c:235 -1
     (nil))
(jump_insn 176 175 177 37 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:235 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 177 176 178 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 38 (parallel [
            (set (reg/f:DI 122 [ D.7053 ])
                (plus:DI (reg/v/f:DI 255 [ target ])
                    (reg:DI 120 [ D.7051 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:237 -1
     (nil))
(insn 179 178 180 38 (set (reg:DI 267)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:237 -1
     (nil))
(insn 180 179 181 38 (parallel [
            (set (reg:DI 127 [ D.7054 ])
                (minus:DI (reg/v/f:DI 215 [ pos ])
                    (reg:DI 267)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:237 -1
     (nil))
(insn 181 180 182 38 (parallel [
            (set (reg:DI 268 [ D.7054 ])
                (ashiftrt:DI (reg:DI 127 [ D.7054 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:237 -1
     (nil))
(insn 182 181 183 38 (parallel [
            (set (mem:QI (reg/f:DI 122 [ D.7053 ]) [0 *_67+0 S1 A8])
                (ior:QI (mem:QI (reg/f:DI 122 [ D.7053 ]) [0 *_67+0 S1 A8])
                    (subreg:QI (reg:DI 268 [ D.7054 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:237 -1
     (nil))
(insn 183 182 184 38 (parallel [
            (set (reg:DI 269 [ D.7054 ])
                (ashift:DI (reg:DI 127 [ D.7054 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:238 -1
     (nil))
(insn 184 183 185 38 (set (mem:QI (plus:DI (reg/v/f:DI 255 [ target ])
                (reg:DI 121 [ D.7051 ])) [0 *_78+0 S1 A8])
        (subreg:QI (reg:DI 269 [ D.7054 ]) 0)) base64.c:238 -1
     (nil))
(code_label 185 184 186 39 38 "" [1 uses])
(note 186 185 187 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 187 186 188 39 (parallel [
            (set (reg/v:SI 145 [ tarindex ])
                (plus:SI (reg/v:SI 145 [ tarindex ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:241 -1
     (nil))
(insn 188 187 189 39 (parallel [
            (set (reg/v/f:DI 217 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 189 188 190 39 (set (reg:QI 194 [ D.7048 ])
        (mem:QI (reg/v/f:DI 216 [ src ]) [0 *src_272+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 190 189 191 39 (set (reg/v:SI 195 [ ch ])
        (sign_extend:SI (reg:QI 194 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 191 190 192 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 195 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 192 191 195 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 293)
(note 195 192 193 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 195 194 40 (set (pc)
        (label_ref:DI 539)) base64.c:202 654 {jump}
     (nil)
 -> 539)
(barrier 194 193 568)
(code_label 568 194 567 41 66 "" [1 uses])
(note 567 568 8 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 8 567 196 41 (set (reg/v/f:DI 217 [ src ])
        (reg/v/f:DI 216 [ src ])) base64.c:213 -1
     (nil))
(code_label 196 8 197 42 29 "" [2 uses])
(note 197 196 198 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 255 [ target ])
            (const_int 0 [0]))) base64.c:245 -1
     (nil))
(jump_insn 199 198 200 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) base64.c:245 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 209)
(note 200 199 201 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 43 (set (reg:DI 135 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 145 [ tarindex ]))) base64.c:246 -1
     (nil))
(insn 202 201 203 43 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 256 [ targsize ])
            (reg:DI 135 [ D.7051 ]))) base64.c:246 -1
     (nil))
(jump_insn 203 202 204 43 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:246 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 204 203 205 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 205 204 206 44 (parallel [
            (set (reg/f:DI 136 [ D.7053 ])
                (plus:DI (reg/v/f:DI 255 [ target ])
                    (reg:DI 135 [ D.7051 ])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:248 -1
     (nil))
(insn 206 205 207 44 (set (reg:DI 271)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:248 -1
     (nil))
(insn 207 206 208 44 (parallel [
            (set (reg:DI 270 [ D.7054 ])
                (minus:DI (reg/v/f:DI 215 [ pos ])
                    (reg:DI 271)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:248 -1
     (nil))
(insn 208 207 209 44 (parallel [
            (set (mem:QI (reg/f:DI 136 [ D.7053 ]) [0 *_84+0 S1 A8])
                (ior:QI (mem:QI (reg/f:DI 136 [ D.7053 ]) [0 *_84+0 S1 A8])
                    (subreg:QI (reg:DI 270 [ D.7054 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) base64.c:248 -1
     (nil))
(code_label 209 208 210 45 40 "" [1 uses])
(note 210 209 211 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 45 (parallel [
            (set (reg/v:SI 145 [ tarindex ])
                (plus:SI (reg/v:SI 145 [ tarindex ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:250 -1
     (nil))
(insn 212 211 213 45 (parallel [
            (set (reg/v/f:DI 216 [ src ])
                (plus:DI (reg/v/f:DI 217 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 213 212 214 45 (set (reg:QI 184 [ D.7048 ])
        (mem:QI (reg/v/f:DI 217 [ src ]) [0 *src_273+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 214 213 215 45 (set (reg/v:SI 185 [ ch ])
        (sign_extend:SI (reg:QI 184 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 215 214 216 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 185 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 216 215 219 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 272)
(note 219 216 217 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(jump_insn 217 219 218 46 (set (pc)
        (label_ref 503)) base64.c:202 -1
     (nil)
 -> 503)
(barrier 218 217 220)
(code_label 220 218 221 47 31 "" [2 uses])
(note 221 220 222 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(call_insn 222 221 223 47 (call (mem:QI (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x2b4da7260360 abort>) [0 __builtin_abort S1 A8])
        (const_int 0 [0])) base64.c:254 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("abort") [flags 0x41]  <function_decl 0x2b4da7260360 abort>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 223 222 224)
(code_label 224 223 225 48 35 "" [1 uses])
(note 225 224 226 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 48 (set (reg/f:DI 172 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 227 226 228 48 (set (reg:DI 272 [ D.7051 ])
        (sign_extend:DI (reg:QI 168 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 228 227 229 48 (set (reg:HI 274)
        (mem:HI (plus:DI (mult:DI (reg:DI 272 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 172 [ D.7050 ])) [2 *_151+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 229 228 230 48 (parallel [
            (set (reg:HI 273 [ D.7052 ])
                (and:HI (reg:HI 274)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 272 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 172 [ D.7050 ])) [2 *_151+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 230 229 231 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 273 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 231 230 232 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 335)
(note 232 231 233 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 233 232 234 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 175 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 234 233 235 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:206 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 235 234 236 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 50 (set (reg:SI 4 si)
        (reg/v:SI 175 [ ch ])) base64.c:209 -1
     (nil))
(insn 237 236 238 50 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 238 237 239 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 239 238 240 50 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 240 239 241 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 241 240 244 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 244 241 242 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(jump_insn 242 244 243 51 (set (pc)
        (label_ref 143)) base64.c:210 -1
     (nil)
 -> 143)
(barrier 243 242 245)
(code_label 245 243 246 52 34 "" [1 uses])
(note 246 245 247 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 52 (parallel [
            (set (reg/v/f:DI 192 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 248 247 249 52 (set (reg:QI 176 [ D.7048 ])
        (mem:QI (reg/v/f:DI 216 [ src ]) [0 *src_270+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 249 248 250 52 (set (reg/v:SI 177 [ ch ])
        (sign_extend:SI (reg:QI 176 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 250 249 251 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 177 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 251 250 252 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:202 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 252 251 253 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 53 (set (reg/f:DI 178 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 254 253 255 53 (set (reg:DI 275 [ D.7051 ])
        (sign_extend:DI (reg:QI 176 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 255 254 256 53 (set (reg:HI 277)
        (mem:HI (plus:DI (mult:DI (reg:DI 275 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 178 [ D.7050 ])) [2 *_167+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 256 255 257 53 (parallel [
            (set (reg:HI 276 [ D.7052 ])
                (and:HI (reg:HI 277)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 275 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 178 [ D.7050 ])) [2 *_167+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 257 256 258 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 276 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 258 257 259 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 355)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 355)
(note 259 258 260 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 177 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 261 260 262 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:206 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 262 261 263 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 55 (set (reg:SI 4 si)
        (reg/v:SI 177 [ ch ])) base64.c:209 -1
     (nil))
(insn 264 263 265 55 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 265 264 266 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 266 265 267 55 (set (reg/v/f:DI 250 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 267 266 268 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 250 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 268 267 271 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 271 268 269 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(jump_insn 269 271 270 56 (set (pc)
        (label_ref 157)) base64.c:210 -1
     (nil)
 -> 157)
(barrier 270 269 272)
(code_label 272 270 273 57 41 "" [1 uses])
(note 273 272 274 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 57 (set (reg/f:DI 186 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 275 274 276 57 (set (reg:DI 278 [ D.7051 ])
        (sign_extend:DI (reg:QI 184 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 276 275 277 57 (set (reg:HI 280)
        (mem:HI (plus:DI (mult:DI (reg:DI 278 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 186 [ D.7050 ])) [2 *_188+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 277 276 278 57 (parallel [
            (set (reg:HI 279 [ D.7052 ])
                (and:HI (reg:HI 280)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 278 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 186 [ D.7050 ])) [2 *_188+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 278 277 279 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 279 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 279 278 280 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 375)
(note 280 279 281 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 281 280 282 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 185 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 282 281 283 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:206 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 283 282 284 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 59 (set (reg:SI 4 si)
        (reg/v:SI 185 [ ch ])) base64.c:209 -1
     (nil))
(insn 285 284 286 59 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 286 285 287 59 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 287 286 288 59 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 288 287 289 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 289 288 292 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 292 289 290 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(jump_insn 290 292 291 60 (set (pc)
        (label_ref 118)) base64.c:210 -1
     (nil)
 -> 118)
(barrier 291 290 293)
(code_label 293 291 294 61 39 "" [1 uses])
(note 294 293 295 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 61 (set (reg/f:DI 196 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 296 295 297 61 (set (reg:DI 281 [ D.7051 ])
        (sign_extend:DI (reg:QI 194 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 297 296 298 61 (set (reg:HI 283)
        (mem:HI (plus:DI (mult:DI (reg:DI 281 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 196 [ D.7050 ])) [2 *_209+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 298 297 299 61 (parallel [
            (set (reg:HI 282 [ D.7052 ])
                (and:HI (reg:HI 283)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 281 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 196 [ D.7050 ])) [2 *_209+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 299 298 300 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 282 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 300 299 301 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 395)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 395)
(note 301 300 302 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 195 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 303 302 304 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 543)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 543)
(note 304 303 305 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 63 (set (reg:SI 4 si)
        (reg/v:SI 195 [ ch ])) base64.c:209 -1
     (nil))
(insn 306 305 307 63 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 307 306 308 63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 308 307 309 63 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 309 308 310 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 310 309 313 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 313 310 311 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 311 313 312 64 (set (pc)
        (label_ref 196)) base64.c:210 -1
     (nil)
 -> 196)
(barrier 312 311 314)
(code_label 314 312 315 65 37 "" [1 uses])
(note 315 314 316 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 65 (set (reg/f:DI 206 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) base64.c:203 -1
     (nil))
(insn 317 316 318 65 (set (reg:DI 284 [ D.7051 ])
        (sign_extend:DI (reg:QI 204 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 318 317 319 65 (set (reg:HI 286)
        (mem:HI (plus:DI (mult:DI (reg:DI 284 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 206 [ D.7050 ])) [2 *_230+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 319 318 320 65 (parallel [
            (set (reg:HI 285 [ D.7052 ])
                (and:HI (reg:HI 286)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 284 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 206 [ D.7050 ])) [2 *_230+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 320 319 321 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 285 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 321 320 322 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) base64.c:203 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 417)
(note 322 321 323 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 205 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 324 323 325 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 549)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 549)
(note 325 324 326 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 67 (set (reg:SI 4 si)
        (reg/v:SI 205 [ ch ])) base64.c:209 -1
     (nil))
(insn 327 326 328 67 (set (reg:DI 5 di)
        (symbol_ref:DI ("Base64") [flags 0x2]  <var_decl 0x2b4da7495990 Base64>)) base64.c:209 -1
     (nil))
(call_insn/i 328 327 329 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>) [0 __builtin_strchr S1 A8])
            (const_int 0 [0]))) base64.c:209 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strchr") [flags 0x41]  <function_decl 0x2b4da7246d80 __builtin_strchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 329 328 330 67 (set (reg/v/f:DI 215 [ pos ])
        (reg:DI 0 ax)) base64.c:209 -1
     (nil))
(insn 330 329 331 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 215 [ pos ])
            (const_int 0 [0]))) base64.c:210 -1
     (nil))
(jump_insn 331 330 334 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:210 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 334 331 332 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(jump_insn 332 334 333 68 (set (pc)
        (label_ref 168)) base64.c:210 -1
     (nil)
 -> 168)
(barrier 333 332 335)
(code_label 335 333 336 69 43 "" [1 uses])
(note 336 335 337 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 69 (parallel [
            (set (reg/v/f:DI 192 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 338 337 339 69 (set (reg:QI 203 [ D.7048 ])
        (mem:QI (plus:DI (reg/v/f:DI 216 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_270 + 1B]+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 339 338 340 69 (set (reg/v:SI 202 [ ch ])
        (sign_extend:SI (reg:QI 203 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 340 339 341 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 202 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 341 340 342 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:202 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 342 341 343 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 70 (set (reg:DI 287 [ D.7051 ])
        (sign_extend:DI (reg:QI 203 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 344 343 345 70 (set (reg:HI 289)
        (mem:HI (plus:DI (mult:DI (reg:DI 287 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 172 [ D.7050 ])) [2 *_245+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 345 344 346 70 (parallel [
            (set (reg:HI 288 [ D.7052 ])
                (and:HI (reg:HI 289)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 287 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 172 [ D.7050 ])) [2 *_245+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 346 345 347 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 288 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 347 346 348 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 575)
            (pc))) base64.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 575)
(note 348 347 349 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 350 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 202 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 350 349 354 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 559)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 559)
(note 354 350 352 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(jump_insn 352 354 353 72 (set (pc)
        (label_ref 351)) base64.c:206 -1
     (nil)
 -> 351)
(barrier 353 352 355)
(code_label 355 353 356 73 44 "" [1 uses])
(note 356 355 357 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 73 (parallel [
            (set (reg/v/f:DI 192 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 358 357 359 73 (set (reg:QI 218 [ D.7048 ])
        (mem:QI (plus:DI (reg/v/f:DI 216 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_270 + 1B]+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 359 358 360 73 (set (reg/v:SI 219 [ ch ])
        (sign_extend:SI (reg:QI 218 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 360 359 361 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 219 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 361 360 362 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:202 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 362 361 363 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 74 (set (reg:DI 290 [ D.7051 ])
        (sign_extend:DI (reg:QI 218 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 364 363 365 74 (set (reg:HI 292)
        (mem:HI (plus:DI (mult:DI (reg:DI 290 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 178 [ D.7050 ])) [2 *_285+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 365 364 366 74 (parallel [
            (set (reg:HI 291 [ D.7052 ])
                (and:HI (reg:HI 292)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 290 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 178 [ D.7050 ])) [2 *_285+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 366 365 367 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 291 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 367 366 368 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 579)
            (pc))) base64.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 579)
(note 368 367 369 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 219 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 370 369 374 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 559)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 559)
(note 374 370 372 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(jump_insn 372 374 373 76 (set (pc)
        (label_ref 371)) base64.c:206 -1
     (nil)
 -> 371)
(barrier 373 372 375)
(code_label 375 373 376 77 45 "" [1 uses])
(note 376 375 377 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 77 (parallel [
            (set (reg/v/f:DI 216 [ src ])
                (plus:DI (reg/v/f:DI 217 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 378 377 379 77 (set (reg:QI 225 [ D.7048 ])
        (mem:QI (plus:DI (reg/v/f:DI 217 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_273 + 1B]+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 379 378 380 77 (set (reg/v:SI 226 [ ch ])
        (sign_extend:SI (reg:QI 225 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 380 379 381 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 226 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 381 380 382 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 503)
(note 382 381 383 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 78 (set (reg:DI 293 [ D.7051 ])
        (sign_extend:DI (reg:QI 225 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 384 383 385 78 (set (reg:HI 295)
        (mem:HI (plus:DI (mult:DI (reg:DI 293 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 186 [ D.7050 ])) [2 *_313+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 385 384 386 78 (parallel [
            (set (reg:HI 294 [ D.7052 ])
                (and:HI (reg:HI 295)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 293 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 186 [ D.7050 ])) [2 *_313+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 386 385 387 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 294 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 387 386 388 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 583)
            (pc))) base64.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 583)
(note 388 387 389 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 226 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 390 389 394 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 559)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 559)
(note 394 390 392 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(jump_insn 392 394 393 80 (set (pc)
        (label_ref 391)) base64.c:206 -1
     (nil)
 -> 391)
(barrier 393 392 395)
(code_label 395 393 396 81 46 "" [1 uses])
(note 396 395 397 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 397 396 398 81 (parallel [
            (set (reg/v/f:DI 217 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 398 397 399 81 (set (reg:QI 235 [ D.7048 ])
        (mem:QI (plus:DI (reg/v/f:DI 216 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_272 + 1B]+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 399 398 400 81 (set (reg/v:SI 236 [ ch ])
        (sign_extend:SI (reg:QI 235 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 400 399 401 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 236 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 401 400 402 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:202 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 402 401 403 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 82 (set (reg:DI 296 [ D.7051 ])
        (sign_extend:DI (reg:QI 235 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 404 403 405 82 (set (reg:HI 298)
        (mem:HI (plus:DI (mult:DI (reg:DI 296 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 196 [ D.7050 ])) [2 *_341+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 405 404 406 82 (parallel [
            (set (reg:HI 297 [ D.7052 ])
                (and:HI (reg:HI 298)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 296 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 196 [ D.7050 ])) [2 *_341+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 406 405 407 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 297 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 407 406 408 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 587)
            (pc))) base64.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 587)
(note 408 407 410 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 410 408 411 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 236 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 411 410 412 83 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 409)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 409)
(note 412 411 413 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 414 84 (parallel [
            (set (reg/v/f:DI 160 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:264 -1
     (nil))
(insn 414 413 415 84 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 2 [0x2])) [0 MEM[(const char *)src_272 + 2B]+0 S1 A8]))) base64.c:264 -1
     (nil))
(jump_insn 415 414 416 84 (set (pc)
        (label_ref 477)) base64.c:264 -1
     (nil)
 -> 477)
(barrier 416 415 417)
(code_label 417 416 418 85 48 "" [1 uses])
(note 418 417 419 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 85 (parallel [
            (set (reg/v/f:DI 216 [ src ])
                (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 420 419 421 85 (set (reg:QI 242 [ D.7048 ])
        (mem:QI (plus:DI (reg/v/f:DI 192 [ src ])
                (const_int 1 [0x1])) [0 MEM[(const char *)src_395 + 1B]+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 421 420 422 85 (set (reg/v:SI 243 [ ch ])
        (sign_extend:SI (reg:QI 242 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 422 421 423 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 243 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 423 422 424 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 539)
            (pc))) base64.c:202 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 539)
(note 424 423 425 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 425 424 426 86 (set (reg:DI 299 [ D.7051 ])
        (sign_extend:DI (reg:QI 242 [ D.7048 ]))) base64.c:203 -1
     (nil))
(insn 426 425 427 86 (set (reg:HI 301)
        (mem:HI (plus:DI (mult:DI (reg:DI 299 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 206 [ D.7050 ])) [2 *_369+0 S2 A16])) base64.c:203 -1
     (nil))
(insn 427 426 428 86 (parallel [
            (set (reg:HI 300 [ D.7052 ])
                (and:HI (reg:HI 301)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:203 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 299 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 206 [ D.7050 ])) [2 *_369+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 428 427 429 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 300 [ D.7052 ])
            (const_int 0 [0]))) base64.c:203 -1
     (nil))
(jump_insn 429 428 430 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 591)
            (pc))) base64.c:203 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 591)
(note 430 429 432 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 432 430 433 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 243 [ ch ])
            (const_int 61 [0x3d]))) base64.c:206 -1
     (nil))
(jump_insn 433 432 434 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 431)
            (pc))) base64.c:206 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 431)
(note 434 433 435 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 88 (parallel [
            (set (reg/v/f:DI 153 [ src ])
                (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:264 -1
     (nil))
(insn 436 435 437 88 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 2 [0x2])) [0 MEM[(const char *)src_395 + 2B]+0 S1 A8]))) base64.c:264 -1
     (nil))
(jump_insn 437 436 438 88 (set (pc)
        (label_ref 529)) base64.c:264 -1
     (nil)
 -> 529)
(barrier 438 437 575)
(code_label 575 438 574 89 68 "" [1 uses])
(note 574 575 9 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 9 574 10 89 (set (reg/v/f:DI 216 [ src ])
        (reg/v/f:DI 192 [ src ])) base64.c:202 -1
     (nil))
(insn 10 9 576 89 (set (reg/v:SI 87 [ state ])
        (const_int 1 [0x1])) base64.c:220 -1
     (nil))
(jump_insn 576 10 577 89 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 577 576 579)
(code_label 579 577 578 90 69 "" [1 uses])
(note 578 579 11 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 11 578 12 90 (set (reg/v/f:DI 216 [ src ])
        (reg/v/f:DI 192 [ src ])) base64.c:202 -1
     (nil))
(insn 12 11 580 90 (set (reg/v:SI 87 [ state ])
        (const_int 1 [0x1])) base64.c:220 -1
     (nil))
(jump_insn 580 12 581 90 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 581 580 583)
(code_label 583 581 582 91 70 "" [1 uses])
(note 582 583 13 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 13 582 584 91 (set (reg/v:SI 87 [ state ])
        (const_int 0 [0])) base64.c:251 -1
     (nil))
(jump_insn 584 13 585 91 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 585 584 587)
(code_label 587 585 586 92 71 "" [1 uses])
(note 586 587 14 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 14 586 15 92 (set (reg/v/f:DI 216 [ src ])
        (reg/v/f:DI 217 [ src ])) base64.c:202 -1
     (nil))
(insn 15 14 588 92 (set (reg/v:SI 87 [ state ])
        (const_int 3 [0x3])) base64.c:242 -1
     (nil))
(jump_insn 588 15 589 92 (set (pc)
        (label_ref 439)) -1
     (nil)
 -> 439)
(barrier 589 588 591)
(code_label 591 589 590 93 72 "" [1 uses])
(note 590 591 16 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 16 590 439 93 (set (reg/v:SI 87 [ state ])
        (const_int 2 [0x2])) base64.c:231 -1
     (nil))
(code_label 439 16 440 94 22 "" [5 uses])
(note 440 439 17 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 17 440 441 94 (set (reg/v/f:DI 254 [ src ])
        (reg/v/f:DI 216 [ src ])) base64.c:231 -1
     (nil))
(code_label 441 17 442 95 21 "" [1 uses])
(note 442 441 443 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 444 95 (parallel [
            (set (reg/v/f:DI 216 [ src ])
                (plus:DI (reg/v/f:DI 254 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:202 -1
     (nil))
(insn 444 443 445 95 (set (reg:QI 89 [ D.7048 ])
        (mem:QI (reg/v/f:DI 254 [ src ]) [0 *src_1+0 S1 A8])) base64.c:202 -1
     (nil))
(insn 445 444 447 95 (set (reg/v:SI 90 [ ch ])
        (sign_extend:SI (reg:QI 89 [ D.7048 ]))) base64.c:202 -1
     (nil))
(insn 447 445 448 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ ch ])
            (const_int 0 [0]))) base64.c:202 -1
     (nil))
(jump_insn 448 447 449 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 446)
            (pc))) base64.c:202 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 446)
(note 449 448 450 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 0 [0]))) base64.c:305 -1
     (nil))
(jump_insn 451 450 454 96 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:305 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 539)
(note 454 451 452 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(jump_insn 452 454 453 97 (set (pc)
        (label_ref 503)) -1
     (nil)
 -> 503)
(barrier 453 452 464)
(code_label 464 453 455 98 61 "" [2 uses])
(note 455 464 456 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 98 (set (reg:DI 302 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 162 [ ch ]))) base64.c:273 -1
     (nil))
(insn 457 456 458 98 (set (reg:HI 304)
        (mem:HI (plus:DI (mult:DI (reg:DI 302 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 232 [ D.7050 ])) [2 *_104+0 S2 A16])) base64.c:273 -1
     (nil))
(insn 458 457 459 98 (parallel [
            (set (reg:HI 303 [ D.7052 ])
                (and:HI (reg:HI 304)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:273 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 302 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 232 [ D.7050 ])) [2 *_104+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 459 458 460 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 303 [ D.7052 ])
            (const_int 0 [0]))) base64.c:273 -1
     (nil))
(jump_insn 460 459 461 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) base64.c:273 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 470)
(note 461 460 462 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 463 99 (parallel [
            (set (reg/v/f:DI 153 [ src ])
                (plus:DI (reg/v/f:DI 153 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:272 -1
     (nil))
(insn 463 462 465 99 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 153 [ src ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: src_107, offset: -1B]+0 S1 A8]))) base64.c:272 -1
     (nil))
(insn 465 463 466 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ ch ])
            (const_int 0 [0]))) base64.c:272 -1
     (nil))
(jump_insn 466 465 469 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) base64.c:272 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 464)
(note 469 466 467 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(jump_insn 467 469 468 100 (set (pc)
        (label_ref 539)) -1
     (nil)
 -> 539)
(barrier 468 467 470)
(code_label 470 468 471 101 60 "" [1 uses])
(note 471 470 472 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ ch ])
            (const_int 61 [0x3d]))) base64.c:276 -1
     (nil))
(jump_insn 473 472 474 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:276 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 539)
(note 474 473 475 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 102 (parallel [
            (set (reg/v/f:DI 160 [ src ])
                (plus:DI (reg/v/f:DI 153 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:278 -1
     (nil))
(insn 476 475 477 102 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (reg/v/f:DI 153 [ src ]) [0 *src_157+0 S1 A8]))) base64.c:278 -1
     (nil))
(code_label 477 476 478 103 56 "" [3 uses])
(note 478 477 479 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ ch ])
            (const_int 0 [0]))) base64.c:287 -1
     (nil))
(jump_insn 480 479 481 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) base64.c:287 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 495)
(note 481 480 482 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 492 104 (set (reg/f:DI 233 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) -1
     (nil))
(code_label 492 482 483 105 63 "" [1 uses])
(note 483 492 484 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 105 (set (reg:DI 305 [ D.7051 ])
        (sign_extend:DI (reg/v:SI 162 [ ch ]))) base64.c:288 -1
     (nil))
(insn 485 484 486 105 (set (reg:HI 307)
        (mem:HI (plus:DI (mult:DI (reg:DI 305 [ D.7051 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 233 [ D.7050 ])) [2 *_117+0 S2 A16])) base64.c:288 -1
     (nil))
(insn 486 485 487 105 (parallel [
            (set (reg:HI 306 [ D.7052 ])
                (and:HI (reg:HI 307)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:288 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 305 [ D.7051 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 233 [ D.7050 ])) [2 *_117+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 487 486 488 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 306 [ D.7052 ])
            (const_int 0 [0]))) base64.c:288 -1
     (nil))
(jump_insn 488 487 489 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:288 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 539)
(note 489 488 490 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 106 (parallel [
            (set (reg/v/f:DI 160 [ src ])
                (plus:DI (reg/v/f:DI 160 [ src ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:287 -1
     (nil))
(insn 491 490 493 106 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 160 [ src ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: src_119, offset: -1B]+0 S1 A8]))) base64.c:287 -1
     (nil))
(insn 493 491 494 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ ch ])
            (const_int 0 [0]))) base64.c:287 -1
     (nil))
(jump_insn 494 493 495 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 492)
            (pc))) base64.c:287 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 492)
(code_label 495 494 496 107 62 "" [1 uses])
(note 496 495 497 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 255 [ target ])
            (const_int 0 [0]))) base64.c:297 -1
     (nil))
(jump_insn 498 497 499 107 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) base64.c:297 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 503)
(note 499 498 500 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 108 (set (reg:DI 308 [ D.7057 ])
        (sign_extend:DI (reg/v:SI 145 [ tarindex ]))) base64.c:297 -1
     (nil))
(insn 501 500 502 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 255 [ target ])
                    (reg:DI 308 [ D.7057 ])) [0 *_123+0 S1 A8])
            (const_int 0 [0]))) base64.c:297 -1
     (nil))
(jump_insn 502 501 503 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:297 -1
     (int_list:REG_BR_PROB 400 (nil))
 -> 539)
(code_label 503 502 504 109 42 "" [6 uses])
(note 504 503 20 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 20 504 592 109 (set (reg:SI 88 [ D.7047 ])
        (reg/v:SI 145 [ tarindex ])) base64.c:309 -1
     (nil))
(jump_insn 592 20 593 109 (set (pc)
        (label_ref 505)) base64.c:309 -1
     (nil)
 -> 505)
(barrier 593 592 595)
(code_label 595 593 594 110 73 "" [1 uses])
(note 594 595 22 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 22 594 505 110 (set (reg:SI 88 [ D.7047 ])
        (const_int -1 [0xffffffffffffffff])) base64.c:268 -1
     (nil))
(code_label 505 22 506 111 64 "" [3 uses])
(note 506 505 507 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 111 (set (reg:SI 253 [ <retval> ])
        (reg:SI 88 [ D.7047 ])) -1
     (nil))
(jump_insn 508 507 509 111 (set (pc)
        (label_ref 563)) -1
     (nil)
 -> 563)
(barrier 509 508 510)
(code_label 510 509 511 112 23 "" [1 uses])
(note 511 510 512 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 112 (parallel [
            (set (reg/v/f:DI 160 [ src ])
                (plus:DI (reg/v/f:DI 254 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:264 -1
     (nil))
(insn 513 512 514 112 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 254 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)src_1 + 1B]+0 S1 A8]))) base64.c:264 -1
     (nil))
(insn 514 513 515 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 2 [0x2]))) base64.c:265 -1
     (nil))
(jump_insn 515 514 604 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 597)
            (pc))) base64.c:265 612 {*jcc_1}
     (int_list:REG_BR_PROB 1928 (nil))
 -> 597)
(note 604 515 516 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 516 604 517 113 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ state ])
            (const_int 2 [0x2]))) base64.c:265 -1
     (nil))
(jump_insn 517 516 605 113 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 524)
            (pc))) base64.c:265 -1
     (int_list:REG_BR_PROB 6205 (nil))
 -> 524)
(note 605 517 518 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 518 605 519 114 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 87 [ state ])
            (const_int 0 [0]))) base64.c:265 -1
     (nil))
(jump_insn 519 518 606 114 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) base64.c:265 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 503)
(note 606 519 520 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(jump_insn 520 606 521 115 (set (pc)
        (label_ref:DI 595)) base64.c:265 654 {jump}
     (nil)
 -> 595)
(barrier 521 520 524)
(code_label 524 521 608 116 65 "" [1 uses])
(note 608 524 525 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 525 608 526 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ state ])
            (const_int 3 [0x3]))) base64.c:265 -1
     (nil))
(jump_insn 526 525 609 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 477)
            (pc))) base64.c:265 -1
     (int_list:REG_BR_PROB 3887 (nil))
 -> 477)
(note 609 526 527 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(jump_insn 527 609 528 117 (set (pc)
        (label_ref 503)) base64.c:265 -1
     (nil)
 -> 503)
(barrier 528 527 597)
(code_label 597 528 596 118 74 "" [1 uses])
(note 596 597 24 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 24 596 529 118 (set (reg/v/f:DI 153 [ src ])
        (reg/v/f:DI 160 [ src ])) base64.c:264 -1
     (nil))
(code_label 529 24 530 119 58 "" [2 uses])
(note 530 529 531 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 531 530 532 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 162 [ ch ])
            (const_int 0 [0]))) base64.c:272 -1
     (nil))
(jump_insn 532 531 533 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 539)
            (pc))) base64.c:272 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 539)
(note 533 532 534 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 120 (set (reg/f:DI 232 [ D.7050 ])
        (mem/f:DI (reg/f:DI 91 [ D.7049 ]) [1 *_21+0 S8 A64])) -1
     (nil))
(jump_insn 535 534 536 120 (set (pc)
        (label_ref 464)) -1
     (nil)
 -> 464)
(barrier 536 535 539)
(code_label 539 536 540 122 24 "" [32 uses])
(note 540 539 21 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 21 540 541 122 (set (reg:SI 88 [ D.7047 ])
        (const_int -1 [0xffffffffffffffff])) base64.c:306 -1
     (nil))
(jump_insn 541 21 542 122 (set (pc)
        (label_ref 505)) -1
     (nil)
 -> 505)
(barrier 542 541 543)
(code_label 543 542 544 123 47 "" [1 uses])
(note 544 543 545 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 123 (parallel [
            (set (reg/v/f:DI 160 [ src ])
                (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:264 -1
     (nil))
(insn 546 545 547 123 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 216 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)src_272 + 1B]+0 S1 A8]))) base64.c:264 -1
     (nil))
(jump_insn 547 546 548 123 (set (pc)
        (label_ref 477)) base64.c:264 -1
     (nil)
 -> 477)
(barrier 548 547 549)
(code_label 549 548 550 124 49 "" [1 uses])
(note 550 549 551 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 551 550 552 124 (parallel [
            (set (reg/v/f:DI 153 [ src ])
                (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) base64.c:264 -1
     (nil))
(insn 552 551 553 124 (set (reg/v:SI 162 [ ch ])
        (sign_extend:SI (mem:QI (plus:DI (reg/v/f:DI 192 [ src ])
                    (const_int 1 [0x1])) [0 MEM[(const char *)src_395 + 1B]+0 S1 A8]))) base64.c:264 -1
     (nil))
(jump_insn 553 552 554 124 (set (pc)
        (label_ref 529)) base64.c:264 -1
     (nil)
 -> 529)
(barrier 554 553 559)
(code_label 559 554 560 126 51 "" [3 uses])
(note 560 559 23 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 23 560 561 126 (set (reg:SI 88 [ D.7047 ])
        (const_int -1 [0xffffffffffffffff])) base64.c:268 -1
     (nil))
(jump_insn 561 23 562 126 (set (pc)
        (label_ref 505)) base64.c:264 -1
     (nil)
 -> 505)
(barrier 562 561 563)
(code_label 563 562 566 127 20 "" [1 uses])
(note 566 563 564 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 564 566 565 127 (set (reg/i:SI 0 ax)
        (reg:SI 253 [ <retval> ])) base64.c:310 -1
     (nil))
(insn 565 564 0 127 (use (reg/i:SI 0 ax)) base64.c:310 -1
     (nil))
