
;; Function known_compare (known_compare, funcdef_no=60, decl_uid=12973, cgraph_uid=63, symbol_order=82)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 21.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 91 [ p1 ])
        (reg:DI 5 di [ p1 ])) nsswitch.c:318 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ p2 ])
        (reg:DI 4 si [ p2 ])) nsswitch.c:318 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ p1 ])
            (reg/v/f:DI 92 [ p2 ]))) nsswitch.c:319 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) nsswitch.c:319 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 18)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg/f:DI 93)
        (mem/f:DI (reg/v/f:DI 91 [ p1 ]) [3 MEM[(const char * const *)p1_2(D)]+0 S8 A64])) nsswitch.c:319 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 94)
        (mem/f:DI (reg/v/f:DI 92 [ p2 ]) [3 MEM[(const char * const *)p2_3(D)]+0 S8 A64])) nsswitch.c:319 -1
     (nil))
(insn 13 12 14 4 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 92 [ p2 ]) [3 MEM[(const char * const *)p2_3(D)]+0 S8 A64])) nsswitch.c:319 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 91 [ p1 ]) [3 MEM[(const char * const *)p1_2(D)]+0 S8 A64])) nsswitch.c:319 -1
     (nil))
(call_insn/j/i 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:319 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 16 15 18)
(code_label 18 16 19 5 2 "" [1 uses])
(note 19 18 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 20 5 (set (reg:SI 87 [ D.13642 ])
        (const_int 0 [0])) nsswitch.c:319 -1
     (nil))
(insn 20 5 24 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.13642 ])) nsswitch.c:319 -1
     (nil))
(insn 24 20 25 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) nsswitch.c:321 -1
     (nil))
(insn 25 24 0 5 (use (reg/i:SI 0 ax)) nsswitch.c:321 -1
     (nil))

;; Function nss_parse_service_list (nss_parse_service_list, funcdef_no=64, decl_uid=12846, cgraph_uid=68, symbol_order=87)

Partition 0: size 8 align 8
	result

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; Generating RTL for gimple basic block 65

;; Generating RTL for gimple basic block 66

;; Generating RTL for gimple basic block 67

;; Generating RTL for gimple basic block 68
Edge 15->18 redirected to 77
Edge 23->25 redirected to 78
Edge 33->37 redirected to 80
Edge 34->37 redirected to 81
Edge 38->37 redirected to 82
Edge 52->57 redirected to 84
Edge 54->57 redirected to 85
Purged non-fallthru edges from bb 87
Purged non-fallthru edges from bb 90
Purged non-fallthru edges from bb 92


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 12->14 redirected to 15
Forwarding edge 13->14 to 15 failed.
Deleted label in block 14.
Forwarding edge 20->21 to 23 failed.
Edge 37->39 redirected to 40
Forwarding edge 38->39 to 40 failed.
Deleted label in block 39.
Forwarding edge 43->44 to 90 failed.
Forwarding edge 51->52 to 57 failed.
Forwarding edge 53->54 to 90 failed.
Edge 65->67 redirected to 68
Forwarding edge 66->67 to 68 failed.
Deleted label in block 67.
Forwarding edge 70->71 to 90 failed.
Forwarding edge 73->74 to 90 failed.
Removing jump 444.
Merging block 92 into block 91...
Merged blocks 91 and 92.
Merged 91 and 92 without moving.


try_optimize_cfg iteration 2

Forwarding edge 13->14 to 15 failed.
Forwarding edge 20->21 to 23 failed.
Forwarding edge 38->39 to 40 failed.
Forwarding edge 43->44 to 90 failed.
Forwarding edge 51->52 to 57 failed.
Forwarding edge 53->54 to 90 failed.
Forwarding edge 66->67 to 68 failed.
Forwarding edge 70->71 to 90 failed.
Forwarding edge 73->74 to 90 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 41 NOTE_INSN_DELETED)
(note 41 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 41 25 2 (set (reg/v/f:DI 247 [ line ])
        (reg:DI 5 di [ line ])) nsswitch.c:609 -1
     (nil))
(note 25 24 43 2 NOTE_INSN_FUNCTION_BEG)
(insn 43 25 44 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 result+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:610 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 248)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_B") [flags 0x60]  <var_decl 0x2ac2788a2e10 __libc_tsd_CTYPE_B>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) -1
     (nil))
(insn 45 44 26 2 (set (reg/f:DI 243 [ D.13687 ])
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 248)) [3 MEM[(const short unsigned int * *)&__libc_tsd_CTYPE_B]+0 S8 A64])) -1
     (nil))
(insn 26 45 46 2 (parallel [
            (set (reg/v/f:DI 112 [ nextp ])
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:610 -1
     (nil))
(jump_insn 46 26 47 2 (set (pc)
        (label_ref 51)) -1
     (nil)
 -> 51)
(barrier 47 46 54)
(code_label 54 47 48 4 6 "" [1 uses])
(note 48 54 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 433 4 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:618 -1
     (nil))
(code_label 433 49 50 5 45 "" [1 uses])
(note 50 433 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 51 50 52 6 5 "" [1 uses])
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 55 6 (set (reg:QI 117 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 *line_1+0 S1 A8])) nsswitch.c:617 -1
     (nil))
(insn 55 53 56 6 (set (reg:DI 249 [ D.13686 ])
        (sign_extend:DI (reg:QI 117 [ D.13685 ]))) nsswitch.c:617 -1
     (nil))
(insn 56 55 57 6 (set (reg:HI 251)
        (mem:HI (plus:DI (mult:DI (reg:DI 249 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_30+0 S2 A16])) nsswitch.c:617 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg:HI 250 [ D.13684 ])
                (and:HI (reg:HI 251)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:617 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 249 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_30+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 58 57 59 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 250 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:617 -1
     (nil))
(jump_insn 59 58 60 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) nsswitch.c:617 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 54)
(note 60 59 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:619 -1
     (nil))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) nsswitch.c:619 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 66)
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ D.13685 ])
            (const_int 91 [0x5b]))) nsswitch.c:625 -1
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) nsswitch.c:625 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 71)
(code_label 66 65 67 9 7 "" [2 uses])
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg/f:DI 114 [ D.13683 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 result+0 S8 A64])) nsswitch.c:621 -1
     (nil))
(jump_insn 69 68 70 9 (set (pc)
        (label_ref 441)) nsswitch.c:621 -1
     (nil)
 -> 441)
(barrier 70 69 71)
(code_label 71 70 72 10 8 "" [1 uses])
(note 72 71 27 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 27 72 79 10 (set (reg/v/f:DI 129 [ line ])
        (reg/v/f:DI 247 [ line ])) nsswitch.c:625 -1
     (nil))
(code_label 79 27 73 11 11 "" [1 uses])
(note 73 79 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 11 (parallel [
            (set (reg/v/f:DI 129 [ line ])
                (plus:DI (reg/v/f:DI 129 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:626 -1
     (nil))
(insn 75 74 76 11 (set (reg:QI 122 [ D.13685 ])
        (mem:QI (reg/v/f:DI 129 [ line ]) [0 MEM[base: line_43, offset: 0B]+0 S1 A8])) nsswitch.c:625 -1
     (nil))
(insn 76 75 77 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:625 -1
     (nil))
(jump_insn 77 76 78 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) nsswitch.c:625 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 92)
(note 78 77 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 78 81 12 (set (reg:DI 252 [ D.13686 ])
        (sign_extend:DI (reg:QI 122 [ D.13685 ]))) nsswitch.c:625 -1
     (nil))
(insn 81 80 82 12 (set (reg:HI 254)
        (mem:HI (plus:DI (mult:DI (reg:DI 252 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_40+0 S2 A16])) nsswitch.c:625 -1
     (nil))
(insn 82 81 83 12 (parallel [
            (set (reg:HI 253)
                (lshiftrt:HI (reg:HI 254)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:625 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 252 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_40+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 83 82 84 12 (parallel [
            (set (reg:HI 255)
                (xor:HI (reg:HI 253)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:625 -1
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:QI 256 [ D.13682 ])
                (and:QI (subreg:QI (reg:HI 255) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:625 -1
     (nil))
(insn 85 84 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 256 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:625 -1
     (nil))
(jump_insn 86 85 481 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 92)
            (pc))) nsswitch.c:625 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 92)
(note 481 86 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 481 88 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ D.13685 ])
            (const_int 91 [0x5b]))) nsswitch.c:625 -1
     (nil))
(insn 88 87 89 13 (set (reg:QI 258 [ D.13682 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:625 -1
     (nil))
(insn 89 88 90 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 258 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:625 -1
     (nil))
(jump_insn 90 89 482 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) nsswitch.c:625 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 79)
(note 482 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(code_label 92 482 93 15 10 "" [2 uses])
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 247 [ line ])
            (reg/v/f:DI 129 [ line ]))) nsswitch.c:627 -1
     (nil))
(jump_insn 95 94 96 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) nsswitch.c:627 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 66)
(note 96 95 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 16 (parallel [
            (set (reg:DI 133 [ D.13686 ])
                (minus:DI (reg/v/f:DI 129 [ line ])
                    (reg/v/f:DI 247 [ line ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:632 -1
     (nil))
(insn 98 97 99 16 (parallel [
            (set (reg:DI 259 [ D.13686 ])
                (plus:DI (reg:DI 133 [ D.13686 ])
                    (const_int 49 [0x31])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:631 -1
     (nil))
(insn 99 98 100 16 (set (reg:DI 5 di)
        (reg:DI 259 [ D.13686 ])) nsswitch.c:631 -1
     (nil))
(call_insn 100 99 101 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:631 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 101 100 102 16 (set (reg/f:DI 260)
        (reg:DI 0 ax)) nsswitch.c:631 -1
     (expr_list:REG_NOALIAS (reg/f:DI 260)
        (nil)))
(insn 102 101 103 16 (set (reg/v/f:DI 135 [ new_service ])
        (reg/f:DI 260)) nsswitch.c:631 -1
     (nil))
(insn 103 102 104 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 135 [ new_service ])
            (const_int 0 [0]))) nsswitch.c:633 -1
     (nil))
(jump_insn 104 103 105 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) nsswitch.c:633 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 109)
(note 105 104 106 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 17 (set (reg/f:DI 114 [ D.13683 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 result+0 S8 A64])) nsswitch.c:634 -1
     (nil))
(jump_insn 107 106 108 17 (set (pc)
        (label_ref 441)) nsswitch.c:634 -1
     (nil)
 -> 441)
(barrier 108 107 109)
(code_label 109 108 110 18 13 "" [1 uses])
(note 110 109 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 18 (parallel [
            (set (reg:DI 261 [ D.13689 ])
                (plus:DI (reg/v/f:DI 135 [ new_service ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:636 -1
     (nil))
(insn 112 111 113 18 (set (reg:DI 1 dx)
        (reg:DI 133 [ D.13686 ])) nsswitch.c:636 -1
     (nil))
(insn 113 112 114 18 (set (reg:DI 4 si)
        (reg/v/f:DI 247 [ line ])) nsswitch.c:636 -1
     (nil))
(insn 114 113 115 18 (set (reg:DI 5 di)
        (reg:DI 261 [ D.13689 ])) nsswitch.c:636 -1
     (nil))
(call_insn 115 114 116 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2ac27873e000 __mempcpy>) [0 __mempcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:636 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___mempcpy") [flags 0x43]  <function_decl 0x2ac27873e000 __mempcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 116 115 117 18 (set (reg/f:DI 141 [ D.13690 ])
        (reg:DI 0 ax)) nsswitch.c:636 -1
     (nil))
(insn 117 116 118 18 (set (mem:QI (reg/f:DI 141 [ D.13690 ]) [0 MEM[(char *)_57]+0 S1 A8])
        (const_int 0 [0])) nsswitch.c:636 -1
     (nil))
(insn 118 117 119 18 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 8 [0x8])) [7 new_service_50->actions+0 S4 A64])
        (const_int 0 [0])) nsswitch.c:639 -1
     (nil))
(insn 119 118 120 18 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 12 [0xc])) [7 new_service_50->actions+4 S4 A32])
        (const_int 0 [0])) nsswitch.c:640 -1
     (nil))
(insn 120 119 121 18 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 16 [0x10])) [7 new_service_50->actions+8 S4 A64])
        (const_int 0 [0])) nsswitch.c:641 -1
     (nil))
(insn 121 120 122 18 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 20 [0x14])) [7 new_service_50->actions+12 S4 A32])
        (const_int 1 [0x1])) nsswitch.c:642 -1
     (nil))
(insn 122 121 123 18 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 24 [0x18])) [7 new_service_50->actions+16 S4 A64])
        (const_int 1 [0x1])) nsswitch.c:643 -1
     (nil))
(insn 123 122 124 18 (set (mem/f:DI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 32 [0x20])) [3 new_service_50->library+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:644 -1
     (nil))
(insn 124 123 125 18 (set (mem/f:DI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 40 [0x28])) [3 new_service_50->known+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:645 -1
     (nil))
(insn 125 124 126 18 (set (mem/f:DI (reg/v/f:DI 135 [ new_service ]) [3 new_service_50->next+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:646 -1
     (nil))
(insn 126 125 127 18 (set (reg:DI 262)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_B") [flags 0x60]  <var_decl 0x2ac2788a2e10 __libc_tsd_CTYPE_B>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) nsswitch.c:648 -1
     (nil))
(insn 127 126 128 18 (set (reg/f:DI 243 [ D.13687 ])
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 262)) [3 MEM[(const short unsigned int * *)&__libc_tsd_CTYPE_B]+0 S8 A64])) nsswitch.c:648 -1
     (nil))
(insn 128 127 129 18 (set (reg:QI 142 [ D.13685 ])
        (mem:QI (reg/v/f:DI 129 [ line ]) [0 *line_43+0 S1 A8])) nsswitch.c:648 -1
     (nil))
(insn 129 128 130 18 (set (reg:DI 263 [ D.13686 ])
        (sign_extend:DI (reg:QI 142 [ D.13685 ]))) nsswitch.c:648 -1
     (nil))
(insn 130 129 131 18 (set (reg:HI 265)
        (mem:HI (plus:DI (mult:DI (reg:DI 263 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_215+0 S2 A16])) nsswitch.c:648 -1
     (nil))
(insn 131 130 132 18 (parallel [
            (set (reg:HI 264 [ D.13684 ])
                (and:HI (reg:HI 265)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:648 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 263 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_215+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 132 131 133 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 264 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:648 -1
     (nil))
(jump_insn 133 132 134 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) nsswitch.c:648 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 454)
(note 134 133 28 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 28 134 138 19 (set (reg/v/f:DI 247 [ line ])
        (reg/v/f:DI 129 [ line ])) nsswitch.c:648 -1
     (nil))
(code_label 138 28 135 20 15 "" [1 uses])
(note 135 138 136 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 20 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:649 -1
     (nil))
(insn 137 136 139 20 (set (reg:QI 142 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 MEM[base: line_74, offset: 0B]+0 S1 A8])) nsswitch.c:648 -1
     (nil))
(insn 139 137 140 20 (set (reg:DI 266 [ D.13686 ])
        (sign_extend:DI (reg:QI 142 [ D.13685 ]))) nsswitch.c:648 -1
     (nil))
(insn 140 139 141 20 (set (reg:HI 268)
        (mem:HI (plus:DI (mult:DI (reg:DI 266 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_71+0 S2 A16])) nsswitch.c:648 -1
     (nil))
(insn 141 140 142 20 (parallel [
            (set (reg:HI 267 [ D.13684 ])
                (and:HI (reg:HI 268)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:648 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 266 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_71+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 142 141 143 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 267 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:648 -1
     (nil))
(jump_insn 143 142 450 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) nsswitch.c:648 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 138)
(note 450 143 451 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 451 450 452 21 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
(barrier 452 451 454)
(code_label 454 452 453 22 46 "" [1 uses])
(note 453 454 29 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 29 453 144 22 (set (reg/v/f:DI 247 [ line ])
        (reg/v/f:DI 129 [ line ])) nsswitch.c:648 -1
     (nil))
(code_label 144 29 145 23 14 "" [1 uses])
(note 145 144 146 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 142 [ D.13685 ])
            (const_int 91 [0x5b]))) nsswitch.c:651 -1
     (nil))
(jump_insn 147 146 148 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) nsswitch.c:651 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 429)
(note 148 147 155 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(code_label 155 148 149 25 18 "" [1 uses])
(note 149 155 150 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 25 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:655 -1
     (nil))
(insn 151 150 152 25 (set (reg:QI 148 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 MEM[base: line_76, offset: 0B]+0 S1 A8])) nsswitch.c:656 -1
     (nil))
(insn 152 151 153 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:656 -1
     (nil))
(jump_insn 153 152 154 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) nsswitch.c:656 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 161)
(note 154 153 156 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 156 154 157 26 (set (reg:DI 269 [ D.13686 ])
        (sign_extend:DI (reg:QI 148 [ D.13685 ]))) nsswitch.c:656 -1
     (nil))
(insn 157 156 158 26 (set (reg:HI 271)
        (mem:HI (plus:DI (mult:DI (reg:DI 269 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_82+0 S2 A16])) nsswitch.c:656 -1
     (nil))
(insn 158 157 159 26 (parallel [
            (set (reg:HI 270 [ D.13684 ])
                (and:HI (reg:HI 271)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:656 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 269 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_82+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 159 158 160 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 270 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:656 -1
     (nil))
(jump_insn 160 159 161 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) nsswitch.c:656 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 155)
(code_label 161 160 162 27 17 "" [1 uses])
(note 162 161 423 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(code_label 423 162 163 28 44 "" [1 uses])
(note 163 423 164 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.13685 ])
            (const_int 33 [0x21]))) nsswitch.c:666 -1
     (nil))
(jump_insn 165 164 166 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 458)
            (pc))) nsswitch.c:666 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 458)
(note 166 165 167 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 29 (parallel [
            (set (reg/v/f:DI 156 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:667 -1
     (nil))
(insn 168 167 31 29 (set (reg:QI 232 [ D.13685 ])
        (mem:QI (plus:DI (reg/v/f:DI 247 [ line ])
                (const_int 1 [0x1])) [0 MEM[(const char *)line_5 + 1B]+0 S1 A8])) -1
     (nil))
(insn 31 168 455 29 (set (reg/v/f:DI 247 [ line ])
        (reg/v/f:DI 156 [ line ])) nsswitch.c:667 -1
     (nil))
(jump_insn 455 31 456 29 (set (pc)
        (label_ref 169)) -1
     (nil)
 -> 169)
(barrier 456 455 458)
(code_label 458 456 457 30 47 "" [1 uses])
(note 457 458 30 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 30 457 169 30 (set (reg:QI 232 [ D.13685 ])
        (reg:QI 148 [ D.13685 ])) -1
     (nil))
(code_label 169 30 170 31 19 "" [1 uses])
(note 170 169 171 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 232 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:671 -1
     (nil))
(jump_insn 172 171 173 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:671 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 436)
(note 173 172 174 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 32 (set (reg:DI 272 [ D.13686 ])
        (sign_extend:DI (reg:QI 232 [ D.13685 ]))) nsswitch.c:671 -1
     (nil))
(insn 175 174 176 32 (set (reg:HI 274)
        (mem:HI (plus:DI (mult:DI (reg:DI 272 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_202+0 S2 A16])) nsswitch.c:672 -1
     (nil))
(insn 176 175 177 32 (parallel [
            (set (reg:HI 273)
                (lshiftrt:HI (reg:HI 274)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 272 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_202+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 177 176 178 32 (parallel [
            (set (reg:HI 275)
                (xor:HI (reg:HI 273)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 178 177 179 32 (parallel [
            (set (reg:QI 276 [ D.13682 ])
                (and:QI (subreg:QI (reg:HI 275) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 179 178 180 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 276 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(jump_insn 180 179 483 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:672 -1
     (int_list:REG_BR_PROB 112 (nil))
 -> 436)
(note 483 180 181 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 181 483 182 33 (parallel [
            (set (reg:QI 277 [ D.13681 ])
                (plus:QI (reg:QI 232 [ D.13685 ])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 182 181 183 33 (parallel [
            (set (reg:QI 278 [ D.13681 ])
                (and:QI (reg:QI 277 [ D.13681 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 183 182 184 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 278 [ D.13681 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(insn 184 183 185 33 (set (reg:QI 280 [ D.13682 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(insn 185 184 186 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 280 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(jump_insn 186 185 187 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:672 -1
     (int_list:REG_BR_PROB 113 (nil))
 -> 436)
(note 187 186 32 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 32 187 199 34 (set (reg/v/f:DI 109 [ line ])
        (reg/v/f:DI 247 [ line ])) nsswitch.c:672 -1
     (nil))
(code_label 199 32 188 35 23 "" [1 uses])
(note 188 199 189 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 35 (parallel [
            (set (reg/v/f:DI 109 [ line ])
                (plus:DI (reg/v/f:DI 109 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:673 -1
     (nil))
(insn 190 189 191 35 (set (reg:QI 158 [ D.13685 ])
        (mem:QI (reg/v/f:DI 109 [ line ]) [0 MEM[base: line_96, offset: 0B]+0 S1 A8])) nsswitch.c:671 -1
     (nil))
(insn 191 190 192 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:671 -1
     (nil))
(jump_insn 192 191 193 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) nsswitch.c:671 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 197)
(note 193 192 194 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 36 (parallel [
            (set (reg:DI 235 [ D.13688 ])
                (minus:DI (reg/v/f:DI 109 [ line ])
                    (reg/v/f:DI 247 [ line ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 195 194 196 36 (set (pc)
        (label_ref 216)) -1
     (nil)
 -> 216)
(barrier 196 195 197)
(code_label 197 196 198 37 21 "" [1 uses])
(note 198 197 200 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 200 198 201 37 (set (reg:DI 281 [ D.13686 ])
        (sign_extend:DI (reg:QI 158 [ D.13685 ]))) nsswitch.c:671 -1
     (nil))
(insn 201 200 202 37 (set (reg:HI 283)
        (mem:HI (plus:DI (mult:DI (reg:DI 281 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_93+0 S2 A16])) nsswitch.c:672 -1
     (nil))
(insn 202 201 203 37 (parallel [
            (set (reg:HI 282)
                (lshiftrt:HI (reg:HI 283)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 281 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_93+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 203 202 204 37 (parallel [
            (set (reg:HI 284)
                (xor:HI (reg:HI 282)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 204 203 205 37 (parallel [
            (set (reg:QI 285 [ D.13682 ])
                (and:QI (subreg:QI (reg:HI 284) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 205 204 206 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 285 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(jump_insn 206 205 484 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 488)
            (pc))) nsswitch.c:672 612 {*jcc_1}
     (int_list:REG_BR_PROB 112 (nil))
 -> 488)
(note 484 206 207 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 207 484 208 38 (parallel [
            (set (reg:QI 286 [ D.13681 ])
                (plus:QI (reg:QI 158 [ D.13685 ])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 208 207 209 38 (parallel [
            (set (reg:QI 287 [ D.13681 ])
                (and:QI (reg:QI 286 [ D.13681 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:672 -1
     (nil))
(insn 209 208 210 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 287 [ D.13681 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(insn 210 209 211 38 (set (reg:QI 289 [ D.13682 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(insn 211 210 212 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 289 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:672 -1
     (nil))
(jump_insn 212 211 485 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 199)
            (pc))) nsswitch.c:672 -1
     (int_list:REG_BR_PROB 9887 (nil))
 -> 199)
(note 485 212 488 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(code_label 488 485 214 40 53 "" [1 uses])
(note 214 488 215 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 40 (parallel [
            (set (reg:DI 235 [ D.13688 ])
                (minus:DI (reg/v/f:DI 109 [ line ])
                    (reg/v/f:DI 247 [ line ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 216 215 217 41 22 "" [1 uses])
(note 217 216 218 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 235 [ D.13688 ])
            (const_int 7 [0x7]))) nsswitch.c:676 -1
     (nil))
(jump_insn 219 218 220 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) nsswitch.c:676 -1
     (int_list:REG_BR_PROB 7159 (nil))
 -> 239)
(note 220 219 221 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 222 42 (set (reg:DI 1 dx)
        (const_int 7 [0x7])) nsswitch.c:678 -1
     (nil))
(insn 222 221 223 42 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ac278d052d0 *.LC1>)) nsswitch.c:678 -1
     (nil))
(insn 223 222 224 42 (set (reg:DI 5 di)
        (reg/v/f:DI 247 [ line ])) nsswitch.c:678 -1
     (nil))
(call_insn/i 224 223 225 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:678 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 225 224 226 42 (set (reg:SI 166 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:678 -1
     (nil))
(insn 226 225 227 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 166 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:678 -1
     (nil))
(jump_insn 227 226 228 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 463)
            (pc))) nsswitch.c:678 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 463)
(note 228 227 229 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 43 (set (reg:DI 1 dx)
        (const_int 7 [0x7])) nsswitch.c:680 -1
     (nil))
(insn 230 229 231 43 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ac278d05360 *.LC2>)) nsswitch.c:680 -1
     (nil))
(insn 231 230 232 43 (set (reg:DI 5 di)
        (reg/v/f:DI 247 [ line ])) nsswitch.c:680 -1
     (nil))
(call_insn/i 232 231 233 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:680 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 233 232 234 43 (set (reg:SI 167 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:680 -1
     (nil))
(insn 234 233 235 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:680 -1
     (nil))
(jump_insn 235 234 238 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 467)
            (pc))) nsswitch.c:680 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 467)
(note 238 235 236 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(jump_insn 236 238 237 44 (set (pc)
        (label_ref 436)) -1
     (nil)
 -> 436)
(barrier 237 236 239)
(code_label 239 237 240 45 25 "" [1 uses])
(note 240 239 241 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 235 [ D.13688 ])
            (const_int 8 [0x8]))) nsswitch.c:685 -1
     (nil))
(jump_insn 242 241 243 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:685 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 436)
(note 243 242 244 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 46 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) nsswitch.c:687 -1
     (nil))
(insn 245 244 246 46 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x2ac278d053f0 *.LC3>)) nsswitch.c:687 -1
     (nil))
(insn 246 245 247 46 (set (reg:DI 5 di)
        (reg/v/f:DI 247 [ line ])) nsswitch.c:687 -1
     (nil))
(call_insn/i 247 246 248 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:687 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 248 247 249 46 (set (reg:SI 164 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:687 -1
     (nil))
(insn 249 248 250 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 164 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:687 -1
     (nil))
(jump_insn 250 249 459 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 262)
            (pc))) nsswitch.c:687 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 262)
(note 459 250 33 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 33 459 460 47 (set (reg/v:SI 149 [ status ])
        (const_int 0 [0])) nsswitch.c:688 -1
     (nil))
(jump_insn 460 33 461 47 (set (pc)
        (label_ref 251)) -1
     (nil)
 -> 251)
(barrier 461 460 463)
(code_label 463 461 462 48 48 "" [1 uses])
(note 462 463 36 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 36 462 464 48 (set (reg/v:SI 149 [ status ])
        (const_int 1 [0x1])) nsswitch.c:679 -1
     (nil))
(jump_insn 464 36 465 48 (set (pc)
        (label_ref 251)) -1
     (nil)
 -> 251)
(barrier 465 464 467)
(code_label 467 465 466 49 49 "" [1 uses])
(note 466 467 35 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 35 466 468 49 (set (reg/v:SI 149 [ status ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:681 -1
     (nil))
(jump_insn 468 35 469 49 (set (pc)
        (label_ref 251)) -1
     (nil)
 -> 251)
(barrier 469 468 471)
(code_label 471 469 470 50 50 "" [1 uses])
(note 470 471 34 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 34 470 251 50 (set (reg/v:SI 149 [ status ])
        (const_int -2 [0xfffffffffffffffe])) nsswitch.c:690 -1
     (nil))
(code_label 251 34 252 51 26 "" [3 uses])
(note 252 251 253 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 51 (set (reg:QI 168 [ D.13685 ])
        (mem:QI (reg/v/f:DI 109 [ line ]) [0 *line_96+0 S1 A8])) nsswitch.c:697 -1
     (nil))
(insn 254 253 255 51 (set (reg:DI 290 [ D.13686 ])
        (sign_extend:DI (reg:QI 168 [ D.13685 ]))) nsswitch.c:697 -1
     (nil))
(insn 255 254 256 51 (set (reg:HI 292)
        (mem:HI (plus:DI (mult:DI (reg:DI 290 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_170+0 S2 A16])) nsswitch.c:697 -1
     (nil))
(insn 256 255 257 51 (parallel [
            (set (reg:HI 291 [ D.13684 ])
                (and:HI (reg:HI 292)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:697 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 290 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_170+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 257 256 258 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 291 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:697 -1
     (nil))
(jump_insn 258 257 261 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) nsswitch.c:697 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 274)
(note 261 258 259 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 259 261 260 52 (set (pc)
        (label_ref 285)) nsswitch.c:697 -1
     (nil)
 -> 285)
(barrier 260 259 262)
(code_label 262 260 263 53 27 "" [1 uses])
(note 263 262 264 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 53 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) nsswitch.c:689 -1
     (nil))
(insn 265 264 266 53 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x2ac278d05480 *.LC4>)) nsswitch.c:689 -1
     (nil))
(insn 266 265 267 53 (set (reg:DI 5 di)
        (reg/v/f:DI 247 [ line ])) nsswitch.c:689 -1
     (nil))
(call_insn/i 267 266 268 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:689 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 268 267 269 53 (set (reg:SI 165 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:689 -1
     (nil))
(insn 269 268 270 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:689 -1
     (nil))
(jump_insn 270 269 273 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 471)
            (pc))) nsswitch.c:689 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 471)
(note 273 270 271 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(jump_insn 271 273 272 54 (set (pc)
        (label_ref 436)) -1
     (nil)
 -> 436)
(barrier 272 271 274)
(code_label 274 272 275 55 28 "" [1 uses])
(note 275 274 279 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(code_label 279 275 276 56 30 "" [1 uses])
(note 276 279 277 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 56 (parallel [
            (set (reg/v/f:DI 109 [ line ])
                (plus:DI (reg/v/f:DI 109 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:698 -1
     (nil))
(insn 278 277 280 56 (set (reg:QI 168 [ D.13685 ])
        (mem:QI (reg/v/f:DI 109 [ line ]) [0 MEM[base: line_111, offset: 0B]+0 S1 A8])) nsswitch.c:697 -1
     (nil))
(insn 280 278 281 56 (set (reg:DI 293 [ D.13686 ])
        (sign_extend:DI (reg:QI 168 [ D.13685 ]))) nsswitch.c:697 -1
     (nil))
(insn 281 280 282 56 (set (reg:HI 295)
        (mem:HI (plus:DI (mult:DI (reg:DI 293 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_108+0 S2 A16])) nsswitch.c:697 -1
     (nil))
(insn 282 281 283 56 (parallel [
            (set (reg:HI 294 [ D.13684 ])
                (and:HI (reg:HI 295)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:697 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 293 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_108+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 283 282 284 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 294 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:697 -1
     (nil))
(jump_insn 284 283 285 56 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 279)
            (pc))) nsswitch.c:697 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 279)
(code_label 285 284 286 57 29 "" [1 uses])
(note 286 285 287 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 287 286 288 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 168 [ D.13685 ])
            (const_int 61 [0x3d]))) nsswitch.c:699 -1
     (nil))
(jump_insn 288 287 289 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:699 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 436)
(note 289 288 293 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(code_label 293 289 290 59 31 "" [1 uses])
(note 290 293 291 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 291 290 292 59 (parallel [
            (set (reg/v/f:DI 109 [ line ])
                (plus:DI (reg/v/f:DI 109 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:702 -1
     (nil))
(insn 292 291 294 59 (set (reg:QI 174 [ D.13685 ])
        (mem:QI (reg/v/f:DI 109 [ line ]) [0 MEM[base: line_112, offset: 0B]+0 S1 A8])) nsswitch.c:703 -1
     (nil))
(insn 294 292 295 59 (set (reg:DI 296 [ D.13686 ])
        (sign_extend:DI (reg:QI 174 [ D.13685 ]))) nsswitch.c:703 -1
     (nil))
(insn 295 294 296 59 (set (reg:HI 298)
        (mem:HI (plus:DI (mult:DI (reg:DI 296 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_116+0 S2 A16])) nsswitch.c:703 -1
     (nil))
(insn 296 295 297 59 (parallel [
            (set (reg:HI 297 [ D.13684 ])
                (and:HI (reg:HI 298)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:703 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 296 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_116+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 297 296 298 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 297 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:703 -1
     (nil))
(jump_insn 298 297 299 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 293)
            (pc))) nsswitch.c:703 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 293)
(note 299 298 300 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 174 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:706 -1
     (nil))
(jump_insn 301 300 302 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:706 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 436)
(note 302 301 303 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 61 (parallel [
            (set (reg:QI 299 [ D.13681 ])
                (plus:QI (reg:QI 174 [ D.13685 ])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 304 303 305 61 (parallel [
            (set (reg:QI 300 [ D.13681 ])
                (and:QI (reg:QI 299 [ D.13681 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 305 304 306 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 300 [ D.13681 ])
            (const_int 0 [0]))) nsswitch.c:707 -1
     (nil))
(jump_insn 306 305 307 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:707 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 436)
(note 307 306 37 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 37 307 319 62 (set (reg/v/f:DI 247 [ line ])
        (reg/v/f:DI 109 [ line ])) nsswitch.c:702 -1
     (nil))
(code_label 319 37 308 63 34 "" [1 uses])
(note 308 319 309 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 63 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:708 -1
     (nil))
(insn 310 309 311 63 (set (reg:QI 180 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 MEM[base: line_124, offset: 0B]+0 S1 A8])) nsswitch.c:706 -1
     (nil))
(insn 311 310 312 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.13685 ])
            (const_int 0 [0]))) nsswitch.c:706 -1
     (nil))
(jump_insn 312 311 313 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) nsswitch.c:706 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 317)
(note 313 312 314 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 64 (parallel [
            (set (reg:DI 240 [ D.13688 ])
                (minus:DI (reg/v/f:DI 247 [ line ])
                    (reg/v/f:DI 109 [ line ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(jump_insn 315 314 316 64 (set (pc)
        (label_ref 336)) -1
     (nil)
 -> 336)
(barrier 316 315 317)
(code_label 317 316 318 65 32 "" [1 uses])
(note 318 317 320 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 320 318 321 65 (set (reg:DI 301 [ D.13686 ])
        (sign_extend:DI (reg:QI 180 [ D.13685 ]))) nsswitch.c:706 -1
     (nil))
(insn 321 320 322 65 (set (reg:HI 303)
        (mem:HI (plus:DI (mult:DI (reg:DI 301 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_122+0 S2 A16])) nsswitch.c:707 -1
     (nil))
(insn 322 321 323 65 (parallel [
            (set (reg:HI 302)
                (lshiftrt:HI (reg:HI 303)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 301 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_122+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 323 322 324 65 (parallel [
            (set (reg:HI 304)
                (xor:HI (reg:HI 302)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 324 323 325 65 (parallel [
            (set (reg:QI 305 [ D.13682 ])
                (and:QI (subreg:QI (reg:HI 304) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 325 324 326 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 305 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:707 -1
     (nil))
(jump_insn 326 325 486 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 489)
            (pc))) nsswitch.c:707 612 {*jcc_1}
     (int_list:REG_BR_PROB 112 (nil))
 -> 489)
(note 486 326 327 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 327 486 328 66 (parallel [
            (set (reg:QI 306 [ D.13681 ])
                (plus:QI (reg:QI 180 [ D.13685 ])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 328 327 329 66 (parallel [
            (set (reg:QI 307 [ D.13681 ])
                (and:QI (reg:QI 306 [ D.13681 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:707 -1
     (nil))
(insn 329 328 330 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 307 [ D.13681 ])
            (const_int 0 [0]))) nsswitch.c:707 -1
     (nil))
(insn 330 329 331 66 (set (reg:QI 309 [ D.13682 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:707 -1
     (nil))
(insn 331 330 332 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 309 [ D.13682 ])
            (const_int 0 [0]))) nsswitch.c:707 -1
     (nil))
(jump_insn 332 331 487 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) nsswitch.c:707 -1
     (int_list:REG_BR_PROB 9887 (nil))
 -> 319)
(note 487 332 489 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(code_label 489 487 334 68 54 "" [1 uses])
(note 334 489 335 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 68 (parallel [
            (set (reg:DI 240 [ D.13688 ])
                (minus:DI (reg/v/f:DI 247 [ line ])
                    (reg/v/f:DI 109 [ line ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(code_label 336 335 337 69 33 "" [1 uses])
(note 337 336 338 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 240 [ D.13688 ])
            (const_int 6 [0x6]))) nsswitch.c:710 -1
     (nil))
(jump_insn 339 338 340 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 351)
            (pc))) nsswitch.c:710 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 351)
(note 340 339 341 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 70 (set (reg:DI 1 dx)
        (const_int 6 [0x6])) nsswitch.c:710 -1
     (nil))
(insn 342 341 343 70 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2ac278d05510 *.LC5>)) nsswitch.c:710 -1
     (nil))
(insn 343 342 344 70 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ line ])) nsswitch.c:710 -1
     (nil))
(call_insn/i 344 343 345 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:710 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 345 344 346 70 (set (reg:SI 185 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:710 -1
     (nil))
(insn 346 345 347 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 185 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:710 -1
     (nil))
(jump_insn 347 346 350 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 476)
            (pc))) nsswitch.c:710 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 476)
(note 350 347 348 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(jump_insn 348 350 349 71 (set (pc)
        (label_ref 436)) -1
     (nil)
 -> 436)
(barrier 349 348 351)
(code_label 351 349 352 72 36 "" [1 uses])
(note 352 351 353 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 240 [ D.13688 ])
            (const_int 8 [0x8]))) nsswitch.c:712 -1
     (nil))
(jump_insn 354 353 355 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 366)
            (pc))) nsswitch.c:712 -1
     (int_list:REG_BR_PROB 6654 (nil))
 -> 366)
(note 355 354 356 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 73 (set (reg:DI 1 dx)
        (const_int 8 [0x8])) nsswitch.c:713 -1
     (nil))
(insn 357 356 358 73 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ac278d055a0 *.LC6>)) nsswitch.c:713 -1
     (nil))
(insn 358 357 359 73 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ line ])) nsswitch.c:713 -1
     (nil))
(call_insn/i 359 358 360 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:713 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 360 359 361 73 (set (reg:SI 186 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:713 -1
     (nil))
(insn 361 360 362 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 186 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:713 -1
     (nil))
(jump_insn 362 361 365 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 480)
            (pc))) nsswitch.c:713 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 480)
(note 365 362 363 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(jump_insn 363 365 364 74 (set (pc)
        (label_ref 436)) -1
     (nil)
 -> 436)
(barrier 364 363 366)
(code_label 366 364 367 75 38 "" [1 uses])
(note 367 366 368 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 240 [ D.13688 ])
            (const_int 5 [0x5]))) nsswitch.c:715 -1
     (nil))
(jump_insn 369 368 370 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:715 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 436)
(note 370 369 371 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 76 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) nsswitch.c:716 -1
     (nil))
(insn 372 371 373 76 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ac278d05630 *.LC7>)) nsswitch.c:716 -1
     (nil))
(insn 373 372 374 76 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ line ])) nsswitch.c:716 -1
     (nil))
(call_insn/i 374 373 375 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>) [0 __strncasecmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:716 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strncasecmp") [flags 0x41]  <function_decl 0x2ac2786e4a20 __strncasecmp>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 375 374 376 76 (set (reg:SI 187 [ D.13691 ])
        (reg:SI 0 ax)) nsswitch.c:716 -1
     (nil))
(insn 376 375 377 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 187 [ D.13691 ])
            (const_int 0 [0]))) nsswitch.c:716 -1
     (nil))
(jump_insn 377 376 472 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nsswitch.c:716 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 436)
(note 472 377 40 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 40 472 473 77 (set (reg/v:SI 113 [ action ])
        (const_int 2 [0x2])) nsswitch.c:717 -1
     (nil))
(jump_insn 473 40 474 77 (set (pc)
        (label_ref 378)) -1
     (nil)
 -> 378)
(barrier 474 473 476)
(code_label 476 474 475 78 51 "" [1 uses])
(note 475 476 38 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 38 475 477 78 (set (reg/v:SI 113 [ action ])
        (const_int 1 [0x1])) nsswitch.c:711 -1
     (nil))
(jump_insn 477 38 478 78 (set (pc)
        (label_ref 378)) -1
     (nil)
 -> 378)
(barrier 478 477 480)
(code_label 480 478 479 79 52 "" [1 uses])
(note 479 480 39 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 39 479 378 79 (set (reg/v:SI 113 [ action ])
        (const_int 0 [0])) nsswitch.c:714 -1
     (nil))
(code_label 378 39 379 80 37 "" [2 uses])
(note 379 378 380 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.13685 ])
            (const_int 33 [0x21]))) nsswitch.c:721 -1
     (nil))
(jump_insn 381 380 382 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 394)
            (pc))) nsswitch.c:721 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 394)
(note 382 381 383 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 81 (set (reg:DI 310 [ D.13692 ])
        (sign_extend:DI (reg/v:SI 149 [ status ]))) -1
     (nil))
(insn 384 383 385 81 (parallel [
            (set (reg:DI 311 [ D.13692 ])
                (ashift:DI (reg:DI 310 [ D.13692 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 385 384 386 81 (parallel [
            (set (reg/f:DI 231 [ D.13683 ])
                (plus:DI (reg/v/f:DI 135 [ new_service ])
                    (reg:DI 311 [ D.13692 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 386 385 387 81 (set (reg/v:SI 189 [ save ])
        (mem:SI (plus:DI (reg/f:DI 231 [ D.13683 ])
                (const_int 16 [0x10])) [8 MEM[(struct service_user *)_305 + 16B]+0 S4 A32])) nsswitch.c:725 -1
     (nil))
(insn 387 386 388 81 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 8 [0x8])) [7 new_service_50->actions+0 S4 A64])
        (reg/v:SI 113 [ action ])) nsswitch.c:726 -1
     (nil))
(insn 388 387 389 81 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 12 [0xc])) [7 new_service_50->actions+4 S4 A32])
        (reg/v:SI 113 [ action ])) nsswitch.c:727 -1
     (nil))
(insn 389 388 390 81 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 16 [0x10])) [7 new_service_50->actions+8 S4 A64])
        (reg/v:SI 113 [ action ])) nsswitch.c:728 -1
     (nil))
(insn 390 389 391 81 (set (mem:SI (plus:DI (reg/v/f:DI 135 [ new_service ])
                (const_int 20 [0x14])) [7 new_service_50->actions+12 S4 A32])
        (reg/v:SI 113 [ action ])) nsswitch.c:729 -1
     (nil))
(insn 391 390 392 81 (set (mem:SI (plus:DI (reg/f:DI 231 [ D.13683 ])
                (const_int 16 [0x10])) [8 MEM[(struct service_user *)_305 + 16B]+0 S4 A32])
        (reg/v:SI 189 [ save ])) nsswitch.c:730 -1
     (nil))
(jump_insn 392 391 393 81 (set (pc)
        (label_ref 399)) -1
     (nil)
 -> 399)
(barrier 393 392 394)
(code_label 394 393 395 82 39 "" [1 uses])
(note 395 394 396 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 396 395 397 82 (parallel [
            (set (reg:SI 312 [ D.13691 ])
                (plus:SI (reg/v:SI 149 [ status ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:733 -1
     (nil))
(insn 397 396 398 82 (set (reg:DI 313)
        (sign_extend:DI (reg:SI 312 [ D.13691 ]))) nsswitch.c:733 -1
     (nil))
(insn 398 397 399 82 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 313)
                        (const_int 4 [0x4]))
                    (reg/v/f:DI 135 [ new_service ]))
                (const_int 8 [0x8])) [7 new_service_50->actions S4 A32])
        (reg/v:SI 113 [ action ])) nsswitch.c:733 -1
     (nil))
(code_label 399 398 400 83 40 "" [1 uses])
(note 400 399 401 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 83 (set (reg:QI 190 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 *line_124+0 S1 A8])) nsswitch.c:736 -1
     (nil))
(insn 402 401 403 83 (set (reg:DI 314 [ D.13686 ])
        (sign_extend:DI (reg:QI 190 [ D.13685 ]))) nsswitch.c:736 -1
     (nil))
(insn 403 402 404 83 (set (reg:HI 316)
        (mem:HI (plus:DI (mult:DI (reg:DI 314 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_195+0 S2 A16])) nsswitch.c:736 -1
     (nil))
(insn 404 403 405 83 (parallel [
            (set (reg:HI 315 [ D.13684 ])
                (and:HI (reg:HI 316)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:736 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 314 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_195+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 405 404 406 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 315 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:736 -1
     (nil))
(jump_insn 406 405 407 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) nsswitch.c:736 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 417)
(note 407 406 411 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(code_label 411 407 408 85 42 "" [1 uses])
(note 408 411 409 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 85 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:737 -1
     (nil))
(insn 410 409 412 85 (set (reg:QI 190 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 MEM[base: line_147, offset: 0B]+0 S1 A8])) nsswitch.c:736 -1
     (nil))
(insn 412 410 413 85 (set (reg:DI 317 [ D.13686 ])
        (sign_extend:DI (reg:QI 190 [ D.13685 ]))) nsswitch.c:736 -1
     (nil))
(insn 413 412 414 85 (set (reg:HI 319)
        (mem:HI (plus:DI (mult:DI (reg:DI 317 [ D.13686 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 243 [ D.13687 ])) [5 *_144+0 S2 A16])) nsswitch.c:736 -1
     (nil))
(insn 414 413 415 85 (parallel [
            (set (reg:HI 318 [ D.13684 ])
                (and:HI (reg:HI 319)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:736 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 317 [ D.13686 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 243 [ D.13687 ])) [5 *_144+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 415 414 416 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 318 [ D.13684 ])
            (const_int 0 [0]))) nsswitch.c:736 -1
     (nil))
(jump_insn 416 415 417 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 411)
            (pc))) nsswitch.c:736 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 411)
(code_label 417 416 418 86 41 "" [1 uses])
(note 418 417 419 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 419 418 420 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 190 [ D.13685 ])
            (const_int 93 [0x5d]))) nsswitch.c:739 -1
     (nil))
(jump_insn 420 419 421 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 426)
            (pc))) nsswitch.c:739 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 426)
(note 421 420 422 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 424 87 (set (reg:QI 148 [ D.13685 ])
        (mem:QI (reg/v/f:DI 247 [ line ]) [0 *line_239+0 S1 A8])) -1
     (nil))
(jump_insn 424 422 425 87 (set (pc)
        (label_ref 423)) -1
     (nil)
 -> 423)
(barrier 425 424 426)
(code_label 426 425 427 88 43 "" [1 uses])
(note 427 426 428 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 88 (parallel [
            (set (reg/v/f:DI 247 [ line ])
                (plus:DI (reg/v/f:DI 247 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:742 -1
     (nil))
(code_label 429 428 430 89 16 "" [1 uses])
(note 430 429 431 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 89 (set (mem/f:DI (reg/v/f:DI 112 [ nextp ]) [3 *nextp_13+0 S8 A64])
        (reg/v/f:DI 135 [ new_service ])) nsswitch.c:745 -1
     (nil))
(insn 432 431 434 89 (set (reg/v/f:DI 112 [ nextp ])
        (reg/v/f:DI 135 [ new_service ])) nsswitch.c:746 -1
     (nil))
(jump_insn 434 432 435 89 (set (pc)
        (label_ref 433)) nsswitch.c:752 -1
     (nil)
 -> 433)
(barrier 435 434 436)
(code_label 436 435 437 90 20 ("finish") [13 uses])
(note 437 436 438 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 90 (set (reg:DI 5 di)
        (reg/v/f:DI 135 [ new_service ])) nsswitch.c:750 -1
     (nil))
(call_insn 439 438 440 90 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:750 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 440 439 441 90 (set (reg/f:DI 114 [ D.13683 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 result+0 S8 A64])) nsswitch.c:751 -1
     (nil))
(code_label 441 440 442 91 9 "" [2 uses])
(note 442 441 443 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 447 91 (set (reg:DI 246 [ <retval> ])
        (reg/f:DI 114 [ D.13683 ])) -1
     (nil))
(insn 447 443 448 91 (set (reg/i:DI 0 ax)
        (reg:DI 246 [ <retval> ])) nsswitch.c:753 -1
     (nil))
(insn 448 447 0 91 (use (reg/i:DI 0 ax)) nsswitch.c:753 -1
     (nil))

;; Function nss_load_library (nss_load_library, funcdef_no=61, decl_uid=12985, cgraph_uid=64, symbol_order=83)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23
Edge 8->7 redirected to 26
Edge 12->21 redirected to 27
Edge 13->21 redirected to 28


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 123 [ ni ])
        (reg:DI 5 di [ ni ])) nsswitch.c:328 -1
     (nil))
(note 3 2 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 3 13 2 (set (reg/f:DI 89 [ D.13715 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 123 [ ni ])
                (const_int 32 [0x20])) [3 ni_8(D)->library+0 S8 A64])) nsswitch.c:329 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.13715 ])
            (const_int 0 [0]))) nsswitch.c:329 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) nsswitch.c:329 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 66)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg/f:DI 90 [ D.13716 ])
                (plus:DI (reg/v/f:DI 123 [ ni ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:338 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 87 [ D.13713 ])
        (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])) nsswitch.c:337 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.13713 ])
            (const_int 0 [0]))) nsswitch.c:337 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) nsswitch.c:337 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 21)
(note 20 19 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 20 21 5 (set (reg/f:DI 87 [ D.13713 ])
        (symbol_ref:DI ("default_table.12987") [flags 0x2]  <var_decl 0x2ac278bd5000 default_table>)) nsswitch.c:337 -1
     (nil))
(code_label 21 4 22 6 116 "" [1 uses])
(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg/f:DI 89 [ D.13715 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ D.13713 ])
                (const_int 8 [0x8])) [3 MEM[(struct service_library * *)_1 + 8B]+0 S8 A64])) nsswitch.c:801 -1
     (nil))
(insn 24 23 25 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.13715 ])
            (const_int 0 [0]))) nsswitch.c:803 -1
     (nil))
(jump_insn 25 24 26 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) nsswitch.c:803 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 44)
(note 26 25 193 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 193 26 194 7 (set (pc)
        (label_ref 37)) -1
     (nil)
 -> 37)
(barrier 194 193 196)
(code_label 196 194 195 8 126 "" [1 uses])
(note 195 196 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 195 37 8 (set (reg/f:DI 89 [ D.13715 ])
        (reg/f:DI 91 [ D.13715 ])) nsswitch.c:803 -1
     (nil))
(code_label 37 5 27 9 119 "" [1 uses])
(note 27 37 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 9 (set (reg/f:DI 124)
        (mem/f:DI (reg/f:DI 89 [ D.13715 ]) [3 _85->name+0 S8 A64])) nsswitch.c:805 -1
     (nil))
(insn 29 28 30 9 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13716 ])) nsswitch.c:805 -1
     (nil))
(insn 30 29 31 9 (set (reg:DI 5 di)
        (mem/f:DI (reg/f:DI 89 [ D.13715 ]) [3 _85->name+0 S8 A64])) nsswitch.c:805 -1
     (nil))
(call_insn/i 31 30 32 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:805 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 9 (set (reg:SI 117 [ D.13714 ])
        (reg:SI 0 ax)) nsswitch.c:805 -1
     (nil))
(insn 33 32 34 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ D.13714 ])
            (const_int 0 [0]))) nsswitch.c:805 -1
     (nil))
(jump_insn 34 33 35 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) nsswitch.c:805 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 179)
(note 35 34 36 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 38 10 (set (reg/f:DI 91 [ D.13715 ])
        (mem/f:DI (plus:DI (reg/f:DI 89 [ D.13715 ])
                (const_int 16 [0x10])) [3 MEM[(struct service_library * *)_85 + 16B]+0 S8 A64])) nsswitch.c:807 -1
     (nil))
(insn 38 36 39 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.13715 ])
            (const_int 0 [0]))) nsswitch.c:803 -1
     (nil))
(jump_insn 39 38 40 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 196)
            (pc))) nsswitch.c:803 612 {*jcc_1}
     (int_list:REG_BR_PROB 9550 (nil))
 -> 196)
(note 40 39 41 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 11 (parallel [
            (set (reg/v/f:DI 118 [ currentp ])
                (plus:DI (reg/f:DI 89 [ D.13715 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:807 -1
     (nil))
(jump_insn 42 41 43 11 (set (pc)
        (label_ref 47)) nsswitch.c:807 -1
     (nil)
 -> 47)
(barrier 43 42 44)
(code_label 44 43 45 12 117 "" [1 uses])
(note 45 44 46 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 12 (parallel [
            (set (reg/v/f:DI 118 [ currentp ])
                (plus:DI (reg/f:DI 87 [ D.13713 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:801 -1
     (nil))
(code_label 47 46 48 13 120 "" [1 uses])
(note 48 47 49 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 13 (set (reg:DI 5 di)
        (const_int 24 [0x18])) nsswitch.c:811 -1
     (nil))
(call_insn 50 49 51 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:811 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 13 (set (reg/f:DI 125)
        (reg:DI 0 ax)) nsswitch.c:811 -1
     (expr_list:REG_NOALIAS (reg/f:DI 125)
        (nil)))
(insn 52 51 53 13 (set (reg/f:DI 119 [ D.13717 ])
        (reg/f:DI 125)) nsswitch.c:811 -1
     (nil))
(insn 53 52 54 13 (set (mem/f:DI (reg/v/f:DI 118 [ currentp ]) [3 *currentp_70+0 S8 A64])
        (reg/f:DI 119 [ D.13717 ])) nsswitch.c:811 -1
     (nil))
(insn 54 53 55 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 119 [ D.13717 ])
            (const_int 0 [0]))) nsswitch.c:812 -1
     (nil))
(jump_insn 55 54 56 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) nsswitch.c:812 -1
     (int_list:REG_BR_PROB 192 (nil))
 -> 184)
(note 56 55 57 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 14 (set (mem/f:DI (reg/f:DI 119 [ D.13717 ]) [3 MEM[(struct service_library *)_66].name+0 S8 A64])
        (reg/f:DI 90 [ D.13716 ])) nsswitch.c:815 -1
     (nil))
(insn 58 57 59 14 (set (reg/f:DI 120 [ D.13715 ])
        (mem/f:DI (reg/v/f:DI 118 [ currentp ]) [3 *currentp_70+0 S8 A64])) nsswitch.c:816 -1
     (nil))
(insn 59 58 60 14 (set (mem/f:DI (plus:DI (reg/f:DI 120 [ D.13715 ])
                (const_int 8 [0x8])) [3 _67->lib_handle+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:816 -1
     (nil))
(insn 60 59 61 14 (set (reg/f:DI 121 [ D.13715 ])
        (mem/f:DI (reg/v/f:DI 118 [ currentp ]) [3 *currentp_70+0 S8 A64])) nsswitch.c:817 -1
     (nil))
(insn 61 60 62 14 (set (mem/f:DI (plus:DI (reg/f:DI 121 [ D.13715 ])
                (const_int 16 [0x10])) [3 _68->next+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:817 -1
     (nil))
(insn 62 61 63 14 (set (reg/f:DI 89 [ D.13715 ])
        (mem/f:DI (reg/v/f:DI 118 [ currentp ]) [3 *currentp_70+0 S8 A64])) nsswitch.c:819 -1
     (nil))
(insn 63 62 64 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 123 [ ni ])
                (const_int 32 [0x20])) [3 ni_8(D)->library+0 S8 A64])
        (reg/f:DI 89 [ D.13715 ])) nsswitch.c:337 -1
     (nil))
(insn 64 63 65 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.13715 ])
            (const_int 0 [0]))) nsswitch.c:339 -1
     (nil))
(jump_insn 65 64 66 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) nsswitch.c:339 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 200)
(code_label 66 65 67 15 115 "" [2 uses])
(note 67 66 68 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/f:DI 89 [ D.13715 ])
                    (const_int 8 [0x8])) [3 _77->lib_handle+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:343 -1
     (nil))
(jump_insn 69 68 70 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 204)
            (pc))) nsswitch.c:343 612 {*jcc_1}
     (int_list:REG_BR_PROB 8987 (nil))
 -> 204)
(note 70 69 71 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 16 (set (reg:DI 126)
        (reg/f:DI 7 sp)) nsswitch.c:344 -1
     (nil))
(insn 72 71 73 16 (set (reg/f:DI 93 [ D.13717 ])
        (reg:DI 126)) nsswitch.c:344 -1
     (nil))
(insn 73 72 74 16 (parallel [
            (set (reg/f:DI 94 [ D.13716 ])
                (plus:DI (reg/v/f:DI 123 [ ni ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:346 -1
     (nil))
(insn 74 73 75 16 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.13716 ])) nsswitch.c:346 -1
     (nil))
(call_insn/i 75 74 76 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nsswitch.c:346 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 76 75 77 16 (set (reg:DI 128)
        (reg:DI 0 ax)) nsswitch.c:346 -1
     (nil))
(insn 77 76 78 16 (set (reg:DI 129)
        (reg:DI 128)) nsswitch.c:346 -1
     (nil))
(insn 78 77 79 16 (set (reg:DI 95 [ D.13718 ])
        (reg:DI 129)) nsswitch.c:346 -1
     (nil))
(insn 79 78 80 16 (set (reg:DI 130)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ac278906e10 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) nsswitch.c:348 -1
     (nil))
(insn 80 79 81 16 (set (reg/v:SI 97 [ saved_errno ])
        (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 130)) [2 __libc_errno+0 S4 A32])) nsswitch.c:348 -1
     (nil))
(insn 81 80 82 16 (parallel [
            (set (reg:DI 131 [ shlen ])
                (plus:DI (reg:DI 95 [ D.13718 ])
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 82 81 83 16 (parallel [
            (set (reg:DI 132)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 83 82 84 16 (parallel [
            (set (reg:DI 133)
                (plus:DI (reg:DI 131 [ shlen ])
                    (reg:DI 132)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 84 83 85 16 (parallel [
            (set (reg:DI 135)
                (udiv:DI (reg:DI 133)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 136)
                (umod:DI (reg:DI 133)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 85 84 86 16 (parallel [
            (set (reg:DI 137)
                (mult:DI (reg:DI 135)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 86 85 87 16 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 87 86 88 16 (set (reg:DI 138)
        (reg/f:DI 83 virtual-stack-dynamic)) nsswitch.c:349 -1
     (nil))
(insn 88 87 89 16 (parallel [
            (set (reg/f:DI 139)
                (plus:DI (reg:DI 138)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:349 -1
     (nil))
(insn 89 88 90 16 (set (reg/f:DI 98 [ shlib_name.28 ])
        (reg/f:DI 139)) nsswitch.c:349 -1
     (nil))
(insn 90 89 91 16 (set (reg:DI 140)
        (const_int 26867062397888876 [0x5f73736e62696c])) nsswitch.c:352 -1
     (nil))
(insn 91 90 92 16 (set (mem:DI (reg/f:DI 98 [ shlib_name.28 ]) [0 MEM[(void *)shlib_name.28_24]+0 S8 A8])
        (reg:DI 140)) nsswitch.c:352 -1
     (nil))
(insn 92 91 93 16 (parallel [
            (set (reg:DI 141 [ D.13719 ])
                (plus:DI (reg/f:DI 98 [ shlib_name.28 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:352 -1
     (nil))
(insn 93 92 94 16 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.13716 ])) nsswitch.c:352 -1
     (nil))
(insn 94 93 95 16 (set (reg:DI 5 di)
        (reg:DI 141 [ D.13719 ])) nsswitch.c:352 -1
     (nil))
(call_insn 95 94 96 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:352 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 96 95 97 16 (set (reg:DI 142)
        (reg:DI 0 ax)) nsswitch.c:352 -1
     (nil))
(insn 97 96 98 16 (set (reg:DI 143)
        (reg:DI 142)) nsswitch.c:352 -1
     (nil))
(insn 98 97 99 16 (set (reg/f:DI 100 [ D.13719 ])
        (reg:DI 143)) nsswitch.c:352 -1
     (nil))
(insn 99 98 100 16 (set (mem:SI (reg/f:DI 100 [ D.13719 ]) [0 MEM[(void *)_28]+0 S4 A8])
        (const_int 7303982 [0x6f732e])) nsswitch.c:352 -1
     (nil))
(insn 100 99 101 16 (parallel [
            (set (reg:DI 144 [ D.13719 ])
                (plus:DI (reg/f:DI 100 [ D.13719 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:352 -1
     (nil))
(insn 101 100 102 16 (set (mem:HI (reg:DI 144 [ D.13719 ]) [0 MEM[(void *)_30]+0 S2 A8])
        (const_int 12846 [0x322e])) nsswitch.c:352 -1
     (nil))
(insn 102 101 103 16 (set (mem:QI (plus:DI (reg:DI 144 [ D.13719 ])
                (const_int 2 [0x2])) [0 MEM[(void *)_30]+2 S1 A8])
        (const_int 0 [0])) nsswitch.c:352 -1
     (nil))
(insn 103 102 104 16 (set (reg:SI 4 si)
        (const_int -2147483647 [0xffffffff80000001])) nsswitch.c:358 -1
     (nil))
(insn 104 103 105 16 (set (reg:DI 5 di)
        (reg/f:DI 98 [ shlib_name.28 ])) nsswitch.c:358 -1
     (nil))
(call_insn 105 104 106 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_dlopen_mode") [flags 0x43]  <function_decl 0x2ac27894b360 __libc_dlopen_mode>) [0 __libc_dlopen_mode S1 A8])
            (const_int 0 [0]))) nsswitch.c:358 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_dlopen_mode") [flags 0x43]  <function_decl 0x2ac27894b360 __libc_dlopen_mode>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 106 105 107 16 (set (reg/f:DI 102 [ D.13717 ])
        (reg:DI 0 ax)) nsswitch.c:358 -1
     (nil))
(insn 107 106 108 16 (set (mem/f:DI (plus:DI (reg/f:DI 89 [ D.13715 ])
                (const_int 8 [0x8])) [3 _77->lib_handle+0 S8 A64])
        (reg/f:DI 102 [ D.13717 ])) nsswitch.c:358 -1
     (nil))
(insn 108 107 109 16 (set (reg/f:DI 103 [ D.13715 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 123 [ ni ])
                (const_int 32 [0x20])) [3 ni_8(D)->library+0 S8 A64])) nsswitch.c:359 -1
     (nil))
(insn 109 108 110 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/f:DI 103 [ D.13715 ])
                    (const_int 8 [0x8])) [3 _35->lib_handle+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:359 -1
     (nil))
(jump_insn 110 109 111 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) nsswitch.c:359 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 118)
(note 111 110 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 17 (set (reg:DI 145)
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:362 -1
     (nil))
(insn 113 112 114 17 (set (mem/f:DI (plus:DI (reg/f:DI 103 [ D.13715 ])
                (const_int 8 [0x8])) [3 _35->lib_handle+0 S8 A64])
        (reg:DI 145)) nsswitch.c:362 -1
     (nil))
(insn 114 113 115 17 (set (reg:DI 146)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ac278906e10 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) nsswitch.c:363 -1
     (nil))
(insn 115 114 116 17 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 146)) [2 __libc_errno+0 S4 A32])
        (reg/v:SI 97 [ saved_errno ])) nsswitch.c:363 -1
     (nil))
(jump_insn 116 115 117 17 (set (pc)
        (label_ref 169)) -1
     (nil)
 -> 169)
(barrier 117 116 118)
(code_label 118 117 119 18 123 "" [1 uses])
(note 119 118 120 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (symbol_ref:DI ("is_nscd") [flags 0x2]  <var_decl 0x2ac278b92e10 is_nscd>) [11 is_nscd+0 S1 A8])
            (const_int 0 [0]))) nsswitch.c:366 -1
     (nil))
(jump_insn 121 120 122 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) nsswitch.c:366 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 169)
(note 122 121 123 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 19 (set (reg:DI 147)
        (reg/f:DI 7 sp)) nsswitch.c:367 -1
     (nil))
(insn 124 123 125 19 (set (reg/f:DI 106 [ D.13717 ])
        (reg:DI 147)) nsswitch.c:367 -1
     (nil))
(insn 125 124 126 19 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.13716 ])) nsswitch.c:369 -1
     (nil))
(call_insn/i 126 125 127 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nsswitch.c:369 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 127 126 128 19 (set (reg:DI 149)
        (reg:DI 0 ax)) nsswitch.c:369 -1
     (nil))
(insn 128 127 129 19 (set (reg:DI 150)
        (reg:DI 149)) nsswitch.c:369 -1
     (nil))
(insn 129 128 130 19 (set (reg:DI 107 [ D.13718 ])
        (reg:DI 150)) nsswitch.c:369 -1
     (nil))
(insn 130 129 131 19 (parallel [
            (set (reg:DI 151 [ initlen ])
                (plus:DI (reg:DI 107 [ D.13718 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 131 130 132 19 (parallel [
            (set (reg:DI 152)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 132 131 133 19 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg:DI 151 [ initlen ])
                    (reg:DI 152)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 133 132 134 19 (parallel [
            (set (reg:DI 155)
                (udiv:DI (reg:DI 153)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 156)
                (umod:DI (reg:DI 153)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 134 133 135 19 (parallel [
            (set (reg:DI 157)
                (mult:DI (reg:DI 155)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 135 134 136 19 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 157)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 136 135 137 19 (set (reg:DI 158)
        (reg/f:DI 83 virtual-stack-dynamic)) nsswitch.c:371 -1
     (nil))
(insn 137 136 138 19 (parallel [
            (set (reg/f:DI 159)
                (plus:DI (reg:DI 158)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:371 -1
     (nil))
(insn 138 137 139 19 (set (reg/f:DI 109 [ init_name.32 ])
        (reg/f:DI 159)) nsswitch.c:371 -1
     (nil))
(insn 139 138 140 19 (set (mem:SI (reg/f:DI 109 [ init_name.32 ]) [0 MEM[(void *)init_name.32_45]+0 S4 A8])
        (const_int 1936944735 [0x73736e5f])) nsswitch.c:374 -1
     (nil))
(insn 140 139 141 19 (set (mem:QI (plus:DI (reg/f:DI 109 [ init_name.32 ])
                (const_int 4 [0x4])) [0 MEM[(void *)init_name.32_45]+4 S1 A8])
        (const_int 95 [0x5f])) nsswitch.c:374 -1
     (nil))
(insn 141 140 142 19 (parallel [
            (set (reg:DI 160 [ D.13719 ])
                (plus:DI (reg/f:DI 109 [ init_name.32 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:374 -1
     (nil))
(insn 142 141 143 19 (set (reg:DI 4 si)
        (reg/f:DI 94 [ D.13716 ])) nsswitch.c:374 -1
     (nil))
(insn 143 142 144 19 (set (reg:DI 5 di)
        (reg:DI 160 [ D.13719 ])) nsswitch.c:374 -1
     (nil))
(call_insn 144 143 145 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:374 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 145 144 146 19 (set (reg:DI 161)
        (reg:DI 0 ax)) nsswitch.c:374 -1
     (nil))
(insn 146 145 147 19 (set (reg:DI 162)
        (reg:DI 161)) nsswitch.c:374 -1
     (nil))
(insn 147 146 148 19 (set (reg/f:DI 111 [ D.13719 ])
        (reg:DI 162)) nsswitch.c:374 -1
     (nil))
(insn 148 147 149 19 (set (mem:SI (reg/f:DI 111 [ D.13719 ]) [0 MEM[(void *)_49]+0 S4 A8])
        (const_int 1768843615 [0x696e695f])) nsswitch.c:374 -1
     (nil))
(insn 149 148 150 19 (set (mem:HI (plus:DI (reg/f:DI 111 [ D.13719 ])
                (const_int 4 [0x4])) [0 MEM[(void *)_49]+4 S2 A8])
        (const_int 116 [0x74])) nsswitch.c:374 -1
     (nil))
(insn 150 149 151 19 (set (reg:DI 163)
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.13715 ])
                (const_int 8 [0x8])) [3 _35->lib_handle+0 S8 A64])) nsswitch.c:381 -1
     (nil))
(insn 151 150 152 19 (set (reg:DI 4 si)
        (reg/f:DI 109 [ init_name.32 ])) nsswitch.c:381 -1
     (nil))
(insn 152 151 153 19 (set (reg:DI 5 di)
        (reg:DI 163)) nsswitch.c:381 -1
     (nil))
(call_insn 153 152 154 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_dlsym") [flags 0x43]  <function_decl 0x2ac27894b438 __libc_dlsym>) [0 __libc_dlsym S1 A8])
            (const_int 0 [0]))) nsswitch.c:381 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_dlsym") [flags 0x43]  <function_decl 0x2ac27894b438 __libc_dlsym>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 154 153 155 19 (set (reg/f:DI 113 [ D.13717 ])
        (reg:DI 0 ax)) nsswitch.c:381 -1
     (nil))
(insn 155 154 156 19 (set (reg/v/f:DI 114 [ ifct ])
        (reg/f:DI 113 [ D.13717 ])) nsswitch.c:380 -1
     (nil))
(insn 156 155 157 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 114 [ ifct ])
            (const_int 0 [0]))) nsswitch.c:382 -1
     (nil))
(jump_insn 157 156 158 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) nsswitch.c:382 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 164)
(note 158 157 159 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 20 (set (reg/v/f:DI 115 [ cb ])
        (mem/f/c:DI (symbol_ref:DI ("nscd_init_cb") [flags 0x2]  <var_decl 0x2ac278b92ea0 nscd_init_cb>) [3 nscd_init_cb+0 S8 A64])) nsswitch.c:384 -1
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg:DI 164 [ cb ])
                (asm_operands:DI ("ror $2*8+1, %0
xor %%fs:%c2, %0") ("=r") 0 [
                        (reg/v/f:DI 115 [ cb ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") nsswitch.c:386)
                        (asm_input:DI ("i") nsswitch.c:386)
                    ]
                     [] nsswitch.c:386))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nsswitch.c:386 -1
     (nil))
(insn 161 160 162 20 (set (reg/v/f:DI 115 [ cb ])
        (reg:DI 164 [ cb ])) nsswitch.c:386 -1
     (nil))
(insn 162 161 163 20 (set (reg:DI 5 di)
        (reg/v/f:DI 115 [ cb ])) nsswitch.c:388 -1
     (nil))
(call_insn 163 162 164 20 (call (mem:QI (reg/v/f:DI 114 [ ifct ]) [0 *ifct_54 S1 A8])
        (const_int 0 [0])) nsswitch.c:388 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 164 163 165 21 125 "" [1 uses])
(note 165 164 166 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 166 165 167 21 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 167 166 168 21 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 168 167 169 21 (set (reg/f:DI 7 sp)
        (reg/f:DI 106 [ D.13717 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(code_label 169 168 170 22 124 "" [2 uses])
(note 170 169 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 22 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 172 171 173 22 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 173 172 7 22 (set (reg/f:DI 7 sp)
        (reg/f:DI 93 [ D.13717 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 7 173 197 22 (set (reg:SI 88 [ D.13714 ])
        (const_int 0 [0])) nsswitch.c:394 -1
     (nil))
(jump_insn 197 7 198 22 (set (pc)
        (label_ref 174)) -1
     (nil)
 -> 174)
(barrier 198 197 200)
(code_label 200 198 199 23 127 "" [1 uses])
(note 199 200 6 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 6 199 201 23 (set (reg:SI 88 [ D.13714 ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:340 -1
     (nil))
(jump_insn 201 6 202 23 (set (pc)
        (label_ref 174)) -1
     (nil)
 -> 174)
(barrier 202 201 204)
(code_label 204 202 203 24 128 "" [1 uses])
(note 203 204 8 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 8 203 174 24 (set (reg:SI 88 [ D.13714 ])
        (const_int 0 [0])) nsswitch.c:394 -1
     (nil))
(code_label 174 8 175 25 122 "" [3 uses])
(note 175 174 176 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 25 (set (reg:SI 122 [ <retval> ])
        (reg:SI 88 [ D.13714 ])) -1
     (nil))
(jump_insn 177 176 178 25 (set (pc)
        (label_ref 189)) -1
     (nil)
 -> 189)
(barrier 178 177 179)
(code_label 179 178 180 26 118 "" [1 uses])
(note 180 179 181 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 26 (set (mem/f:DI (plus:DI (reg/v/f:DI 123 [ ni ])
                (const_int 32 [0x20])) [3 ni_8(D)->library+0 S8 A64])
        (reg/f:DI 89 [ D.13715 ])) nsswitch.c:337 -1
     (nil))
(jump_insn 182 181 183 26 (set (pc)
        (label_ref 66)) nsswitch.c:337 -1
     (nil)
 -> 66)
(barrier 183 182 184)
(code_label 184 183 185 27 121 "" [1 uses])
(note 185 184 186 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 9 27 (set (mem/f:DI (plus:DI (reg/v/f:DI 123 [ ni ])
                (const_int 32 [0x20])) [3 ni_8(D)->library+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:337 -1
     (nil))
(insn 9 186 187 27 (set (reg:SI 88 [ D.13714 ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:340 -1
     (nil))
(jump_insn 187 9 188 27 (set (pc)
        (label_ref 174)) nsswitch.c:337 -1
     (nil)
 -> 174)
(barrier 188 187 189)
(code_label 189 188 192 28 114 "" [1 uses])
(note 192 189 190 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 190 192 191 28 (set (reg/i:SI 0 ax)
        (reg:SI 122 [ <retval> ])) nsswitch.c:395 -1
     (nil))
(insn 191 190 0 28 (use (reg/i:SI 0 ax)) nsswitch.c:395 -1
     (nil))

;; Function free_database_entries (free_database_entries, funcdef_no=69, decl_uid=13116, cgraph_uid=73, symbol_order=92)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 6->5 redirected to 15
Edge 10->8 redirected to 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 16 failed.
Forwarding edge 2->4 to 16 failed.
Forwarding edge 8->9 to 16 failed.
Redirecting jump 27 from 4 to 16.
Forwarding edge 14->15 to 8 failed.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 16 failed.
Deleted label in block 4.
Forwarding edge 8->9 to 16 failed.
Forwarding edge 14->15 to 8 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 91 [ entry ])
        (reg:DI 5 di [ entry ])) nsswitch.c:867 -1
     (nil))
(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 3 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ entry ])
            (const_int 0 [0]))) nsswitch.c:868 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) nsswitch.c:868 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 13)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 11 10 12 4 (set (pc)
        (label_ref 53)) nsswitch.c:887 -1
     (nil)
 -> 53)
(barrier 12 11 13)
(code_label 13 12 14 5 144 "" [1 uses])
(note 14 13 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 55 14 56 5 (set (pc)
        (label_ref 23)) -1
     (nil)
 -> 23)
(barrier 56 55 58)
(code_label 58 56 57 6 151 "" [1 uses])
(note 57 58 4 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 4 57 23 6 (set (reg/v/f:DI 91 [ entry ])
        (reg/v/f:DI 90 [ entry ])) -1
     (nil))
(code_label 23 4 15 7 146 "" [1 uses])
(note 15 23 16 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 7 (set (reg/v/f:DI 87 [ olds ])
        (mem/f:DI (plus:DI (reg/v/f:DI 91 [ entry ])
                (const_int 8 [0x8])) [3 entry_19->service+0 S8 A64])) nsswitch.c:871 -1
     (nil))
(insn 17 16 18 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ olds ])
            (const_int 0 [0]))) nsswitch.c:873 -1
     (nil))
(jump_insn 18 17 49 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) nsswitch.c:873 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 30)
(code_label 49 18 19 8 150 "" [1 uses])
(note 19 49 20 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 8 (set (reg/v/f:DI 90 [ entry ])
        (mem/f:DI (reg/v/f:DI 91 [ entry ]) [3 entry_19->next+0 S8 A64])) nsswitch.c:884 -1
     (nil))
(insn 21 20 22 8 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ entry ])) nsswitch.c:885 -1
     (nil))
(call_insn 22 21 24 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:885 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 22 25 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 90 [ entry ])
            (const_int 0 [0]))) nsswitch.c:868 -1
     (nil))
(jump_insn 25 24 29 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) nsswitch.c:868 612 {*jcc_1}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 58)
(note 29 25 27 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 27 29 28 9 (set (pc)
        (label_ref:DI 53)) 654 {jump}
     (nil)
 -> 53)
(barrier 28 27 30)
(code_label 30 28 31 10 145 "" [1 uses])
(note 31 30 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 31 60 10 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
(barrier 60 59 62)
(code_label 62 60 61 11 152 "" [1 uses])
(note 61 62 5 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 5 61 46 11 (set (reg/v/f:DI 87 [ olds ])
        (reg/v/f:DI 89 [ olds ])) -1
     (nil))
(code_label 46 5 32 12 149 "" [1 uses])
(note 32 46 33 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 12 (set (reg/f:DI 88 [ D.13726 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ olds ])
                (const_int 40 [0x28])) [3 olds_20->known+0 S8 A64])) nsswitch.c:877 -1
     (nil))
(insn 34 33 35 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.13726 ])
            (const_int 0 [0]))) nsswitch.c:877 -1
     (nil))
(jump_insn 35 34 36 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) nsswitch.c:877 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 41)
(note 36 35 37 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 13 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
                    ] UNSPEC_GOTPCREL)) [14  S8 A8])) nsswitch.c:878 -1
     (nil))
(insn 38 37 39 13 (set (reg:DI 4 si)
        (reg:DI 92)) nsswitch.c:878 -1
     (expr_list:REG_EQUAL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (nil)))
(insn 39 38 40 13 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.13726 ])) nsswitch.c:878 -1
     (nil))
(call_insn 40 39 41 13 (call (mem:QI (symbol_ref:DI ("__tdestroy") [flags 0x41]  <function_decl 0x2ac278acfd80 __tdestroy>) [0 __tdestroy S1 A8])
        (const_int 0 [0])) nsswitch.c:878 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__tdestroy") [flags 0x41]  <function_decl 0x2ac278acfd80 __tdestroy>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(code_label 41 40 42 14 148 "" [1 uses])
(note 42 41 43 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 14 (set (reg/v/f:DI 89 [ olds ])
        (mem/f:DI (reg/v/f:DI 87 [ olds ]) [3 olds_20->next+0 S8 A64])) nsswitch.c:880 -1
     (nil))
(insn 44 43 45 14 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ olds ])) nsswitch.c:881 -1
     (nil))
(call_insn 45 44 47 14 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:881 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 45 48 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ olds ])
            (const_int 0 [0]))) nsswitch.c:873 -1
     (nil))
(jump_insn 48 47 52 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 62)
            (pc))) nsswitch.c:873 612 {*jcc_1}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 62)
(note 52 48 50 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 50 52 51 15 (set (pc)
        (label_ref 49)) -1
     (nil)
 -> 49)
(barrier 51 50 53)
(code_label 53 51 54 16 143 "" [2 uses])
(note 54 53 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

;; Function free_defconfig (free_defconfig, funcdef_no=70, decl_uid=13128, cgraph_uid=74, symbol_order=93)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
deleting block 5


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/v/f:DI 87 [ entry ])
        (mem/f/c:DI (symbol_ref:DI ("defconfig_entries") [flags 0x2]  <var_decl 0x2ac278b92d80 defconfig_entries>) [3 defconfig_entries+0 S8 A64])) nsswitch.c:892 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ entry ])
            (const_int 0 [0]))) nsswitch.c:894 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) nsswitch.c:894 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 15)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (mem/f/c:DI (symbol_ref:DI ("defconfig_entries") [flags 0x2]  <var_decl 0x2ac278b92d80 defconfig_entries>) [3 defconfig_entries+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:899 -1
     (nil))
(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ entry ])) nsswitch.c:901 -1
     (nil))
(call_insn/j 11 10 12 4 (call (mem:QI (symbol_ref:DI ("free_database_entries") [flags 0x3]  <function_decl 0x2ac278bd70d8 free_database_entries>) [0 free_database_entries S1 A8])
        (const_int 0 [0])) nsswitch.c:901 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free_database_entries") [flags 0x3]  <function_decl 0x2ac278bd70d8 free_database_entries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 12 11 15)
(code_label 15 12 16 6 163 "" [1 uses])
(note 16 15 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function free_mem (free_mem, funcdef_no=71, decl_uid=13135, cgraph_uid=75, symbol_order=95)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 8->6 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->12 redirected to 13
Forwarding edge 10->11 to 5 failed.
deleting block 12


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 5 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 7 2 (set (reg/v/f:DI 88 [ top ])
        (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])) nsswitch.c:906 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ top ])
            (const_int 0 [0]))) nsswitch.c:909 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) nsswitch.c:909 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 44)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:914 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 88 [ top ]) [3 top_6->entry+0 S8 A64])) nsswitch.c:916 -1
     (nil))
(call_insn 12 11 13 4 (call (mem:QI (symbol_ref:DI ("free_database_entries") [flags 0x3]  <function_decl 0x2ac278bd70d8 free_database_entries>) [0 free_database_entries S1 A8])
        (const_int 0 [0])) nsswitch.c:916 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free_database_entries") [flags 0x3]  <function_decl 0x2ac278bd70d8 free_database_entries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 4 (set (reg/v/f:DI 87 [ oldl ])
        (mem/f:DI (plus:DI (reg/v/f:DI 88 [ top ])
                (const_int 8 [0x8])) [3 top_6->library+0 S8 A64])) nsswitch.c:918 -1
     (nil))
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 87 [ oldl ])
            (const_int 0 [0]))) nsswitch.c:919 -1
     (nil))
(jump_insn 15 14 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) nsswitch.c:919 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 20)
(code_label 38 15 16 5 170 "" [1 uses])
(note 16 38 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ top ])) nsswitch.c:930 -1
     (nil))
(call_insn/j 18 17 19 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:930 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 19 18 20)
(code_label 20 19 21 6 167 "" [1 uses])
(note 21 20 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 46 21 47 6 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
(barrier 47 46 49)
(code_label 49 47 48 7 171 "" [1 uses])
(note 48 49 3 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 3 48 35 7 (set (reg/v/f:DI 87 [ oldl ])
        (reg/v/f:DI 92 [ oldl ])) -1
     (nil))
(code_label 35 3 22 8 169 "" [1 uses])
(note 22 35 23 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 8 (set (reg/f:DI 90 [ D.13732 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ oldl ])
                (const_int 8 [0x8])) [3 oldl_19->lib_handle+0 S8 A64])) nsswitch.c:923 -1
     (nil))
(insn 24 23 25 8 (parallel [
            (set (reg:DI 93 [ D.13732 ])
                (plus:DI (reg/f:DI 90 [ D.13732 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:923 -1
     (nil))
(insn 25 24 26 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 93 [ D.13732 ])
            (const_int -3 [0xfffffffffffffffd]))) nsswitch.c:923 -1
     (nil))
(jump_insn 26 25 27 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) nsswitch.c:923 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 30)
(note 27 26 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 9 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.13732 ])) nsswitch.c:924 -1
     (nil))
(call_insn 29 28 30 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_dlclose") [flags 0x43]  <function_decl 0x2ac27894b510 __libc_dlclose>) [0 __libc_dlclose S1 A8])
            (const_int 0 [0]))) nsswitch.c:924 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_dlclose") [flags 0x43]  <function_decl 0x2ac27894b510 __libc_dlclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 30 29 31 10 168 "" [1 uses])
(note 31 30 32 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 10 (set (reg/v/f:DI 92 [ oldl ])
        (mem/f:DI (plus:DI (reg/v/f:DI 87 [ oldl ])
                (const_int 16 [0x10])) [3 oldl_19->next+0 S8 A64])) nsswitch.c:926 -1
     (nil))
(insn 33 32 34 10 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ oldl ])) nsswitch.c:927 -1
     (nil))
(call_insn 34 33 36 10 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:927 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 36 34 37 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ oldl ])
            (const_int 0 [0]))) nsswitch.c:919 -1
     (nil))
(jump_insn 37 36 41 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) nsswitch.c:919 612 {*jcc_1}
     (int_list:REG_BR_PROB 9100 (nil))
 -> 49)
(note 41 37 39 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 39 41 40 11 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
(barrier 40 39 44)
(code_label 44 40 45 13 165 "" [1 uses])
(note 45 44 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

;; Function __nss_database_lookup (*__GI___nss_database_lookup, funcdef_no=55, decl_uid=10987, cgraph_uid=55, symbol_order=73)

Partition 1: size 8 align 8
	len
Partition 0: size 8 align 8
	line

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51
Edge 42->44 redirected to 57
Purged non-fallthru edges from bb 59


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 19->20 to 31 failed.
Edge 23->25 redirected to 56
Forwarding edge 24->25 to 56 failed.
Deleted label in block 25.
Merging block 26 into block 25...
Merged blocks 25 and 26.
Merged 25 and 26 without moving.
Forwarding edge 24->25 to 56 failed.
Forwarding edge 24->25 to 56 failed.
Edge 27->20 redirected to 31
Forwarding edge 31->32 to 11 failed.
Forwarding edge 46->47 to 54 failed.
Edge 51->47 redirected to 54
Edge 52->47 redirected to 54
Edge 56->20 redirected to 31
Forwarding edge 56->57 to 27 failed.
Forwarding edge 56->57 to 27 failed.


try_optimize_cfg iteration 2

Forwarding edge 19->20 to 31 failed.
Deleted label in block 20.
Forwarding edge 24->25 to 56 failed.
Forwarding edge 31->32 to 11 failed.
Forwarding edge 46->47 to 54 failed.
Deleted label in block 47.
Forwarding edge 56->57 to 27 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 15 NOTE_INSN_DELETED)
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 15 3 2 (set (reg/v/f:DI 161 [ database ])
        (reg:DI 5 di [ database ])) nsswitch.c:110 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 162 [ alternate_name ])
        (reg:DI 4 si [ alternate_name ])) nsswitch.c:110 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 163 [ defconfig ])
        (reg:DI 1 dx [ defconfig ])) nsswitch.c:110 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 164 [ ni ])
        (reg:DI 2 cx [ ni ])) nsswitch.c:110 -1
     (nil))
(note 6 5 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 6 18 2 (set (reg:SI 168)
        (const_int 1 [0x1])) nsswitch.c:112 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 169)
        (const_int 0 [0])) nsswitch.c:112 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 165 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 168)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 169)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:112)
                        (asm_input:SI ("m") nsswitch.c:112)
                        (asm_input:SI ("3") nsswitch.c:112)
                    ]
                     [] nsswitch.c:112))
            (set (reg:SI 166 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 168)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 169)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:112)
                        (asm_input:SI ("m") nsswitch.c:112)
                        (asm_input:SI ("3") nsswitch.c:112)
                    ]
                     [] nsswitch.c:112))
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 168)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 169)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:112)
                        (asm_input:SI ("m") nsswitch.c:112)
                        (asm_input:SI ("3") nsswitch.c:112)
                    ]
                     [] nsswitch.c:112))
            (set (reg:SI 167 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 168)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 169)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:112)
                        (asm_input:SI ("m") nsswitch.c:112)
                        (asm_input:SI ("3") nsswitch.c:112)
                    ]
                     [] nsswitch.c:112))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) nsswitch.c:112 -1
     (nil))
(insn 20 19 21 2 (set (reg/v:SI 89 [ ignore1 ])
        (reg:SI 165 [ ignore1 ])) nsswitch.c:112 -1
     (nil))
(insn 21 20 22 2 (set (reg/v:SI 90 [ ignore2 ])
        (reg:SI 166 [ ignore2 ])) nsswitch.c:112 -1
     (nil))
(insn 22 21 23 2 (set (reg/v:SI 91 [ ignore3 ])
        (reg:SI 167 [ ignore3 ])) nsswitch.c:112 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:116 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) nsswitch.c:116 -1
     (int_list:REG_BR_PROB 2163 (nil))
 -> 30)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:118)
                    ]
                     [] nsswitch.c:118))
            (set (reg:SI 170 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:118)
                    ]
                     [] nsswitch.c:118))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) nsswitch.c:118 -1
     (nil))
(insn 27 26 14 4 (set (reg/v:SI 93 [ ignore ])
        (reg:SI 170 [ ignore ])) nsswitch.c:118 -1
     (nil))
(insn 14 27 28 4 (set (reg:SI 87 [ D.13761 ])
        (const_int 0 [0])) nsswitch.c:119 -1
     (nil))
(jump_insn 28 14 29 4 (set (pc)
        (label_ref 310)) nsswitch.c:119 -1
     (nil)
 -> 310)
(barrier 29 28 30)
(code_label 30 29 31 5 175 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 94 [ D.13764 ])
        (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])) nsswitch.c:123 -1
     (nil))
(insn 33 32 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.13764 ])
            (const_int 0 [0]))) nsswitch.c:123 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 209)
            (pc))) nsswitch.c:123 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 209)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x2ac278dbabd0 *.LC14>)) nsswitch.c:541 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x2ac278dbac60 *.LC15>)) nsswitch.c:541 -1
     (nil))
(call_insn 38 37 39 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_new_fopen") [flags 0x41]  <function_decl 0x2ac278a8f948 _IO_new_fopen>) [0 _IO_new_fopen S1 A8])
            (const_int 0 [0]))) nsswitch.c:541 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_new_fopen") [flags 0x41]  <function_decl 0x2ac278a8f948 _IO_new_fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 40 6 (set (reg/v/f:DI 109 [ fp ])
        (reg:DI 0 ax)) nsswitch.c:541 -1
     (nil))
(insn 40 39 41 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ fp ])
            (const_int 0 [0]))) nsswitch.c:542 -1
     (nil))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 328)
            (pc))) nsswitch.c:542 -1
     (int_list:REG_BR_PROB 458 (nil))
 -> 328)
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:SI 172)
        (mem:SI (reg/v/f:DI 109 [ fp ]) [2 fp_57->_flags+0 S4 A64])) nsswitch.c:546 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:SI 171 [ D.13761 ])
                (and:SI (reg:SI 172)
                    (const_int -32769 [0xffffffffffff7fff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:546 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 109 [ fp ]) [2 fp_57->_flags+0 S4 A64])
            (const_int -32769 [0xffffffffffff7fff]))
        (nil)))
(insn 45 44 46 7 (parallel [
            (set (reg:SI 173)
                (ior:SI (reg:SI 171 [ D.13761 ])
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:546 -1
     (nil))
(insn 46 45 47 7 (set (mem:SI (reg/v/f:DI 109 [ fp ]) [2 fp_57->_flags+0 S4 A64])
        (reg:SI 173)) nsswitch.c:546 -1
     (nil))
(insn 47 46 48 7 (set (reg:DI 5 di)
        (const_int 16 [0x10])) nsswitch.c:548 -1
     (nil))
(call_insn 48 47 49 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:548 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 48 50 7 (set (reg/f:DI 174)
        (reg:DI 0 ax)) nsswitch.c:548 -1
     (expr_list:REG_NOALIAS (reg/f:DI 174)
        (nil)))
(insn 50 49 51 7 (set (reg/v/f:DI 113 [ result ])
        (reg/f:DI 174)) nsswitch.c:548 -1
     (nil))
(insn 51 50 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 113 [ result ])
            (const_int 0 [0]))) nsswitch.c:549 -1
     (nil))
(jump_insn 52 51 53 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) nsswitch.c:549 -1
     (int_list:REG_BR_PROB 9921 (nil))
 -> 58)
(note 53 52 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ fp ])) nsswitch.c:551 -1
     (nil))
(call_insn 55 54 56 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_new_fclose") [flags 0x41]  <function_decl 0x2ac278a8faf8 _IO_new_fclose>) [0 _IO_new_fclose S1 A8])
            (const_int 0 [0]))) nsswitch.c:551 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_new_fclose") [flags 0x41]  <function_decl 0x2ac278a8faf8 _IO_new_fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 56 55 57 8 (set (pc)
        (label_ref 328)) nsswitch.c:551 -1
     (nil)
 -> 328)
(barrier 57 56 58)
(code_label 58 57 59 9 179 "" [1 uses])
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 9 (set (mem/f:DI (reg/v/f:DI 113 [ result ]) [3 result_61->entry+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:555 -1
     (nil))
(insn 61 60 62 9 (set (mem/f:DI (plus:DI (reg/v/f:DI 113 [ result ])
                (const_int 8 [0x8])) [3 result_61->library+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:556 -1
     (nil))
(insn 62 61 63 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 line+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:558 -1
     (nil))
(insn 63 62 7 9 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 len+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:559 -1
     (nil))
(insn 7 63 200 9 (set (reg/v/f:DI 122 [ last ])
        (const_int 0 [0])) nsswitch.c:557 -1
     (nil))
(code_label 200 7 64 10 191 "" [1 uses])
(note 64 200 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:565 -1
     (nil))
(insn 66 65 67 10 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:565 -1
     (nil))
(insn 67 66 68 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 109 [ fp ])) nsswitch.c:565 -1
     (nil))
(insn 68 67 69 10 (set (reg:DI 4 si)
        (reg:DI 175)) nsswitch.c:565 -1
     (nil))
(insn 69 68 70 10 (set (reg:DI 5 di)
        (reg:DI 176)) nsswitch.c:565 -1
     (nil))
(call_insn 70 69 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__getline") [flags 0x41]  <function_decl 0x2ac278a7d000 __getline>) [0 __getline S1 A8])
            (const_int 0 [0]))) nsswitch.c:565 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__getline") [flags 0x41]  <function_decl 0x2ac278a7d000 __getline>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 71 70 72 10 (set (reg/v:DI 114 [ n ])
        (reg:DI 0 ax)) nsswitch.c:565 -1
     (nil))
(insn 72 71 73 10 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:DI 114 [ n ])
            (const_int 0 [0]))) nsswitch.c:566 -1
     (nil))
(jump_insn 73 72 205 10 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) nsswitch.c:566 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 83)
(code_label 205 73 74 11 192 "" [1 uses])
(note 74 205 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (reg:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 line+0 S8 A64])) nsswitch.c:595 -1
     (nil))
(insn 76 75 77 11 (set (reg:DI 5 di)
        (reg:DI 177)) nsswitch.c:595 -1
     (nil))
(call_insn 77 76 78 11 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:595 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 78 77 79 11 (set (reg:DI 5 di)
        (reg/v/f:DI 109 [ fp ])) nsswitch.c:597 -1
     (nil))
(call_insn 79 78 80 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_new_fclose") [flags 0x41]  <function_decl 0x2ac278a8faf8 _IO_new_fclose>) [0 _IO_new_fclose S1 A8])
            (const_int 0 [0]))) nsswitch.c:597 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_new_fclose") [flags 0x41]  <function_decl 0x2ac278a8faf8 _IO_new_fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 11 11 (set (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])
        (reg/v/f:DI 113 [ result ])) nsswitch.c:125 -1
     (nil))
(insn 11 80 81 11 (set (reg/f:DI 94 [ D.13764 ])
        (reg/v/f:DI 113 [ result ])) nsswitch.c:125 -1
     (nil))
(jump_insn 81 11 82 11 (set (pc)
        (label_ref 209)) nsswitch.c:125 -1
     (nil)
 -> 209)
(barrier 82 81 83)
(code_label 83 82 84 12 180 "" [1 uses])
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 12 (set (reg/f:DI 115 [ D.13767 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 line+0 S8 A64])) nsswitch.c:568 -1
     (nil))
(insn 86 85 87 12 (parallel [
            (set (reg:DI 178 [ D.13768 ])
                (plus:DI (reg/v:DI 114 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:568 -1
     (nil))
(insn 87 86 88 12 (parallel [
            (set (reg/f:DI 118 [ D.13767 ])
                (plus:DI (reg/f:DI 115 [ D.13767 ])
                    (reg:DI 178 [ D.13768 ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:568 -1
     (nil))
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 118 [ D.13767 ]) [0 *_66+0 S1 A8])
            (const_int 10 [0xa]))) nsswitch.c:568 -1
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 93)
            (pc))) nsswitch.c:568 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 93)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (mem:QI (reg/f:DI 118 [ D.13767 ]) [0 *_66+0 S1 A8])
        (const_int 0 [0])) nsswitch.c:569 -1
     (nil))
(insn 92 91 93 13 (set (reg/f:DI 115 [ D.13767 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 line+0 S8 A64])) -1
     (nil))
(code_label 93 92 94 14 181 "" [1 uses])
(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 14 (set (reg:SI 4 si)
        (const_int 35 [0x23])) nsswitch.c:574 -1
     (nil))
(insn 96 95 97 14 (set (reg:DI 5 di)
        (reg/f:DI 115 [ D.13767 ])) nsswitch.c:574 -1
     (nil))
(call_insn/i 97 96 98 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strchrnul") [flags 0x41]  <function_decl 0x2ac2786e4288 __strchrnul>) [0 __strchrnul S1 A8])
            (const_int 0 [0]))) nsswitch.c:574 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strchrnul") [flags 0x41]  <function_decl 0x2ac2786e4288 __strchrnul>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 98 97 99 14 (set (reg/f:DI 120 [ D.13767 ])
        (reg:DI 0 ax)) nsswitch.c:574 -1
     (nil))
(insn 99 98 100 14 (set (mem:QI (reg/f:DI 120 [ D.13767 ]) [0 *_69+0 S1 A8])
        (const_int 0 [0])) nsswitch.c:574 -1
     (nil))
(insn 100 99 101 14 (set (reg/v/f:DI 126 [ line ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 line+0 S8 A64])) nsswitch.c:577 -1
     (nil))
(insn 101 100 102 14 (set (reg:QI 127 [ D.13769 ])
        (mem:QI (reg/v/f:DI 126 [ line ]) [0 *line_70+0 S1 A8])) nsswitch.c:577 -1
     (nil))
(insn 102 101 103 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.13769 ])
            (const_int 0 [0]))) nsswitch.c:577 -1
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) nsswitch.c:577 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 198)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (reg:DI 179)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_tsd_CTYPE_B") [flags 0x60]  <var_decl 0x2ac2788a2e10 __libc_tsd_CTYPE_B>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) nsswitch.c:767 -1
     (nil))
(insn 106 105 107 15 (set (reg/f:DI 159 [ D.13772 ])
        (mem/f/c:DI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 179)) [3 MEM[(const short unsigned int * *)&__libc_tsd_CTYPE_B]+0 S8 A64])) nsswitch.c:767 -1
     (nil))
(insn 107 106 108 15 (set (reg:DI 180 [ D.13771 ])
        (sign_extend:DI (reg:QI 127 [ D.13769 ]))) nsswitch.c:767 -1
     (nil))
(insn 108 107 109 15 (set (reg:HI 182)
        (mem:HI (plus:DI (mult:DI (reg:DI 180 [ D.13771 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 159 [ D.13772 ])) [5 *_154+0 S2 A16])) nsswitch.c:767 -1
     (nil))
(insn 109 108 110 15 (parallel [
            (set (reg:HI 181 [ D.13773 ])
                (and:HI (reg:HI 182)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:767 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 180 [ D.13771 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 159 [ D.13772 ])) [5 *_154+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 110 109 111 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 181 [ D.13773 ])
            (const_int 0 [0]))) nsswitch.c:767 -1
     (nil))
(jump_insn 111 110 112 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) nsswitch.c:767 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 125)
(note 112 111 116 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(code_label 116 112 113 17 184 "" [1 uses])
(note 113 116 114 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 17 (parallel [
            (set (reg/v/f:DI 126 [ line ])
                (plus:DI (reg/v/f:DI 126 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:768 -1
     (nil))
(insn 115 114 117 17 (set (reg:QI 127 [ D.13769 ])
        (mem:QI (reg/v/f:DI 126 [ line ]) [0 MEM[base: line_79, offset: 0B]+0 S1 A8])) nsswitch.c:767 -1
     (nil))
(insn 117 115 118 17 (set (reg:DI 183 [ D.13771 ])
        (sign_extend:DI (reg:QI 127 [ D.13769 ]))) nsswitch.c:767 -1
     (nil))
(insn 118 117 119 17 (set (reg:HI 185)
        (mem:HI (plus:DI (mult:DI (reg:DI 183 [ D.13771 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 159 [ D.13772 ])) [5 *_84+0 S2 A16])) nsswitch.c:767 -1
     (nil))
(insn 119 118 120 17 (parallel [
            (set (reg:HI 184 [ D.13773 ])
                (and:HI (reg:HI 185)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:767 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 183 [ D.13771 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 159 [ D.13772 ])) [5 *_84+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 120 119 121 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 184 [ D.13773 ])
            (const_int 0 [0]))) nsswitch.c:767 -1
     (nil))
(jump_insn 121 120 122 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) nsswitch.c:767 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 116)
(note 122 121 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.13769 ])
            (const_int 0 [0]))) nsswitch.c:772 -1
     (nil))
(jump_insn 124 123 125 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) nsswitch.c:772 -1
     (int_list:REG_BR_PROB 330 (nil))
 -> 198)
(code_label 125 124 126 19 183 "" [1 uses])
(note 126 125 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.13769 ])
            (const_int 58 [0x3a]))) nsswitch.c:772 -1
     (nil))
(jump_insn 128 127 129 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) nsswitch.c:772 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 132)
(note 129 128 130 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 130 129 131 20 (set (pc)
        (label_ref 198)) nsswitch.c:772 -1
     (nil)
 -> 198)
(barrier 131 130 132)
(code_label 132 131 133 21 185 "" [1 uses])
(note 133 132 8 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 8 133 140 21 (set (reg/v/f:DI 133 [ line ])
        (reg/v/f:DI 126 [ line ])) nsswitch.c:772 -1
     (nil))
(code_label 140 8 134 22 186 "" [1 uses])
(note 134 140 135 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 22 (parallel [
            (set (reg/v/f:DI 133 [ line ])
                (plus:DI (reg/v/f:DI 133 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:773 -1
     (nil))
(insn 136 135 137 22 (set (reg:QI 134 [ D.13769 ])
        (mem:QI (reg/v/f:DI 133 [ line ]) [0 MEM[base: line_88, offset: 0B]+0 S1 A8])) nsswitch.c:772 -1
     (nil))
(insn 137 136 138 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.13769 ])
            (const_int 0 [0]))) nsswitch.c:772 -1
     (nil))
(jump_insn 138 137 139 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) nsswitch.c:772 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 198)
(note 139 138 141 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 141 139 142 23 (set (reg:DI 186 [ D.13771 ])
        (sign_extend:DI (reg:QI 134 [ D.13769 ]))) nsswitch.c:772 -1
     (nil))
(insn 142 141 143 23 (set (reg:HI 188)
        (mem:HI (plus:DI (mult:DI (reg:DI 186 [ D.13771 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 159 [ D.13772 ])) [5 *_92+0 S2 A16])) nsswitch.c:772 -1
     (nil))
(insn 143 142 144 23 (parallel [
            (set (reg:HI 187)
                (lshiftrt:HI (reg:HI 188)
                    (const_int 13 [0xd])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:772 -1
     (expr_list:REG_EQUAL (lshiftrt:HI (mem:HI (plus:DI (mult:DI (reg:DI 186 [ D.13771 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 159 [ D.13772 ])) [5 *_92+0 S2 A16])
            (const_int 13 [0xd]))
        (nil)))
(insn 144 143 145 23 (parallel [
            (set (reg:HI 189)
                (xor:HI (reg:HI 187)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:772 -1
     (nil))
(insn 145 144 146 23 (parallel [
            (set (reg:QI 190 [ D.13770 ])
                (and:QI (subreg:QI (reg:HI 189) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:772 -1
     (nil))
(insn 146 145 147 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 190 [ D.13770 ])
            (const_int 0 [0]))) nsswitch.c:772 -1
     (nil))
(jump_insn 147 146 342 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 315)
            (pc))) nsswitch.c:772 612 {*jcc_1}
     (int_list:REG_BR_PROB 150 (nil))
 -> 315)
(note 342 147 148 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 148 342 149 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.13769 ])
            (const_int 58 [0x3a]))) nsswitch.c:772 -1
     (nil))
(insn 149 148 150 24 (set (reg:QI 192 [ D.13770 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:772 -1
     (nil))
(insn 150 149 151 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 192 [ D.13770 ])
            (const_int 0 [0]))) nsswitch.c:772 -1
     (nil))
(jump_insn 151 150 343 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) nsswitch.c:772 -1
     (int_list:REG_BR_PROB 9848 (nil))
 -> 140)
(note 343 151 153 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(jump_insn 153 343 154 25 (set (pc)
        (label_ref 315)) nsswitch.c:772 -1
     (nil)
 -> 315)
(barrier 154 153 319)
(code_label 319 154 156 27 203 "" [1 uses])
(note 156 319 157 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 27 (parallel [
            (set (reg/v/f:DI 140 [ line ])
                (plus:DI (reg/v/f:DI 133 [ line ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:777 -1
     (nil))
(insn 158 157 159 27 (set (mem:QI (reg/v/f:DI 133 [ line ]) [0 *line_88+0 S1 A8])
        (const_int 0 [0])) nsswitch.c:777 -1
     (nil))
(insn 159 158 160 27 (set (reg:DI 5 di)
        (reg/v/f:DI 126 [ line ])) nsswitch.c:779 -1
     (nil))
(call_insn/i 160 159 161 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nsswitch.c:779 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 161 160 162 27 (set (reg:DI 194)
        (reg:DI 0 ax)) nsswitch.c:779 -1
     (nil))
(insn 162 161 163 27 (set (reg:DI 195)
        (reg:DI 194)) nsswitch.c:779 -1
     (nil))
(insn 163 162 164 27 (set (reg:DI 141 [ D.13771 ])
        (reg:DI 195)) nsswitch.c:779 -1
     (nil))
(insn 164 163 165 27 (parallel [
            (set (reg/v:DI 142 [ len ])
                (plus:DI (reg:DI 141 [ D.13771 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:779 -1
     (nil))
(insn 165 164 166 27 (parallel [
            (set (reg:DI 196 [ D.13771 ])
                (plus:DI (reg:DI 141 [ D.13771 ])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:781 -1
     (nil))
(insn 166 165 167 27 (set (reg:DI 5 di)
        (reg:DI 196 [ D.13771 ])) nsswitch.c:781 -1
     (nil))
(call_insn 167 166 168 27 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:781 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 27 (set (reg/f:DI 197)
        (reg:DI 0 ax)) nsswitch.c:781 -1
     (expr_list:REG_NOALIAS (reg/f:DI 197)
        (nil)))
(insn 169 168 171 27 (set (reg/v/f:DI 144 [ last ])
        (reg/f:DI 197)) nsswitch.c:781 -1
     (nil))
(insn 171 169 172 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 144 [ last ])
            (const_int 0 [0]))) nsswitch.c:782 -1
     (nil))
(jump_insn 172 171 173 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 198)
            (pc))) nsswitch.c:782 612 {*jcc_1}
     (int_list:REG_BR_PROB 458 (nil))
 -> 198)
(note 173 172 174 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 28 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/v/f:DI 144 [ last ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:786 -1
     (nil))
(insn 175 174 176 28 (set (reg:DI 199)
        (reg:DI 198)) nsswitch.c:786 -1
     (nil))
(insn 176 175 177 28 (set (reg:DI 200)
        (reg/v/f:DI 126 [ line ])) nsswitch.c:786 -1
     (nil))
(insn 177 176 178 28 (set (reg:DI 201)
        (reg/v:DI 142 [ len ])) nsswitch.c:786 -1
     (nil))
(insn 178 177 179 28 (set (reg:DI 1 dx)
        (reg:DI 201)) nsswitch.c:786 -1
     (nil))
(insn 179 178 180 28 (set (reg:DI 4 si)
        (reg:DI 200)) nsswitch.c:786 -1
     (nil))
(insn 180 179 181 28 (set (reg:DI 5 di)
        (reg:DI 199)) nsswitch.c:786 -1
     (nil))
(call_insn 181 180 182 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ac278761d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:786 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_memcpy") [flags 0x41]  <function_decl 0x2ac278761d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 182 181 183 28 (set (reg:DI 202)
        (reg:DI 0 ax)) nsswitch.c:786 -1
     (nil))
(insn 183 182 184 28 (set (reg:DI 203)
        (reg:DI 202)) nsswitch.c:786 -1
     (nil))
(insn 184 183 185 28 (set (reg:DI 5 di)
        (reg/v/f:DI 140 [ line ])) nsswitch.c:789 -1
     (nil))
(call_insn 185 184 186 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>) [0 nss_parse_service_list S1 A8])
            (const_int 0 [0]))) nsswitch.c:789 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 186 185 187 28 (set (reg/f:DI 146 [ D.13763 ])
        (reg:DI 0 ax)) nsswitch.c:789 -1
     (nil))
(insn 187 186 188 28 (set (mem/f:DI (plus:DI (reg/v/f:DI 144 [ last ])
                (const_int 8 [0x8])) [3 last_99->service+0 S8 A64])
        (reg/f:DI 146 [ D.13763 ])) nsswitch.c:789 -1
     (nil))
(insn 188 187 189 28 (set (mem/f:DI (reg/v/f:DI 144 [ last ]) [3 last_99->next+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:791 -1
     (nil))
(insn 189 188 190 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 122 [ last ])
            (const_int 0 [0]))) nsswitch.c:584 -1
     (nil))
(jump_insn 190 189 191 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) nsswitch.c:584 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 195)
(note 191 190 192 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 9 29 (set (mem/f:DI (reg/v/f:DI 122 [ last ]) [3 last_73->next+0 S8 A64])
        (reg/v/f:DI 144 [ last ])) nsswitch.c:585 -1
     (nil))
(insn 9 192 193 29 (set (reg/v/f:DI 122 [ last ])
        (reg/v/f:DI 144 [ last ])) nsswitch.c:585 -1
     (nil))
(jump_insn 193 9 194 29 (set (pc)
        (label_ref 198)) nsswitch.c:585 -1
     (nil)
 -> 198)
(barrier 194 193 195)
(code_label 195 194 196 30 190 "" [1 uses])
(note 196 195 197 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 10 30 (set (mem/f:DI (reg/v/f:DI 113 [ result ]) [3 result_61->entry+0 S8 A64])
        (reg/v/f:DI 144 [ last ])) nsswitch.c:587 -1
     (nil))
(insn 10 197 198 30 (set (reg/v/f:DI 122 [ last ])
        (reg/v/f:DI 144 [ last ])) nsswitch.c:587 -1
     (nil))
(code_label 198 10 199 31 182 "" [7 uses])
(note 199 198 201 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 201 199 202 31 (set (reg:SI 205)
        (mem:SI (reg/v/f:DI 109 [ fp ]) [2 fp_57->_flags+0 S4 A64])) nsswitch.c:592 -1
     (nil))
(insn 202 201 203 31 (parallel [
            (set (reg:SI 204 [ D.13761 ])
                (and:SI (reg:SI 205)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:592 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/v/f:DI 109 [ fp ]) [2 fp_57->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 203 202 204 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 204 [ D.13761 ])
            (const_int 0 [0]))) nsswitch.c:592 -1
     (nil))
(jump_insn 204 203 208 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) nsswitch.c:592 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 200)
(note 208 204 206 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 206 208 207 32 (set (pc)
        (label_ref 205)) nsswitch.c:592 -1
     (nil)
 -> 205)
(barrier 207 206 209)
(code_label 209 207 210 33 177 "" [2 uses])
(note 210 209 211 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 33 (set (reg/v/f:DI 98 [ entry ])
        (mem/f:DI (reg/f:DI 94 [ D.13764 ]) [3 _182->entry+0 S8 A64])) nsswitch.c:135 -1
     (nil))
(insn 212 211 213 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ entry ])
            (const_int 0 [0]))) nsswitch.c:135 -1
     (nil))
(jump_insn 213 212 214 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) nsswitch.c:135 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 323)
(note 214 213 230 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(code_label 230 214 215 35 195 "" [1 uses])
(note 215 230 216 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 35 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg/v/f:DI 98 [ entry ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:136 -1
     (nil))
(insn 217 216 218 35 (set (reg:DI 207 [ D.13784 ])
        (reg:DI 206)) nsswitch.c:136 -1
     (nil))
(insn 218 217 219 35 (set (reg:DI 4 si)
        (reg:DI 207 [ D.13784 ])) nsswitch.c:136 -1
     (nil))
(insn 219 218 220 35 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ database ])) nsswitch.c:136 -1
     (nil))
(call_insn/i 220 219 221 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 221 220 222 35 (set (reg:SI 96 [ D.13761 ])
        (reg:SI 0 ax)) nsswitch.c:136 -1
     (nil))
(insn 222 221 223 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13761 ])
            (const_int 0 [0]))) nsswitch.c:136 -1
     (nil))
(jump_insn 223 222 224 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 227)
            (pc))) nsswitch.c:136 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 227)
(note 224 223 225 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 36 (set (reg/f:DI 97 [ D.13763 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 98 [ entry ])
                (const_int 8 [0x8])) [3 entry_150->service+0 S8 A64])) nsswitch.c:137 -1
     (nil))
(insn 226 225 227 36 (set (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])
        (reg/f:DI 97 [ D.13763 ])) nsswitch.c:137 -1
     (nil))
(code_label 227 226 228 37 194 "" [1 uses])
(note 228 227 229 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 231 37 (set (reg/v/f:DI 98 [ entry ])
        (mem/f:DI (reg/v/f:DI 98 [ entry ]) [3 entry_150->next+0 S8 A64])) nsswitch.c:135 -1
     (nil))
(insn 231 229 232 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ entry ])
            (const_int 0 [0]))) nsswitch.c:135 -1
     (nil))
(jump_insn 232 231 233 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 230)
            (pc))) nsswitch.c:135 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 230)
(note 233 232 234 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 38 (set (reg/f:DI 99 [ D.13763 ])
        (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])) nsswitch.c:139 -1
     (nil))
(insn 235 234 236 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 162 [ alternate_name ])
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(insn 236 235 237 38 (set (reg:QI 209 [ D.13770 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(insn 237 236 238 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 209 [ D.13770 ])
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(jump_insn 238 237 344 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) nsswitch.c:139 -1
     (int_list:REG_BR_PROB 393 (nil))
 -> 268)
(note 344 238 239 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 239 344 240 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ D.13763 ])
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(insn 240 239 241 39 (set (reg:QI 211 [ D.13770 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(insn 241 240 242 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 211 [ D.13770 ])
            (const_int 0 [0]))) nsswitch.c:139 -1
     (nil))
(jump_insn 242 241 243 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 268)
            (pc))) nsswitch.c:139 -1
     (int_list:REG_BR_PROB 409 (nil))
 -> 268)
(note 243 242 244 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 244 243 245 40 (set (reg/v/f:DI 100 [ entry ])
        (mem/f:DI (reg/f:DI 94 [ D.13764 ]) [3 _182->entry+0 S8 A64])) nsswitch.c:142 -1
     (nil))
(insn 245 244 246 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ entry ])
            (const_int 0 [0]))) nsswitch.c:142 -1
     (nil))
(jump_insn 246 245 247 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) nsswitch.c:142 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 275)
(note 247 246 263 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(code_label 263 247 248 42 199 "" [1 uses])
(note 248 263 249 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 42 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/v/f:DI 100 [ entry ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:143 -1
     (nil))
(insn 250 249 251 42 (set (reg:DI 213 [ D.13785 ])
        (reg:DI 212)) nsswitch.c:143 -1
     (nil))
(insn 251 250 252 42 (set (reg:DI 4 si)
        (reg:DI 213 [ D.13785 ])) nsswitch.c:143 -1
     (nil))
(insn 252 251 253 42 (set (reg:DI 5 di)
        (reg/v/f:DI 162 [ alternate_name ])) nsswitch.c:143 -1
     (nil))
(call_insn/i 253 252 254 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:143 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 254 253 255 42 (set (reg:SI 102 [ D.13761 ])
        (reg:SI 0 ax)) nsswitch.c:143 -1
     (nil))
(insn 255 254 256 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.13761 ])
            (const_int 0 [0]))) nsswitch.c:143 -1
     (nil))
(jump_insn 256 255 257 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) nsswitch.c:143 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 260)
(note 257 256 258 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 258 257 259 43 (set (reg/f:DI 103 [ D.13763 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ entry ])
                (const_int 8 [0x8])) [3 entry_151->service+0 S8 A64])) nsswitch.c:144 -1
     (nil))
(insn 259 258 260 43 (set (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])
        (reg/f:DI 103 [ D.13763 ])) nsswitch.c:144 -1
     (nil))
(code_label 260 259 261 44 198 "" [1 uses])
(note 261 260 262 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 264 44 (set (reg/v/f:DI 100 [ entry ])
        (mem/f:DI (reg/v/f:DI 100 [ entry ]) [3 entry_151->next+0 S8 A64])) nsswitch.c:142 -1
     (nil))
(insn 264 262 265 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ entry ])
            (const_int 0 [0]))) nsswitch.c:142 -1
     (nil))
(jump_insn 265 264 266 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 263)
            (pc))) nsswitch.c:142 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 263)
(note 266 265 267 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 45 (set (reg/f:DI 99 [ D.13763 ])
        (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])) -1
     (nil))
(code_label 268 267 269 46 196 "" [4 uses])
(note 269 268 270 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ D.13763 ])
            (const_int 0 [0]))) nsswitch.c:152 -1
     (nil))
(jump_insn 271 270 272 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 275)
            (pc))) nsswitch.c:152 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 275)
(note 272 271 273 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 273 272 274 47 (set (pc)
        (label_ref 302)) -1
     (nil)
 -> 302)
(barrier 274 273 275)
(code_label 275 274 276 48 197 "" [2 uses])
(note 276 275 277 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 277 276 278 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 163 [ defconfig ])
            (const_int 0 [0]))) nsswitch.c:154 -1
     (nil))
(jump_insn 278 277 279 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 341)
            (pc))) nsswitch.c:154 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 341)
(note 279 278 13 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 13 279 338 49 (set (reg/f:DI 88 [ D.13762 ])
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x2ac278dba900 *.LC13>)) nsswitch.c:154 -1
     (nil))
(jump_insn 338 13 339 49 (set (pc)
        (label_ref 280)) -1
     (nil)
 -> 280)
(barrier 339 338 341)
(code_label 341 339 340 50 204 "" [1 uses])
(note 340 341 12 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 12 340 280 50 (set (reg/f:DI 88 [ D.13762 ])
        (reg/v/f:DI 163 [ defconfig ])) -1
     (nil))
(code_label 280 12 281 51 201 "" [1 uses])
(note 281 280 282 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 282 281 283 51 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.13762 ])) nsswitch.c:154 -1
     (nil))
(call_insn 283 282 284 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>) [0 nss_parse_service_list S1 A8])
            (const_int 0 [0]))) nsswitch.c:154 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 284 283 285 51 (set (reg/f:DI 104 [ D.13763 ])
        (reg:DI 0 ax)) nsswitch.c:154 -1
     (nil))
(insn 285 284 287 51 (set (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])
        (reg/f:DI 104 [ D.13763 ])) nsswitch.c:154 -1
     (nil))
(insn 287 285 288 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104 [ D.13763 ])
            (const_int 0 [0]))) nsswitch.c:156 -1
     (nil))
(jump_insn 288 287 289 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 302)
            (pc))) nsswitch.c:156 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 302)
(note 289 288 290 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 52 (set (reg:DI 5 di)
        (const_int 17 [0x11])) nsswitch.c:163 -1
     (nil))
(call_insn 291 290 292 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:163 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 292 291 293 52 (set (reg/f:DI 214)
        (reg:DI 0 ax)) nsswitch.c:163 -1
     (expr_list:REG_NOALIAS (reg/f:DI 214)
        (nil)))
(insn 293 292 294 52 (set (reg/v/f:DI 105 [ entry ])
        (reg/f:DI 214)) nsswitch.c:163 -1
     (nil))
(insn 294 293 295 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ entry ])
            (const_int 0 [0]))) nsswitch.c:165 -1
     (nil))
(jump_insn 295 294 296 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 302)
            (pc))) nsswitch.c:165 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 302)
(note 296 295 297 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 53 (set (reg/f:DI 215)
        (mem/f/c:DI (symbol_ref:DI ("defconfig_entries") [flags 0x2]  <var_decl 0x2ac278b92d80 defconfig_entries>) [3 defconfig_entries+0 S8 A64])) nsswitch.c:167 -1
     (nil))
(insn 298 297 299 53 (set (mem/f:DI (reg/v/f:DI 105 [ entry ]) [3 entry_48->next+0 S8 A64])
        (reg/f:DI 215)) nsswitch.c:167 -1
     (nil))
(insn 299 298 300 53 (set (mem/f:DI (plus:DI (reg/v/f:DI 105 [ entry ])
                (const_int 8 [0x8])) [3 entry_48->service+0 S8 A64])
        (reg/f:DI 104 [ D.13763 ])) nsswitch.c:168 -1
     (nil))
(insn 300 299 301 53 (set (mem/j:QI (plus:DI (reg/v/f:DI 105 [ entry ])
                (const_int 16 [0x10])) [0 entry_48->name+0 S1 A64])
        (const_int 0 [0])) nsswitch.c:169 -1
     (nil))
(insn 301 300 302 53 (set (mem/f/c:DI (symbol_ref:DI ("defconfig_entries") [flags 0x2]  <var_decl 0x2ac278b92d80 defconfig_entries>) [3 defconfig_entries+0 S8 A64])
        (reg/v/f:DI 105 [ entry ])) nsswitch.c:170 -1
     (nil))
(code_label 302 301 303 54 200 "" [3 uses])
(note 303 302 304 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 54 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:175)
                    ]
                     [] nsswitch.c:175))
            (set (reg:SI 216 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:175)
                    ]
                     [] nsswitch.c:175))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) nsswitch.c:175 -1
     (nil))
(insn 305 304 306 54 (set (reg/v:SI 107 [ ignore ])
        (reg:SI 216 [ ignore ])) nsswitch.c:175 -1
     (nil))
(insn 306 305 307 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:177 -1
     (nil))
(insn 307 306 308 54 (set (reg:QI 218)
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:177 -1
     (nil))
(insn 308 307 309 54 (set (reg:SI 217 [ D.13770 ])
        (zero_extend:SI (reg:QI 218))) nsswitch.c:177 -1
     (nil))
(insn 309 308 310 54 (parallel [
            (set (reg:SI 87 [ D.13761 ])
                (neg:SI (reg:SI 217 [ D.13770 ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:177 -1
     (nil))
(code_label 310 309 311 55 176 "" [1 uses])
(note 311 310 312 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 55 (set (reg:SI 160 [ <retval> ])
        (reg:SI 87 [ D.13761 ])) -1
     (nil))
(jump_insn 313 312 314 55 (set (pc)
        (label_ref 334)) -1
     (nil)
 -> 334)
(barrier 314 313 315)
(code_label 315 314 316 56 188 "" [2 uses])
(note 316 315 317 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 133 [ line ])
            (reg/v/f:DI 126 [ line ]))) nsswitch.c:774 -1
     (nil))
(jump_insn 318 317 322 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 198)
            (pc))) nsswitch.c:774 612 {*jcc_1}
     (int_list:REG_BR_PROB 141 (nil))
 -> 198)
(note 322 318 320 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(jump_insn 320 322 321 57 (set (pc)
        (label_ref 319)) nsswitch.c:774 -1
     (nil)
 -> 319)
(barrier 321 320 323)
(code_label 323 321 324 58 193 "" [1 uses])
(note 324 323 325 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 58 (set (reg/f:DI 99 [ D.13763 ])
        (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])) nsswitch.c:139 -1
     (nil))
(jump_insn 326 325 327 58 (set (pc)
        (label_ref 268)) nsswitch.c:139 -1
     (nil)
 -> 268)
(barrier 327 326 328)
(code_label 328 327 329 59 178 "" [2 uses])
(note 329 328 330 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 330 329 331 59 (set (mem/f/c:DI (symbol_ref:DI ("service_table") [flags 0x2]  <var_decl 0x2ac278b92cf0 service_table>) [3 service_table+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:125 -1
     (nil))
(insn 331 330 332 59 (set (reg/f:DI 99 [ D.13763 ])
        (mem/f:DI (reg/v/f:DI 164 [ ni ]) [3 *ni_18(D)+0 S8 A64])) -1
     (nil))
(jump_insn 332 331 333 59 (set (pc)
        (label_ref 268)) -1
     (nil)
 -> 268)
(barrier 333 332 334)
(code_label 334 333 337 60 174 "" [1 uses])
(note 337 334 335 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 335 337 336 60 (set (reg/i:SI 0 ax)
        (reg:SI 160 [ <retval> ])) nsswitch.c:178 -1
     (nil))
(insn 336 335 0 60 (use (reg/i:SI 0 ax)) nsswitch.c:178 -1
     (nil))

;; Function nss_load_all_libraries (nss_load_all_libraries, funcdef_no=67, decl_uid=13104, cgraph_uid=71, symbol_order=90)

Partition 0: size 8 align 8
	ni

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Edge 5->4 redirected to 9
Forwarding edge 7->8 to 9 failed.
Removing jump 36.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.
Deleted label in block 4.
Forwarding edge 7->8 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 90 [ service ])
        (reg:DI 5 di [ service ])) nsswitch.c:828 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ def ])
        (reg:DI 4 si [ def ])) nsswitch.c:828 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 ni+0 S8 A64])
        (const_int 0 [0])) nsswitch.c:829 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:831 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 2 cx)
        (reg:DI 92)) nsswitch.c:831 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 91 [ def ])) nsswitch.c:831 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (const_int 0 [0])) nsswitch.c:831 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ service ])) nsswitch.c:831 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_database_lookup") [flags 0x3]  <function_decl 0x2ac278acfe58 __nss_database_lookup>) [0 __nss_database_lookup S1 A8])
            (const_int 0 [0]))) nsswitch.c:831 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_database_lookup") [flags 0x3]  <function_decl 0x2ac278acfe58 __nss_database_lookup>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 14 13 15 2 (set (reg:SI 88 [ D.13790 ])
        (reg:SI 0 ax)) nsswitch.c:831 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.13790 ])
            (const_int 0 [0]))) nsswitch.c:831 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) nsswitch.c:831 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 20)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 17 19 4 (set (pc)
        (label_ref 39)) nsswitch.c:837 -1
     (nil)
 -> 39)
(barrier 19 18 20)
(code_label 20 19 21 5 262 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 24 5 (set (reg/f:DI 87 [ D.13789 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 ni+0 S8 A64])) nsswitch.c:832 -1
     (nil))
(insn 24 22 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.13789 ])
            (const_int 0 [0]))) nsswitch.c:832 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) nsswitch.c:832 612 {*jcc_1}
     (int_list:REG_BR_PROB 900 (nil))
 -> 39)
(note 26 25 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(code_label 33 26 27 7 264 "" [1 uses])
(note 27 33 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.13789 ])) nsswitch.c:834 -1
     (nil))
(call_insn 29 28 30 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nss_load_library") [flags 0x3]  <function_decl 0x2ac278b8daf8 nss_load_library>) [0 nss_load_library S1 A8])
            (const_int 0 [0]))) nsswitch.c:834 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_library") [flags 0x3]  <function_decl 0x2ac278b8daf8 nss_load_library>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 30 29 31 7 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 ni+0 S8 A64])) nsswitch.c:835 -1
     (nil))
(insn 31 30 32 7 (set (reg/f:DI 87 [ D.13789 ])
        (mem/f:DI (reg/f:DI 93) [3 _12->next+0 S8 A64])) nsswitch.c:835 -1
     (nil))
(insn 32 31 34 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 ni+0 S8 A64])
        (reg/f:DI 87 [ D.13789 ])) nsswitch.c:835 -1
     (nil))
(insn 34 32 35 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.13789 ])
            (const_int 0 [0]))) nsswitch.c:832 -1
     (nil))
(jump_insn 35 34 38 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) nsswitch.c:832 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 33)
(note 38 35 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(code_label 39 38 40 9 261 "" [2 uses])
(note 40 39 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

;; Function __nss_configure_lookup (__nss_configure_lookup, funcdef_no=59, decl_uid=9597, cgraph_uid=61, symbol_order=81)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 10->9 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 7->8 to 6 failed.
Forwarding edge 13->14 to 9 failed.


try_optimize_cfg iteration 2

Forwarding edge 7->8 to 6 failed.
Forwarding edge 13->14 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 100 [ dbname ])
        (reg:DI 5 di [ dbname ])) nsswitch.c:266 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 101 [ service_line ])
        (reg:DI 4 si [ service_line ])) nsswitch.c:266 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 5 2 (set (reg:DI 98 [ ivtmp.121 ])
        (symbol_ref:DI ("databases") [flags 0x2]  <var_decl 0x2ac278b92a20 databases>)) -1
     (nil))
(insn 5 11 31 2 (set (reg/v:DI 90 [ cnt ])
        (const_int 0 [0])) nsswitch.c:270 -1
     (nil))
(code_label 31 5 12 4 274 "" [1 uses])
(note 12 31 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 4 si)
        (reg:DI 98 [ ivtmp.121 ])) nsswitch.c:272 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ dbname ])) nsswitch.c:272 -1
     (nil))
(call_insn/i 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nsswitch.c:272 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcmp") [flags 0x41]  <function_decl 0x2ac27846b000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 4 (set (reg/v:SI 89 [ cmp ])
        (reg:SI 0 ax)) nsswitch.c:272 -1
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 89 [ cmp ])
            (const_int 0 [0]))) nsswitch.c:273 -1
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nsswitch.c:273 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 70)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg/v:SI 89 [ cmp ])
            (const_int 0 [0]))) nsswitch.c:275 -1
     (nil))
(jump_insn 21 20 34 5 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) nsswitch.c:275 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 27)
(code_label 34 21 22 6 275 "" [2 uses])
(note 22 34 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 6 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__libc_errno") [flags 0x60]  <var_decl 0x2ac278906e10 __libc_errno>)
                    ] UNSPEC_GOTNTPOFF)) [14  S8 A8])) nsswitch.c:277 -1
     (nil))
(insn 24 23 6 6 (set (mem/c:SI (plus:DI (unspec:DI [
                        (const_int 0 [0])
                    ] UNSPEC_TP)
                (reg:DI 102)) [2 __libc_errno+0 S4 A32])
        (const_int 22 [0x16])) nsswitch.c:277 -1
     (nil))
(insn 6 24 25 6 (set (reg:SI 87 [ D.13801 ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:278 -1
     (nil))
(jump_insn 25 6 26 6 (set (pc)
        (label_ref 65)) nsswitch.c:278 -1
     (nil)
 -> 65)
(barrier 26 25 27)
(code_label 27 26 28 7 272 "" [1 uses])
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (parallel [
            (set (reg/v:DI 90 [ cnt ])
                (plus:DI (reg/v:DI 90 [ cnt ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:270 -1
     (nil))
(insn 30 29 32 7 (parallel [
            (set (reg:DI 98 [ ivtmp.121 ])
                (plus:DI (reg:DI 98 [ ivtmp.121 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 32 30 33 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 90 [ cnt ])
            (const_int 14 [0xe]))) nsswitch.c:270 -1
     (nil))
(jump_insn 33 32 37 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) nsswitch.c:270 -1
     (int_list:REG_BR_PROB 9240 (nil))
 -> 31)
(note 37 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 35 37 36 8 (set (pc)
        (label_ref 34)) -1
     (nil)
 -> 34)
(barrier 36 35 82)
(code_label 82 36 38 9 276 "" [1 uses])
(note 38 82 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 9 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ service_line ])) nsswitch.c:294 -1
     (nil))
(call_insn 40 39 41 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>) [0 nss_parse_service_list S1 A8])
            (const_int 0 [0]))) nsswitch.c:294 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_parse_service_list") [flags 0x3]  <function_decl 0x2ac278b8d0d8 nss_parse_service_list>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 40 42 9 (set (reg/v/f:DI 92 [ new_db ])
        (reg:DI 0 ax)) nsswitch.c:294 -1
     (nil))
(insn 42 41 43 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 92 [ new_db ])
            (const_int 0 [0]))) nsswitch.c:295 -1
     (nil))
(jump_insn 43 42 44 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) nsswitch.c:295 -1
     (int_list:REG_BR_PROB 73 (nil))
 -> 34)
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 10 (set (reg:SI 106)
        (const_int 1 [0x1])) nsswitch.c:303 -1
     (nil))
(insn 46 45 47 10 (set (reg:SI 107)
        (const_int 0 [0])) nsswitch.c:303 -1
     (nil))
(insn 47 46 48 10 (parallel [
            (set (reg:SI 103 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 106)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 107)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:303)
                        (asm_input:SI ("m") nsswitch.c:303)
                        (asm_input:SI ("3") nsswitch.c:303)
                    ]
                     [] nsswitch.c:303))
            (set (reg:SI 104 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 106)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 107)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:303)
                        (asm_input:SI ("m") nsswitch.c:303)
                        (asm_input:SI ("3") nsswitch.c:303)
                    ]
                     [] nsswitch.c:303))
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 106)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 107)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:303)
                        (asm_input:SI ("m") nsswitch.c:303)
                        (asm_input:SI ("3") nsswitch.c:303)
                    ]
                     [] nsswitch.c:303))
            (set (reg:SI 105 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 106)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 107)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:303)
                        (asm_input:SI ("m") nsswitch.c:303)
                        (asm_input:SI ("3") nsswitch.c:303)
                    ]
                     [] nsswitch.c:303))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) nsswitch.c:303 -1
     (nil))
(insn 48 47 49 10 (set (reg/v:SI 93 [ ignore1 ])
        (reg:SI 103 [ ignore1 ])) nsswitch.c:303 -1
     (nil))
(insn 49 48 50 10 (set (reg/v:SI 94 [ ignore2 ])
        (reg:SI 104 [ ignore2 ])) nsswitch.c:303 -1
     (nil))
(insn 50 49 51 10 (set (reg/v:SI 95 [ ignore3 ])
        (reg:SI 105 [ ignore3 ])) nsswitch.c:303 -1
     (nil))
(insn 51 50 52 10 (set (reg/f:DI 108)
        (symbol_ref:DI ("databases") [flags 0x2]  <var_decl 0x2ac278b92a20 databases>)) nsswitch.c:306 -1
     (nil))
(insn 52 51 53 10 (set (reg:DI 109)
        (reg/v:DI 90 [ cnt ])) nsswitch.c:306 -1
     (nil))
(insn 53 52 54 10 (parallel [
            (set (reg:DI 110)
                (ashift:DI (reg:DI 109)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:306 -1
     (nil))
(insn 54 53 55 10 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 110)
                    (reg/v:DI 90 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:306 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 90 [ cnt ])
            (const_int 3 [0x3]))
        (nil)))
(insn 55 54 56 10 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 111)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:306 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 111)
        (reg:DI 112)) nsswitch.c:306 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 90 [ cnt ])
            (const_int 24 [0x18]))
        (nil)))
(insn 57 56 58 10 (parallel [
            (set (reg:DI 113)
                (plus:DI (reg/f:DI 108)
                    (reg:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:306 -1
     (nil))
(insn 58 57 59 10 (parallel [
            (set (reg/f:DI 114)
                (plus:DI (reg:DI 113)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:306 -1
     (nil))
(insn 59 58 60 10 (set (reg/f:DI 115)
        (mem/u/f:DI (reg/f:DI 114) [3 databases[cnt_28].dbp+0 S8 A64])) nsswitch.c:306 -1
     (nil))
(insn 60 59 61 10 (set (mem/f:DI (reg/f:DI 115) [3 *_20+0 S8 A64])
        (reg/v/f:DI 92 [ new_db ])) nsswitch.c:306 -1
     (nil))
(insn 61 60 62 10 (set (reg/f:DI 116)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__nss_database_custom")  <var_decl 0x2ac278a92480 __nss_database_custom>)
                    ] UNSPEC_GOTPCREL)) [14  S8 A8])) nsswitch.c:307 -1
     (nil))
(insn 62 61 63 10 (set (mem:QI (plus:DI (reg/f:DI 116)
                (reg/v:DI 90 [ cnt ])) [11 __nss_database_custom S1 A8])
        (const_int 1 [0x1])) nsswitch.c:307 -1
     (nil))
(insn 63 62 64 10 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:309)
                    ]
                     [] nsswitch.c:309))
            (set (reg:SI 117 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:309)
                    ]
                     [] nsswitch.c:309))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) nsswitch.c:309 -1
     (nil))
(insn 64 63 7 10 (set (reg/v:SI 97 [ ignore ])
        (reg:SI 117 [ ignore ])) nsswitch.c:309 -1
     (nil))
(insn 7 64 90 10 (set (reg:SI 87 [ D.13801 ])
        (const_int 0 [0])) nsswitch.c:311 -1
     (nil))
(jump_insn 90 7 91 10 (set (pc)
        (label_ref 65)) nsswitch.c:311 -1
     (nil)
 -> 65)
(barrier 91 90 93)
(code_label 93 91 92 11 277 "" [1 uses])
(note 92 93 8 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 8 92 65 11 (set (reg:SI 87 [ D.13801 ])
        (const_int 0 [0])) nsswitch.c:291 -1
     (nil))
(code_label 65 8 66 12 273 "" [2 uses])
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 12 (set (reg:SI 99 [ <retval> ])
        (reg:SI 87 [ D.13801 ])) -1
     (nil))
(jump_insn 68 67 69 12 (set (pc)
        (label_ref 86)) -1
     (nil)
 -> 86)
(barrier 69 68 70)
(code_label 70 69 71 13 271 "" [1 uses])
(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 13 (set (reg/f:DI 119)
        (symbol_ref:DI ("databases") [flags 0x2]  <var_decl 0x2ac278b92a20 databases>)) nsswitch.c:289 -1
     (nil))
(insn 73 72 74 13 (set (reg:DI 120)
        (reg/v:DI 90 [ cnt ])) nsswitch.c:289 -1
     (nil))
(insn 74 73 75 13 (parallel [
            (set (reg:DI 121)
                (ashift:DI (reg:DI 120)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:289 -1
     (nil))
(insn 75 74 76 13 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg:DI 121)
                    (reg/v:DI 90 [ cnt ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:289 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 90 [ cnt ])
            (const_int 3 [0x3]))
        (nil)))
(insn 76 75 77 13 (parallel [
            (set (reg:DI 123)
                (ashift:DI (reg:DI 122)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:289 -1
     (nil))
(insn 77 76 78 13 (set (reg:DI 122)
        (reg:DI 123)) nsswitch.c:289 -1
     (expr_list:REG_EQUAL (mult:DI (reg/v:DI 90 [ cnt ])
            (const_int 24 [0x18]))
        (nil)))
(insn 78 77 79 13 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 119)
                    (reg:DI 122)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:289 -1
     (nil))
(insn 79 78 80 13 (parallel [
            (set (reg/f:DI 125)
                (plus:DI (reg:DI 124)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:289 -1
     (nil))
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u/f:DI (reg/f:DI 125) [3 databases[cnt_28].dbp+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:289 -1
     (nil))
(jump_insn 81 80 85 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 93)
            (pc))) nsswitch.c:289 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 93)
(note 85 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 83 85 84 14 (set (pc)
        (label_ref 82)) -1
     (nil)
 -> 82)
(barrier 84 83 86)
(code_label 86 84 89 15 270 "" [1 uses])
(note 89 86 87 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 87 89 88 15 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) nsswitch.c:312 -1
     (nil))
(insn 88 87 0 15 (use (reg/i:SI 0 ax)) nsswitch.c:312 -1
     (nil))

;; Function __nss_lookup_function (*__GI___nss_lookup_function, funcdef_no=62, decl_uid=11011, cgraph_uid=65, symbol_order=84)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11
Edge 2->11 redirected to 14
Edge 8->10 redirected to 15


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 126.
Merging block 15 into block 14...
Merged blocks 14 and 15.
Merged 14 and 15 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 113 [ ni ])
        (reg:DI 5 di [ ni ])) nsswitch.c:401 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 fct_name+0 S8 A64])
        (reg:DI 4 si [ fct_name ])) nsswitch.c:401 -1
     (nil))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (set (reg:SI 117)
        (const_int 1 [0x1])) nsswitch.c:405 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 118)
        (const_int 0 [0])) nsswitch.c:405 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 114 [ ignore1 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=S") 0 [
                        (reg:SI 117)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 118)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:405)
                        (asm_input:SI ("m") nsswitch.c:405)
                        (asm_input:SI ("3") nsswitch.c:405)
                    ]
                     [] nsswitch.c:405))
            (set (reg:SI 115 [ ignore2 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (reg:SI 117)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 118)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:405)
                        (asm_input:SI ("m") nsswitch.c:405)
                        (asm_input:SI ("3") nsswitch.c:405)
                    ]
                     [] nsswitch.c:405))
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 2 [
                        (reg:SI 117)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 118)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:405)
                        (asm_input:SI ("m") nsswitch.c:405)
                        (asm_input:SI ("3") nsswitch.c:405)
                    ]
                     [] nsswitch.c:405))
            (set (reg:SI 116 [ ignore3 ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; cmpxchgl %4, %2
	jnz 1f
	jmp 24f
0:	cmpxchgl %4, %2
	jz 24f
	1:	lea %2, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_lock_wait_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=a") 3 [
                        (reg:SI 117)
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                        (reg:SI 118)
                    ]
                     [
                        (asm_input:SI ("0") nsswitch.c:405)
                        (asm_input:SI ("m") nsswitch.c:405)
                        (asm_input:SI ("3") nsswitch.c:405)
                    ]
                     [] nsswitch.c:405))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
        ]) nsswitch.c:405 -1
     (nil))
(insn 13 12 14 2 (set (reg/v:SI 87 [ ignore1 ])
        (reg:SI 114 [ ignore1 ])) nsswitch.c:405 -1
     (nil))
(insn 14 13 15 2 (set (reg/v:SI 88 [ ignore2 ])
        (reg:SI 115 [ ignore2 ])) nsswitch.c:405 -1
     (nil))
(insn 15 14 16 2 (set (reg/v:SI 89 [ ignore3 ])
        (reg:SI 116 [ ignore3 ])) nsswitch.c:405 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 90 [ D.13814 ])
                (plus:DI (reg/v/f:DI 113 [ ni ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:416 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:416 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (symbol_ref:DI ("known_compare") [flags 0x3]  <function_decl 0x2ac278b8d6c0 known_compare>)) nsswitch.c:416 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13814 ])) nsswitch.c:416 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 119)) nsswitch.c:416 -1
     (nil))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___tsearch") [flags 0x43]  <function_decl 0x2ac278acf360 __tsearch>) [0 __tsearch S1 A8])
            (const_int 0 [0]))) nsswitch.c:416 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___tsearch") [flags 0x43]  <function_decl 0x2ac278acf360 __tsearch>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg/v/f:DI 91 [ found ])
        (reg:DI 0 ax)) nsswitch.c:416 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 91 [ found ])
            (const_int 0 [0]))) nsswitch.c:417 -1
     (nil))
(jump_insn 24 23 25 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 135)
            (pc))) nsswitch.c:417 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 135)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 92 [ D.13815 ])
        (mem/f:DI (reg/v/f:DI 91 [ found ]) [3 *found_14+0 S8 A64])) nsswitch.c:420 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:420 -1
     (nil))
(insn 28 27 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.13815 ])
            (reg:DI 120))) nsswitch.c:420 -1
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) nsswitch.c:420 -1
     (int_list:REG_BR_PROB 1013 (nil))
 -> 36)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg/v/f:DI 93 [ result ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ D.13815 ])
                (const_int 8 [0x8])) [3 MEM[(struct known_function *)_15].fct_ptr+0 S8 A64])) nsswitch.c:423 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:DI 121 [ result ])
                (asm_operands:DI ("ror $2*8+1, %0
xor %%fs:%c2, %0") ("=r") 0 [
                        (reg/v/f:DI 93 [ result ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") nsswitch.c:425)
                        (asm_input:DI ("i") nsswitch.c:425)
                    ]
                     [] nsswitch.c:425))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nsswitch.c:425 -1
     (nil))
(insn 33 32 34 5 (set (reg/v/f:DI 93 [ result ])
        (reg:DI 121 [ result ])) nsswitch.c:425 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
(barrier 35 34 36)
(code_label 36 35 37 6 287 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:DI 5 di)
        (const_int 16 [0x10])) nsswitch.c:435 -1
     (nil))
(call_insn 39 38 40 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nsswitch.c:435 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ac278491360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 40 39 41 6 (set (reg/f:DI 122)
        (reg:DI 0 ax)) nsswitch.c:435 -1
     (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))
(insn 41 40 42 6 (set (reg/v/f:DI 94 [ known ])
        (reg/f:DI 122)) nsswitch.c:435 -1
     (nil))
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ known ])
            (const_int 0 [0]))) nsswitch.c:436 -1
     (nil))
(jump_insn 43 42 62 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) nsswitch.c:436 -1
     (int_list:REG_BR_PROB 9808 (nil))
 -> 54)
(code_label 62 43 44 7 289 "" [1 uses])
(note 44 62 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (parallel [
            (set (reg:DI 123)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:443 -1
     (nil))
(insn 46 45 47 7 (set (reg:DI 1 dx)
        (symbol_ref:DI ("known_compare") [flags 0x3]  <function_decl 0x2ac278b8d6c0 known_compare>)) nsswitch.c:443 -1
     (nil))
(insn 47 46 48 7 (set (reg:DI 4 si)
        (reg/f:DI 90 [ D.13814 ])) nsswitch.c:443 -1
     (nil))
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg:DI 123)) nsswitch.c:443 -1
     (nil))
(call_insn 49 48 50 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___tdelete") [flags 0x43]  <function_decl 0x2ac278acf870 __tdelete>) [0 __tdelete S1 A8])
            (const_int 0 [0]))) nsswitch.c:443 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___tdelete") [flags 0x43]  <function_decl 0x2ac278acf870 __tdelete>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ known ])) nsswitch.c:444 -1
     (nil))
(call_insn 51 50 7 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nsswitch.c:444 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ac278487e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 51 52 7 (set (reg/v/f:DI 93 [ result ])
        (const_int 0 [0])) nsswitch.c:445 -1
     (nil))
(jump_insn 52 7 53 7 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
(barrier 53 52 54)
(code_label 54 53 55 8 288 "" [1 uses])
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (mem/f:DI (reg/v/f:DI 91 [ found ]) [3 *found_14+0 S8 A64])
        (reg/v/f:DI 94 [ known ])) nsswitch.c:450 -1
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 fct_name+0 S8 A64])) nsswitch.c:451 -1
     (nil))
(insn 58 57 59 8 (set (mem/f:DI (reg/v/f:DI 94 [ known ]) [3 known_19->fct_name+0 S8 A64])
        (reg/f:DI 124)) nsswitch.c:451 -1
     (nil))
(insn 59 58 60 8 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ ni ])) nsswitch.c:455 -1
     (nil))
(call_insn 60 59 61 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nss_load_library") [flags 0x3]  <function_decl 0x2ac278b8daf8 nss_load_library>) [0 nss_load_library S1 A8])
            (const_int 0 [0]))) nsswitch.c:455 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_library") [flags 0x3]  <function_decl 0x2ac278b8daf8 nss_load_library>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 61 60 63 8 (set (reg:SI 96 [ D.13817 ])
        (reg:SI 0 ax)) nsswitch.c:455 -1
     (nil))
(insn 63 61 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.13817 ])
            (const_int 0 [0]))) nsswitch.c:455 -1
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) nsswitch.c:455 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 62)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 97 [ D.13818 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 113 [ ni ])
                (const_int 32 [0x20])) [3 ni_11(D)->library+0 S8 A64])) nsswitch.c:459 -1
     (nil))
(insn 67 66 68 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (reg/f:DI 97 [ D.13818 ])
                    (const_int 8 [0x8])) [3 _25->lib_handle+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) nsswitch.c:459 -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) nsswitch.c:459 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 139)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (set (reg:DI 125)
        (reg/f:DI 7 sp)) nsswitch.c:463 -1
     (nil))
(insn 71 70 72 10 (set (reg/f:DI 99 [ D.13815 ])
        (reg:DI 125)) nsswitch.c:463 -1
     (nil))
(insn 72 71 73 10 (parallel [
            (set (reg/f:DI 100 [ D.13819 ])
                (plus:DI (reg/v/f:DI 113 [ ni ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:465 -1
     (nil))
(insn 73 72 74 10 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13819 ])) nsswitch.c:465 -1
     (nil))
(call_insn/i 74 73 75 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nsswitch.c:465 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 74 76 10 (set (reg:DI 127)
        (reg:DI 0 ax)) nsswitch.c:465 -1
     (nil))
(insn 76 75 77 10 (set (reg:DI 128)
        (reg:DI 127)) nsswitch.c:465 -1
     (nil))
(insn 77 76 78 10 (set (reg:DI 101 [ D.13820 ])
        (reg:DI 128)) nsswitch.c:465 -1
     (nil))
(insn 78 77 79 10 (set (reg/f:DI 102 [ D.13816 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 fct_name+0 S8 A64])) nsswitch.c:466 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 5 di)
        (reg/f:DI 102 [ D.13816 ])) nsswitch.c:466 -1
     (nil))
(call_insn/i 80 79 81 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nsswitch.c:466 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strlen") [flags 0x43]  <function_decl 0x2ac27846b948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 81 80 82 10 (set (reg:DI 130)
        (reg:DI 0 ax)) nsswitch.c:466 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 131)
        (reg:DI 130)) nsswitch.c:466 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 103 [ D.13820 ])
        (reg:DI 131)) nsswitch.c:466 -1
     (nil))
(insn 84 83 85 10 (parallel [
            (set (reg:DI 132 [ D.13820 ])
                (plus:DI (reg:DI 101 [ D.13820 ])
                    (reg:DI 103 [ D.13820 ])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:DI 133 [ namlen ])
                (plus:DI (reg:DI 132 [ D.13820 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 134)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 87 86 88 10 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg:DI 133 [ namlen ])
                    (reg:DI 134)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 88 87 89 10 (parallel [
            (set (reg:DI 137)
                (udiv:DI (reg:DI 135)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 138)
                (umod:DI (reg:DI 135)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 139)
                (mult:DI (reg:DI 137)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 90 89 91 10 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 139)))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 91 90 92 10 (set (reg:DI 140)
        (reg/f:DI 83 virtual-stack-dynamic)) nsswitch.c:467 -1
     (nil))
(insn 92 91 93 10 (parallel [
            (set (reg/f:DI 141)
                (plus:DI (reg:DI 140)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:467 -1
     (nil))
(insn 93 92 94 10 (set (reg/f:DI 106 [ name.20 ])
        (reg/f:DI 141)) nsswitch.c:467 -1
     (nil))
(insn 94 93 95 10 (set (mem:SI (reg/f:DI 106 [ name.20 ]) [0 MEM[(void *)name.20_36]+0 S4 A8])
        (const_int 1936944735 [0x73736e5f])) nsswitch.c:470 -1
     (nil))
(insn 95 94 96 10 (set (mem:QI (plus:DI (reg/f:DI 106 [ name.20 ])
                (const_int 4 [0x4])) [0 MEM[(void *)name.20_36]+4 S1 A8])
        (const_int 95 [0x5f])) nsswitch.c:470 -1
     (nil))
(insn 96 95 97 10 (parallel [
            (set (reg:DI 142 [ D.13821 ])
                (plus:DI (reg/f:DI 106 [ name.20 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:470 -1
     (nil))
(insn 97 96 98 10 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.13819 ])) nsswitch.c:470 -1
     (nil))
(insn 98 97 99 10 (set (reg:DI 5 di)
        (reg:DI 142 [ D.13821 ])) nsswitch.c:470 -1
     (nil))
(call_insn 99 98 100 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:470 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_stpcpy") [flags 0x41]  <function_decl 0x2ac2784686c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 100 99 101 10 (set (reg:DI 143)
        (reg:DI 0 ax)) nsswitch.c:470 -1
     (nil))
(insn 101 100 102 10 (set (reg:DI 144)
        (reg:DI 143)) nsswitch.c:470 -1
     (nil))
(insn 102 101 103 10 (set (reg/f:DI 108 [ D.13821 ])
        (reg:DI 144)) nsswitch.c:470 -1
     (nil))
(insn 103 102 104 10 (set (mem:QI (reg/f:DI 108 [ D.13821 ]) [0 MEM[(void *)_40]+0 S1 A8])
        (const_int 95 [0x5f])) nsswitch.c:470 -1
     (nil))
(insn 104 103 105 10 (parallel [
            (set (reg:DI 145 [ D.13821 ])
                (plus:DI (reg/f:DI 108 [ D.13821 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:470 -1
     (nil))
(insn 105 104 106 10 (set (reg:DI 4 si)
        (reg/f:DI 102 [ D.13816 ])) nsswitch.c:470 -1
     (nil))
(insn 106 105 107 10 (set (reg:DI 5 di)
        (reg:DI 145 [ D.13821 ])) nsswitch.c:470 -1
     (nil))
(call_insn 107 106 108 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strcpy") [flags 0x41]  <function_decl 0x2ac27846b1b0 __builtin_strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nsswitch.c:470 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strcpy") [flags 0x41]  <function_decl 0x2ac27846b1b0 __builtin_strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 108 107 109 10 (set (reg:DI 146)
        (mem/f:DI (plus:DI (reg/f:DI 97 [ D.13818 ])
                (const_int 8 [0x8])) [3 _25->lib_handle+0 S8 A64])) nsswitch.c:476 -1
     (nil))
(insn 109 108 110 10 (set (reg:DI 4 si)
        (reg/f:DI 106 [ name.20 ])) nsswitch.c:476 -1
     (nil))
(insn 110 109 111 10 (set (reg:DI 5 di)
        (reg:DI 146)) nsswitch.c:476 -1
     (nil))
(call_insn 111 110 112 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___libc_dlsym") [flags 0x43]  <function_decl 0x2ac27894b438 __libc_dlsym>) [0 __libc_dlsym S1 A8])
            (const_int 0 [0]))) nsswitch.c:476 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_dlsym") [flags 0x43]  <function_decl 0x2ac27894b438 __libc_dlsym>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 112 111 113 10 (set (reg/v/f:DI 93 [ result ])
        (reg:DI 0 ax)) nsswitch.c:476 -1
     (nil))
(insn 113 112 114 10 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 114 113 115 10 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 115 114 136 10 (set (reg/f:DI 7 sp)
        (reg/f:DI 99 [ D.13815 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 136 115 137 10 (set (pc)
        (label_ref 116)) -1
     (nil)
 -> 116)
(barrier 137 136 139)
(code_label 139 137 138 11 292 "" [1 uses])
(note 138 139 5 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 5 138 116 11 (set (reg/v/f:DI 93 [ result ])
        (const_int 0 [0])) nsswitch.c:461 -1
     (nil))
(code_label 116 5 117 12 290 "" [1 uses])
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 12 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ known ])
                (const_int 8 [0x8])) [3 known_19->fct_ptr+0 S8 A64])
        (reg/v/f:DI 93 [ result ])) nsswitch.c:515 -1
     (nil))
(insn 119 118 120 12 (parallel [
            (set (reg:DI 147)
                (asm_operands:DI ("xor %%fs:%c2, %0
rol $2*8+1, %0") ("=r") 0 [
                        (reg/v/f:DI 93 [ result ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") nsswitch.c:517)
                        (asm_input:DI ("i") nsswitch.c:517)
                    ]
                     [] nsswitch.c:517))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nsswitch.c:517 -1
     (nil))
(insn 120 119 132 12 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ known ])
                (const_int 8 [0x8])) [3 known_19->fct_ptr+0 S8 A64])
        (reg:DI 147)) nsswitch.c:517 -1
     (nil))
(jump_insn 132 120 133 12 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
(barrier 133 132 135)
(code_label 135 133 134 13 291 "" [1 uses])
(note 134 135 6 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 6 134 121 13 (set (reg/v/f:DI 93 [ result ])
        (const_int 0 [0])) nsswitch.c:419 -1
     (nil))
(code_label 121 6 122 14 286 "" [3 uses])
(note 122 121 123 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 14 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=m") 0 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:523)
                    ]
                     [] nsswitch.c:523))
            (set (reg:SI 148 [ ignore ])
                (asm_operands/v:SI ("cmpl $0, __libc_multiple_threads(%%rip)
	je 0f
	lock; decl %0
	jne 1f
	jmp 24f
	0:	decl %0
	je 24f
	1:	lea %0, %%rdi
2:	sub $128, %%rsp
.cfi_adjust_cfa_offset 128
3:	callq __lll_unlock_wake_private
4:	add $128, %%rsp
.cfi_adjust_cfa_offset -128
24:") ("=&D") 1 [
                        (mem/c:SI (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ac278b92bd0 lock>) [2 lock+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("m") nsswitch.c:523)
                    ]
                     [] nsswitch.c:523))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
            (clobber (reg:QI 40 r11))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 0 ax))
        ]) nsswitch.c:523 -1
     (nil))
(insn 124 123 125 14 (set (reg/v:SI 111 [ ignore ])
        (reg:SI 148 [ ignore ])) nsswitch.c:523 -1
     (nil))
(insn 125 124 129 14 (set (reg:DI 112 [ <retval> ])
        (reg/v/f:DI 93 [ result ])) nsswitch.c:525 -1
     (nil))
(insn 129 125 130 14 (set (reg/i:DI 0 ax)
        (reg:DI 112 [ <retval> ])) nsswitch.c:526 -1
     (nil))
(insn 130 129 0 14 (use (reg/i:DI 0 ax)) nsswitch.c:526 -1
     (nil))

;; Function __nss_lookup (*__GI___nss_lookup, funcdef_no=56, decl_uid=10993, cgraph_uid=57, symbol_order=75)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13
Edge 8->11 redirected to 17
Edge 12->11 redirected to 18


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 102 [ ni ])
        (reg:DI 5 di [ ni ])) nsswitch.c:188 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 103 [ fct_name ])
        (reg:DI 4 si [ fct_name ])) nsswitch.c:188 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 104 [ fct2_name ])
        (reg:DI 1 dx [ fct2_name ])) nsswitch.c:188 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 105 [ fctp ])
        (reg:DI 2 cx [ fctp ])) nsswitch.c:188 -1
     (nil))
(note 6 5 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 6 14 2 (set (reg:DI 4 si)
        (reg/v/f:DI 103 [ fct_name ])) nsswitch.c:189 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 102 [ ni ]) [3 *ni_5(D)+0 S8 A64])) nsswitch.c:189 -1
     (nil))
(call_insn 15 14 16 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:189 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg/f:DI 96 [ D.13835 ])
        (reg:DI 0 ax)) nsswitch.c:189 -1
     (nil))
(insn 17 16 18 2 (set (mem/f:DI (reg/v/f:DI 105 [ fctp ]) [3 *fctp_10(D)+0 S8 A64])
        (reg/f:DI 96 [ D.13835 ])) nsswitch.c:189 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ fct2_name ])
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 106)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(insn 20 19 21 2 (set (reg:QI 98 [ D.13834 ])
        (reg:QI 106)) nsswitch.c:190 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.13835 ])
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(insn 22 21 23 2 (set (reg:QI 108 [ D.13834 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(insn 23 22 24 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ D.13834 ])
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(jump_insn 24 23 96 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) nsswitch.c:190 -1
     (int_list:REG_BR_PROB 1508 (nil))
 -> 33)
(note 96 24 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 96 26 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.13834 ])
            (const_int 0 [0]))) nsswitch.c:190 -1
     (nil))
(jump_insn 26 25 27 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) nsswitch.c:190 -1
     (int_list:REG_BR_PROB 1776 (nil))
 -> 33)
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ fct2_name ])) nsswitch.c:191 -1
     (nil))
(insn 29 28 30 5 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 102 [ ni ]) [3 *ni_5(D)+0 S8 A64])) nsswitch.c:191 -1
     (nil))
(call_insn 30 29 31 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 31 30 32 5 (set (reg/f:DI 96 [ D.13835 ])
        (reg:DI 0 ax)) nsswitch.c:191 -1
     (nil))
(insn 32 31 33 5 (set (mem/f:DI (reg/v/f:DI 105 [ fctp ]) [3 *fctp_10(D)+0 S8 A64])
        (reg/f:DI 96 [ D.13835 ])) nsswitch.c:191 -1
     (nil))
(code_label 33 32 34 6 295 "" [2 uses])
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 35 34 36 6 (set (pc)
        (label_ref 58)) nsswitch.c:191 -1
     (nil)
 -> 58)
(barrier 36 35 68)
(code_label 68 36 37 7 300 "" [1 uses])
(note 37 68 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (mem/f:DI (reg/v/f:DI 102 [ ni ]) [3 *ni_5(D)+0 S8 A64])
        (reg/f:DI 92 [ D.13833 ])) nsswitch.c:197 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 4 si)
        (reg/v/f:DI 103 [ fct_name ])) nsswitch.c:199 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13833 ])) nsswitch.c:199 -1
     (nil))
(call_insn 41 40 42 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:199 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 7 (set (reg/f:DI 96 [ D.13835 ])
        (reg:DI 0 ax)) nsswitch.c:199 -1
     (nil))
(insn 43 42 44 7 (set (mem/f:DI (reg/v/f:DI 105 [ fctp ]) [3 *fctp_10(D)+0 S8 A64])
        (reg/f:DI 96 [ D.13835 ])) nsswitch.c:199 -1
     (nil))
(insn 44 43 45 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.13835 ])
            (const_int 0 [0]))) nsswitch.c:200 -1
     (nil))
(insn 45 44 46 7 (set (reg:QI 110 [ D.13834 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:200 -1
     (nil))
(insn 46 45 47 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.13834 ])
            (const_int 0 [0]))) nsswitch.c:200 -1
     (nil))
(jump_insn 47 46 97 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nsswitch.c:200 -1
     (int_list:REG_BR_PROB 1508 (nil))
 -> 56)
(note 97 47 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 97 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ D.13834 ])
            (const_int 0 [0]))) nsswitch.c:200 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nsswitch.c:200 -1
     (int_list:REG_BR_PROB 1776 (nil))
 -> 56)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ fct2_name ])) nsswitch.c:201 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 102 [ ni ]) [3 *ni_5(D)+0 S8 A64])) nsswitch.c:201 -1
     (nil))
(call_insn 53 52 54 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:201 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 54 53 55 9 (set (reg/f:DI 96 [ D.13835 ])
        (reg:DI 0 ax)) nsswitch.c:201 -1
     (nil))
(insn 55 54 56 9 (set (mem/f:DI (reg/v/f:DI 105 [ fctp ]) [3 *fctp_10(D)+0 S8 A64])
        (reg/f:DI 96 [ D.13835 ])) nsswitch.c:201 -1
     (nil))
(code_label 56 55 57 10 297 "" [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(code_label 58 57 59 11 296 "" [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.13835 ])
            (const_int 0 [0]))) nsswitch.c:193 -1
     (nil))
(jump_insn 61 60 62 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 91)
            (pc))) nsswitch.c:193 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 91)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (set (reg/f:DI 90 [ D.13831 ])
        (mem/f:DI (reg/v/f:DI 102 [ ni ]) [3 *ni_5(D)+0 S8 A64])) nsswitch.c:194 -1
     (nil))
(insn 64 63 65 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 90 [ D.13831 ])
                    (const_int 12 [0xc])) [7 _19->actions+4 S4 A32])
            (const_int 0 [0]))) nsswitch.c:194 -1
     (nil))
(jump_insn 65 64 66 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) nsswitch.c:194 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 76)
(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 69 13 (set (reg/f:DI 92 [ D.13833 ])
        (mem/f:DI (reg/f:DI 90 [ D.13831 ]) [3 _19->next+0 S8 A64])) nsswitch.c:195 -1
     (nil))
(insn 69 67 70 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.13833 ])
            (const_int 0 [0]))) nsswitch.c:195 -1
     (nil))
(jump_insn 70 69 87 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) nsswitch.c:195 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 68)
(note 87 70 10 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 10 87 88 14 (set (reg:SI 87 [ D.13830 ])
        (const_int 1 [0x1])) nsswitch.c:204 -1
     (nil))
(jump_insn 88 10 89 14 (set (pc)
        (label_ref 71)) -1
     (nil)
 -> 71)
(barrier 89 88 91)
(code_label 91 89 90 15 301 "" [1 uses])
(note 90 91 8 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 8 90 92 15 (set (reg:SI 87 [ D.13830 ])
        (const_int 0 [0])) nsswitch.c:204 -1
     (nil))
(jump_insn 92 8 93 15 (set (pc)
        (label_ref 71)) -1
     (nil)
 -> 71)
(barrier 93 92 95)
(code_label 95 93 94 16 302 "" [1 uses])
(note 94 95 7 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 7 94 71 16 (set (reg:SI 87 [ D.13830 ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:204 -1
     (nil))
(code_label 71 7 72 17 298 "" [3 uses])
(note 72 71 73 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 17 (set (reg:SI 101 [ <retval> ])
        (reg:SI 87 [ D.13830 ])) nsswitch.c:204 -1
     (nil))
(jump_insn 74 73 75 17 (set (pc)
        (label_ref 83)) nsswitch.c:204 -1
     (nil)
 -> 83)
(barrier 75 74 76)
(code_label 76 75 77 18 299 "" [1 uses])
(note 77 76 78 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 90 [ D.13831 ]) [3 _19->next+0 S8 A64])
            (const_int 0 [0]))) nsswitch.c:204 -1
     (nil))
(jump_insn 79 78 80 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) nsswitch.c:204 612 {*jcc_1}
     (int_list:REG_BR_PROB 3764 (nil))
 -> 95)
(note 80 79 9 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 9 80 81 19 (set (reg:SI 87 [ D.13830 ])
        (const_int 1 [0x1])) nsswitch.c:204 -1
     (nil))
(jump_insn 81 9 82 19 (set (pc)
        (label_ref 71)) -1
     (nil)
 -> 71)
(barrier 82 81 83)
(code_label 83 82 86 20 294 "" [1 uses])
(note 86 83 84 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 84 86 85 20 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) nsswitch.c:205 -1
     (nil))
(insn 85 84 0 20 (use (reg/i:SI 0 ax)) nsswitch.c:205 -1
     (nil))

;; Function __nss_next2 (*__GI___nss_next2, funcdef_no=57, decl_uid=11001, cgraph_uid=59, symbol_order=77)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16
Edge 4->16 redirected to 21
Edge 7->16 redirected to 22
Edge 13->16 redirected to 23


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 10 failed.
Forwarding edge 18->19 to 11 failed.
Removing jump 97.
Merging block 24 into block 23...
Merged blocks 23 and 24.
Merged 23 and 24 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 10 failed.
Forwarding edge 18->19 to 11 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 13 NOTE_INSN_DELETED)
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 104 [ ni ])
        (reg:DI 5 di [ ni ])) nsswitch.c:215 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 105 [ fct_name ])
        (reg:DI 4 si [ fct_name ])) nsswitch.c:215 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ fct2_name ])
        (reg:DI 1 dx [ fct2_name ])) nsswitch.c:215 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 107 [ fctp ])
        (reg:DI 2 cx [ fctp ])) nsswitch.c:215 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 108 [ status ])
        (reg:SI 37 r8 [ status ])) nsswitch.c:215 -1
     (nil))
(insn 7 6 8 2 (set (reg/v:SI 109 [ all_values ])
        (reg:SI 38 r9 [ all_values ])) nsswitch.c:215 -1
     (nil))
(note 8 7 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 8 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 109 [ all_values ])
            (const_int 0 [0]))) nsswitch.c:216 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) nsswitch.c:216 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 29)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 89 [ D.13847 ])
        (mem/f:DI (reg/v/f:DI 104 [ ni ]) [3 *ni_7(D)+0 S8 A64])) nsswitch.c:218 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 110)
        (const_int 4294967297 [0x100000001])) nsswitch.c:218 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/f:DI 89 [ D.13847 ])
                    (const_int 8 [0x8])) [8 *_8+8 S8 A64])
            (reg:DI 110))) nsswitch.c:218 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) nsswitch.c:218 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 45)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:DI 111)
        (const_int 4294967297 [0x100000001])) nsswitch.c:221 -1
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/f:DI 89 [ D.13847 ])
                    (const_int 16 [0x10])) [8 *_8+16 S8 A64])
            (reg:DI 111))) nsswitch.c:221 -1
     (nil))
(jump_insn 25 24 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) nsswitch.c:221 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 104)
(note 28 25 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 26 28 27 6 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 27 26 29)
(code_label 29 27 30 7 323 "" [1 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (parallel [
            (set (reg:SI 112 [ D.13849 ])
                (plus:SI (reg/v:SI 108 [ status ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:227 -1
     (nil))
(insn 32 31 33 7 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 112 [ D.13849 ])
            (const_int 4 [0x4]))) nsswitch.c:227 -1
     (nil))
(jump_insn 33 32 34 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) nsswitch.c:227 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 38)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x2ac278e43870 *.LC21>)) nsswitch.c:229 -1
     (nil))
(call_insn 36 35 37 8 (call (mem:QI (symbol_ref:DI ("*__GI___libc_fatal") [flags 0x43]  <function_decl 0x2ac278a88948 __libc_fatal>) [0 __libc_fatal S1 A8])
        (const_int 0 [0])) nsswitch.c:229 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___libc_fatal") [flags 0x43]  <function_decl 0x2ac278a88948 __libc_fatal>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(barrier 37 36 38)
(code_label 38 37 39 9 326 "" [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg/f:DI 89 [ D.13847 ])
        (mem/f:DI (reg/v/f:DI 104 [ ni ]) [3 *ni_7(D)+0 S8 A64])) nsswitch.c:231 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:SI 113 [ D.13845 ])
                (plus:SI (reg/v:SI 108 [ status ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nsswitch.c:231 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 114)
        (sign_extend:DI (reg:SI 113 [ D.13845 ]))) nsswitch.c:231 -1
     (nil))
(insn 43 42 44 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 114)
                            (const_int 4 [0x4]))
                        (reg/f:DI 89 [ D.13847 ]))
                    (const_int 8 [0x8])) [7 _17->actions S4 A32])
            (const_int 1 [0x1]))) nsswitch.c:231 -1
     (nil))
(jump_insn 44 43 45 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 108)
            (pc))) nsswitch.c:231 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 108)
(code_label 45 44 46 10 324 "" [2 uses])
(note 46 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 10 (set (reg/f:DI 100 [ D.13852 ])
        (mem/f:DI (reg/f:DI 89 [ D.13847 ]) [3 _48->next+0 S8 A64])) nsswitch.c:235 -1
     (nil))
(insn 48 47 49 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.13852 ])
            (const_int 0 [0]))) nsswitch.c:235 -1
     (nil))
(jump_insn 49 48 83 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) nsswitch.c:235 -1
     (int_list:REG_BR_PROB 9927 (nil))
 -> 53)
(code_label 83 49 50 11 329 "" [2 uses])
(note 50 83 11 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 11 50 51 11 (set (reg:SI 87 [ D.13845 ])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:236 -1
     (nil))
(jump_insn 51 11 52 11 (set (pc)
        (label_ref 94)) -1
     (nil)
 -> 94)
(barrier 52 51 53)
(code_label 53 52 54 12 327 "" [1 uses])
(note 54 53 55 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 106 [ fct2_name ])
            (const_int 0 [0]))) -1
     (nil))
(insn 56 55 57 12 (set (reg:QI 115)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 57 56 88 12 (set (reg:QI 102 [ D.13846 ])
        (reg:QI 115)) -1
     (nil))
(code_label 88 57 58 13 330 "" [1 uses])
(note 58 88 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 13 (set (mem/f:DI (reg/v/f:DI 104 [ ni ]) [3 *ni_7(D)+0 S8 A64])
        (reg/f:DI 100 [ D.13852 ])) nsswitch.c:240 -1
     (nil))
(insn 60 59 61 13 (set (reg:DI 4 si)
        (reg/v/f:DI 105 [ fct_name ])) nsswitch.c:242 -1
     (nil))
(insn 61 60 62 13 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.13852 ])) nsswitch.c:242 -1
     (nil))
(call_insn 62 61 63 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:242 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 63 62 64 13 (set (reg/f:DI 94 [ D.13850 ])
        (reg:DI 0 ax)) nsswitch.c:242 -1
     (nil))
(insn 64 63 65 13 (set (mem/f:DI (reg/v/f:DI 107 [ fctp ]) [3 *fctp_25(D)+0 S8 A64])
        (reg/f:DI 94 [ D.13850 ])) nsswitch.c:242 -1
     (nil))
(insn 65 64 66 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.13850 ])
            (const_int 0 [0]))) nsswitch.c:243 -1
     (nil))
(insn 66 65 67 13 (set (reg:QI 117 [ D.13846 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nsswitch.c:243 -1
     (nil))
(insn 67 66 68 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ D.13846 ])
            (const_int 0 [0]))) nsswitch.c:243 -1
     (nil))
(jump_insn 68 67 113 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) nsswitch.c:243 -1
     (int_list:REG_BR_PROB 1508 (nil))
 -> 77)
(note 113 68 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 69 113 70 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ D.13846 ])
            (const_int 0 [0]))) nsswitch.c:243 -1
     (nil))
(jump_insn 70 69 71 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) nsswitch.c:243 -1
     (int_list:REG_BR_PROB 1776 (nil))
 -> 77)
(note 71 70 72 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 15 (set (reg:DI 4 si)
        (reg/v/f:DI 106 [ fct2_name ])) nsswitch.c:244 -1
     (nil))
(insn 73 72 74 15 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 104 [ ni ]) [3 *ni_7(D)+0 S8 A64])) nsswitch.c:244 -1
     (nil))
(call_insn 74 73 75 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nsswitch.c:244 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_lookup_function") [flags 0x3]  <function_decl 0x2ac278adb000 __nss_lookup_function>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 75 74 76 15 (set (reg/f:DI 94 [ D.13850 ])
        (reg:DI 0 ax)) nsswitch.c:244 -1
     (nil))
(insn 76 75 77 15 (set (mem/f:DI (reg/v/f:DI 107 [ fctp ]) [3 *fctp_25(D)+0 S8 A64])
        (reg/f:DI 94 [ D.13850 ])) nsswitch.c:244 -1
     (nil))
(code_label 77 76 78 16 328 "" [2 uses])
(note 78 77 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.13850 ])
            (const_int 0 [0]))) nsswitch.c:248 -1
     (nil))
(jump_insn 80 79 81 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 112)
            (pc))) nsswitch.c:248 612 {*jcc_1}
     (int_list:REG_BR_PROB 300 (nil))
 -> 112)
(note 81 80 82 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 84 17 (set (reg/f:DI 98 [ D.13847 ])
        (mem/f:DI (reg/v/f:DI 104 [ ni ]) [3 *ni_7(D)+0 S8 A64])) nsswitch.c:247 -1
     (nil))
(insn 84 82 85 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 98 [ D.13847 ])
                    (const_int 12 [0xc])) [7 _33->actions+4 S4 A32])
            (const_int 0 [0]))) nsswitch.c:247 -1
     (nil))
(jump_insn 85 84 86 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) nsswitch.c:247 -1
     (int_list:REG_BR_PROB 300 (nil))
 -> 83)
(note 86 85 87 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 89 18 (set (reg/f:DI 100 [ D.13852 ])
        (mem/f:DI (reg/f:DI 98 [ D.13847 ]) [3 _33->next+0 S8 A64])) nsswitch.c:248 -1
     (nil))
(insn 89 87 90 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.13852 ])
            (const_int 0 [0]))) nsswitch.c:248 -1
     (nil))
(jump_insn 90 89 93 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) nsswitch.c:248 -1
     (int_list:REG_BR_PROB 9700 (nil))
 -> 88)
(note 93 90 91 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 91 93 92 19 (set (pc)
        (label_ref 83)) nsswitch.c:248 -1
     (nil)
 -> 83)
(barrier 92 91 104)
(code_label 104 92 103 20 331 "" [1 uses])
(note 103 104 12 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 12 103 105 20 (set (reg:SI 87 [ D.13845 ])
        (const_int 1 [0x1])) nsswitch.c:222 -1
     (nil))
(jump_insn 105 12 106 20 (set (pc)
        (label_ref 94)) -1
     (nil)
 -> 94)
(barrier 106 105 108)
(code_label 108 106 107 21 332 "" [1 uses])
(note 107 108 9 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 9 107 109 21 (set (reg:SI 87 [ D.13845 ])
        (const_int 1 [0x1])) nsswitch.c:222 -1
     (nil))
(jump_insn 109 9 110 21 (set (pc)
        (label_ref 94)) -1
     (nil)
 -> 94)
(barrier 110 109 112)
(code_label 112 110 111 22 333 "" [1 uses])
(note 111 112 10 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 10 111 94 22 (set (reg:SI 87 [ D.13845 ])
        (const_int 0 [0])) nsswitch.c:250 -1
     (nil))
(code_label 94 10 95 23 325 "" [3 uses])
(note 95 94 96 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 100 23 (set (reg:SI 103 [ <retval> ])
        (reg:SI 87 [ D.13845 ])) -1
     (nil))
(insn 100 96 101 23 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) nsswitch.c:251 -1
     (nil))
(insn 101 100 0 23 (use (reg/i:SI 0 ax)) nsswitch.c:251 -1
     (nil))

;; Function __nss_next (__nss_next, funcdef_no=58, decl_uid=11008, cgraph_uid=62, symbol_order=80)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 89 [ ni ])
        (reg:DI 5 di [ ni ])) nsswitch.c:259 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ fct_name ])
        (reg:DI 4 si [ fct_name ])) nsswitch.c:259 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ fctp ])
        (reg:DI 1 dx [ fctp ])) nsswitch.c:259 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:SI 92 [ status ])
        (reg:SI 2 cx [ status ])) nsswitch.c:259 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 93 [ all_values ])
        (reg:SI 37 r8 [ all_values ])) nsswitch.c:259 -1
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:SI 38 r9)
        (reg/v:SI 93 [ all_values ])) nsswitch.c:260 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 37 r8)
        (reg/v:SI 92 [ status ])) nsswitch.c:260 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ fctp ])) nsswitch.c:260 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) nsswitch.c:260 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ fct_name ])) nsswitch.c:260 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ni ])) nsswitch.c:260 -1
     (nil))
(call_insn/j 16 15 17 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___nss_next2") [flags 0x3]  <function_decl 0x2ac278acf798 __nss_next2>) [0 __nss_next2 S1 A8])
            (const_int 0 [0]))) nsswitch.c:260 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___nss_next2") [flags 0x3]  <function_decl 0x2ac278acf798 __nss_next2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:SI (use (reg:SI 38 r9))
                            (nil))))))))
(barrier 17 16 0)

;; Function __nss_disable_nscd (__nss_disable_nscd, funcdef_no=68, decl_uid=11017, cgraph_uid=72, symbol_order=91)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ cb ])
        (reg:DI 5 di [ cb ])) nsswitch.c:843 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (parallel [
            (set (reg:DI 88 [ cb ])
                (asm_operands:DI ("xor %%fs:%c2, %0
rol $2*8+1, %0") ("=r") 0 [
                        (reg/v/f:DI 87 [ cb ])
                        (const_int 48 [0x30])
                    ]
                     [
                        (asm_input:DI ("0") nsswitch.c:845)
                        (asm_input:DI ("i") nsswitch.c:845)
                    ]
                     [] nsswitch.c:845))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) nsswitch.c:845 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 87 [ cb ])
        (reg:DI 88 [ cb ])) nsswitch.c:845 -1
     (nil))
(insn 8 7 9 2 (set (mem/f/c:DI (symbol_ref:DI ("nscd_init_cb") [flags 0x2]  <var_decl 0x2ac278b92ea0 nscd_init_cb>) [3 nscd_init_cb+0 S8 A64])
        (reg/v/f:DI 87 [ cb ])) nsswitch.c:847 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:QI (symbol_ref:DI ("is_nscd") [flags 0x2]  <var_decl 0x2ac278b92e10 is_nscd>) [11 is_nscd+0 S1 A8])
        (const_int 1 [0x1])) nsswitch.c:848 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2ac278e59d80 *.LC24>)) nsswitch.c:851 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x2ac278e59e10 *.LC25>)) nsswitch.c:851 -1
     (nil))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>) [0 nss_load_all_libraries S1 A8])
        (const_int 0 [0])) nsswitch.c:851 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x2ac278e59d80 *.LC24>)) nsswitch.c:852 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x2ac278e59ea0 *.LC26>)) nsswitch.c:852 -1
     (nil))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>) [0 nss_load_all_libraries S1 A8])
        (const_int 0 [0])) nsswitch.c:852 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x2ac278e59f30 *.LC27>)) nsswitch.c:853 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x2ac278e597e0 *.LC28>)) nsswitch.c:853 -1
     (nil))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>) [0 nss_load_all_libraries S1 A8])
        (const_int 0 [0])) nsswitch.c:853 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (const_int 0 [0])) nsswitch.c:854 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x2ac278e43240 *.LC29>)) nsswitch.c:854 -1
     (nil))
(call_insn 21 20 22 2 (call (mem:QI (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>) [0 nss_load_all_libraries S1 A8])
        (const_int 0 [0])) nsswitch.c:854 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("nss_load_all_libraries") [flags 0x3]  <function_decl 0x2ac278bd7bd0 nss_load_all_libraries>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 22 21 23 2 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_passwd") [flags 0x42]  <var_decl 0x2ac278a92750 __nss_not_use_nscd_passwd>) [2 __nss_not_use_nscd_passwd+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:857 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_group") [flags 0x42]  <var_decl 0x2ac278a927e0 __nss_not_use_nscd_group>) [2 __nss_not_use_nscd_group+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:858 -1
     (nil))
(insn 24 23 25 2 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_hosts") [flags 0x42]  <var_decl 0x2ac278a92870 __nss_not_use_nscd_hosts>) [2 __nss_not_use_nscd_hosts+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:859 -1
     (nil))
(insn 25 24 26 2 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_services") [flags 0x42]  <var_decl 0x2ac278a92900 __nss_not_use_nscd_services>) [2 __nss_not_use_nscd_services+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:860 -1
     (nil))
(insn 26 25 0 2 (set (mem/c:SI (symbol_ref:DI ("__nss_not_use_nscd_netgroup") [flags 0x42]  <var_decl 0x2ac278a92990 __nss_not_use_nscd_netgroup>) [2 __nss_not_use_nscd_netgroup+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) nsswitch.c:861 -1
     (nil))
