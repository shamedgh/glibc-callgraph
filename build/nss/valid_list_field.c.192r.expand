
;; Function __nss_valid_list_field (__nss_valid_list_field, funcdef_no=9, decl_uid=1880, cgraph_uid=9, symbol_order=13)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7
Edge 2->7 redirected to 11
Edge 3->7 redirected to 12
Edge 5->7 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 55.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 30 NOTE_INSN_DELETED)
(note 30 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 30 25 2 (set (reg/v/f:DI 113 [ list ])
        (reg:DI 5 di [ list ])) valid_list_field.c:29 -1
     (nil))
(note 25 24 32 2 NOTE_INSN_FUNCTION_BEG)
(insn 32 25 33 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 113 [ list ])
            (const_int 0 [0]))) valid_list_field.c:30 -1
     (nil))
(jump_insn 33 32 34 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 65)
            (pc))) valid_list_field.c:30 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 65)
(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 4 (set (reg/f:DI 109 [ D.2589 ])
        (mem/f:DI (reg/v/f:DI 113 [ list ]) [1 *list_3(D)+0 S8 A64])) valid_list_field.c:32 -1
     (nil))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ D.2589 ])
            (const_int 0 [0]))) valid_list_field.c:32 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 69)
            (pc))) valid_list_field.c:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 69)
(note 38 37 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 49 38 39 6 3 "" [1 uses])
(note 39 49 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:DI 4 si)
        (symbol_ref:DI ("invalid_characters") [flags 0x2]  <var_decl 0x2ad54a943510 invalid_characters>)) valid_list_field.c:33 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.2589 ])) valid_list_field.c:33 -1
     (nil))
(call_insn/i 42 41 43 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strpbrk") [flags 0x41]  <function_decl 0x2ad54a8161b0 __builtin_strpbrk>) [0 __builtin_strpbrk S1 A8])
            (const_int 0 [0]))) valid_list_field.c:33 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strpbrk") [flags 0x41]  <function_decl 0x2ad54a8161b0 __builtin_strpbrk>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 43 42 44 6 (set (reg/f:DI 111 [ D.2589 ])
        (reg:DI 0 ax)) valid_list_field.c:33 -1
     (nil))
(insn 44 43 45 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 111 [ D.2589 ])
            (const_int 0 [0]))) valid_list_field.c:33 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 73)
            (pc))) valid_list_field.c:33 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 73)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (parallel [
            (set (reg/v/f:DI 113 [ list ])
                (plus:DI (reg/v/f:DI 113 [ list ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) valid_list_field.c:32 -1
     (nil))
(insn 48 47 50 7 (set (reg/f:DI 109 [ D.2589 ])
        (mem/f:DI (reg/v/f:DI 113 [ list ]) [1 MEM[base: list_8, offset: 0B]+0 S8 A64])) valid_list_field.c:32 -1
     (nil))
(insn 50 48 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ D.2589 ])
            (const_int 0 [0]))) valid_list_field.c:32 -1
     (nil))
(jump_insn 51 50 61 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) valid_list_field.c:32 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 49)
(note 61 51 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 61 62 8 (set (reg:QI 110 [ D.2590 ])
        (const_int 1 [0x1])) valid_list_field.c:31 -1
     (nil))
(jump_insn 62 29 63 8 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 63 62 65)
(code_label 65 63 64 9 4 "" [1 uses])
(note 64 65 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 28 64 66 9 (set (reg:QI 110 [ D.2590 ])
        (const_int 1 [0x1])) valid_list_field.c:31 -1
     (nil))
(jump_insn 66 28 67 9 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 67 66 69)
(code_label 69 67 68 10 5 "" [1 uses])
(note 68 69 26 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 26 68 70 10 (set (reg:QI 110 [ D.2590 ])
        (const_int 1 [0x1])) valid_list_field.c:31 -1
     (nil))
(jump_insn 70 26 71 10 (set (pc)
        (label_ref 52)) -1
     (nil)
 -> 52)
(barrier 71 70 73)
(code_label 73 71 72 11 6 "" [1 uses])
(note 72 73 27 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 27 72 52 11 (set (reg:QI 110 [ D.2590 ])
        (const_int 0 [0])) valid_list_field.c:34 -1
     (nil))
(code_label 52 27 53 12 2 "" [3 uses])
(note 53 52 54 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 58 12 (set (reg:QI 112 [ <retval> ])
        (reg:QI 110 [ D.2590 ])) -1
     (nil))
(insn 58 54 59 12 (set (reg/i:QI 0 ax)
        (reg:QI 112 [ <retval> ])) valid_list_field.c:36 -1
     (nil))
(insn 59 58 0 12 (use (reg/i:QI 0 ax)) valid_list_field.c:36 -1
     (nil))
