
;; Function check_one_fd (check_one_fd, funcdef_no=32, decl_uid=8049, cgraph_uid=32, symbol_order=33)

Partition 0: size 144 align 16
	st

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 4->6 redirected to 18


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->17 redirected to 18
Edge 4->17 redirected to 18
Edge 14->16 redirected to 18
deleting block 16
deleting block 17


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v:SI 102 [ fd ])
        (reg:SI 5 di [ fd ])) check_fds.c:41 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 103 [ mode ])
        (reg:SI 4 si [ mode ])) check_fds.c:41 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) check_fds.c:43 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg/v:SI 102 [ fd ])) check_fds.c:43 -1
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) check_fds.c:43 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__libc_fcntl") [flags 0x43]  <function_decl 0x2b6a581ca6c0 __libc_fcntl>) [0 __libc_fcntl S1 A8])
            (const_int 0 [0]))) check_fds.c:43 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__libc_fcntl") [flags 0x43]  <function_decl 0x2b6a581ca6c0 __libc_fcntl>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 87 [ D.8170 ])
        (reg:SI 0 ax)) check_fds.c:43 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.8170 ])
            (const_int -1 [0xffffffffffffffff]))) check_fds.c:43 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) check_fds.c:43 612 {*jcc_1}
     (int_list:REG_BR_PROB 9000 (nil))
 -> 74)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("rtld_errno") [flags 0x42]  <var_decl 0x2b6a58185000 rtld_errno>) [1 rtld_errno+0 S4 A32])
            (const_int 9 [0x9]))) check_fds.c:44 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) check_fds.c:44 612 {*jcc_1}
     (int_list:REG_BR_PROB 6218 (nil))
 -> 74)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (parallel [
            (set (reg:SI 104 [ D.8170 ])
                (and:SI (reg/v:SI 103 [ mode ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) check_fds.c:50 -1
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.8170 ])
            (const_int 1 [0x1]))) check_fds.c:50 -1
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 79)
            (pc))) check_fds.c:50 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 79)
(note 25 24 7 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 7 25 8 6 (set (reg/v:DI 101 [ dev ])
        (const_int 259 [0x103])) check_fds.c:58 -1
     (nil))
(insn 8 7 76 6 (set (reg/v/f:DI 91 [ name ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2b6a585387e0 *.LC1>)) check_fds.c:57 -1
     (nil))
(jump_insn 76 8 77 6 (set (pc)
        (label_ref 26)) -1
     (nil)
 -> 26)
(barrier 77 76 79)
(code_label 79 77 78 7 8 "" [1 uses])
(note 78 79 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 78 6 7 (set (reg/v:DI 101 [ dev ])
        (const_int 263 [0x107])) check_fds.c:53 -1
     (nil))
(insn 6 5 26 7 (set (reg/v/f:DI 91 [ name ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x2b6a58538750 *.LC0>)) check_fds.c:52 -1
     (nil))
(code_label 26 6 27 8 3 "" [1 uses])
(note 27 26 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 8 (set (reg/v:DI 1 dx [ _a3 ])
        (const_int 0 [0])) check_fds.c:64 -1
     (nil))
(insn 29 28 30 8 (set (reg/v:DI 4 si [ _a2 ])
        (sign_extend:DI (reg/v:SI 103 [ mode ]))) check_fds.c:64 -1
     (nil))
(insn 30 29 31 8 (set (reg/v:DI 5 di [ _a1 ])
        (reg/v/f:DI 91 [ name ])) check_fds.c:64 -1
     (nil))
(insn 31 30 32 8 (set (reg:SI 106)
        (const_int 2 [0x2])) check_fds.c:64 -1
     (nil))
(insn 32 31 33 8 (parallel [
            (set (reg:DI 105 [ resultvar ])
                (asm_operands/v:DI ("syscall
	") ("=a") 0 [
                        (reg:SI 106)
                        (reg/v:DI 5 di [ _a1 ])
                        (reg/v:DI 4 si [ _a2 ])
                        (reg/v:DI 1 dx [ _a3 ])
                    ]
                     [
                        (asm_input:SI ("0") check_fds.c:64)
                        (asm_input:DI ("r") check_fds.c:64)
                        (asm_input:DI ("r") check_fds.c:64)
                        (asm_input:DI ("r") check_fds.c:64)
                    ]
                     [] check_fds.c:64))
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
            (clobber (reg:QI 2 cx))
            (clobber (reg:QI 40 r11))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) check_fds.c:64 -1
     (nil))
(insn 33 32 34 8 (set (reg/v:DI 93 [ resultvar ])
        (reg:DI 105 [ resultvar ])) check_fds.c:64 -1
     (nil))
(insn 34 33 35 8 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 93 [ resultvar ])
            (const_int -4096 [0xfffffffffffff000]))) check_fds.c:64 -1
     (nil))
(jump_insn 35 34 36 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) check_fds.c:64 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 40)
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (set (reg:SI 87 [ D.8170 ])
        (subreg:SI (reg/v:DI 93 [ resultvar ]) 0)) -1
     (nil))
(jump_insn 38 37 39 9 (set (pc)
        (label_ref 44)) -1
     (nil)
 -> 44)
(barrier 39 38 40)
(code_label 40 39 41 10 4 "" [1 uses])
(note 41 40 42 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 10 (parallel [
            (set (reg:SI 107)
                (neg:SI (subreg:SI (reg/v:DI 93 [ resultvar ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) check_fds.c:64 -1
     (nil))
(insn 43 42 44 10 (set (mem/c:SI (symbol_ref:DI ("rtld_errno") [flags 0x42]  <var_decl 0x2b6a58185000 rtld_errno>) [1 rtld_errno+0 S4 A32])
        (reg:SI 107)) check_fds.c:64 -1
     (nil))
(code_label 44 43 45 11 5 "" [1 uses])
(note 45 44 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 102 [ fd ])
            (reg:SI 87 [ D.8170 ]))) check_fds.c:74 -1
     (nil))
(jump_insn 47 46 48 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) check_fds.c:74 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 65)
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 12 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) check_fds.c:75 -1
     (nil))
(insn 50 49 51 12 (set (reg:DI 1 dx)
        (reg:DI 108)) check_fds.c:75 -1
     (nil))
(insn 51 50 52 12 (set (reg:SI 4 si)
        (reg/v:SI 102 [ fd ])) check_fds.c:75 -1
     (nil))
(insn 52 51 53 12 (set (reg:SI 5 di)
        (const_int 1 [0x1])) check_fds.c:75 -1
     (nil))
(call_insn 53 52 54 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI___fxstat64") [flags 0x43]  <function_decl 0x2b6a58236bd0 __fxstat64>) [0 __fxstat64 S1 A8])
            (const_int 0 [0]))) check_fds.c:75 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI___fxstat64") [flags 0x43]  <function_decl 0x2b6a58236bd0 __fxstat64>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 54 53 55 12 (set (reg:SI 97 [ D.8170 ])
        (reg:SI 0 ax)) check_fds.c:75 -1
     (nil))
(insn 55 54 56 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.8170 ])
            (const_int 0 [0]))) check_fds.c:75 -1
     (nil))
(jump_insn 56 55 57 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) check_fds.c:75 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 65)
(note 57 56 58 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 13 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -120 [0xffffffffffffff88])) [1 st.st_mode+0 S4 A64])) check_fds.c:76 -1
     (nil))
(insn 59 58 60 13 (parallel [
            (set (reg:SI 109 [ D.8172 ])
                (and:SI (reg:SI 110)
                    (const_int 61440 [0xf000])))
            (clobber (reg:CC 17 flags))
        ]) check_fds.c:76 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -120 [0xffffffffffffff88])) [1 st.st_mode+0 S4 A64])
            (const_int 61440 [0xf000]))
        (nil)))
(insn 60 59 61 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.8172 ])
            (const_int 8192 [0x2000]))) check_fds.c:76 -1
     (nil))
(jump_insn 61 60 62 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) check_fds.c:76 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 65)
(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -104 [0xffffffffffffff98])) [2 st.st_rdev+0 S8 A64])
            (reg/v:DI 101 [ dev ]))) check_fds.c:77 -1
     (nil))
(jump_insn 64 63 65 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) check_fds.c:77 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 74)
(code_label 65 64 66 15 6 "" [4 uses])
(note 66 65 67 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 15 (asm_input/v ("hlt") check_fds.c:82) check_fds.c:82 -1
     (nil))
(jump_insn 68 67 69 15 (set (pc)
        (label_ref 65)) check_fds.c:82 -1
     (nil)
 -> 65)
(barrier 69 68 74)
(code_label 74 69 75 18 1 "" [3 uses])
(note 75 74 0 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

;; Function __libc_check_standard_fds (__libc_check_standard_fds, funcdef_no=33, decl_uid=3195, cgraph_uid=33, symbol_order=34)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 131073 [0x20001])) check_fds.c:98 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 0 [0])) check_fds.c:98 -1
     (nil))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>) [0 check_one_fd S1 A8])
        (const_int 0 [0])) check_fds.c:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 131072 [0x20000])) check_fds.c:99 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) check_fds.c:99 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>) [0 check_one_fd S1 A8])
        (const_int 0 [0])) check_fds.c:99 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 131072 [0x20000])) check_fds.c:100 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) check_fds.c:100 -1
     (nil))
(call_insn/j 13 12 14 2 (call (mem:QI (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>) [0 check_one_fd S1 A8])
        (const_int 0 [0])) check_fds.c:100 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("check_one_fd") [flags 0x3]  <function_decl 0x2b6a584e9a20 check_one_fd>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(barrier 14 13 0)
