
;; Function xdr_ypmaplist (*__GI_xdr_ypmaplist, funcdef_no=62, decl_uid=9010, cgraph_uid=77, symbol_order=77)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 26.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:205 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:205 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:67 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:67 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:67 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:67 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 87 [ D.9694 ])
        (reg:SI 0 ax)) yp_xdr.c:67 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9694 ])
            (const_int 0 [0]))) yp_xdr.c:206 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) yp_xdr.c:206 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 23)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (reg:DI 93 [ tp ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:209 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("*__GI_xdr_ypmaplist") [flags 0x3]  <function_decl 0x2b81a1de45e8 xdr_ypmaplist>)) yp_xdr.c:210 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) yp_xdr.c:210 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 4 si)
        (reg:DI 93 [ tp ])) yp_xdr.c:210 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:210 -1
     (nil))
(call_insn/j 20 19 21 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_pointer") [flags 0x41]  <function_decl 0x2b81a1c1fe58 xdr_pointer>) [0 xdr_pointer S1 A8])
            (const_int 0 [0]))) yp_xdr.c:210 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_pointer") [flags 0x41]  <function_decl 0x2b81a1c1fe58 xdr_pointer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 21 20 23)
(code_label 23 21 24 5 2 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 29 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9694 ])) -1
     (nil))
(insn 29 25 30 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:211 -1
     (nil))
(insn 30 29 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:211 -1
     (nil))

;; Function xdr_ypstat (*__GI_xdr_ypstat, funcdef_no=87, decl_uid=8959, cgraph_uid=45, symbol_order=45)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:44 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:44 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) yp_xdr.c:243 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) yp_xdr.c:243 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:243 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_ypxfrstat (*__GI_xdr_ypxfrstat, funcdef_no=85, decl_uid=8962, cgraph_uid=47, symbol_order=47)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:51 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:51 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) yp_xdr.c:243 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) yp_xdr.c:243 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:243 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_peername (*__GI_xdr_peername, funcdef_no=49, decl_uid=8971, cgraph_uid=53, symbol_order=53)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:73 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:73 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:74 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) yp_xdr.c:74 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) yp_xdr.c:74 -1
     (nil))
(call_insn/j 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 11 10 0)

;; Function xdr_mapname (*__GI_xdr_mapname, funcdef_no=89, decl_uid=8968, cgraph_uid=51, symbol_order=51)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:65 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:65 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_peername") [flags 0x3]  <function_decl 0x2b81a1ddea20 xdr_peername>) [0 xdr_peername S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_peername") [flags 0x3]  <function_decl 0x2b81a1ddea20 xdr_peername>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_domainname (*__GI_xdr_domainname, funcdef_no=91, decl_uid=8965, cgraph_uid=49, symbol_order=49)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:58 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:58 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_peername") [flags 0x3]  <function_decl 0x2b81a1ddea20 xdr_peername>) [0 xdr_peername S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_peername") [flags 0x3]  <function_decl 0x2b81a1ddea20 xdr_peername>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_keydat (*__GI_xdr_keydat, funcdef_no=50, decl_uid=8974, cgraph_uid=55, symbol_order=55)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:80 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:80 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 93 [ D.9718 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:81 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:81 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9718 ])) yp_xdr.c:81 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:81 -1
     (nil))
(call_insn/j 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:81 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 13 12 0)

;; Function xdr_valdat (*__GI_xdr_valdat, funcdef_no=51, decl_uid=8977, cgraph_uid=57, symbol_order=57)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:88 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:88 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (parallel [
            (set (reg:DI 93 [ D.9723 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:89 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:89 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9723 ])) yp_xdr.c:89 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:89 -1
     (nil))
(call_insn/j 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 13 12 0)

;; Function xdr_ypmap_parms (*__GI_xdr_ypmap_parms, funcdef_no=52, decl_uid=8980, cgraph_uid=59, symbol_order=59)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 8 failed.
Forwarding edge 2->4 to 8 failed.
Edge 5->4 redirected to 8
Edge 6->4 redirected to 8
Removing jump 48.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 8 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 96 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:96 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:96 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:60 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 97 [ objp ])) yp_xdr.c:60 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:60 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 12 11 13 2 (set (reg:SI 93 [ D.9735 ])
        (reg:SI 0 ax)) yp_xdr.c:60 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.9735 ])
            (const_int 0 [0]))) yp_xdr.c:97 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) yp_xdr.c:97 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 18)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 16 15 17 4 (set (pc)
        (label_ref 45)) -1
     (nil)
 -> 45)
(barrier 17 16 18)
(code_label 18 17 19 5 14 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (parallel [
            (set (reg:DI 98 [ D.9736 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:99 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:67 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg:DI 98 [ D.9736 ])) yp_xdr.c:67 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:67 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:67 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 27 5 (set (reg:SI 89 [ D.9735 ])
        (reg:SI 0 ax)) yp_xdr.c:67 -1
     (nil))
(insn 27 25 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.9735 ])
            (const_int 0 [0]))) yp_xdr.c:99 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) yp_xdr.c:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 45)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (parallel [
            (set (reg:DI 99 [ D.9737 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:101 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 4 si)
        (reg:DI 99 [ D.9737 ])) yp_xdr.c:101 -1
     (nil))
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:101 -1
     (nil))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 34 33 35 6 (set (reg:SI 92 [ D.9735 ])
        (reg:SI 0 ax)) yp_xdr.c:101 -1
     (nil))
(insn 35 34 36 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.9735 ])
            (const_int 0 [0]))) yp_xdr.c:101 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) yp_xdr.c:101 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 45)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (parallel [
            (set (reg:DI 100 [ D.9738 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:103 -1
     (nil))
(insn 39 38 40 7 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:74 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 4 si)
        (reg:DI 100 [ D.9738 ])) yp_xdr.c:74 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:74 -1
     (nil))
(call_insn/j 42 41 43 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 43 42 45)
(code_label 45 43 46 8 15 "" [3 uses])
(note 46 45 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 46 47 8 (set (reg:SI 87 [ D.9733 ])
        (const_int 0 [0])) yp_xdr.c:98 -1
     (nil))
(insn 47 5 51 8 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.9733 ])) -1
     (nil))
(insn 51 47 52 8 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) yp_xdr.c:104 -1
     (nil))
(insn 52 51 0 8 (use (reg/i:SI 0 ax)) yp_xdr.c:104 -1
     (nil))

;; Function xdr_ypreq_key (*__GI_xdr_ypreq_key, funcdef_no=53, decl_uid=8983, cgraph_uid=61, symbol_order=61)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 7 failed.
Forwarding edge 2->4 to 7 failed.
Edge 5->4 redirected to 7
Removing jump 43.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 7 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 95 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:109 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:109 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:60 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 96 [ objp ])) yp_xdr.c:60 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) yp_xdr.c:60 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 12 11 13 2 (set (reg:SI 91 [ D.9749 ])
        (reg:SI 0 ax)) yp_xdr.c:60 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.9749 ])
            (const_int 0 [0]))) yp_xdr.c:110 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) yp_xdr.c:110 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 18)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 16 15 17 4 (set (pc)
        (label_ref 40)) -1
     (nil)
 -> 40)
(barrier 17 16 18)
(code_label 18 17 19 5 26 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (parallel [
            (set (reg:DI 97 [ D.9750 ])
                (plus:DI (reg/v/f:DI 96 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:112 -1
     (nil))
(insn 21 20 22 5 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:67 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (reg:DI 97 [ D.9750 ])) yp_xdr.c:67 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) yp_xdr.c:67 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:67 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 27 5 (set (reg:SI 89 [ D.9749 ])
        (reg:SI 0 ax)) yp_xdr.c:67 -1
     (nil))
(insn 27 25 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.9749 ])
            (const_int 0 [0]))) yp_xdr.c:112 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 40)
            (pc))) yp_xdr.c:112 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 40)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (parallel [
            (set (reg:DI 98 [ D.9751 ])
                (plus:DI (reg/v/f:DI 96 [ objp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/v/f:DI 96 [ objp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 100 [ D.9752 ])
                (plus:DI (reg:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 33 32 34 6 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:81 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx)
        (reg:DI 98 [ D.9751 ])) yp_xdr.c:81 -1
     (nil))
(insn 35 34 36 6 (set (reg:DI 4 si)
        (reg:DI 100 [ D.9752 ])) yp_xdr.c:81 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ xdrs ])) yp_xdr.c:81 -1
     (nil))
(call_insn/j 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:81 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 38 37 40)
(code_label 40 38 41 7 27 "" [2 uses])
(note 41 40 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 41 42 7 (set (reg:SI 87 [ D.9747 ])
        (const_int 0 [0])) yp_xdr.c:111 -1
     (nil))
(insn 42 5 46 7 (set (reg:SI 94 [ <retval> ])
        (reg:SI 87 [ D.9747 ])) -1
     (nil))
(insn 46 42 47 7 (set (reg/i:SI 0 ax)
        (reg:SI 94 [ <retval> ])) yp_xdr.c:115 -1
     (nil))
(insn 47 46 0 7 (use (reg/i:SI 0 ax)) yp_xdr.c:115 -1
     (nil))

;; Function xdr_ypreq_nokey (*__GI_xdr_ypreq_nokey, funcdef_no=54, decl_uid=8986, cgraph_uid=63, symbol_order=63)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 25.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:120 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:120 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:60 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:60 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:60 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 87 [ D.9760 ])
        (reg:SI 0 ax)) yp_xdr.c:60 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9760 ])
            (const_int 0 [0]))) yp_xdr.c:121 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) yp_xdr.c:121 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 22)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (reg:DI 93 [ D.9762 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:123 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:67 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9762 ])) yp_xdr.c:67 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:67 -1
     (nil))
(call_insn/j 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:67 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 20 19 22)
(code_label 22 20 23 5 35 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9760 ])) -1
     (nil))
(insn 28 24 29 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:124 -1
     (nil))
(insn 29 28 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:124 -1
     (nil))

;; Function xdr_ypreq_xfr (xdr_ypreq_xfr, funcdef_no=55, decl_uid=8989, cgraph_uid=65, symbol_order=65)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 8 failed.
Forwarding edge 2->4 to 8 failed.
Edge 5->4 redirected to 8
Edge 6->4 redirected to 8
Removing jump 45.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 8 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 96 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:129 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:129 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 97 [ objp ])) yp_xdr.c:130 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:130 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_ypmap_parms") [flags 0x3]  <function_decl 0x2b81a1ddeca8 xdr_ypmap_parms>) [0 xdr_ypmap_parms S1 A8])
            (const_int 0 [0]))) yp_xdr.c:130 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_ypmap_parms") [flags 0x3]  <function_decl 0x2b81a1ddeca8 xdr_ypmap_parms>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 89 [ D.9767 ])
        (reg:SI 0 ax)) yp_xdr.c:130 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.9767 ])
            (const_int 0 [0]))) yp_xdr.c:130 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) yp_xdr.c:130 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 17)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 16 15 17)
(code_label 17 16 18 5 39 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (parallel [
            (set (reg:DI 98 [ D.9768 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:132 -1
     (nil))
(insn 20 19 21 5 (set (reg:DI 4 si)
        (reg:DI 98 [ D.9768 ])) yp_xdr.c:132 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:132 -1
     (nil))
(call_insn 22 21 23 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:132 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 25 5 (set (reg:SI 91 [ D.9767 ])
        (reg:SI 0 ax)) yp_xdr.c:132 -1
     (nil))
(insn 25 23 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 91 [ D.9767 ])
            (const_int 0 [0]))) yp_xdr.c:132 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) yp_xdr.c:132 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 42)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (parallel [
            (set (reg:DI 99 [ D.9768 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 36 [0x24])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:134 -1
     (nil))
(insn 29 28 30 6 (set (reg:DI 4 si)
        (reg:DI 99 [ D.9768 ])) yp_xdr.c:134 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:134 -1
     (nil))
(call_insn 31 30 32 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:134 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 32 31 33 6 (set (reg:SI 93 [ D.9767 ])
        (reg:SI 0 ax)) yp_xdr.c:134 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.9767 ])
            (const_int 0 [0]))) yp_xdr.c:134 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) yp_xdr.c:134 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 42)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (parallel [
            (set (reg:DI 100 [ D.9768 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:136 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 4 si)
        (reg:DI 100 [ D.9768 ])) yp_xdr.c:136 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:136 -1
     (nil))
(call_insn/j 39 38 40 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 40 39 42)
(code_label 42 40 43 8 40 "" [3 uses])
(note 43 42 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 43 44 8 (set (reg:SI 87 [ D.9765 ])
        (const_int 0 [0])) yp_xdr.c:131 -1
     (nil))
(insn 44 5 48 8 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.9765 ])) -1
     (nil))
(insn 48 44 49 8 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) yp_xdr.c:137 -1
     (nil))
(insn 49 48 0 8 (use (reg/i:SI 0 ax)) yp_xdr.c:137 -1
     (nil))

;; Function xdr_ypresp_val (*__GI_xdr_ypresp_val, funcdef_no=56, decl_uid=8992, cgraph_uid=66, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 27.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 92 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:141 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:141 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ objp ])) yp_xdr.c:46 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ xdrs ])) yp_xdr.c:46 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:46 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9776 ])
        (reg:SI 0 ax)) yp_xdr.c:46 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9776 ])
            (const_int 0 [0]))) yp_xdr.c:142 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) yp_xdr.c:142 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 24)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 94 [ D.9778 ])
                (plus:DI (reg/v/f:DI 93 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 15 14 16 4 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/v/f:DI 93 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg:DI 96 [ D.9779 ])
                (plus:DI (reg:DI 95)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:89 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 1 dx)
        (reg:DI 94 [ D.9778 ])) yp_xdr.c:89 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 4 si)
        (reg:DI 96 [ D.9779 ])) yp_xdr.c:89 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ xdrs ])) yp_xdr.c:89 -1
     (nil))
(call_insn/j 21 20 22 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 22 21 24)
(code_label 24 22 25 5 51 "" [1 uses])
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 30 5 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.9776 ])) -1
     (nil))
(insn 30 26 31 5 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) yp_xdr.c:145 -1
     (nil))
(insn 31 30 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:145 -1
     (nil))

;; Function xdr_ypresp_key_val (*__GI_xdr_ypresp_key_val, funcdef_no=57, decl_uid=8995, cgraph_uid=68, symbol_order=68)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 7 failed.
Forwarding edge 2->4 to 7 failed.
Edge 5->4 redirected to 7
Removing jump 45.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 7 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 96 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:150 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:150 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 97 [ objp ])) yp_xdr.c:46 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:46 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:46 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 90 [ D.9791 ])
        (reg:SI 0 ax)) yp_xdr.c:46 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.9791 ])
            (const_int 0 [0]))) yp_xdr.c:151 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) yp_xdr.c:151 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 17)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 16 15 17)
(code_label 17 16 18 5 55 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (parallel [
            (set (reg:DI 98 [ D.9790 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:DI 100 [ D.9792 ])
                (plus:DI (reg:DI 99)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:89 -1
     (nil))
(insn 22 21 23 5 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:89 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 1 dx)
        (reg:DI 98 [ D.9790 ])) yp_xdr.c:89 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 4 si)
        (reg:DI 100 [ D.9792 ])) yp_xdr.c:89 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:89 -1
     (nil))
(call_insn 26 25 27 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:89 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(insn 27 26 29 5 (set (reg:SI 92 [ D.9791 ])
        (reg:SI 0 ax)) yp_xdr.c:89 -1
     (nil))
(insn 29 27 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.9791 ])
            (const_int 0 [0]))) yp_xdr.c:153 -1
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) yp_xdr.c:153 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 42)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (parallel [
            (set (reg:DI 101 [ D.9790 ])
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 102)
                (plus:DI (reg/v/f:DI 97 [ objp ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 103 [ D.9792 ])
                (plus:DI (reg:DI 102)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:81 -1
     (nil))
(insn 35 34 36 6 (set (reg:SI 2 cx)
        (const_int 16777216 [0x1000000])) yp_xdr.c:81 -1
     (nil))
(insn 36 35 37 6 (set (reg:DI 1 dx)
        (reg:DI 101 [ D.9790 ])) yp_xdr.c:81 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 4 si)
        (reg:DI 103 [ D.9792 ])) yp_xdr.c:81 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ xdrs ])) yp_xdr.c:81 -1
     (nil))
(call_insn/j 39 38 40 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>) [0 xdr_bytes S1 A8])
            (const_int 0 [0]))) yp_xdr.c:81 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bytes") [flags 0x41]  <function_decl 0x2b81a1c1f5e8 xdr_bytes>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
(barrier 40 39 42)
(code_label 42 40 43 7 56 "" [2 uses])
(note 43 42 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 43 44 7 (set (reg:SI 87 [ D.9788 ])
        (const_int 0 [0])) yp_xdr.c:152 -1
     (nil))
(insn 44 5 48 7 (set (reg:SI 95 [ <retval> ])
        (reg:SI 87 [ D.9788 ])) -1
     (nil))
(insn 48 44 49 7 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) yp_xdr.c:156 -1
     (nil))
(insn 49 48 0 7 (use (reg/i:SI 0 ax)) yp_xdr.c:156 -1
     (nil))

;; Function xdr_ypresp_master (*__GI_xdr_ypresp_master, funcdef_no=58, decl_uid=8998, cgraph_uid=70, symbol_order=70)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 24.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:161 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:161 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:46 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:46 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:46 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9800 ])
        (reg:SI 0 ax)) yp_xdr.c:46 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9800 ])
            (const_int 0 [0]))) yp_xdr.c:162 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) yp_xdr.c:162 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 21)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93 [ D.9802 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:164 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:74 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9802 ])) yp_xdr.c:74 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:74 -1
     (nil))
(call_insn/j 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:74 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 19 18 21)
(code_label 21 19 22 5 64 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 27 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9800 ])) -1
     (nil))
(insn 27 23 28 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:165 -1
     (nil))
(insn 28 27 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:165 -1
     (nil))

;; Function xdr_ypresp_order (*__GI_xdr_ypresp_order, funcdef_no=59, decl_uid=9001, cgraph_uid=72, symbol_order=72)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:170 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:170 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:46 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:46 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:46 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9805 ])
        (reg:SI 0 ax)) yp_xdr.c:46 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9805 ])
            (const_int 0 [0]))) yp_xdr.c:171 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) yp_xdr.c:171 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 20)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93 [ D.9807 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:173 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9807 ])) yp_xdr.c:173 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:173 -1
     (nil))
(call_insn/j 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:173 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 18 17 20)
(code_label 20 18 21 5 68 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9805 ])) -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:174 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:174 -1
     (nil))

;; Function xdr_ypresp_all (*__GI_xdr_ypresp_all, funcdef_no=60, decl_uid=9004, cgraph_uid=74, symbol_order=74)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6
Edge 3->6 redirected to 9
Purged edges from bb 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 38.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 92 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:179 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:179 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ objp ])) yp_xdr.c:180 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ xdrs ])) yp_xdr.c:180 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bool") [flags 0x41]  <function_decl 0x2b81a1c1f360 xdr_bool>) [0 xdr_bool S1 A8])
            (const_int 0 [0]))) yp_xdr.c:180 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bool") [flags 0x41]  <function_decl 0x2b81a1c1f360 xdr_bool>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:SI 87 [ D.9818 ])
        (reg:SI 0 ax)) yp_xdr.c:180 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9818 ])
            (const_int 0 [0]))) yp_xdr.c:180 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) yp_xdr.c:180 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 35)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 94 [ D.9820 ])
        (mem:SI (reg/v/f:DI 93 [ objp ]) [3 objp_3(D)->more+0 S4 A64])) yp_xdr.c:182 -1
     (nil))
(insn 17 16 18 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.9820 ])
            (const_int 0 [0]))) yp_xdr.c:182 -1
     (nil))
(jump_insn 18 17 46 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) yp_xdr.c:182 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 23)
(note 46 18 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 46 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.9820 ])
            (const_int 1 [0x1]))) yp_xdr.c:182 -1
     (nil))
(jump_insn 20 19 47 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) yp_xdr.c:182 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 27)
(note 47 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 21 47 22 6 (set (pc)
        (label_ref:DI 45)) yp_xdr.c:182 654 {jump}
     (nil)
 -> 45)
(barrier 22 21 23)
(code_label 23 22 24 7 73 "" [1 uses])
(note 24 23 6 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 6 24 25 7 (set (reg:SI 87 [ D.9818 ])
        (const_int 1 [0x1])) yp_xdr.c:191 -1
     (nil))
(jump_insn 25 6 26 7 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
(barrier 26 25 27)
(code_label 27 26 28 8 74 "" [1 uses])
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (parallel [
            (set (reg:DI 95 [ D.9821 ])
                (plus:DI (reg/v/f:DI 93 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:185 -1
     (nil))
(insn 30 29 31 8 (set (reg:DI 4 si)
        (reg:DI 95 [ D.9821 ])) yp_xdr.c:185 -1
     (nil))
(insn 31 30 32 8 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ xdrs ])) yp_xdr.c:185 -1
     (nil))
(call_insn/j 32 31 33 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_ypresp_key_val") [flags 0x3]  <function_decl 0x2b81a1de41b0 xdr_ypresp_key_val>) [0 xdr_ypresp_key_val S1 A8])
            (const_int 0 [0]))) yp_xdr.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_ypresp_key_val") [flags 0x3]  <function_decl 0x2b81a1de41b0 xdr_ypresp_key_val>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 33 32 45)
(code_label 45 33 44 9 75 "" [1 uses])
(note 44 45 5 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 5 44 35 9 (set (reg:SI 87 [ D.9818 ])
        (const_int 0 [0])) yp_xdr.c:189 -1
     (nil))
(code_label 35 5 36 10 72 "" [2 uses])
(note 36 35 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 41 10 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.9818 ])) -1
     (nil))
(insn 41 37 42 10 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) yp_xdr.c:192 -1
     (nil))
(insn 42 41 0 10 (use (reg/i:SI 0 ax)) yp_xdr.c:192 -1
     (nil))

;; Function xdr_ypresp_xfr (xdr_ypresp_xfr, funcdef_no=61, decl_uid=9007, cgraph_uid=76, symbol_order=76)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:197 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:197 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:198 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:198 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:198 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9824 ])
        (reg:SI 0 ax)) yp_xdr.c:198 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9824 ])
            (const_int 0 [0]))) yp_xdr.c:198 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) yp_xdr.c:198 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 20)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93 [ D.9826 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:200 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9826 ])) yp_xdr.c:53 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:53 -1
     (nil))
(call_insn/j 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 18 17 20)
(code_label 20 18 21 5 84 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9824 ])) -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:201 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:201 -1
     (nil))

;; Function xdr_ypresp_maplist (*__GI_xdr_ypresp_maplist, funcdef_no=63, decl_uid=9013, cgraph_uid=79, symbol_order=79)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 25.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:216 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:216 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:46 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:46 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:46 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9834 ])
        (reg:SI 0 ax)) yp_xdr.c:46 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9834 ])
            (const_int 0 [0]))) yp_xdr.c:217 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) yp_xdr.c:217 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 22)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93 [ tp ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:220 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 2 cx)
        (symbol_ref:DI ("*__GI_xdr_ypmaplist") [flags 0x3]  <function_decl 0x2b81a1de45e8 xdr_ypmaplist>)) yp_xdr.c:221 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 1 dx)
        (const_int 16 [0x10])) yp_xdr.c:221 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93 [ tp ])) yp_xdr.c:221 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:221 -1
     (nil))
(call_insn/j 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_pointer") [flags 0x41]  <function_decl 0x2b81a1c1fe58 xdr_pointer>) [0 xdr_pointer S1 A8])
            (const_int 0 [0]))) yp_xdr.c:221 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_pointer") [flags 0x41]  <function_decl 0x2b81a1c1fe58 xdr_pointer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(barrier 20 19 22)
(code_label 22 20 23 5 88 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9834 ])) -1
     (nil))
(insn 28 24 29 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:222 -1
     (nil))
(insn 29 28 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:222 -1
     (nil))

;; Function xdr_yppush_status (*__GI_xdr_yppush_status, funcdef_no=83, decl_uid=9016, cgraph_uid=81, symbol_order=81)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:226 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:226 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) yp_xdr.c:243 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) yp_xdr.c:243 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:243 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_yppushresp_xfr (xdr_yppushresp_xfr, funcdef_no=65, decl_uid=9019, cgraph_uid=83, symbol_order=83)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 23.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:234 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:234 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:235 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:235 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:235 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.9844 ])
        (reg:SI 0 ax)) yp_xdr.c:235 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9844 ])
            (const_int 0 [0]))) yp_xdr.c:235 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) yp_xdr.c:235 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 20)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 93 [ D.9846 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:237 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9846 ])) yp_xdr.c:228 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:228 -1
     (nil))
(call_insn/j 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:228 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 18 17 20)
(code_label 20 18 21 5 93 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 26 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9844 ])) -1
     (nil))
(insn 26 22 27 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:238 -1
     (nil))
(insn 27 26 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:238 -1
     (nil))

;; Function xdr_ypbind_resptype (*__GI_xdr_ypbind_resptype, funcdef_no=66, decl_uid=9022, cgraph_uid=84, symbol_order=84)


;; Generating RTL for gimple basic block 2
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:242 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:242 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ objp ])) yp_xdr.c:243 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ xdrs ])) yp_xdr.c:243 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:243 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 10 9 0)

;; Function xdr_ypbind_binding (*__GI_xdr_ypbind_binding, funcdef_no=67, decl_uid=9025, cgraph_uid=86, symbol_order=86)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 25.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:249 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:249 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) yp_xdr.c:250 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ objp ])) yp_xdr.c:250 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:250 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_opaque") [flags 0x41]  <function_decl 0x2b81a1c1f6c0 xdr_opaque>) [0 xdr_opaque S1 A8])
            (const_int 0 [0]))) yp_xdr.c:250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_opaque") [flags 0x41]  <function_decl 0x2b81a1c1f6c0 xdr_opaque>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 87 [ D.9855 ])
        (reg:SI 0 ax)) yp_xdr.c:250 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9855 ])
            (const_int 0 [0]))) yp_xdr.c:250 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) yp_xdr.c:250 -1
     (int_list:REG_BR_PROB 6102 (nil))
 -> 22)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (parallel [
            (set (reg:DI 93 [ D.9857 ])
                (plus:DI (reg/v/f:DI 92 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:252 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) yp_xdr.c:252 -1
     (nil))
(insn 17 16 18 4 (set (reg:DI 4 si)
        (reg:DI 93 [ D.9857 ])) yp_xdr.c:252 -1
     (nil))
(insn 18 17 19 4 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ xdrs ])) yp_xdr.c:252 -1
     (nil))
(call_insn/j 19 18 20 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_opaque") [flags 0x41]  <function_decl 0x2b81a1c1f6c0 xdr_opaque>) [0 xdr_opaque S1 A8])
            (const_int 0 [0]))) yp_xdr.c:252 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_opaque") [flags 0x41]  <function_decl 0x2b81a1c1f6c0 xdr_opaque>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(barrier 20 19 22)
(code_label 22 20 23 5 98 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 28 5 (set (reg:SI 90 [ <retval> ])
        (reg:SI 87 [ D.9855 ])) -1
     (nil))
(insn 28 24 29 5 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) yp_xdr.c:253 -1
     (nil))
(insn 29 28 0 5 (use (reg/i:SI 0 ax)) yp_xdr.c:253 -1
     (nil))

;; Function xdr_ypbind_resp (*__GI_xdr_ypbind_resp, funcdef_no=68, decl_uid=9028, cgraph_uid=88, symbol_order=88)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6
Edge 3->6 redirected to 9
Purged edges from bb 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 9 failed.
Removing jump 41.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 93 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:258 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:258 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ objp ])) yp_xdr.c:243 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) yp_xdr.c:243 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>) [0 xdr_enum S1 A8])
            (const_int 0 [0]))) yp_xdr.c:243 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_enum") [flags 0x41]  <function_decl 0x2b81a1c1f438 xdr_enum>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 11 10 12 2 (set (reg:SI 87 [ D.9869 ])
        (reg:SI 0 ax)) yp_xdr.c:243 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.9869 ])
            (const_int 0 [0]))) yp_xdr.c:259 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) yp_xdr.c:259 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 38)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 95 [ D.9871 ])
        (mem:SI (reg/v/f:DI 94 [ objp ]) [10 objp_3(D)->ypbind_status+0 S4 A32])) yp_xdr.c:261 -1
     (nil))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.9871 ])
            (const_int 1 [0x1]))) yp_xdr.c:261 -1
     (nil))
(jump_insn 17 16 49 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) yp_xdr.c:261 -1
     (int_list:REG_BR_PROB 3333 (nil))
 -> 30)
(note 49 17 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 49 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.9871 ])
            (const_int 2 [0x2]))) yp_xdr.c:261 -1
     (nil))
(jump_insn 19 18 50 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) yp_xdr.c:261 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 22)
(note 50 19 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 20 50 21 6 (set (pc)
        (label_ref:DI 48)) yp_xdr.c:261 654 {jump}
     (nil)
 -> 48)
(barrier 21 20 22)
(code_label 22 21 23 7 104 "" [1 uses])
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (parallel [
            (set (reg:DI 96 [ D.9872 ])
                (plus:DI (reg/v/f:DI 94 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:264 -1
     (nil))
(insn 25 24 26 7 (set (reg:DI 4 si)
        (reg:DI 96 [ D.9872 ])) yp_xdr.c:264 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) yp_xdr.c:264 -1
     (nil))
(call_insn/j 27 26 28 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:264 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 28 27 30)
(code_label 30 28 31 8 103 "" [1 uses])
(note 31 30 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (parallel [
            (set (reg:DI 97 [ D.9873 ])
                (plus:DI (reg/v/f:DI 94 [ objp ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:266 -1
     (nil))
(insn 33 32 34 8 (set (reg:DI 4 si)
        (reg:DI 97 [ D.9873 ])) yp_xdr.c:266 -1
     (nil))
(insn 34 33 35 8 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ xdrs ])) yp_xdr.c:266 -1
     (nil))
(call_insn/j 35 34 36 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_ypbind_binding") [flags 0x3]  <function_decl 0x2b81a1de4a20 xdr_ypbind_binding>) [0 xdr_ypbind_binding S1 A8])
            (const_int 0 [0]))) yp_xdr.c:266 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_ypbind_binding") [flags 0x3]  <function_decl 0x2b81a1de4a20 xdr_ypbind_binding>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 36 35 48)
(code_label 48 36 47 9 105 "" [1 uses])
(note 47 48 5 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 5 47 38 9 (set (reg:SI 87 [ D.9869 ])
        (const_int 0 [0])) yp_xdr.c:268 -1
     (nil))
(code_label 38 5 39 10 102 "" [1 uses])
(note 39 38 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 44 10 (set (reg:SI 92 [ <retval> ])
        (reg:SI 87 [ D.9869 ])) -1
     (nil))
(insn 44 40 45 10 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) yp_xdr.c:269 -1
     (nil))
(insn 45 44 0 10 (use (reg/i:SI 0 ax)) yp_xdr.c:269 -1
     (nil))

;; Function xdr_ypbind_setdom (xdr_ypbind_setdom, funcdef_no=69, decl_uid=9031, cgraph_uid=90, symbol_order=90)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 7 failed.
Forwarding edge 2->4 to 7 failed.
Edge 5->4 redirected to 7
Removing jump 38.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 7 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 94 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:274 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ objp ])
        (reg:DI 4 si [ objp ])) yp_xdr.c:274 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:SI 1 dx)
        (const_int 1024 [0x400])) yp_xdr.c:60 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ objp ])) yp_xdr.c:60 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ xdrs ])) yp_xdr.c:60 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>) [0 xdr_string S1 A8])
            (const_int 0 [0]))) yp_xdr.c:60 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_string") [flags 0x41]  <function_decl 0x2b81a1c1f798 xdr_string>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 12 11 13 2 (set (reg:SI 92 [ D.9879 ])
        (reg:SI 0 ax)) yp_xdr.c:60 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ D.9879 ])
            (const_int 0 [0]))) yp_xdr.c:275 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) yp_xdr.c:275 -1
     (int_list:REG_BR_PROB 3898 (nil))
 -> 18)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 16 15 17 4 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
(barrier 17 16 18)
(code_label 18 17 19 5 111 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (parallel [
            (set (reg:DI 96 [ D.9878 ])
                (plus:DI (reg/v/f:DI 95 [ objp ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:277 -1
     (nil))
(insn 21 20 22 5 (set (reg:DI 4 si)
        (reg:DI 96 [ D.9878 ])) yp_xdr.c:277 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ xdrs ])) yp_xdr.c:277 -1
     (nil))
(call_insn 23 22 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_ypbind_binding") [flags 0x3]  <function_decl 0x2b81a1de4a20 xdr_ypbind_binding>) [0 xdr_ypbind_binding S1 A8])
            (const_int 0 [0]))) yp_xdr.c:277 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_ypbind_binding") [flags 0x3]  <function_decl 0x2b81a1de4a20 xdr_ypbind_binding>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 26 5 (set (reg:SI 90 [ D.9879 ])
        (reg:SI 0 ax)) yp_xdr.c:277 -1
     (nil))
(insn 26 24 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ D.9879 ])
            (const_int 0 [0]))) yp_xdr.c:277 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) yp_xdr.c:277 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 35)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (parallel [
            (set (reg:DI 97 [ D.9880 ])
                (plus:DI (reg/v/f:DI 95 [ objp ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:279 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 4 si)
        (reg:DI 97 [ D.9880 ])) yp_xdr.c:279 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ xdrs ])) yp_xdr.c:279 -1
     (nil))
(call_insn/j 32 31 33 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>) [0 xdr_u_int S1 A8])
            (const_int 0 [0]))) yp_xdr.c:279 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_u_int") [flags 0x41]  <function_decl 0x2b81a1c17438 xdr_u_int>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 33 32 35)
(code_label 35 33 36 7 112 "" [2 uses])
(note 36 35 5 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 5 36 37 7 (set (reg:SI 87 [ D.9876 ])
        (const_int 0 [0])) yp_xdr.c:276 -1
     (nil))
(insn 37 5 41 7 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.9876 ])) -1
     (nil))
(insn 41 37 42 7 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) yp_xdr.c:280 -1
     (nil))
(insn 42 41 0 7 (use (reg/i:SI 0 ax)) yp_xdr.c:280 -1
     (nil))

;; Function xdr_ypall (xdr_ypall, funcdef_no=70, decl_uid=9276, cgraph_uid=91, symbol_order=91)

Partition 2: size 1024 align 16
	val
Partition 1: size 1024 align 16
	key
Partition 0: size 40 align 16
	out
Partition 3: size 4 align 4
	more

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 72.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 102 [ xdrs ])
        (reg:DI 5 di [ xdrs ])) yp_xdr.c:284 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 103 [ incallback ])
        (reg:DI 4 si [ incallback ])) yp_xdr.c:284 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:291 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:DI (reg:DI 104) [0 MEM[(void *)&out]+0 S8 A128])
        (const_int 0 [0])) yp_xdr.c:291 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg:DI 104)
                (const_int 8 [0x8])) [0 MEM[(void *)&out]+8 S8 A64])
        (const_int 0 [0])) yp_xdr.c:291 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg:DI 104)
                (const_int 16 [0x10])) [0 MEM[(void *)&out]+16 S8 A128])
        (const_int 0 [0])) yp_xdr.c:291 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg:DI 104)
                (const_int 24 [0x18])) [0 MEM[(void *)&out]+24 S8 A64])
        (const_int 0 [0])) yp_xdr.c:291 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg:DI 104)
                (const_int 32 [0x20])) [0 MEM[(void *)&out]+32 S8 A128])
        (const_int 0 [0])) yp_xdr.c:291 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2048 [0xfffffffffffff800])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:292 -1
     (nil))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [1 out.key.keydat_val+0 S8 A128])
        (reg:DI 105)) yp_xdr.c:292 -1
     (nil))
(insn 17 16 18 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [3 out.key.keydat_len+0 S4 A64])
        (const_int 1024 [0x400])) yp_xdr.c:293 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:294 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [1 out.val.valdat_val+0 S8 A128])
        (reg:DI 106)) yp_xdr.c:294 -1
     (nil))
(insn 20 19 64 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [3 out.val.valdat_len+0 S4 A64])
        (const_int 1024 [0x400])) yp_xdr.c:295 -1
     (nil))
(code_label 64 20 21 4 124 "" [1 uses])
(note 21 64 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2100 [0xfffffffffffff7cc])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:301 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg:DI 107)) yp_xdr.c:301 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/v/f:DI 102 [ xdrs ])) yp_xdr.c:301 -1
     (nil))
(call_insn 25 24 26 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("xdr_bool") [flags 0x41]  <function_decl 0x2b81a1c1f360 xdr_bool>) [0 xdr_bool S1 A8])
            (const_int 0 [0]))) yp_xdr.c:301 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("xdr_bool") [flags 0x41]  <function_decl 0x2b81a1c1f360 xdr_bool>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 26 25 27 4 (set (reg:SI 88 [ D.9884 ])
        (reg:SI 0 ax)) yp_xdr.c:301 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.9884 ])
            (const_int 0 [0]))) yp_xdr.c:301 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) yp_xdr.c:301 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 67)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2100 [0xfffffffffffff7cc])) [3 more+0 S4 A32])
            (const_int 0 [0]))) yp_xdr.c:303 -1
     (nil))
(jump_insn 31 30 60 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) yp_xdr.c:303 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 35)
(code_label 60 31 32 6 123 "" [1 uses])
(note 32 60 6 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 6 32 33 6 (set (reg:SI 87 [ D.9883 ])
        (const_int 1 [0x1])) yp_xdr.c:304 -1
     (nil))
(jump_insn 33 6 34 6 (set (pc)
        (label_ref 69)) -1
     (nil)
 -> 69)
(barrier 34 33 35)
(code_label 35 34 36 7 121 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -2096 [0xfffffffffffff7d0])))
            (clobber (reg:CC 17 flags))
        ]) yp_xdr.c:307 -1
     (nil))
(insn 38 37 39 7 (set (reg:DI 4 si)
        (reg:DI 108)) yp_xdr.c:307 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 5 di)
        (reg/v/f:DI 102 [ xdrs ])) yp_xdr.c:307 -1
     (nil))
(call_insn 40 39 41 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_xdr_ypresp_key_val") [flags 0x3]  <function_decl 0x2b81a1de41b0 xdr_ypresp_key_val>) [0 xdr_ypresp_key_val S1 A8])
            (const_int 0 [0]))) yp_xdr.c:307 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_xdr_ypresp_key_val") [flags 0x3]  <function_decl 0x2b81a1de41b0 xdr_ypresp_key_val>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 41 40 42 7 (set (reg/v:SI 90 [ status ])
        (reg:SI 0 ax)) yp_xdr.c:307 -1
     (nil))
(insn 42 41 43 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ status ])
            (const_int 0 [0]))) yp_xdr.c:315 -1
     (nil))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) yp_xdr.c:315 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 67)
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:DI 109)
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ incallback ])
                (const_int 8 [0x8])) [1 incallback_16(D)->data+0 S8 A64])) yp_xdr.c:316 -1
     (nil))
(insn 46 45 47 8 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2088 [0xfffffffffffff7d8])) [3 out.val.valdat_len+0 S4 A64])) yp_xdr.c:316 -1
     (nil))
(insn 47 46 48 8 (set (reg:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2080 [0xfffffffffffff7e0])) [1 out.val.valdat_val+0 S8 A128])) yp_xdr.c:316 -1
     (nil))
(insn 48 47 49 8 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2072 [0xfffffffffffff7e8])) [3 out.key.keydat_len+0 S4 A64])) yp_xdr.c:316 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2064 [0xfffffffffffff7f0])) [1 out.key.keydat_val+0 S8 A128])) yp_xdr.c:316 -1
     (nil))
(insn 50 49 51 8 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -2096 [0xfffffffffffff7d0])) [6 out.stat+0 S4 A128])) yp_xdr.c:316 -1
     (nil))
(insn 51 50 52 8 (set (reg/f:DI 115)
        (mem/f:DI (reg/v/f:DI 103 [ incallback ]) [1 incallback_16(D)->foreach+0 S8 A64])) yp_xdr.c:316 -1
     (nil))
(insn 52 51 53 8 (set (reg:DI 38 r9)
        (reg:DI 109)) yp_xdr.c:316 -1
     (nil))
(insn 53 52 54 8 (set (reg:SI 37 r8)
        (reg:SI 110)) yp_xdr.c:316 -1
     (nil))
(insn 54 53 55 8 (set (reg:DI 2 cx)
        (reg:DI 111)) yp_xdr.c:316 -1
     (nil))
(insn 55 54 56 8 (set (reg:SI 1 dx)
        (reg:SI 112)) yp_xdr.c:316 -1
     (nil))
(insn 56 55 57 8 (set (reg:DI 4 si)
        (reg:DI 113)) yp_xdr.c:316 -1
     (nil))
(insn 57 56 58 8 (set (reg:SI 5 di)
        (reg:SI 114)) yp_xdr.c:316 -1
     (nil))
(call_insn 58 57 59 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 115) [0 *_17 S1 A8])
            (const_int 0 [0]))) yp_xdr.c:316 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 59 58 61 8 (set (reg:SI 100 [ D.9884 ])
        (reg:SI 0 ax)) yp_xdr.c:316 -1
     (nil))
(insn 61 59 62 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.9884 ])
            (const_int 0 [0]))) yp_xdr.c:316 -1
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) yp_xdr.c:316 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 60)
(note 63 62 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 65 63 66 9 (set (pc)
        (label_ref 64)) yp_xdr.c:323 -1
     (nil)
 -> 64)
(barrier 66 65 67)
(code_label 67 66 68 10 120 "" [2 uses])
(note 68 67 5 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 5 68 69 10 (set (reg:SI 87 [ D.9883 ])
        (const_int 0 [0])) yp_xdr.c:302 -1
     (nil))
(code_label 69 5 70 11 122 "" [1 uses])
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 75 11 (set (reg:SI 101 [ <retval> ])
        (reg:SI 87 [ D.9883 ])) -1
     (nil))
(insn 75 71 76 11 (set (reg/i:SI 0 ax)
        (reg:SI 101 [ <retval> ])) yp_xdr.c:324 -1
     (nil))
(insn 76 75 0 11 (use (reg/i:SI 0 ax)) yp_xdr.c:324 -1
     (nil))
