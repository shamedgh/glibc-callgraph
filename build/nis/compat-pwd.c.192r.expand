
;; Function give_pwd_free (give_pwd_free, funcdef_no=51, decl_uid=11493, cgraph_uid=51, symbol_order=62)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 92 [ pwd ])
        (reg:DI 5 di [ pwd ])) nss_compat/compat-pwd.c:117 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 92 [ pwd ]) [3 pwd_2(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:118 -1
     (nil))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:118 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 93)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ pwd ])
                (const_int 8 [0x8])) [3 pwd_2(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:119 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 93)) nss_compat/compat-pwd.c:119 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:119 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 94)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ pwd ])
                (const_int 24 [0x18])) [3 pwd_2(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:120 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 94)) nss_compat/compat-pwd.c:120 -1
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:120 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg:DI 95)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ pwd ])
                (const_int 32 [0x20])) [3 pwd_2(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:121 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 95)) nss_compat/compat-pwd.c:121 -1
     (nil))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:121 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 17 16 18 2 (set (reg:DI 96)
        (mem/f:DI (plus:DI (reg/v/f:DI 92 [ pwd ])
                (const_int 40 [0x28])) [3 pwd_2(D)->pw_shell+0 S8 A64])) nss_compat/compat-pwd.c:122 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg:DI 96)) nss_compat/compat-pwd.c:122 -1
     (nil))
(call_insn 19 18 20 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:122 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 2 (set (reg/f:DI 97)
        (reg/v/f:DI 92 [ pwd ])) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 98)
        (const_int 48 [0x30])) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 99)
        (const_int 0 [0])) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 23 22 24 2 (set (mem:DI (reg/f:DI 97) [0  S8 A8])
        (reg:DI 99)) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 24 23 25 2 (set (reg:DI 100)
        (zero_extend:DI (reg:SI 98))) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 101)
                (plus:DI (reg/f:DI 97)
                    (reg:DI 100)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg:DI 101)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 27 26 28 2 (set (mem:DI (plus:DI (reg/f:DI 102)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 99)) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg/f:DI 103)
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 103)
                (and:DI (reg/f:DI 103)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 30 29 31 2 (parallel [
            (set (reg/f:DI 97)
                (minus:DI (reg/f:DI 97)
                    (reg/f:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg:SI 98)
                (plus:SI (reg:SI 98)
                    (subreg:SI (reg/f:DI 97) 0)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:SI 98)
                (and:SI (reg:SI 98)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 33 32 34 2 (parallel [
            (set (reg:SI 104)
                (lshiftrt:SI (reg:SI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 105)
        (zero_extend:DI (reg:SI 104))) nss_compat/compat-pwd.c:124 -1
     (nil))
(insn 35 34 0 2 (parallel [
            (set (reg:DI 105)
                (const_int 0 [0]))
            (set (reg/f:DI 103)
                (plus:DI (ashift:DI (reg:DI 105)
                        (const_int 3 [0x3]))
                    (reg/f:DI 103)))
            (set (mem:BLK (reg/f:DI 103) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 99))
            (use (reg:DI 105))
        ]) nss_compat/compat-pwd.c:124 -1
     (nil))

;; Function internal_setpwent (internal_setpwent, funcdef_no=54, decl_uid=11520, cgraph_uid=54, symbol_order=65)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 7->15 redirected to 18
Edge 11->14 redirected to 19
Edge 12->14 redirected to 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 101 [ ent ])
        (reg:DI 5 di [ ent ])) nss_compat/compat-pwd.c:216 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 102 [ stayopen ])
        (reg:SI 4 si [ stayopen ])) nss_compat/compat-pwd.c:216 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 103 [ needent ])
        (reg:SI 1 dx [ needent ])) nss_compat/compat-pwd.c:216 -1
     (nil))
(note 5 4 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 5 14 2 (set (mem:QI (reg/v/f:DI 101 [ ent ]) [8 ent_6(D)->netgroup+0 S1 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:219 -1
     (nil))
(insn 14 13 15 2 (set (mem:QI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 1 [0x1])) [8 ent_6(D)->first+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:219 -1
     (nil))
(insn 15 14 16 2 (set (mem:QI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 2 [0x2])) [8 ent_6(D)->files+0 S1 A16])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:220 -1
     (nil))
(insn 16 15 17 2 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 4 [0x4])) [9 ent_6(D)->setent_status+0 S4 A32])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:221 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 87 [ D.12864 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 16 [0x10])) [3 ent_6(D)->blacklist.data+0 S8 A64])) nss_compat/compat-pwd.c:227 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12864 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:227 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) nss_compat/compat-pwd.c:227 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 27)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 24 [0x18])) [2 ent_6(D)->blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:229 -1
     (nil))
(insn 22 21 23 4 (set (mem:QI (reg/f:DI 87 [ D.12864 ]) [0 *_11+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:230 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 88 [ D.12864 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 16 [0x10])) [3 ent_6(D)->blacklist.data+0 S8 A64])) nss_compat/compat-pwd.c:231 -1
     (nil))
(insn 24 23 25 4 (set (mem:QI (plus:DI (reg/f:DI 88 [ D.12864 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_14 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:231 -1
     (nil))
(jump_insn 25 24 26 4 (set (pc)
        (label_ref 30)) -1
     (nil)
 -> 30)
(barrier 26 25 27)
(code_label 27 26 28 5 4 "" [1 uses])
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 5 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 24 [0x18])) [2 ent_6(D)->blacklist.current+0 S4 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:234 -1
     (nil))
(code_label 30 29 31 6 5 "" [1 uses])
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg/f:DI 89 [ D.12865 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 8 [0x8])) [3 ent_6(D)->stream+0 S8 A64])) nss_compat/compat-pwd.c:236 -1
     (nil))
(insn 33 32 34 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.12865 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:236 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) nss_compat/compat-pwd.c:236 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 58)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2ba24892e990 *.LC1>)) nss_compat/compat-pwd.c:238 -1
     (nil))
(insn 37 36 38 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2ba24892ea20 *.LC2>)) nss_compat/compat-pwd.c:238 -1
     (nil))
(call_insn 38 37 39 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ba248627288 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:238 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2ba248627288 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 39 38 40 7 (set (reg/f:DI 90 [ D.12865 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:238 -1
     (nil))
(insn 40 39 41 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 8 [0x8])) [3 ent_6(D)->stream+0 S8 A64])
        (reg/f:DI 90 [ D.12865 ])) nss_compat/compat-pwd.c:238 -1
     (nil))
(insn 41 40 42 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12865 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:240 -1
     (nil))
(jump_insn 42 41 43 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) nss_compat/compat-pwd.c:240 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 50)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 8 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2ba248500480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [19  S8 A8])) nss_compat/compat-pwd.c:241 -1
     (nil))
(insn 45 44 46 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (unspec:DI [
                            (const_int 0 [0])
                        ] UNSPEC_TP)
                    (reg:DI 104)) [2 errno+0 S4 A32])
            (const_int 11 [0xb]))) nss_compat/compat-pwd.c:241 -1
     (nil))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) nss_compat/compat-pwd.c:241 612 {*jcc_1}
     (int_list:REG_BR_PROB 2794 (nil))
 -> 95)
(note 47 46 10 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 10 47 48 9 (set (reg/v:SI 98 [ status ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:241 -1
     (nil))
(jump_insn 48 10 49 9 (set (pc)
        (label_ref 83)) -1
     (nil)
 -> 83)
(barrier 49 48 50)
(code_label 50 49 51 10 7 "" [1 uses])
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 10 (set (reg:SI 106)
        (mem:SI (reg/f:DI 90 [ D.12865 ]) [2 _19->_flags+0 S4 A64])) nss_compat/compat-pwd.c:278 -1
     (nil))
(insn 53 52 54 10 (parallel [
            (set (reg:SI 105 [ D.12866 ])
                (and:SI (reg:SI 106)
                    (const_int -32769 [0xffffffffffff7fff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:278 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 90 [ D.12865 ]) [2 _19->_flags+0 S4 A64])
            (const_int -32769 [0xffffffffffff7fff]))
        (nil)))
(insn 54 53 55 10 (parallel [
            (set (reg:SI 107)
                (ior:SI (reg:SI 105 [ D.12866 ])
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:278 -1
     (nil))
(insn 55 54 56 10 (set (mem:SI (reg/f:DI 90 [ D.12865 ]) [2 _19->_flags+0 S4 A64])
        (reg:SI 107)) nss_compat/compat-pwd.c:278 -1
     (nil))
(jump_insn 56 55 57 10 (set (pc)
        (label_ref 62)) nss_compat/compat-pwd.c:278 -1
     (nil)
 -> 62)
(barrier 57 56 58)
(code_label 58 57 59 11 6 "" [1 uses])
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 11 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.12865 ])) nss_compat/compat-pwd.c:282 -1
     (nil))
(call_insn 61 60 62 11 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x2ba24863f288 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:282 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x2ba24863f288 rewind>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 62 61 63 12 9 "" [1 uses])
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (parallel [
            (set (reg:DI 108 [ D.12867 ])
                (plus:DI (reg/v/f:DI 101 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:284 -1
     (nil))
(insn 65 64 66 12 (set (reg:DI 5 di)
        (reg:DI 108 [ D.12867 ])) nss_compat/compat-pwd.c:284 -1
     (nil))
(call_insn 66 65 67 12 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:284 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 67 66 68 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ needent ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:286 -1
     (nil))
(jump_insn 68 67 69 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) nss_compat/compat-pwd.c:286 612 {*jcc_1}
     (int_list:REG_BR_PROB 3760 (nil))
 -> 99)
(note 69 68 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 13 (set (reg/f:DI 96 [ D.12868 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_setpwent") [flags 0x2]  <var_decl 0x2ba2486c1750 nss_setpwent>) [3 nss_setpwent+0 S8 A64])) nss_compat/compat-pwd.c:286 -1
     (nil))
(insn 71 70 72 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.12868 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:286 -1
     (nil))
(jump_insn 72 71 73 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) nss_compat/compat-pwd.c:286 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 103)
(note 73 72 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 14 (set (reg:SI 5 di)
        (reg/v:SI 102 [ stayopen ])) nss_compat/compat-pwd.c:287 -1
     (nil))
(call_insn 75 74 76 14 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ D.12868 ]) [0 *_34 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:287 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 76 75 77 14 (set (reg:SI 97 [ D.12869 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:287 -1
     (nil))
(insn 77 76 7 14 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 4 [0x4])) [9 ent_6(D)->setent_status+0 S4 A32])
        (reg:SI 97 [ D.12869 ])) nss_compat/compat-pwd.c:287 -1
     (nil))
(insn 7 77 96 14 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:287 -1
     (nil))
(jump_insn 96 7 97 14 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
(barrier 97 96 99)
(code_label 99 97 98 15 12 "" [1 uses])
(note 98 99 8 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 8 98 100 15 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) -1
     (nil))
(jump_insn 100 8 101 15 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
(barrier 101 100 103)
(code_label 103 101 102 16 13 "" [1 uses])
(note 102 103 6 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 6 102 78 16 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) -1
     (nil))
(code_label 78 6 79 17 10 "" [3 uses])
(note 79 78 80 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 17 (set (reg:SI 100 [ <retval> ])
        (reg/v:SI 98 [ status ])) nss_compat/compat-pwd.c:289 -1
     (nil))
(jump_insn 81 80 82 17 (set (pc)
        (label_ref 90)) nss_compat/compat-pwd.c:289 -1
     (nil)
 -> 90)
(barrier 82 81 95)
(code_label 95 82 94 18 11 "" [1 uses])
(note 94 95 9 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 9 94 83 18 (set (reg/v:SI 98 [ status ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:241 -1
     (nil))
(code_label 83 9 84 19 8 "" [1 uses])
(note 84 83 85 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 19 (parallel [
            (set (reg:DI 110 [ D.12867 ])
                (plus:DI (reg/v/f:DI 101 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:284 -1
     (nil))
(insn 86 85 87 19 (set (reg:DI 5 di)
        (reg:DI 110 [ D.12867 ])) nss_compat/compat-pwd.c:284 -1
     (nil))
(call_insn 87 86 88 19 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:284 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 88 87 89 19 (set (pc)
        (label_ref 78)) nss_compat/compat-pwd.c:284 -1
     (nil)
 -> 78)
(barrier 89 88 90)
(code_label 90 89 93 20 3 "" [1 uses])
(note 93 90 91 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 91 93 92 20 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) nss_compat/compat-pwd.c:290 -1
     (nil))
(insn 92 91 0 20 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:290 -1
     (nil))

;; Function internal_endpwent (internal_endpwent, funcdef_no=56, decl_uid=11536, cgraph_uid=56, symbol_order=67)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 44.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 94 [ ent ])
        (reg:DI 5 di [ ent ])) nss_compat/compat-pwd.c:313 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.12874 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 8 [0x8])) [3 ent_5(D)->stream+0 S8 A64])) nss_compat/compat-pwd.c:314 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12874 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:314 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) nss_compat/compat-pwd.c:314 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 13)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12874 ])) nss_compat/compat-pwd.c:316 -1
     (nil))
(call_insn 11 10 12 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2ba2485d8e58 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:316 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2ba2485d8e58 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 4 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 8 [0x8])) [3 ent_5(D)->stream+0 S8 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:317 -1
     (nil))
(code_label 13 12 14 5 22 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 94 [ ent ]) [8 ent_5(D)->netgroup+0 S1 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:320 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) nss_compat/compat-pwd.c:320 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 21)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (parallel [
            (set (reg:DI 95 [ D.12876 ])
                (plus:DI (reg/v/f:DI 94 [ ent ])
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:321 -1
     (nil))
(insn 19 18 20 6 (set (reg:DI 5 di)
        (reg:DI 95 [ D.12876 ])) nss_compat/compat-pwd.c:321 -1
     (nil))
(call_insn 20 19 21 6 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:321 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 21 20 22 7 23 "" [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (mem:QI (reg/v/f:DI 94 [ ent ]) [8 ent_5(D)->netgroup+0 S1 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:323 -1
     (nil))
(insn 24 23 25 7 (set (mem:QI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 1 [0x1])) [8 ent_5(D)->first+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:323 -1
     (nil))
(insn 25 24 26 7 (set (reg/f:DI 90 [ D.12877 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 16 [0x10])) [3 ent_5(D)->blacklist.data+0 S8 A64])) nss_compat/compat-pwd.c:325 -1
     (nil))
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12877 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:325 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) nss_compat/compat-pwd.c:325 -1
     (int_list:REG_BR_PROB 2163 (nil))
 -> 35)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (mem:SI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 24 [0x18])) [2 ent_5(D)->blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:327 -1
     (nil))
(insn 30 29 31 8 (set (mem:QI (reg/f:DI 90 [ D.12877 ]) [0 *_14+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:328 -1
     (nil))
(insn 31 30 32 8 (set (reg/f:DI 91 [ D.12877 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 16 [0x10])) [3 ent_5(D)->blacklist.data+0 S8 A64])) nss_compat/compat-pwd.c:329 -1
     (nil))
(insn 32 31 33 8 (set (mem:QI (plus:DI (reg/f:DI 91 [ D.12877 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_17 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:329 -1
     (nil))
(jump_insn 33 32 34 8 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
(barrier 34 33 35)
(code_label 35 34 36 9 24 "" [1 uses])
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (set (mem:SI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 24 [0x18])) [2 ent_5(D)->blacklist.current+0 S4 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:332 -1
     (nil))
(code_label 38 37 39 10 25 "" [1 uses])
(note 39 38 40 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 10 (parallel [
            (set (reg:DI 96 [ D.12878 ])
                (plus:DI (reg/v/f:DI 94 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:334 -1
     (nil))
(insn 41 40 42 10 (set (reg:DI 5 di)
        (reg:DI 96 [ D.12878 ])) nss_compat/compat-pwd.c:334 -1
     (nil))
(call_insn 42 41 43 10 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:334 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 47 10 (set (reg:SI 93 [ <retval> ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:336 -1
     (nil))
(insn 47 43 48 10 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) nss_compat/compat-pwd.c:337 -1
     (nil))
(insn 48 47 0 10 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:337 -1
     (nil))

;; Function pwd_need_buflen (pwd_need_buflen, funcdef_no=52, decl_uid=11496, cgraph_uid=52, symbol_order=63)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 2->4 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 59.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 100 [ pwd ])
        (reg:DI 5 di [ pwd ])) nss_compat/compat-pwd.c:129 -1
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 88 [ D.12881 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ pwd ])
                (const_int 8 [0x8])) [3 pwd_6(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:132 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.12881 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:132 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) nss_compat/compat-pwd.c:132 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 68)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.12881 ])) nss_compat/compat-pwd.c:133 -1
     (nil))
(call_insn/i 12 11 13 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:133 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 4 (set (reg:DI 102)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:133 -1
     (nil))
(insn 14 13 15 4 (set (reg:DI 103)
        (reg:DI 102)) nss_compat/compat-pwd.c:133 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 89 [ D.12882 ])
        (reg:DI 103)) nss_compat/compat-pwd.c:133 -1
     (nil))
(insn 16 15 65 4 (parallel [
            (set (reg/v:DI 87 [ len ])
                (plus:DI (reg:DI 89 [ D.12882 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:133 -1
     (nil))
(jump_insn 65 16 66 4 (set (pc)
        (label_ref 17)) -1
     (nil)
 -> 17)
(barrier 66 65 68)
(code_label 68 66 67 5 37 "" [1 uses])
(note 67 68 4 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 4 67 17 5 (set (reg/v:DI 87 [ len ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:130 -1
     (nil))
(code_label 17 4 18 6 33 "" [1 uses])
(note 18 17 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 6 (set (reg/f:DI 90 [ D.12881 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ pwd ])
                (const_int 24 [0x18])) [3 pwd_6(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:135 -1
     (nil))
(insn 20 19 21 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12881 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:135 -1
     (nil))
(jump_insn 21 20 22 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) nss_compat/compat-pwd.c:135 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 30)
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.12881 ])) nss_compat/compat-pwd.c:136 -1
     (nil))
(call_insn/i 24 23 25 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 7 (set (reg:DI 105)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:136 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 106)
        (reg:DI 105)) nss_compat/compat-pwd.c:136 -1
     (nil))
(insn 27 26 28 7 (set (reg:DI 91 [ D.12882 ])
        (reg:DI 106)) nss_compat/compat-pwd.c:136 -1
     (nil))
(insn 28 27 29 7 (parallel [
            (set (reg:DI 94 [ D.12882 ])
                (plus:DI (reg/v:DI 87 [ len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg/v:DI 87 [ len ])
                (plus:DI (reg:DI 91 [ D.12882 ])
                    (reg:DI 94 [ D.12882 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:136 -1
     (nil))
(code_label 30 29 31 8 34 "" [1 uses])
(note 31 30 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (set (reg/f:DI 92 [ D.12881 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ pwd ])
                (const_int 32 [0x20])) [3 pwd_6(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:138 -1
     (nil))
(insn 33 32 34 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.12881 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:138 -1
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) nss_compat/compat-pwd.c:138 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 43)
(note 35 34 36 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 9 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.12881 ])) nss_compat/compat-pwd.c:139 -1
     (nil))
(call_insn/i 37 36 38 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:139 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 9 (set (reg:DI 108)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:139 -1
     (nil))
(insn 39 38 40 9 (set (reg:DI 109)
        (reg:DI 108)) nss_compat/compat-pwd.c:139 -1
     (nil))
(insn 40 39 41 9 (set (reg:DI 93 [ D.12882 ])
        (reg:DI 109)) nss_compat/compat-pwd.c:139 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:DI 97 [ D.12882 ])
                (plus:DI (reg/v:DI 87 [ len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg/v:DI 87 [ len ])
                (plus:DI (reg:DI 93 [ D.12882 ])
                    (reg:DI 97 [ D.12882 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:139 -1
     (nil))
(code_label 43 42 44 10 35 "" [1 uses])
(note 44 43 45 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 10 (set (reg/f:DI 95 [ D.12881 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [ pwd ])
                (const_int 40 [0x28])) [3 pwd_6(D)->pw_shell+0 S8 A64])) nss_compat/compat-pwd.c:141 -1
     (nil))
(insn 46 45 47 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.12881 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:141 -1
     (nil))
(jump_insn 47 46 48 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nss_compat/compat-pwd.c:141 -1
     (int_list:REG_BR_PROB 1014 (nil))
 -> 56)
(note 48 47 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 11 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.12881 ])) nss_compat/compat-pwd.c:142 -1
     (nil))
(call_insn/i 50 49 51 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:142 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 51 50 52 11 (set (reg:DI 111)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:142 -1
     (nil))
(insn 52 51 53 11 (set (reg:DI 112)
        (reg:DI 111)) nss_compat/compat-pwd.c:142 -1
     (nil))
(insn 53 52 54 11 (set (reg:DI 96 [ D.12882 ])
        (reg:DI 112)) nss_compat/compat-pwd.c:142 -1
     (nil))
(insn 54 53 55 11 (parallel [
            (set (reg:DI 98 [ D.12882 ])
                (plus:DI (reg/v:DI 87 [ len ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 55 54 56 11 (parallel [
            (set (reg/v:DI 87 [ len ])
                (plus:DI (reg:DI 96 [ D.12882 ])
                    (reg:DI 98 [ D.12882 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:142 -1
     (nil))
(code_label 56 55 57 12 36 "" [1 uses])
(note 57 56 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 12 (set (reg:DI 99 [ <retval> ])
        (reg/v:DI 87 [ len ])) nss_compat/compat-pwd.c:144 -1
     (nil))
(insn 62 58 63 12 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ <retval> ])) nss_compat/compat-pwd.c:145 -1
     (nil))
(insn 63 62 0 12 (use (reg/i:DI 0 ax)) nss_compat/compat-pwd.c:145 -1
     (nil))

;; Function init_nss_interface (init_nss_interface, funcdef_no=50, decl_uid=11490, cgraph_uid=50, symbol_order=61)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>)) nss_compat/compat-pwd.c:105 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2ba248962480 *.LC6>)) nss_compat/compat-pwd.c:105 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:105 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2ba248962510 *.LC7>)) nss_compat/compat-pwd.c:105 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_database_lookup") [flags 0x41]  <function_decl 0x2ba2486fcca8 __nss_database_lookup>) [0 __nss_database_lookup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_database_lookup") [flags 0x41]  <function_decl 0x2ba2486fcca8 __nss_database_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.12885 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:105 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 87 [ D.12885 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:105 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 46)
            (pc))) nss_compat/compat-pwd.c:105 612 {*jcc_1}
     (int_list:REG_BR_PROB 3666 (nil))
 -> 46)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 103)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-pwd.c:107 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2ba2489625a0 *.LC8>)) nss_compat/compat-pwd.c:107 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg:DI 103)) nss_compat/compat-pwd.c:107 -1
     (nil))
(call_insn 17 16 18 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:107 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 4 (set (reg/f:DI 89 [ D.12887 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:107 -1
     (nil))
(insn 19 18 20 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_setpwent") [flags 0x2]  <var_decl 0x2ba2486c1750 nss_setpwent>) [3 nss_setpwent+0 S8 A64])
        (reg/f:DI 89 [ D.12887 ])) nss_compat/compat-pwd.c:107 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 104)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-pwd.c:108 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2ba248962630 *.LC9>)) nss_compat/compat-pwd.c:108 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 104)) nss_compat/compat-pwd.c:108 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg/f:DI 92 [ D.12887 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:108 -1
     (nil))
(insn 25 24 26 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_getpwnam_r") [flags 0x2]  <var_decl 0x2ba2486c17e0 nss_getpwnam_r>) [3 nss_getpwnam_r+0 S8 A64])
        (reg/f:DI 92 [ D.12887 ])) nss_compat/compat-pwd.c:108 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 105)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-pwd.c:109 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2ba2489626c0 *.LC10>)) nss_compat/compat-pwd.c:109 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 105)) nss_compat/compat-pwd.c:109 -1
     (nil))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 4 (set (reg/f:DI 95 [ D.12887 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:109 -1
     (nil))
(insn 31 30 32 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_getpwuid_r") [flags 0x2]  <var_decl 0x2ba2486c1870 nss_getpwuid_r>) [3 nss_getpwuid_r+0 S8 A64])
        (reg/f:DI 95 [ D.12887 ])) nss_compat/compat-pwd.c:109 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 106)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-pwd.c:110 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2ba248962750 *.LC11>)) nss_compat/compat-pwd.c:110 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg:DI 106)) nss_compat/compat-pwd.c:110 -1
     (nil))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 36 35 37 4 (set (reg/f:DI 98 [ D.12887 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:110 -1
     (nil))
(insn 37 36 38 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_getpwent_r") [flags 0x2]  <var_decl 0x2ba2486c1900 nss_getpwent_r>) [3 nss_getpwent_r+0 S8 A64])
        (reg/f:DI 98 [ D.12887 ])) nss_compat/compat-pwd.c:110 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 107)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-pwd.c:111 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x2ba2489627e0 *.LC12>)) nss_compat/compat-pwd.c:111 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg:DI 107)) nss_compat/compat-pwd.c:111 -1
     (nil))
(call_insn 41 40 42 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:111 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2ba24870a0d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 42 41 43 4 (set (reg/f:DI 101 [ D.12887 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:111 -1
     (nil))
(insn 43 42 46 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_endpwent") [flags 0x2]  <var_decl 0x2ba2486c1990 nss_endpwent>) [3 nss_endpwent+0 S8 A64])
        (reg/f:DI 101 [ D.12887 ])) nss_compat/compat-pwd.c:111 -1
     (nil))
(code_label 46 43 47 6 48 "" [1 uses])
(note 47 46 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function in_blacklist.isra.1 (in_blacklist.isra.1, funcdef_no=72, decl_uid=12665, cgraph_uid=1, symbol_order=115)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 45.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 98 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-pwd.c:1167 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 99 [ namelen ])
        (reg:SI 4 si [ namelen ])) nss_compat/compat-pwd.c:1167 -1
     (nil))
(insn 4 3 5 2 (set (reg/f:DI 100 [ ISRA.64 ])
        (reg:DI 1 dx [ ISRA.64 ])) nss_compat/compat-pwd.c:1167 -1
     (nil))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (set (reg/f:DI 87 [ D.12904 ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1168 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 101 [ D.12905 ])
                (plus:SI (reg/v:SI 99 [ namelen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 102 [ D.12906 ])
        (sign_extend:DI (reg:SI 101 [ D.12905 ]))) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 102 [ D.12906 ])
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 106)
                (udiv:DI (reg:DI 104)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 107)
                (umod:DI (reg:DI 104)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 106)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 109)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 110)
                (plus:DI (reg:DI 109)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 90 [ buf.23 ])
        (reg/f:DI 110)) nss_compat/compat-pwd.c:1169 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 91 [ D.12907 ])
        (mem/f:DI (reg/f:DI 100 [ ISRA.64 ]) [3 *ISRA.64_24(D)+0 S8 A64])) nss_compat/compat-pwd.c:1172 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.12907 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1172 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) nss_compat/compat-pwd.c:1172 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 54)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (mem/j:QI (reg/f:DI 90 [ buf.23 ]) [0 MEM[(char[0:D.12018] *)buf.23_5]+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:1175 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 90 [ buf.23 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1176 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ name ])) nss_compat/compat-pwd.c:1176 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 111)) nss_compat/compat-pwd.c:1176 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2ba24813b6c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2ba24813b6c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 4 (set (reg:DI 112)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1176 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 113)
        (reg:DI 112)) nss_compat/compat-pwd.c:1176 -1
     (nil))
(insn 31 30 32 4 (set (reg/v/f:DI 93 [ cp ])
        (reg:DI 113)) nss_compat/compat-pwd.c:1176 -1
     (nil))
(insn 32 31 33 4 (set (mem:QI (reg/v/f:DI 93 [ cp ]) [0 *cp_10+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:1177 -1
     (nil))
(insn 33 32 34 4 (set (mem:QI (plus:DI (reg/v/f:DI 93 [ cp ])
                (const_int 1 [0x1])) [0 MEM[(char *)cp_10 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1178 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/f:DI 90 [ buf.23 ])) nss_compat/compat-pwd.c:1179 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.12907 ])) nss_compat/compat-pwd.c:1179 -1
     (nil))
(call_insn/i 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strstr") [flags 0x41]  <function_decl 0x2ba248142798 strstr>) [0 __builtin_strstr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1179 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strstr") [flags 0x41]  <function_decl 0x2ba248142798 strstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 94 [ D.12907 ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1179 -1
     (nil))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.12907 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1179 -1
     (nil))
(insn 39 38 40 4 (set (reg:QI 115)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1179 -1
     (nil))
(insn 40 39 41 4 (set (reg:SI 114 [ D.12908 ])
        (zero_extend:SI (reg:QI 115))) nss_compat/compat-pwd.c:1179 -1
     (nil))
(insn 41 40 51 4 (set (reg:SI 96 [ D.12905 ])
        (reg:SI 114 [ D.12908 ])) nss_compat/compat-pwd.c:1179 -1
     (nil))
(jump_insn 51 41 52 4 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 52 51 54)
(code_label 54 52 53 5 53 "" [1 uses])
(note 53 54 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 53 42 5 (set (reg:SI 96 [ D.12905 ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1173 -1
     (nil))
(code_label 42 6 43 6 52 "" [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 48 6 (set (reg:SI 97 [ <retval> ])
        (reg:SI 96 [ D.12905 ])) -1
     (nil))
(insn 48 44 49 6 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) nss_compat/compat-pwd.c:1180 -1
     (nil))
(insn 49 48 0 6 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:1180 -1
     (nil))

;; Function copy_pwd_changes.isra.2 (copy_pwd_changes.isra.2, funcdef_no=73, decl_uid=12687, cgraph_uid=2, symbol_order=116)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 27->35 redirected to 36
Edge 28->35 redirected to 36
Redirecting jump 218 from 35 to 36.
deleting block 35


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 128 [ dest ])
        (reg:DI 5 di [ dest ])) nss_compat/compat-pwd.c:148 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 129 [ src ])
        (reg:DI 4 si [ src ])) nss_compat/compat-pwd.c:148 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 130 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-pwd.c:148 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 8 [0x8])) [3 src_1(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:151 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:151 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) nss_compat/compat-pwd.c:151 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 71)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 87 [ D.12920 ]) [0 MEM[(const char *)_2]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:151 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) nss_compat/compat-pwd.c:151 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 71)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 130 [ buffer ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:153 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) nss_compat/compat-pwd.c:153 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 25)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12920 ])) nss_compat/compat-pwd.c:154 -1
     (nil))
(call_insn 19 18 20 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:154 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 6 (set (reg/f:DI 131)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:154 -1
     (expr_list:REG_NOALIAS (reg/f:DI 131)
        (nil)))
(insn 21 20 22 6 (set (reg/f:DI 89 [ D.12920 ])
        (reg/f:DI 131)) nss_compat/compat-pwd.c:154 -1
     (nil))
(insn 22 21 23 6 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->pw_passwd+0 S8 A64])
        (reg/f:DI 89 [ D.12920 ])) nss_compat/compat-pwd.c:154 -1
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (label_ref 71)) nss_compat/compat-pwd.c:154 -1
     (nil)
 -> 71)
(barrier 24 23 25)
(code_label 25 24 26 7 59 "" [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:DI 90 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:155 -1
     (nil))
(insn 28 27 29 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:155 -1
     (nil))
(jump_insn 29 28 30 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nss_compat/compat-pwd.c:155 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 56)
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.12920 ])) nss_compat/compat-pwd.c:156 -1
     (nil))
(call_insn/i 32 31 33 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:156 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 8 (set (reg:DI 133)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 34 33 35 8 (set (reg:DI 134)
        (reg:DI 133)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 35 34 36 8 (set (reg:DI 91 [ D.12922 ])
        (reg:DI 134)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 36 35 37 8 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12920 ])) nss_compat/compat-pwd.c:156 -1
     (nil))
(call_insn/i 37 36 38 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:156 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 8 (set (reg:DI 136)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 39 38 40 8 (set (reg:DI 137)
        (reg:DI 136)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 40 39 41 8 (set (reg:DI 92 [ D.12922 ])
        (reg:DI 137)) nss_compat/compat-pwd.c:156 -1
     (nil))
(insn 41 40 42 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.12922 ])
            (reg:DI 92 [ D.12922 ]))) nss_compat/compat-pwd.c:155 -1
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nss_compat/compat-pwd.c:155 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 56)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (parallel [
            (set (reg:DI 138 [ D.12922 ])
                (plus:DI (reg:DI 92 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 139)
        (reg/f:DI 90 [ D.12920 ])) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 140)
        (reg/f:DI 87 [ D.12920 ])) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 141)
        (reg:DI 138 [ D.12922 ])) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 1 dx)
        (reg:DI 141)) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 4 si)
        (reg:DI 140)) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 5 di)
        (reg:DI 139)) nss_compat/compat-pwd.c:157 -1
     (nil))
(call_insn 51 50 52 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:157 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 52 51 53 9 (set (reg:DI 142)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:157 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 143)
        (reg:DI 142)) nss_compat/compat-pwd.c:157 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (label_ref 71)) nss_compat/compat-pwd.c:157 -1
     (nil)
 -> 71)
(barrier 55 54 56)
(code_label 56 55 57 10 60 "" [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->pw_passwd+0 S8 A64])
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:160 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 144)
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 8 [0x8])) [3 src_1(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:161 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 4 si)
        (reg:DI 144)) nss_compat/compat-pwd.c:161 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:161 -1
     (nil))
(call_insn 62 61 63 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:161 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 63 62 64 10 (set (reg:DI 146)
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->pw_passwd+0 S8 A64])) nss_compat/compat-pwd.c:162 -1
     (nil))
(insn 64 63 65 10 (set (reg:DI 5 di)
        (reg:DI 146)) nss_compat/compat-pwd.c:162 -1
     (nil))
(call_insn/i 65 64 66 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:162 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 10 (set (reg:DI 147)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:162 -1
     (nil))
(insn 67 66 68 10 (set (reg:DI 148)
        (reg:DI 147)) nss_compat/compat-pwd.c:162 -1
     (nil))
(insn 68 67 69 10 (set (reg:DI 95 [ D.12922 ])
        (reg:DI 148)) nss_compat/compat-pwd.c:162 -1
     (nil))
(insn 69 68 70 10 (parallel [
            (set (reg:DI 149 [ D.12923 ])
                (plus:DI (reg:DI 95 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:162 -1
     (nil))
(insn 70 69 71 10 (parallel [
            (set (reg/v/f:DI 130 [ buffer ])
                (plus:DI (reg/v/f:DI 130 [ buffer ])
                    (reg:DI 149 [ D.12923 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:162 -1
     (nil))
(code_label 71 70 72 11 58 "" [4 uses])
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 11 (set (reg/f:DI 97 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 24 [0x18])) [3 src_1(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:167 -1
     (nil))
(insn 74 73 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:167 -1
     (nil))
(jump_insn 75 74 76 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-pwd.c:167 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 136)
(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 97 [ D.12920 ]) [0 MEM[(const char *)_15]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:167 -1
     (nil))
(jump_insn 78 77 79 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-pwd.c:167 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 136)
(note 79 78 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 130 [ buffer ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:169 -1
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) nss_compat/compat-pwd.c:169 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 90)
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.12920 ])) nss_compat/compat-pwd.c:170 -1
     (nil))
(call_insn 84 83 85 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:170 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 85 84 86 14 (set (reg/f:DI 150)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:170 -1
     (expr_list:REG_NOALIAS (reg/f:DI 150)
        (nil)))
(insn 86 85 87 14 (set (reg/f:DI 99 [ D.12920 ])
        (reg/f:DI 150)) nss_compat/compat-pwd.c:170 -1
     (nil))
(insn 87 86 88 14 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 24 [0x18])) [3 dest_6(D)->pw_gecos+0 S8 A64])
        (reg/f:DI 99 [ D.12920 ])) nss_compat/compat-pwd.c:170 -1
     (nil))
(jump_insn 88 87 89 14 (set (pc)
        (label_ref 136)) nss_compat/compat-pwd.c:170 -1
     (nil)
 -> 136)
(barrier 89 88 90)
(code_label 90 89 91 15 62 "" [1 uses])
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 15 (set (reg/f:DI 100 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 24 [0x18])) [3 dest_6(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:171 -1
     (nil))
(insn 93 92 94 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 100 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:171 -1
     (nil))
(jump_insn 94 93 95 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) nss_compat/compat-pwd.c:171 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 121)
(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 16 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.12920 ])) nss_compat/compat-pwd.c:172 -1
     (nil))
(call_insn/i 97 96 98 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 16 (set (reg:DI 152)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 99 98 100 16 (set (reg:DI 153)
        (reg:DI 152)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 100 99 101 16 (set (reg:DI 101 [ D.12922 ])
        (reg:DI 153)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 101 100 102 16 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.12920 ])) nss_compat/compat-pwd.c:172 -1
     (nil))
(call_insn/i 102 101 103 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:172 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 103 102 104 16 (set (reg:DI 155)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 104 103 105 16 (set (reg:DI 156)
        (reg:DI 155)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 105 104 106 16 (set (reg:DI 102 [ D.12922 ])
        (reg:DI 156)) nss_compat/compat-pwd.c:172 -1
     (nil))
(insn 106 105 107 16 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 101 [ D.12922 ])
            (reg:DI 102 [ D.12922 ]))) nss_compat/compat-pwd.c:171 -1
     (nil))
(jump_insn 107 106 108 16 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) nss_compat/compat-pwd.c:171 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 121)
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 17 (parallel [
            (set (reg:DI 157 [ D.12922 ])
                (plus:DI (reg:DI 102 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 110 109 111 17 (set (reg:DI 158)
        (reg/f:DI 100 [ D.12920 ])) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 111 110 112 17 (set (reg:DI 159)
        (reg/f:DI 97 [ D.12920 ])) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 112 111 113 17 (set (reg:DI 160)
        (reg:DI 157 [ D.12922 ])) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 113 112 114 17 (set (reg:DI 1 dx)
        (reg:DI 160)) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 114 113 115 17 (set (reg:DI 4 si)
        (reg:DI 159)) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 115 114 116 17 (set (reg:DI 5 di)
        (reg:DI 158)) nss_compat/compat-pwd.c:173 -1
     (nil))
(call_insn 116 115 117 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:173 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 117 116 118 17 (set (reg:DI 161)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:173 -1
     (nil))
(insn 118 117 119 17 (set (reg:DI 162)
        (reg:DI 161)) nss_compat/compat-pwd.c:173 -1
     (nil))
(jump_insn 119 118 120 17 (set (pc)
        (label_ref 136)) nss_compat/compat-pwd.c:173 -1
     (nil)
 -> 136)
(barrier 120 119 121)
(code_label 121 120 122 18 63 "" [2 uses])
(note 122 121 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 24 [0x18])) [3 dest_6(D)->pw_gecos+0 S8 A64])
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:176 -1
     (nil))
(insn 124 123 125 18 (set (reg:DI 163)
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 24 [0x18])) [3 src_1(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:177 -1
     (nil))
(insn 125 124 126 18 (set (reg:DI 4 si)
        (reg:DI 163)) nss_compat/compat-pwd.c:177 -1
     (nil))
(insn 126 125 127 18 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:177 -1
     (nil))
(call_insn 127 126 128 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:177 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 128 127 129 18 (set (reg:DI 165)
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 24 [0x18])) [3 dest_6(D)->pw_gecos+0 S8 A64])) nss_compat/compat-pwd.c:178 -1
     (nil))
(insn 129 128 130 18 (set (reg:DI 5 di)
        (reg:DI 165)) nss_compat/compat-pwd.c:178 -1
     (nil))
(call_insn/i 130 129 131 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:178 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 131 130 132 18 (set (reg:DI 166)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:178 -1
     (nil))
(insn 132 131 133 18 (set (reg:DI 167)
        (reg:DI 166)) nss_compat/compat-pwd.c:178 -1
     (nil))
(insn 133 132 134 18 (set (reg:DI 105 [ D.12922 ])
        (reg:DI 167)) nss_compat/compat-pwd.c:178 -1
     (nil))
(insn 134 133 135 18 (parallel [
            (set (reg:DI 168 [ D.12923 ])
                (plus:DI (reg:DI 105 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:178 -1
     (nil))
(insn 135 134 136 18 (parallel [
            (set (reg/v/f:DI 130 [ buffer ])
                (plus:DI (reg/v/f:DI 130 [ buffer ])
                    (reg:DI 168 [ D.12923 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:178 -1
     (nil))
(code_label 136 135 137 19 61 "" [4 uses])
(note 137 136 138 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 19 (set (reg/f:DI 107 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 32 [0x20])) [3 src_1(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:182 -1
     (nil))
(insn 139 138 140 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 107 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:182 -1
     (nil))
(jump_insn 140 139 141 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) nss_compat/compat-pwd.c:182 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 201)
(note 141 140 142 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 107 [ D.12920 ]) [0 MEM[(const char *)_27]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:182 -1
     (nil))
(jump_insn 143 142 144 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) nss_compat/compat-pwd.c:182 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 201)
(note 144 143 145 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 130 [ buffer ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:184 -1
     (nil))
(jump_insn 146 145 147 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) nss_compat/compat-pwd.c:184 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 155)
(note 147 146 148 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 22 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.12920 ])) nss_compat/compat-pwd.c:185 -1
     (nil))
(call_insn 149 148 150 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:185 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 150 149 151 22 (set (reg/f:DI 169)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:185 -1
     (expr_list:REG_NOALIAS (reg/f:DI 169)
        (nil)))
(insn 151 150 152 22 (set (reg/f:DI 109 [ D.12920 ])
        (reg/f:DI 169)) nss_compat/compat-pwd.c:185 -1
     (nil))
(insn 152 151 153 22 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 32 [0x20])) [3 dest_6(D)->pw_dir+0 S8 A64])
        (reg/f:DI 109 [ D.12920 ])) nss_compat/compat-pwd.c:185 -1
     (nil))
(jump_insn 153 152 154 22 (set (pc)
        (label_ref 201)) nss_compat/compat-pwd.c:185 -1
     (nil)
 -> 201)
(barrier 154 153 155)
(code_label 155 154 156 23 65 "" [1 uses])
(note 156 155 157 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 23 (set (reg/f:DI 110 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 32 [0x20])) [3 dest_6(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 158 157 159 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 110 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:186 -1
     (nil))
(jump_insn 159 158 160 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) nss_compat/compat-pwd.c:186 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 186)
(note 160 159 161 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 24 (set (reg:DI 5 di)
        (reg/f:DI 110 [ D.12920 ])) nss_compat/compat-pwd.c:186 -1
     (nil))
(call_insn/i 162 161 163 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:186 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 163 162 164 24 (set (reg:DI 171)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 164 163 165 24 (set (reg:DI 172)
        (reg:DI 171)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 165 164 166 24 (set (reg:DI 111 [ D.12922 ])
        (reg:DI 172)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 166 165 167 24 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.12920 ])) nss_compat/compat-pwd.c:186 -1
     (nil))
(call_insn/i 167 166 168 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:186 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 168 167 169 24 (set (reg:DI 174)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 169 168 170 24 (set (reg:DI 175)
        (reg:DI 174)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 170 169 171 24 (set (reg:DI 112 [ D.12922 ])
        (reg:DI 175)) nss_compat/compat-pwd.c:186 -1
     (nil))
(insn 171 170 172 24 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 111 [ D.12922 ])
            (reg:DI 112 [ D.12922 ]))) nss_compat/compat-pwd.c:186 -1
     (nil))
(jump_insn 172 171 173 24 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) nss_compat/compat-pwd.c:186 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 186)
(note 173 172 174 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 25 (parallel [
            (set (reg:DI 176 [ D.12922 ])
                (plus:DI (reg:DI 112 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 175 174 176 25 (set (reg:DI 177)
        (reg/f:DI 110 [ D.12920 ])) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 176 175 177 25 (set (reg:DI 178)
        (reg/f:DI 107 [ D.12920 ])) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 177 176 178 25 (set (reg:DI 179)
        (reg:DI 176 [ D.12922 ])) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 178 177 179 25 (set (reg:DI 1 dx)
        (reg:DI 179)) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 179 178 180 25 (set (reg:DI 4 si)
        (reg:DI 178)) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 180 179 181 25 (set (reg:DI 5 di)
        (reg:DI 177)) nss_compat/compat-pwd.c:187 -1
     (nil))
(call_insn 181 180 182 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:187 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 182 181 183 25 (set (reg:DI 180)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:187 -1
     (nil))
(insn 183 182 184 25 (set (reg:DI 181)
        (reg:DI 180)) nss_compat/compat-pwd.c:187 -1
     (nil))
(jump_insn 184 183 185 25 (set (pc)
        (label_ref 201)) nss_compat/compat-pwd.c:187 -1
     (nil)
 -> 201)
(barrier 185 184 186)
(code_label 186 185 187 26 66 "" [2 uses])
(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 26 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 32 [0x20])) [3 dest_6(D)->pw_dir+0 S8 A64])
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:190 -1
     (nil))
(insn 189 188 190 26 (set (reg:DI 182)
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 32 [0x20])) [3 src_1(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:191 -1
     (nil))
(insn 190 189 191 26 (set (reg:DI 4 si)
        (reg:DI 182)) nss_compat/compat-pwd.c:191 -1
     (nil))
(insn 191 190 192 26 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:191 -1
     (nil))
(call_insn 192 191 193 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:191 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 193 192 194 26 (set (reg:DI 184)
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 32 [0x20])) [3 dest_6(D)->pw_dir+0 S8 A64])) nss_compat/compat-pwd.c:192 -1
     (nil))
(insn 194 193 195 26 (set (reg:DI 5 di)
        (reg:DI 184)) nss_compat/compat-pwd.c:192 -1
     (nil))
(call_insn/i 195 194 196 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:192 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 26 (set (reg:DI 185)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:192 -1
     (nil))
(insn 197 196 198 26 (set (reg:DI 186)
        (reg:DI 185)) nss_compat/compat-pwd.c:192 -1
     (nil))
(insn 198 197 199 26 (set (reg:DI 115 [ D.12922 ])
        (reg:DI 186)) nss_compat/compat-pwd.c:192 -1
     (nil))
(insn 199 198 200 26 (parallel [
            (set (reg:DI 187 [ D.12923 ])
                (plus:DI (reg:DI 115 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:192 -1
     (nil))
(insn 200 199 201 26 (parallel [
            (set (reg/v/f:DI 130 [ buffer ])
                (plus:DI (reg/v/f:DI 130 [ buffer ])
                    (reg:DI 187 [ D.12923 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:192 -1
     (nil))
(code_label 201 200 202 27 64 "" [4 uses])
(note 202 201 203 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 27 (set (reg/f:DI 117 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 40 [0x28])) [3 src_1(D)->pw_shell+0 S8 A64])) nss_compat/compat-pwd.c:197 -1
     (nil))
(insn 204 203 205 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:197 -1
     (nil))
(jump_insn 205 204 206 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 260)
            (pc))) nss_compat/compat-pwd.c:197 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 260)
(note 206 205 207 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 117 [ D.12920 ]) [0 MEM[(const char *)_39]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:197 -1
     (nil))
(jump_insn 208 207 209 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 260)
            (pc))) nss_compat/compat-pwd.c:197 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 260)
(note 209 208 210 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 130 [ buffer ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:199 -1
     (nil))
(jump_insn 211 210 212 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 220)
            (pc))) nss_compat/compat-pwd.c:199 -1
     (int_list:REG_BR_PROB 9559 (nil))
 -> 220)
(note 212 211 213 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 213 212 214 30 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.12920 ])) nss_compat/compat-pwd.c:200 -1
     (nil))
(call_insn 214 213 215 30 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:200 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2ba248345ca8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 215 214 216 30 (set (reg/f:DI 188)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:200 -1
     (expr_list:REG_NOALIAS (reg/f:DI 188)
        (nil)))
(insn 216 215 217 30 (set (reg/f:DI 119 [ D.12920 ])
        (reg/f:DI 188)) nss_compat/compat-pwd.c:200 -1
     (nil))
(insn 217 216 218 30 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 40 [0x28])) [3 dest_6(D)->pw_shell+0 S8 A64])
        (reg/f:DI 119 [ D.12920 ])) nss_compat/compat-pwd.c:200 -1
     (nil))
(jump_insn 218 217 219 30 (set (pc)
        (label_ref:DI 260)) nss_compat/compat-pwd.c:200 654 {jump}
     (nil)
 -> 260)
(barrier 219 218 220)
(code_label 220 219 221 31 68 "" [1 uses])
(note 221 220 222 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 31 (set (reg/f:DI 120 [ D.12920 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 40 [0x28])) [3 dest_6(D)->pw_shell+0 S8 A64])) nss_compat/compat-pwd.c:201 -1
     (nil))
(insn 223 222 224 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 120 [ D.12920 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:201 -1
     (nil))
(jump_insn 224 223 225 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) nss_compat/compat-pwd.c:201 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 250)
(note 225 224 226 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 32 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.12920 ])) nss_compat/compat-pwd.c:202 -1
     (nil))
(call_insn/i 227 226 228 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:202 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 228 227 229 32 (set (reg:DI 190)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 229 228 230 32 (set (reg:DI 191)
        (reg:DI 190)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 230 229 231 32 (set (reg:DI 121 [ D.12922 ])
        (reg:DI 191)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 231 230 232 32 (set (reg:DI 5 di)
        (reg/f:DI 117 [ D.12920 ])) nss_compat/compat-pwd.c:202 -1
     (nil))
(call_insn/i 232 231 233 32 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:202 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 233 232 234 32 (set (reg:DI 193)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 234 233 235 32 (set (reg:DI 194)
        (reg:DI 193)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 235 234 236 32 (set (reg:DI 122 [ D.12922 ])
        (reg:DI 194)) nss_compat/compat-pwd.c:202 -1
     (nil))
(insn 236 235 237 32 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 121 [ D.12922 ])
            (reg:DI 122 [ D.12922 ]))) nss_compat/compat-pwd.c:201 -1
     (nil))
(jump_insn 237 236 238 32 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 250)
            (pc))) nss_compat/compat-pwd.c:201 -1
     (int_list:REG_BR_PROB 7929 (nil))
 -> 250)
(note 238 237 239 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 33 (parallel [
            (set (reg:DI 195 [ D.12922 ])
                (plus:DI (reg:DI 122 [ D.12922 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 240 239 241 33 (set (reg:DI 196)
        (reg/f:DI 120 [ D.12920 ])) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 241 240 242 33 (set (reg:DI 197)
        (reg/f:DI 117 [ D.12920 ])) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 242 241 243 33 (set (reg:DI 198)
        (reg:DI 195 [ D.12922 ])) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 243 242 244 33 (set (reg:DI 1 dx)
        (reg:DI 198)) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 244 243 245 33 (set (reg:DI 4 si)
        (reg:DI 197)) nss_compat/compat-pwd.c:203 -1
     (nil))
(insn 245 244 246 33 (set (reg:DI 5 di)
        (reg:DI 196)) nss_compat/compat-pwd.c:203 -1
     (nil))
(call_insn/j 246 245 247 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:203 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(barrier 247 246 250)
(code_label 250 247 251 34 69 "" [2 uses])
(note 251 250 252 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 34 (set (mem/f:DI (plus:DI (reg/v/f:DI 128 [ dest ])
                (const_int 40 [0x28])) [3 dest_6(D)->pw_shell+0 S8 A64])
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:206 -1
     (nil))
(insn 253 252 254 34 (set (reg:DI 201)
        (mem/f:DI (plus:DI (reg/v/f:DI 129 [ src ])
                (const_int 40 [0x28])) [3 src_1(D)->pw_shell+0 S8 A64])) nss_compat/compat-pwd.c:207 -1
     (nil))
(insn 254 253 255 34 (set (reg:DI 4 si)
        (reg:DI 201)) nss_compat/compat-pwd.c:207 -1
     (nil))
(insn 255 254 256 34 (set (reg:DI 5 di)
        (reg/v/f:DI 130 [ buffer ])) nss_compat/compat-pwd.c:207 -1
     (nil))
(call_insn/j 256 255 257 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:207 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2ba24813e288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(barrier 257 256 260)
(code_label 260 257 261 36 57 "" [3 uses])
(note 261 260 0 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

;; Function getpwnam_plususer (getpwnam_plususer, funcdef_no=60, decl_uid=11601, cgraph_uid=60, symbol_order=71) (unlikely executed)

Partition 0: size 48 align 16
	pwd

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11
Edge 5->8 redirected to 12
Edge 6->8 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 82.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 100 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 101 [ result ])
        (reg:DI 4 si [ result ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 102 [ ent ])
        (reg:DI 1 dx [ ent ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 103 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 104 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 105 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_compat/compat-pwd.c:485 -1
     (nil))
(note 8 7 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 8 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getpwnam_r") [flags 0x2]  <var_decl 0x2ba2486c17e0 nss_getpwnam_r>) [3 nss_getpwnam_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:486 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 91)
            (pc))) nss_compat/compat-pwd.c:486 612 {*jcc_1}
     (int_list:REG_BR_PROB 177 (nil))
 -> 91)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg:DI 106)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:490 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 107)
        (reg:DI 106)) nss_compat/compat-pwd.c:490 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 108)
        (const_int 0 [0])) nss_compat/compat-pwd.c:490 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 109)
        (const_int 12 [0xc])) nss_compat/compat-pwd.c:490 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:DI 109)
                (const_int 0 [0]))
            (set (reg/f:DI 107)
                (plus:DI (ashift:DI (reg:DI 109)
                        (const_int 2 [0x2]))
                    (reg/f:DI 107)))
            (set (mem/c:BLK (reg/f:DI 107) [0 MEM[(void *)&pwd]+0 S48 A128])
                (const_int 0 [0]))
            (use (reg:SI 108))
            (use (reg:DI 109))
        ]) nss_compat/compat-pwd.c:490 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:492 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:492 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/v/f:DI 101 [ result ])) nss_compat/compat-pwd.c:492 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 110)) nss_compat/compat-pwd.c:492 -1
     (nil))
(call_insn 28 27 29 4 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:492 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 29 28 30 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:494 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (reg:DI 111)) nss_compat/compat-pwd.c:494 -1
     (nil))
(call_insn/i 31 30 32 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>) [0 pwd_need_buflen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:494 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 32 31 33 4 (set (reg/v:DI 89 [ plen ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:494 -1
     (nil))
(insn 33 32 34 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 89 [ plen ])
            (reg/v:DI 104 [ buflen ]))) nss_compat/compat-pwd.c:495 -1
     (nil))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) nss_compat/compat-pwd.c:495 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 39)
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 10 5 (set (mem:SI (reg/v/f:DI 105 [ errnop ]) [2 *errnop_10(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:497 -1
     (nil))
(insn 10 36 37 5 (set (reg:SI 87 [ D.12939 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:498 -1
     (nil))
(jump_insn 37 10 38 5 (set (pc)
        (label_ref 79)) nss_compat/compat-pwd.c:498 -1
     (nil)
 -> 79)
(barrier 38 37 39)
(code_label 39 38 40 6 105 "" [1 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (parallel [
            (set (reg:DI 90 [ D.12941 ])
                (minus:DI (reg/v:DI 104 [ buflen ])
                    (reg/v:DI 89 [ plen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:500 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 112)
        (mem/f/c:DI (symbol_ref:DI ("nss_getpwnam_r") [flags 0x2]  <var_decl 0x2ba2486c17e0 nss_getpwnam_r>) [3 nss_getpwnam_r+0 S8 A64])) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 37 r8)
        (reg/v/f:DI 105 [ errnop ])) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 2 cx)
        (reg:DI 90 [ D.12941 ])) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 45 44 46 6 (set (reg:DI 1 dx)
        (reg/v/f:DI 103 [ buffer ])) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 4 si)
        (reg/v/f:DI 101 [ result ])) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 47 46 48 6 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ name ])) nss_compat/compat-pwd.c:503 -1
     (nil))
(call_insn 48 47 49 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 112) [0 *_15 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:503 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 49 48 50 6 (set (reg/v:SI 93 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:503 -1
     (nil))
(insn 50 49 51 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:505 -1
     (nil))
(jump_insn 51 50 52 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) nss_compat/compat-pwd.c:505 612 {*jcc_1}
     (int_list:REG_BR_PROB 8010 (nil))
 -> 95)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 60 7 (set (reg/f:DI 94 [ D.12942 ])
        (mem/f:DI (reg/v/f:DI 101 [ result ]) [3 result_6(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 60 53 54 7 (set (reg:DI 113)
        (reg/f:DI 94 [ D.12942 ])) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 54 60 55 7 (set (reg:DI 117)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 116)
        (reg:DI 113)) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 56 55 57 7 (set (reg:QI 118)
        (const_int 0 [0])) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg:DI 114)
                (unspec:DI [
                        (mem:BLK (reg:DI 116) [0  A8])
                        (reg:QI 118)
                        (const_int 1 [0x1])
                        (reg:DI 117)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 116))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 58 57 59 7 (set (reg:DI 115)
        (not:DI (reg:DI 114))) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 59 58 61 7 (parallel [
            (set (reg:DI 95 [ D.12941 ])
                (plus:DI (reg:DI 115)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 61 59 62 7 (parallel [
            (set (reg:DI 119 [ D.12944 ])
                (plus:DI (reg/v/f:DI 102 [ ent ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 62 61 63 7 (set (reg:DI 1 dx)
        (reg:DI 119 [ D.12944 ])) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 63 62 64 7 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 95 [ D.12941 ]) 0)) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 64 63 65 7 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.12942 ])) nss_compat/compat-pwd.c:508 -1
     (nil))
(call_insn 65 64 66 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>) [0 in_blacklist.isra.1 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:508 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 66 65 67 7 (set (reg:SI 97 [ D.12943 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:508 -1
     (nil))
(insn 67 66 68 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.12943 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:508 -1
     (nil))
(jump_insn 68 67 69 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) nss_compat/compat-pwd.c:508 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 99)
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (parallel [
            (set (reg:DI 120 [ p ])
                (plus:DI (reg/v/f:DI 103 [ buffer ])
                    (reg:DI 90 [ D.12941 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:511 -1
     (nil))
(insn 71 70 72 8 (parallel [
            (set (reg:DI 121)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:511 -1
     (nil))
(insn 72 71 73 8 (set (reg:DI 1 dx)
        (reg:DI 120 [ p ])) nss_compat/compat-pwd.c:511 -1
     (nil))
(insn 73 72 74 8 (set (reg:DI 4 si)
        (reg:DI 121)) nss_compat/compat-pwd.c:511 -1
     (nil))
(insn 74 73 75 8 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ result ])) nss_compat/compat-pwd.c:511 -1
     (nil))
(call_insn 75 74 76 8 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:511 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 76 75 77 8 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:512 -1
     (nil))
(insn 77 76 78 8 (set (reg:DI 5 di)
        (reg:DI 122)) nss_compat/compat-pwd.c:512 -1
     (nil))
(call_insn 78 77 13 8 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:512 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 78 88 8 (set (reg:SI 87 [ D.12939 ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:514 -1
     (nil))
(jump_insn 88 13 89 8 (set (pc)
        (label_ref 79)) nss_compat/compat-pwd.c:514 -1
     (nil)
 -> 79)
(barrier 89 88 91)
(code_label 91 89 90 9 106 "" [1 uses])
(note 90 91 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 90 92 9 (set (reg:SI 87 [ D.12939 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:487 -1
     (nil))
(jump_insn 92 9 93 9 (set (pc)
        (label_ref 79)) -1
     (nil)
 -> 79)
(barrier 93 92 95)
(code_label 95 93 94 10 107 "" [1 uses])
(note 94 95 11 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 11 94 96 10 (set (reg:SI 87 [ D.12939 ])
        (reg/v:SI 93 [ status ])) -1
     (nil))
(jump_insn 96 11 97 10 (set (pc)
        (label_ref 79)) -1
     (nil)
 -> 79)
(barrier 97 96 99)
(code_label 99 97 98 11 108 "" [1 uses])
(note 98 99 12 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 12 98 79 11 (set (reg:SI 87 [ D.12939 ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:509 -1
     (nil))
(code_label 79 12 80 12 104 "" [4 uses])
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 85 12 (set (reg:SI 99 [ <retval> ])
        (reg:SI 87 [ D.12939 ])) -1
     (nil))
(insn 85 81 86 12 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) nss_compat/compat-pwd.c:515 -1
     (nil))
(insn 86 85 0 12 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:515 -1
     (nil))

;; Function getpwuid_plususer (getpwuid_plususer, funcdef_no=66, decl_uid=11729, cgraph_uid=66, symbol_order=77) (unlikely executed)

Partition 0: size 48 align 16
	pwd

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8
Edge 2->8 redirected to 11


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 69.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v:SI 94 [ uid ])
        (reg:SI 5 di [ uid ])) nss_compat/compat-pwd.c:883 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ result ])
        (reg:DI 4 si [ result ])) nss_compat/compat-pwd.c:883 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 96 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-pwd.c:883 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 97 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-pwd.c:883 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 98 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-pwd.c:883 -1
     (nil))
(note 7 6 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 7 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getpwuid_r") [flags 0x2]  <var_decl 0x2ba2486c1870 nss_getpwuid_r>) [3 nss_getpwuid_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:888 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) nss_compat/compat-pwd.c:888 612 {*jcc_1}
     (int_list:REG_BR_PROB 177 (nil))
 -> 78)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:891 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 100)
        (reg:DI 99)) nss_compat/compat-pwd.c:891 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 101)
        (const_int 0 [0])) nss_compat/compat-pwd.c:891 -1
     (nil))
(insn 19 18 20 4 (set (reg:DI 102)
        (const_int 12 [0xc])) nss_compat/compat-pwd.c:891 -1
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg:DI 102)
                (const_int 0 [0]))
            (set (reg/f:DI 100)
                (plus:DI (ashift:DI (reg:DI 102)
                        (const_int 2 [0x2]))
                    (reg/f:DI 100)))
            (set (mem/c:BLK (reg/f:DI 100) [0 MEM[(void *)&pwd]+0 S48 A128])
                (const_int 0 [0]))
            (use (reg:SI 101))
            (use (reg:DI 102))
        ]) nss_compat/compat-pwd.c:891 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:893 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:893 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ result ])) nss_compat/compat-pwd.c:893 -1
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg:DI 103)) nss_compat/compat-pwd.c:893 -1
     (nil))
(call_insn 25 24 26 4 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:893 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 26 25 27 4 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:895 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 104)) nss_compat/compat-pwd.c:895 -1
     (nil))
(call_insn/i 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>) [0 pwd_need_buflen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:895 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (set (reg/v:DI 89 [ plen ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:895 -1
     (nil))
(insn 30 29 31 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 89 [ plen ])
            (reg/v:DI 97 [ buflen ]))) nss_compat/compat-pwd.c:896 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) nss_compat/compat-pwd.c:896 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 36)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 9 5 (set (mem:SI (reg/v/f:DI 98 [ errnop ]) [2 *errnop_10(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:898 -1
     (nil))
(insn 9 33 34 5 (set (reg:SI 87 [ D.12948 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:899 -1
     (nil))
(jump_insn 34 9 35 5 (set (pc)
        (label_ref 66)) nss_compat/compat-pwd.c:899 -1
     (nil)
 -> 66)
(barrier 35 34 36)
(code_label 36 35 37 6 114 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (parallel [
            (set (reg:DI 90 [ D.12950 ])
                (minus:DI (reg/v:DI 97 [ buflen ])
                    (reg/v:DI 89 [ plen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:901 -1
     (nil))
(insn 39 38 40 6 (set (reg/f:DI 105)
        (mem/f/c:DI (symbol_ref:DI ("nss_getpwuid_r") [flags 0x2]  <var_decl 0x2ba2486c1870 nss_getpwuid_r>) [3 nss_getpwuid_r+0 S8 A64])) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 40 39 41 6 (set (reg:DI 37 r8)
        (reg/v/f:DI 98 [ errnop ])) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 41 40 42 6 (set (reg:DI 2 cx)
        (reg:DI 90 [ D.12950 ])) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 1 dx)
        (reg/v/f:DI 96 [ buffer ])) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 43 42 44 6 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ result ])) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 5 di)
        (reg/v:SI 94 [ uid ])) nss_compat/compat-pwd.c:904 -1
     (nil))
(call_insn 45 44 46 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105) [0 *_15 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:904 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 46 45 47 6 (set (reg:SI 87 [ D.12948 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:904 -1
     (nil))
(insn 47 46 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ D.12948 ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:904 -1
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) nss_compat/compat-pwd.c:904 -1
     (int_list:REG_BR_PROB 8392 (nil))
 -> 61)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (parallel [
            (set (reg:DI 106 [ p ])
                (plus:DI (reg/v/f:DI 96 [ buffer ])
                    (reg:DI 90 [ D.12950 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:907 -1
     (nil))
(insn 51 50 52 7 (parallel [
            (set (reg:DI 107)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:907 -1
     (nil))
(insn 52 51 53 7 (set (reg:DI 1 dx)
        (reg:DI 106 [ p ])) nss_compat/compat-pwd.c:907 -1
     (nil))
(insn 53 52 54 7 (set (reg:DI 4 si)
        (reg:DI 107)) nss_compat/compat-pwd.c:907 -1
     (nil))
(insn 54 53 55 7 (set (reg:DI 5 di)
        (reg/v/f:DI 95 [ result ])) nss_compat/compat-pwd.c:907 -1
     (nil))
(call_insn 55 54 56 7 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:907 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 108)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:908 -1
     (nil))
(insn 57 56 58 7 (set (reg:DI 5 di)
        (reg:DI 108)) nss_compat/compat-pwd.c:908 -1
     (nil))
(call_insn 58 57 59 7 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:908 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 59 58 60 7 (set (pc)
        (label_ref 66)) nss_compat/compat-pwd.c:910 -1
     (nil)
 -> 66)
(barrier 60 59 61)
(code_label 61 60 62 8 115 "" [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:916 -1
     (nil))
(insn 64 63 65 8 (set (reg:DI 5 di)
        (reg:DI 109)) nss_compat/compat-pwd.c:916 -1
     (nil))
(call_insn 65 64 10 8 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:916 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 65 75 8 (set (reg:SI 87 [ D.12948 ])
        (const_int 2 [0x2])) nss_compat/compat-pwd.c:918 -1
     (nil))
(jump_insn 75 10 76 8 (set (pc)
        (label_ref 66)) nss_compat/compat-pwd.c:918 -1
     (nil)
 -> 66)
(barrier 76 75 78)
(code_label 78 76 77 9 116 "" [1 uses])
(note 77 78 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 77 66 9 (set (reg:SI 87 [ D.12948 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:889 -1
     (nil))
(code_label 66 8 67 10 113 "" [3 uses])
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 72 10 (set (reg:SI 93 [ <retval> ])
        (reg:SI 87 [ D.12948 ])) -1
     (nil))
(insn 72 68 73 10 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) nss_compat/compat-pwd.c:919 -1
     (nil))
(insn 73 72 0 10 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:919 -1
     (nil))

;; Function blacklist_store_name.constprop (blacklist_store_name.constprop.8, funcdef_no=77, decl_uid=12792, cgraph_uid=4, symbol_order=126)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 15 failed.
Redirecting jump 35 from 14 to 15.
Edge 7->5 redirected to 15
Redirecting jump 95 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 15 failed.
Deleted label in block 5.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 114 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-pwd.c:1122 -1
     (nil))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 3 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-pwd.c:1124 -1
     (nil))
(call_insn/i 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1124 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 116)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1124 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 117)
        (reg:DI 116)) nss_compat/compat-pwd.c:1124 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 87 [ D.12957 ])
        (reg:DI 117)) nss_compat/compat-pwd.c:1124 -1
     (nil))
(insn 14 13 15 2 (set (reg/v:SI 88 [ namelen ])
        (subreg:SI (reg:DI 87 [ D.12957 ]) 0)) nss_compat/compat-pwd.c:1124 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 118)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1128 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 118)
                    (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1128 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) nss_compat/compat-pwd.c:1128 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 45)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 21 4 (parallel [
            (set (reg:SI 91 [ D.12958 ])
                (ashift:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 21 19 20 4 (set (reg:SI 119)
        (const_int 512 [0x200])) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 20 21 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.12958 ])
            (const_int 512 [0x200]))) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 22 20 23 4 (set (reg:SI 91 [ D.12958 ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 91 [ D.12958 ])
            (reg:SI 119))) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 120)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 120)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (reg:SI 91 [ D.12958 ])) nss_compat/compat-pwd.c:1130 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 121 [ D.12957 ])
        (sign_extend:DI (reg:SI 91 [ D.12958 ]))) nss_compat/compat-pwd.c:1131 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 121 [ D.12957 ])) nss_compat/compat-pwd.c:1131 -1
     (nil))
(call_insn 27 26 28 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ba248164360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2ba248164360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 122)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1131 -1
     (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 93 [ D.12959 ])
        (reg/f:DI 122)) nss_compat/compat-pwd.c:1131 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 123)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1131 -1
     (nil))
(insn 31 30 32 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 123)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])
        (reg/f:DI 93 [ D.12959 ])) nss_compat/compat-pwd.c:1131 -1
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.12959 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1132 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) nss_compat/compat-pwd.c:1132 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 37)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 35 34 36 5 (set (pc)
        (label_ref:DI 126)) nss_compat/compat-pwd.c:1132 654 {jump}
     (nil)
 -> 126)
(barrier 36 35 37)
(code_label 37 36 38 6 120 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (mem:QI (reg/f:DI 93 [ D.12959 ]) [0 MEM[(char *)_8]+0 S1 A64])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:1134 -1
     (nil))
(insn 40 39 41 6 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.12959 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1135 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 124)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1136 -1
     (nil))
(insn 42 41 4 6 (set (mem/c:SI (plus:DI (reg/f:DI 124)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:1136 -1
     (nil))
(insn 4 42 5 6 (set (reg/f:DI 94 [ D.12960 ])
        (reg/f:DI 93 [ D.12959 ])) nss_compat/compat-pwd.c:1136 -1
     (nil))
(insn 5 4 43 6 (set (reg:DI 113 [ D.12961 ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:1136 -1
     (nil))
(jump_insn 43 5 44 6 (set (pc)
        (label_ref 104)) nss_compat/compat-pwd.c:1136 -1
     (nil)
 -> 104)
(barrier 44 43 45)
(code_label 45 44 46 7 119 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-pwd.c:1140 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 4 si)
        (reg/v:SI 88 [ namelen ])) nss_compat/compat-pwd.c:1140 -1
     (nil))
(insn 49 48 50 7 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-pwd.c:1140 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>) [0 in_blacklist.isra.1 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1140 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 51 50 53 7 (set (reg:SI 95 [ D.12958 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1140 -1
     (nil))
(insn 53 51 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.12958 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1140 -1
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) nss_compat/compat-pwd.c:1140 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 126)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 125)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 57 56 58 8 (set (reg:SI 96 [ D.12958 ])
        (mem/c:SI (plus:DI (reg/f:DI 125)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 58 57 59 8 (set (reg/f:DI 126)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 59 58 60 8 (set (reg:SI 99 [ D.12958 ])
        (mem/c:SI (plus:DI (reg/f:DI 126)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 127 [ D.12958 ])
                (plus:SI (reg/v:SI 88 [ namelen ])
                    (reg:SI 96 [ D.12958 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:SI 128 [ D.12958 ])
                (plus:SI (reg:SI 127 [ D.12958 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1143 -1
     (nil))
(insn 62 61 63 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 128 [ D.12958 ])
            (reg:SI 99 [ D.12958 ]))) nss_compat/compat-pwd.c:1143 -1
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nss_compat/compat-pwd.c:1143 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 70)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:DI 129)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) -1
     (nil))
(insn 66 65 67 9 (set (reg/f:DI 94 [ D.12960 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 129)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 113 [ D.12961 ])
        (sign_extend:DI (reg:SI 96 [ D.12958 ]))) -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (label_ref 104)) -1
     (nil)
 -> 104)
(barrier 69 68 70)
(code_label 70 69 71 10 124 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 74 10 (parallel [
            (set (reg:SI 130 [ D.12958 ])
                (ashift:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 74 72 73 10 (set (reg:SI 131)
        (const_int 256 [0x100])) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 73 74 75 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 130 [ D.12958 ])
            (const_int 256 [0x100]))) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 75 73 76 10 (set (reg:SI 130 [ D.12958 ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 130 [ D.12958 ])
            (reg:SI 131))) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:SI 102 [ D.12958 ])
                (plus:SI (reg:SI 130 [ D.12958 ])
                    (reg:SI 99 [ D.12958 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 77 76 78 10 (set (reg/f:DI 132)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 78 77 79 10 (set (mem/c:SI (plus:DI (reg/f:DI 132)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (reg:SI 102 [ D.12958 ])) nss_compat/compat-pwd.c:1145 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 133 [ D.12957 ])
        (sign_extend:DI (reg:SI 102 [ D.12958 ]))) nss_compat/compat-pwd.c:1146 -1
     (nil))
(insn 80 79 81 10 (set (reg/f:DI 134)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1146 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 134)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) nss_compat/compat-pwd.c:1146 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 4 si)
        (reg:DI 133 [ D.12957 ])) nss_compat/compat-pwd.c:1146 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (reg:DI 135)) nss_compat/compat-pwd.c:1146 -1
     (nil))
(call_insn 84 83 85 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2ba248168000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1146 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2ba248168000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 10 (set (reg/v/f:DI 105 [ tmp ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1146 -1
     (nil))
(insn 86 85 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ tmp ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1147 -1
     (nil))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) nss_compat/compat-pwd.c:1147 -1
     (int_list:REG_BR_PROB 9559 (nil))
 -> 97)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:DI 136)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1149 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 136)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) nss_compat/compat-pwd.c:1149 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 5 di)
        (reg:DI 137)) nss_compat/compat-pwd.c:1149 -1
     (nil))
(call_insn 92 91 93 11 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1149 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2ba24815ae58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 94 11 (set (reg/f:DI 138)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1150 -1
     (nil))
(insn 94 93 95 11 (set (mem/c:SI (plus:DI (reg/f:DI 138)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1150 -1
     (nil))
(jump_insn 95 94 96 11 (set (pc)
        (label_ref:DI 126)) nss_compat/compat-pwd.c:1150 654 {jump}
     (nil)
 -> 126)
(barrier 96 95 97)
(code_label 97 96 98 12 125 "" [1 uses])
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 12 (set (reg/f:DI 139)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1153 -1
     (nil))
(insn 100 99 101 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 139)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])
        (reg/v/f:DI 105 [ tmp ])) nss_compat/compat-pwd.c:1153 -1
     (nil))
(insn 101 100 102 12 (set (reg/f:DI 140)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) -1
     (nil))
(insn 102 101 103 12 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 140)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) -1
     (nil))
(insn 103 102 6 12 (set (reg:DI 113 [ D.12961 ])
        (sign_extend:DI (reg:SI 141))) -1
     (nil))
(insn 6 103 104 12 (set (reg/f:DI 94 [ D.12960 ])
        (reg/v/f:DI 105 [ tmp ])) nss_compat/compat-pwd.c:1153 -1
     (nil))
(code_label 104 6 105 13 122 "" [2 uses])
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 13 (parallel [
            (set (reg:DI 142 [ D.12960 ])
                (plus:DI (reg/f:DI 94 [ D.12960 ])
                    (reg:DI 113 [ D.12961 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1157 -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 4 si)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-pwd.c:1157 -1
     (nil))
(insn 108 107 109 13 (set (reg:DI 5 di)
        (reg:DI 142 [ D.12960 ])) nss_compat/compat-pwd.c:1157 -1
     (nil))
(call_insn 109 108 110 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2ba24813b6c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1157 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2ba24813b6c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 110 109 111 13 (set (reg:DI 143)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1157 -1
     (nil))
(insn 111 110 112 13 (set (reg:DI 144)
        (reg:DI 143)) nss_compat/compat-pwd.c:1157 -1
     (nil))
(insn 112 111 113 13 (set (reg/v/f:DI 108 [ tmp ])
        (reg:DI 144)) nss_compat/compat-pwd.c:1157 -1
     (nil))
(insn 113 112 114 13 (set (mem:QI (reg/v/f:DI 108 [ tmp ]) [0 *tmp_26+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-pwd.c:1158 -1
     (nil))
(insn 114 113 115 13 (set (mem:QI (plus:DI (reg/v/f:DI 108 [ tmp ])
                (const_int 1 [0x1])) [0 MEM[(char *)tmp_26 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1159 -1
     (nil))
(insn 115 114 116 13 (set (reg/f:DI 145)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1160 -1
     (nil))
(insn 116 115 117 13 (set (reg/f:DI 146)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:1160 -1
     (nil))
(insn 117 116 121 13 (parallel [
            (set (reg:SI 147 [ D.12958 ])
                (plus:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1160 -1
     (nil))
(insn 121 117 122 13 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 146)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) nss_compat/compat-pwd.c:1160 -1
     (nil))
(insn 122 121 123 13 (parallel [
            (set (reg:SI 150 [ D.12958 ])
                (plus:SI (reg:SI 147 [ D.12958 ])
                    (reg:SI 151)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1160 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 147 [ D.12958 ])
            (mem/c:SI (plus:DI (reg/f:DI 146)
                    (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64]))
        (nil)))
(insn 123 122 126 13 (set (mem/c:SI (plus:DI (reg/f:DI 145)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])
        (reg:SI 150 [ D.12958 ])) nss_compat/compat-pwd.c:1160 -1
     (nil))
(code_label 126 123 127 15 118 "" [3 uses])
(note 127 126 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

;; Function getpwent_next_nss_netgr.constprop (getpwent_next_nss_netgr.constprop.7, funcdef_no=78, decl_uid=12791, cgraph_uid=70, symbol_order=124)

Partition 3: size 8 align 8
	domain
Partition 2: size 8 align 8
	user
Partition 1: size 8 align 8
	host
Partition 0: size 8 align 8
	curdomain

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22
Edge 2->22 redirected to 27


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 13->14 to 22 failed.
Forwarding edge 19->20 to 13 failed.
Removing jump 169.
Merging block 27 into block 26...
Merged blocks 26 and 27.
Merged 26 and 27 without moving.


try_optimize_cfg iteration 2

Forwarding edge 13->14 to 22 failed.
Forwarding edge 19->20 to 13 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 12 NOTE_INSN_DELETED)
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 107 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-pwd.c:358 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 108 [ group ])
        (reg:DI 4 si [ group ])) nss_compat/compat-pwd.c:358 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 109 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-pwd.c:358 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 110 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-pwd.c:358 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 111 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-pwd.c:358 -1
     (nil))
(note 7 6 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 7 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])
        (const_int 0 [0])) nss_compat/compat-pwd.c:362 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getpwnam_r") [flags 0x2]  <var_decl 0x2ba2486c17e0 nss_getpwnam_r>) [3 nss_getpwnam_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:368 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 178)
            (pc))) nss_compat/compat-pwd.c:368 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 178)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 112)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:371 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 112)
                    (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:371 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) nss_compat/compat-pwd.c:371 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 32)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 113)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 80 [0x50])))) nss_compat/compat-pwd.c:373 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 114)
        (reg/f:DI 113)) nss_compat/compat-pwd.c:373 -1
     (nil))
(insn 24 23 25 5 (set (reg:DI 115)
        (const_int 0 [0])) nss_compat/compat-pwd.c:373 -1
     (nil))
(insn 25 24 26 5 (set (reg:DI 116)
        (const_int 11 [0xb])) nss_compat/compat-pwd.c:373 -1
     (nil))
(insn 26 25 27 5 (parallel [
            (set (reg:DI 116)
                (const_int 0 [0]))
            (set (reg/f:DI 114)
                (plus:DI (ashift:DI (reg:DI 116)
                        (const_int 3 [0x3]))
                    (reg/f:DI 114)))
            (set (mem/c:BLK (reg/f:DI 114) [0 MEM[(void *)&ext_ent + 80B]+0 S88 A128])
                (const_int 0 [0]))
            (use (reg:DI 115))
            (use (reg:DI 116))
        ]) nss_compat/compat-pwd.c:373 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 80 [0x50])))) nss_compat/compat-pwd.c:374 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg/v/f:DI 108 [ group ])) nss_compat/compat-pwd.c:374 -1
     (nil))
(call_insn 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2ba24870a6c0 __internal_setnetgrent>) [0 __internal_setnetgrent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:374 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2ba24870a6c0 __internal_setnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 5 (set (reg/f:DI 117)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:375 -1
     (nil))
(insn 31 30 32 5 (set (mem/c:QI (plus:DI (reg/f:DI 117)
                (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:375 -1
     (nil))
(code_label 32 31 33 6 130 "" [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 34 33 35 6 (set (pc)
        (label_ref 37)) nss_compat/compat-pwd.c:375 -1
     (nil)
 -> 37)
(barrier 35 34 67)
(code_label 67 35 36 7 133 "" [5 uses])
(note 36 67 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(code_label 37 36 38 8 131 "" [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 41 40 42 8 (parallel [
            (set (reg:DI 120)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 42 41 43 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:380 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 43 42 44 8 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/v/f:DI 111 [ errnop ])) nss_compat/compat-pwd.c:380 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 44 43 45 8 (set (reg:DI 38 r9)
        (reg/v:DI 110 [ buflen ])) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 45 44 46 8 (set (reg:DI 37 r8)
        (reg/v/f:DI 109 [ buffer ])) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 46 45 47 8 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 80 [0x50])))) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 47 46 48 8 (set (reg:DI 1 dx)
        (reg:DI 118)) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 48 47 49 8 (set (reg:DI 4 si)
        (reg:DI 119)) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 120)) nss_compat/compat-pwd.c:380 -1
     (nil))
(call_insn 50 49 51 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2ba24870a870 __internal_getnetgrent_r>) [0 __internal_getnetgrent_r S1 A8])
            (const_int 16 [0x10]))) nss_compat/compat-pwd.c:380 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2ba24870a870 __internal_getnetgrent_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 51 50 52 8 (set (reg/v:SI 90 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:380 -1
     (nil))
(insn 52 51 53 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:383 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:383 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) nss_compat/compat-pwd.c:383 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 64)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 80 [0x50])))) nss_compat/compat-pwd.c:385 -1
     (nil))
(call_insn 57 56 58 9 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:385 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 58 57 59 9 (set (reg/f:DI 121)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:386 -1
     (nil))
(insn 59 58 60 9 (set (mem/c:QI (reg/f:DI 121) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 0 [0])) nss_compat/compat-pwd.c:386 -1
     (nil))
(insn 60 59 61 9 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:387 -1
     (nil))
(call_insn 61 60 9 9 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:387 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 61 62 9 (set (reg:SI 100 [ D.12970 ])
        (const_int 2 [0x2])) nss_compat/compat-pwd.c:388 -1
     (nil))
(jump_insn 62 9 63 9 (set (pc)
        (label_ref 166)) nss_compat/compat-pwd.c:387 -1
     (nil)
 -> 166)
(barrier 63 62 64)
(code_label 64 63 65 10 132 "" [1 uses])
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 68 10 (set (reg/f:DI 91 [ D.12967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 user+0 S8 A64])) nss_compat/compat-pwd.c:391 -1
     (nil))
(insn 68 66 69 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.12967 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:391 -1
     (nil))
(jump_insn 69 68 70 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-pwd.c:391 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 67)
(note 70 69 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 91 [ D.12967 ]) [0 *_11+0 S1 A8])
            (const_int 45 [0x2d]))) nss_compat/compat-pwd.c:391 -1
     (nil))
(jump_insn 72 71 73 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-pwd.c:391 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 67)
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 12 (set (reg/f:DI 93 [ D.12967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 domain+0 S8 A64])) nss_compat/compat-pwd.c:394 -1
     (nil))
(insn 75 74 76 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.12967 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:394 -1
     (nil))
(jump_insn 76 75 121 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) nss_compat/compat-pwd.c:394 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 86)
(code_label 121 76 77 13 139 "" [1 uses])
(note 77 121 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 13 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:413 -1
     (nil))
(call_insn/i 79 78 80 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>) [0 pwd_need_buflen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:413 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 81 13 (set (reg/v:DI 96 [ p2len ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:413 -1
     (nil))
(insn 81 80 82 13 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 110 [ buflen ])
            (reg/v:DI 96 [ p2len ]))) nss_compat/compat-pwd.c:414 -1
     (nil))
(jump_insn 82 81 85 13 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) nss_compat/compat-pwd.c:414 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 125)
(note 85 82 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 83 85 84 14 (set (pc)
        (label_ref 130)) nss_compat/compat-pwd.c:414 -1
     (nil)
 -> 130)
(barrier 84 83 86)
(code_label 86 84 87 15 134 "" [1 uses])
(note 87 86 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 15 (set (reg/f:DI 89 [ D.12967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])) nss_compat/compat-pwd.c:396 -1
     (nil))
(insn 89 88 90 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.12967 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:396 -1
     (nil))
(jump_insn 90 89 91 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) nss_compat/compat-pwd.c:396 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 113)
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 16 (parallel [
            (set (reg:DI 122)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:397 -1
     (nil))
(insn 93 92 94 16 (set (reg:DI 5 di)
        (reg:DI 122)) nss_compat/compat-pwd.c:397 -1
     (nil))
(call_insn 94 93 95 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("yp_get_default_domain") [flags 0x41]  <function_decl 0x2ba248764000 yp_get_default_domain>) [0 yp_get_default_domain S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:397 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("yp_get_default_domain") [flags 0x41]  <function_decl 0x2ba248764000 yp_get_default_domain>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 96 16 (set (reg:SI 94 [ D.12969 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:397 -1
     (nil))
(insn 96 95 97 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.12969 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:397 -1
     (nil))
(jump_insn 97 96 98 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) nss_compat/compat-pwd.c:397 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 103)
(note 98 97 99 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 17 (set (reg/f:DI 93 [ D.12967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 domain+0 S8 A64])) -1
     (nil))
(insn 100 99 101 17 (set (reg/f:DI 89 [ D.12967 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])) -1
     (nil))
(jump_insn 101 100 102 17 (set (pc)
        (label_ref 113)) -1
     (nil)
 -> 113)
(barrier 102 101 103)
(code_label 103 102 104 18 138 "" [1 uses])
(note 104 103 105 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 18 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 80 [0x50])))) nss_compat/compat-pwd.c:399 -1
     (nil))
(call_insn 106 105 107 18 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:399 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 107 106 108 18 (set (reg/f:DI 123)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:400 -1
     (nil))
(insn 108 107 109 18 (set (mem/c:QI (reg/f:DI 123) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 0 [0])) nss_compat/compat-pwd.c:400 -1
     (nil))
(insn 109 108 110 18 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:401 -1
     (nil))
(call_insn 110 109 10 18 (call (mem:QI (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>) [0 give_pwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:401 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_pwd_free") [flags 0x3]  <function_decl 0x2ba248764e58 give_pwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 110 111 18 (set (reg:SI 100 [ D.12970 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:402 -1
     (nil))
(jump_insn 111 10 112 18 (set (pc)
        (label_ref 166)) nss_compat/compat-pwd.c:401 -1
     (nil)
 -> 166)
(barrier 112 111 113)
(code_label 113 112 114 19 137 "" [2 uses])
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.12967 ])) nss_compat/compat-pwd.c:404 -1
     (nil))
(insn 116 115 117 19 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.12967 ])) nss_compat/compat-pwd.c:404 -1
     (nil))
(call_insn/i 117 116 118 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:404 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 118 117 119 19 (set (reg:SI 95 [ D.12969 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:404 -1
     (nil))
(insn 119 118 120 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.12969 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:404 -1
     (nil))
(jump_insn 120 119 124 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-pwd.c:404 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 67)
(note 124 120 122 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 122 124 123 20 (set (pc)
        (label_ref 121)) nss_compat/compat-pwd.c:404 -1
     (nil)
 -> 121)
(barrier 123 122 125)
(code_label 125 123 126 21 135 "" [1 uses])
(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 11 21 (set (mem:SI (reg/v/f:DI 111 [ errnop ]) [2 *errnop_8(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:416 -1
     (nil))
(insn 11 127 128 21 (set (reg:SI 100 [ D.12970 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:417 -1
     (nil))
(jump_insn 128 11 129 21 (set (pc)
        (label_ref 166)) nss_compat/compat-pwd.c:416 -1
     (nil)
 -> 166)
(barrier 129 128 130)
(code_label 130 129 131 22 136 "" [1 uses])
(note 131 130 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 22 (parallel [
            (set (reg/v:DI 110 [ buflen ])
                (minus:DI (reg/v:DI 110 [ buflen ])
                    (reg/v:DI 96 [ p2len ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:419 -1
     (nil))
(insn 133 132 134 22 (set (reg:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 user+0 S8 A64])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 134 133 135 22 (set (reg/f:DI 125)
        (mem/f/c:DI (symbol_ref:DI ("nss_getpwnam_r") [flags 0x2]  <var_decl 0x2ba2486c17e0 nss_getpwnam_r>) [3 nss_getpwnam_r+0 S8 A64])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 135 134 136 22 (set (reg:DI 37 r8)
        (reg/v/f:DI 111 [ errnop ])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 136 135 137 22 (set (reg:DI 2 cx)
        (reg/v:DI 110 [ buflen ])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 137 136 138 22 (set (reg:DI 1 dx)
        (reg/v/f:DI 109 [ buffer ])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 138 137 139 22 (set (reg:DI 4 si)
        (reg/v/f:DI 107 [ result ])) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 139 138 140 22 (set (reg:DI 5 di)
        (reg:DI 124)) nss_compat/compat-pwd.c:422 -1
     (nil))
(call_insn 140 139 141 22 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 125) [0 *_26 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:422 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 141 140 142 22 (set (reg:SI 100 [ D.12970 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:422 -1
     (nil))
(insn 142 141 143 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.12970 ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:422 -1
     (nil))
(jump_insn 143 142 144 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-pwd.c:422 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 67)
(note 144 143 145 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 23 (set (reg/f:DI 101 [ D.12967 ])
        (mem/f:DI (reg/v/f:DI 107 [ result ]) [3 result_28(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 146 145 147 23 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.12967 ])) nss_compat/compat-pwd.c:426 -1
     (nil))
(call_insn/i 147 146 148 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:426 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 148 147 149 23 (set (reg:DI 127)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 149 148 150 23 (set (reg:DI 128)
        (reg:DI 127)) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 150 149 151 23 (set (reg:DI 102 [ D.12971 ])
        (reg:DI 128)) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 151 150 152 23 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 152 151 153 23 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 102 [ D.12971 ]) 0)) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 153 152 154 23 (set (reg:DI 5 di)
        (reg/f:DI 101 [ D.12967 ])) nss_compat/compat-pwd.c:426 -1
     (nil))
(call_insn 154 153 155 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>) [0 in_blacklist.isra.1 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:426 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 155 154 156 23 (set (reg:SI 104 [ D.12969 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:426 -1
     (nil))
(insn 156 155 157 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ D.12969 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:426 -1
     (nil))
(jump_insn 157 156 158 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-pwd.c:426 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 67)
(note 158 157 159 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 24 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 107 [ result ]) [3 result_28(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:430 -1
     (nil))
(call_insn 160 159 161 24 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:430 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 161 160 162 24 (parallel [
            (set (reg:DI 129 [ p2 ])
                (plus:DI (reg/v/f:DI 109 [ buffer ])
                    (reg/v:DI 110 [ buflen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:431 -1
     (nil))
(insn 162 161 163 24 (set (reg:DI 1 dx)
        (reg:DI 129 [ p2 ])) nss_compat/compat-pwd.c:431 -1
     (nil))
(insn 163 162 164 24 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:431 -1
     (nil))
(insn 164 163 165 24 (set (reg:DI 5 di)
        (reg/v/f:DI 107 [ result ])) nss_compat/compat-pwd.c:431 -1
     (nil))
(call_insn 165 164 175 24 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:431 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 175 165 176 24 (set (pc)
        (label_ref 166)) -1
     (nil)
 -> 166)
(barrier 176 175 178)
(code_label 178 176 177 25 140 "" [1 uses])
(note 177 178 8 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 8 177 166 25 (set (reg:SI 100 [ D.12970 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:369 -1
     (nil))
(code_label 166 8 167 26 129 "" [4 uses])
(note 167 166 168 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 172 26 (set (reg:SI 106 [ <retval> ])
        (reg:SI 100 [ D.12970 ])) -1
     (nil))
(insn 172 168 173 26 (set (reg/i:SI 0 ax)
        (reg:SI 106 [ <retval> ])) nss_compat/compat-pwd.c:437 -1
     (nil))
(insn 173 172 0 26 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:437 -1
     (nil))

;; Function getpwent_next_nss.part.3.constprop (getpwent_next_nss.part.3.constprop.9, funcdef_no=76, decl_uid=12793, cgraph_uid=5, symbol_order=127)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 7->10 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 66.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 99 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-pwd.c:441 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-pwd.c:441 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 101 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-pwd.c:441 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 102 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-pwd.c:441 -1
     (nil))
(note 6 5 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 6 13 2 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:456 -1
     (nil))
(call_insn/i 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>) [0 pwd_need_buflen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:456 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("pwd_need_buflen") [flags 0x3]  <function_decl 0x2ba248771000 pwd_need_buflen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/v:DI 87 [ p2len ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:456 -1
     (nil))
(insn 15 14 16 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 87 [ p2len ])
            (reg/v:DI 101 [ buflen ]))) nss_compat/compat-pwd.c:457 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) nss_compat/compat-pwd.c:457 -1
     (int_list:REG_BR_PROB 9600 (nil))
 -> 21)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 7 4 (set (mem:SI (reg/v/f:DI 102 [ errnop ]) [2 *errnop_4(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:459 -1
     (nil))
(insn 7 18 19 4 (set (reg:SI 97 [ D.12979 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:460 -1
     (nil))
(jump_insn 19 7 20 4 (set (pc)
        (label_ref 63)) nss_compat/compat-pwd.c:459 -1
     (nil)
 -> 63)
(barrier 20 19 21)
(code_label 21 20 22 5 152 "" [1 uses])
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (parallel [
            (set (reg:DI 88 [ D.12974 ])
                (minus:DI (reg/v:DI 101 [ buflen ])
                    (reg/v:DI 87 [ p2len ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:462 -1
     (nil))
(insn 24 23 25 5 (set (reg/f:DI 103)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:465 -1
     (nil))
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 103)
                    (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:465 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) nss_compat/compat-pwd.c:465 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 30)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:DI 104)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:466 -1
     (nil))
(insn 29 28 30 6 (set (mem/c:QI (plus:DI (reg/f:DI 104)
                (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:466 -1
     (nil))
(code_label 30 29 31 7 154 "" [1 uses])
(note 31 30 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(code_label 54 31 32 8 155 "" [1 uses])
(note 32 54 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg/f:DI 105)
        (mem/f/c:DI (symbol_ref:DI ("nss_getpwent_r") [flags 0x2]  <var_decl 0x2ba2486c1900 nss_getpwent_r>) [3 nss_getpwent_r+0 S8 A64])) nss_compat/compat-pwd.c:470 -1
     (nil))
(insn 34 33 35 8 (set (reg:DI 2 cx)
        (reg/v/f:DI 102 [ errnop ])) nss_compat/compat-pwd.c:470 -1
     (nil))
(insn 35 34 36 8 (set (reg:DI 1 dx)
        (reg:DI 88 [ D.12974 ])) nss_compat/compat-pwd.c:470 -1
     (nil))
(insn 36 35 37 8 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ buffer ])) nss_compat/compat-pwd.c:470 -1
     (nil))
(insn 37 36 38 8 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ result ])) nss_compat/compat-pwd.c:470 -1
     (nil))
(call_insn 38 37 39 8 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 105) [0 *_9 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:470 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 39 38 40 8 (set (reg/v:SI 92 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:470 -1
     (nil))
(insn 40 39 41 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 92 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:470 -1
     (nil))
(jump_insn 41 40 42 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) nss_compat/compat-pwd.c:470 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 75)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 9 (set (reg/f:DI 93 [ D.12977 ])
        (mem/f:DI (reg/v/f:DI 99 [ result ]) [3 result_10(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 44 43 45 9 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.12977 ])) nss_compat/compat-pwd.c:474 -1
     (nil))
(call_insn/i 45 44 46 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:474 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 46 45 47 9 (set (reg:DI 107)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 108)
        (reg:DI 107)) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 94 [ D.12974 ])
        (reg:DI 108)) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 50 49 51 9 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 94 [ D.12974 ]) 0)) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.12977 ])) nss_compat/compat-pwd.c:474 -1
     (nil))
(call_insn 52 51 53 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>) [0 in_blacklist.isra.1 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:474 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.1") [flags 0x3]  <function_decl 0x2ba2488555e8 in_blacklist.isra.1>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 53 52 55 9 (set (reg:SI 96 [ D.12978 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:474 -1
     (nil))
(insn 55 53 56 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.12978 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:474 -1
     (nil))
(jump_insn 56 55 57 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) nss_compat/compat-pwd.c:474 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 54)
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (parallel [
            (set (reg:DI 109 [ p2 ])
                (plus:DI (reg/v/f:DI 100 [ buffer ])
                    (reg:DI 88 [ D.12974 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:476 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 1 dx)
        (reg:DI 109 [ p2 ])) nss_compat/compat-pwd.c:476 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:476 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ result ])) nss_compat/compat-pwd.c:476 -1
     (nil))
(call_insn 62 61 9 10 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:476 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 9 62 72 10 (set (reg:SI 97 [ D.12979 ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:478 -1
     (nil))
(jump_insn 72 9 73 10 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
(barrier 73 72 75)
(code_label 75 73 74 11 156 "" [1 uses])
(note 74 75 8 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 8 74 63 11 (set (reg:SI 97 [ D.12979 ])
        (reg/v:SI 92 [ status ])) nss_compat/compat-pwd.c:470 -1
     (nil))
(code_label 63 8 64 12 153 "" [2 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 69 12 (set (reg:SI 98 [ <retval> ])
        (reg:SI 97 [ D.12979 ])) -1
     (nil))
(insn 69 65 70 12 (set (reg/i:SI 0 ax)
        (reg:SI 98 [ <retval> ])) nss_compat/compat-pwd.c:479 -1
     (nil))
(insn 70 69 0 12 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:479 -1
     (nil))

;; Function getpwent_next_file.constprop (getpwent_next_file.constprop.6, funcdef_no=79, decl_uid=12790, cgraph_uid=67, symbol_order=123)

Partition 1: size 1024 align 16
	buf2
Partition 5: size 88 align 16
	netgrdata
Partition 0: size 16 align 16
	pos
Partition 4: size 8 align 8
	domain
Partition 3: size 8 align 8
	host
Partition 2: size 8 align 8
	user

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53
Edge 9->50 redirected to 58
Edge 46->50 redirected to 59


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 48 from 56 to 59.
Forwarding edge 10->11 to 14 failed.
Edge 26->53 redirected to 4
Redirecting jump 213 from 58 to 4.
Edge 34->53 redirected to 4
Edge 36->53 redirected to 4
Edge 37->58 redirected to 4
Redirecting jump 246 from 56 to 59.
Edge 39->53 redirected to 4
Redirecting jump 258 from 58 to 4.
Redirecting jump 311 from 58 to 4.
Redirecting jump 330 from 56 to 59.
Edge 49->53 redirected to 4
Edge 51->56 redirected to 59
Redirecting jump 366 from 56 to 59.
deleting block 53
Redirecting jump 396 from 56 to 59.
Merging block 56 into block 55...
Merged blocks 55 and 56.
Merged 55 and 56 without moving.
deleting block 58
Removing jump 379.
Removing jump 388.
Merging block 60 into block 59...
Merged blocks 59 and 60.
Merged 59 and 60 without moving.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 14 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 35 NOTE_INSN_DELETED)
(note 35 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 35 25 2 (set (reg/v/f:DI 160 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-pwd.c:518 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 161 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-pwd.c:518 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:DI 162 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-pwd.c:518 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 163 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-pwd.c:518 -1
     (nil))
(note 28 27 37 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 37 28 38 2 (set (pc)
        (label_ref 40)) nss_compat/compat-pwd.c:663 -1
     (nil)
 -> 40)
(barrier 38 37 370)
(code_label 370 38 39 4 188 "" [9 uses])
(note 39 370 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 40 39 41 5 163 "" [1 uses])
(note 41 40 134 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 134 41 42 6 173 "" [1 uses])
(note 42 134 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 162 [ buflen ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:531 -1
     (nil))
(jump_insn 44 43 45 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) nss_compat/compat-pwd.c:531 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 50)
(code_label 45 44 46 7 165 ("erange") [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 29 7 (set (mem:SI (reg/v/f:DI 163 [ errnop ]) [2 *errnop_5(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:534 -1
     (nil))
(insn 29 47 48 7 (set (reg:SI 151 [ D.13006 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:535 -1
     (nil))
(jump_insn 48 29 49 7 (set (pc)
        (label_ref:DI 385)) nss_compat/compat-pwd.c:534 654 {jump}
     (nil)
 -> 385)
(barrier 49 48 50)
(code_label 50 49 51 8 164 "" [1 uses])
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (parallel [
            (set (reg:DI 164 [ D.13003 ])
                (plus:DI (reg/v:DI 162 [ buflen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 53 52 54 8 (parallel [
            (set (reg/f:DI 145 [ D.13000 ])
                (plus:DI (reg/v/f:DI 161 [ buffer ])
                    (reg:DI 164 [ D.13003 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 54 53 117 8 (set (reg:SI 146 [ D.12994 ])
        (subreg:SI (reg/v:DI 162 [ buflen ]) 0)) -1
     (nil))
(code_label 117 54 55 9 172 "" [2 uses])
(note 55 117 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:538 -1
     (nil))
(insn 57 56 58 9 (set (reg/f:DI 166)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:538 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 166)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:538 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 4 si)
        (reg:DI 165)) nss_compat/compat-pwd.c:538 -1
     (nil))
(insn 60 59 61 9 (set (reg:DI 5 di)
        (reg:DI 167)) nss_compat/compat-pwd.c:538 -1
     (nil))
(call_insn 61 60 62 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>) [0 fgetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:538 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 62 61 63 9 (set (mem:QI (reg/f:DI 145 [ D.13000 ]) [0 *_64+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:539 -1
     (nil))
(insn 63 62 64 9 (set (reg/f:DI 168)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:540 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 168)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:540 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 1 dx)
        (reg:DI 169)) nss_compat/compat-pwd.c:540 -1
     (nil))
(insn 66 65 67 9 (set (reg:SI 4 si)
        (reg:SI 146 [ D.12994 ])) nss_compat/compat-pwd.c:540 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg/v/f:DI 161 [ buffer ])) nss_compat/compat-pwd.c:540 -1
     (nil))
(call_insn 68 67 69 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>) [0 fgets_unlocked S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:540 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 69 68 70 9 (set (reg/v/f:DI 115 [ p ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:540 -1
     (nil))
(insn 70 69 71 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 115 [ p ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:541 -1
     (nil))
(jump_insn 71 70 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) nss_compat/compat-pwd.c:541 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 82)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 10 (set (reg/f:DI 170)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:541 -1
     (nil))
(insn 74 73 75 10 (set (reg/f:DI 111 [ D.12993 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 170)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:541 -1
     (nil))
(insn 75 74 76 10 (set (reg:SI 172)
        (mem:SI (reg/f:DI 111 [ D.12993 ]) [2 _13->_flags+0 S4 A64])) nss_compat/compat-pwd.c:541 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:SI 171 [ D.12994 ])
                (and:SI (reg:SI 172)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:541 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 111 [ D.12993 ]) [2 _13->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 77 76 78 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.12994 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:541 -1
     (nil))
(jump_insn 78 77 81 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 395)
            (pc))) nss_compat/compat-pwd.c:541 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 395)
(note 81 78 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 81 80 11 (set (pc)
        (label_ref 89)) nss_compat/compat-pwd.c:541 -1
     (nil)
 -> 89)
(barrier 80 79 82)
(code_label 82 80 83 12 167 "" [1 uses])
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 145 [ D.13000 ]) [0 *_64+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:544 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) nss_compat/compat-pwd.c:544 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 97)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (set (reg/f:DI 173)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) -1
     (nil))
(insn 88 87 89 13 (set (reg/f:DI 111 [ D.12993 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 173)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) -1
     (nil))
(code_label 89 88 90 14 168 ("erange_reset") [2 uses])
(note 90 89 91 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 14 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:547 -1
     (nil))
(insn 92 91 93 14 (set (reg:DI 4 si)
        (reg:DI 174)) nss_compat/compat-pwd.c:547 -1
     (nil))
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.12993 ])) nss_compat/compat-pwd.c:547 -1
     (nil))
(call_insn 94 93 95 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:547 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 95 94 96 14 (set (pc)
        (label_ref 45)) nss_compat/compat-pwd.c:547 -1
     (nil)
 -> 45)
(barrier 96 95 97)
(code_label 97 96 98 15 169 "" [1 uses])
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 15 (set (mem:QI (reg/f:DI 145 [ D.13000 ]) [0 *_64+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:552 -1
     (nil))
(call_insn/u 100 99 101 15 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 101 100 102 15 (set (reg/f:DI 155 [ D.13007 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 102 101 103 15 (set (reg/f:DI 154 [ D.12997 ])
        (mem/f:DI (reg/f:DI 155 [ D.13007 ]) [3 *_139+0 S8 A64])) -1
     (nil))
(jump_insn 103 102 104 15 (set (pc)
        (label_ref 107)) -1
     (nil)
 -> 107)
(barrier 104 103 110)
(code_label 110 104 105 16 171 "" [1 uses])
(note 105 110 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 16 (parallel [
            (set (reg/v/f:DI 115 [ p ])
                (plus:DI (reg/v/f:DI 115 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:556 -1
     (nil))
(code_label 107 106 108 17 170 "" [1 uses])
(note 108 107 109 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 111 17 (set (reg:QI 116 [ D.12995 ])
        (mem:QI (reg/v/f:DI 115 [ p ]) [0 MEM[base: p_21, offset: 0B]+0 S1 A8])) nss_compat/compat-pwd.c:555 -1
     (nil))
(insn 111 109 112 17 (set (reg:DI 175 [ D.12996 ])
        (sign_extend:DI (reg:QI 116 [ D.12995 ]))) nss_compat/compat-pwd.c:555 -1
     (nil))
(insn 112 111 113 17 (set (reg:HI 177)
        (mem:HI (plus:DI (mult:DI (reg:DI 175 [ D.12996 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 154 [ D.12997 ])) [5 *_28+0 S2 A16])) nss_compat/compat-pwd.c:555 -1
     (nil))
(insn 113 112 114 17 (parallel [
            (set (reg:HI 176 [ D.12998 ])
                (and:HI (reg:HI 177)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:555 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 175 [ D.12996 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 154 [ D.12997 ])) [5 *_28+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 114 113 115 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 176 [ D.12998 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:555 -1
     (nil))
(jump_insn 115 114 116 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 110)
            (pc))) nss_compat/compat-pwd.c:555 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 110)
(note 116 115 118 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 118 116 119 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.12995 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(insn 119 118 120 18 (set (reg:QI 179 [ D.12999 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(insn 120 119 121 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 179 [ D.12999 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(jump_insn 121 120 400 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) nss_compat/compat-pwd.c:562 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 117)
(note 400 121 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 122 400 123 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.12995 ])
            (const_int 35 [0x23]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(insn 123 122 124 19 (set (reg:QI 181 [ D.12999 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(insn 124 123 125 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 181 [ D.12999 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:562 -1
     (nil))
(jump_insn 125 124 126 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) nss_compat/compat-pwd.c:562 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 117)
(note 126 125 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 20 (set (reg:DI 37 r8)
        (reg/v/f:DI 163 [ errnop ])) nss_compat/compat-pwd.c:558 -1
     (nil))
(insn 128 127 129 20 (set (reg:DI 2 cx)
        (reg/v:DI 162 [ buflen ])) nss_compat/compat-pwd.c:558 -1
     (nil))
(insn 129 128 130 20 (set (reg:DI 1 dx)
        (reg/v/f:DI 161 [ buffer ])) nss_compat/compat-pwd.c:558 -1
     (nil))
(insn 130 129 131 20 (set (reg:DI 4 si)
        (reg/v/f:DI 160 [ result ])) nss_compat/compat-pwd.c:558 -1
     (nil))
(insn 131 130 132 20 (set (reg:DI 5 di)
        (reg/v/f:DI 115 [ p ])) nss_compat/compat-pwd.c:558 -1
     (nil))
(call_insn 132 131 133 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>) [0 _nss_files_parse_pwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:558 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 133 132 135 20 (set (reg/v:SI 125 [ parse_res ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:558 -1
     (nil))
(insn 135 133 136 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ parse_res ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:558 -1
     (nil))
(jump_insn 136 135 137 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 134)
            (pc))) nss_compat/compat-pwd.c:558 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 134)
(note 137 136 138 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 138 137 139 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 125 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:564 -1
     (nil))
(jump_insn 139 138 140 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) nss_compat/compat-pwd.c:564 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 145)
(note 140 139 141 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 22 (set (reg/f:DI 182)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) -1
     (nil))
(insn 142 141 143 22 (set (reg/f:DI 111 [ D.12993 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 182)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) -1
     (nil))
(jump_insn 143 142 144 22 (set (pc)
        (label_ref 89)) -1
     (nil)
 -> 89)
(barrier 144 143 145)
(code_label 145 144 146 23 174 "" [1 uses])
(note 146 145 147 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 23 (set (reg/f:DI 126 [ D.13000 ])
        (mem/f:DI (reg/v/f:DI 160 [ result ]) [3 result_34(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:568 -1
     (nil))
(insn 148 147 149 23 (set (reg:QI 127 [ D.12995 ])
        (mem:QI (reg/f:DI 126 [ D.13000 ]) [0 *_39+0 S1 A8])) nss_compat/compat-pwd.c:568 -1
     (nil))
(insn 149 148 150 23 (parallel [
            (set (reg:QI 183 [ D.13004 ])
                (plus:QI (reg:QI 127 [ D.12995 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:568 -1
     (nil))
(insn 150 149 151 23 (parallel [
            (set (reg:QI 184 [ D.13004 ])
                (and:QI (reg:QI 183 [ D.13004 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:568 -1
     (nil))
(insn 151 150 152 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 184 [ D.13004 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:568 -1
     (nil))
(jump_insn 152 151 153 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 377)
            (pc))) nss_compat/compat-pwd.c:568 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 377)
(note 153 152 154 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 154 153 155 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.12995 ])
            (const_int 45 [0x2d]))) nss_compat/compat-pwd.c:573 -1
     (nil))
(jump_insn 155 154 156 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) nss_compat/compat-pwd.c:573 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 215)
(note 156 155 157 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 25 (set (reg:QI 128 [ D.12995 ])
        (mem:QI (plus:DI (reg/f:DI 126 [ D.13000 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_39 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:573 -1
     (nil))
(insn 158 157 159 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.12995 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:573 -1
     (nil))
(jump_insn 159 158 160 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 249)
            (pc))) nss_compat/compat-pwd.c:573 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 249)
(note 160 159 161 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 126 [ D.13000 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_39 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:574 -1
     (nil))
(jump_insn 162 161 163 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:574 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 370)
(note 163 162 164 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 27 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:581 -1
     (nil))
(insn 165 164 166 27 (set (reg/f:DI 186)
        (reg:DI 185)) nss_compat/compat-pwd.c:581 -1
     (nil))
(insn 166 165 167 27 (set (reg:DI 187)
        (const_int 0 [0])) nss_compat/compat-pwd.c:581 -1
     (nil))
(insn 167 166 168 27 (set (reg:DI 188)
        (const_int 11 [0xb])) nss_compat/compat-pwd.c:581 -1
     (nil))
(insn 168 167 169 27 (parallel [
            (set (reg:DI 188)
                (const_int 0 [0]))
            (set (reg/f:DI 186)
                (plus:DI (ashift:DI (reg:DI 188)
                        (const_int 3 [0x3]))
                    (reg/f:DI 186)))
            (set (mem/c:BLK (reg/f:DI 186) [0 MEM[(void *)&netgrdata]+0 S88 A128])
                (const_int 0 [0]))
            (use (reg:DI 187))
            (use (reg:DI 188))
        ]) nss_compat/compat-pwd.c:581 -1
     (nil))
(insn 169 168 170 27 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:582 -1
     (nil))
(insn 170 169 171 27 (parallel [
            (set (reg:DI 190 [ D.13001 ])
                (plus:DI (reg/f:DI 126 [ D.13000 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:582 -1
     (nil))
(insn 171 170 172 27 (set (reg:DI 4 si)
        (reg:DI 189)) nss_compat/compat-pwd.c:582 -1
     (nil))
(insn 172 171 173 27 (set (reg:DI 5 di)
        (reg:DI 190 [ D.13001 ])) nss_compat/compat-pwd.c:582 -1
     (nil))
(call_insn 173 172 174 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2ba24870a6c0 __internal_setnetgrent>) [0 __internal_setnetgrent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:582 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2ba24870a6c0 __internal_setnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 174 173 175 27 (set (pc)
        (label_ref 188)) nss_compat/compat-pwd.c:582 -1
     (nil)
 -> 188)
(barrier 175 174 205)
(code_label 205 175 176 28 181 "" [1 uses])
(note 176 205 177 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 28 (set (reg/f:DI 131 [ D.13000 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [3 user+0 S8 A64])) nss_compat/compat-pwd.c:586 -1
     (nil))
(insn 178 177 179 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 131 [ D.13000 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:586 -1
     (nil))
(jump_insn 179 178 180 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) nss_compat/compat-pwd.c:586 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 186)
(note 180 179 181 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 131 [ D.13000 ]) [0 *_47+0 S1 A8])
            (const_int 45 [0x2d]))) nss_compat/compat-pwd.c:586 -1
     (nil))
(jump_insn 182 181 183 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) nss_compat/compat-pwd.c:586 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 186)
(note 183 182 184 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 30 (set (reg:DI 5 di)
        (reg/f:DI 131 [ D.13000 ])) nss_compat/compat-pwd.c:587 -1
     (nil))
(call_insn 185 184 186 30 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:587 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 186 185 187 31 180 "" [2 uses])
(note 187 186 188 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(code_label 188 187 189 32 179 "" [1 uses])
(note 189 188 190 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 32 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 191 190 192 32 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 192 191 193 32 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1144 [0xfffffffffffffb88])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 193 192 194 32 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 194 193 195 32 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1152 [0xfffffffffffffb80])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 195 194 196 32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 196 195 197 32 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/v/f:DI 163 [ errnop ])) nss_compat/compat-pwd.c:583 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 197 196 198 32 (set (reg:DI 38 r9)
        (const_int 1024 [0x400])) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 198 197 199 32 (set (reg:DI 37 r8)
        (reg:DI 191)) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 199 198 200 32 (set (reg:DI 2 cx)
        (reg:DI 192)) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 200 199 201 32 (set (reg:DI 1 dx)
        (reg:DI 193)) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 201 200 202 32 (set (reg:DI 4 si)
        (reg:DI 194)) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 202 201 203 32 (set (reg:DI 5 di)
        (reg:DI 195)) nss_compat/compat-pwd.c:583 -1
     (nil))
(call_insn 203 202 204 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2ba24870a870 __internal_getnetgrent_r>) [0 __internal_getnetgrent_r S1 A8])
            (const_int 16 [0x10]))) nss_compat/compat-pwd.c:583 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2ba24870a870 __internal_getnetgrent_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 204 203 206 32 (set (reg:SI 133 [ D.12994 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:583 -1
     (nil))
(insn 206 204 207 32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:583 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 207 206 208 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 133 [ D.12994 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:583 -1
     (nil))
(jump_insn 208 207 209 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) nss_compat/compat-pwd.c:583 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 205)
(note 209 208 210 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 33 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:589 -1
     (nil))
(insn 211 210 212 33 (set (reg:DI 5 di)
        (reg:DI 196)) nss_compat/compat-pwd.c:589 -1
     (nil))
(call_insn 212 211 213 33 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:589 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2ba24870a798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 213 212 214 33 (set (pc)
        (label_ref:DI 370)) 654 {jump}
     (nil)
 -> 370)
(barrier 214 213 215)
(code_label 215 214 216 34 176 "" [1 uses])
(note 216 215 217 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 127 [ D.12995 ])
            (const_int 43 [0x2b]))) nss_compat/compat-pwd.c:594 -1
     (nil))
(jump_insn 218 217 219 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:594 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 370)
(note 219 218 220 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 35 (set (reg:QI 134 [ D.12995 ])
        (mem:QI (plus:DI (reg/f:DI 126 [ D.13000 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_39 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:594 -1
     (nil))
(insn 221 220 222 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.12995 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:594 -1
     (nil))
(jump_insn 222 221 223 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 260)
            (pc))) nss_compat/compat-pwd.c:594 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 260)
(note 223 222 224 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 126 [ D.13000 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_39 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:595 -1
     (nil))
(jump_insn 225 224 226 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:595 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 370)
(note 226 225 227 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 37 (set (reg/f:DI 197)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:599 -1
     (nil))
(insn 228 227 229 37 (set (mem/c:QI (reg/f:DI 197) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:599 -1
     (nil))
(insn 229 228 230 37 (set (reg/f:DI 198)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:600 -1
     (nil))
(insn 230 229 231 37 (set (mem/c:QI (plus:DI (reg/f:DI 198)
                (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:600 -1
     (nil))
(insn 231 230 232 37 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:601 -1
     (nil))
(insn 232 231 233 37 (set (reg:DI 4 si)
        (reg/v/f:DI 160 [ result ])) nss_compat/compat-pwd.c:601 -1
     (nil))
(insn 233 232 234 37 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:601 -1
     (nil))
(call_insn 234 233 235 37 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:601 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 235 234 236 37 (set (reg/f:DI 200)
        (mem/f:DI (reg/v/f:DI 160 [ result ]) [3 result_34(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 236 235 237 37 (parallel [
            (set (reg:DI 199 [ D.13000 ])
                (plus:DI (reg/f:DI 200)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:603 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 160 [ result ]) [3 result_34(D)->pw_name+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 237 236 238 37 (set (reg:DI 37 r8)
        (reg/v/f:DI 163 [ errnop ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 238 237 239 37 (set (reg:DI 2 cx)
        (reg/v:DI 162 [ buflen ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 239 238 240 37 (set (reg:DI 1 dx)
        (reg/v/f:DI 161 [ buffer ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 240 239 241 37 (set (reg:DI 4 si)
        (reg:DI 199 [ D.13000 ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 241 240 242 37 (set (reg:DI 5 di)
        (reg/v/f:DI 160 [ result ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(call_insn 242 241 243 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2ba24890e288 getpwent_next_nss_netgr.constprop>) [0 getpwent_next_nss_netgr.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:603 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2ba24890e288 getpwent_next_nss_netgr.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 243 242 244 37 (set (reg/v:SI 138 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:603 -1
     (nil))
(insn 244 243 245 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 138 [ status ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:606 -1
     (nil))
(jump_insn 245 244 248 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:606 612 {*jcc_1}
     (int_list:REG_BR_PROB 3782 (nil))
 -> 370)
(note 248 245 31 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 31 248 246 38 (set (reg:SI 151 [ D.13006 ])
        (reg/v:SI 138 [ status ])) nss_compat/compat-pwd.c:603 -1
     (nil))
(jump_insn 246 31 247 38 (set (pc)
        (label_ref:DI 385)) nss_compat/compat-pwd.c:606 654 {jump}
     (nil)
 -> 385)
(barrier 247 246 249)
(code_label 249 247 250 39 177 "" [1 uses])
(note 250 249 251 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 39 (parallel [
            (set (reg:QI 201 [ D.12995 ])
                (and:QI (reg:QI 128 [ D.12995 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:614 -1
     (nil))
(insn 252 251 253 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 201 [ D.12995 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:614 -1
     (nil))
(jump_insn 253 252 254 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:614 612 {*jcc_1}
     (int_list:REG_BR_PROB 4877 (nil))
 -> 370)
(note 254 253 255 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 40 (parallel [
            (set (reg:DI 202 [ D.13001 ])
                (plus:DI (reg/f:DI 126 [ D.13000 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:616 -1
     (nil))
(insn 256 255 257 40 (set (reg:DI 5 di)
        (reg:DI 202 [ D.13001 ])) nss_compat/compat-pwd.c:616 -1
     (nil))
(call_insn 257 256 258 40 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:616 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 258 257 259 40 (set (pc)
        (label_ref:DI 370)) nss_compat/compat-pwd.c:616 654 {jump}
     (nil)
 -> 370)
(barrier 259 258 260)
(code_label 260 259 261 41 183 "" [1 uses])
(note 261 260 262 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 41 (parallel [
            (set (reg:QI 203 [ D.12995 ])
                (and:QI (reg:QI 134 [ D.12995 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:622 -1
     (nil))
(insn 263 262 264 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 203 [ D.12995 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:622 -1
     (nil))
(jump_insn 264 263 265 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 339)
            (pc))) nss_compat/compat-pwd.c:622 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 339)
(note 265 264 266 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 42 (set (reg:DI 204)
        (reg/f:DI 7 sp)) nss_compat/compat-pwd.c:623 -1
     (nil))
(insn 267 266 268 42 (set (reg/f:DI 140 [ D.13002 ])
        (reg:DI 204)) nss_compat/compat-pwd.c:623 -1
     (nil))
(insn 268 267 269 42 (set (reg:DI 5 di)
        (reg/f:DI 126 [ D.13000 ])) nss_compat/compat-pwd.c:624 -1
     (nil))
(call_insn/i 269 268 270 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:624 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2ba24813e948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 270 269 271 42 (set (reg:DI 206)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:624 -1
     (nil))
(insn 271 270 272 42 (set (reg:DI 207)
        (reg:DI 206)) nss_compat/compat-pwd.c:624 -1
     (nil))
(insn 272 271 273 42 (set (reg/v:DI 141 [ len ])
        (reg:DI 207)) nss_compat/compat-pwd.c:624 -1
     (nil))
(insn 273 272 274 42 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 274 273 275 42 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg/v:DI 141 [ len ])
                    (reg:DI 208)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 275 274 276 42 (parallel [
            (set (reg:DI 211)
                (udiv:DI (reg:DI 209)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 212)
                (umod:DI (reg:DI 209)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 276 275 277 42 (parallel [
            (set (reg:DI 213)
                (mult:DI (reg:DI 211)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 277 276 278 42 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 278 277 279 42 (set (reg:DI 214)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 279 278 280 42 (parallel [
            (set (reg/f:DI 215)
                (plus:DI (reg:DI 214)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 280 279 281 42 (set (reg/f:DI 142 [ buf.30 ])
        (reg/f:DI 215)) nss_compat/compat-pwd.c:625 -1
     (nil))
(insn 281 280 282 42 (parallel [
            (set (reg/f:DI 143 [ D.13000 ])
                (plus:DI (reg/f:DI 126 [ D.13000 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 282 281 283 42 (set (reg:DI 216)
        (reg/f:DI 142 [ buf.30 ])) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 283 282 284 42 (set (reg:DI 217)
        (reg/f:DI 143 [ D.13000 ])) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 284 283 285 42 (set (reg:DI 218)
        (reg/v:DI 141 [ len ])) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 285 284 286 42 (set (reg:DI 1 dx)
        (reg:DI 218)) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 286 285 287 42 (set (reg:DI 4 si)
        (reg:DI 217)) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 287 286 288 42 (set (reg:DI 5 di)
        (reg:DI 216)) nss_compat/compat-pwd.c:630 -1
     (nil))
(call_insn 288 287 289 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:630 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 289 288 290 42 (set (reg:DI 219)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 290 289 291 42 (set (reg:DI 220)
        (reg:DI 219)) nss_compat/compat-pwd.c:630 -1
     (nil))
(insn 291 290 292 42 (set (reg:DI 38 r9)
        (reg/v/f:DI 163 [ errnop ])) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 292 291 293 42 (set (reg:DI 37 r8)
        (reg/v:DI 162 [ buflen ])) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 293 292 294 42 (set (reg:DI 2 cx)
        (reg/v/f:DI 161 [ buffer ])) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 294 293 295 42 (set (reg:DI 1 dx)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 295 294 296 42 (set (reg:DI 4 si)
        (reg/v/f:DI 160 [ result ])) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 296 295 297 42 (set (reg:DI 5 di)
        (reg/f:DI 143 [ D.13000 ])) nss_compat/compat-pwd.c:631 -1
     (nil))
(call_insn 297 296 298 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>) [0 getpwnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:631 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 298 297 299 42 (set (reg/v:SI 144 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:631 -1
     (nil))
(insn 299 298 300 42 (set (reg:DI 5 di)
        (reg/f:DI 142 [ buf.30 ])) nss_compat/compat-pwd.c:633 -1
     (nil))
(call_insn 300 299 301 42 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:633 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2ba24890e438 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 301 300 302 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:635 -1
     (nil))
(jump_insn 302 301 303 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) nss_compat/compat-pwd.c:635 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 332)
(note 303 302 304 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 43 (parallel [
            (set (reg:SI 221 [ D.13006 ])
                (and:SI (reg/v:SI 144 [ status ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:637 -1
     (nil))
(insn 305 304 306 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 221 [ D.13006 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:637 -1
     (nil))
(jump_insn 306 305 307 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) nss_compat/compat-pwd.c:637 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 313)
(note 307 306 308 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 309 44 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:639 -1
     (nil))
(insn 309 308 310 44 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:639 -1
     (nil))
(insn 310 309 311 44 (set (reg/f:DI 7 sp)
        (reg/f:DI 140 [ D.13002 ])) nss_compat/compat-pwd.c:639 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 311 310 312 44 (set (pc)
        (label_ref:DI 370)) nss_compat/compat-pwd.c:639 654 {jump}
     (nil)
 -> 370)
(barrier 312 311 313)
(code_label 313 312 314 45 186 "" [1 uses])
(note 314 313 315 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 144 [ status ])
            (const_int -2 [0xfffffffffffffffe]))) nss_compat/compat-pwd.c:642 -1
     (nil))
(jump_insn 316 315 317 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 325)
            (pc))) nss_compat/compat-pwd.c:642 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 325)
(note 317 316 318 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 319 46 (parallel [
            (set (reg:DI 222)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:645 -1
     (nil))
(insn 319 318 320 46 (set (reg/f:DI 223)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:645 -1
     (nil))
(insn 320 319 321 46 (set (reg:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 223)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:645 -1
     (nil))
(insn 321 320 322 46 (set (reg:DI 4 si)
        (reg:DI 222)) nss_compat/compat-pwd.c:645 -1
     (nil))
(insn 322 321 323 46 (set (reg:DI 5 di)
        (reg:DI 224)) nss_compat/compat-pwd.c:645 -1
     (nil))
(call_insn 323 322 324 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:645 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 324 323 325 46 (set (mem:SI (reg/v/f:DI 163 [ errnop ]) [2 *errnop_5(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:646 -1
     (nil))
(code_label 325 324 326 47 187 "" [1 uses])
(note 326 325 327 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 47 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:648 -1
     (nil))
(insn 328 327 329 47 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:648 -1
     (nil))
(insn 329 328 32 47 (set (reg/f:DI 7 sp)
        (reg/f:DI 140 [ D.13002 ])) nss_compat/compat-pwd.c:648 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 32 329 330 47 (set (reg:SI 151 [ D.13006 ])
        (reg/v:SI 144 [ status ])) nss_compat/compat-pwd.c:648 -1
     (nil))
(jump_insn 330 32 331 47 (set (pc)
        (label_ref:DI 385)) nss_compat/compat-pwd.c:648 654 {jump}
     (nil)
 -> 385)
(barrier 331 330 332)
(code_label 332 331 333 48 185 "" [1 uses])
(note 333 332 334 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 48 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 335 334 336 48 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 336 335 337 48 (set (reg/f:DI 7 sp)
        (reg/f:DI 140 [ D.13002 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 337 336 338 48 (set (pc)
        (label_ref 377)) -1
     (nil)
 -> 377)
(barrier 338 337 339)
(code_label 339 338 340 49 184 "" [1 uses])
(note 340 339 341 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 134 [ D.12995 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:653 -1
     (nil))
(jump_insn 342 341 343 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 370)
            (pc))) nss_compat/compat-pwd.c:653 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 370)
(note 343 342 344 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 50 (set (reg/f:DI 225)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:655 -1
     (nil))
(insn 345 344 346 50 (set (mem/c:QI (plus:DI (reg/f:DI 225)
                (const_int 2 [0x2])) [8 ext_ent.files+0 S1 A16])
        (const_int 0 [0])) nss_compat/compat-pwd.c:655 -1
     (nil))
(insn 346 345 347 50 (set (reg/f:DI 226)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:656 -1
     (nil))
(insn 347 346 348 50 (set (mem/c:QI (plus:DI (reg/f:DI 226)
                (const_int 1 [0x1])) [8 ext_ent.first+0 S1 A8])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:656 -1
     (nil))
(insn 348 347 349 50 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:657 -1
     (nil))
(insn 349 348 350 50 (set (reg:DI 4 si)
        (reg/v/f:DI 160 [ result ])) nss_compat/compat-pwd.c:657 -1
     (nil))
(insn 350 349 351 50 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-pwd.c:657 -1
     (nil))
(call_insn 351 350 352 50 (call (mem:QI (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>) [0 copy_pwd_changes.isra.2 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:657 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_pwd_changes.isra.2") [flags 0x3]  <function_decl 0x2ba248855bd0 copy_pwd_changes.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 352 351 353 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getpwent_r") [flags 0x2]  <var_decl 0x2ba2486c1900 nss_getpwent_r>) [3 nss_getpwent_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:449 -1
     (nil))
(jump_insn 353 352 354 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 399)
            (pc))) nss_compat/compat-pwd.c:449 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 399)
(note 354 353 355 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 51 (set (reg/f:DI 227)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:453 -1
     (nil))
(insn 356 355 357 51 (set (reg:SI 151 [ D.13006 ])
        (mem/c:SI (plus:DI (reg/f:DI 227)
                (const_int 4 [0x4])) [9 ext_ent.setent_status+0 S4 A32])) nss_compat/compat-pwd.c:453 -1
     (nil))
(insn 357 356 358 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 151 [ D.13006 ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:453 -1
     (nil))
(jump_insn 358 357 359 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 385)
            (pc))) nss_compat/compat-pwd.c:453 612 {*jcc_1}
     (int_list:REG_BR_PROB 8629 (nil))
 -> 385)
(note 359 358 360 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 52 (set (reg:DI 2 cx)
        (reg/v/f:DI 163 [ errnop ])) -1
     (nil))
(insn 361 360 362 52 (set (reg:DI 1 dx)
        (reg/v:DI 162 [ buflen ])) -1
     (nil))
(insn 362 361 363 52 (set (reg:DI 4 si)
        (reg/v/f:DI 161 [ buffer ])) -1
     (nil))
(insn 363 362 364 52 (set (reg:DI 5 di)
        (reg/v/f:DI 160 [ result ])) -1
     (nil))
(call_insn 364 363 365 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_nss.part.3.constprop.9") [flags 0x3]  <function_decl 0x2ba24890e5e8 getpwent_next_nss.part.3.constprop>) [0 getpwent_next_nss.part.3.constprop S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_nss.part.3.constprop.9") [flags 0x3]  <function_decl 0x2ba24890e5e8 getpwent_next_nss.part.3.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 365 364 366 52 (set (reg:SI 151 [ D.13006 ])
        (reg:SI 0 ax)) -1
     (nil))
(jump_insn 366 365 367 52 (set (pc)
        (label_ref:DI 385)) 654 {jump}
     (nil)
 -> 385)
(barrier 367 366 395)
(code_label 395 367 394 54 190 "" [1 uses])
(note 394 395 30 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 30 394 396 54 (set (reg:SI 151 [ D.13006 ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:542 -1
     (nil))
(jump_insn 396 30 397 54 (set (pc)
        (label_ref:DI 385)) 654 {jump}
     (nil)
 -> 385)
(barrier 397 396 399)
(code_label 399 397 398 55 191 "" [1 uses])
(note 398 399 33 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 33 398 375 55 (set (reg:SI 151 [ D.13006 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:450 -1
     (nil))
(jump_insn 375 33 376 55 (set (pc)
        (label_ref 385)) nss_compat/compat-pwd.c:535 -1
     (nil)
 -> 385)
(barrier 376 375 377)
(code_label 377 376 378 57 175 "" [2 uses])
(note 378 377 34 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 34 378 385 57 (set (reg:SI 151 [ D.13006 ])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:663 -1
     (nil))
(code_label 385 34 386 59 189 "" [7 uses])
(note 386 385 387 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 387 386 391 59 (set (reg:SI 159 [ <retval> ])
        (reg:SI 151 [ D.13006 ])) -1
     (nil))
(insn 391 387 392 59 (set (reg/i:SI 0 ax)
        (reg:SI 159 [ <retval> ])) nss_compat/compat-pwd.c:664 -1
     (nil))
(insn 392 391 0 59 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:664 -1
     (nil))

;; Function _nss_compat_setpwent (_nss_compat_setpwent, funcdef_no=55, decl_uid=11235, cgraph_uid=55, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 36.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 90 [ stayopen ])
        (reg:SI 5 di [ stayopen ])) nss_compat/compat-pwd.c:295 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:298 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (reg:DI 92)) nss_compat/compat-pwd.c:298 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:298 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) nss_compat/compat-pwd.c:298 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 13)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:298 -1
     (nil))
(call_insn 12 11 13 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:298 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 13 12 14 5 215 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:300 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) nss_compat/compat-pwd.c:300 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 19)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 18 17 19 6 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:301 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 19 18 20 7 216 "" [1 uses])
(note 20 19 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:303 -1
     (nil))
(insn 22 21 23 7 (set (reg:SI 4 si)
        (reg/v:SI 90 [ stayopen ])) nss_compat/compat-pwd.c:303 -1
     (nil))
(insn 23 22 24 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:303 -1
     (nil))
(call_insn 24 23 25 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>) [0 internal_setpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:303 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 7 (set (reg/v:SI 88 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:303 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:305 -1
     (nil))
(insn 27 26 28 7 (set (reg/f:DI 93)
        (reg:DI 94)) nss_compat/compat-pwd.c:305 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil)))
(insn 28 27 29 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:305 -1
     (nil))
(jump_insn 29 28 30 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) nss_compat/compat-pwd.c:305 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 33)
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:305 -1
     (nil))
(call_insn 32 31 33 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:305 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 33 32 34 9 217 "" [1 uses])
(note 34 33 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 39 9 (set (reg:SI 89 [ <retval> ])
        (reg/v:SI 88 [ result ])) nss_compat/compat-pwd.c:307 -1
     (nil))
(insn 39 35 40 9 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) nss_compat/compat-pwd.c:308 -1
     (nil))
(insn 40 39 0 9 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:308 -1
     (nil))

;; Function _nss_compat_endpwent (_nss_compat_endpwent, funcdef_no=57, decl_uid=11237, cgraph_uid=57, symbol_order=68)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 34.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 91)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:344 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 90)
        (reg:DI 91)) nss_compat/compat-pwd.c:344 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:344 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) nss_compat/compat-pwd.c:344 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 12)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:344 -1
     (nil))
(call_insn 11 10 12 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:344 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 12 11 13 5 227 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:DI 87 [ D.13016 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_endpwent") [flags 0x2]  <var_decl 0x2ba2486c1990 nss_endpwent>) [3 nss_endpwent+0 S8 A64])) nss_compat/compat-pwd.c:346 -1
     (nil))
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.13016 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:346 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) nss_compat/compat-pwd.c:346 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 19)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 18 17 19 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ D.13016 ]) [0 *_6 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:347 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (nil))
(code_label 19 18 20 7 228 "" [1 uses])
(note 20 19 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:349 -1
     (nil))
(call_insn 22 21 23 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>) [0 internal_endpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:349 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 7 (set (reg/v:SI 88 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:349 -1
     (nil))
(insn 24 23 25 7 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:351 -1
     (nil))
(insn 25 24 26 7 (set (reg/f:DI 92)
        (reg:DI 93)) nss_compat/compat-pwd.c:351 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil)))
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:351 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) nss_compat/compat-pwd.c:351 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 31)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:351 -1
     (nil))
(call_insn 30 29 31 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:351 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 31 30 32 9 229 "" [1 uses])
(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 9 (set (reg:SI 89 [ <retval> ])
        (reg/v:SI 88 [ result ])) nss_compat/compat-pwd.c:353 -1
     (nil))
(insn 37 33 38 9 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) nss_compat/compat-pwd.c:354 -1
     (nil))
(insn 38 37 0 9 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:354 -1
     (nil))

;; Function _nss_compat_getpwent_r (_nss_compat_getpwent_r, funcdef_no=63, decl_uid=11254, cgraph_uid=63, symbol_order=74)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18
Edge 13->16 redirected to 23


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 14 failed.
Forwarding edge 10->11 to 20 failed.
Removing jump 110.
Merging block 23 into block 22...
Merged blocks 22 and 23.
Merged 22 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 14 failed.
Forwarding edge 10->11 to 20 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 94 [ pwd ])
        (reg:DI 5 di [ pwd ])) nss_compat/compat-pwd.c:694 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-pwd.c:694 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 96 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-pwd.c:694 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 97 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-pwd.c:694 -1
     (nil))
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 6 11 2 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:697 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 98)
        (reg:DI 99)) nss_compat/compat-pwd.c:697 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil)))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:697 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) nss_compat/compat-pwd.c:697 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 17)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:697 -1
     (nil))
(call_insn 16 15 17 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:697 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 17 16 18 5 241 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:700 -1
     (nil))
(jump_insn 20 19 21 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) nss_compat/compat-pwd.c:700 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 23)
(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 22 21 23 6 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:701 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 23 22 24 7 242 "" [1 uses])
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 7 (set (reg/f:DI 100)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:703 -1
     (nil))
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 100)
                    (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:703 -1
     (nil))
(jump_insn 27 26 42 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) nss_compat/compat-pwd.c:703 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 35)
(code_label 42 27 28 8 246 "" [1 uses])
(note 28 42 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg/f:DI 101)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:671 -1
     (nil))
(insn 30 29 31 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 101) [8 ext_ent.netgroup+0 S1 A256])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:671 -1
     (nil))
(jump_insn 31 30 34 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) nss_compat/compat-pwd.c:671 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 48)
(note 34 31 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 32 34 33 9 (set (pc)
        (label_ref 68)) nss_compat/compat-pwd.c:671 -1
     (nil)
 -> 68)
(barrier 33 32 35)
(code_label 35 33 36 10 243 "" [1 uses])
(note 36 35 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 10 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:704 -1
     (nil))
(insn 38 37 39 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:704 -1
     (nil))
(insn 39 38 40 10 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:704 -1
     (nil))
(call_insn 40 39 41 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>) [0 internal_setpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:704 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 41 40 43 10 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:704 -1
     (nil))
(insn 43 41 44 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:706 -1
     (nil))
(jump_insn 44 43 47 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) nss_compat/compat-pwd.c:706 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 42)
(note 47 44 45 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 45 47 46 11 (set (pc)
        (label_ref 98)) -1
     (nil)
 -> 98)
(barrier 46 45 48)
(code_label 48 46 49 12 244 "" [1 uses])
(note 49 48 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 12 (set (reg:DI 37 r8)
        (reg/v/f:DI 97 [ errnop ])) nss_compat/compat-pwd.c:677 -1
     (nil))
(insn 51 50 52 12 (set (reg:DI 2 cx)
        (reg/v:DI 96 [ buflen ])) nss_compat/compat-pwd.c:677 -1
     (nil))
(insn 52 51 53 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ buffer ])) nss_compat/compat-pwd.c:677 -1
     (nil))
(insn 53 52 54 12 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:677 -1
     (nil))
(insn 54 53 55 12 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ pwd ])) nss_compat/compat-pwd.c:677 -1
     (nil))
(call_insn 55 54 56 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2ba24890e288 getpwent_next_nss_netgr.constprop>) [0 getpwent_next_nss_netgr.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:677 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2ba24890e288 getpwent_next_nss_netgr.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 56 55 57 12 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:677 -1
     (nil))
(insn 57 56 58 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:679 -1
     (nil))
(jump_insn 58 57 59 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) nss_compat/compat-pwd.c:679 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 98)
(note 59 58 60 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 97 [ errnop ])) nss_compat/compat-pwd.c:680 -1
     (nil))
(insn 61 60 62 13 (set (reg:DI 1 dx)
        (reg/v:DI 96 [ buflen ])) nss_compat/compat-pwd.c:680 -1
     (nil))
(insn 62 61 63 13 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ buffer ])) nss_compat/compat-pwd.c:680 -1
     (nil))
(insn 63 62 64 13 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ pwd ])) nss_compat/compat-pwd.c:680 -1
     (nil))
(call_insn 64 63 65 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_file.constprop.6") [flags 0x3]  <function_decl 0x2ba24890e0d8 getpwent_next_file.constprop>) [0 getpwent_next_file.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:680 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_file.constprop.6") [flags 0x3]  <function_decl 0x2ba24890e0d8 getpwent_next_file.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 65 64 66 13 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:680 -1
     (nil))
(jump_insn 66 65 67 13 (set (pc)
        (label_ref 98)) nss_compat/compat-pwd.c:680 -1
     (nil)
 -> 98)
(barrier 67 66 68)
(code_label 68 67 69 14 245 "" [1 uses])
(note 69 68 70 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 14 (set (reg/f:DI 102)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:684 -1
     (nil))
(insn 71 70 72 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 102)
                    (const_int 2 [0x2])) [8 ext_ent.files+0 S1 A16])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:684 -1
     (nil))
(jump_insn 72 71 73 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) nss_compat/compat-pwd.c:684 -1
     (int_list:REG_BR_PROB 7929 (nil))
 -> 82)
(note 73 72 74 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 97 [ errnop ])) nss_compat/compat-pwd.c:685 -1
     (nil))
(insn 75 74 76 15 (set (reg:DI 1 dx)
        (reg/v:DI 96 [ buflen ])) nss_compat/compat-pwd.c:685 -1
     (nil))
(insn 76 75 77 15 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ buffer ])) nss_compat/compat-pwd.c:685 -1
     (nil))
(insn 77 76 78 15 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ pwd ])) nss_compat/compat-pwd.c:685 -1
     (nil))
(call_insn 78 77 79 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_file.constprop.6") [flags 0x3]  <function_decl 0x2ba24890e0d8 getpwent_next_file.constprop>) [0 getpwent_next_file.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:685 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_file.constprop.6") [flags 0x3]  <function_decl 0x2ba24890e0d8 getpwent_next_file.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 79 78 80 15 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:685 -1
     (nil))
(jump_insn 80 79 81 15 (set (pc)
        (label_ref 98)) nss_compat/compat-pwd.c:685 -1
     (nil)
 -> 98)
(barrier 81 80 82)
(code_label 82 81 83 16 248 "" [1 uses])
(note 83 82 84 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getpwent_r") [flags 0x2]  <var_decl 0x2ba2486c1900 nss_getpwent_r>) [3 nss_getpwent_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:449 -1
     (nil))
(jump_insn 85 84 86 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) nss_compat/compat-pwd.c:449 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 119)
(note 86 85 87 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 17 (set (reg/f:DI 103)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2ba2486c1b40 ext_ent>)) nss_compat/compat-pwd.c:453 -1
     (nil))
(insn 88 87 89 17 (set (reg/v:SI 87 [ result ])
        (mem/c:SI (plus:DI (reg/f:DI 103)
                (const_int 4 [0x4])) [9 ext_ent.setent_status+0 S4 A32])) nss_compat/compat-pwd.c:453 -1
     (nil))
(insn 89 88 90 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:453 -1
     (nil))
(jump_insn 90 89 91 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) nss_compat/compat-pwd.c:453 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 98)
(note 91 90 92 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 97 [ errnop ])) -1
     (nil))
(insn 93 92 94 18 (set (reg:DI 1 dx)
        (reg/v:DI 96 [ buflen ])) -1
     (nil))
(insn 94 93 95 18 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ buffer ])) -1
     (nil))
(insn 95 94 96 18 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ pwd ])) -1
     (nil))
(call_insn 96 95 97 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwent_next_nss.part.3.constprop.9") [flags 0x3]  <function_decl 0x2ba24890e5e8 getpwent_next_nss.part.3.constprop>) [0 getpwent_next_nss.part.3.constprop S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwent_next_nss.part.3.constprop.9") [flags 0x3]  <function_decl 0x2ba24890e5e8 getpwent_next_nss.part.3.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 97 96 116 18 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) -1
     (nil))
(jump_insn 116 97 117 18 (set (pc)
        (label_ref 98)) -1
     (nil)
 -> 98)
(barrier 117 116 119)
(code_label 119 117 118 19 250 "" [1 uses])
(note 118 119 7 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 7 118 98 19 (set (reg/v:SI 87 [ result ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:450 -1
     (nil))
(code_label 98 7 99 20 247 "" [6 uses])
(note 99 98 100 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 20 (set (reg:DI 105)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:709 -1
     (nil))
(insn 101 100 102 20 (set (reg/f:DI 104)
        (reg:DI 105)) nss_compat/compat-pwd.c:709 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil)))
(insn 102 101 103 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 104)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:709 -1
     (nil))
(jump_insn 103 102 104 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) nss_compat/compat-pwd.c:709 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 107)
(note 104 103 105 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 21 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:709 -1
     (nil))
(call_insn 106 105 107 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:709 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 107 106 108 22 249 "" [1 uses])
(note 108 107 109 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 113 22 (set (reg:SI 93 [ <retval> ])
        (reg/v:SI 87 [ result ])) nss_compat/compat-pwd.c:711 -1
     (nil))
(insn 113 109 114 22 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) nss_compat/compat-pwd.c:712 -1
     (nil))
(insn 114 113 0 22 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:712 -1
     (nil))

;; Function _nss_compat_getpwnam_r (_nss_compat_getpwnam_r, funcdef_no=65, decl_uid=11243, cgraph_uid=65, symbol_order=76)

Partition 0: size 168 align 16
	ent
Partition 1: size 16 align 16
	pos

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52
Edge 2->52 redirected to 62


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 10->11 to 60 failed.
Redirecting jump 71 from 57 to 60.
Forwarding edge 18->19 to 22 failed.
Edge 32->57 redirected to 60
Forwarding edge 32->33 to 12 failed.
Forwarding edge 32->33 to 12 failed.
Redirecting jump 178 from 58 to 12.
Edge 36->56 redirected to 12
Forwarding edge 37->38 to 12 failed.
Redirecting jump 202 from 58 to 12.
Edge 39->56 redirected to 12
Edge 41->56 redirected to 12
Edge 42->58 redirected to 12
Edge 43->58 redirected to 12
Redirecting jump 238 from 57 to 60.
Edge 45->56 redirected to 12
Forwarding edge 46->47 to 12 failed.
Redirecting jump 255 from 58 to 12.
Edge 49->56 redirected to 12
Edge 50->57 redirected to 60
Redirecting jump 286 from 57 to 60.
Edge 52->56 redirected to 12
Edge 53->59 redirected to 60
Forwarding edge 54->55 to 60 failed.
Redirecting jump 307 from 57 to 60.
deleting block 56
deleting block 57
deleting block 58
deleting block 59
Removing jump 307.
Removing jump 333.
Merging block 63 into block 62...
Merged blocks 62 and 63.
Merged 62 and 63 without moving.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 60 failed.
Forwarding edge 18->19 to 22 failed.
Forwarding edge 32->33 to 12 failed.
Forwarding edge 37->38 to 12 failed.
Forwarding edge 46->47 to 12 failed.
Forwarding edge 54->55 to 60 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 13 NOTE_INSN_DELETED)
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 138 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-pwd.c:854 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 139 [ pwd ])
        (reg:DI 4 si [ pwd ])) nss_compat/compat-pwd.c:854 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 140 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-pwd.c:854 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 141 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-pwd.c:854 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 142 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-pwd.c:854 -1
     (nil))
(note 7 6 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 144)
        (const_int 0 [0])) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 145)
        (const_int 21 [0x15])) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 145)
                (const_int 0 [0]))
            (set (reg/f:DI 143)
                (plus:DI (ashift:DI (reg:DI 145)
                        (const_int 3 [0x3]))
                    (reg/f:DI 143)))
            (set (mem/c:BLK (reg/f:DI 143) [7 ent+0 S168 A128])
                (const_int 0 [0]))
            (use (reg:DI 144))
            (use (reg:DI 145))
        ]) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -174 [0xffffffffffffff52])) [8 ent.files+0 S1 A16])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [9 ent.setent_status+0 S4 A32])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:856 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 147)
        (mem:QI (reg/v/f:DI 138 [ name ]) [0 *name_12(D)+0 S1 A8])) nss_compat/compat-pwd.c:859 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:QI 146 [ D.13067 ])
                (plus:QI (reg:QI 147)
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:859 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (reg/v/f:DI 138 [ name ]) [0 *name_12(D)+0 S1 A8])
            (const_int -43 [0xffffffffffffffd5]))
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:QI 148 [ D.13067 ])
                (and:QI (reg:QI 146 [ D.13067 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:859 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.13067 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:859 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 342)
            (pc))) nss_compat/compat-pwd.c:859 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 342)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:862 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 149)
        (reg:DI 150)) nss_compat/compat-pwd.c:862 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil)))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 149)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:862 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) nss_compat/compat-pwd.c:862 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 34)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:862 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:862 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 34 33 35 6 269 "" [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:864 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) nss_compat/compat-pwd.c:864 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 39 38 40 7 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:865 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 40 39 41 8 270 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:867 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 151)
        (reg:DI 152)) nss_compat/compat-pwd.c:867 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil)))
(insn 44 43 45 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:867 -1
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nss_compat/compat-pwd.c:867 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 49)
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:867 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:867 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 49 48 50 10 271 "" [1 uses])
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:869 -1
     (nil))
(insn 52 51 53 10 (set (reg:SI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:869 -1
     (nil))
(insn 53 52 54 10 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:869 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 5 di)
        (reg:DI 153)) nss_compat/compat-pwd.c:869 -1
     (nil))
(call_insn 55 54 56 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>) [0 internal_setpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:869 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 56 55 57 10 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:869 -1
     (nil))
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:871 -1
     (nil))
(jump_insn 58 57 61 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) nss_compat/compat-pwd.c:871 -1
     (int_list:REG_BR_PROB 1371 (nil))
 -> 63)
(note 61 58 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 61 60 11 (set (pc)
        (label_ref 325)) -1
     (nil)
 -> 325)
(barrier 60 59 312)
(code_label 312 60 62 12 294 "" [11 uses])
(note 62 312 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 63 62 64 13 272 "" [1 uses])
(note 64 63 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(code_label 153 64 65 14 284 "" [1 uses])
(note 65 153 66 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 14 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 141 [ buflen ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:730 -1
     (nil))
(jump_insn 67 66 68 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-pwd.c:730 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 73)
(code_label 68 67 69 15 275 ("erange") [1 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 8 15 (set (mem:SI (reg/v/f:DI 142 [ errnop ]) [2 *errnop_26(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:733 -1
     (nil))
(insn 8 70 71 15 (set (reg/v:SI 87 [ result ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:734 -1
     (nil))
(jump_insn 71 8 72 15 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-pwd.c:733 654 {jump}
     (nil)
 -> 325)
(barrier 72 71 73)
(code_label 73 72 74 16 274 "" [1 uses])
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 16 (parallel [
            (set (reg:DI 154 [ D.13058 ])
                (plus:DI (reg/v:DI 141 [ buflen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 76 75 77 16 (parallel [
            (set (reg/f:DI 132 [ D.13065 ])
                (plus:DI (reg/v/f:DI 140 [ buffer ])
                    (reg:DI 154 [ D.13058 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 77 76 136 16 (set (reg:SI 125 [ D.13060 ])
        (subreg:SI (reg/v:DI 141 [ buflen ]) 0)) -1
     (nil))
(code_label 136 77 78 17 283 "" [2 uses])
(note 78 136 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 17 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:737 -1
     (nil))
(insn 80 79 81 17 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:737 -1
     (nil))
(insn 81 80 82 17 (set (reg:DI 4 si)
        (reg:DI 155)) nss_compat/compat-pwd.c:737 -1
     (nil))
(insn 82 81 83 17 (set (reg:DI 5 di)
        (reg:DI 156)) nss_compat/compat-pwd.c:737 -1
     (nil))
(call_insn 83 82 84 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>) [0 fgetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:737 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 84 83 85 17 (set (mem:QI (reg/f:DI 132 [ D.13065 ]) [0 *_131+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:738 -1
     (nil))
(insn 85 84 86 17 (set (reg:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:739 -1
     (nil))
(insn 86 85 87 17 (set (reg:DI 1 dx)
        (reg:DI 157)) nss_compat/compat-pwd.c:739 -1
     (nil))
(insn 87 86 88 17 (set (reg:SI 4 si)
        (reg:SI 125 [ D.13060 ])) nss_compat/compat-pwd.c:739 -1
     (nil))
(insn 88 87 89 17 (set (reg:DI 5 di)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-pwd.c:739 -1
     (nil))
(call_insn 89 88 90 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>) [0 fgets_unlocked S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:739 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 90 89 91 17 (set (reg/v/f:DI 98 [ p ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:739 -1
     (nil))
(insn 91 90 92 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ p ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:740 -1
     (nil))
(jump_insn 92 91 93 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) nss_compat/compat-pwd.c:740 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 102)
(note 93 92 94 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 18 (set (reg/f:DI 94 [ D.13059 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 ent.stream+0 S8 A64])) nss_compat/compat-pwd.c:740 -1
     (nil))
(insn 95 94 96 18 (set (reg:SI 159)
        (mem:SI (reg/f:DI 94 [ D.13059 ]) [2 _40->_flags+0 S4 A64])) nss_compat/compat-pwd.c:740 -1
     (nil))
(insn 96 95 97 18 (parallel [
            (set (reg:SI 158 [ D.13060 ])
                (and:SI (reg:SI 159)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:740 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 94 [ D.13059 ]) [2 _40->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 97 96 98 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:740 -1
     (nil))
(jump_insn 98 97 101 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-pwd.c:740 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 284)
(note 101 98 99 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 99 101 100 19 (set (pc)
        (label_ref 108)) nss_compat/compat-pwd.c:740 -1
     (nil)
 -> 108)
(barrier 100 99 102)
(code_label 102 100 103 20 277 "" [1 uses])
(note 103 102 104 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 132 [ D.13065 ]) [0 *_131+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:744 -1
     (nil))
(jump_insn 105 104 106 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) nss_compat/compat-pwd.c:744 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 116)
(note 106 105 107 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 21 (set (reg/f:DI 94 [ D.13059 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 ent.stream+0 S8 A64])) -1
     (nil))
(code_label 108 107 109 22 279 ("erange_reset") [2 uses])
(note 109 108 110 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 22 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:747 -1
     (nil))
(insn 111 110 112 22 (set (reg:DI 4 si)
        (reg:DI 160)) nss_compat/compat-pwd.c:747 -1
     (nil))
(insn 112 111 113 22 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.13059 ])) nss_compat/compat-pwd.c:747 -1
     (nil))
(call_insn 113 112 114 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:747 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 114 113 115 22 (set (pc)
        (label_ref 68)) nss_compat/compat-pwd.c:747 -1
     (nil)
 -> 68)
(barrier 115 114 116)
(code_label 116 115 117 23 280 "" [1 uses])
(note 117 116 118 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 23 (set (mem:QI (reg/f:DI 132 [ D.13065 ]) [0 *_131+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:752 -1
     (nil))
(call_insn/u 119 118 120 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 120 119 121 23 (set (reg/f:DI 131 [ D.13068 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 121 120 122 23 (set (reg/f:DI 128 [ D.13062 ])
        (mem/f:DI (reg/f:DI 131 [ D.13068 ]) [3 *_130+0 S8 A64])) -1
     (nil))
(jump_insn 122 121 123 23 (set (pc)
        (label_ref 126)) -1
     (nil)
 -> 126)
(barrier 123 122 129)
(code_label 129 123 124 24 282 "" [1 uses])
(note 124 129 125 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 24 (parallel [
            (set (reg/v/f:DI 98 [ p ])
                (plus:DI (reg/v/f:DI 98 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:756 -1
     (nil))
(code_label 126 125 127 25 281 "" [1 uses])
(note 127 126 128 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 130 25 (set (reg:QI 99 [ D.13056 ])
        (mem:QI (reg/v/f:DI 98 [ p ]) [0 MEM[base: p_48, offset: 0B]+0 S1 A8])) nss_compat/compat-pwd.c:755 -1
     (nil))
(insn 130 128 131 25 (set (reg:DI 161 [ D.13061 ])
        (sign_extend:DI (reg:QI 99 [ D.13056 ]))) nss_compat/compat-pwd.c:755 -1
     (nil))
(insn 131 130 132 25 (set (reg:HI 163)
        (mem:HI (plus:DI (mult:DI (reg:DI 161 [ D.13061 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 128 [ D.13062 ])) [5 *_55+0 S2 A16])) nss_compat/compat-pwd.c:755 -1
     (nil))
(insn 132 131 133 25 (parallel [
            (set (reg:HI 162 [ D.13063 ])
                (and:HI (reg:HI 163)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:755 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 161 [ D.13061 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 128 [ D.13062 ])) [5 *_55+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 133 132 134 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 162 [ D.13063 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:755 -1
     (nil))
(jump_insn 134 133 135 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) nss_compat/compat-pwd.c:755 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 129)
(note 135 134 137 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 137 135 138 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.13056 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(insn 138 137 139 26 (set (reg:QI 165 [ D.13064 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(insn 139 138 140 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.13064 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(jump_insn 140 139 343 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-pwd.c:762 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 136)
(note 343 140 141 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 141 343 142 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.13056 ])
            (const_int 35 [0x23]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(insn 142 141 143 27 (set (reg:QI 167 [ D.13064 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(insn 143 142 144 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.13064 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:762 -1
     (nil))
(jump_insn 144 143 145 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-pwd.c:762 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 136)
(note 145 144 146 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 28 (set (reg:DI 37 r8)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-pwd.c:758 -1
     (nil))
(insn 147 146 148 28 (set (reg:DI 2 cx)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-pwd.c:758 -1
     (nil))
(insn 148 147 149 28 (set (reg:DI 1 dx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-pwd.c:758 -1
     (nil))
(insn 149 148 150 28 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-pwd.c:758 -1
     (nil))
(insn 150 149 151 28 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ p ])) nss_compat/compat-pwd.c:758 -1
     (nil))
(call_insn 151 150 152 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>) [0 _nss_files_parse_pwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:758 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 152 151 154 28 (set (reg/v:SI 108 [ parse_res ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:758 -1
     (nil))
(insn 154 152 155 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 108 [ parse_res ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:758 -1
     (nil))
(jump_insn 155 154 156 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) nss_compat/compat-pwd.c:758 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 153)
(note 156 155 157 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 108 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:764 -1
     (nil))
(jump_insn 158 157 159 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) nss_compat/compat-pwd.c:764 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 163)
(note 159 158 160 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 30 (set (reg/f:DI 94 [ D.13059 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 ent.stream+0 S8 A64])) -1
     (nil))
(jump_insn 161 160 162 30 (set (pc)
        (label_ref 108)) -1
     (nil)
 -> 108)
(barrier 162 161 163)
(code_label 163 162 164 31 285 "" [1 uses])
(note 164 163 165 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 31 (set (reg/f:DI 109 [ D.13065 ])
        (mem/f:DI (reg/v/f:DI 139 [ pwd ]) [3 pwd_23(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:769 -1
     (nil))
(insn 166 165 167 31 (set (reg:QI 110 [ D.13056 ])
        (mem:QI (reg/f:DI 109 [ D.13065 ]) [0 *_65+0 S1 A8])) nss_compat/compat-pwd.c:769 -1
     (nil))
(insn 167 166 168 31 (parallel [
            (set (reg:QI 168 [ D.13067 ])
                (plus:QI (reg:QI 110 [ D.13056 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:769 -1
     (nil))
(insn 168 167 169 31 (parallel [
            (set (reg:QI 169 [ D.13067 ])
                (and:QI (reg:QI 168 [ D.13067 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:769 -1
     (nil))
(insn 169 168 170 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ D.13067 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:769 -1
     (nil))
(jump_insn 170 169 171 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) nss_compat/compat-pwd.c:769 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 181)
(note 171 170 172 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 32 (set (reg:DI 4 si)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:771 -1
     (nil))
(insn 173 172 174 32 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.13065 ])) nss_compat/compat-pwd.c:771 -1
     (nil))
(call_insn/i 174 173 175 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:771 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 32 (set (reg:SI 111 [ D.13060 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:771 -1
     (nil))
(insn 176 175 177 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:771 -1
     (nil))
(jump_insn 177 176 180 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-pwd.c:771 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 325)
(note 180 177 178 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 178 180 179 33 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-pwd.c:771 654 {jump}
     (nil)
 -> 312)
(barrier 179 178 181)
(code_label 181 179 182 34 286 "" [1 uses])
(note 182 181 183 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.13056 ])
            (const_int 45 [0x2d]))) nss_compat/compat-pwd.c:778 -1
     (nil))
(jump_insn 184 183 185 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) nss_compat/compat-pwd.c:778 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 205)
(note 185 184 186 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 35 (set (reg:QI 112 [ D.13056 ])
        (mem:QI (plus:DI (reg/f:DI 109 [ D.13065 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_65 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:778 -1
     (nil))
(insn 187 186 188 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.13056 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:778 -1
     (nil))
(jump_insn 188 187 189 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) nss_compat/compat-pwd.c:778 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 241)
(note 189 188 190 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_65 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:779 -1
     (nil))
(jump_insn 191 190 192 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:779 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 192 191 193 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 37 (parallel [
            (set (reg:DI 170 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:781 -1
     (nil))
(insn 194 193 195 37 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:781 -1
     (nil))
(insn 195 194 196 37 (set (reg:DI 1 dx)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:781 -1
     (nil))
(insn 196 195 197 37 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:781 -1
     (nil))
(insn 197 196 198 37 (set (reg:DI 5 di)
        (reg:DI 170 [ D.13066 ])) nss_compat/compat-pwd.c:781 -1
     (nil))
(call_insn 198 197 199 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:781 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 199 198 200 37 (set (reg:SI 115 [ D.13060 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:781 -1
     (nil))
(insn 200 199 201 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:781 -1
     (nil))
(jump_insn 201 200 204 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-pwd.c:781 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 284)
(note 204 201 202 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 202 204 203 38 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-pwd.c:781 654 {jump}
     (nil)
 -> 312)
(barrier 203 202 205)
(code_label 205 203 206 39 288 "" [1 uses])
(note 206 205 207 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.13056 ])
            (const_int 43 [0x2b]))) nss_compat/compat-pwd.c:787 -1
     (nil))
(jump_insn 208 207 209 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:787 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 312)
(note 209 208 210 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 40 (set (reg:QI 116 [ D.13056 ])
        (mem:QI (plus:DI (reg/f:DI 109 [ D.13065 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_65 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:787 -1
     (nil))
(insn 211 210 212 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.13056 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:787 -1
     (nil))
(jump_insn 212 211 213 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) nss_compat/compat-pwd.c:787 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 258)
(note 213 212 214 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_65 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:788 -1
     (nil))
(jump_insn 215 214 216 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:788 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 216 215 217 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 42 (parallel [
            (set (reg:DI 171 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:792 -1
     (nil))
(insn 218 217 219 42 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:792 -1
     (nil))
(insn 219 218 220 42 (set (reg:DI 1 dx)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:792 -1
     (nil))
(insn 220 219 221 42 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:792 -1
     (nil))
(insn 221 220 222 42 (set (reg:DI 5 di)
        (reg:DI 171 [ D.13066 ])) nss_compat/compat-pwd.c:792 -1
     (nil))
(call_insn 222 221 223 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:792 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 223 222 224 42 (set (reg:SI 119 [ D.13060 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:792 -1
     (nil))
(insn 224 223 225 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:792 -1
     (nil))
(jump_insn 225 224 226 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:792 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 226 225 227 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 43 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 228 227 229 43 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 229 228 230 43 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 230 229 231 43 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 231 230 232 43 (set (reg:DI 1 dx)
        (reg:DI 172)) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 232 231 233 43 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 233 232 234 43 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(call_insn 234 233 235 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>) [0 getpwnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:794 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 235 234 236 43 (set (reg/v:SI 120 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:794 -1
     (nil))
(insn 236 235 237 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 120 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:797 -1
     (nil))
(jump_insn 237 236 240 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:797 612 {*jcc_1}
     (int_list:REG_BR_PROB 3782 (nil))
 -> 312)
(note 240 237 9 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 9 240 238 44 (set (reg/v:SI 87 [ result ])
        (reg/v:SI 120 [ result ])) nss_compat/compat-pwd.c:794 -1
     (nil))
(jump_insn 238 9 239 44 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-pwd.c:797 654 {jump}
     (nil)
 -> 325)
(barrier 239 238 241)
(code_label 241 239 242 45 289 "" [1 uses])
(note 242 241 243 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 45 (parallel [
            (set (reg:QI 173 [ D.13056 ])
                (and:QI (reg:QI 112 [ D.13056 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:807 -1
     (nil))
(insn 244 243 245 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ D.13056 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:807 -1
     (nil))
(jump_insn 245 244 246 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:807 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 312)
(note 246 245 247 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 46 (parallel [
            (set (reg:DI 174 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:809 -1
     (nil))
(insn 248 247 249 46 (parallel [
            (set (reg:DI 175 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:809 -1
     (nil))
(insn 249 248 250 46 (set (reg:DI 4 si)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:809 -1
     (nil))
(insn 250 249 251 46 (set (reg:DI 5 di)
        (reg:DI 175 [ D.13066 ])) nss_compat/compat-pwd.c:809 -1
     (nil))
(call_insn/i 251 250 252 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:809 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 46 (set (reg:SI 122 [ D.13060 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:809 -1
     (nil))
(insn 253 252 254 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:809 -1
     (nil))
(jump_insn 254 253 257 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-pwd.c:809 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 284)
(note 257 254 255 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 255 257 256 47 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-pwd.c:809 654 {jump}
     (nil)
 -> 312)
(barrier 256 255 258)
(code_label 258 256 259 48 291 "" [1 uses])
(note 259 258 260 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 48 (parallel [
            (set (reg:QI 176 [ D.13056 ])
                (and:QI (reg:QI 116 [ D.13056 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:817 -1
     (nil))
(insn 261 260 262 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.13056 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:817 -1
     (nil))
(jump_insn 262 261 263 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) nss_compat/compat-pwd.c:817 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 288)
(note 263 262 264 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 49 (parallel [
            (set (reg:DI 177 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:819 -1
     (nil))
(insn 265 264 266 49 (parallel [
            (set (reg:DI 178 [ D.13066 ])
                (plus:DI (reg/f:DI 109 [ D.13065 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:819 -1
     (nil))
(insn 266 265 267 49 (set (reg:DI 4 si)
        (reg:DI 178 [ D.13066 ])) nss_compat/compat-pwd.c:819 -1
     (nil))
(insn 267 266 268 49 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:819 -1
     (nil))
(call_insn/i 268 267 269 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:819 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 269 268 270 49 (set (reg:SI 124 [ D.13060 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:819 -1
     (nil))
(insn 270 269 271 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.13060 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:819 -1
     (nil))
(jump_insn 271 270 272 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:819 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 312)
(note 272 271 273 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 50 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 274 273 275 50 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 275 274 276 50 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 276 275 277 50 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 277 276 278 50 (set (reg:DI 1 dx)
        (reg:DI 179)) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 278 277 279 50 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 279 278 280 50 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:823 -1
     (nil))
(call_insn 280 279 281 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>) [0 getpwnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:823 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 281 280 282 50 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:823 -1
     (nil))
(insn 282 281 283 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:825 -1
     (nil))
(jump_insn 283 282 284 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-pwd.c:825 612 {*jcc_1}
     (int_list:REG_BR_PROB 8009 (nil))
 -> 325)
(code_label 284 283 285 51 278 "" [4 uses])
(note 285 284 10 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 10 285 286 51 (set (reg/v:SI 87 [ result ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:827 -1
     (nil))
(jump_insn 286 10 287 51 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-pwd.c:825 654 {jump}
     (nil)
 -> 325)
(barrier 287 286 288)
(code_label 288 287 289 52 292 "" [1 uses])
(note 289 288 290 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.13056 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:834 -1
     (nil))
(jump_insn 291 290 292 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-pwd.c:834 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 312)
(note 292 291 293 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 53 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 294 293 295 53 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 295 294 296 53 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 296 295 297 53 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 297 296 298 53 (set (reg:DI 1 dx)
        (reg:DI 180)) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 298 297 299 53 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 299 298 300 53 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-pwd.c:838 -1
     (nil))
(call_insn 300 299 301 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>) [0 getpwnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:838 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwnam_plususer") [flags 0x3]  <function_decl 0x2ba248771e58 getpwnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 301 300 302 53 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:838 -1
     (nil))
(insn 302 301 303 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:840 -1
     (nil))
(jump_insn 303 302 304 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-pwd.c:840 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 325)
(note 304 303 305 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:842 -1
     (nil))
(jump_insn 306 305 309 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-pwd.c:842 -1
     (int_list:REG_BR_PROB 1991 (nil))
 -> 284)
(note 309 306 325 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(code_label 325 309 326 60 273 "" [7 uses])
(note 326 325 327 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 60 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:874 -1
     (nil))
(insn 328 327 329 60 (set (reg:DI 5 di)
        (reg:DI 181)) nss_compat/compat-pwd.c:874 -1
     (nil))
(call_insn 329 328 12 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>) [0 internal_endpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:874 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 329 339 60 (set (reg:SI 88 [ D.13055 ])
        (reg/v:SI 87 [ result ])) nss_compat/compat-pwd.c:876 -1
     (nil))
(jump_insn 339 12 340 60 (set (pc)
        (label_ref 330)) nss_compat/compat-pwd.c:876 -1
     (nil)
 -> 330)
(barrier 340 339 342)
(code_label 342 340 341 61 295 "" [1 uses])
(note 341 342 11 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 11 341 330 61 (set (reg:SI 88 [ D.13055 ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:860 -1
     (nil))
(code_label 330 11 331 62 268 "" [1 uses])
(note 331 330 332 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 336 62 (set (reg:SI 137 [ <retval> ])
        (reg:SI 88 [ D.13055 ])) -1
     (nil))
(insn 336 332 337 62 (set (reg/i:SI 0 ax)
        (reg:SI 137 [ <retval> ])) nss_compat/compat-pwd.c:877 -1
     (nil))
(insn 337 336 0 62 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:877 -1
     (nil))

;; Function _nss_compat_getpwuid_r (_nss_compat_getpwuid_r, funcdef_no=68, decl_uid=11249, cgraph_uid=68, symbol_order=79)

Partition 0: size 168 align 16
	ent
Partition 1: size 16 align 16
	pos

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52

;; Generating RTL for gimple basic block 53

;; Generating RTL for gimple basic block 54

;; Generating RTL for gimple basic block 55

;; Generating RTL for gimple basic block 56

;; Generating RTL for gimple basic block 57

;; Generating RTL for gimple basic block 58

;; Generating RTL for gimple basic block 59

;; Generating RTL for gimple basic block 60

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62
Edge 40->42 redirected to 70
Edge 50->53 redirected to 71


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 71 failed.
Redirecting jump 66 from 68 to 71.
Forwarding edge 17->18 to 21 failed.
Edge 31->68 redirected to 71
Forwarding edge 31->32 to 11 failed.
Forwarding edge 31->32 to 11 failed.
Redirecting jump 169 from 69 to 11.
Edge 35->66 redirected to 11
Redirecting jump 234 from 68 to 71.
Redirecting jump 241 from 69 to 11.
Edge 40->66 redirected to 11
Edge 42->66 redirected to 11
Redirecting jump 296 from 69 to 11.
Forwarding edge 46->47 to 49 failed.
Redirecting jump 317 from 68 to 71.
Edge 50->66 redirected to 11
Redirecting jump 374 from 68 to 71.
Redirecting jump 381 from 69 to 11.
Redirecting jump 441 from 69 to 11.
Redirecting jump 448 from 68 to 71.
Edge 62->66 redirected to 11
Edge 63->70 redirected to 71
Forwarding edge 64->65 to 71 failed.
Redirecting jump 467 from 68 to 71.
deleting block 66
Merging block 68 into block 67...
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
deleting block 69
deleting block 70
Removing jump 479.
Removing jump 493.
Merging block 72 into block 71...
Merged blocks 71 and 72.
Merged 71 and 72 without moving.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 71 failed.
Forwarding edge 17->18 to 21 failed.
Forwarding edge 31->32 to 11 failed.
Forwarding edge 46->47 to 49 failed.
Forwarding edge 64->65 to 71 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 14 NOTE_INSN_DELETED)
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v:SI 154 [ uid ])
        (reg:SI 5 di [ uid ])) nss_compat/compat-pwd.c:1096 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 155 [ pwd ])
        (reg:DI 4 si [ pwd ])) nss_compat/compat-pwd.c:1096 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 156 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-pwd.c:1096 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 157 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-pwd.c:1096 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 158 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-pwd.c:1096 -1
     (nil))
(note 7 6 16 2 NOTE_INSN_FUNCTION_BEG)
(insn 16 7 17 2 (parallel [
            (set (reg/f:DI 159)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 160)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 161)
        (const_int 21 [0x15])) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:DI 161)
                (const_int 0 [0]))
            (set (reg/f:DI 159)
                (plus:DI (ashift:DI (reg:DI 161)
                        (const_int 3 [0x3]))
                    (reg/f:DI 159)))
            (set (mem/c:BLK (reg/f:DI 159) [7 ent+0 S168 A128])
                (const_int 0 [0]))
            (use (reg:DI 160))
            (use (reg:DI 161))
        ]) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -174 [0xffffffffffffff52])) [8 ent.files+0 S1 A16])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 21 20 22 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -172 [0xffffffffffffff54])) [9 ent.setent_status+0 S4 A32])
        (const_int 1 [0x1])) nss_compat/compat-pwd.c:1098 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 163)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:1101 -1
     (nil))
(insn 23 22 24 2 (set (reg/f:DI 162)
        (reg:DI 163)) nss_compat/compat-pwd.c:1101 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil)))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 162)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1101 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) nss_compat/compat-pwd.c:1101 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 29)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:1101 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1101 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2ba2486bfbd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 29 28 30 5 340 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2ba2486c16c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1103 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) nss_compat/compat-pwd.c:1103 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 35)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 34 33 35 6 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1104 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2ba248764ca8 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 35 34 36 7 341 "" [1 uses])
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 165)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-pwd.c:1106 -1
     (nil))
(insn 38 37 39 7 (set (reg/f:DI 164)
        (reg:DI 165)) nss_compat/compat-pwd.c:1106 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil)))
(insn 39 38 40 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 164)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1106 -1
     (nil))
(jump_insn 40 39 41 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 44)
            (pc))) nss_compat/compat-pwd.c:1106 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 44)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2ba2486c1cf0 lock>)) nss_compat/compat-pwd.c:1106 -1
     (nil))
(call_insn 43 42 44 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1106 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2ba2486bfca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 44 43 45 9 342 "" [1 uses])
(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 9 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1108 -1
     (nil))
(insn 47 46 48 9 (set (reg:SI 1 dx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1108 -1
     (nil))
(insn 48 47 49 9 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1108 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 5 di)
        (reg:DI 166)) nss_compat/compat-pwd.c:1108 -1
     (nil))
(call_insn 50 49 51 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>) [0 internal_setpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setpwent") [flags 0x3]  <function_decl 0x2ba248771360 internal_setpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 51 50 52 9 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1108 -1
     (nil))
(insn 52 51 53 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:1110 -1
     (nil))
(jump_insn 53 52 56 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) nss_compat/compat-pwd.c:1110 -1
     (int_list:REG_BR_PROB 1990 (nil))
 -> 58)
(note 56 53 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 54 56 55 10 (set (pc)
        (label_ref 487)) -1
     (nil)
 -> 487)
(barrier 55 54 472)
(code_label 472 55 57 11 372 "" [10 uses])
(note 57 472 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(code_label 58 57 59 12 343 "" [1 uses])
(note 59 58 148 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 148 59 60 13 355 "" [1 uses])
(note 60 148 61 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 13 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 157 [ buflen ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:937 -1
     (nil))
(jump_insn 62 61 63 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) nss_compat/compat-pwd.c:937 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 68)
(code_label 63 62 64 14 346 ("erange") [1 uses])
(note 64 63 65 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 10 14 (set (mem:SI (reg/v/f:DI 158 [ errnop ]) [2 *errnop_20(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-pwd.c:940 -1
     (nil))
(insn 10 65 66 14 (set (reg/v:SI 87 [ result ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-pwd.c:941 -1
     (nil))
(jump_insn 66 10 67 14 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:940 654 {jump}
     (nil)
 -> 487)
(barrier 67 66 68)
(code_label 68 67 69 15 345 "" [1 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 15 (parallel [
            (set (reg:DI 167 [ D.13141 ])
                (plus:DI (reg/v:DI 157 [ buflen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 71 70 72 15 (parallel [
            (set (reg/f:DI 150 [ D.13137 ])
                (plus:DI (reg/v/f:DI 156 [ buffer ])
                    (reg:DI 167 [ D.13141 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 72 71 131 15 (set (reg:SI 148 [ D.13131 ])
        (subreg:SI (reg/v:DI 157 [ buflen ]) 0)) -1
     (nil))
(code_label 131 72 73 16 354 "" [2 uses])
(note 73 131 74 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 16 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:944 -1
     (nil))
(insn 75 74 76 16 (set (reg:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 MEM[(struct FILE * *)&ent + 8B]+0 S8 A64])) nss_compat/compat-pwd.c:944 -1
     (nil))
(insn 76 75 77 16 (set (reg:DI 4 si)
        (reg:DI 168)) nss_compat/compat-pwd.c:944 -1
     (nil))
(insn 77 76 78 16 (set (reg:DI 5 di)
        (reg:DI 169)) nss_compat/compat-pwd.c:944 -1
     (nil))
(call_insn 78 77 79 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>) [0 fgetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:944 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2ba24863f510 fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 79 78 80 16 (set (mem:QI (reg/f:DI 150 [ D.13137 ]) [0 *_178+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:945 -1
     (nil))
(insn 80 79 81 16 (set (reg:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 MEM[(struct FILE * *)&ent + 8B]+0 S8 A64])) nss_compat/compat-pwd.c:946 -1
     (nil))
(insn 81 80 82 16 (set (reg:DI 1 dx)
        (reg:DI 170)) nss_compat/compat-pwd.c:946 -1
     (nil))
(insn 82 81 83 16 (set (reg:SI 4 si)
        (reg:SI 148 [ D.13131 ])) nss_compat/compat-pwd.c:946 -1
     (nil))
(insn 83 82 84 16 (set (reg:DI 5 di)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:946 -1
     (nil))
(call_insn 84 83 85 16 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>) [0 fgets_unlocked S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:946 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2ba2486335e8 fgets_unlocked>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 85 84 86 16 (set (reg/v/f:DI 96 [ p ])
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:946 -1
     (nil))
(insn 86 85 87 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 96 [ p ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:947 -1
     (nil))
(jump_insn 87 86 88 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) nss_compat/compat-pwd.c:947 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 97)
(note 88 87 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 17 (set (reg/f:DI 92 [ D.13130 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 MEM[(struct FILE * *)&ent + 8B]+0 S8 A64])) nss_compat/compat-pwd.c:947 -1
     (nil))
(insn 90 89 91 17 (set (reg:SI 172)
        (mem:SI (reg/f:DI 92 [ D.13130 ]) [2 _34->_flags+0 S4 A64])) nss_compat/compat-pwd.c:947 -1
     (nil))
(insn 91 90 92 17 (parallel [
            (set (reg:SI 171 [ D.13131 ])
                (and:SI (reg:SI 172)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:947 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 92 [ D.13130 ]) [2 _34->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 92 91 93 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 171 [ D.13131 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:947 -1
     (nil))
(jump_insn 93 92 96 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) nss_compat/compat-pwd.c:947 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 475)
(note 96 93 94 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 94 96 95 18 (set (pc)
        (label_ref 103)) nss_compat/compat-pwd.c:947 -1
     (nil)
 -> 103)
(barrier 95 94 97)
(code_label 97 95 98 19 348 "" [1 uses])
(note 98 97 99 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 150 [ D.13137 ]) [0 *_178+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:950 -1
     (nil))
(jump_insn 100 99 101 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) nss_compat/compat-pwd.c:950 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 111)
(note 101 100 102 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 20 (set (reg/f:DI 92 [ D.13130 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 MEM[(struct FILE * *)&ent + 8B]+0 S8 A64])) -1
     (nil))
(code_label 103 102 104 21 350 ("erange_reset") [2 uses])
(note 104 103 105 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 21 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:953 -1
     (nil))
(insn 106 105 107 21 (set (reg:DI 4 si)
        (reg:DI 173)) nss_compat/compat-pwd.c:953 -1
     (nil))
(insn 107 106 108 21 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.13130 ])) nss_compat/compat-pwd.c:953 -1
     (nil))
(call_insn 108 107 109 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:953 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2ba24863f5e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 109 108 110 21 (set (pc)
        (label_ref 63)) nss_compat/compat-pwd.c:953 -1
     (nil)
 -> 63)
(barrier 110 109 111)
(code_label 111 110 112 22 351 "" [1 uses])
(note 112 111 113 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 22 (set (mem:QI (reg/f:DI 150 [ D.13137 ]) [0 *_178+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-pwd.c:958 -1
     (nil))
(call_insn/u 114 113 115 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2ba248218288 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 115 114 116 22 (set (reg/f:DI 151 [ D.13140 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 116 115 117 22 (set (reg/f:DI 149 [ D.13134 ])
        (mem/f:DI (reg/f:DI 151 [ D.13140 ]) [3 *_192+0 S8 A64])) -1
     (nil))
(jump_insn 117 116 118 22 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
(barrier 118 117 124)
(code_label 124 118 119 23 353 "" [1 uses])
(note 119 124 120 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 23 (parallel [
            (set (reg/v/f:DI 96 [ p ])
                (plus:DI (reg/v/f:DI 96 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:962 -1
     (nil))
(code_label 121 120 122 24 352 "" [1 uses])
(note 122 121 123 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 125 24 (set (reg:QI 97 [ D.13132 ])
        (mem:QI (reg/v/f:DI 96 [ p ]) [0 MEM[base: p_42, offset: 0B]+0 S1 A8])) nss_compat/compat-pwd.c:961 -1
     (nil))
(insn 125 123 126 24 (set (reg:DI 174 [ D.13133 ])
        (sign_extend:DI (reg:QI 97 [ D.13132 ]))) nss_compat/compat-pwd.c:961 -1
     (nil))
(insn 126 125 127 24 (set (reg:HI 176)
        (mem:HI (plus:DI (mult:DI (reg:DI 174 [ D.13133 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 149 [ D.13134 ])) [5 *_49+0 S2 A16])) nss_compat/compat-pwd.c:961 -1
     (nil))
(insn 127 126 128 24 (parallel [
            (set (reg:HI 175 [ D.13135 ])
                (and:HI (reg:HI 176)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:961 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 174 [ D.13133 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 149 [ D.13134 ])) [5 *_49+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 128 127 129 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 175 [ D.13135 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:961 -1
     (nil))
(jump_insn 129 128 130 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 124)
            (pc))) nss_compat/compat-pwd.c:961 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 124)
(note 130 129 132 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 132 130 133 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13132 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(insn 133 132 134 25 (set (reg:QI 178 [ D.13136 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(insn 134 133 135 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ D.13136 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(jump_insn 135 134 506 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) nss_compat/compat-pwd.c:968 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 131)
(note 506 135 136 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 136 506 137 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ D.13132 ])
            (const_int 35 [0x23]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(insn 137 136 138 26 (set (reg:QI 180 [ D.13136 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(insn 138 137 139 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.13136 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:968 -1
     (nil))
(jump_insn 139 138 140 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) nss_compat/compat-pwd.c:968 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 131)
(note 140 139 141 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 27 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:964 -1
     (nil))
(insn 142 141 143 27 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:964 -1
     (nil))
(insn 143 142 144 27 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:964 -1
     (nil))
(insn 144 143 145 27 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:964 -1
     (nil))
(insn 145 144 146 27 (set (reg:DI 5 di)
        (reg/v/f:DI 96 [ p ])) nss_compat/compat-pwd.c:964 -1
     (nil))
(call_insn 146 145 147 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>) [0 _nss_files_parse_pwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:964 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_pwent") [flags 0x41]  <function_decl 0x2ba24874cd80 _nss_files_parse_pwent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 147 146 149 27 (set (reg/v:SI 106 [ parse_res ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:964 -1
     (nil))
(insn 149 147 150 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ parse_res ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:964 -1
     (nil))
(jump_insn 150 149 151 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) nss_compat/compat-pwd.c:964 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 148)
(note 151 150 152 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 106 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-pwd.c:970 -1
     (nil))
(jump_insn 153 152 154 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) nss_compat/compat-pwd.c:970 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 158)
(note 154 153 155 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 29 (set (reg/f:DI 92 [ D.13130 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -168 [0xffffffffffffff58])) [3 MEM[(struct FILE * *)&ent + 8B]+0 S8 A64])) -1
     (nil))
(jump_insn 156 155 157 29 (set (pc)
        (label_ref 103)) -1
     (nil)
 -> 103)
(barrier 157 156 158)
(code_label 158 157 159 30 356 "" [1 uses])
(note 159 158 160 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 30 (set (reg/f:DI 108 [ D.13137 ])
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:975 -1
     (nil))
(insn 161 160 162 30 (set (reg:QI 109 [ D.13132 ])
        (mem:QI (reg/f:DI 108 [ D.13137 ]) [0 *_59+0 S1 A8])) nss_compat/compat-pwd.c:975 -1
     (nil))
(insn 162 161 163 30 (parallel [
            (set (reg:QI 181 [ D.13129 ])
                (plus:QI (reg:QI 109 [ D.13132 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:975 -1
     (nil))
(insn 163 162 164 30 (parallel [
            (set (reg:QI 182 [ D.13129 ])
                (and:QI (reg:QI 181 [ D.13129 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:975 -1
     (nil))
(insn 164 163 165 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 182 [ D.13129 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:975 -1
     (nil))
(jump_insn 165 164 166 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) nss_compat/compat-pwd.c:975 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 172)
(note 166 165 167 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 154 [ uid ])
            (mem:SI (plus:DI (reg/v/f:DI 155 [ pwd ])
                    (const_int 16 [0x10])) [2 pwd_17(D)->pw_uid+0 S4 A64]))) nss_compat/compat-pwd.c:977 -1
     (nil))
(jump_insn 168 167 171 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 487)
            (pc))) nss_compat/compat-pwd.c:977 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 487)
(note 171 168 169 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 169 171 170 32 (set (pc)
        (label_ref:DI 472)) nss_compat/compat-pwd.c:977 654 {jump}
     (nil)
 -> 472)
(barrier 170 169 172)
(code_label 172 170 173 33 357 "" [1 uses])
(note 173 172 174 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.13132 ])
            (const_int 45 [0x2d]))) nss_compat/compat-pwd.c:984 -1
     (nil))
(jump_insn 175 174 176 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) nss_compat/compat-pwd.c:984 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 243)
(note 176 175 177 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 177 176 178 34 (set (reg:QI 111 [ D.13132 ])
        (mem:QI (plus:DI (reg/f:DI 108 [ D.13137 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_59 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:984 -1
     (nil))
(insn 178 177 179 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 111 [ D.13132 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:984 -1
     (nil))
(jump_insn 179 178 180 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) nss_compat/compat-pwd.c:984 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 319)
(note 180 179 181 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_59 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:985 -1
     (nil))
(jump_insn 182 181 183 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nss_compat/compat-pwd.c:985 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 472)
(note 183 182 184 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 36 (set (reg:DI 183)
        (reg/f:DI 7 sp)) nss_compat/compat-pwd.c:986 -1
     (nil))
(insn 185 184 192 36 (set (reg/f:DI 113 [ D.13139 ])
        (reg:DI 183)) nss_compat/compat-pwd.c:986 -1
     (nil))
(insn 192 185 186 36 (set (reg:DI 184)
        (reg/f:DI 108 [ D.13137 ])) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 186 192 187 36 (set (reg:DI 188)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 187 186 188 36 (set (reg:DI 187)
        (reg:DI 184)) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 188 187 189 36 (set (reg:QI 189)
        (const_int 0 [0])) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 189 188 190 36 (parallel [
            (set (reg:DI 185)
                (unspec:DI [
                        (mem:BLK (reg:DI 187) [0  A8])
                        (reg:QI 189)
                        (const_int 1 [0x1])
                        (reg:DI 188)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 187))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 190 189 191 36 (set (reg:DI 186)
        (not:DI (reg:DI 185))) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 191 190 193 36 (parallel [
            (set (reg:DI 114 [ D.13133 ])
                (plus:DI (reg:DI 186)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 193 191 194 36 (parallel [
            (set (reg/v:DI 115 [ len ])
                (plus:DI (reg:DI 114 [ D.13133 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:988 -1
     (nil))
(insn 194 193 195 36 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 195 194 196 36 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/v:DI 115 [ len ])
                    (reg:DI 190)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 196 195 197 36 (parallel [
            (set (reg:DI 193)
                (udiv:DI (reg:DI 191)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 194)
                (umod:DI (reg:DI 191)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 197 196 198 36 (parallel [
            (set (reg:DI 195)
                (mult:DI (reg:DI 193)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 198 197 199 36 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 199 198 200 36 (set (reg:DI 196)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 200 199 201 36 (parallel [
            (set (reg/f:DI 197)
                (plus:DI (reg:DI 196)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 201 200 202 36 (set (reg/f:DI 116 [ buf.42 ])
        (reg/f:DI 197)) nss_compat/compat-pwd.c:989 -1
     (nil))
(insn 202 201 203 36 (parallel [
            (set (reg:DI 198 [ D.13137 ])
                (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 203 202 204 36 (set (reg:DI 199)
        (reg/f:DI 116 [ buf.42 ])) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 204 203 205 36 (set (reg:DI 200)
        (reg:DI 198 [ D.13137 ])) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 205 204 206 36 (set (reg:DI 201)
        (reg/v:DI 115 [ len ])) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 206 205 207 36 (set (reg:DI 1 dx)
        (reg:DI 201)) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 207 206 208 36 (set (reg:DI 4 si)
        (reg:DI 200)) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 208 207 209 36 (set (reg:DI 5 di)
        (reg:DI 199)) nss_compat/compat-pwd.c:992 -1
     (nil))
(call_insn 209 208 210 36 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:992 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 210 209 211 36 (set (reg:DI 202)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 211 210 212 36 (set (reg:DI 203)
        (reg:DI 202)) nss_compat/compat-pwd.c:992 -1
     (nil))
(insn 212 211 213 36 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:994 -1
     (nil))
(insn 213 212 214 36 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:994 -1
     (nil))
(insn 214 213 215 36 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:994 -1
     (nil))
(insn 215 214 216 36 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:994 -1
     (nil))
(insn 216 215 217 36 (set (reg:SI 5 di)
        (reg/v:SI 154 [ uid ])) nss_compat/compat-pwd.c:994 -1
     (nil))
(call_insn 217 216 218 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>) [0 getpwuid_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:994 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 218 217 219 36 (set (reg/v:SI 118 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:994 -1
     (nil))
(insn 219 218 220 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 118 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:995 -1
     (nil))
(jump_insn 220 219 221 36 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) nss_compat/compat-pwd.c:995 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 236)
(note 221 220 222 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 37 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:996 -1
     (nil))
(insn 223 222 224 37 (set (reg:DI 1 dx)
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:996 -1
     (nil))
(insn 224 223 225 37 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:996 -1
     (nil))
(insn 225 224 226 37 (set (reg:DI 5 di)
        (reg/f:DI 116 [ buf.42 ])) nss_compat/compat-pwd.c:996 -1
     (nil))
(call_insn 226 225 227 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:996 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 227 226 228 37 (set (reg:SI 120 [ D.13131 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:996 -1
     (nil))
(insn 228 227 229 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.13131 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:995 -1
     (nil))
(jump_insn 229 228 230 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) nss_compat/compat-pwd.c:995 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 236)
(note 230 229 231 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 38 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:997 -1
     (nil))
(insn 232 231 233 38 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:997 -1
     (nil))
(insn 233 232 11 38 (set (reg/f:DI 7 sp)
        (reg/f:DI 113 [ D.13139 ])) nss_compat/compat-pwd.c:997 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 11 233 234 38 (set (reg/v:SI 87 [ result ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:997 -1
     (nil))
(jump_insn 234 11 235 38 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:997 654 {jump}
     (nil)
 -> 487)
(barrier 235 234 236)
(code_label 236 235 237 39 362 "" [2 uses])
(note 237 236 238 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 39 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:999 -1
     (nil))
(insn 239 238 240 39 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:999 -1
     (nil))
(insn 240 239 241 39 (set (reg/f:DI 7 sp)
        (reg/f:DI 113 [ D.13139 ])) nss_compat/compat-pwd.c:999 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 241 240 242 39 (set (pc)
        (label_ref:DI 472)) nss_compat/compat-pwd.c:999 654 {jump}
     (nil)
 -> 472)
(barrier 242 241 243)
(code_label 243 242 244 40 359 "" [1 uses])
(note 244 243 245 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ D.13132 ])
            (const_int 43 [0x2b]))) nss_compat/compat-pwd.c:1003 -1
     (nil))
(jump_insn 246 245 247 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nss_compat/compat-pwd.c:1003 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 472)
(note 247 246 248 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 248 247 249 41 (set (reg:QI 121 [ D.13132 ])
        (mem:QI (plus:DI (reg/f:DI 108 [ D.13137 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_59 + 1B]+0 S1 A8])) nss_compat/compat-pwd.c:1003 -1
     (nil))
(insn 249 248 250 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.13132 ])
            (const_int 64 [0x40]))) nss_compat/compat-pwd.c:1003 -1
     (nil))
(jump_insn 250 249 251 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 383)
            (pc))) nss_compat/compat-pwd.c:1003 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 383)
(note 251 250 252 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 253 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_59 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1004 -1
     (nil))
(jump_insn 253 252 254 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nss_compat/compat-pwd.c:1004 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 472)
(note 254 253 255 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 43 (set (reg:DI 204)
        (reg/f:DI 7 sp)) nss_compat/compat-pwd.c:1005 -1
     (nil))
(insn 256 255 263 43 (set (reg/f:DI 123 [ D.13139 ])
        (reg:DI 204)) nss_compat/compat-pwd.c:1005 -1
     (nil))
(insn 263 256 257 43 (set (reg:DI 205)
        (reg/f:DI 108 [ D.13137 ])) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 257 263 258 43 (set (reg:DI 209)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 258 257 259 43 (set (reg:DI 208)
        (reg:DI 205)) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 259 258 260 43 (set (reg:QI 210)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 260 259 261 43 (parallel [
            (set (reg:DI 206)
                (unspec:DI [
                        (mem:BLK (reg:DI 208) [0  A8])
                        (reg:QI 210)
                        (const_int 1 [0x1])
                        (reg:DI 209)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 208))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 261 260 262 43 (set (reg:DI 207)
        (not:DI (reg:DI 206))) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 262 261 264 43 (parallel [
            (set (reg:DI 124 [ D.13133 ])
                (plus:DI (reg:DI 207)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 264 262 265 43 (parallel [
            (set (reg/v:DI 125 [ len ])
                (plus:DI (reg:DI 124 [ D.13133 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1007 -1
     (nil))
(insn 265 264 266 43 (parallel [
            (set (reg:DI 211)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 266 265 267 43 (parallel [
            (set (reg:DI 212)
                (plus:DI (reg/v:DI 125 [ len ])
                    (reg:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 267 266 268 43 (parallel [
            (set (reg:DI 214)
                (udiv:DI (reg:DI 212)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 215)
                (umod:DI (reg:DI 212)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 268 267 269 43 (parallel [
            (set (reg:DI 216)
                (mult:DI (reg:DI 214)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 269 268 270 43 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 216)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 270 269 271 43 (set (reg:DI 217)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 271 270 272 43 (parallel [
            (set (reg/f:DI 218)
                (plus:DI (reg:DI 217)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 272 271 273 43 (set (reg/f:DI 126 [ buf.46 ])
        (reg/f:DI 218)) nss_compat/compat-pwd.c:1008 -1
     (nil))
(insn 273 272 274 43 (parallel [
            (set (reg:DI 219 [ D.13137 ])
                (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 274 273 275 43 (set (reg:DI 220)
        (reg/f:DI 126 [ buf.46 ])) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 275 274 276 43 (set (reg:DI 221)
        (reg:DI 219 [ D.13137 ])) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 276 275 277 43 (set (reg:DI 222)
        (reg/v:DI 125 [ len ])) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 277 276 278 43 (set (reg:DI 1 dx)
        (reg:DI 222)) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 278 277 279 43 (set (reg:DI 4 si)
        (reg:DI 221)) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 279 278 280 43 (set (reg:DI 5 di)
        (reg:DI 220)) nss_compat/compat-pwd.c:1011 -1
     (nil))
(call_insn 280 279 281 43 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1011 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 281 280 282 43 (set (reg:DI 223)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 282 281 283 43 (set (reg:DI 224)
        (reg:DI 223)) nss_compat/compat-pwd.c:1011 -1
     (nil))
(insn 283 282 284 43 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(insn 284 283 285 43 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(insn 285 284 286 43 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(insn 286 285 287 43 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(insn 287 286 288 43 (set (reg:SI 5 di)
        (reg/v:SI 154 [ uid ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(call_insn 288 287 289 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>) [0 getpwuid_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1013 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 289 288 290 43 (set (reg/v:SI 128 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1013 -1
     (nil))
(insn 290 289 291 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 128 [ status ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:1015 -1
     (nil))
(jump_insn 291 290 309 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 298)
            (pc))) nss_compat/compat-pwd.c:1015 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 298)
(code_label 309 291 292 44 366 "" [1 uses])
(note 292 309 293 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 44 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1016 -1
     (nil))
(insn 294 293 295 44 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1016 -1
     (nil))
(insn 295 294 296 44 (set (reg/f:DI 7 sp)
        (reg/f:DI 123 [ D.13139 ])) nss_compat/compat-pwd.c:1016 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 296 295 297 44 (set (pc)
        (label_ref:DI 472)) nss_compat/compat-pwd.c:1016 654 {jump}
     (nil)
 -> 472)
(barrier 297 296 298)
(code_label 298 297 299 45 364 "" [1 uses])
(note 299 298 300 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 128 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:1018 -1
     (nil))
(jump_insn 301 300 302 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 503)
            (pc))) nss_compat/compat-pwd.c:1018 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 503)
(note 302 301 303 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 303 302 304 46 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1020 -1
     (nil))
(insn 304 303 305 46 (set (reg:DI 1 dx)
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:1020 -1
     (nil))
(insn 305 304 306 46 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1020 -1
     (nil))
(insn 306 305 307 46 (set (reg:DI 5 di)
        (reg/f:DI 126 [ buf.46 ])) nss_compat/compat-pwd.c:1020 -1
     (nil))
(call_insn 307 306 308 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1020 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 308 307 310 46 (set (reg:SI 130 [ D.13131 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1020 -1
     (nil))
(insn 310 308 311 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ D.13131 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1020 -1
     (nil))
(jump_insn 311 310 499 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 309)
            (pc))) nss_compat/compat-pwd.c:1020 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 309)
(note 499 311 500 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 500 499 501 47 (set (pc)
        (label_ref 312)) -1
     (nil)
 -> 312)
(barrier 501 500 503)
(code_label 503 501 502 48 373 "" [1 uses])
(note 502 503 8 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 8 502 312 48 (set (reg/v:SI 87 [ result ])
        (reg/v:SI 128 [ status ])) nss_compat/compat-pwd.c:1013 -1
     (nil))
(code_label 312 8 313 49 365 "" [1 uses])
(note 313 312 314 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 314 313 315 49 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1021 -1
     (nil))
(insn 315 314 316 49 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1021 -1
     (nil))
(insn 316 315 317 49 (set (reg/f:DI 7 sp)
        (reg/f:DI 123 [ D.13139 ])) nss_compat/compat-pwd.c:1021 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 317 316 318 49 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:1021 654 {jump}
     (nil)
 -> 487)
(barrier 318 317 319)
(code_label 319 318 320 50 360 "" [1 uses])
(note 320 319 321 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 50 (parallel [
            (set (reg:QI 225 [ D.13132 ])
                (and:QI (reg:QI 111 [ D.13132 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1033 -1
     (nil))
(insn 322 321 323 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 225 [ D.13132 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1033 -1
     (nil))
(jump_insn 323 322 324 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nss_compat/compat-pwd.c:1033 612 {*jcc_1}
     (int_list:REG_BR_PROB 4877 (nil))
 -> 472)
(note 324 323 325 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 51 (set (reg:DI 226)
        (reg/f:DI 7 sp)) nss_compat/compat-pwd.c:1034 -1
     (nil))
(insn 326 325 333 51 (set (reg/f:DI 131 [ D.13139 ])
        (reg:DI 226)) nss_compat/compat-pwd.c:1034 -1
     (nil))
(insn 333 326 327 51 (set (reg:DI 227)
        (reg/f:DI 108 [ D.13137 ])) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 327 333 328 51 (set (reg:DI 231)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 328 327 329 51 (set (reg:DI 230)
        (reg:DI 227)) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 329 328 330 51 (set (reg:QI 232)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 330 329 331 51 (parallel [
            (set (reg:DI 228)
                (unspec:DI [
                        (mem:BLK (reg:DI 230) [0  A8])
                        (reg:QI 232)
                        (const_int 1 [0x1])
                        (reg:DI 231)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 230))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 331 330 332 51 (set (reg:DI 229)
        (not:DI (reg:DI 228))) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 332 331 334 51 (parallel [
            (set (reg/v:DI 132 [ len ])
                (plus:DI (reg:DI 229)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1035 -1
     (nil))
(insn 334 332 335 51 (parallel [
            (set (reg:DI 233)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 335 334 336 51 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/v:DI 132 [ len ])
                    (reg:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 336 335 337 51 (parallel [
            (set (reg:DI 236)
                (udiv:DI (reg:DI 234)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 237)
                (umod:DI (reg:DI 234)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 337 336 338 51 (parallel [
            (set (reg:DI 238)
                (mult:DI (reg:DI 236)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 338 337 339 51 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 339 338 340 51 (set (reg:DI 239)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 340 339 341 51 (parallel [
            (set (reg/f:DI 240)
                (plus:DI (reg:DI 239)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 341 340 342 51 (set (reg/f:DI 133 [ buf.50 ])
        (reg/f:DI 240)) nss_compat/compat-pwd.c:1036 -1
     (nil))
(insn 342 341 343 51 (parallel [
            (set (reg:DI 241 [ D.13137 ])
                (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 343 342 344 51 (set (reg:DI 242)
        (reg/f:DI 133 [ buf.50 ])) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 344 343 345 51 (set (reg:DI 243)
        (reg:DI 241 [ D.13137 ])) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 345 344 346 51 (set (reg:DI 244)
        (reg/v:DI 132 [ len ])) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 346 345 347 51 (set (reg:DI 1 dx)
        (reg:DI 244)) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 347 346 348 51 (set (reg:DI 4 si)
        (reg:DI 243)) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 348 347 349 51 (set (reg:DI 5 di)
        (reg:DI 242)) nss_compat/compat-pwd.c:1039 -1
     (nil))
(call_insn 349 348 350 51 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1039 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 350 349 351 51 (set (reg:DI 245)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 351 350 352 51 (set (reg:DI 246)
        (reg:DI 245)) nss_compat/compat-pwd.c:1039 -1
     (nil))
(insn 352 351 353 51 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:1041 -1
     (nil))
(insn 353 352 354 51 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:1041 -1
     (nil))
(insn 354 353 355 51 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:1041 -1
     (nil))
(insn 355 354 356 51 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:1041 -1
     (nil))
(insn 356 355 357 51 (set (reg:SI 5 di)
        (reg/v:SI 154 [ uid ])) nss_compat/compat-pwd.c:1041 -1
     (nil))
(call_insn 357 356 358 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>) [0 getpwuid_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1041 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 358 357 359 51 (set (reg/v:SI 135 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1041 -1
     (nil))
(insn 359 358 360 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 135 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:1042 -1
     (nil))
(jump_insn 360 359 361 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) nss_compat/compat-pwd.c:1042 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 376)
(note 361 360 362 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 52 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1043 -1
     (nil))
(insn 363 362 364 52 (set (reg:DI 1 dx)
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:1043 -1
     (nil))
(insn 364 363 365 52 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1043 -1
     (nil))
(insn 365 364 366 52 (set (reg:DI 5 di)
        (reg/f:DI 133 [ buf.50 ])) nss_compat/compat-pwd.c:1043 -1
     (nil))
(call_insn 366 365 367 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1043 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2ba248568000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 367 366 368 52 (set (reg:SI 137 [ D.13131 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1043 -1
     (nil))
(insn 368 367 369 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.13131 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1042 -1
     (nil))
(jump_insn 369 368 370 52 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 376)
            (pc))) nss_compat/compat-pwd.c:1042 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 376)
(note 370 369 371 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 53 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1044 -1
     (nil))
(insn 372 371 373 53 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1044 -1
     (nil))
(insn 373 372 12 53 (set (reg/f:DI 7 sp)
        (reg/f:DI 131 [ D.13139 ])) nss_compat/compat-pwd.c:1044 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 373 374 53 (set (reg/v:SI 87 [ result ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1044 -1
     (nil))
(jump_insn 374 12 375 53 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:1044 654 {jump}
     (nil)
 -> 487)
(barrier 375 374 376)
(code_label 376 375 377 54 367 "" [2 uses])
(note 377 376 378 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 54 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1045 -1
     (nil))
(insn 379 378 380 54 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1045 -1
     (nil))
(insn 380 379 381 54 (set (reg/f:DI 7 sp)
        (reg/f:DI 131 [ D.13139 ])) nss_compat/compat-pwd.c:1045 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 381 380 382 54 (set (pc)
        (label_ref:DI 472)) nss_compat/compat-pwd.c:1045 654 {jump}
     (nil)
 -> 472)
(barrier 382 381 383)
(code_label 383 382 384 55 363 "" [1 uses])
(note 384 383 385 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 55 (parallel [
            (set (reg:QI 247 [ D.13132 ])
                (and:QI (reg:QI 121 [ D.13132 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1050 -1
     (nil))
(insn 386 385 387 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 247 [ D.13132 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1050 -1
     (nil))
(jump_insn 387 386 388 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 450)
            (pc))) nss_compat/compat-pwd.c:1050 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 450)
(note 388 387 389 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 56 (set (reg:DI 248)
        (reg/f:DI 7 sp)) nss_compat/compat-pwd.c:1051 -1
     (nil))
(insn 390 389 397 56 (set (reg/f:DI 138 [ D.13139 ])
        (reg:DI 248)) nss_compat/compat-pwd.c:1051 -1
     (nil))
(insn 397 390 391 56 (set (reg:DI 249)
        (reg/f:DI 108 [ D.13137 ])) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 391 397 392 56 (set (reg:DI 253)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 392 391 393 56 (set (reg:DI 252)
        (reg:DI 249)) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 393 392 394 56 (set (reg:QI 254)
        (const_int 0 [0])) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 394 393 395 56 (parallel [
            (set (reg:DI 250)
                (unspec:DI [
                        (mem:BLK (reg:DI 252) [0  A8])
                        (reg:QI 254)
                        (const_int 1 [0x1])
                        (reg:DI 253)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 252))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 395 394 396 56 (set (reg:DI 251)
        (not:DI (reg:DI 250))) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 396 395 398 56 (parallel [
            (set (reg/v:DI 139 [ len ])
                (plus:DI (reg:DI 251)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1052 -1
     (nil))
(insn 398 396 399 56 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 399 398 400 56 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/v:DI 139 [ len ])
                    (reg:DI 255)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 400 399 401 56 (parallel [
            (set (reg:DI 258)
                (udiv:DI (reg:DI 256)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 259)
                (umod:DI (reg:DI 256)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 401 400 402 56 (parallel [
            (set (reg:DI 260)
                (mult:DI (reg:DI 258)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 402 401 403 56 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 403 402 404 56 (set (reg:DI 261)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 404 403 405 56 (parallel [
            (set (reg/f:DI 262)
                (plus:DI (reg:DI 261)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 405 404 406 56 (set (reg/f:DI 140 [ buf.54 ])
        (reg/f:DI 262)) nss_compat/compat-pwd.c:1053 -1
     (nil))
(insn 406 405 407 56 (parallel [
            (set (reg:DI 263 [ D.13137 ])
                (plus:DI (reg/f:DI 108 [ D.13137 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 407 406 408 56 (set (reg:DI 264)
        (reg/f:DI 140 [ buf.54 ])) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 408 407 409 56 (set (reg:DI 265)
        (reg:DI 263 [ D.13137 ])) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 409 408 410 56 (set (reg:DI 266)
        (reg/v:DI 139 [ len ])) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 410 409 411 56 (set (reg:DI 1 dx)
        (reg:DI 266)) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 411 410 412 56 (set (reg:DI 4 si)
        (reg:DI 265)) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 412 411 413 56 (set (reg:DI 5 di)
        (reg:DI 264)) nss_compat/compat-pwd.c:1056 -1
     (nil))
(call_insn 413 412 414 56 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1056 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2ba248855948 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 414 413 415 56 (set (reg:DI 267)
        (reg:DI 0 ax)) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 415 414 416 56 (set (reg:DI 268)
        (reg:DI 267)) nss_compat/compat-pwd.c:1056 -1
     (nil))
(insn 416 415 417 56 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(insn 417 416 418 56 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(insn 418 417 419 56 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(insn 419 418 420 56 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(insn 420 419 421 56 (set (reg:SI 5 di)
        (reg/v:SI 154 [ uid ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(call_insn 421 420 422 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>) [0 getpwuid_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1058 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 422 421 423 56 (set (reg/v:SI 142 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1058 -1
     (nil))
(insn 423 422 424 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 142 [ status ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:1060 -1
     (nil))
(jump_insn 424 423 425 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 436)
            (pc))) nss_compat/compat-pwd.c:1060 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 436)
(note 425 424 426 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 142 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:1063 -1
     (nil))
(jump_insn 427 426 428 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 505)
            (pc))) nss_compat/compat-pwd.c:1063 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 505)
(note 428 427 429 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 58 (set (reg/f:DI 269)
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:1065 -1
     (nil))
(insn 430 429 431 58 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 155 [ pwd ]) [3 pwd_17(D)->pw_name+0 S8 A64])) nss_compat/compat-pwd.c:1065 -1
     (nil))
(insn 431 430 432 58 (set (reg:DI 5 di)
        (reg/f:DI 140 [ buf.54 ])) nss_compat/compat-pwd.c:1065 -1
     (nil))
(call_insn/i 432 431 433 58 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1065 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2ba24813e000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 433 432 434 58 (set (reg:SI 144 [ D.13131 ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1065 -1
     (nil))
(insn 434 433 435 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144 [ D.13131 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1065 -1
     (nil))
(jump_insn 435 434 436 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 443)
            (pc))) nss_compat/compat-pwd.c:1065 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 443)
(code_label 436 435 437 59 369 "" [1 uses])
(note 437 436 438 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 59 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1061 -1
     (nil))
(insn 439 438 440 59 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1061 -1
     (nil))
(insn 440 439 441 59 (set (reg/f:DI 7 sp)
        (reg/f:DI 138 [ D.13139 ])) nss_compat/compat-pwd.c:1061 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 441 440 442 59 (set (pc)
        (label_ref:DI 472)) nss_compat/compat-pwd.c:1061 654 {jump}
     (nil)
 -> 472)
(barrier 442 441 505)
(code_label 505 442 504 60 374 "" [1 uses])
(note 504 505 9 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 9 504 443 60 (set (reg/v:SI 87 [ result ])
        (reg/v:SI 142 [ status ])) nss_compat/compat-pwd.c:1058 -1
     (nil))
(code_label 443 9 444 61 370 "" [1 uses])
(note 444 443 445 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 61 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-pwd.c:1066 -1
     (nil))
(insn 446 445 447 61 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-pwd.c:1066 -1
     (nil))
(insn 447 446 448 61 (set (reg/f:DI 7 sp)
        (reg/f:DI 138 [ D.13139 ])) nss_compat/compat-pwd.c:1066 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 448 447 449 61 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:1066 654 {jump}
     (nil)
 -> 487)
(barrier 449 448 450)
(code_label 450 449 451 62 368 "" [1 uses])
(note 451 450 452 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 452 451 453 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 121 [ D.13132 ])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1077 -1
     (nil))
(jump_insn 453 452 454 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 472)
            (pc))) nss_compat/compat-pwd.c:1077 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 472)
(note 454 453 455 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 455 454 456 63 (set (reg:DI 37 r8)
        (reg/v/f:DI 158 [ errnop ])) nss_compat/compat-pwd.c:1081 -1
     (nil))
(insn 456 455 457 63 (set (reg:DI 2 cx)
        (reg/v:DI 157 [ buflen ])) nss_compat/compat-pwd.c:1081 -1
     (nil))
(insn 457 456 458 63 (set (reg:DI 1 dx)
        (reg/v/f:DI 156 [ buffer ])) nss_compat/compat-pwd.c:1081 -1
     (nil))
(insn 458 457 459 63 (set (reg:DI 4 si)
        (reg/v/f:DI 155 [ pwd ])) nss_compat/compat-pwd.c:1081 -1
     (nil))
(insn 459 458 460 63 (set (reg:SI 5 di)
        (reg/v:SI 154 [ uid ])) nss_compat/compat-pwd.c:1081 -1
     (nil))
(call_insn 460 459 461 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>) [0 getpwuid_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1081 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getpwuid_plususer") [flags 0x3]  <function_decl 0x2ba24879c798 getpwuid_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 461 460 462 63 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-pwd.c:1081 -1
     (nil))
(insn 462 461 463 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-pwd.c:1082 -1
     (nil))
(jump_insn 463 462 464 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 487)
            (pc))) nss_compat/compat-pwd.c:1082 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 487)
(note 464 463 465 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-pwd.c:1084 -1
     (nil))
(jump_insn 466 465 469 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 475)
            (pc))) nss_compat/compat-pwd.c:1084 -1
     (int_list:REG_BR_PROB 1991 (nil))
 -> 475)
(note 469 466 467 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(jump_insn 467 469 468 65 (set (pc)
        (label_ref:DI 487)) nss_compat/compat-pwd.c:1084 654 {jump}
     (nil)
 -> 487)
(barrier 468 467 475)
(code_label 475 468 476 67 349 "" [2 uses])
(note 476 475 13 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 13 476 487 67 (set (reg/v:SI 87 [ result ])
        (const_int 0 [0])) nss_compat/compat-pwd.c:1085 -1
     (nil))
(code_label 487 13 488 71 344 "" [9 uses])
(note 488 487 489 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 71 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-pwd.c:1113 -1
     (nil))
(insn 490 489 491 71 (set (reg:DI 5 di)
        (reg:DI 270)) nss_compat/compat-pwd.c:1113 -1
     (nil))
(call_insn 491 490 492 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>) [0 internal_endpwent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-pwd.c:1113 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_endpwent") [flags 0x3]  <function_decl 0x2ba2487716c0 internal_endpwent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 492 491 496 71 (set (reg:SI 153 [ <retval> ])
        (reg/v:SI 87 [ result ])) nss_compat/compat-pwd.c:1115 -1
     (nil))
(insn 496 492 497 71 (set (reg/i:SI 0 ax)
        (reg:SI 153 [ <retval> ])) nss_compat/compat-pwd.c:1116 -1
     (nil))
(insn 497 496 0 71 (use (reg/i:SI 0 ax)) nss_compat/compat-pwd.c:1116 -1
     (nil))
