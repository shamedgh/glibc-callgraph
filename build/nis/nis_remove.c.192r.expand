
;; Function nis_remove (*__GI_nis_remove, funcdef_no=45, decl_uid=9019, cgraph_uid=45, symbol_order=45)

Partition 0: size 24 align 16
	req

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9
Edge 2->9 redirected to 12


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 59.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 93 [ name ])
        (reg:DI 5 di [ name ])) nis_remove.c:26 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ obj ])
        (reg:DI 4 si [ obj ])) nis_remove.c:26 -1
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg:DI 4 si)
        (const_int 56 [0x38])) nis_remove.c:31 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) nis_remove.c:31 -1
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2afe5c796000 calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) nis_remove.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x2afe5c796000 calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg/f:DI 95)
        (reg:DI 0 ax)) nis_remove.c:31 -1
     (expr_list:REG_NOALIAS (reg/f:DI 95)
        (nil)))
(insn 13 12 14 2 (set (reg/v/f:DI 88 [ res ])
        (reg/f:DI 95)) nis_remove.c:31 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ res ])
            (const_int 0 [0]))) nis_remove.c:32 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) nis_remove.c:32 612 {*jcc_1}
     (int_list:REG_BR_PROB 192 (nil))
 -> 68)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [2 req.ns_name+0 S8 A128])
        (reg/v/f:DI 93 [ name ])) nis_remove.c:35 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ obj ])
            (const_int 0 [0]))) nis_remove.c:37 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) nis_remove.c:37 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 29)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 req.ns_object.ns_object_len+0 S4 A64])
        (const_int 1 [0x1])) nis_remove.c:39 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 4 si)
        (const_int 0 [0])) nis_remove.c:40 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ obj ])) nis_remove.c:40 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_nis_clone_object") [flags 0x43]  <function_decl 0x2afe5cca8000 nis_clone_object>) [0 nis_clone_object S1 A8])
            (const_int 0 [0]))) nis_remove.c:40 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_nis_clone_object") [flags 0x43]  <function_decl 0x2afe5cca8000 nis_clone_object>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 25 24 26 5 (set (reg/f:DI 89 [ D.9556 ])
        (reg:DI 0 ax)) nis_remove.c:40 -1
     (nil))
(insn 26 25 27 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 req.ns_object.ns_object_val+0 S8 A128])
        (reg/f:DI 89 [ D.9556 ])) nis_remove.c:40 -1
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (label_ref 33)) -1
     (nil)
 -> 33)
(barrier 28 27 29)
(code_label 29 28 30 6 3 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 req.ns_object.ns_object_len+0 S4 A64])
        (const_int 0 [0])) nis_remove.c:44 -1
     (nil))
(insn 32 31 33 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 req.ns_object.ns_object_val+0 S8 A128])
        (const_int 0 [0])) nis_remove.c:45 -1
     (nil))
(code_label 33 32 34 7 4 "" [1 uses])
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (parallel [
            (set (reg:DI 96)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nis_remove.c:48 -1
     (nil))
(insn 36 35 37 7 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 0 [0])) nis_remove.c:48 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 37 36 38 7 (set (mem:SI (pre_modify:DI (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8]))) [4  S4 A32])
        (const_int 32 [0x20])) nis_remove.c:48 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 38 37 39 7 (set (reg:DI 38 r9)
        (reg/v/f:DI 88 [ res ])) nis_remove.c:48 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 37 r8)
        (symbol_ref:DI ("*__GI__xdr_nis_result") [flags 0x43]  <function_decl 0x2afe5cce0798 _xdr_nis_result>)) nis_remove.c:48 -1
     (nil))
(insn 40 39 41 7 (set (reg:DI 2 cx)
        (reg:DI 96)) nis_remove.c:48 -1
     (nil))
(insn 41 40 42 7 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_xdr_ns_request") [flags 0x43]  <function_decl 0x2afe5ccdae58 _xdr_ns_request>)) nis_remove.c:48 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 4 si)
        (const_int 4 [0x4])) nis_remove.c:48 -1
     (nil))
(insn 43 42 44 7 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ name ])) nis_remove.c:48 -1
     (nil))
(call_insn 44 43 45 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__do_niscall") [flags 0x41]  <function_decl 0x2afe5cce0ca8 __do_niscall>) [0 __do_niscall S1 A8])
            (const_int 16 [0x10]))) nis_remove.c:48 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__do_niscall") [flags 0x41]  <function_decl 0x2afe5cce0ca8 __do_niscall>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 45 44 46 7 (set (reg/v:SI 90 [ status ])
        (reg:SI 0 ax)) nis_remove.c:48 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nis_remove.c:48 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 47 46 48 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ status ])
            (const_int 0 [0]))) nis_remove.c:48 -1
     (nil))
(jump_insn 48 47 49 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) nis_remove.c:48 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 51)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 8 (set (mem:SI (reg/v/f:DI 88 [ res ]) [6 res_7->status+0 S4 A64])
        (reg/v:SI 90 [ status ])) nis_remove.c:52 -1
     (nil))
(code_label 51 50 52 9 5 "" [1 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 req.ns_object.ns_object_val+0 S8 A128])) nis_remove.c:54 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 5 di)
        (reg:DI 97)) nis_remove.c:54 -1
     (nil))
(call_insn 55 54 6 9 (call (mem:QI (symbol_ref:DI ("*__GI_nis_destroy_object") [flags 0x43]  <function_decl 0x2afe5cca80d8 nis_destroy_object>) [0 nis_destroy_object S1 A8])
        (const_int 0 [0])) nis_remove.c:54 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_nis_destroy_object") [flags 0x43]  <function_decl 0x2afe5cca80d8 nis_destroy_object>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 6 55 65 9 (set (reg/f:DI 87 [ D.9555 ])
        (reg/v/f:DI 88 [ res ])) nis_remove.c:56 -1
     (nil))
(jump_insn 65 6 66 9 (set (pc)
        (label_ref 56)) nis_remove.c:56 -1
     (nil)
 -> 56)
(barrier 66 65 68)
(code_label 68 66 67 10 6 "" [1 uses])
(note 67 68 5 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 5 67 56 10 (set (reg/f:DI 87 [ D.9555 ])
        (const_int 0 [0])) nis_remove.c:33 -1
     (nil))
(code_label 56 5 57 11 2 "" [1 uses])
(note 57 56 58 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 62 11 (set (reg:DI 92 [ <retval> ])
        (reg/f:DI 87 [ D.9555 ])) -1
     (nil))
(insn 62 58 63 11 (set (reg/i:DI 0 ax)
        (reg:DI 92 [ <retval> ])) nis_remove.c:57 -1
     (nil))
(insn 63 62 0 11 (use (reg/i:DI 0 ax)) nis_remove.c:57 -1
     (nil))
