
;; Function give_spwd_free (give_spwd_free, funcdef_no=51, decl_uid=11458, cgraph_uid=51, symbol_order=61)


;; Generating RTL for gimple basic block 2


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 89 [ pwd ])
        (reg:DI 5 di [ pwd ])) nss_compat/compat-spwd.c:114 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 89 [ pwd ]) [3 pwd_2(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:115 -1
     (nil))
(call_insn 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:115 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 90)
        (mem/f:DI (plus:DI (reg/v/f:DI 89 [ pwd ])
                (const_int 8 [0x8])) [3 pwd_2(D)->sp_pwdp+0 S8 A64])) nss_compat/compat-spwd.c:116 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 90)) nss_compat/compat-spwd.c:116 -1
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:116 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 91)
        (reg/v/f:DI 89 [ pwd ])) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 92)
        (const_int 72 [0x48])) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 93)
        (const_int 0 [0])) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 14 13 15 2 (set (mem:DI (reg/f:DI 91) [0  S8 A8])
        (reg:DI 93)) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 94)
        (zero_extend:DI (reg:SI 92))) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 91)
                    (reg:DI 94)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 96)
                (plus:DI (reg:DI 95)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 18 17 19 2 (set (mem:DI (plus:DI (reg/f:DI 96)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 93)) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 97)
                (plus:DI (reg/f:DI 91)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 97)
                (and:DI (reg/f:DI 97)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 91)
                (minus:DI (reg/f:DI 91)
                    (reg/f:DI 97)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 92)
                (plus:SI (reg:SI 92)
                    (subreg:SI (reg/f:DI 91) 0)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg:SI 92)
                (and:SI (reg:SI 92)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 98)
                (lshiftrt:SI (reg:SI 92)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 25 24 26 2 (set (reg:DI 99)
        (zero_extend:DI (reg:SI 98))) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:DI 99)
                (const_int 0 [0]))
            (set (reg/f:DI 97)
                (plus:DI (ashift:DI (reg:DI 99)
                        (const_int 3 [0x3]))
                    (reg/f:DI 97)))
            (set (mem:BLK (reg/f:DI 97) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 93))
            (use (reg:DI 99))
        ]) nss_compat/compat-spwd.c:118 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 100)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:119 -1
     (nil))
(insn 28 27 29 2 (set (mem:DI (plus:DI (reg/v/f:DI 89 [ pwd ])
                (const_int 40 [0x28])) [4 pwd_2(D)->sp_warn+0 S8 A64])
        (reg:DI 100)) nss_compat/compat-spwd.c:119 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 101)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:120 -1
     (nil))
(insn 30 29 31 2 (set (mem:DI (plus:DI (reg/v/f:DI 89 [ pwd ])
                (const_int 48 [0x30])) [4 pwd_2(D)->sp_inact+0 S8 A64])
        (reg:DI 101)) nss_compat/compat-spwd.c:120 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 102)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:121 -1
     (nil))
(insn 32 31 33 2 (set (mem:DI (plus:DI (reg/v/f:DI 89 [ pwd ])
                (const_int 56 [0x38])) [4 pwd_2(D)->sp_expire+0 S8 A64])
        (reg:DI 102)) nss_compat/compat-spwd.c:121 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 103)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:122 -1
     (nil))
(insn 34 33 0 2 (set (mem:DI (plus:DI (reg/v/f:DI 89 [ pwd ])
                (const_int 64 [0x40])) [4 pwd_2(D)->sp_flag+0 S8 A64])
        (reg:DI 103)) nss_compat/compat-spwd.c:122 -1
     (nil))

;; Function internal_setspent (internal_setspent, funcdef_no=54, decl_uid=11476, cgraph_uid=54, symbol_order=64)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15
Edge 7->15 redirected to 18
Edge 11->14 redirected to 19
Edge 12->14 redirected to 20


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 3 2 (set (reg/v/f:DI 101 [ ent ])
        (reg:DI 5 di [ ent ])) nss_compat/compat-spwd.c:173 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 102 [ stayopen ])
        (reg:SI 4 si [ stayopen ])) nss_compat/compat-spwd.c:173 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:SI 103 [ needent ])
        (reg:SI 1 dx [ needent ])) nss_compat/compat-spwd.c:173 -1
     (nil))
(note 5 4 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 5 14 2 (set (mem:QI (reg/v/f:DI 101 [ ent ]) [8 ent_6(D)->netgroup+0 S1 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:176 -1
     (nil))
(insn 14 13 15 2 (set (mem:QI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 2 [0x2])) [8 ent_6(D)->first+0 S1 A16])
        (const_int 0 [0])) nss_compat/compat-spwd.c:176 -1
     (nil))
(insn 15 14 16 2 (set (mem:QI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 1 [0x1])) [8 ent_6(D)->files+0 S1 A8])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:177 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 87 [ D.12430 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 16 [0x10])) [3 ent_6(D)->blacklist.data+0 S8 A64])) nss_compat/compat-spwd.c:183 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12430 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:183 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) nss_compat/compat-spwd.c:183 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 26)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 24 [0x18])) [2 ent_6(D)->blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:185 -1
     (nil))
(insn 21 20 22 4 (set (mem:QI (reg/f:DI 87 [ D.12430 ]) [0 *_10+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:186 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:DI 88 [ D.12430 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 16 [0x10])) [3 ent_6(D)->blacklist.data+0 S8 A64])) nss_compat/compat-spwd.c:187 -1
     (nil))
(insn 23 22 24 4 (set (mem:QI (plus:DI (reg/f:DI 88 [ D.12430 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_13 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:187 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (label_ref 29)) -1
     (nil)
 -> 29)
(barrier 25 24 26)
(code_label 26 25 27 5 4 "" [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 24 [0x18])) [2 ent_6(D)->blacklist.current+0 S4 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:190 -1
     (nil))
(code_label 29 28 30 6 5 "" [1 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg/f:DI 89 [ D.12431 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 8 [0x8])) [3 ent_6(D)->stream+0 S8 A64])) nss_compat/compat-spwd.c:192 -1
     (nil))
(insn 32 31 33 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.12431 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:192 -1
     (nil))
(jump_insn 33 32 34 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) nss_compat/compat-spwd.c:192 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 57)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 7 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x2aefb846b2d0 *.LC1>)) nss_compat/compat-spwd.c:194 -1
     (nil))
(insn 36 35 37 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x2aefb846b360 *.LC2>)) nss_compat/compat-spwd.c:194 -1
     (nil))
(call_insn 37 36 38 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aefb81d0288 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:194 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x2aefb81d0288 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 38 37 39 7 (set (reg/f:DI 90 [ D.12431 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:194 -1
     (nil))
(insn 39 38 40 7 (set (mem/f:DI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 8 [0x8])) [3 ent_6(D)->stream+0 S8 A64])
        (reg/f:DI 90 [ D.12431 ])) nss_compat/compat-spwd.c:194 -1
     (nil))
(insn 40 39 41 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12431 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:196 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nss_compat/compat-spwd.c:196 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 49)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (reg:DI 104)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("errno") [flags 0x60]  <var_decl 0x2aefb80a9480 errno>)
                    ] UNSPEC_GOTNTPOFF)) [19  S8 A8])) nss_compat/compat-spwd.c:197 -1
     (nil))
(insn 44 43 45 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (unspec:DI [
                            (const_int 0 [0])
                        ] UNSPEC_TP)
                    (reg:DI 104)) [2 errno+0 S4 A32])
            (const_int 11 [0xb]))) nss_compat/compat-spwd.c:197 -1
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) nss_compat/compat-spwd.c:197 612 {*jcc_1}
     (int_list:REG_BR_PROB 2794 (nil))
 -> 94)
(note 46 45 10 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 10 46 47 9 (set (reg/v:SI 98 [ status ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:197 -1
     (nil))
(jump_insn 47 10 48 9 (set (pc)
        (label_ref 82)) -1
     (nil)
 -> 82)
(barrier 48 47 49)
(code_label 49 48 50 10 7 "" [1 uses])
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:SI 106)
        (mem:SI (reg/f:DI 90 [ D.12431 ]) [2 _18->_flags+0 S4 A64])) nss_compat/compat-spwd.c:234 -1
     (nil))
(insn 52 51 53 10 (parallel [
            (set (reg:SI 105 [ D.12432 ])
                (and:SI (reg:SI 106)
                    (const_int -32769 [0xffffffffffff7fff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:234 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 90 [ D.12431 ]) [2 _18->_flags+0 S4 A64])
            (const_int -32769 [0xffffffffffff7fff]))
        (nil)))
(insn 53 52 54 10 (parallel [
            (set (reg:SI 107)
                (ior:SI (reg:SI 105 [ D.12432 ])
                    (const_int 32768 [0x8000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:234 -1
     (nil))
(insn 54 53 55 10 (set (mem:SI (reg/f:DI 90 [ D.12431 ]) [2 _18->_flags+0 S4 A64])
        (reg:SI 107)) nss_compat/compat-spwd.c:234 -1
     (nil))
(jump_insn 55 54 56 10 (set (pc)
        (label_ref 61)) nss_compat/compat-spwd.c:234 -1
     (nil)
 -> 61)
(barrier 56 55 57)
(code_label 57 56 58 11 6 "" [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.12431 ])) nss_compat/compat-spwd.c:238 -1
     (nil))
(call_insn 60 59 61 11 (call (mem:QI (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x2aefb81e8288 rewind>) [0 rewind S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:238 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("rewind") [flags 0x41]  <function_decl 0x2aefb81e8288 rewind>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 61 60 62 12 9 "" [1 uses])
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (parallel [
            (set (reg:DI 108 [ D.12433 ])
                (plus:DI (reg/v/f:DI 101 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:240 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 5 di)
        (reg:DI 108 [ D.12433 ])) nss_compat/compat-spwd.c:240 -1
     (nil))
(call_insn 65 64 66 12 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:240 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 66 65 67 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 103 [ needent ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:242 -1
     (nil))
(jump_insn 67 66 68 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 98)
            (pc))) nss_compat/compat-spwd.c:242 612 {*jcc_1}
     (int_list:REG_BR_PROB 3760 (nil))
 -> 98)
(note 68 67 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg/f:DI 96 [ D.12434 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_setspent") [flags 0x2]  <var_decl 0x2aefb826a750 nss_setspent>) [3 nss_setspent+0 S8 A64])) nss_compat/compat-spwd.c:242 -1
     (nil))
(insn 70 69 71 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.12434 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:242 -1
     (nil))
(jump_insn 71 70 72 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 102)
            (pc))) nss_compat/compat-spwd.c:242 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 102)
(note 72 71 73 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 14 (set (reg:SI 5 di)
        (reg/v:SI 102 [ stayopen ])) nss_compat/compat-spwd.c:243 -1
     (nil))
(call_insn 74 73 75 14 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ D.12434 ]) [0 *_33 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:243 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 75 74 76 14 (set (reg:SI 97 [ D.12435 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:243 -1
     (nil))
(insn 76 75 7 14 (set (mem:SI (plus:DI (reg/v/f:DI 101 [ ent ])
                (const_int 4 [0x4])) [9 ent_6(D)->setent_status+0 S4 A32])
        (reg:SI 97 [ D.12435 ])) nss_compat/compat-spwd.c:243 -1
     (nil))
(insn 7 76 95 14 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:243 -1
     (nil))
(jump_insn 95 7 96 14 (set (pc)
        (label_ref 77)) -1
     (nil)
 -> 77)
(barrier 96 95 98)
(code_label 98 96 97 15 12 "" [1 uses])
(note 97 98 8 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 8 97 99 15 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) -1
     (nil))
(jump_insn 99 8 100 15 (set (pc)
        (label_ref 77)) -1
     (nil)
 -> 77)
(barrier 100 99 102)
(code_label 102 100 101 16 13 "" [1 uses])
(note 101 102 6 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 6 101 77 16 (set (reg/v:SI 98 [ status ])
        (const_int 1 [0x1])) -1
     (nil))
(code_label 77 6 78 17 10 "" [3 uses])
(note 78 77 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 17 (set (reg:SI 100 [ <retval> ])
        (reg/v:SI 98 [ status ])) nss_compat/compat-spwd.c:245 -1
     (nil))
(jump_insn 80 79 81 17 (set (pc)
        (label_ref 89)) nss_compat/compat-spwd.c:245 -1
     (nil)
 -> 89)
(barrier 81 80 94)
(code_label 94 81 93 18 11 "" [1 uses])
(note 93 94 9 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 9 93 82 18 (set (reg/v:SI 98 [ status ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:197 -1
     (nil))
(code_label 82 9 83 19 8 "" [1 uses])
(note 83 82 84 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 19 (parallel [
            (set (reg:DI 110 [ D.12433 ])
                (plus:DI (reg/v/f:DI 101 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:240 -1
     (nil))
(insn 85 84 86 19 (set (reg:DI 5 di)
        (reg:DI 110 [ D.12433 ])) nss_compat/compat-spwd.c:240 -1
     (nil))
(call_insn 86 85 87 19 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:240 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 87 86 88 19 (set (pc)
        (label_ref 77)) nss_compat/compat-spwd.c:240 -1
     (nil)
 -> 77)
(barrier 88 87 89)
(code_label 89 88 92 20 3 "" [1 uses])
(note 92 89 90 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 90 92 91 20 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) nss_compat/compat-spwd.c:246 -1
     (nil))
(insn 91 90 0 20 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:246 -1
     (nil))

;; Function internal_endspent (internal_endspent, funcdef_no=56, decl_uid=11492, cgraph_uid=56, symbol_order=66)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 45.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 94 [ ent ])
        (reg:DI 5 di [ ent ])) nss_compat/compat-spwd.c:269 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.12440 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 8 [0x8])) [3 ent_5(D)->stream+0 S8 A64])) nss_compat/compat-spwd.c:270 -1
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12440 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:270 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) nss_compat/compat-spwd.c:270 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 13)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12440 ])) nss_compat/compat-spwd.c:272 -1
     (nil))
(call_insn 11 10 12 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aefb8181e58 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:272 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x2aefb8181e58 fclose>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 4 (set (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 8 [0x8])) [3 ent_5(D)->stream+0 S8 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:273 -1
     (nil))
(code_label 13 12 14 5 22 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/v/f:DI 94 [ ent ]) [8 ent_5(D)->netgroup+0 S1 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:276 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) nss_compat/compat-spwd.c:276 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 21)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (parallel [
            (set (reg:DI 95 [ D.12442 ])
                (plus:DI (reg/v/f:DI 94 [ ent ])
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:277 -1
     (nil))
(insn 19 18 20 6 (set (reg:DI 5 di)
        (reg:DI 95 [ D.12442 ])) nss_compat/compat-spwd.c:277 -1
     (nil))
(call_insn 20 19 21 6 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:277 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 21 20 22 7 23 "" [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (mem:QI (reg/v/f:DI 94 [ ent ]) [8 ent_5(D)->netgroup+0 S1 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:279 -1
     (nil))
(insn 24 23 25 7 (set (mem:QI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 2 [0x2])) [8 ent_5(D)->first+0 S1 A16])
        (const_int 0 [0])) nss_compat/compat-spwd.c:279 -1
     (nil))
(insn 25 24 26 7 (set (mem:QI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 1 [0x1])) [8 ent_5(D)->files+0 S1 A8])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:280 -1
     (nil))
(insn 26 25 27 7 (set (reg/f:DI 90 [ D.12443 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 16 [0x10])) [3 ent_5(D)->blacklist.data+0 S8 A64])) nss_compat/compat-spwd.c:282 -1
     (nil))
(insn 27 26 28 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12443 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:282 -1
     (nil))
(jump_insn 28 27 29 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) nss_compat/compat-spwd.c:282 -1
     (int_list:REG_BR_PROB 2163 (nil))
 -> 36)
(note 29 28 30 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 8 (set (mem:SI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 24 [0x18])) [2 ent_5(D)->blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:284 -1
     (nil))
(insn 31 30 32 8 (set (mem:QI (reg/f:DI 90 [ D.12443 ]) [0 *_15+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:285 -1
     (nil))
(insn 32 31 33 8 (set (reg/f:DI 91 [ D.12443 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 16 [0x10])) [3 ent_5(D)->blacklist.data+0 S8 A64])) nss_compat/compat-spwd.c:286 -1
     (nil))
(insn 33 32 34 8 (set (mem:QI (plus:DI (reg/f:DI 91 [ D.12443 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_18 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:286 -1
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (label_ref 39)) -1
     (nil)
 -> 39)
(barrier 35 34 36)
(code_label 36 35 37 9 24 "" [1 uses])
(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 9 (set (mem:SI (plus:DI (reg/v/f:DI 94 [ ent ])
                (const_int 24 [0x18])) [2 ent_5(D)->blacklist.current+0 S4 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:289 -1
     (nil))
(code_label 39 38 40 10 25 "" [1 uses])
(note 40 39 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 10 (parallel [
            (set (reg:DI 96 [ D.12444 ])
                (plus:DI (reg/v/f:DI 94 [ ent ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:291 -1
     (nil))
(insn 42 41 43 10 (set (reg:DI 5 di)
        (reg:DI 96 [ D.12444 ])) nss_compat/compat-spwd.c:291 -1
     (nil))
(call_insn 43 42 44 10 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:291 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 44 43 48 10 (set (reg:SI 93 [ <retval> ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:293 -1
     (nil))
(insn 48 44 49 10 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) nss_compat/compat-spwd.c:294 -1
     (nil))
(insn 49 48 0 10 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:294 -1
     (nil))

;; Function init_nss_interface (init_nss_interface, funcdef_no=50, decl_uid=11455, cgraph_uid=50, symbol_order=60)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 2 cx)
        (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>)) nss_compat/compat-spwd.c:102 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x2aefb84831b0 *.LC5>)) nss_compat/compat-spwd.c:102 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x2aefb8483240 *.LC6>)) nss_compat/compat-spwd.c:102 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x2aefb84832d0 *.LC7>)) nss_compat/compat-spwd.c:102 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_database_lookup") [flags 0x41]  <function_decl 0x2aefb82a5ca8 __nss_database_lookup>) [0 __nss_database_lookup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:102 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_database_lookup") [flags 0x41]  <function_decl 0x2aefb82a5ca8 __nss_database_lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 10 9 11 2 (set (reg:SI 87 [ D.12447 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:102 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 87 [ D.12447 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:102 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 40)
            (pc))) nss_compat/compat-spwd.c:102 612 {*jcc_1}
     (int_list:REG_BR_PROB 3666 (nil))
 -> 40)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 100)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-spwd.c:105 -1
     (nil))
(insn 15 14 16 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x2aefb8483360 *.LC8>)) nss_compat/compat-spwd.c:105 -1
     (nil))
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg:DI 100)) nss_compat/compat-spwd.c:105 -1
     (nil))
(call_insn 17 16 18 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:105 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 19 4 (set (reg/f:DI 89 [ D.12449 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:105 -1
     (nil))
(insn 19 18 20 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_setspent") [flags 0x2]  <var_decl 0x2aefb826a750 nss_setspent>) [3 nss_setspent+0 S8 A64])
        (reg/f:DI 89 [ D.12449 ])) nss_compat/compat-spwd.c:105 -1
     (nil))
(insn 20 19 21 4 (set (reg:DI 101)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-spwd.c:106 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x2aefb84833f0 *.LC9>)) nss_compat/compat-spwd.c:106 -1
     (nil))
(insn 22 21 23 4 (set (reg:DI 5 di)
        (reg:DI 101)) nss_compat/compat-spwd.c:106 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:106 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg/f:DI 92 [ D.12449 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:106 -1
     (nil))
(insn 25 24 26 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_getspnam_r") [flags 0x2]  <var_decl 0x2aefb826a7e0 nss_getspnam_r>) [3 nss_getspnam_r+0 S8 A64])
        (reg/f:DI 92 [ D.12449 ])) nss_compat/compat-spwd.c:106 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 102)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-spwd.c:107 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x2aefb8483480 *.LC10>)) nss_compat/compat-spwd.c:107 -1
     (nil))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg:DI 102)) nss_compat/compat-spwd.c:107 -1
     (nil))
(call_insn 29 28 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:107 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 30 29 31 4 (set (reg/f:DI 95 [ D.12449 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:107 -1
     (nil))
(insn 31 30 32 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_getspent_r") [flags 0x2]  <var_decl 0x2aefb826a870 nss_getspent_r>) [3 nss_getspent_r+0 S8 A64])
        (reg/f:DI 95 [ D.12449 ])) nss_compat/compat-spwd.c:107 -1
     (nil))
(insn 32 31 33 4 (set (reg:DI 103)
        (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])) nss_compat/compat-spwd.c:108 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x2aefb8483510 *.LC11>)) nss_compat/compat-spwd.c:108 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg:DI 103)) nss_compat/compat-spwd.c:108 -1
     (nil))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>) [0 __nss_lookup_function S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:108 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__nss_lookup_function") [flags 0x41]  <function_decl 0x2aefb82b30d8 __nss_lookup_function>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 36 35 37 4 (set (reg/f:DI 98 [ D.12449 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:108 -1
     (nil))
(insn 37 36 40 4 (set (mem/f/c:DI (symbol_ref:DI ("nss_endspent") [flags 0x2]  <var_decl 0x2aefb826a900 nss_endspent>) [3 nss_endspent+0 S8 A64])
        (reg/f:DI 98 [ D.12449 ])) nss_compat/compat-spwd.c:108 -1
     (nil))
(code_label 40 37 41 6 31 "" [1 uses])
(note 41 40 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

;; Function in_blacklist.isra.2 (in_blacklist.isra.2, funcdef_no=70, decl_uid=12302, cgraph_uid=2, symbol_order=112)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4
Edge 2->4 redirected to 7


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 45.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 98 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-spwd.c:893 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 99 [ namelen ])
        (reg:SI 4 si [ namelen ])) nss_compat/compat-spwd.c:893 -1
     (nil))
(insn 4 3 5 2 (set (reg/f:DI 100 [ ISRA.45 ])
        (reg:DI 1 dx [ ISRA.45 ])) nss_compat/compat-spwd.c:893 -1
     (nil))
(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 5 10 2 (set (reg/f:DI 87 [ D.12465 ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:894 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 101 [ D.12466 ])
                (plus:SI (reg/v:SI 99 [ namelen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 102 [ D.12467 ])
        (sign_extend:DI (reg:SI 101 [ D.12466 ]))) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 103)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 104)
                (plus:DI (reg:DI 102 [ D.12467 ])
                    (reg:DI 103)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:DI 106)
                (udiv:DI (reg:DI 104)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 107)
                (umod:DI (reg:DI 104)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 108)
                (mult:DI (reg:DI 106)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 108)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 109)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 110)
                (plus:DI (reg:DI 109)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 90 [ buf.23 ])
        (reg/f:DI 110)) nss_compat/compat-spwd.c:895 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 91 [ D.12468 ])
        (mem/f:DI (reg/f:DI 100 [ ISRA.45 ]) [3 *ISRA.45_24(D)+0 S8 A64])) nss_compat/compat-spwd.c:898 -1
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.12468 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:898 -1
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) nss_compat/compat-spwd.c:898 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 54)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (mem/j:QI (reg/f:DI 90 [ buf.23 ]) [0 MEM[(char[0:D.11894] *)buf.23_5]+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:901 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 90 [ buf.23 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:902 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ name ])) nss_compat/compat-spwd.c:902 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg:DI 111)) nss_compat/compat-spwd.c:902 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2aefb7ce46c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:902 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2aefb7ce46c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 4 (set (reg:DI 112)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:902 -1
     (nil))
(insn 30 29 31 4 (set (reg:DI 113)
        (reg:DI 112)) nss_compat/compat-spwd.c:902 -1
     (nil))
(insn 31 30 32 4 (set (reg/v/f:DI 93 [ cp ])
        (reg:DI 113)) nss_compat/compat-spwd.c:902 -1
     (nil))
(insn 32 31 33 4 (set (mem:QI (reg/v/f:DI 93 [ cp ]) [0 *cp_10+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:903 -1
     (nil))
(insn 33 32 34 4 (set (mem:QI (plus:DI (reg/v/f:DI 93 [ cp ])
                (const_int 1 [0x1])) [0 MEM[(char *)cp_10 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:904 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/f:DI 90 [ buf.23 ])) nss_compat/compat-spwd.c:905 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.12468 ])) nss_compat/compat-spwd.c:905 -1
     (nil))
(call_insn/i 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strstr") [flags 0x41]  <function_decl 0x2aefb7ceb798 strstr>) [0 __builtin_strstr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:905 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strstr") [flags 0x41]  <function_decl 0x2aefb7ceb798 strstr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 37 36 38 4 (set (reg/f:DI 94 [ D.12468 ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:905 -1
     (nil))
(insn 38 37 39 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.12468 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:905 -1
     (nil))
(insn 39 38 40 4 (set (reg:QI 115)
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:905 -1
     (nil))
(insn 40 39 41 4 (set (reg:SI 114 [ D.12469 ])
        (zero_extend:SI (reg:QI 115))) nss_compat/compat-spwd.c:905 -1
     (nil))
(insn 41 40 51 4 (set (reg:SI 96 [ D.12466 ])
        (reg:SI 114 [ D.12469 ])) nss_compat/compat-spwd.c:905 -1
     (nil))
(jump_insn 51 41 52 4 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
(barrier 52 51 54)
(code_label 54 52 53 5 36 "" [1 uses])
(note 53 54 6 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 6 53 42 5 (set (reg:SI 96 [ D.12466 ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:899 -1
     (nil))
(code_label 42 6 43 6 35 "" [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 48 6 (set (reg:SI 97 [ <retval> ])
        (reg:SI 96 [ D.12466 ])) -1
     (nil))
(insn 48 44 49 6 (set (reg/i:SI 0 ax)
        (reg:SI 97 [ <retval> ])) nss_compat/compat-spwd.c:906 -1
     (nil))
(insn 49 48 0 6 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:906 -1
     (nil))

;; Function copy_spwd_changes.isra.3 (copy_spwd_changes.isra.3, funcdef_no=71, decl_uid=12321, cgraph_uid=3, symbol_order=113)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 23->25 redirected to 26
Merging block 25 into block 24...
Merged blocks 24 and 25.
Merged 24 and 25 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 102 [ dest ])
        (reg:DI 5 di [ dest ])) nss_compat/compat-spwd.c:137 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 103 [ src ])
        (reg:DI 4 si [ src ])) nss_compat/compat-spwd.c:137 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 104 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-spwd.c:137 -1
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.12475 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 8 [0x8])) [3 src_1(D)->sp_pwdp+0 S8 A64])) nss_compat/compat-spwd.c:140 -1
     (nil))
(insn 9 8 10 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12475 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:140 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) nss_compat/compat-spwd.c:140 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 63)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 87 [ D.12475 ]) [0 MEM[(const char *)_2]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:140 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) nss_compat/compat-spwd.c:140 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 63)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ buffer ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:142 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) nss_compat/compat-spwd.c:142 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 25)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 6 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12475 ])) nss_compat/compat-spwd.c:143 -1
     (nil))
(call_insn 19 18 20 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2aefb7eeeca8 __strdup>) [0 __strdup S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:143 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__strdup") [flags 0x41]  <function_decl 0x2aefb7eeeca8 __strdup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 6 (set (reg/f:DI 105)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:143 -1
     (expr_list:REG_NOALIAS (reg/f:DI 105)
        (nil)))
(insn 21 20 22 6 (set (reg/f:DI 89 [ D.12475 ])
        (reg/f:DI 105)) nss_compat/compat-spwd.c:143 -1
     (nil))
(insn 22 21 23 6 (set (mem/f:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->sp_pwdp+0 S8 A64])
        (reg/f:DI 89 [ D.12475 ])) nss_compat/compat-spwd.c:143 -1
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (label_ref 63)) nss_compat/compat-spwd.c:143 -1
     (nil)
 -> 63)
(barrier 24 23 25)
(code_label 25 24 26 7 42 "" [1 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg/f:DI 90 [ D.12475 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->sp_pwdp+0 S8 A64])) nss_compat/compat-spwd.c:144 -1
     (nil))
(insn 28 27 29 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.12475 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:144 -1
     (nil))
(jump_insn 29 28 30 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nss_compat/compat-spwd.c:144 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 56)
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.12475 ])) nss_compat/compat-spwd.c:145 -1
     (nil))
(call_insn/i 32 31 33 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:145 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 8 (set (reg:DI 107)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 34 33 35 8 (set (reg:DI 108)
        (reg:DI 107)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 35 34 36 8 (set (reg:DI 91 [ D.12477 ])
        (reg:DI 108)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 36 35 37 8 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12475 ])) nss_compat/compat-spwd.c:145 -1
     (nil))
(call_insn/i 37 36 38 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:145 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 38 37 39 8 (set (reg:DI 110)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 39 38 40 8 (set (reg:DI 111)
        (reg:DI 110)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 40 39 41 8 (set (reg:DI 92 [ D.12477 ])
        (reg:DI 111)) nss_compat/compat-spwd.c:145 -1
     (nil))
(insn 41 40 42 8 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.12477 ])
            (reg:DI 92 [ D.12477 ]))) nss_compat/compat-spwd.c:144 -1
     (nil))
(jump_insn 42 41 43 8 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) nss_compat/compat-spwd.c:144 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 56)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (parallel [
            (set (reg:DI 112 [ D.12477 ])
                (plus:DI (reg:DI 92 [ D.12477 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 45 44 46 9 (set (reg:DI 113)
        (reg/f:DI 90 [ D.12475 ])) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 114)
        (reg/f:DI 87 [ D.12475 ])) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 47 46 48 9 (set (reg:DI 115)
        (reg:DI 112 [ D.12477 ])) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 48 47 49 9 (set (reg:DI 1 dx)
        (reg:DI 115)) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 49 48 50 9 (set (reg:DI 4 si)
        (reg:DI 114)) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 5 di)
        (reg:DI 113)) nss_compat/compat-spwd.c:146 -1
     (nil))
(call_insn 51 50 52 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aefb8408d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:146 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aefb8408d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 52 51 53 9 (set (reg:DI 116)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:146 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 117)
        (reg:DI 116)) nss_compat/compat-spwd.c:146 -1
     (nil))
(jump_insn 54 53 55 9 (set (pc)
        (label_ref 63)) nss_compat/compat-spwd.c:146 -1
     (nil)
 -> 63)
(barrier 55 54 56)
(code_label 56 55 57 10 43 "" [2 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 10 (set (mem/f:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 8 [0x8])) [3 dest_6(D)->sp_pwdp+0 S8 A64])
        (reg/v/f:DI 104 [ buffer ])) nss_compat/compat-spwd.c:149 -1
     (nil))
(insn 59 58 60 10 (set (reg:DI 118)
        (mem/f:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 8 [0x8])) [3 src_1(D)->sp_pwdp+0 S8 A64])) nss_compat/compat-spwd.c:150 -1
     (nil))
(insn 60 59 61 10 (set (reg:DI 4 si)
        (reg:DI 118)) nss_compat/compat-spwd.c:150 -1
     (nil))
(insn 61 60 62 10 (set (reg:DI 5 di)
        (reg/v/f:DI 104 [ buffer ])) nss_compat/compat-spwd.c:150 -1
     (nil))
(call_insn 62 61 63 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2aefb7ce7288 strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:150 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x2aefb7ce7288 strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(code_label 63 62 64 11 41 "" [4 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:DI 94 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 16 [0x10])) [4 src_1(D)->sp_lstchg+0 S8 A64])) nss_compat/compat-spwd.c:155 -1
     (nil))
(insn 66 65 67 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 94 [ D.12478 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:155 -1
     (nil))
(jump_insn 67 66 68 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nss_compat/compat-spwd.c:155 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 70)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 16 [0x10])) [4 dest_6(D)->sp_lstchg+0 S8 A64])
        (reg:DI 94 [ D.12478 ])) nss_compat/compat-spwd.c:156 -1
     (nil))
(code_label 70 69 71 13 44 "" [1 uses])
(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 13 (set (reg:DI 95 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 24 [0x18])) [4 src_1(D)->sp_min+0 S8 A64])) nss_compat/compat-spwd.c:157 -1
     (nil))
(insn 73 72 74 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 95 [ D.12478 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:157 -1
     (nil))
(jump_insn 74 73 75 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) nss_compat/compat-spwd.c:157 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 77)
(note 75 74 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 14 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 24 [0x18])) [4 dest_6(D)->sp_min+0 S8 A64])
        (reg:DI 95 [ D.12478 ])) nss_compat/compat-spwd.c:158 -1
     (nil))
(code_label 77 76 78 15 45 "" [1 uses])
(note 78 77 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 15 (set (reg:DI 96 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 32 [0x20])) [4 src_1(D)->sp_max+0 S8 A64])) nss_compat/compat-spwd.c:159 -1
     (nil))
(insn 80 79 81 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 96 [ D.12478 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:159 -1
     (nil))
(jump_insn 81 80 82 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) nss_compat/compat-spwd.c:159 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 84)
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 16 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 32 [0x20])) [4 dest_6(D)->sp_max+0 S8 A64])
        (reg:DI 96 [ D.12478 ])) nss_compat/compat-spwd.c:160 -1
     (nil))
(code_label 84 83 85 17 46 "" [1 uses])
(note 85 84 86 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 17 (set (reg:DI 97 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 40 [0x28])) [4 src_1(D)->sp_warn+0 S8 A64])) nss_compat/compat-spwd.c:161 -1
     (nil))
(insn 87 86 88 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 97 [ D.12478 ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:161 -1
     (nil))
(jump_insn 88 87 89 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) nss_compat/compat-spwd.c:161 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 91)
(note 89 88 90 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 18 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 40 [0x28])) [4 dest_6(D)->sp_warn+0 S8 A64])
        (reg:DI 97 [ D.12478 ])) nss_compat/compat-spwd.c:162 -1
     (nil))
(code_label 91 90 92 19 47 "" [1 uses])
(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 19 (set (reg:DI 98 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 48 [0x30])) [4 src_1(D)->sp_inact+0 S8 A64])) nss_compat/compat-spwd.c:163 -1
     (nil))
(insn 94 93 95 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 98 [ D.12478 ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:163 -1
     (nil))
(jump_insn 95 94 96 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) nss_compat/compat-spwd.c:163 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 98)
(note 96 95 97 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 20 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 48 [0x30])) [4 dest_6(D)->sp_inact+0 S8 A64])
        (reg:DI 98 [ D.12478 ])) nss_compat/compat-spwd.c:164 -1
     (nil))
(code_label 98 97 99 21 48 "" [1 uses])
(note 99 98 100 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 21 (set (reg:DI 99 [ D.12478 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 56 [0x38])) [4 src_1(D)->sp_expire+0 S8 A64])) nss_compat/compat-spwd.c:165 -1
     (nil))
(insn 101 100 102 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 99 [ D.12478 ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:165 -1
     (nil))
(jump_insn 102 101 103 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) nss_compat/compat-spwd.c:165 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 105)
(note 103 102 104 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 22 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 56 [0x38])) [4 dest_6(D)->sp_expire+0 S8 A64])
        (reg:DI 99 [ D.12478 ])) nss_compat/compat-spwd.c:166 -1
     (nil))
(code_label 105 104 106 23 49 "" [1 uses])
(note 106 105 107 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 23 (set (reg:DI 100 [ D.12477 ])
        (mem:DI (plus:DI (reg/v/f:DI 103 [ src ])
                (const_int 64 [0x40])) [4 src_1(D)->sp_flag+0 S8 A64])) nss_compat/compat-spwd.c:167 -1
     (nil))
(insn 108 107 109 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 100 [ D.12477 ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:167 -1
     (nil))
(jump_insn 109 108 110 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 114)
            (pc))) nss_compat/compat-spwd.c:167 612 {*jcc_1}
     (int_list:REG_BR_PROB 1991 (nil))
 -> 114)
(note 110 109 111 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 114 24 (set (mem:DI (plus:DI (reg/v/f:DI 102 [ dest ])
                (const_int 64 [0x40])) [4 dest_6(D)->sp_flag+0 S8 A64])
        (reg:DI 100 [ D.12477 ])) nss_compat/compat-spwd.c:168 -1
     (nil))
(code_label 114 111 115 26 40 "" [1 uses])
(note 115 114 0 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

;; Function getspnam_plususer (getspnam_plususer, funcdef_no=60, decl_uid=11557, cgraph_uid=60, symbol_order=70) (unlikely executed)

Partition 0: size 72 align 16
	pwd

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10
Edge 2->10 redirected to 13
Edge 3->5 redirected to 14
Edge 7->10 redirected to 15
Edge 8->10 redirected to 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 102.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 15 NOTE_INSN_DELETED)
(note 15 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 15 3 2 (set (reg/v/f:DI 105 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 106 [ result ])
        (reg:DI 4 si [ result ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 107 [ ent ])
        (reg:DI 1 dx [ ent ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 108 [ buffer ])
        (reg:DI 2 cx [ buffer ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(insn 6 5 7 2 (set (reg/v:DI 109 [ buflen ])
        (reg:DI 37 r8 [ buflen ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 110 [ errnop ])
        (reg:DI 38 r9 [ errnop ])) nss_compat/compat-spwd.c:437 -1
     (nil))
(note 8 7 17 2 NOTE_INSN_FUNCTION_BEG)
(insn 17 8 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getspnam_r") [flags 0x2]  <var_decl 0x2aefb826a7e0 nss_getspnam_r>) [3 nss_getspnam_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:438 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) nss_compat/compat-spwd.c:438 612 {*jcc_1}
     (int_list:REG_BR_PROB 177 (nil))
 -> 111)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:442 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:DI 112)
        (reg:DI 111)) nss_compat/compat-spwd.c:442 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 113)
        (const_int 0 [0])) nss_compat/compat-spwd.c:442 -1
     (nil))
(insn 23 22 24 4 (set (reg:DI 114)
        (const_int 18 [0x12])) nss_compat/compat-spwd.c:442 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 114)
                (const_int 0 [0]))
            (set (reg/f:DI 112)
                (plus:DI (ashift:DI (reg:DI 114)
                        (const_int 2 [0x2]))
                    (reg/f:DI 112)))
            (set (mem/c:BLK (reg/f:DI 112) [0 MEM[(void *)&pwd]+0 S72 A128])
                (const_int 0 [0]))
            (use (reg:SI 113))
            (use (reg:DI 114))
        ]) nss_compat/compat-spwd.c:442 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 115)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:443 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [4 pwd.sp_warn+0 S8 A64])
        (reg:DI 115)) nss_compat/compat-spwd.c:443 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 116)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:444 -1
     (nil))
(insn 28 27 29 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [4 pwd.sp_inact+0 S8 A128])
        (reg:DI 116)) nss_compat/compat-spwd.c:444 -1
     (nil))
(insn 29 28 30 4 (set (reg:DI 117)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:445 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [4 pwd.sp_expire+0 S8 A64])
        (reg:DI 117)) nss_compat/compat-spwd.c:445 -1
     (nil))
(insn 31 30 32 4 (set (reg:DI 118)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:446 -1
     (nil))
(insn 32 31 33 4 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [4 pwd.sp_flag+0 S8 A128])
        (reg:DI 118)) nss_compat/compat-spwd.c:446 -1
     (nil))
(insn 33 32 34 4 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:448 -1
     (nil))
(insn 34 33 35 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:448 -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 4 si)
        (reg/v/f:DI 106 [ result ])) nss_compat/compat-spwd.c:448 -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 5 di)
        (reg:DI 119)) nss_compat/compat-spwd.c:448 -1
     (nil))
(call_insn 37 36 38 4 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:448 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 38 37 39 4 (set (reg/f:DI 98 [ D.12489 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [3 MEM[(char * *)&pwd + 8B]+0 S8 A64])) -1
     (nil))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.12489 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:130 -1
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 115)
            (pc))) nss_compat/compat-spwd.c:130 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 115)
(note 41 40 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 41 42 5 (set (reg:DI 120)
        (reg/f:DI 98 [ D.12489 ])) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 42 48 43 5 (set (reg:DI 124)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 43 42 44 5 (set (reg:DI 123)
        (reg:DI 120)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 44 43 45 5 (set (reg:QI 125)
        (const_int 0 [0])) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 45 44 46 5 (parallel [
            (set (reg:DI 121)
                (unspec:DI [
                        (mem:BLK (reg:DI 123) [0  A8])
                        (reg:QI 125)
                        (const_int 1 [0x1])
                        (reg:DI 124)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 123))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 46 45 47 5 (set (reg:DI 122)
        (not:DI (reg:DI 121))) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 47 46 49 5 (parallel [
            (set (reg:DI 100 [ D.12488 ])
                (plus:DI (reg:DI 122)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 49 47 112 5 (parallel [
            (set (reg/v:SI 103 [ len ])
                (plus:SI (subreg:SI (reg:DI 100 [ D.12488 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:131 -1
     (nil))
(jump_insn 112 49 113 5 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
(barrier 113 112 115)
(code_label 115 113 114 6 87 "" [1 uses])
(note 114 115 9 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 9 114 50 6 (set (reg/v:SI 103 [ len ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:128 -1
     (nil))
(code_label 50 9 51 7 84 "" [1 uses])
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 7 (set (reg/v:DI 89 [ plen ])
        (sign_extend:DI (reg/v:SI 103 [ len ]))) nss_compat/compat-spwd.c:450 -1
     (nil))
(insn 53 52 54 7 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 89 [ plen ])
            (reg/v:DI 109 [ buflen ]))) nss_compat/compat-spwd.c:451 -1
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) nss_compat/compat-spwd.c:451 -1
     (int_list:REG_BR_PROB 9074 (nil))
 -> 59)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 11 8 (set (mem:SI (reg/v/f:DI 110 [ errnop ]) [2 *errnop_14(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:453 -1
     (nil))
(insn 11 56 57 8 (set (reg:SI 87 [ D.12486 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:454 -1
     (nil))
(jump_insn 57 11 58 8 (set (pc)
        (label_ref 99)) nss_compat/compat-spwd.c:454 -1
     (nil)
 -> 99)
(barrier 58 57 59)
(code_label 59 58 60 9 85 "" [1 uses])
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 9 (parallel [
            (set (reg:DI 90 [ D.12488 ])
                (minus:DI (reg/v:DI 109 [ buflen ])
                    (reg/v:DI 89 [ plen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:456 -1
     (nil))
(insn 62 61 63 9 (set (reg/f:DI 126)
        (mem/f/c:DI (symbol_ref:DI ("nss_getspnam_r") [flags 0x2]  <var_decl 0x2aefb826a7e0 nss_getspnam_r>) [3 nss_getspnam_r+0 S8 A64])) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 37 r8)
        (reg/v/f:DI 110 [ errnop ])) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 2 cx)
        (reg:DI 90 [ D.12488 ])) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 65 64 66 9 (set (reg:DI 1 dx)
        (reg/v/f:DI 108 [ buffer ])) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 4 si)
        (reg/v/f:DI 106 [ result ])) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ name ])) nss_compat/compat-spwd.c:459 -1
     (nil))
(call_insn 68 67 69 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 126) [0 *_19 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:459 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 69 68 70 9 (set (reg/v:SI 93 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:459 -1
     (nil))
(insn 70 69 71 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 93 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:461 -1
     (nil))
(jump_insn 71 70 72 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 119)
            (pc))) nss_compat/compat-spwd.c:461 612 {*jcc_1}
     (int_list:REG_BR_PROB 8010 (nil))
 -> 119)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 80 10 (set (reg/f:DI 94 [ D.12489 ])
        (mem/f:DI (reg/v/f:DI 106 [ result ]) [3 result_10(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 80 73 74 10 (set (reg:DI 127)
        (reg/f:DI 94 [ D.12489 ])) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 74 80 75 10 (set (reg:DI 131)
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 75 74 76 10 (set (reg:DI 130)
        (reg:DI 127)) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 76 75 77 10 (set (reg:QI 132)
        (const_int 0 [0])) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 77 76 78 10 (parallel [
            (set (reg:DI 128)
                (unspec:DI [
                        (mem:BLK (reg:DI 130) [0  A8])
                        (reg:QI 132)
                        (const_int 1 [0x1])
                        (reg:DI 131)
                    ] UNSPEC_SCAS))
            (clobber (reg:DI 130))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 78 77 79 10 (set (reg:DI 129)
        (not:DI (reg:DI 128))) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 79 78 81 10 (parallel [
            (set (reg:DI 95 [ D.12488 ])
                (plus:DI (reg:DI 129)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 81 79 82 10 (parallel [
            (set (reg:DI 133 [ D.12491 ])
                (plus:DI (reg/v/f:DI 107 [ ent ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 1 dx)
        (reg:DI 133 [ D.12491 ])) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 83 82 84 10 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 95 [ D.12488 ]) 0)) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.12489 ])) nss_compat/compat-spwd.c:464 -1
     (nil))
(call_insn 85 84 86 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>) [0 in_blacklist.isra.2 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:464 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 86 85 87 10 (set (reg:SI 97 [ D.12490 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:464 -1
     (nil))
(insn 87 86 88 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ D.12490 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:464 -1
     (nil))
(jump_insn 88 87 89 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 123)
            (pc))) nss_compat/compat-spwd.c:464 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 123)
(note 89 88 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (parallel [
            (set (reg:DI 134 [ p ])
                (plus:DI (reg/v/f:DI 108 [ buffer ])
                    (reg:DI 90 [ D.12488 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:467 -1
     (nil))
(insn 91 90 92 11 (parallel [
            (set (reg:DI 135)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:467 -1
     (nil))
(insn 92 91 93 11 (set (reg:DI 1 dx)
        (reg:DI 134 [ p ])) nss_compat/compat-spwd.c:467 -1
     (nil))
(insn 93 92 94 11 (set (reg:DI 4 si)
        (reg:DI 135)) nss_compat/compat-spwd.c:467 -1
     (nil))
(insn 94 93 95 11 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ result ])) nss_compat/compat-spwd.c:467 -1
     (nil))
(call_insn 95 94 96 11 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:467 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 96 95 97 11 (parallel [
            (set (reg:DI 136)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:468 -1
     (nil))
(insn 97 96 98 11 (set (reg:DI 5 di)
        (reg:DI 136)) nss_compat/compat-spwd.c:468 -1
     (nil))
(call_insn 98 97 14 11 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:468 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 98 108 11 (set (reg:SI 87 [ D.12486 ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:470 -1
     (nil))
(jump_insn 108 14 109 11 (set (pc)
        (label_ref 99)) nss_compat/compat-spwd.c:470 -1
     (nil)
 -> 99)
(barrier 109 108 111)
(code_label 111 109 110 12 86 "" [1 uses])
(note 110 111 10 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 10 110 116 12 (set (reg:SI 87 [ D.12486 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:439 -1
     (nil))
(jump_insn 116 10 117 12 (set (pc)
        (label_ref 99)) -1
     (nil)
 -> 99)
(barrier 117 116 119)
(code_label 119 117 118 13 88 "" [1 uses])
(note 118 119 12 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 12 118 120 13 (set (reg:SI 87 [ D.12486 ])
        (reg/v:SI 93 [ status ])) -1
     (nil))
(jump_insn 120 12 121 13 (set (pc)
        (label_ref 99)) -1
     (nil)
 -> 99)
(barrier 121 120 123)
(code_label 123 121 122 14 89 "" [1 uses])
(note 122 123 13 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 13 122 99 14 (set (reg:SI 87 [ D.12486 ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:465 -1
     (nil))
(code_label 99 13 100 15 83 "" [4 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 105 15 (set (reg:SI 104 [ <retval> ])
        (reg:SI 87 [ D.12486 ])) -1
     (nil))
(insn 105 101 106 15 (set (reg/i:SI 0 ax)
        (reg:SI 104 [ <retval> ])) nss_compat/compat-spwd.c:471 -1
     (nil))
(insn 106 105 0 15 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:471 -1
     (nil))

;; Function getspent_next_nss.constprop (getspent_next_nss.constprop.6, funcdef_no=74, decl_uid=12355, cgraph_uid=67, symbol_order=119)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11
Edge 2->11 redirected to 14
Edge 3->6 redirected to 15
Edge 7->11 redirected to 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 77.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 12 NOTE_INSN_DELETED)
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 103 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-spwd.c:401 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 104 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-spwd.c:401 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 105 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-spwd.c:401 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 106 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-spwd.c:401 -1
     (nil))
(note 6 5 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 6 15 2 (set (reg/f:DI 101 [ D.12500 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_getspent_r") [flags 0x2]  <var_decl 0x2aefb826a870 nss_getspent_r>) [3 nss_getspent_r+0 S8 A64])) nss_compat/compat-spwd.c:408 -1
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ D.12500 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:408 -1
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 86)
            (pc))) nss_compat/compat-spwd.c:408 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 86)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 107)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 87 [ D.12495 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 107)
                (const_int 40 [0x28])) [3 MEM[(char * *)&ext_ent + 40B]+0 S8 A64])) -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12495 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:130 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 88)
            (pc))) nss_compat/compat-spwd.c:130 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 88)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.12495 ])) nss_compat/compat-spwd.c:131 -1
     (nil))
(call_insn/i 24 23 25 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 5 (set (reg:DI 109)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 110)
        (reg:DI 109)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 88 [ D.12496 ])
        (reg:DI 110)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 28 27 29 5 (parallel [
            (set (reg:SI 111 [ D.12497 ])
                (plus:SI (subreg:SI (reg:DI 88 [ D.12496 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:411 -1
     (nil))
(insn 29 28 30 5 (set (reg/v:DI 92 [ p2len ])
        (sign_extend:DI (reg:SI 111 [ D.12497 ]))) nss_compat/compat-spwd.c:411 -1
     (nil))
(insn 30 29 31 5 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 92 [ p2len ])
            (reg/v:DI 105 [ buflen ]))) nss_compat/compat-spwd.c:412 -1
     (nil))
(jump_insn 31 30 32 5 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) nss_compat/compat-spwd.c:412 -1
     (int_list:REG_BR_PROB 9529 (nil))
 -> 36)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 9 6 (set (mem:SI (reg/v/f:DI 106 [ errnop ]) [2 *errnop_10(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:414 -1
     (nil))
(insn 9 33 34 6 (set (reg:SI 100 [ D.12499 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:415 -1
     (nil))
(jump_insn 34 9 35 6 (set (pc)
        (label_ref 74)) nss_compat/compat-spwd.c:414 -1
     (nil)
 -> 74)
(barrier 35 34 88)
(code_label 88 35 87 7 99 "" [1 uses])
(note 87 88 7 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 7 87 36 7 (set (reg/v:DI 92 [ p2len ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:411 -1
     (nil))
(code_label 36 7 37 8 95 "" [1 uses])
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 64 8 (parallel [
            (set (reg:DI 93 [ D.12496 ])
                (minus:DI (reg/v:DI 105 [ buflen ])
                    (reg/v:DI 92 [ p2len ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:417 -1
     (nil))
(code_label 64 38 39 9 97 "" [1 uses])
(note 39 64 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 106 [ errnop ])) nss_compat/compat-spwd.c:421 -1
     (nil))
(insn 41 40 42 9 (set (reg:DI 1 dx)
        (reg:DI 93 [ D.12496 ])) nss_compat/compat-spwd.c:421 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ buffer ])) nss_compat/compat-spwd.c:421 -1
     (nil))
(insn 43 42 44 9 (set (reg:DI 5 di)
        (reg/v/f:DI 103 [ result ])) nss_compat/compat-spwd.c:421 -1
     (nil))
(call_insn 44 43 45 9 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 101 [ D.12500 ]) [0 *_33 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:421 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 45 44 46 9 (set (reg/v:SI 95 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:421 -1
     (nil))
(insn 46 45 47 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:421 -1
     (nil))
(jump_insn 47 46 48 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 92)
            (pc))) nss_compat/compat-spwd.c:421 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 92)
(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 10 (set (reg/f:DI 96 [ D.12495 ])
        (mem/f:DI (reg/v/f:DI 103 [ result ]) [3 result_15(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 50 49 51 10 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.12495 ])) nss_compat/compat-spwd.c:425 -1
     (nil))
(call_insn/i 51 50 52 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:425 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 53 10 (set (reg:DI 113)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 53 52 54 10 (set (reg:DI 114)
        (reg:DI 113)) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 97 [ D.12496 ])
        (reg:DI 114)) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 55 54 56 10 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 56 55 57 10 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 97 [ D.12496 ]) 0)) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 57 56 58 10 (set (reg:DI 5 di)
        (reg/f:DI 96 [ D.12495 ])) nss_compat/compat-spwd.c:425 -1
     (nil))
(call_insn 58 57 59 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>) [0 in_blacklist.isra.2 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:425 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 59 58 60 10 (set (reg:SI 99 [ D.12498 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:425 -1
     (nil))
(insn 60 59 61 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 99 [ D.12498 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:425 -1
     (nil))
(jump_insn 61 60 62 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) nss_compat/compat-spwd.c:425 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 67)
(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 65 11 (set (reg/f:DI 101 [ D.12500 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_getspent_r") [flags 0x2]  <var_decl 0x2aefb826a870 nss_getspent_r>) [3 nss_getspent_r+0 S8 A64])) -1
     (nil))
(jump_insn 65 63 66 11 (set (pc)
        (label_ref 64)) -1
     (nil)
 -> 64)
(barrier 66 65 67)
(code_label 67 66 68 12 96 "" [1 uses])
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (parallel [
            (set (reg:DI 115 [ p2 ])
                (plus:DI (reg/v/f:DI 104 [ buffer ])
                    (reg:DI 93 [ D.12496 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:427 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 1 dx)
        (reg:DI 115 [ p2 ])) nss_compat/compat-spwd.c:427 -1
     (nil))
(insn 71 70 72 12 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:427 -1
     (nil))
(insn 72 71 73 12 (set (reg:DI 5 di)
        (reg/v/f:DI 103 [ result ])) nss_compat/compat-spwd.c:427 -1
     (nil))
(call_insn 73 72 11 12 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:427 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 11 73 83 12 (set (reg:SI 100 [ D.12499 ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:429 -1
     (nil))
(jump_insn 83 11 84 12 (set (pc)
        (label_ref 74)) -1
     (nil)
 -> 74)
(barrier 84 83 86)
(code_label 86 84 85 13 98 "" [1 uses])
(note 85 86 8 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 8 85 89 13 (set (reg:SI 100 [ D.12499 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:409 -1
     (nil))
(jump_insn 89 8 90 13 (set (pc)
        (label_ref 74)) -1
     (nil)
 -> 74)
(barrier 90 89 92)
(code_label 92 90 91 14 100 "" [1 uses])
(note 91 92 10 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 10 91 74 14 (set (reg:SI 100 [ D.12499 ])
        (reg/v:SI 95 [ status ])) nss_compat/compat-spwd.c:421 -1
     (nil))
(code_label 74 10 75 15 94 "" [3 uses])
(note 75 74 76 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 80 15 (set (reg:SI 102 [ <retval> ])
        (reg:SI 100 [ D.12499 ])) -1
     (nil))
(insn 80 76 81 15 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) nss_compat/compat-spwd.c:430 -1
     (nil))
(insn 81 80 0 15 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:430 -1
     (nil))

;; Function blacklist_store_name.constprop (blacklist_store_name.constprop.8, funcdef_no=72, decl_uid=12357, cgraph_uid=4, symbol_order=122)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 15 failed.
Redirecting jump 35 from 14 to 15.
Edge 7->5 redirected to 15
Redirecting jump 95 from 14 to 15.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 15 failed.
Deleted label in block 5.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 114 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-spwd.c:847 -1
     (nil))
(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 3 10 2 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-spwd.c:849 -1
     (nil))
(call_insn/i 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:849 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 116)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:849 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 117)
        (reg:DI 116)) nss_compat/compat-spwd.c:849 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 87 [ D.12507 ])
        (reg:DI 117)) nss_compat/compat-spwd.c:849 -1
     (nil))
(insn 14 13 15 2 (set (reg/v:SI 88 [ namelen ])
        (subreg:SI (reg:DI 87 [ D.12507 ]) 0)) nss_compat/compat-spwd.c:849 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 118)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:853 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 118)
                    (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:853 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) nss_compat/compat-spwd.c:853 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 45)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 21 4 (parallel [
            (set (reg:SI 91 [ D.12508 ])
                (ashift:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 21 19 20 4 (set (reg:SI 119)
        (const_int 512 [0x200])) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 20 21 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 91 [ D.12508 ])
            (const_int 512 [0x200]))) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 22 20 23 4 (set (reg:SI 91 [ D.12508 ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 91 [ D.12508 ])
            (reg:SI 119))) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 120)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 24 23 25 4 (set (mem/c:SI (plus:DI (reg/f:DI 120)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (reg:SI 91 [ D.12508 ])) nss_compat/compat-spwd.c:855 -1
     (nil))
(insn 25 24 26 4 (set (reg:DI 121 [ D.12507 ])
        (sign_extend:DI (reg:SI 91 [ D.12508 ]))) nss_compat/compat-spwd.c:856 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 121 [ D.12507 ])) nss_compat/compat-spwd.c:856 -1
     (nil))
(call_insn 27 26 28 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aefb7d0d360 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:856 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x2aefb7d0d360 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 122)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:856 -1
     (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))
(insn 29 28 30 4 (set (reg/f:DI 93 [ D.12509 ])
        (reg/f:DI 122)) nss_compat/compat-spwd.c:856 -1
     (nil))
(insn 30 29 31 4 (set (reg/f:DI 123)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:856 -1
     (nil))
(insn 31 30 32 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 123)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])
        (reg/f:DI 93 [ D.12509 ])) nss_compat/compat-spwd.c:856 -1
     (nil))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.12509 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:857 -1
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) nss_compat/compat-spwd.c:857 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 37)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 35 34 36 5 (set (pc)
        (label_ref:DI 126)) nss_compat/compat-spwd.c:857 654 {jump}
     (nil)
 -> 126)
(barrier 36 35 37)
(code_label 37 36 38 6 106 "" [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (mem:QI (reg/f:DI 93 [ D.12509 ]) [0 MEM[(char *)_8]+0 S1 A64])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:859 -1
     (nil))
(insn 40 39 41 6 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.12509 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:860 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 124)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:861 -1
     (nil))
(insn 42 41 4 6 (set (mem/c:SI (plus:DI (reg/f:DI 124)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:861 -1
     (nil))
(insn 4 42 5 6 (set (reg/f:DI 94 [ D.12510 ])
        (reg/f:DI 93 [ D.12509 ])) nss_compat/compat-spwd.c:861 -1
     (nil))
(insn 5 4 43 6 (set (reg:DI 113 [ D.12511 ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:861 -1
     (nil))
(jump_insn 43 5 44 6 (set (pc)
        (label_ref 104)) nss_compat/compat-spwd.c:861 -1
     (nil)
 -> 104)
(barrier 44 43 45)
(code_label 45 44 46 7 105 "" [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-spwd.c:865 -1
     (nil))
(insn 48 47 49 7 (set (reg:SI 4 si)
        (reg/v:SI 88 [ namelen ])) nss_compat/compat-spwd.c:865 -1
     (nil))
(insn 49 48 50 7 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-spwd.c:865 -1
     (nil))
(call_insn 50 49 51 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>) [0 in_blacklist.isra.2 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:865 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 51 50 53 7 (set (reg:SI 95 [ D.12508 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:865 -1
     (nil))
(insn 53 51 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.12508 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:865 -1
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) nss_compat/compat-spwd.c:865 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 126)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 8 (set (reg/f:DI 125)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 57 56 58 8 (set (reg:SI 96 [ D.12508 ])
        (mem/c:SI (plus:DI (reg/f:DI 125)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 58 57 59 8 (set (reg/f:DI 126)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 59 58 60 8 (set (reg:SI 99 [ D.12508 ])
        (mem/c:SI (plus:DI (reg/f:DI 126)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:SI 127 [ D.12508 ])
                (plus:SI (reg/v:SI 88 [ namelen ])
                    (reg:SI 96 [ D.12508 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:SI 128 [ D.12508 ])
                (plus:SI (reg:SI 127 [ D.12508 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:868 -1
     (nil))
(insn 62 61 63 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 128 [ D.12508 ])
            (reg:SI 99 [ D.12508 ]))) nss_compat/compat-spwd.c:868 -1
     (nil))
(jump_insn 63 62 64 8 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nss_compat/compat-spwd.c:868 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 70)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:DI 129)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 66 65 67 9 (set (reg/f:DI 94 [ D.12510 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 129)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 113 [ D.12511 ])
        (sign_extend:DI (reg:SI 96 [ D.12508 ]))) -1
     (nil))
(jump_insn 68 67 69 9 (set (pc)
        (label_ref 104)) -1
     (nil)
 -> 104)
(barrier 69 68 70)
(code_label 70 69 71 10 110 "" [1 uses])
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 74 10 (parallel [
            (set (reg:SI 130 [ D.12508 ])
                (ashift:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 74 72 73 10 (set (reg:SI 131)
        (const_int 256 [0x100])) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 73 74 75 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 130 [ D.12508 ])
            (const_int 256 [0x100]))) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 75 73 76 10 (set (reg:SI 130 [ D.12508 ])
        (if_then_else:SI (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (reg:SI 130 [ D.12508 ])
            (reg:SI 131))) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 76 75 77 10 (parallel [
            (set (reg:SI 102 [ D.12508 ])
                (plus:SI (reg:SI 130 [ D.12508 ])
                    (reg:SI 99 [ D.12508 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 77 76 78 10 (set (reg/f:DI 132)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 78 77 79 10 (set (mem/c:SI (plus:DI (reg/f:DI 132)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (reg:SI 102 [ D.12508 ])) nss_compat/compat-spwd.c:870 -1
     (nil))
(insn 79 78 80 10 (set (reg:DI 133 [ D.12507 ])
        (sign_extend:DI (reg:SI 102 [ D.12508 ]))) nss_compat/compat-spwd.c:871 -1
     (nil))
(insn 80 79 81 10 (set (reg/f:DI 134)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:871 -1
     (nil))
(insn 81 80 82 10 (set (reg:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 134)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) nss_compat/compat-spwd.c:871 -1
     (nil))
(insn 82 81 83 10 (set (reg:DI 4 si)
        (reg:DI 133 [ D.12507 ])) nss_compat/compat-spwd.c:871 -1
     (nil))
(insn 83 82 84 10 (set (reg:DI 5 di)
        (reg:DI 135)) nss_compat/compat-spwd.c:871 -1
     (nil))
(call_insn 84 83 85 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2aefb7d11000 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:871 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x2aefb7d11000 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 85 84 86 10 (set (reg/v/f:DI 105 [ tmp ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:871 -1
     (nil))
(insn 86 85 87 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ tmp ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:872 -1
     (nil))
(jump_insn 87 86 88 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) nss_compat/compat-spwd.c:872 -1
     (int_list:REG_BR_PROB 9559 (nil))
 -> 97)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 11 (set (reg/f:DI 136)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:874 -1
     (nil))
(insn 90 89 91 11 (set (reg:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 136)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])) nss_compat/compat-spwd.c:874 -1
     (nil))
(insn 91 90 92 11 (set (reg:DI 5 di)
        (reg:DI 137)) nss_compat/compat-spwd.c:874 -1
     (nil))
(call_insn 92 91 93 11 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:874 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x2aefb7d03e58 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 93 92 94 11 (set (reg/f:DI 138)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:875 -1
     (nil))
(insn 94 93 95 11 (set (mem/c:SI (plus:DI (reg/f:DI 138)
                (const_int 28 [0x1c])) [2 ext_ent.blacklist.size+0 S4 A32])
        (const_int 0 [0])) nss_compat/compat-spwd.c:875 -1
     (nil))
(jump_insn 95 94 96 11 (set (pc)
        (label_ref:DI 126)) nss_compat/compat-spwd.c:875 654 {jump}
     (nil)
 -> 126)
(barrier 96 95 97)
(code_label 97 96 98 12 111 "" [1 uses])
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 12 (set (reg/f:DI 139)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:878 -1
     (nil))
(insn 100 99 101 12 (set (mem/f/c:DI (plus:DI (reg/f:DI 139)
                (const_int 16 [0x10])) [3 ext_ent.blacklist.data+0 S8 A128])
        (reg/v/f:DI 105 [ tmp ])) nss_compat/compat-spwd.c:878 -1
     (nil))
(insn 101 100 102 12 (set (reg/f:DI 140)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 102 101 103 12 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 140)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) -1
     (nil))
(insn 103 102 6 12 (set (reg:DI 113 [ D.12511 ])
        (sign_extend:DI (reg:SI 141))) -1
     (nil))
(insn 6 103 104 12 (set (reg/f:DI 94 [ D.12510 ])
        (reg/v/f:DI 105 [ tmp ])) nss_compat/compat-spwd.c:878 -1
     (nil))
(code_label 104 6 105 13 108 "" [2 uses])
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 107 13 (parallel [
            (set (reg:DI 142 [ D.12510 ])
                (plus:DI (reg/f:DI 94 [ D.12510 ])
                    (reg:DI 113 [ D.12511 ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:882 -1
     (nil))
(insn 107 106 108 13 (set (reg:DI 4 si)
        (reg/v/f:DI 114 [ name ])) nss_compat/compat-spwd.c:882 -1
     (nil))
(insn 108 107 109 13 (set (reg:DI 5 di)
        (reg:DI 142 [ D.12510 ])) nss_compat/compat-spwd.c:882 -1
     (nil))
(call_insn 109 108 110 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2aefb7ce46c0 __builtin_stpcpy>) [0 __builtin_stpcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:882 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__stpcpy") [flags 0x41]  <function_decl 0x2aefb7ce46c0 __builtin_stpcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 110 109 111 13 (set (reg:DI 143)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:882 -1
     (nil))
(insn 111 110 112 13 (set (reg:DI 144)
        (reg:DI 143)) nss_compat/compat-spwd.c:882 -1
     (nil))
(insn 112 111 113 13 (set (reg/v/f:DI 108 [ tmp ])
        (reg:DI 144)) nss_compat/compat-spwd.c:882 -1
     (nil))
(insn 113 112 114 13 (set (mem:QI (reg/v/f:DI 108 [ tmp ]) [0 *tmp_26+0 S1 A8])
        (const_int 124 [0x7c])) nss_compat/compat-spwd.c:883 -1
     (nil))
(insn 114 113 115 13 (set (mem:QI (plus:DI (reg/v/f:DI 108 [ tmp ])
                (const_int 1 [0x1])) [0 MEM[(char *)tmp_26 + 1B]+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:884 -1
     (nil))
(insn 115 114 116 13 (set (reg/f:DI 145)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:885 -1
     (nil))
(insn 116 115 117 13 (set (reg/f:DI 146)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:885 -1
     (nil))
(insn 117 116 121 13 (parallel [
            (set (reg:SI 147 [ D.12508 ])
                (plus:SI (reg/v:SI 88 [ namelen ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:885 -1
     (nil))
(insn 121 117 122 13 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 146)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])) nss_compat/compat-spwd.c:885 -1
     (nil))
(insn 122 121 123 13 (parallel [
            (set (reg:SI 150 [ D.12508 ])
                (plus:SI (reg:SI 147 [ D.12508 ])
                    (reg:SI 151)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:885 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 147 [ D.12508 ])
            (mem/c:SI (plus:DI (reg/f:DI 146)
                    (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64]))
        (nil)))
(insn 123 122 126 13 (set (mem/c:SI (plus:DI (reg/f:DI 145)
                (const_int 24 [0x18])) [2 ext_ent.blacklist.current+0 S4 A64])
        (reg:SI 150 [ D.12508 ])) nss_compat/compat-spwd.c:885 -1
     (nil))
(code_label 126 123 127 15 104 "" [3 uses])
(note 127 126 0 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

;; Function getspent_next_nss_netgr.constprop (getspent_next_nss_netgr.constprop.7, funcdef_no=73, decl_uid=12356, cgraph_uid=45, symbol_order=120)

Partition 3: size 8 align 8
	domain
Partition 2: size 8 align 8
	user
Partition 1: size 8 align 8
	host
Partition 0: size 8 align 8
	curdomain

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24
Edge 2->24 redirected to 29


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 20->21 to 14 failed.
Removing jump 184.
Merging block 29 into block 28...
Merged blocks 28 and 29.
Merged 28 and 29 without moving.


try_optimize_cfg iteration 2

Forwarding edge 20->21 to 14 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 13 NOTE_INSN_DELETED)
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 112 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-spwd.c:315 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 113 [ group ])
        (reg:DI 4 si [ group ])) nss_compat/compat-spwd.c:315 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 114 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-spwd.c:315 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 115 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-spwd.c:315 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 116 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-spwd.c:315 -1
     (nil))
(note 7 6 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 7 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])
        (const_int 0 [0])) nss_compat/compat-spwd.c:319 -1
     (nil))
(insn 16 15 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("nss_getspnam_r") [flags 0x2]  <var_decl 0x2aefb826a7e0 nss_getspnam_r>) [3 nss_getspnam_r+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:322 -1
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 193)
            (pc))) nss_compat/compat-spwd.c:322 612 {*jcc_1}
     (int_list:REG_BR_PROB 73 (nil))
 -> 193)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg/f:DI 117)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:326 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 88 [ D.12516 ])
        (mem/c:SI (plus:DI (reg/f:DI 117)
                (const_int 4 [0x4])) [9 ext_ent.setent_status+0 S4 A32])) nss_compat/compat-spwd.c:326 -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.12516 ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:326 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) nss_compat/compat-spwd.c:326 -1
     (int_list:REG_BR_PROB 6218 (nil))
 -> 181)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:DI 118)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:329 -1
     (nil))
(insn 25 24 26 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 118)
                    (const_int 2 [0x2])) [8 ext_ent.first+0 S1 A16])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:329 -1
     (nil))
(jump_insn 26 25 27 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) nss_compat/compat-spwd.c:329 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 38)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 6 (set (reg/f:DI 119)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 104 [0x68])))) nss_compat/compat-spwd.c:331 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:DI 120)
        (reg/f:DI 119)) nss_compat/compat-spwd.c:331 -1
     (nil))
(insn 30 29 31 6 (set (reg:DI 121)
        (const_int 0 [0])) nss_compat/compat-spwd.c:331 -1
     (nil))
(insn 31 30 32 6 (set (reg:DI 122)
        (const_int 11 [0xb])) nss_compat/compat-spwd.c:331 -1
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 122)
                (const_int 0 [0]))
            (set (reg/f:DI 120)
                (plus:DI (ashift:DI (reg:DI 122)
                        (const_int 3 [0x3]))
                    (reg/f:DI 120)))
            (set (mem/c:BLK (reg/f:DI 120) [0 MEM[(void *)&ext_ent + 104B]+0 S88 A64])
                (const_int 0 [0]))
            (use (reg:DI 121))
            (use (reg:DI 122))
        ]) nss_compat/compat-spwd.c:331 -1
     (nil))
(insn 33 32 34 6 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 104 [0x68])))) nss_compat/compat-spwd.c:332 -1
     (nil))
(insn 34 33 35 6 (set (reg:DI 5 di)
        (reg/v/f:DI 113 [ group ])) nss_compat/compat-spwd.c:332 -1
     (nil))
(call_insn 35 34 36 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2aefb82b36c0 __internal_setnetgrent>) [0 __internal_setnetgrent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:332 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2aefb82b36c0 __internal_setnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 36 35 37 6 (set (reg/f:DI 123)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:333 -1
     (nil))
(insn 37 36 38 6 (set (mem/c:QI (plus:DI (reg/f:DI 123)
                (const_int 2 [0x2])) [8 ext_ent.first+0 S1 A16])
        (const_int 0 [0])) nss_compat/compat-spwd.c:333 -1
     (nil))
(code_label 38 37 39 7 116 "" [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 40 39 41 7 (set (pc)
        (label_ref 43)) nss_compat/compat-spwd.c:333 -1
     (nil)
 -> 43)
(barrier 41 40 73)
(code_label 73 41 42 8 119 "" [5 uses])
(note 42 73 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(code_label 43 42 44 9 117 "" [1 uses])
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 9 (parallel [
            (set (reg:DI 124)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 46 45 47 9 (parallel [
            (set (reg:DI 125)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:DI 126)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 48 47 49 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:340 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 49 48 50 9 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/v/f:DI 116 [ errnop ])) nss_compat/compat-spwd.c:340 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 50 49 51 9 (set (reg:DI 38 r9)
        (reg/v:DI 115 [ buflen ])) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 51 50 52 9 (set (reg:DI 37 r8)
        (reg/v/f:DI 114 [ buffer ])) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 104 [0x68])))) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 53 52 54 9 (set (reg:DI 1 dx)
        (reg:DI 124)) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 54 53 55 9 (set (reg:DI 4 si)
        (reg:DI 125)) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 5 di)
        (reg:DI 126)) nss_compat/compat-spwd.c:340 -1
     (nil))
(call_insn 56 55 57 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2aefb82b3870 __internal_getnetgrent_r>) [0 __internal_getnetgrent_r S1 A8])
            (const_int 16 [0x10]))) nss_compat/compat-spwd.c:340 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2aefb82b3870 __internal_getnetgrent_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 57 56 58 9 (set (reg/v:SI 90 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:340 -1
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:343 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 59 58 60 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:343 -1
     (nil))
(jump_insn 60 59 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) nss_compat/compat-spwd.c:343 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 70)
(note 61 60 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 10 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 104 [0x68])))) nss_compat/compat-spwd.c:345 -1
     (nil))
(call_insn 63 62 64 10 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:345 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 64 63 65 10 (set (reg/f:DI 127)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:346 -1
     (nil))
(insn 65 64 66 10 (set (mem/c:QI (reg/f:DI 127) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 0 [0])) nss_compat/compat-spwd.c:346 -1
     (nil))
(insn 66 65 67 10 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:347 -1
     (nil))
(call_insn 67 66 10 10 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:347 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 67 68 10 (set (reg:SI 88 [ D.12516 ])
        (const_int 2 [0x2])) nss_compat/compat-spwd.c:348 -1
     (nil))
(jump_insn 68 10 69 10 (set (pc)
        (label_ref 181)) nss_compat/compat-spwd.c:347 -1
     (nil)
 -> 181)
(barrier 69 68 70)
(code_label 70 69 71 11 118 "" [1 uses])
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 74 11 (set (reg/f:DI 91 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 user+0 S8 A64])) nss_compat/compat-spwd.c:351 -1
     (nil))
(insn 74 72 75 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.12518 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:351 -1
     (nil))
(jump_insn 75 74 76 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:351 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 73)
(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 91 [ D.12518 ]) [0 *_12+0 S1 A8])
            (const_int 45 [0x2d]))) nss_compat/compat-spwd.c:351 -1
     (nil))
(jump_insn 78 77 79 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:351 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 73)
(note 79 78 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 13 (set (reg/f:DI 93 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 domain+0 S8 A64])) nss_compat/compat-spwd.c:354 -1
     (nil))
(insn 81 80 82 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.12518 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:354 -1
     (nil))
(jump_insn 82 81 126 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) nss_compat/compat-spwd.c:354 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 91)
(code_label 126 82 83 14 125 "" [1 uses])
(note 83 126 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 14 (set (reg/f:DI 128)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 85 84 86 14 (set (reg/f:DI 98 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 128)
                (const_int 40 [0x28])) [3 MEM[(char * *)&ext_ent + 40B]+0 S8 A64])) -1
     (nil))
(insn 86 85 87 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.12518 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:130 -1
     (nil))
(jump_insn 87 86 90 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) nss_compat/compat-spwd.c:130 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 130)
(note 90 87 8 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 8 90 88 15 (set (reg/v:DI 97 [ p2len ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:373 -1
     (nil))
(jump_insn 88 8 89 15 (set (pc)
        (label_ref 145)) nss_compat/compat-spwd.c:130 -1
     (nil)
 -> 145)
(barrier 89 88 91)
(code_label 91 89 92 16 120 "" [1 uses])
(note 92 91 93 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 16 (set (reg/f:DI 94 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])) nss_compat/compat-spwd.c:356 -1
     (nil))
(insn 94 93 95 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.12518 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:356 -1
     (nil))
(jump_insn 95 94 96 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) nss_compat/compat-spwd.c:356 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 118)
(note 96 95 97 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 17 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:357 -1
     (nil))
(insn 98 97 99 17 (set (reg:DI 5 di)
        (reg:DI 129)) nss_compat/compat-spwd.c:357 -1
     (nil))
(call_insn 99 98 100 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("yp_get_default_domain") [flags 0x41]  <function_decl 0x2aefb8301ca8 yp_get_default_domain>) [0 yp_get_default_domain S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:357 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("yp_get_default_domain") [flags 0x41]  <function_decl 0x2aefb8301ca8 yp_get_default_domain>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 17 (set (reg:SI 95 [ D.12520 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:357 -1
     (nil))
(insn 101 100 102 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 95 [ D.12520 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:357 -1
     (nil))
(jump_insn 102 101 103 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) nss_compat/compat-spwd.c:357 -1
     (int_list:REG_BR_PROB 225 (nil))
 -> 108)
(note 103 102 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 18 (set (reg/f:DI 93 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 domain+0 S8 A64])) -1
     (nil))
(insn 105 104 106 18 (set (reg/f:DI 94 [ D.12518 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 curdomain+0 S8 A64])) -1
     (nil))
(jump_insn 106 105 107 18 (set (pc)
        (label_ref 118)) -1
     (nil)
 -> 118)
(barrier 107 106 108)
(code_label 108 107 109 19 124 "" [1 uses])
(note 109 108 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 19 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 104 [0x68])))) nss_compat/compat-spwd.c:359 -1
     (nil))
(call_insn 111 110 112 19 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:359 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 112 111 113 19 (set (reg/f:DI 130)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:360 -1
     (nil))
(insn 113 112 114 19 (set (mem/c:QI (reg/f:DI 130) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 0 [0])) nss_compat/compat-spwd.c:360 -1
     (nil))
(insn 114 113 115 19 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:361 -1
     (nil))
(call_insn 115 114 11 19 (call (mem:QI (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>) [0 give_spwd_free S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:361 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("give_spwd_free") [flags 0x3]  <function_decl 0x2aefb830dbd0 give_spwd_free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 115 116 19 (set (reg:SI 88 [ D.12516 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:362 -1
     (nil))
(jump_insn 116 11 117 19 (set (pc)
        (label_ref 181)) nss_compat/compat-spwd.c:361 -1
     (nil)
 -> 181)
(barrier 117 116 118)
(code_label 118 117 119 20 123 "" [2 uses])
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 20 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.12518 ])) nss_compat/compat-spwd.c:364 -1
     (nil))
(insn 121 120 122 20 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.12518 ])) nss_compat/compat-spwd.c:364 -1
     (nil))
(call_insn/i 122 121 123 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 123 122 124 20 (set (reg:SI 96 [ D.12520 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:364 -1
     (nil))
(insn 124 123 125 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.12520 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:364 -1
     (nil))
(jump_insn 125 124 129 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:364 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 73)
(note 129 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 127 129 128 21 (set (pc)
        (label_ref 126)) nss_compat/compat-spwd.c:364 -1
     (nil)
 -> 126)
(barrier 128 127 130)
(code_label 130 128 131 22 121 "" [1 uses])
(note 131 130 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 22 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.12518 ])) nss_compat/compat-spwd.c:131 -1
     (nil))
(call_insn/i 133 132 134 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:131 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 134 133 135 22 (set (reg:DI 132)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 135 134 136 22 (set (reg:DI 133)
        (reg:DI 132)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 136 135 137 22 (set (reg:DI 99 [ D.12521 ])
        (reg:DI 133)) nss_compat/compat-spwd.c:131 -1
     (nil))
(insn 137 136 138 22 (parallel [
            (set (reg:SI 134 [ D.12522 ])
                (plus:SI (subreg:SI (reg:DI 99 [ D.12521 ]) 0)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:373 -1
     (nil))
(insn 138 137 139 22 (set (reg/v:DI 97 [ p2len ])
        (sign_extend:DI (reg:SI 134 [ D.12522 ]))) nss_compat/compat-spwd.c:373 -1
     (nil))
(insn 139 138 140 22 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 115 [ buflen ])
            (reg/v:DI 97 [ p2len ]))) nss_compat/compat-spwd.c:374 -1
     (nil))
(jump_insn 140 139 141 22 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) nss_compat/compat-spwd.c:374 -1
     (int_list:REG_BR_PROB 9696 (nil))
 -> 145)
(note 141 140 142 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 12 23 (set (mem:SI (reg/v/f:DI 116 [ errnop ]) [2 *errnop_9(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:376 -1
     (nil))
(insn 12 142 143 23 (set (reg:SI 88 [ D.12516 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:377 -1
     (nil))
(jump_insn 143 12 144 23 (set (pc)
        (label_ref 181)) nss_compat/compat-spwd.c:376 -1
     (nil)
 -> 181)
(barrier 144 143 145)
(code_label 145 144 146 24 122 "" [2 uses])
(note 146 145 147 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 24 (parallel [
            (set (reg/v:DI 115 [ buflen ])
                (minus:DI (reg/v:DI 115 [ buflen ])
                    (reg/v:DI 97 [ p2len ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:379 -1
     (nil))
(insn 148 147 149 24 (set (reg:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 user+0 S8 A64])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 149 148 150 24 (set (reg/f:DI 136)
        (mem/f/c:DI (symbol_ref:DI ("nss_getspnam_r") [flags 0x2]  <var_decl 0x2aefb826a7e0 nss_getspnam_r>) [3 nss_getspnam_r+0 S8 A64])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 150 149 151 24 (set (reg:DI 37 r8)
        (reg/v/f:DI 116 [ errnop ])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 151 150 152 24 (set (reg:DI 2 cx)
        (reg/v:DI 115 [ buflen ])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 152 151 153 24 (set (reg:DI 1 dx)
        (reg/v/f:DI 114 [ buffer ])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 153 152 154 24 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ result ])) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 154 153 155 24 (set (reg:DI 5 di)
        (reg:DI 135)) nss_compat/compat-spwd.c:382 -1
     (nil))
(call_insn 155 154 156 24 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 136) [0 *_32 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:382 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 156 155 157 24 (set (reg:SI 88 [ D.12516 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:382 -1
     (nil))
(insn 157 156 158 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.12516 ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:382 -1
     (nil))
(jump_insn 158 157 159 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:382 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 73)
(note 159 158 160 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 25 (set (reg/f:DI 106 [ D.12518 ])
        (mem/f:DI (reg/v/f:DI 112 [ result ]) [3 result_34(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 161 160 162 25 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.12518 ])) nss_compat/compat-spwd.c:386 -1
     (nil))
(call_insn/i 162 161 163 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:386 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 163 162 164 25 (set (reg:DI 138)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 164 163 165 25 (set (reg:DI 139)
        (reg:DI 138)) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 165 164 166 25 (set (reg:DI 107 [ D.12521 ])
        (reg:DI 139)) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 166 165 167 25 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 16 [0x10])))) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 167 166 168 25 (set (reg:SI 4 si)
        (subreg:SI (reg:DI 107 [ D.12521 ]) 0)) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 168 167 169 25 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.12518 ])) nss_compat/compat-spwd.c:386 -1
     (nil))
(call_insn 169 168 170 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>) [0 in_blacklist.isra.2 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:386 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("in_blacklist.isra.2") [flags 0x3]  <function_decl 0x2aefb8408bd0 in_blacklist.isra.2>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 170 169 171 25 (set (reg:SI 109 [ D.12520 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:386 -1
     (nil))
(insn 171 170 172 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ D.12520 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:386 -1
     (nil))
(jump_insn 172 171 173 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:386 -1
     (int_list:REG_BR_PROB 9775 (nil))
 -> 73)
(note 173 172 174 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 26 (set (reg:DI 5 di)
        (mem/f:DI (reg/v/f:DI 112 [ result ]) [3 result_34(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:390 -1
     (nil))
(call_insn 175 174 176 26 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:390 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 176 175 177 26 (parallel [
            (set (reg:DI 140 [ p2 ])
                (plus:DI (reg/v/f:DI 114 [ buffer ])
                    (reg/v:DI 115 [ buflen ])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:391 -1
     (nil))
(insn 177 176 178 26 (set (reg:DI 1 dx)
        (reg:DI 140 [ p2 ])) nss_compat/compat-spwd.c:391 -1
     (nil))
(insn 178 177 179 26 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:391 -1
     (nil))
(insn 179 178 180 26 (set (reg:DI 5 di)
        (reg/v/f:DI 112 [ result ])) nss_compat/compat-spwd.c:391 -1
     (nil))
(call_insn 180 179 190 26 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:391 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 190 180 191 26 (set (pc)
        (label_ref 181)) -1
     (nil)
 -> 181)
(barrier 191 190 193)
(code_label 193 191 192 27 126 "" [1 uses])
(note 192 193 9 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 9 192 181 27 (set (reg:SI 88 [ D.12516 ])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:323 -1
     (nil))
(code_label 181 9 182 28 115 "" [5 uses])
(note 182 181 183 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 187 28 (set (reg:SI 111 [ <retval> ])
        (reg:SI 88 [ D.12516 ])) -1
     (nil))
(insn 187 183 188 28 (set (reg/i:SI 0 ax)
        (reg:SI 111 [ <retval> ])) nss_compat/compat-spwd.c:397 -1
     (nil))
(insn 188 187 0 28 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:397 -1
     (nil))

;; Function getspent_next_file.constprop (getspent_next_file.constprop.5, funcdef_no=75, decl_uid=12354, cgraph_uid=53, symbol_order=118)

Partition 1: size 1024 align 16
	buf2
Partition 5: size 88 align 16
	netgrdata
Partition 0: size 16 align 16
	pos
Partition 4: size 8 align 8
	domain
Partition 3: size 8 align 8
	host
Partition 2: size 8 align 8
	user

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51
Edge 9->48 redirected to 56


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 47 from 53 to 56.
Forwarding edge 10->11 to 15 failed.
Edge 26->51 redirected to 4
Redirecting jump 211 from 55 to 4.
Edge 34->51 redirected to 4
Edge 36->51 redirected to 4
Edge 37->55 redirected to 4
Redirecting jump 244 from 53 to 56.
Edge 39->51 redirected to 4
Redirecting jump 256 from 55 to 4.
Redirecting jump 309 from 55 to 4.
Redirecting jump 328 from 53 to 56.
Edge 49->51 redirected to 4
Redirecting jump 356 from 53 to 56.
deleting block 51
Merging block 53 into block 52...
Merged blocks 52 and 53.
Merged 52 and 53 without moving.
deleting block 55
Removing jump 369.
Removing jump 378.
Merging block 57 into block 56...
Merged blocks 56 and 57.
Merged 56 and 57 without moving.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 15 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 34 NOTE_INSN_DELETED)
(note 34 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 34 25 2 (set (reg/v/f:DI 159 [ result ])
        (reg:DI 5 di [ result ])) nss_compat/compat-spwd.c:475 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 160 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-spwd.c:475 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:DI 161 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-spwd.c:475 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 162 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-spwd.c:475 -1
     (nil))
(note 28 27 36 2 NOTE_INSN_FUNCTION_BEG)
(jump_insn 36 28 37 2 (set (pc)
        (label_ref 39)) nss_compat/compat-spwd.c:619 -1
     (nil)
 -> 39)
(barrier 37 36 360)
(code_label 360 37 38 4 162 "" [9 uses])
(note 38 360 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(code_label 39 38 40 5 137 "" [1 uses])
(note 40 39 132 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(code_label 132 40 41 6 147 "" [1 uses])
(note 41 132 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 161 [ buflen ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:488 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nss_compat/compat-spwd.c:488 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 49)
(code_label 44 43 45 7 139 ("erange") [1 uses])
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 29 7 (set (mem:SI (reg/v/f:DI 162 [ errnop ]) [2 *errnop_5(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:491 -1
     (nil))
(insn 29 46 47 7 (set (reg:SI 150 [ D.12547 ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:492 -1
     (nil))
(jump_insn 47 29 48 7 (set (pc)
        (label_ref:DI 375)) nss_compat/compat-spwd.c:491 654 {jump}
     (nil)
 -> 375)
(barrier 48 47 49)
(code_label 49 48 50 8 138 "" [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (parallel [
            (set (reg:DI 163 [ D.12546 ])
                (plus:DI (reg/v:DI 161 [ buflen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 52 51 53 8 (parallel [
            (set (reg/f:DI 146 [ D.12543 ])
                (plus:DI (reg/v/f:DI 160 [ buffer ])
                    (reg:DI 163 [ D.12546 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 53 52 115 8 (set (reg:SI 147 [ D.12537 ])
        (subreg:SI (reg/v:DI 161 [ buflen ]) 0)) -1
     (nil))
(code_label 115 53 54 9 146 "" [2 uses])
(note 54 115 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:495 -1
     (nil))
(insn 56 55 57 9 (set (reg/f:DI 165)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:495 -1
     (nil))
(insn 57 56 58 9 (set (reg:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 165)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:495 -1
     (nil))
(insn 58 57 59 9 (set (reg:DI 4 si)
        (reg:DI 164)) nss_compat/compat-spwd.c:495 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 5 di)
        (reg:DI 166)) nss_compat/compat-spwd.c:495 -1
     (nil))
(call_insn 60 59 61 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2aefb81e8510 fgetpos>) [0 fgetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:495 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2aefb81e8510 fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 9 (set (mem:QI (reg/f:DI 146 [ D.12543 ]) [0 *_64+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:496 -1
     (nil))
(insn 62 61 63 9 (set (reg/f:DI 167)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:497 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 167)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:497 -1
     (nil))
(insn 64 63 65 9 (set (reg:DI 1 dx)
        (reg:DI 168)) nss_compat/compat-spwd.c:497 -1
     (nil))
(insn 65 64 66 9 (set (reg:SI 4 si)
        (reg:SI 147 [ D.12537 ])) nss_compat/compat-spwd.c:497 -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 5 di)
        (reg/v/f:DI 160 [ buffer ])) nss_compat/compat-spwd.c:497 -1
     (nil))
(call_insn 67 66 68 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2aefb81dc5e8 fgets_unlocked>) [0 fgets_unlocked S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:497 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2aefb81dc5e8 fgets_unlocked>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 68 67 69 9 (set (reg/v/f:DI 116 [ p ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:497 -1
     (nil))
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 116 [ p ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:498 -1
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) nss_compat/compat-spwd.c:498 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 81)
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg/f:DI 169)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:498 -1
     (nil))
(insn 73 72 74 10 (set (reg/f:DI 111 [ D.12536 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 169)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:498 -1
     (nil))
(insn 74 73 75 10 (set (reg:SI 171)
        (mem:SI (reg/f:DI 111 [ D.12536 ]) [2 _13->_flags+0 S4 A64])) nss_compat/compat-spwd.c:498 -1
     (nil))
(insn 75 74 76 10 (parallel [
            (set (reg:SI 170 [ D.12537 ])
                (and:SI (reg:SI 171)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:498 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 111 [ D.12536 ]) [2 _13->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 76 75 77 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 170 [ D.12537 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:498 -1
     (nil))
(jump_insn 77 76 80 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 385)
            (pc))) nss_compat/compat-spwd.c:498 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 385)
(note 80 77 78 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 78 80 79 11 (set (pc)
        (label_ref 95)) nss_compat/compat-spwd.c:498 -1
     (nil)
 -> 95)
(barrier 79 78 81)
(code_label 81 79 82 12 141 "" [1 uses])
(note 82 81 83 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 146 [ D.12543 ]) [0 *_64+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:501 -1
     (nil))
(jump_insn 84 83 85 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) nss_compat/compat-spwd.c:501 -1
     (int_list:REG_BR_PROB 1000 (nil))
 -> 91)
(note 85 84 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 86 85 87 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aefb7dc1288 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aefb7dc1288 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 87 86 88 13 (set (reg/f:DI 155 [ D.12549 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 88 87 89 13 (set (reg/f:DI 154 [ D.12540 ])
        (mem/f:DI (reg/f:DI 155 [ D.12549 ]) [3 *_140+0 S8 A64])) -1
     (nil))
(jump_insn 89 88 90 13 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
(barrier 90 89 91)
(code_label 91 90 92 14 143 "" [1 uses])
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg/f:DI 172)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 94 93 95 14 (set (reg/f:DI 111 [ D.12536 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 172)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) -1
     (nil))
(code_label 95 94 96 15 142 ("erange_reset") [2 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:504 -1
     (nil))
(insn 98 97 99 15 (set (reg:DI 4 si)
        (reg:DI 173)) nss_compat/compat-spwd.c:504 -1
     (nil))
(insn 99 98 100 15 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.12536 ])) nss_compat/compat-spwd.c:504 -1
     (nil))
(call_insn 100 99 101 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:504 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 101 100 102 15 (set (pc)
        (label_ref 44)) nss_compat/compat-spwd.c:504 -1
     (nil)
 -> 44)
(barrier 102 101 108)
(code_label 108 102 103 16 145 "" [1 uses])
(note 103 108 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 16 (parallel [
            (set (reg/v/f:DI 116 [ p ])
                (plus:DI (reg/v/f:DI 116 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:510 -1
     (nil))
(code_label 105 104 106 17 144 "" [1 uses])
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 109 17 (set (reg:QI 117 [ D.12538 ])
        (mem:QI (reg/v/f:DI 116 [ p ]) [0 MEM[base: p_21, offset: 0B]+0 S1 A8])) nss_compat/compat-spwd.c:509 -1
     (nil))
(insn 109 107 110 17 (set (reg:DI 174 [ D.12539 ])
        (sign_extend:DI (reg:QI 117 [ D.12538 ]))) nss_compat/compat-spwd.c:509 -1
     (nil))
(insn 110 109 111 17 (set (reg:HI 176)
        (mem:HI (plus:DI (mult:DI (reg:DI 174 [ D.12539 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 154 [ D.12540 ])) [5 *_28+0 S2 A16])) nss_compat/compat-spwd.c:509 -1
     (nil))
(insn 111 110 112 17 (parallel [
            (set (reg:HI 175 [ D.12541 ])
                (and:HI (reg:HI 176)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:509 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 174 [ D.12539 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 154 [ D.12540 ])) [5 *_28+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 112 111 113 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 175 [ D.12541 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:509 -1
     (nil))
(jump_insn 113 112 114 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) nss_compat/compat-spwd.c:509 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 108)
(note 114 113 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 114 117 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ D.12538 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(insn 117 116 118 18 (set (reg:QI 178 [ D.12542 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(insn 118 117 119 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ D.12542 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(jump_insn 119 118 386 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) nss_compat/compat-spwd.c:516 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 115)
(note 386 119 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 386 121 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ D.12538 ])
            (const_int 35 [0x23]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(insn 121 120 122 19 (set (reg:QI 180 [ D.12542 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(insn 122 121 123 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 180 [ D.12542 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:516 -1
     (nil))
(jump_insn 123 122 124 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) nss_compat/compat-spwd.c:516 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 115)
(note 124 123 125 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 20 (set (reg:DI 37 r8)
        (reg/v/f:DI 162 [ errnop ])) nss_compat/compat-spwd.c:515 -1
     (nil))
(insn 126 125 127 20 (set (reg:DI 2 cx)
        (reg/v:DI 161 [ buflen ])) nss_compat/compat-spwd.c:515 -1
     (nil))
(insn 127 126 128 20 (set (reg:DI 1 dx)
        (reg/v/f:DI 160 [ buffer ])) nss_compat/compat-spwd.c:515 -1
     (nil))
(insn 128 127 129 20 (set (reg:DI 4 si)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:515 -1
     (nil))
(insn 129 128 130 20 (set (reg:DI 5 di)
        (reg/v/f:DI 116 [ p ])) nss_compat/compat-spwd.c:515 -1
     (nil))
(call_insn 130 129 131 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_spent") [flags 0x41]  <function_decl 0x2aefb82fd000 _nss_files_parse_spent>) [0 _nss_files_parse_spent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:515 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_spent") [flags 0x41]  <function_decl 0x2aefb82fd000 _nss_files_parse_spent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 131 130 133 20 (set (reg/v:SI 126 [ parse_res ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:515 -1
     (nil))
(insn 133 131 134 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 126 [ parse_res ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:515 -1
     (nil))
(jump_insn 134 133 135 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 132)
            (pc))) nss_compat/compat-spwd.c:515 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 132)
(note 135 134 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 126 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:518 -1
     (nil))
(jump_insn 137 136 138 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) nss_compat/compat-spwd.c:518 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 143)
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (set (reg/f:DI 181)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) -1
     (nil))
(insn 140 139 141 22 (set (reg/f:DI 111 [ D.12536 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 181)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) -1
     (nil))
(jump_insn 141 140 142 22 (set (pc)
        (label_ref 95)) -1
     (nil)
 -> 95)
(barrier 142 141 143)
(code_label 143 142 144 23 148 "" [1 uses])
(note 144 143 145 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 23 (set (reg/f:DI 127 [ D.12543 ])
        (mem/f:DI (reg/v/f:DI 159 [ result ]) [3 result_34(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:522 -1
     (nil))
(insn 146 145 147 23 (set (reg:QI 128 [ D.12538 ])
        (mem:QI (reg/f:DI 127 [ D.12543 ]) [0 *_39+0 S1 A8])) nss_compat/compat-spwd.c:522 -1
     (nil))
(insn 147 146 148 23 (parallel [
            (set (reg:QI 182 [ D.12548 ])
                (plus:QI (reg:QI 128 [ D.12538 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:522 -1
     (nil))
(insn 148 147 149 23 (parallel [
            (set (reg:QI 183 [ D.12548 ])
                (and:QI (reg:QI 182 [ D.12548 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:522 -1
     (nil))
(insn 149 148 150 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 183 [ D.12548 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:522 -1
     (nil))
(jump_insn 150 149 151 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 367)
            (pc))) nss_compat/compat-spwd.c:522 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 367)
(note 151 150 152 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.12538 ])
            (const_int 45 [0x2d]))) nss_compat/compat-spwd.c:527 -1
     (nil))
(jump_insn 153 152 154 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 213)
            (pc))) nss_compat/compat-spwd.c:527 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 213)
(note 154 153 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 25 (set (reg:QI 129 [ D.12538 ])
        (mem:QI (plus:DI (reg/f:DI 127 [ D.12543 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_39 + 1B]+0 S1 A8])) nss_compat/compat-spwd.c:527 -1
     (nil))
(insn 156 155 157 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ D.12538 ])
            (const_int 64 [0x40]))) nss_compat/compat-spwd.c:527 -1
     (nil))
(jump_insn 157 156 158 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 247)
            (pc))) nss_compat/compat-spwd.c:527 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 247)
(note 158 157 159 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 127 [ D.12543 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_39 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:528 -1
     (nil))
(jump_insn 160 159 161 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:528 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 360)
(note 161 160 162 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 27 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:535 -1
     (nil))
(insn 163 162 164 27 (set (reg/f:DI 185)
        (reg:DI 184)) nss_compat/compat-spwd.c:535 -1
     (nil))
(insn 164 163 165 27 (set (reg:DI 186)
        (const_int 0 [0])) nss_compat/compat-spwd.c:535 -1
     (nil))
(insn 165 164 166 27 (set (reg:DI 187)
        (const_int 11 [0xb])) nss_compat/compat-spwd.c:535 -1
     (nil))
(insn 166 165 167 27 (parallel [
            (set (reg:DI 187)
                (const_int 0 [0]))
            (set (reg/f:DI 185)
                (plus:DI (ashift:DI (reg:DI 187)
                        (const_int 3 [0x3]))
                    (reg/f:DI 185)))
            (set (mem/c:BLK (reg/f:DI 185) [0 MEM[(void *)&netgrdata]+0 S88 A128])
                (const_int 0 [0]))
            (use (reg:DI 186))
            (use (reg:DI 187))
        ]) nss_compat/compat-spwd.c:535 -1
     (nil))
(insn 167 166 168 27 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:536 -1
     (nil))
(insn 168 167 169 27 (parallel [
            (set (reg:DI 189 [ D.12544 ])
                (plus:DI (reg/f:DI 127 [ D.12543 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:536 -1
     (nil))
(insn 169 168 170 27 (set (reg:DI 4 si)
        (reg:DI 188)) nss_compat/compat-spwd.c:536 -1
     (nil))
(insn 170 169 171 27 (set (reg:DI 5 di)
        (reg:DI 189 [ D.12544 ])) nss_compat/compat-spwd.c:536 -1
     (nil))
(call_insn 171 170 172 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2aefb82b36c0 __internal_setnetgrent>) [0 __internal_setnetgrent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:536 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_setnetgrent") [flags 0x41]  <function_decl 0x2aefb82b36c0 __internal_setnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 172 171 173 27 (set (pc)
        (label_ref 186)) nss_compat/compat-spwd.c:536 -1
     (nil)
 -> 186)
(barrier 173 172 203)
(code_label 203 173 174 28 155 "" [1 uses])
(note 174 203 175 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 28 (set (reg/f:DI 132 [ D.12543 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -1160 [0xfffffffffffffb78])) [3 user+0 S8 A64])) nss_compat/compat-spwd.c:541 -1
     (nil))
(insn 176 175 177 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 132 [ D.12543 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:541 -1
     (nil))
(jump_insn 177 176 178 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) nss_compat/compat-spwd.c:541 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 184)
(note 178 177 179 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 179 178 180 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 132 [ D.12543 ]) [0 *_47+0 S1 A8])
            (const_int 45 [0x2d]))) nss_compat/compat-spwd.c:541 -1
     (nil))
(jump_insn 180 179 181 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 184)
            (pc))) nss_compat/compat-spwd.c:541 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 184)
(note 181 180 182 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 30 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.12543 ])) nss_compat/compat-spwd.c:542 -1
     (nil))
(call_insn 183 182 184 30 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:542 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 184 183 185 31 154 "" [2 uses])
(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(code_label 186 185 187 32 153 "" [1 uses])
(note 187 186 188 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 32 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 189 188 190 32 (parallel [
            (set (reg:DI 191)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 190 189 191 32 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1144 [0xfffffffffffffb88])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 191 190 192 32 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1160 [0xfffffffffffffb78])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 192 191 193 32 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1152 [0xfffffffffffffb80])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 193 192 194 32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 194 193 195 32 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg/v/f:DI 162 [ errnop ])) nss_compat/compat-spwd.c:537 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 195 194 196 32 (set (reg:DI 38 r9)
        (const_int 1024 [0x400])) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 196 195 197 32 (set (reg:DI 37 r8)
        (reg:DI 190)) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 197 196 198 32 (set (reg:DI 2 cx)
        (reg:DI 191)) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 198 197 199 32 (set (reg:DI 1 dx)
        (reg:DI 192)) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 199 198 200 32 (set (reg:DI 4 si)
        (reg:DI 193)) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 200 199 201 32 (set (reg:DI 5 di)
        (reg:DI 194)) nss_compat/compat-spwd.c:537 -1
     (nil))
(call_insn 201 200 202 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2aefb82b3870 __internal_getnetgrent_r>) [0 __internal_getnetgrent_r S1 A8])
            (const_int 16 [0x10]))) nss_compat/compat-spwd.c:537 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_getnetgrent_r") [flags 0x41]  <function_decl 0x2aefb82b3870 __internal_getnetgrent_r>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 202 201 204 32 (set (reg:SI 134 [ D.12537 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:537 -1
     (nil))
(insn 204 202 205 32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:537 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 205 204 206 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 134 [ D.12537 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:537 -1
     (nil))
(jump_insn 206 205 207 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) nss_compat/compat-spwd.c:537 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 203)
(note 207 206 208 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 33 (parallel [
            (set (reg:DI 195)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1120 [0xfffffffffffffba0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:544 -1
     (nil))
(insn 209 208 210 33 (set (reg:DI 5 di)
        (reg:DI 195)) nss_compat/compat-spwd.c:544 -1
     (nil))
(call_insn 210 209 211 33 (call (mem:QI (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>) [0 __internal_endnetgrent S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:544 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__internal_endnetgrent") [flags 0x41]  <function_decl 0x2aefb82b3798 __internal_endnetgrent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 211 210 212 33 (set (pc)
        (label_ref:DI 360)) 654 {jump}
     (nil)
 -> 360)
(barrier 212 211 213)
(code_label 213 212 214 34 150 "" [1 uses])
(note 214 213 215 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 215 214 216 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.12538 ])
            (const_int 43 [0x2b]))) nss_compat/compat-spwd.c:549 -1
     (nil))
(jump_insn 216 215 217 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:549 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 360)
(note 217 216 218 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 35 (set (reg:QI 135 [ D.12538 ])
        (mem:QI (plus:DI (reg/f:DI 127 [ D.12543 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_39 + 1B]+0 S1 A8])) nss_compat/compat-spwd.c:549 -1
     (nil))
(insn 219 218 220 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.12538 ])
            (const_int 64 [0x40]))) nss_compat/compat-spwd.c:549 -1
     (nil))
(jump_insn 220 219 221 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) nss_compat/compat-spwd.c:549 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 258)
(note 221 220 222 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 222 221 223 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 127 [ D.12543 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_39 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:550 -1
     (nil))
(jump_insn 223 222 224 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:550 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 360)
(note 224 223 225 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 37 (set (reg/f:DI 196)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:554 -1
     (nil))
(insn 226 225 227 37 (set (mem/c:QI (reg/f:DI 196) [8 ext_ent.netgroup+0 S1 A256])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:554 -1
     (nil))
(insn 227 226 228 37 (set (reg/f:DI 197)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:555 -1
     (nil))
(insn 228 227 229 37 (set (mem/c:QI (plus:DI (reg/f:DI 197)
                (const_int 2 [0x2])) [8 ext_ent.first+0 S1 A16])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:555 -1
     (nil))
(insn 229 228 230 37 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:556 -1
     (nil))
(insn 230 229 231 37 (set (reg:DI 4 si)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:556 -1
     (nil))
(insn 231 230 232 37 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:556 -1
     (nil))
(call_insn 232 231 233 37 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:556 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 233 232 234 37 (set (reg/f:DI 199)
        (mem/f:DI (reg/v/f:DI 159 [ result ]) [3 result_34(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 234 233 235 37 (parallel [
            (set (reg:DI 198 [ D.12543 ])
                (plus:DI (reg/f:DI 199)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:558 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (reg/v/f:DI 159 [ result ]) [3 result_34(D)->sp_namp+0 S8 A64])
            (const_int 2 [0x2]))
        (nil)))
(insn 235 234 236 37 (set (reg:DI 37 r8)
        (reg/v/f:DI 162 [ errnop ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 236 235 237 37 (set (reg:DI 2 cx)
        (reg/v:DI 161 [ buflen ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 237 236 238 37 (set (reg:DI 1 dx)
        (reg/v/f:DI 160 [ buffer ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 238 237 239 37 (set (reg:DI 4 si)
        (reg:DI 198 [ D.12543 ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 239 238 240 37 (set (reg:DI 5 di)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(call_insn 240 239 241 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2aefb8434a20 getspent_next_nss_netgr.constprop>) [0 getspent_next_nss_netgr.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:558 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2aefb8434a20 getspent_next_nss_netgr.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 241 240 242 37 (set (reg/v:SI 139 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:558 -1
     (nil))
(insn 242 241 243 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 139 [ status ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:561 -1
     (nil))
(jump_insn 243 242 246 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:561 612 {*jcc_1}
     (int_list:REG_BR_PROB 3782 (nil))
 -> 360)
(note 246 243 31 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 31 246 244 38 (set (reg:SI 150 [ D.12547 ])
        (reg/v:SI 139 [ status ])) nss_compat/compat-spwd.c:558 -1
     (nil))
(jump_insn 244 31 245 38 (set (pc)
        (label_ref:DI 375)) nss_compat/compat-spwd.c:561 654 {jump}
     (nil)
 -> 375)
(barrier 245 244 247)
(code_label 247 245 248 39 151 "" [1 uses])
(note 248 247 249 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 39 (parallel [
            (set (reg:QI 200 [ D.12538 ])
                (and:QI (reg:QI 129 [ D.12538 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:569 -1
     (nil))
(insn 250 249 251 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ D.12538 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:569 -1
     (nil))
(jump_insn 251 250 252 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:569 612 {*jcc_1}
     (int_list:REG_BR_PROB 4877 (nil))
 -> 360)
(note 252 251 253 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 40 (parallel [
            (set (reg:DI 201 [ D.12544 ])
                (plus:DI (reg/f:DI 127 [ D.12543 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:571 -1
     (nil))
(insn 254 253 255 40 (set (reg:DI 5 di)
        (reg:DI 201 [ D.12544 ])) nss_compat/compat-spwd.c:571 -1
     (nil))
(call_insn 255 254 256 40 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:571 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 256 255 257 40 (set (pc)
        (label_ref:DI 360)) nss_compat/compat-spwd.c:571 654 {jump}
     (nil)
 -> 360)
(barrier 257 256 258)
(code_label 258 257 259 41 157 "" [1 uses])
(note 259 258 260 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 41 (parallel [
            (set (reg:QI 202 [ D.12538 ])
                (and:QI (reg:QI 135 [ D.12538 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:577 -1
     (nil))
(insn 261 260 262 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 202 [ D.12538 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:577 -1
     (nil))
(jump_insn 262 261 263 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 337)
            (pc))) nss_compat/compat-spwd.c:577 -1
     (int_list:REG_BR_PROB 4877 (nil))
 -> 337)
(note 263 262 264 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 42 (set (reg:DI 203)
        (reg/f:DI 7 sp)) nss_compat/compat-spwd.c:578 -1
     (nil))
(insn 265 264 266 42 (set (reg/f:DI 141 [ D.12545 ])
        (reg:DI 203)) nss_compat/compat-spwd.c:578 -1
     (nil))
(insn 266 265 267 42 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.12543 ])) nss_compat/compat-spwd.c:579 -1
     (nil))
(call_insn/i 267 266 268 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:579 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x2aefb7ce7948 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 268 267 269 42 (set (reg:DI 205)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:579 -1
     (nil))
(insn 269 268 270 42 (set (reg:DI 206)
        (reg:DI 205)) nss_compat/compat-spwd.c:579 -1
     (nil))
(insn 270 269 271 42 (set (reg/v:DI 142 [ len ])
        (reg:DI 206)) nss_compat/compat-spwd.c:579 -1
     (nil))
(insn 271 270 272 42 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg:DI 86 virtual-preferred-stack-boundary)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 272 271 273 42 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/v:DI 142 [ len ])
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 273 272 274 42 (parallel [
            (set (reg:DI 210)
                (udiv:DI (reg:DI 208)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (set (reg:DI 211)
                (umod:DI (reg:DI 208)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 274 273 275 42 (parallel [
            (set (reg:DI 212)
                (mult:DI (reg:DI 210)
                    (reg:DI 86 virtual-preferred-stack-boundary)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 275 274 276 42 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 212)))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 276 275 277 42 (set (reg:DI 213)
        (reg/f:DI 83 virtual-stack-dynamic)) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 277 276 278 42 (parallel [
            (set (reg/f:DI 214)
                (plus:DI (reg:DI 213)
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 278 277 279 42 (set (reg/f:DI 143 [ buf.30 ])
        (reg/f:DI 214)) nss_compat/compat-spwd.c:580 -1
     (nil))
(insn 279 278 280 42 (parallel [
            (set (reg/f:DI 144 [ D.12543 ])
                (plus:DI (reg/f:DI 127 [ D.12543 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 280 279 281 42 (set (reg:DI 215)
        (reg/f:DI 143 [ buf.30 ])) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 281 280 282 42 (set (reg:DI 216)
        (reg/f:DI 144 [ D.12543 ])) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 282 281 283 42 (set (reg:DI 217)
        (reg/v:DI 142 [ len ])) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 283 282 284 42 (set (reg:DI 1 dx)
        (reg:DI 217)) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 284 283 285 42 (set (reg:DI 4 si)
        (reg:DI 216)) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 285 284 286 42 (set (reg:DI 5 di)
        (reg:DI 215)) nss_compat/compat-spwd.c:585 -1
     (nil))
(call_insn 286 285 287 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aefb8408d80 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:585 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x2aefb8408d80 memcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 287 286 288 42 (set (reg:DI 218)
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 288 287 289 42 (set (reg:DI 219)
        (reg:DI 218)) nss_compat/compat-spwd.c:585 -1
     (nil))
(insn 289 288 290 42 (set (reg:DI 38 r9)
        (reg/v/f:DI 162 [ errnop ])) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 290 289 291 42 (set (reg:DI 37 r8)
        (reg/v:DI 161 [ buflen ])) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 291 290 292 42 (set (reg:DI 2 cx)
        (reg/v/f:DI 160 [ buffer ])) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 292 291 293 42 (set (reg:DI 1 dx)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 293 292 294 42 (set (reg:DI 4 si)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 294 293 295 42 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.12543 ])) nss_compat/compat-spwd.c:586 -1
     (nil))
(call_insn 295 294 296 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>) [0 getspnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:586 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 296 295 297 42 (set (reg/v:SI 145 [ status ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:586 -1
     (nil))
(insn 297 296 298 42 (set (reg:DI 5 di)
        (reg/f:DI 143 [ buf.30 ])) nss_compat/compat-spwd.c:588 -1
     (nil))
(call_insn 298 297 299 42 (call (mem:QI (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>) [0 blacklist_store_name.constprop S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:588 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("blacklist_store_name.constprop.8") [flags 0x3]  <function_decl 0x2aefb8434e58 blacklist_store_name.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 299 298 300 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ status ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:590 -1
     (nil))
(jump_insn 300 299 301 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 330)
            (pc))) nss_compat/compat-spwd.c:590 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 330)
(note 301 300 302 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 43 (parallel [
            (set (reg:SI 220 [ D.12547 ])
                (and:SI (reg/v:SI 145 [ status ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:593 -1
     (nil))
(insn 303 302 304 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 220 [ D.12547 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:593 -1
     (nil))
(jump_insn 304 303 305 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 311)
            (pc))) nss_compat/compat-spwd.c:593 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 311)
(note 305 304 306 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 306 305 307 44 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-spwd.c:596 -1
     (nil))
(insn 307 306 308 44 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-spwd.c:596 -1
     (nil))
(insn 308 307 309 44 (set (reg/f:DI 7 sp)
        (reg/f:DI 141 [ D.12545 ])) nss_compat/compat-spwd.c:596 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 309 308 310 44 (set (pc)
        (label_ref:DI 360)) nss_compat/compat-spwd.c:596 654 {jump}
     (nil)
 -> 360)
(barrier 310 309 311)
(code_label 311 310 312 45 160 "" [1 uses])
(note 312 311 313 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 145 [ status ])
            (const_int -2 [0xfffffffffffffffe]))) nss_compat/compat-spwd.c:599 -1
     (nil))
(jump_insn 314 313 315 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 323)
            (pc))) nss_compat/compat-spwd.c:599 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 323)
(note 315 314 316 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 316 315 317 46 (parallel [
            (set (reg:DI 221)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -1136 [0xfffffffffffffb90])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:601 -1
     (nil))
(insn 317 316 318 46 (set (reg/f:DI 222)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:601 -1
     (nil))
(insn 318 317 319 46 (set (reg:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 222)
                (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:601 -1
     (nil))
(insn 319 318 320 46 (set (reg:DI 4 si)
        (reg:DI 221)) nss_compat/compat-spwd.c:601 -1
     (nil))
(insn 320 319 321 46 (set (reg:DI 5 di)
        (reg:DI 223)) nss_compat/compat-spwd.c:601 -1
     (nil))
(call_insn 321 320 322 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:601 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 322 321 323 46 (set (mem:SI (reg/v/f:DI 162 [ errnop ]) [2 *errnop_5(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:602 -1
     (nil))
(code_label 323 322 324 47 161 "" [1 uses])
(note 324 323 325 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 325 324 326 47 (clobber (mem:BLK (scratch) [0  A8])) nss_compat/compat-spwd.c:604 -1
     (nil))
(insn 326 325 327 47 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) nss_compat/compat-spwd.c:604 -1
     (nil))
(insn 327 326 32 47 (set (reg/f:DI 7 sp)
        (reg/f:DI 141 [ D.12545 ])) nss_compat/compat-spwd.c:604 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 32 327 328 47 (set (reg:SI 150 [ D.12547 ])
        (reg/v:SI 145 [ status ])) nss_compat/compat-spwd.c:604 -1
     (nil))
(jump_insn 328 32 329 47 (set (pc)
        (label_ref:DI 375)) nss_compat/compat-spwd.c:604 654 {jump}
     (nil)
 -> 375)
(barrier 329 328 330)
(code_label 330 329 331 48 159 "" [1 uses])
(note 331 330 332 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 333 48 (clobber (mem:BLK (scratch) [0  A8])) -1
     (nil))
(insn 333 332 334 48 (clobber (mem:BLK (reg/f:DI 7 sp) [0  A8])) -1
     (nil))
(insn 334 333 335 48 (set (reg/f:DI 7 sp)
        (reg/f:DI 141 [ D.12545 ])) -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(jump_insn 335 334 336 48 (set (pc)
        (label_ref 367)) -1
     (nil)
 -> 367)
(barrier 336 335 337)
(code_label 337 336 338 49 158 "" [1 uses])
(note 338 337 339 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 135 [ D.12538 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:609 -1
     (nil))
(jump_insn 340 339 341 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 360)
            (pc))) nss_compat/compat-spwd.c:609 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 360)
(note 341 340 342 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 342 341 343 50 (set (reg/f:DI 224)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:611 -1
     (nil))
(insn 343 342 344 50 (set (mem/c:QI (plus:DI (reg/f:DI 224)
                (const_int 1 [0x1])) [8 ext_ent.files+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:611 -1
     (nil))
(insn 344 343 345 50 (set (reg/f:DI 225)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:612 -1
     (nil))
(insn 345 344 346 50 (set (mem/c:QI (plus:DI (reg/f:DI 225)
                (const_int 2 [0x2])) [8 ext_ent.first+0 S1 A16])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:612 -1
     (nil))
(insn 346 345 347 50 (set (reg:DI 1 dx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:613 -1
     (nil))
(insn 347 346 348 50 (set (reg:DI 4 si)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:613 -1
     (nil))
(insn 348 347 349 50 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)
                (const_int 32 [0x20])))) nss_compat/compat-spwd.c:613 -1
     (nil))
(call_insn 349 348 350 50 (call (mem:QI (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>) [0 copy_spwd_changes.isra.3 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:613 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("copy_spwd_changes.isra.3") [flags 0x3]  <function_decl 0x2aefb8408288 copy_spwd_changes.isra.3>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 350 349 351 50 (set (reg:DI 2 cx)
        (reg/v/f:DI 162 [ errnop ])) nss_compat/compat-spwd.c:615 -1
     (nil))
(insn 351 350 352 50 (set (reg:DI 1 dx)
        (reg/v:DI 161 [ buflen ])) nss_compat/compat-spwd.c:615 -1
     (nil))
(insn 352 351 353 50 (set (reg:DI 4 si)
        (reg/v/f:DI 160 [ buffer ])) nss_compat/compat-spwd.c:615 -1
     (nil))
(insn 353 352 354 50 (set (reg:DI 5 di)
        (reg/v/f:DI 159 [ result ])) nss_compat/compat-spwd.c:615 -1
     (nil))
(call_insn 354 353 355 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_nss.constprop.6") [flags 0x3]  <function_decl 0x2aefb84346c0 getspent_next_nss.constprop>) [0 getspent_next_nss.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:615 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_nss.constprop.6") [flags 0x3]  <function_decl 0x2aefb84346c0 getspent_next_nss.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 355 354 356 50 (set (reg:SI 150 [ D.12547 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:615 -1
     (nil))
(jump_insn 356 355 357 50 (set (pc)
        (label_ref:DI 375)) nss_compat/compat-spwd.c:615 654 {jump}
     (nil)
 -> 375)
(barrier 357 356 385)
(code_label 385 357 384 52 164 "" [1 uses])
(note 384 385 30 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 30 384 365 52 (set (reg:SI 150 [ D.12547 ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:499 -1
     (nil))
(jump_insn 365 30 366 52 (set (pc)
        (label_ref 375)) nss_compat/compat-spwd.c:492 -1
     (nil)
 -> 375)
(barrier 366 365 367)
(code_label 367 366 368 54 149 "" [2 uses])
(note 368 367 33 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 33 368 375 54 (set (reg:SI 150 [ D.12547 ])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:619 -1
     (nil))
(code_label 375 33 376 56 163 "" [5 uses])
(note 376 375 377 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 381 56 (set (reg:SI 158 [ <retval> ])
        (reg:SI 150 [ D.12547 ])) -1
     (nil))
(insn 381 377 382 56 (set (reg/i:SI 0 ax)
        (reg:SI 158 [ <retval> ])) nss_compat/compat-spwd.c:620 -1
     (nil))
(insn 382 381 0 56 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:620 -1
     (nil))

;; Function _nss_compat_setspent (_nss_compat_setspent, funcdef_no=55, decl_uid=11236, cgraph_uid=55, symbol_order=65)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 36.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 90 [ stayopen ])
        (reg:SI 5 di [ stayopen ])) nss_compat/compat-spwd.c:251 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:254 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (reg:DI 92)) nss_compat/compat-spwd.c:254 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:254 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 13)
            (pc))) nss_compat/compat-spwd.c:254 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 13)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:254 -1
     (nil))
(call_insn 12 11 13 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:254 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 13 12 14 5 187 "" [1 uses])
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:256 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) nss_compat/compat-spwd.c:256 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 19)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 18 17 19 6 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:257 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 19 18 20 7 188 "" [1 uses])
(note 20 19 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:259 -1
     (nil))
(insn 22 21 23 7 (set (reg:SI 4 si)
        (reg/v:SI 90 [ stayopen ])) nss_compat/compat-spwd.c:259 -1
     (nil))
(insn 23 22 24 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:259 -1
     (nil))
(call_insn 24 23 25 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>) [0 internal_setspent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:259 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 25 24 26 7 (set (reg/v:SI 88 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:259 -1
     (nil))
(insn 26 25 27 7 (set (reg:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:261 -1
     (nil))
(insn 27 26 28 7 (set (reg/f:DI 93)
        (reg:DI 94)) nss_compat/compat-spwd.c:261 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil)))
(insn 28 27 29 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:261 -1
     (nil))
(jump_insn 29 28 30 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) nss_compat/compat-spwd.c:261 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 33)
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:261 -1
     (nil))
(call_insn 32 31 33 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:261 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 33 32 34 9 189 "" [1 uses])
(note 34 33 35 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 39 9 (set (reg:SI 89 [ <retval> ])
        (reg/v:SI 88 [ result ])) nss_compat/compat-spwd.c:263 -1
     (nil))
(insn 39 35 40 9 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) nss_compat/compat-spwd.c:264 -1
     (nil))
(insn 40 39 0 9 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:264 -1
     (nil))

;; Function _nss_compat_endspent (_nss_compat_endspent, funcdef_no=57, decl_uid=11238, cgraph_uid=57, symbol_order=67)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 34.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 91)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:301 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:DI 90)
        (reg:DI 91)) nss_compat/compat-spwd.c:301 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil)))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:301 -1
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 12)
            (pc))) nss_compat/compat-spwd.c:301 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 12)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:301 -1
     (nil))
(call_insn 11 10 12 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:301 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 12 11 13 5 199 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg/f:DI 87 [ D.12558 ])
        (mem/f/c:DI (symbol_ref:DI ("nss_endspent") [flags 0x2]  <var_decl 0x2aefb826a900 nss_endspent>) [3 nss_endspent+0 S8 A64])) nss_compat/compat-spwd.c:303 -1
     (nil))
(insn 15 14 16 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.12558 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:303 -1
     (nil))
(jump_insn 16 15 17 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) nss_compat/compat-spwd.c:303 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 19)
(note 17 16 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 18 17 19 6 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 87 [ D.12558 ]) [0 *_6 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:304 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (nil))
(code_label 19 18 20 7 200 "" [1 uses])
(note 20 19 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:306 -1
     (nil))
(call_insn 22 21 23 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_endspent") [flags 0x3]  <function_decl 0x2aefb831b438 internal_endspent>) [0 internal_endspent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:306 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_endspent") [flags 0x3]  <function_decl 0x2aefb831b438 internal_endspent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 7 (set (reg/v:SI 88 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:306 -1
     (nil))
(insn 24 23 25 7 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:308 -1
     (nil))
(insn 25 24 26 7 (set (reg/f:DI 92)
        (reg:DI 93)) nss_compat/compat-spwd.c:308 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil)))
(insn 26 25 27 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:308 -1
     (nil))
(jump_insn 27 26 28 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) nss_compat/compat-spwd.c:308 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 31)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 8 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:308 -1
     (nil))
(call_insn 30 29 31 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:308 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 31 30 32 9 201 "" [1 uses])
(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 37 9 (set (reg:SI 89 [ <retval> ])
        (reg/v:SI 88 [ result ])) nss_compat/compat-spwd.c:310 -1
     (nil))
(insn 37 33 38 9 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) nss_compat/compat-spwd.c:311 -1
     (nil))
(insn 38 37 0 9 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:311 -1
     (nil))

;; Function _nss_compat_getspent_r (_nss_compat_getspent_r, funcdef_no=63, decl_uid=11243, cgraph_uid=63, symbol_order=73)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 14 failed.
Forwarding edge 10->11 to 17 failed.
Removing jump 101.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 14 failed.
Forwarding edge 10->11 to 17 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 93 [ pwd ])
        (reg:DI 5 di [ pwd ])) nss_compat/compat-spwd.c:651 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ buffer ])
        (reg:DI 4 si [ buffer ])) nss_compat/compat-spwd.c:651 -1
     (nil))
(insn 4 3 5 2 (set (reg/v:DI 95 [ buflen ])
        (reg:DI 1 dx [ buflen ])) nss_compat/compat-spwd.c:651 -1
     (nil))
(insn 5 4 6 2 (set (reg/v/f:DI 96 [ errnop ])
        (reg:DI 2 cx [ errnop ])) nss_compat/compat-spwd.c:651 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:654 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 97)
        (reg:DI 98)) nss_compat/compat-spwd.c:654 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil)))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:654 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) nss_compat/compat-spwd.c:654 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 16)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:654 -1
     (nil))
(call_insn 15 14 16 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:654 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 16 15 17 5 213 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:657 -1
     (nil))
(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) nss_compat/compat-spwd.c:657 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 22)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 21 20 22 6 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:658 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 22 21 23 7 214 "" [1 uses])
(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (set (reg/f:DI 99)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:660 -1
     (nil))
(insn 25 24 26 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 99)
                    (const_int 8 [0x8])) [3 ext_ent.stream+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:660 -1
     (nil))
(jump_insn 26 25 41 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) nss_compat/compat-spwd.c:660 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 34)
(code_label 41 26 27 8 218 "" [1 uses])
(note 27 41 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 8 (set (reg/f:DI 100)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:627 -1
     (nil))
(insn 29 28 30 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (reg/f:DI 100) [8 ext_ent.netgroup+0 S1 A256])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:627 -1
     (nil))
(jump_insn 30 29 33 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) nss_compat/compat-spwd.c:627 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 47)
(note 33 30 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 31 33 32 9 (set (pc)
        (label_ref 67)) nss_compat/compat-spwd.c:627 -1
     (nil)
 -> 67)
(barrier 32 31 34)
(code_label 34 32 35 10 215 "" [1 uses])
(note 35 34 36 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 10 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:661 -1
     (nil))
(insn 37 36 38 10 (set (reg:SI 4 si)
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:661 -1
     (nil))
(insn 38 37 39 10 (set (reg:DI 5 di)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:661 -1
     (nil))
(call_insn 39 38 40 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>) [0 internal_setspent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:661 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 40 39 42 10 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:661 -1
     (nil))
(insn 42 40 43 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:663 -1
     (nil))
(jump_insn 43 42 46 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) nss_compat/compat-spwd.c:663 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 41)
(note 46 43 44 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 44 46 45 11 (set (pc)
        (label_ref 89)) -1
     (nil)
 -> 89)
(barrier 45 44 47)
(code_label 47 45 48 12 216 "" [1 uses])
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 12 (set (reg:DI 37 r8)
        (reg/v/f:DI 96 [ errnop ])) nss_compat/compat-spwd.c:633 -1
     (nil))
(insn 50 49 51 12 (set (reg:DI 2 cx)
        (reg/v:DI 95 [ buflen ])) nss_compat/compat-spwd.c:633 -1
     (nil))
(insn 51 50 52 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 94 [ buffer ])) nss_compat/compat-spwd.c:633 -1
     (nil))
(insn 52 51 53 12 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-spwd.c:633 -1
     (nil))
(insn 53 52 54 12 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ pwd ])) nss_compat/compat-spwd.c:633 -1
     (nil))
(call_insn 54 53 55 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2aefb8434a20 getspent_next_nss_netgr.constprop>) [0 getspent_next_nss_netgr.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:633 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_nss_netgr.constprop.7") [flags 0x3]  <function_decl 0x2aefb8434a20 getspent_next_nss_netgr.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 55 54 56 12 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:633 -1
     (nil))
(insn 56 55 57 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:636 -1
     (nil))
(jump_insn 57 56 58 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 89)
            (pc))) nss_compat/compat-spwd.c:636 -1
     (int_list:REG_BR_PROB 8629 (nil))
 -> 89)
(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 96 [ errnop ])) nss_compat/compat-spwd.c:637 -1
     (nil))
(insn 60 59 61 13 (set (reg:DI 1 dx)
        (reg/v:DI 95 [ buflen ])) nss_compat/compat-spwd.c:637 -1
     (nil))
(insn 61 60 62 13 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ buffer ])) nss_compat/compat-spwd.c:637 -1
     (nil))
(insn 62 61 63 13 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ pwd ])) nss_compat/compat-spwd.c:637 -1
     (nil))
(call_insn 63 62 64 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_file.constprop.5") [flags 0x3]  <function_decl 0x2aefb8434000 getspent_next_file.constprop>) [0 getspent_next_file.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:637 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_file.constprop.5") [flags 0x3]  <function_decl 0x2aefb8434000 getspent_next_file.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 64 63 65 13 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:637 -1
     (nil))
(jump_insn 65 64 66 13 (set (pc)
        (label_ref 89)) nss_compat/compat-spwd.c:637 -1
     (nil)
 -> 89)
(barrier 66 65 67)
(code_label 67 66 68 14 217 "" [1 uses])
(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 14 (set (reg/f:DI 101)
        (symbol_ref:DI ("ext_ent") [flags 0x2]  <var_decl 0x2aefb826aab0 ext_ent>)) nss_compat/compat-spwd.c:641 -1
     (nil))
(insn 70 69 71 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 101)
                    (const_int 1 [0x1])) [8 ext_ent.files+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:641 -1
     (nil))
(jump_insn 71 70 72 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) nss_compat/compat-spwd.c:641 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 81)
(note 72 71 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 96 [ errnop ])) nss_compat/compat-spwd.c:642 -1
     (nil))
(insn 74 73 75 15 (set (reg:DI 1 dx)
        (reg/v:DI 95 [ buflen ])) nss_compat/compat-spwd.c:642 -1
     (nil))
(insn 75 74 76 15 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ buffer ])) nss_compat/compat-spwd.c:642 -1
     (nil))
(insn 76 75 77 15 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ pwd ])) nss_compat/compat-spwd.c:642 -1
     (nil))
(call_insn 77 76 78 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_file.constprop.5") [flags 0x3]  <function_decl 0x2aefb8434000 getspent_next_file.constprop>) [0 getspent_next_file.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:642 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_file.constprop.5") [flags 0x3]  <function_decl 0x2aefb8434000 getspent_next_file.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 78 77 79 15 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:642 -1
     (nil))
(jump_insn 79 78 80 15 (set (pc)
        (label_ref 89)) nss_compat/compat-spwd.c:642 -1
     (nil)
 -> 89)
(barrier 80 79 81)
(code_label 81 80 82 16 220 "" [1 uses])
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 16 (set (reg:DI 2 cx)
        (reg/v/f:DI 96 [ errnop ])) nss_compat/compat-spwd.c:644 -1
     (nil))
(insn 84 83 85 16 (set (reg:DI 1 dx)
        (reg/v:DI 95 [ buflen ])) nss_compat/compat-spwd.c:644 -1
     (nil))
(insn 85 84 86 16 (set (reg:DI 4 si)
        (reg/v/f:DI 94 [ buffer ])) nss_compat/compat-spwd.c:644 -1
     (nil))
(insn 86 85 87 16 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ pwd ])) nss_compat/compat-spwd.c:644 -1
     (nil))
(call_insn 87 86 88 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspent_next_nss.constprop.6") [flags 0x3]  <function_decl 0x2aefb84346c0 getspent_next_nss.constprop>) [0 getspent_next_nss.constprop S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:644 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspent_next_nss.constprop.6") [flags 0x3]  <function_decl 0x2aefb84346c0 getspent_next_nss.constprop>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 88 87 89 16 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:644 -1
     (nil))
(code_label 89 88 90 17 219 "" [4 uses])
(note 90 89 91 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 17 (set (reg:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:666 -1
     (nil))
(insn 92 91 93 17 (set (reg/f:DI 102)
        (reg:DI 103)) nss_compat/compat-spwd.c:666 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil)))
(insn 93 92 94 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 102)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:666 -1
     (nil))
(jump_insn 94 93 95 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) nss_compat/compat-spwd.c:666 -1
     (int_list:REG_BR_PROB 2165 (nil))
 -> 98)
(note 95 94 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 18 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:666 -1
     (nil))
(call_insn 97 96 98 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:666 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 98 97 99 19 221 "" [1 uses])
(note 99 98 100 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 104 19 (set (reg:SI 92 [ <retval> ])
        (reg/v:SI 87 [ result ])) nss_compat/compat-spwd.c:668 -1
     (nil))
(insn 104 100 105 19 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) nss_compat/compat-spwd.c:669 -1
     (nil))
(insn 105 104 0 19 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:669 -1
     (nil))

;; Function _nss_compat_getspnam_r (_nss_compat_getspnam_r, funcdef_no=65, decl_uid=11249, cgraph_uid=65, symbol_order=75)

Partition 0: size 192 align 16
	ent
Partition 1: size 16 align 16
	pos

;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; Generating RTL for gimple basic block 24

;; Generating RTL for gimple basic block 25

;; Generating RTL for gimple basic block 26

;; Generating RTL for gimple basic block 27

;; Generating RTL for gimple basic block 28

;; Generating RTL for gimple basic block 29

;; Generating RTL for gimple basic block 30

;; Generating RTL for gimple basic block 31

;; Generating RTL for gimple basic block 32

;; Generating RTL for gimple basic block 33

;; Generating RTL for gimple basic block 34

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; Generating RTL for gimple basic block 37

;; Generating RTL for gimple basic block 38

;; Generating RTL for gimple basic block 39

;; Generating RTL for gimple basic block 40

;; Generating RTL for gimple basic block 41

;; Generating RTL for gimple basic block 42

;; Generating RTL for gimple basic block 43

;; Generating RTL for gimple basic block 44

;; Generating RTL for gimple basic block 45

;; Generating RTL for gimple basic block 46

;; Generating RTL for gimple basic block 47

;; Generating RTL for gimple basic block 48

;; Generating RTL for gimple basic block 49

;; Generating RTL for gimple basic block 50

;; Generating RTL for gimple basic block 51

;; Generating RTL for gimple basic block 52
Edge 2->52 redirected to 62


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 10->11 to 60 failed.
Redirecting jump 71 from 57 to 60.
Forwarding edge 18->19 to 22 failed.
Edge 32->57 redirected to 60
Forwarding edge 32->33 to 12 failed.
Forwarding edge 32->33 to 12 failed.
Redirecting jump 178 from 58 to 12.
Edge 36->56 redirected to 12
Forwarding edge 37->38 to 12 failed.
Redirecting jump 202 from 58 to 12.
Edge 39->56 redirected to 12
Edge 41->56 redirected to 12
Edge 42->58 redirected to 12
Edge 43->58 redirected to 12
Redirecting jump 238 from 57 to 60.
Edge 45->56 redirected to 12
Forwarding edge 46->47 to 12 failed.
Redirecting jump 255 from 58 to 12.
Edge 49->56 redirected to 12
Edge 50->57 redirected to 60
Redirecting jump 286 from 57 to 60.
Edge 52->56 redirected to 12
Edge 53->59 redirected to 60
Forwarding edge 54->55 to 60 failed.
Redirecting jump 307 from 57 to 60.
deleting block 56
deleting block 57
deleting block 58
deleting block 59
Removing jump 307.
Removing jump 333.
Merging block 63 into block 62...
Merged blocks 62 and 63.
Merged 62 and 63 without moving.


try_optimize_cfg iteration 2

Forwarding edge 10->11 to 60 failed.
Forwarding edge 18->19 to 22 failed.
Forwarding edge 32->33 to 12 failed.
Forwarding edge 37->38 to 12 failed.
Forwarding edge 46->47 to 12 failed.
Forwarding edge 54->55 to 60 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 13 NOTE_INSN_DELETED)
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 138 [ name ])
        (reg:DI 5 di [ name ])) nss_compat/compat-spwd.c:818 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 139 [ pwd ])
        (reg:DI 4 si [ pwd ])) nss_compat/compat-spwd.c:818 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 140 [ buffer ])
        (reg:DI 1 dx [ buffer ])) nss_compat/compat-spwd.c:818 -1
     (nil))
(insn 5 4 6 2 (set (reg/v:DI 141 [ buflen ])
        (reg:DI 2 cx [ buflen ])) nss_compat/compat-spwd.c:818 -1
     (nil))
(insn 6 5 7 2 (set (reg/v/f:DI 142 [ errnop ])
        (reg:DI 37 r8 [ errnop ])) nss_compat/compat-spwd.c:818 -1
     (nil))
(note 7 6 15 2 NOTE_INSN_FUNCTION_BEG)
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 143)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 144)
        (const_int 0 [0])) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 145)
        (const_int 24 [0x18])) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 145)
                (const_int 0 [0]))
            (set (reg/f:DI 143)
                (plus:DI (ashift:DI (reg:DI 145)
                        (const_int 3 [0x3]))
                    (reg/f:DI 143)))
            (set (mem/c:BLK (reg/f:DI 143) [7 ent+0 S192 A128])
                (const_int 0 [0]))
            (use (reg:DI 144))
            (use (reg:DI 145))
        ]) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -191 [0xffffffffffffff41])) [8 ent.files+0 S1 A8])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -188 [0xffffffffffffff44])) [9 ent.setent_status+0 S4 A32])
        (const_int 1 [0x1])) nss_compat/compat-spwd.c:820 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 147)
        (mem:QI (reg/v/f:DI 138 [ name ]) [0 *name_12(D)+0 S1 A8])) nss_compat/compat-spwd.c:823 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:QI 146 [ D.12608 ])
                (plus:QI (reg:QI 147)
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:823 -1
     (expr_list:REG_EQUAL (plus:QI (mem:QI (reg/v/f:DI 138 [ name ]) [0 *name_12(D)+0 S1 A8])
            (const_int -43 [0xffffffffffffffd5]))
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg:QI 148 [ D.12608 ])
                (and:QI (reg:QI 146 [ D.12608 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:823 -1
     (nil))
(insn 24 23 25 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 148 [ D.12608 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:823 -1
     (nil))
(jump_insn 25 24 26 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 342)
            (pc))) nss_compat/compat-spwd.c:823 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 342)
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg:DI 150)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:826 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 149)
        (reg:DI 150)) nss_compat/compat-spwd.c:826 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil)))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 149)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:826 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) nss_compat/compat-spwd.c:826 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 34)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:826 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>) [0 __pthread_mutex_lock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:826 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_lock") [flags 0x41]  <function_decl 0x2aefb8268bd0 __pthread_mutex_lock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 34 33 35 6 239 "" [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("ni") [flags 0x2]  <var_decl 0x2aefb826a6c0 ni>) [3 ni+0 S8 A64])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:828 -1
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) nss_compat/compat-spwd.c:828 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 40)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 39 38 40 7 (call (mem:QI (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>) [0 init_nss_interface S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:829 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("init_nss_interface") [flags 0x3]  <function_decl 0x2aefb830da20 init_nss_interface>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(code_label 40 39 41 8 240 "" [1 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 8 (set (reg:DI 152)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
                    ] UNSPEC_GOTPCREL)) [19  S8 A8])) nss_compat/compat-spwd.c:831 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 151)
        (reg:DI 152)) nss_compat/compat-spwd.c:831 -1
     (expr_list:REG_EQUAL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil)))
(insn 44 43 45 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:831 -1
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) nss_compat/compat-spwd.c:831 -1
     (int_list:REG_BR_PROB 3017 (nil))
 -> 49)
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:DI 5 di)
        (symbol_ref:DI ("lock") [flags 0x2]  <var_decl 0x2aefb826ac60 lock>)) nss_compat/compat-spwd.c:831 -1
     (nil))
(call_insn 48 47 49 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>) [0 __pthread_mutex_unlock S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:831 -1
     (expr_list:REG_CALL_DECL (symbol_ref/i:DI ("__pthread_mutex_unlock") [flags 0x41]  <function_decl 0x2aefb8268ca8 __pthread_mutex_unlock>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(code_label 49 48 50 10 241 "" [1 uses])
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:833 -1
     (nil))
(insn 52 51 53 10 (set (reg:SI 1 dx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:833 -1
     (nil))
(insn 53 52 54 10 (set (reg:SI 4 si)
        (const_int 0 [0])) nss_compat/compat-spwd.c:833 -1
     (nil))
(insn 54 53 55 10 (set (reg:DI 5 di)
        (reg:DI 153)) nss_compat/compat-spwd.c:833 -1
     (nil))
(call_insn 55 54 56 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>) [0 internal_setspent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:833 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_setspent") [flags 0x3]  <function_decl 0x2aefb831b0d8 internal_setspent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 56 55 57 10 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:833 -1
     (nil))
(insn 57 56 58 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:835 -1
     (nil))
(jump_insn 58 57 61 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) nss_compat/compat-spwd.c:835 -1
     (int_list:REG_BR_PROB 1371 (nil))
 -> 63)
(note 61 58 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 61 60 11 (set (pc)
        (label_ref 325)) -1
     (nil)
 -> 325)
(barrier 60 59 312)
(code_label 312 60 62 12 264 "" [11 uses])
(note 62 312 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(code_label 63 62 64 13 242 "" [1 uses])
(note 64 63 153 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(code_label 153 64 65 14 254 "" [1 uses])
(note 65 153 66 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 14 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 141 [ buflen ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:688 -1
     (nil))
(jump_insn 67 66 68 14 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) nss_compat/compat-spwd.c:688 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 73)
(code_label 68 67 69 15 245 ("erange") [1 uses])
(note 69 68 70 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 8 15 (set (mem:SI (reg/v/f:DI 142 [ errnop ]) [2 *errnop_26(D)+0 S4 A32])
        (const_int 34 [0x22])) nss_compat/compat-spwd.c:691 -1
     (nil))
(insn 8 70 71 15 (set (reg/v:SI 87 [ result ])
        (const_int -2 [0xfffffffffffffffe])) nss_compat/compat-spwd.c:692 -1
     (nil))
(jump_insn 71 8 72 15 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-spwd.c:691 654 {jump}
     (nil)
 -> 325)
(barrier 72 71 73)
(code_label 73 72 74 16 244 "" [1 uses])
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 16 (parallel [
            (set (reg:DI 154 [ D.12599 ])
                (plus:DI (reg/v:DI 141 [ buflen ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 76 75 77 16 (parallel [
            (set (reg/f:DI 132 [ D.12606 ])
                (plus:DI (reg/v/f:DI 140 [ buffer ])
                    (reg:DI 154 [ D.12599 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 77 76 136 16 (set (reg:SI 125 [ D.12601 ])
        (subreg:SI (reg/v:DI 141 [ buflen ]) 0)) -1
     (nil))
(code_label 136 77 78 17 253 "" [2 uses])
(note 78 136 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 17 (parallel [
            (set (reg:DI 155)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:695 -1
     (nil))
(insn 80 79 81 17 (set (reg:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [3 ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:695 -1
     (nil))
(insn 81 80 82 17 (set (reg:DI 4 si)
        (reg:DI 155)) nss_compat/compat-spwd.c:695 -1
     (nil))
(insn 82 81 83 17 (set (reg:DI 5 di)
        (reg:DI 156)) nss_compat/compat-spwd.c:695 -1
     (nil))
(call_insn 83 82 84 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2aefb81e8510 fgetpos>) [0 fgetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:695 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgetpos") [flags 0x41]  <function_decl 0x2aefb81e8510 fgetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 84 83 85 17 (set (mem:QI (reg/f:DI 132 [ D.12606 ]) [0 *_131+0 S1 A8])
        (const_int -1 [0xffffffffffffffff])) nss_compat/compat-spwd.c:696 -1
     (nil))
(insn 85 84 86 17 (set (reg:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [3 ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:697 -1
     (nil))
(insn 86 85 87 17 (set (reg:DI 1 dx)
        (reg:DI 157)) nss_compat/compat-spwd.c:697 -1
     (nil))
(insn 87 86 88 17 (set (reg:SI 4 si)
        (reg:SI 125 [ D.12601 ])) nss_compat/compat-spwd.c:697 -1
     (nil))
(insn 88 87 89 17 (set (reg:DI 5 di)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-spwd.c:697 -1
     (nil))
(call_insn 89 88 90 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2aefb81dc5e8 fgets_unlocked>) [0 fgets_unlocked S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:697 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fgets_unlocked") [flags 0x41]  <function_decl 0x2aefb81dc5e8 fgets_unlocked>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 90 89 91 17 (set (reg/v/f:DI 98 [ p ])
        (reg:DI 0 ax)) nss_compat/compat-spwd.c:697 -1
     (nil))
(insn 91 90 92 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ p ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:698 -1
     (nil))
(jump_insn 92 91 93 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 102)
            (pc))) nss_compat/compat-spwd.c:698 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 102)
(note 93 92 94 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 18 (set (reg/f:DI 94 [ D.12600 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [3 ent.stream+0 S8 A64])) nss_compat/compat-spwd.c:698 -1
     (nil))
(insn 95 94 96 18 (set (reg:SI 159)
        (mem:SI (reg/f:DI 94 [ D.12600 ]) [2 _40->_flags+0 S4 A64])) nss_compat/compat-spwd.c:698 -1
     (nil))
(insn 96 95 97 18 (parallel [
            (set (reg:SI 158 [ D.12601 ])
                (and:SI (reg:SI 159)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:698 -1
     (expr_list:REG_EQUAL (and:SI (mem:SI (reg/f:DI 94 [ D.12600 ]) [2 _40->_flags+0 S4 A64])
            (const_int 16 [0x10]))
        (nil)))
(insn 97 96 98 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 158 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:698 -1
     (nil))
(jump_insn 98 97 101 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-spwd.c:698 -1
     (int_list:REG_BR_PROB 200 (nil))
 -> 284)
(note 101 98 99 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 99 101 100 19 (set (pc)
        (label_ref 108)) nss_compat/compat-spwd.c:698 -1
     (nil)
 -> 108)
(barrier 100 99 102)
(code_label 102 100 103 20 247 "" [1 uses])
(note 103 102 104 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg/f:DI 132 [ D.12606 ]) [0 *_131+0 S1 A8])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:701 -1
     (nil))
(jump_insn 105 104 106 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 116)
            (pc))) nss_compat/compat-spwd.c:701 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 116)
(note 106 105 107 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 21 (set (reg/f:DI 94 [ D.12600 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [3 ent.stream+0 S8 A64])) -1
     (nil))
(code_label 108 107 109 22 249 ("erange_reset") [2 uses])
(note 109 108 110 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 22 (parallel [
            (set (reg:DI 160)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -208 [0xffffffffffffff30])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:704 -1
     (nil))
(insn 111 110 112 22 (set (reg:DI 4 si)
        (reg:DI 160)) nss_compat/compat-spwd.c:704 -1
     (nil))
(insn 112 111 113 22 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.12600 ])) nss_compat/compat-spwd.c:704 -1
     (nil))
(call_insn 113 112 114 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>) [0 fsetpos S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:704 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fsetpos") [flags 0x41]  <function_decl 0x2aefb81e85e8 fsetpos>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(jump_insn 114 113 115 22 (set (pc)
        (label_ref 68)) nss_compat/compat-spwd.c:704 -1
     (nil)
 -> 68)
(barrier 115 114 116)
(code_label 116 115 117 23 250 "" [1 uses])
(note 117 116 118 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 23 (set (mem:QI (reg/f:DI 132 [ D.12606 ]) [0 *_131+0 S1 A8])
        (const_int 0 [0])) nss_compat/compat-spwd.c:709 -1
     (nil))
(call_insn/u 119 118 120 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aefb7dc1288 __ctype_b_loc>) [0 __ctype_b_loc S1 A8])
            (const_int 0 [0]))) -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__ctype_b_loc") [flags 0x41]  <function_decl 0x2aefb7dc1288 __ctype_b_loc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 120 119 121 23 (set (reg/f:DI 131 [ D.12609 ])
        (reg:DI 0 ax)) -1
     (nil))
(insn 121 120 122 23 (set (reg/f:DI 128 [ D.12603 ])
        (mem/f:DI (reg/f:DI 131 [ D.12609 ]) [3 *_130+0 S8 A64])) -1
     (nil))
(jump_insn 122 121 123 23 (set (pc)
        (label_ref 126)) -1
     (nil)
 -> 126)
(barrier 123 122 129)
(code_label 129 123 124 24 252 "" [1 uses])
(note 124 129 125 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 24 (parallel [
            (set (reg/v/f:DI 98 [ p ])
                (plus:DI (reg/v/f:DI 98 [ p ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:713 -1
     (nil))
(code_label 126 125 127 25 251 "" [1 uses])
(note 127 126 128 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 130 25 (set (reg:QI 99 [ D.12597 ])
        (mem:QI (reg/v/f:DI 98 [ p ]) [0 MEM[base: p_45, offset: 0B]+0 S1 A8])) nss_compat/compat-spwd.c:712 -1
     (nil))
(insn 130 128 131 25 (set (reg:DI 161 [ D.12602 ])
        (sign_extend:DI (reg:QI 99 [ D.12597 ]))) nss_compat/compat-spwd.c:712 -1
     (nil))
(insn 131 130 132 25 (set (reg:HI 163)
        (mem:HI (plus:DI (mult:DI (reg:DI 161 [ D.12602 ])
                    (const_int 2 [0x2]))
                (reg/f:DI 128 [ D.12603 ])) [5 *_52+0 S2 A16])) nss_compat/compat-spwd.c:712 -1
     (nil))
(insn 132 131 133 25 (parallel [
            (set (reg:HI 162 [ D.12604 ])
                (and:HI (reg:HI 163)
                    (const_int 8192 [0x2000])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:712 -1
     (expr_list:REG_EQUAL (and:HI (mem:HI (plus:DI (mult:DI (reg:DI 161 [ D.12602 ])
                        (const_int 2 [0x2]))
                    (reg/f:DI 128 [ D.12603 ])) [5 *_52+0 S2 A16])
            (const_int 8192 [0x2000]))
        (nil)))
(insn 133 132 134 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 162 [ D.12604 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:712 -1
     (nil))
(jump_insn 134 133 135 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) nss_compat/compat-spwd.c:712 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 129)
(note 135 134 137 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 137 135 138 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.12597 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(insn 138 137 139 26 (set (reg:QI 165 [ D.12605 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(insn 139 138 140 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 165 [ D.12605 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(jump_insn 140 139 343 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-spwd.c:719 -1
     (int_list:REG_BR_PROB 4900 (nil))
 -> 136)
(note 343 140 141 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 141 343 142 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ D.12597 ])
            (const_int 35 [0x23]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(insn 142 141 143 27 (set (reg:QI 167 [ D.12605 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(insn 143 142 144 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 167 [ D.12605 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:719 -1
     (nil))
(jump_insn 144 143 145 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 136)
            (pc))) nss_compat/compat-spwd.c:719 -1
     (int_list:REG_BR_PROB 9608 (nil))
 -> 136)
(note 145 144 146 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 28 (set (reg:DI 37 r8)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-spwd.c:715 -1
     (nil))
(insn 147 146 148 28 (set (reg:DI 2 cx)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-spwd.c:715 -1
     (nil))
(insn 148 147 149 28 (set (reg:DI 1 dx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-spwd.c:715 -1
     (nil))
(insn 149 148 150 28 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-spwd.c:715 -1
     (nil))
(insn 150 149 151 28 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ p ])) nss_compat/compat-spwd.c:715 -1
     (nil))
(call_insn 151 150 152 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_nss_files_parse_spent") [flags 0x41]  <function_decl 0x2aefb82fd000 _nss_files_parse_spent>) [0 _nss_files_parse_spent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:715 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_nss_files_parse_spent") [flags 0x41]  <function_decl 0x2aefb82fd000 _nss_files_parse_spent>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 152 151 154 28 (set (reg/v:SI 108 [ parse_res ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:715 -1
     (nil))
(insn 154 152 155 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 108 [ parse_res ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:715 -1
     (nil))
(jump_insn 155 154 156 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) nss_compat/compat-spwd.c:715 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 153)
(note 156 155 157 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 108 [ parse_res ])
            (const_int -1 [0xffffffffffffffff]))) nss_compat/compat-spwd.c:721 -1
     (nil))
(jump_insn 158 157 159 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) nss_compat/compat-spwd.c:721 -1
     (int_list:REG_BR_PROB 9000 (nil))
 -> 163)
(note 159 158 160 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 30 (set (reg/f:DI 94 [ D.12600 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -184 [0xffffffffffffff48])) [3 ent.stream+0 S8 A64])) -1
     (nil))
(jump_insn 161 160 162 30 (set (pc)
        (label_ref 108)) -1
     (nil)
 -> 108)
(barrier 162 161 163)
(code_label 163 162 164 31 255 "" [1 uses])
(note 164 163 165 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 166 31 (set (reg/f:DI 109 [ D.12606 ])
        (mem/f:DI (reg/v/f:DI 139 [ pwd ]) [3 pwd_23(D)->sp_namp+0 S8 A64])) nss_compat/compat-spwd.c:726 -1
     (nil))
(insn 166 165 167 31 (set (reg:QI 110 [ D.12597 ])
        (mem:QI (reg/f:DI 109 [ D.12606 ]) [0 *_62+0 S1 A8])) nss_compat/compat-spwd.c:726 -1
     (nil))
(insn 167 166 168 31 (parallel [
            (set (reg:QI 168 [ D.12608 ])
                (plus:QI (reg:QI 110 [ D.12597 ])
                    (const_int -43 [0xffffffffffffffd5])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:726 -1
     (nil))
(insn 168 167 169 31 (parallel [
            (set (reg:QI 169 [ D.12608 ])
                (and:QI (reg:QI 168 [ D.12608 ])
                    (const_int -3 [0xfffffffffffffffd])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:726 -1
     (nil))
(insn 169 168 170 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 169 [ D.12608 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:726 -1
     (nil))
(jump_insn 170 169 171 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 181)
            (pc))) nss_compat/compat-spwd.c:726 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 181)
(note 171 170 172 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 32 (set (reg:DI 4 si)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:728 -1
     (nil))
(insn 173 172 174 32 (set (reg:DI 5 di)
        (reg/f:DI 109 [ D.12606 ])) nss_compat/compat-spwd.c:728 -1
     (nil))
(call_insn/i 174 173 175 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:728 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 175 174 176 32 (set (reg:SI 111 [ D.12601 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:728 -1
     (nil))
(insn 176 175 177 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:728 -1
     (nil))
(jump_insn 177 176 180 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-spwd.c:728 612 {*jcc_1}
     (int_list:REG_BR_PROB 3900 (nil))
 -> 325)
(note 180 177 178 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(jump_insn 178 180 179 33 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-spwd.c:728 654 {jump}
     (nil)
 -> 312)
(barrier 179 178 181)
(code_label 181 179 182 34 256 "" [1 uses])
(note 182 181 183 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.12597 ])
            (const_int 45 [0x2d]))) nss_compat/compat-spwd.c:737 -1
     (nil))
(jump_insn 184 183 185 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) nss_compat/compat-spwd.c:737 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 205)
(note 185 184 186 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 35 (set (reg:QI 112 [ D.12597 ])
        (mem:QI (plus:DI (reg/f:DI 109 [ D.12606 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_62 + 1B]+0 S1 A8])) nss_compat/compat-spwd.c:737 -1
     (nil))
(insn 187 186 188 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 112 [ D.12597 ])
            (const_int 64 [0x40]))) nss_compat/compat-spwd.c:737 -1
     (nil))
(jump_insn 188 187 189 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 241)
            (pc))) nss_compat/compat-spwd.c:737 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 241)
(note 189 188 190 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 190 189 191 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_62 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:738 -1
     (nil))
(jump_insn 191 190 192 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:738 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 192 191 193 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 193 192 194 37 (parallel [
            (set (reg:DI 170 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:740 -1
     (nil))
(insn 194 193 195 37 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:740 -1
     (nil))
(insn 195 194 196 37 (set (reg:DI 1 dx)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:740 -1
     (nil))
(insn 196 195 197 37 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-spwd.c:740 -1
     (nil))
(insn 197 196 198 37 (set (reg:DI 5 di)
        (reg:DI 170 [ D.12607 ])) nss_compat/compat-spwd.c:740 -1
     (nil))
(call_insn 198 197 199 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2aefb8111000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:740 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2aefb8111000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 199 198 200 37 (set (reg:SI 115 [ D.12601 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:740 -1
     (nil))
(insn 200 199 201 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:740 -1
     (nil))
(jump_insn 201 200 204 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-spwd.c:740 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 284)
(note 204 201 202 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(jump_insn 202 204 203 38 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-spwd.c:740 654 {jump}
     (nil)
 -> 312)
(barrier 203 202 205)
(code_label 205 203 206 39 258 "" [1 uses])
(note 206 205 207 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ D.12597 ])
            (const_int 43 [0x2b]))) nss_compat/compat-spwd.c:746 -1
     (nil))
(jump_insn 208 207 209 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:746 612 {*jcc_1}
     (int_list:REG_BR_PROB 7200 (nil))
 -> 312)
(note 209 208 210 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 40 (set (reg:QI 116 [ D.12597 ])
        (mem:QI (plus:DI (reg/f:DI 109 [ D.12606 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_62 + 1B]+0 S1 A8])) nss_compat/compat-spwd.c:746 -1
     (nil))
(insn 211 210 212 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.12597 ])
            (const_int 64 [0x40]))) nss_compat/compat-spwd.c:746 -1
     (nil))
(jump_insn 212 211 213 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) nss_compat/compat-spwd.c:746 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 258)
(note 213 212 214 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 2 [0x2])) [0 MEM[(char *)_62 + 2B]+0 S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:747 -1
     (nil))
(jump_insn 215 214 216 41 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:747 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 216 215 217 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 42 (parallel [
            (set (reg:DI 171 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:751 -1
     (nil))
(insn 218 217 219 42 (set (reg:DI 2 cx)
        (const_int 0 [0])) nss_compat/compat-spwd.c:751 -1
     (nil))
(insn 219 218 220 42 (set (reg:DI 1 dx)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:751 -1
     (nil))
(insn 220 219 221 42 (set (reg:DI 4 si)
        (const_int 0 [0])) nss_compat/compat-spwd.c:751 -1
     (nil))
(insn 221 220 222 42 (set (reg:DI 5 di)
        (reg:DI 171 [ D.12607 ])) nss_compat/compat-spwd.c:751 -1
     (nil))
(call_insn 222 221 223 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2aefb8111000 innetgr>) [0 innetgr S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:751 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("innetgr") [flags 0x41]  <function_decl 0x2aefb8111000 innetgr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 223 222 224 42 (set (reg:SI 119 [ D.12601 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:751 -1
     (nil))
(insn 224 223 225 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:751 -1
     (nil))
(jump_insn 225 224 226 42 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:751 612 {*jcc_1}
     (int_list:REG_BR_PROB 7100 (nil))
 -> 312)
(note 226 225 227 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 43 (parallel [
            (set (reg:DI 172)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 228 227 229 43 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 229 228 230 43 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 230 229 231 43 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 231 230 232 43 (set (reg:DI 1 dx)
        (reg:DI 172)) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 232 231 233 43 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 233 232 234 43 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(call_insn 234 233 235 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>) [0 getspnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:753 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 235 234 236 43 (set (reg/v:SI 120 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:753 -1
     (nil))
(insn 236 235 237 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 120 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:756 -1
     (nil))
(jump_insn 237 236 240 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:756 612 {*jcc_1}
     (int_list:REG_BR_PROB 3782 (nil))
 -> 312)
(note 240 237 9 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 9 240 238 44 (set (reg/v:SI 87 [ result ])
        (reg/v:SI 120 [ result ])) nss_compat/compat-spwd.c:753 -1
     (nil))
(jump_insn 238 9 239 44 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-spwd.c:756 654 {jump}
     (nil)
 -> 325)
(barrier 239 238 241)
(code_label 241 239 242 45 259 "" [1 uses])
(note 242 241 243 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 243 242 244 45 (parallel [
            (set (reg:QI 173 [ D.12597 ])
                (and:QI (reg:QI 112 [ D.12597 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:766 -1
     (nil))
(insn 244 243 245 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 173 [ D.12597 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:766 -1
     (nil))
(jump_insn 245 244 246 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:766 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 312)
(note 246 245 247 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 248 46 (parallel [
            (set (reg:DI 174 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:768 -1
     (nil))
(insn 248 247 249 46 (parallel [
            (set (reg:DI 175 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:768 -1
     (nil))
(insn 249 248 250 46 (set (reg:DI 4 si)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:768 -1
     (nil))
(insn 250 249 251 46 (set (reg:DI 5 di)
        (reg:DI 175 [ D.12607 ])) nss_compat/compat-spwd.c:768 -1
     (nil))
(call_insn/i 251 250 252 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:768 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 252 251 253 46 (set (reg:SI 122 [ D.12601 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:768 -1
     (nil))
(insn 253 252 254 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 122 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:768 -1
     (nil))
(jump_insn 254 253 257 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-spwd.c:768 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 284)
(note 257 254 255 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 255 257 256 47 (set (pc)
        (label_ref:DI 312)) nss_compat/compat-spwd.c:768 654 {jump}
     (nil)
 -> 312)
(barrier 256 255 258)
(code_label 258 256 259 48 261 "" [1 uses])
(note 259 258 260 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 48 (parallel [
            (set (reg:QI 176 [ D.12597 ])
                (and:QI (reg:QI 116 [ D.12597 ])
                    (const_int -65 [0xffffffffffffffbf])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:776 -1
     (nil))
(insn 261 260 262 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 176 [ D.12597 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:776 -1
     (nil))
(jump_insn 262 261 263 48 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 288)
            (pc))) nss_compat/compat-spwd.c:776 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 288)
(note 263 262 264 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 49 (parallel [
            (set (reg:DI 177 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:778 -1
     (nil))
(insn 265 264 266 49 (parallel [
            (set (reg:DI 178 [ D.12607 ])
                (plus:DI (reg/f:DI 109 [ D.12606 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:778 -1
     (nil))
(insn 266 265 267 49 (set (reg:DI 4 si)
        (reg:DI 178 [ D.12607 ])) nss_compat/compat-spwd.c:778 -1
     (nil))
(insn 267 266 268 49 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:778 -1
     (nil))
(call_insn/i 268 267 269 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>) [0 __builtin_strcmp S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:778 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcmp") [flags 0x41]  <function_decl 0x2aefb7ce7000 __builtin_strcmp>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 269 268 270 49 (set (reg:SI 124 [ D.12601 ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:778 -1
     (nil))
(insn 270 269 271 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 124 [ D.12601 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:778 -1
     (nil))
(jump_insn 271 270 272 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:778 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 312)
(note 272 271 273 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 50 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 274 273 275 50 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 275 274 276 50 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 276 275 277 50 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 277 276 278 50 (set (reg:DI 1 dx)
        (reg:DI 179)) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 278 277 279 50 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 279 278 280 50 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:782 -1
     (nil))
(call_insn 280 279 281 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>) [0 getspnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:782 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 281 280 282 50 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:782 -1
     (nil))
(insn 282 281 283 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:785 -1
     (nil))
(jump_insn 283 282 284 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-spwd.c:785 612 {*jcc_1}
     (int_list:REG_BR_PROB 8009 (nil))
 -> 325)
(code_label 284 283 285 51 248 "" [4 uses])
(note 285 284 10 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 10 285 286 51 (set (reg/v:SI 87 [ result ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:787 -1
     (nil))
(jump_insn 286 10 287 51 (set (pc)
        (label_ref:DI 325)) nss_compat/compat-spwd.c:785 654 {jump}
     (nil)
 -> 325)
(barrier 287 286 288)
(code_label 288 287 289 52 262 "" [1 uses])
(note 289 288 290 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ D.12597 ])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:794 -1
     (nil))
(jump_insn 291 290 292 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 312)
            (pc))) nss_compat/compat-spwd.c:794 612 {*jcc_1}
     (int_list:REG_BR_PROB 9800 (nil))
 -> 312)
(note 292 291 293 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 53 (parallel [
            (set (reg:DI 180)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 294 293 295 53 (set (reg:DI 38 r9)
        (reg/v/f:DI 142 [ errnop ])) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 295 294 296 53 (set (reg:DI 37 r8)
        (reg/v:DI 141 [ buflen ])) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 296 295 297 53 (set (reg:DI 2 cx)
        (reg/v/f:DI 140 [ buffer ])) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 297 296 298 53 (set (reg:DI 1 dx)
        (reg:DI 180)) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 298 297 299 53 (set (reg:DI 4 si)
        (reg/v/f:DI 139 [ pwd ])) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 299 298 300 53 (set (reg:DI 5 di)
        (reg/v/f:DI 138 [ name ])) nss_compat/compat-spwd.c:798 -1
     (nil))
(call_insn 300 299 301 53 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>) [0 getspnam_plususer S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:798 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("getspnam_plususer") [flags 0x3]  <function_decl 0x2aefb831bbd0 getspnam_plususer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 301 300 302 53 (set (reg/v:SI 87 [ result ])
        (reg:SI 0 ax)) nss_compat/compat-spwd.c:798 -1
     (nil))
(insn 302 301 303 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 1 [0x1]))) nss_compat/compat-spwd.c:801 -1
     (nil))
(jump_insn 303 302 304 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 325)
            (pc))) nss_compat/compat-spwd.c:801 612 {*jcc_1}
     (int_list:REG_BR_PROB 2800 (nil))
 -> 325)
(note 304 303 305 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ result ])
            (const_int 2 [0x2]))) nss_compat/compat-spwd.c:804 -1
     (nil))
(jump_insn 306 305 309 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 284)
            (pc))) nss_compat/compat-spwd.c:804 -1
     (int_list:REG_BR_PROB 1991 (nil))
 -> 284)
(note 309 306 325 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(code_label 325 309 326 60 243 "" [7 uses])
(note 326 325 327 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 60 (parallel [
            (set (reg:DI 181)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -192 [0xffffffffffffff40])))
            (clobber (reg:CC 17 flags))
        ]) nss_compat/compat-spwd.c:838 -1
     (nil))
(insn 328 327 329 60 (set (reg:DI 5 di)
        (reg:DI 181)) nss_compat/compat-spwd.c:838 -1
     (nil))
(call_insn 329 328 12 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("internal_endspent") [flags 0x3]  <function_decl 0x2aefb831b438 internal_endspent>) [0 internal_endspent S1 A8])
            (const_int 0 [0]))) nss_compat/compat-spwd.c:838 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("internal_endspent") [flags 0x3]  <function_decl 0x2aefb831b438 internal_endspent>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 329 339 60 (set (reg:SI 88 [ D.12596 ])
        (reg/v:SI 87 [ result ])) nss_compat/compat-spwd.c:840 -1
     (nil))
(jump_insn 339 12 340 60 (set (pc)
        (label_ref 330)) nss_compat/compat-spwd.c:840 -1
     (nil)
 -> 330)
(barrier 340 339 342)
(code_label 342 340 341 61 265 "" [1 uses])
(note 341 342 11 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 11 341 330 61 (set (reg:SI 88 [ D.12596 ])
        (const_int 0 [0])) nss_compat/compat-spwd.c:824 -1
     (nil))
(code_label 330 11 331 62 238 "" [1 uses])
(note 331 330 332 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 332 331 336 62 (set (reg:SI 137 [ <retval> ])
        (reg:SI 88 [ D.12596 ])) -1
     (nil))
(insn 336 332 337 62 (set (reg/i:SI 0 ax)
        (reg:SI 137 [ <retval> ])) nss_compat/compat-spwd.c:841 -1
     (nil))
(insn 337 336 0 62 (use (reg/i:SI 0 ax)) nss_compat/compat-spwd.c:841 -1
     (nil))
