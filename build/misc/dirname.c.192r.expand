
;; Function dirname (dirname, funcdef_no=9, decl_uid=1834, cgraph_uid=9, symbol_order=12)


;; Generating RTL for gimple basic block 2

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; Generating RTL for gimple basic block 11

;; Generating RTL for gimple basic block 12

;; Generating RTL for gimple basic block 13

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; Generating RTL for gimple basic block 16

;; Generating RTL for gimple basic block 17

;; Generating RTL for gimple basic block 18

;; Generating RTL for gimple basic block 19
Edge 2->18 redirected to 27
Edge 10->18 redirected to 28
Edge 12->17 redirected to 29


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 9->10 to 15 failed.
Forwarding edge 20->21 to 28 failed.
Forwarding edge 28->29 to 24 failed.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 15 failed.
Forwarding edge 20->21 to 28 failed.
Forwarding edge 28->29 to 24 failed.


;;
;; Full RTL generated for this function:
;;
(note 23 0 31 NOTE_INSN_DELETED)
(note 31 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 31 25 2 (set (reg/v/f:DI 124 [ path ])
        (reg:DI 5 di [ path ])) dirname.c:26 -1
     (nil))
(note 25 24 33 2 NOTE_INSN_FUNCTION_BEG)
(insn 33 25 34 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ path ])
            (const_int 0 [0]))) dirname.c:31 -1
     (nil))
(jump_insn 34 33 35 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) dirname.c:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 131)
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) dirname.c:31 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ path ])) dirname.c:31 -1
     (nil))
(call_insn/i 38 37 39 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2b0ad8c73438 strrchr>) [0 __builtin_strrchr S1 A8])
            (const_int 0 [0]))) dirname.c:31 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__GI_strrchr") [flags 0x43]  <function_decl 0x2b0ad8c73438 strrchr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 39 38 40 4 (set (reg/v/f:DI 109 [ last_slash ])
        (reg:DI 0 ax)) dirname.c:31 -1
     (nil))
(insn 40 39 41 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ last_slash ])
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(insn 41 40 42 4 (set (reg:QI 126 [ D.2585 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(insn 42 41 43 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ D.2585 ])
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(jump_insn 43 42 140 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) dirname.c:33 -1
     (int_list:REG_BR_PROB 2058 (nil))
 -> 74)
(note 140 43 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 140 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ path ])
            (reg/v/f:DI 109 [ last_slash ]))) dirname.c:33 -1
     (nil))
(insn 45 44 46 5 (set (reg:QI 128 [ D.2585 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 128 [ D.2585 ])
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 74)
            (pc))) dirname.c:33 -1
     (int_list:REG_BR_PROB 2591 (nil))
 -> 74)
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 109 [ last_slash ])
                    (const_int 1 [0x1])) [0 MEM[(char *)last_slash_10 + 1B]+0 S1 A8])
            (const_int 0 [0]))) dirname.c:33 -1
     (nil))
(jump_insn 50 49 51 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) dirname.c:33 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 81)
(note 51 50 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 51 57 7 (set (reg/v/f:DI 115 [ last_slash ])
        (reg/v/f:DI 109 [ last_slash ])) -1
     (nil))
(code_label 57 26 52 8 6 "" [1 uses])
(note 52 57 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 115 [ last_slash ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: last_slash_43, offset: -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) dirname.c:39 -1
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) dirname.c:39 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 63)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 58 9 (parallel [
            (set (reg/v/f:DI 115 [ last_slash ])
                (plus:DI (reg/v/f:DI 115 [ last_slash ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dirname.c:38 -1
     (nil))
(insn 58 56 59 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ path ])
            (reg/v/f:DI 115 [ last_slash ]))) dirname.c:38 -1
     (nil))
(jump_insn 59 58 62 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) dirname.c:38 -1
     (int_list:REG_BR_PROB 9507 (nil))
 -> 57)
(note 62 59 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 60 62 61 10 (set (pc)
        (label_ref 81)) -1
     (nil)
 -> 81)
(barrier 61 60 63)
(code_label 63 61 64 11 5 "" [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ path ])
            (reg/v/f:DI 115 [ last_slash ]))) dirname.c:43 -1
     (nil))
(jump_insn 66 65 67 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) dirname.c:43 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 81)
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 12 (parallel [
            (set (reg:DI 119 [ D.2588 ])
                (minus:DI (reg/v/f:DI 115 [ last_slash ])
                    (reg/v/f:DI 124 [ path ])))
            (clobber (reg:CC 17 flags))
        ]) dirname.c:44 -1
     (nil))
(insn 69 68 70 12 (set (reg:DI 1 dx)
        (reg:DI 119 [ D.2588 ])) dirname.c:44 -1
     (nil))
(insn 70 69 71 12 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) dirname.c:44 -1
     (nil))
(insn 71 70 72 12 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ path ])) dirname.c:44 -1
     (nil))
(call_insn/i 72 71 73 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__memrchr") [flags 0x41]  <function_decl 0x2b0ad8d68af8 __memrchr>) [0 __memrchr S1 A8])
            (const_int 0 [0]))) dirname.c:44 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__memrchr") [flags 0x41]  <function_decl 0x2b0ad8d68af8 __memrchr>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 73 72 74 12 (set (reg/v/f:DI 109 [ last_slash ])
        (reg:DI 0 ax)) dirname.c:44 -1
     (nil))
(code_label 74 73 75 13 3 "" [2 uses])
(note 75 74 76 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ last_slash ])
            (const_int 0 [0]))) dirname.c:47 -1
     (nil))
(jump_insn 77 76 78 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 135)
            (pc))) dirname.c:47 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 135)
(note 78 77 79 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 109 [ last_slash ])
            (reg/v/f:DI 124 [ path ]))) dirname.c:52 -1
     (nil))
(jump_insn 80 79 81 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) dirname.c:52 -1
     (int_list:REG_BR_PROB 776 (nil))
 -> 115)
(code_label 81 80 82 15 4 "" [3 uses])
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 109 [ last_slash ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[(char *)last_slash_35 + -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) dirname.c:53 -1
     (nil))
(jump_insn 84 83 87 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) dirname.c:53 612 {*jcc_1}
     (int_list:REG_BR_PROB 450 (nil))
 -> 139)
(note 87 84 27 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 27 87 85 16 (set (reg/v/f:DI 121 [ last_slash ])
        (reg/v/f:DI 109 [ last_slash ])) dirname.c:53 -1
     (nil))
(jump_insn 85 27 86 16 (set (pc)
        (label_ref 94)) dirname.c:53 -1
     (nil)
 -> 94)
(barrier 86 85 99)
(code_label 99 86 88 17 11 "" [1 uses])
(note 88 99 89 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 121 [ last_slash ])
                    (const_int -1 [0xffffffffffffffff])) [0 MEM[base: last_slash_25, offset: -1B]+0 S1 A8])
            (const_int 47 [0x2f]))) dirname.c:53 -1
     (nil))
(jump_insn 90 89 93 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) dirname.c:53 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 107)
(note 93 90 91 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 91 93 92 18 (set (pc)
        (label_ref 96)) -1
     (nil)
 -> 96)
(barrier 92 91 94)
(code_label 94 92 95 19 9 "" [1 uses])
(note 95 94 96 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(code_label 96 95 97 20 10 "" [1 uses])
(note 97 96 98 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 100 20 (parallel [
            (set (reg/v/f:DI 121 [ last_slash ])
                (plus:DI (reg/v/f:DI 121 [ last_slash ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) dirname.c:52 -1
     (nil))
(insn 100 98 101 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ path ])
            (reg/v/f:DI 121 [ last_slash ]))) dirname.c:52 -1
     (nil))
(jump_insn 101 100 104 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) dirname.c:52 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 99)
(note 104 101 102 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 104 103 21 (set (pc)
        (label_ref 115)) -1
     (nil)
 -> 115)
(barrier 103 102 118)
(code_label 118 103 105 22 12 "" [1 uses])
(note 105 118 106 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 106 105 136 22 (parallel [
            (set (reg/v/f:DI 121 [ last_slash ])
                (plus:DI (reg/v/f:DI 109 [ last_slash ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dirname.c:64 -1
     (nil))
(jump_insn 136 106 137 22 (set (pc)
        (label_ref 107)) -1
     (nil)
 -> 107)
(barrier 137 136 139)
(code_label 139 137 138 23 15 "" [1 uses])
(note 138 139 28 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 28 138 107 23 (set (reg/v/f:DI 121 [ last_slash ])
        (reg/v/f:DI 109 [ last_slash ])) dirname.c:53 -1
     (nil))
(code_label 107 28 108 24 8 "" [3 uses])
(note 108 107 109 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 128 24 (set (mem:QI (reg/v/f:DI 121 [ last_slash ]) [0 *last_slash_3+0 S1 A8])
        (const_int 0 [0])) dirname.c:71 -1
     (nil))
(jump_insn 128 109 129 24 (set (pc)
        (label_ref 110)) -1
     (nil)
 -> 110)
(barrier 129 128 131)
(code_label 131 129 130 25 13 "" [1 uses])
(note 130 131 30 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 30 130 132 25 (set (reg/v/f:DI 124 [ path ])
        (symbol_ref:DI ("dot.2521") [flags 0x2]  <var_decl 0x2b0ad8d55cf0 dot>)) dirname.c:77 -1
     (nil))
(jump_insn 132 30 133 25 (set (pc)
        (label_ref 110)) -1
     (nil)
 -> 110)
(barrier 133 132 135)
(code_label 135 133 134 26 14 "" [1 uses])
(note 134 135 29 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 29 134 110 26 (set (reg/v/f:DI 124 [ path ])
        (symbol_ref:DI ("dot.2521") [flags 0x2]  <var_decl 0x2b0ad8d55cf0 dot>)) dirname.c:77 -1
     (nil))
(code_label 110 29 111 27 2 "" [2 uses])
(note 111 110 112 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 27 (set (reg:DI 123 [ <retval> ])
        (reg/v/f:DI 124 [ path ])) dirname.c:79 -1
     (nil))
(jump_insn 113 112 114 27 (set (pc)
        (label_ref 124)) dirname.c:79 -1
     (nil)
 -> 124)
(barrier 114 113 115)
(code_label 115 114 116 28 7 "" [2 uses])
(note 116 115 117 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 119 28 (parallel [
            (set (reg/v/f:DI 121 [ last_slash ])
                (plus:DI (reg/v/f:DI 124 [ path ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) dirname.c:63 -1
     (nil))
(insn 119 117 120 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 121 [ last_slash ])
            (reg/v/f:DI 109 [ last_slash ]))) dirname.c:63 -1
     (nil))
(jump_insn 120 119 123 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) dirname.c:63 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 118)
(note 123 120 121 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 121 123 122 29 (set (pc)
        (label_ref 107)) -1
     (nil)
 -> 107)
(barrier 122 121 124)
(code_label 124 122 127 30 1 "" [1 uses])
(note 127 124 125 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 125 127 126 30 (set (reg/i:DI 0 ax)
        (reg:DI 123 [ <retval> ])) dirname.c:80 -1
     (nil))
(insn 126 125 0 30 (use (reg/i:DI 0 ax)) dirname.c:80 -1
     (nil))
